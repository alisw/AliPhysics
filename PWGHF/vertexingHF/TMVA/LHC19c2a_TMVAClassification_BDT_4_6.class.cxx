#include "LHC19c2a_TMVAClassification_BDT_4_6.class.h"

double ReadBDT_LHC19c2a_4_6::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_4_6::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.410869466280946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.116348, 1, 1, 0.727885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266814,-99) , 
5, 0.999524, 0, 0, 0.674094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375586,-99) , 
11, -2.74869, 1, 0, 0.422109,-99) , 
NN(
0, 
0, 
-1, 2.45904, 0, -1, 0.108193,-99) , 
5, 0.999524, 0, 0, 0.37829,-99) , 
9, -948.956, 0, 0, 0.499265,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.322793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.687625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.794077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423295,-99) , 
12, 4.60449, 0, 0, 0.458263,-99) , 
9, -948.87, 0, 0, 0.552819,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.193634,-99) , 
5, 0.999524, 0, 0, 0.507821,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.275955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281397,-99) , 
10, 1.84355, 1, 0, 0.576253,-99) , 
NN(
0, 
0, 
-1, 1.39951, 0, -1, 0.258181,-99) , 
10, -1.8571, 0, 0, 0.555791,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.223091,-99) , 
5, 0.999524, 0, 0, 0.514843,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.24468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023076, 1, 1, 0.624784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.749477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432407,-99) , 
11, 2.91335, 0, 0, 0.465647,-99) , 
9, -949.754, 0, 0, 0.530565,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.250802,-99) , 
5, 0.999524, 0, 0, 0.496794,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.184143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.7076, 1, 1, 0.71497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.211497,-99) , 
10, -1.57143, 0, 0, 0.507437,-99) , 
11, -3.10801, 1, 0, 0.533495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257923,-99) , 
11, -2.84559, 1, 0, 0.372439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.150915,-99) , 
12, 0.372144, 1, 0, 0.275364,-99) , 
5, 0.999524, 0, 0, 0.50307,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.209361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.77902, 1, 1, 0.649364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441203,-99) , 
12, 3.95106, 0, 0, 0.471588,-99) , 
11, -2.74869, 1, 0, 0.505454,-99) , 
NN(
0, 
0, 
-1, 0.504745, 1, -1, 0.213678,-99) , 
5, 0.999048, 0, 0, 0.484003,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.199599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324142,-99) , 
10, -1.85714, 0, 0, 0.563355,-99) , 
NN(
0, 
0, 
-1, -0.788194, 1, -1, 0.413155,-99) , 
5, 0.999955, 0, 0, 0.517752,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.232895,-99) , 
5, 0.999048, 0, 0, 0.497249,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.134426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267525,-99) , 
10, -2.02041, 0, 0, 0.521729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215248,-99) , 
10, 2.14284, 1, 0, 0.50987,-99) , 
NN(
0, 
0, 
-1, -0.00480202, 1, -1, 0.249952,-99) , 
5, 0.999048, 0, 0, 0.491699,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.109467);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.78675, 1, 1, 0.680299,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.458734,-99) , 
11, -3.33543, 1, 0, 0.479849,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.115751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.65266, 1, 1, 0.665272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292177,-99) , 
10, -1.28567, 0, 0, 0.486845,-99) , 
11, -3.20228, 1, 0, 0.506268,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.269589,-99) , 
5, 0.999048, 0, 0, 0.489902,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.111306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.84983, 1, 1, 0.651324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260997,-99) , 
10, -1.47619, 0, 0, 0.482645,-99) , 
11, -3.28872, 1, 0, 0.501383,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.29895,-99) , 
10, 1.57143, 1, 0, 0.481423,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.180219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.728196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466774,-99) , 
10, -0.875439, 0, 0, 0.561743,-99) , 
11, -3.79711, 1, 0, 0.626534,-99) , 
NN(
NN(
0, 
0, 
-1, -0.859402, 1, 1, 0.634791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380887,-99) , 
9, -950.098, 0, 0, 0.429475,-99) , 
11, 2.80755, 0, 0, 0.451446,-99) , 
11, -3.19669, 1, 0, 0.471173,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.108945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493292,-99) , 
11, 2.79563, 0, 0, 0.510372,-99) , 
NN(
0, 
0, 
-1, -1.14058, 1, -1, 0.385069,-99) , 
5, 0.999909, 0, 0, 0.484744,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.268593,-99) , 
5, 0.999048, 0, 0, 0.469953,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.112519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370361,-99) , 
5, 0.999909, 0, 0, 0.481755,-99) , 
11, -3.39785, 1, 0, 0.497279,-99) , 
NN(
0, 
0, 
-1, 2.97451, 0, -1, 0.279082,-99) , 
5, 0.999048, 0, 0, 0.482635,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0969515);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.39989, 1, 1, 0.649103,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.460951,-99) , 
11, -3.39785, 1, 0, 0.476809,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.21056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426907,-99) , 
7, 0.00453374, 0, 0, 0.507492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26573,-99) , 
7, 0.0238025, 1, 0, 0.49671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230208,-99) , 
10, 2.14282, 1, 0, 0.486222,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.165366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459334,-99) , 
7, 0.00566589, 0, 0, 0.514807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295313,-99) , 
7, 0.0237968, 1, 0, 0.505085,-99) , 
NN(
0, 
0, 
-1, 0.274257, 1, -1, 0.313275,-99) , 
5, 0.999048, 0, 0, 0.492271,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0832413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.72882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499277,-99) , 
10, -0.926498, 0, 0, 0.575856,-99) , 
6, 0.292942, 1, 0, 0.638646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280335,-99) , 
5, 0.999048, 0, 0, 0.493609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.154571,-99) , 
10, -2.14282, 0, 0, 0.48376,-99) , 
11, -3.19669, 1, 0, 0.501429,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.103113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.708986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.713212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443718,-99) , 
11, -3.74203, 1, 0, 0.552631,-99) , 
12, -1.0903, 0, 0, 0.600585,-99) , 
NN(
0, 
0, 
-1, -1.57139, 0, -1, 0.468342,-99) , 
11, -2.88184, 1, 0, 0.490931,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0983718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48775,-99) , 
11, -2.29681, 1, 0, 0.518638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.243898,-99) , 
10, -2.26527, 0, 0, 0.51109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260358,-99) , 
10, 2.14282, 1, 0, 0.501591,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.101899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324044,-99) , 
7, 0.0238076, 1, 0, 0.522734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252037,-99) , 
10, -2.26519, 0, 0, 0.5153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272766,-99) , 
10, 2.14286, 1, 0, 0.506164,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.109799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342528,-99) , 
7, 0.0238076, 1, 0, 0.525712,-99) , 
NN(
0, 
0, 
-1, -0.845233, 1, -1, 0.412297,-99) , 
5, 0.999864, 0, 0, 0.508297,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.333903,-99) , 
5, 0.999048, 0, 0, 0.497072,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.125613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339299,-99) , 
7, 0.0238076, 1, 0, 0.523047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306131,-99) , 
9, -951.286, 0, 0, 0.391794,-99) , 
10, -1.25851, 0, 0, 0.504027,-99) , 
NN(
0, 
0, 
-1, 2.31972, 1, -1, 0.362245,-99) , 
10, 1.57142, 1, 0, 0.490527,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0921202);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455115,-99) , 
6, -0.675711, 1, 0, 0.578692,-99) , 
NN(
0, 
0, 
-1, 1.44284, 0, -1, 0.473792,-99) , 
12, 2.84699, 0, 0, 0.489941,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.334217,-99) , 
5, 0.999048, 0, 0, 0.4799,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0695692);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.310774, 1, 1, 0.615435,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.474162,-99) , 
11, -3.29181, 1, 0, 0.488181,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0909348);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483365,-99) , 
11, -2.18618, 1, 0, 0.511199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297855,-99) , 
10, -2.14279, 0, 0, 0.504392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314792,-99) , 
5, 0.998571, 0, 0, 0.4965,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0807372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308239,-99) , 
10, 2.26527, 1, 0, 0.517797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317259,-99) , 
10, -2.14286, 0, 0, 0.511507,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.360222,-99) , 
5, 0.999048, 0, 0, 0.501921,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.123584);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.84087, 1, 1, 0.612482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411932,-99) , 
6, 0.305902, 1, 0, 0.50204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294959,-99) , 
9, -951.286, 0, 0, 0.365094,-99) , 
10, -0.999977, 0, 0, 0.482372,-99) , 
11, -3.39856, 1, 0, 0.493257,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.157703);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.858614, 1, 1, 0.593708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481487,-99) , 
6, 0.0422984, 1, 0, 0.523467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351189,-99) , 
9, -948.956, 0, 0, 0.41221,-99) , 
11, -1.36756, 1, 0, 0.47488,-99) , 
11, 3.13386, 0, 0, 0.485414,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0866427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343634,-99) , 
7, 0.0237891, 1, 0, 0.515471,-99) , 
NN(
0, 
0, 
-1, 1.73973, 0, -1, 0.434384,-99) , 
10, -0.795922, 0, 0, 0.496205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309889,-99) , 
10, 2.14285, 1, 0, 0.489584,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0709903);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.84087, 1, 1, 0.612521,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.47161,-99) , 
11, -3.39856, 1, 0, 0.483412,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.121359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459197,-99) , 
11, -3.74395, 1, 0, 0.519762,-99) , 
12, -0.791474, 0, 0, 0.555927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431488,-99) , 
5, 0.999977, 0, 0, 0.487963,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.341993,-99) , 
5, 0.999524, 0, 0, 0.474815,-99) , 
11, -2.71411, 1, 0, 0.49145,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0497145);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.86827, 1, 1, 0.607242,-99) , 
NN(
0, 
0, 
-1, -1.57138, 0, -1, 0.482257,-99) , 
11, -3.43055, 1, 0, 0.492162,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0526014);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57657, 0, 1, 0.584303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363479,-99) , 
5, 0.999048, 0, 0, 0.495305,-99) , 
NN(
0, 
0, 
-1, 1.37521, 0, -1, 0.344197,-99) , 
10, -1.57139, 0, 0, 0.485979,-99) , 
11, -3.26541, 1, 0, 0.495933,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0638691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.686276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41286,-99) , 
3, 3.5599, 0, 0, 0.526594,-99) , 
6, 0.239564, 1, 0, 0.581022,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.480391,-99) , 
11, -3.20228, 1, 0, 0.491567,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0840536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491214,-99) , 
11, -1.99975, 1, 0, 0.519354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313788,-99) , 
3, 1.45158, 0, 0, 0.434218,-99) , 
10, -1.14963, 0, 0, 0.506049,-99) , 
NN(
0, 
0, 
-1, 2.29252, 1, -1, 0.377284,-99) , 
10, 1.85715, 1, 0, 0.498456,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.116837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69419, 0, 1, 0.607073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425298,-99) , 
7, 0.00226689, 0, 0, 0.47249,-99) , 
7, 0.00680066, 0, 0, 0.506902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356614,-99) , 
7, 0.0238024, 1, 0, 0.50066,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0885406);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385362,-99) , 
7, 0.0237968, 1, 0, 0.515942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316851,-99) , 
10, 2.23808, 1, 0, 0.508961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434221,-99) , 
6, -0.0156906, 1, 0, 0.495665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249307,-99) , 
12, 1.42451, 0, 0, 0.346615,-99) , 
8, 1.74533, 0, 0, 0.431801,-99) , 
10, -1, 0, 0, 0.495161,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0554249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.549639, 1, 1, 0.577559,-99) , 
NN(
0, 
0, 
-1, 0.357608, 1, -1, 0.483898,-99) , 
3, 3.66751, 0, 0, 0.493501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343367,-99) , 
5, 0.998571, 0, 0, 0.487594,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.1333);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.863477, 1, 1, 0.587563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486567,-99) , 
6, 0.132569, 1, 0, 0.528946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382768,-99) , 
9, -948.87, 0, 0, 0.427721,-99) , 
11, -1.51883, 1, 0, 0.48276,-99) , 
11, 2.21301, 0, 0, 0.49449,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0815956);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.683904, 1, 1, 0.595298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48444,-99) , 
3, 3.10995, 0, 0, 0.499174,-99) , 
NN(
0, 
0, 
-1, 3.40287, 0, -1, 0.36785,-99) , 
6, 0.462547, 1, 0, 0.487187,-99) , 
3, 3.92552, 0, 0, 0.495034,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0405023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499674,-99) , 
11, 1.28669, 0, 0, 0.511472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357966,-99) , 
10, -2.14282, 0, 0, 0.506977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372849,-99) , 
5, 0.998571, 0, 0, 0.50166,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0901238);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.50453, 0, 1, 0.585195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338682,-99) , 
10, 2.29251, 1, 0, 0.515029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377572,-99) , 
9, -951.286, 0, 0, 0.423994,-99) , 
10, -0.71426, 0, 0, 0.497242,-99) , 
11, -3.19669, 1, 0, 0.507044,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0580839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345259,-99) , 
10, -1.85709, 0, 0, 0.503689,-99) , 
11, -3.53278, 1, 0, 0.51163,-99) , 
NN(
0, 
0, 
-1, -2.40225, 1, -1, 0.443095,-99) , 
0, 0.5019, 1, 0, 0.498268,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0524776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.551772, 1, 1, 0.574814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389602,-99) , 
5, 0.999796, 0, 0, 0.489946,-99) , 
3, 3.66641, 0, 0, 0.498679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371123,-99) , 
5, 0.998572, 0, 0, 0.49354,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0728858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414534,-99) , 
11, -3.81075, 1, 0, 0.509157,-99) , 
12, -1.22401, 0, 0, 0.558782,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.478019,-99) , 
11, -3.0772, 1, 0, 0.488667,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0927721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.63819, 1, 1, 0.528558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441214,-99) , 
11, -3.46978, 1, 0, 0.464119,-99) , 
10, -0.551028, 0, 0, 0.506496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346607,-99) , 
11, -1.25455, 1, 0, 0.408127,-99) , 
6, -0.439146, 1, 0, 0.437752,-99) , 
10, 1.2857, 1, 0, 0.496927,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.037883);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389168,-99) , 
7, 0.0238024, 1, 0, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357894,-99) , 
10, -2.1428, 0, 0, 0.497216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364689,-99) , 
5, 0.998571, 0, 0, 0.491977,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0717975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418486,-99) , 
11, -3.74203, 1, 0, 0.492249,-99) , 
12, -1.0903, 0, 0, 0.536646,-99) , 
NN(
0, 
0, 
-1, -1.85711, 0, -1, 0.478312,-99) , 
11, -2.88184, 1, 0, 0.488058,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0532069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.36867, 0, 1, 0.510304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371622,-99) , 
3, 3.78337, 0, 0, 0.449955,-99) , 
6, 0.403102, 1, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362459,-99) , 
10, -2.14279, 0, 0, 0.495781,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0736373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41446,-99) , 
6, 0.398278, 1, 0, 0.507818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382781,-99) , 
3, 2.4435, 0, 0, 0.452246,-99) , 
5, 0.999932, 0, 0, 0.493602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379424,-99) , 
5, 0.998571, 0, 0, 0.489046,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0662972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491929,-99) , 
6, 0.672158, 1, 0, 0.563242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378595,-99) , 
5, 0.999778, 0, 0, 0.491251,-99) , 
NN(
0, 
0, 
-1, 3.31619, 0, -1, 0.390741,-99) , 
6, 0.371139, 1, 0, 0.478402,-99) , 
3, 3.91115, 0, 0, 0.484768,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0743407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41557,-99) , 
3, 4.28239, 0, 0, 0.484433,-99) , 
6, 0.559915, 1, 0, 0.54862,-99) , 
NN(
0, 
0, 
-1, 0.357608, 1, -1, 0.47148,-99) , 
3, 3.71682, 0, 0, 0.479694,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0425848);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499481,-99) , 
6, 0.679366, 1, 0, 0.566617,-99) , 
NN(
0, 
0, 
-1, 0.462551, 1, -1, 0.486331,-99) , 
3, 3.91133, 0, 0, 0.492231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373873,-99) , 
10, 2.14282, 1, 0, 0.488214,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0908397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142788, 1, 1, 0.561769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497916,-99) , 
6, -0.139078, 1, 0, 0.522874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41085,-99) , 
9, -948.87, 0, 0, 0.4442,-99) , 
11, -1.49921, 1, 0, 0.486654,-99) , 
11, 2.91546, 0, 0, 0.493758,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.114086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69527, 0, 1, 0.609548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461038,-99) , 
3, 3.43621, 0, 0, 0.477454,-99) , 
7, 0.00791128, 0, 0, 0.503891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382175,-99) , 
7, 0.0237353, 1, 0, 0.498874,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0567636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420055,-99) , 
11, -3.73007, 1, 0, 0.513209,-99) , 
12, -1.32514, 0, 0, 0.563009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370187,-99) , 
12, -0.945918, 0, 0, 0.498913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360537,-99) , 
10, -1.8571, 0, 0, 0.494009,-99) , 
11, -3.1491, 1, 0, 0.502126,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.084867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69617, 0, 1, 0.580292,-99) , 
NN(
0, 
0, 
-1, -1.01222, 1, -1, 0.474196,-99) , 
7, 0.0067966, 0, 0, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394551,-99) , 
7, 0.0237891, 1, 0, 0.496691,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0533869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.329, 0, 1, 0.619205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427797,-99) , 
3, 3.58488, 0, 0, 0.500035,-99) , 
6, 0.251908, 1, 0, 0.548844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378977,-99) , 
10, -1.57143, 0, 0, 0.494584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360664,-99) , 
12, -0.740308, 0, 0, 0.489207,-99) , 
11, -2.7431, 1, 0, 0.500814,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0393731);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57823, 0, 1, 0.571669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433207,-99) , 
5, 0.999796, 0, 0, 0.49348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365464,-99) , 
5, 0.998571, 0, 0, 0.48913,-99) , 
11, -3.2647, 1, 0, 0.497278,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.03678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496535,-99) , 
6, 0.373246, 1, 0, 0.564145,-99) , 
NN(
0, 
0, 
-1, -1.8571, 0, -1, 0.486492,-99) , 
11, -3.33543, 1, 0, 0.493452,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0514246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45367,-99) , 
10, -0.486104, 0, 0, 0.504841,-99) , 
6, 0.162092, 1, 0, 0.549061,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.486797,-99) , 
11, -2.88184, 1, 0, 0.497161,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0896664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.318533, 1, 1, 0.528234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3839,-99) , 
12, 1.69501, 0, 0, 0.477085,-99) , 
3, 1.71611, 0, 0, 0.511556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370067,-99) , 
11, -1.3193, 1, 0, 0.42362,-99) , 
6, -0.441685, 1, 0, 0.447913,-99) , 
10, 1.28573, 1, 0, 0.502712,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0921736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469097,-99) , 
7, 0.00339955, 0, 0, 0.513379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397518,-99) , 
7, 0.0237968, 1, 0, 0.5087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457827,-99) , 
3, 3.08014, 0, 0, 0.470957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411297,-99) , 
6, 0.488431, 1, 0, 0.463737,-99) , 
0, 0.499995, 1, 0, 0.493624,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0706302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495027,-99) , 
6, -0.318533, 1, 0, 0.513264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407766,-99) , 
12, 2.32293, 0, 0, 0.474061,-99) , 
3, 1.72207, 0, 0, 0.500914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391822,-99) , 
10, 2.14281, 1, 0, 0.497258,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0632425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439684,-99) , 
11, -3.74206, 1, 0, 0.506719,-99) , 
12, -1.12997, 0, 0, 0.548577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461665,-99) , 
5, 0.999932, 0, 0, 0.496713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363308,-99) , 
5, 0.998571, 0, 0, 0.492618,-99) , 
11, -2.88184, 1, 0, 0.50185,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0461666);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.67206, 0, 1, 0.564239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486271,-99) , 
3, 2.93572, 0, 0, 0.494982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400016,-99) , 
5, 0.998571, 0, 0, 0.491704,-99) , 
11, -3.33543, 1, 0, 0.498215,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0606377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496657,-99) , 
12, -1.58846, 0, 0, 0.562724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490918,-99) , 
3, 2.99237, 0, 0, 0.502578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411,-99) , 
3, 4.07786, 0, 0, 0.447544,-99) , 
6, 0.402097, 1, 0, 0.495107,-99) , 
11, -3.26541, 1, 0, 0.501777,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0731974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.48384, 1, 1, 0.636664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44693,-99) , 
6, 0.0689943, 1, 0, 0.501625,-99) , 
3, 3.33458, 0, 0, 0.512661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552193,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.405599,-99) , 
3, 4.16292, 0, 0, 0.451511,-99) , 
6, 0.496644, 1, 0, 0.504726,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0488077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450501,-99) , 
11, -3.60163, 1, 0, 0.504953,-99) , 
12, -0.914555, 0, 0, 0.541915,-99) , 
NN(
0, 
0, 
-1, -0.770187, 0, -1, 0.490428,-99) , 
11, -2.7431, 1, 0, 0.500426,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.06317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4504, 0, 1, 0.575154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452426,-99) , 
7, 0.00151091, 0, 0, 0.492239,-99) , 
7, 0.00793223, 0, 0, 0.508763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413346,-99) , 
7, 0.0237968, 1, 0, 0.504729,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0520063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.314899, 1, 1, 0.523455,-99) , 
NN(
0, 
0, 
-1, 0.999714, 0, -1, 0.478166,-99) , 
3, 1.96643, 0, 0, 0.504839,-99) , 
NN(
0, 
0, 
-1, 2.23808, 1, -1, 0.420512,-99) , 
10, 1.85711, 1, 0, 0.500093,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0311294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489503,-99) , 
12, -1.28774, 0, 0, 0.544559,-99) , 
NN(
0, 
0, 
-1, -1.85709, 0, -1, 0.496197,-99) , 
11, -2.88184, 1, 0, 0.5041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42339,-99) , 
4, 8.5394, 1, 0, 0.500116,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.059954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.360601, 1, 1, 0.585226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407962,-99) , 
6, 0.208027, 1, 0, 0.498048,-99) , 
3, 3.23794, 0, 0, 0.509595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555197,-99) , 
NN(
0, 
0, 
-1, 3.84232, 0, -1, 0.405115,-99) , 
3, 4.31366, 0, 0, 0.449865,-99) , 
6, 0.585731, 1, 0, 0.503999,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0514037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493968,-99) , 
6, 0.173686, 1, 0, 0.524905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39171,-99) , 
6, -0.0756136, 1, 0, 0.490009,-99) , 
3, 2.72708, 0, 0, 0.502179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423674,-99) , 
4, 8.71113, 1, 0, 0.498529,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0410505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492278,-99) , 
12, -1.85519, 0, 0, 0.559245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470535,-99) , 
10, -0.428571, 0, 0, 0.496753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401163,-99) , 
5, 0.998572, 0, 0, 0.493525,-99) , 
11, -3.39856, 1, 0, 0.498784,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0936521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0357169, 1, 1, 0.599699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442847,-99) , 
3, 3.69099, 0, 0, 0.483671,-99) , 
6, 0.251676, 1, 0, 0.521295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404924,-99) , 
6, -0.163381, 1, 0, 0.49267,-99) , 
NN(
0, 
0, 
-1, 1.9729, 0, -1, 0.372586,-99) , 
5, 0.999794, 0, 0, 0.479939,-99) , 
3, 2.7092, 0, 0, 0.494649,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0713111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390168,-99) , 
11, -1.43171, 1, 0, 0.49594,-99) , 
6, -0.0306925, 1, 0, 0.516191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418725,-99) , 
6, -0.305032, 1, 0, 0.484398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349594,-99) , 
5, 0.999714, 0, 0, 0.473213,-99) , 
3, 2.46403, 0, 0, 0.491708,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0919199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.40059, 1, 1, 0.59108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423374,-99) , 
11, -1.75832, 1, 0, 0.486543,-99) , 
6, -0.236241, 1, 0, 0.502813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489493,-99) , 
10, -0.428846, 1, 0, 0.512579,-99) , 
NN(
0, 
0, 
-1, 1.44656, 0, -1, 0.427893,-99) , 
11, 1.43728, 0, 0, 0.45829,-99) , 
3, 1.97285, 0, 0, 0.484652,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.06006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.364189, 1, 1, 0.560646,-99) , 
NN(
0, 
0, 
-1, 0.211547, 1, -1, 0.480427,-99) , 
3, 3.23794, 0, 0, 0.491083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506669,-99) , 
NN(
0, 
0, 
-1, 3.73056, 0, -1, 0.381055,-99) , 
3, 4.21976, 0, 0, 0.424871,-99) , 
6, 0.590172, 1, 0, 0.485079,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0529963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.24242, 1, 1, 0.567992,-99) , 
NN(
0, 
0, 
-1, -0.00567613, 1, -1, 0.486284,-99) , 
3, 3.09773, 0, 0, 0.497198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516586,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.415508,-99) , 
3, 4.13626, 0, 0, 0.448378,-99) , 
6, 0.491496, 1, 0, 0.490711,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0458279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492907,-99) , 
11, -3.17128, 1, 0, 0.498016,-99) , 
3, 3.51432, 0, 0, 0.504028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513378,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.411692,-99) , 
5, 0.999524, 1, 0, 0.443163,-99) , 
6, 0.496641, 1, 0, 0.496109,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0542208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.582562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458943,-99) , 
6, -0.00223587, 1, 0, 0.498914,-99) , 
3, 3.33458, 0, 0, 0.505638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510256,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.418033,-99) , 
5, 0.999524, 1, 0, 0.44647,-99) , 
6, 0.496641, 1, 0, 0.497904,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0690741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.1108, 1, 1, 0.524763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457467,-99) , 
9, -951.256, 0, 0, 0.482091,-99) , 
3, 2.18842, 0, 0, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.437813,-99) , 
6, 0.585735, 1, 0, 0.496192,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0298722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.24236, 1, 1, 0.50569,-99) , 
NN(
0, 
0, 
-1, -1.28549, 0, -1, 0.469643,-99) , 
0, 0.500947, 1, 0, 0.496365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41039,-99) , 
4, 9.39852, 1, 0, 0.493193,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0623623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45553, 0, 1, 0.576052,-99) , 
NN(
0, 
0, 
-1, 0.00302312, 0, -1, 0.479896,-99) , 
7, 0.00906953, 0, 0, 0.494866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415132,-99) , 
7, 0.0238076, 1, 0, 0.491558,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0598488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495677,-99) , 
3, 2.20255, 0, 0, 0.511991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42371,-99) , 
11, -3.1531, 1, 0, 0.475536,-99) , 
12, -0.478099, 0, 0, 0.503115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416138,-99) , 
5, 0.998571, 0, 0, 0.499869,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0645363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.571722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443165,-99) , 
6, -0.0645977, 1, 0, 0.499723,-99) , 
3, 2.99239, 0, 0, 0.509039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525789,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.430761,-99) , 
3, 4.03745, 0, 0, 0.461371,-99) , 
6, 0.403102, 1, 0, 0.500882,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.083894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472289,-99) , 
3, 1.47293, 0, 0, 0.526066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460807,-99) , 
12, 3.32407, 0, 0, 0.467526,-99) , 
7, 0.00340083, 0, 0, 0.499253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418035,-99) , 
7, 0.0238076, 1, 0, 0.495907,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0416637);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.56535, 1, 1, 0.51172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479212,-99) , 
3, 2.63398, 0, 0, 0.490844,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.452412,-99) , 
6, 0.122478, 1, 0, 0.47945,-99) , 
0, 0.499043, 1, 0, 0.498291,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0398385);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490954,-99) , 
11, -2.29681, 1, 0, 0.502678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407421,-99) , 
10, -2.14286, 0, 0, 0.500186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416779,-99) , 
4, 9.41378, 1, 0, 0.497159,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0664721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401494,-99) , 
10, -1.7754, 0, 0, 0.515093,-99) , 
NN(
0, 
0, 
-1, 2.26532, 1, -1, 0.466262,-99) , 
10, 1.28575, 1, 0, 0.506299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558744,-99) , 
NN(
0, 
0, 
-1, -2.58592, 1, -1, 0.438517,-99) , 
11, -3.63461, 1, 0, 0.467324,-99) , 
12, -0.60248, 0, 0, 0.497537,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0388958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.88276, 0, 1, 0.551669,-99) , 
NN(
0, 
0, 
-1, 0.999541, 0, -1, 0.493762,-99) , 
11, -2.65528, 1, 0, 0.502931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367682,-99) , 
9, -951.286, 1, 0, 0.426429,-99) , 
5, 0.999524, 1, 0, 0.455106,-99) , 
6, 0.496637, 1, 0, 0.496723,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0663079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.072664, 1, 1, 0.551742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435734,-99) , 
6, -0.131648, 1, 0, 0.493756,-99) , 
3, 2.7839, 0, 0, 0.505027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451078,-99) , 
3, 3.7696, 0, 0, 0.500729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381821,-99) , 
5, 0.999524, 1, 0, 0.423545,-99) , 
9, -951.286, 1, 0, 0.457519,-99) , 
6, 0.403102, 1, 0, 0.496922,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0732278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495634,-99) , 
11, -2.37571, 1, 0, 0.521931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408987,-99) , 
6, -0.540501, 1, 0, 0.478644,-99) , 
11, -0.507566, 1, 0, 0.50369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578337,-99) , 
NN(
0, 
0, 
-1, -1.54236, 0, -1, 0.439569,-99) , 
11, -3.8244, 1, 0, 0.46457,-99) , 
12, -0.658322, 0, 0, 0.495424,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0520378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48922,-99) , 
3, 1.45371, 0, 0, 0.553004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454279,-99) , 
11, -0.611779, 1, 0, 0.48775,-99) , 
7, 0.0079341, 0, 0, 0.5006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421596,-99) , 
7, 0.0238024, 1, 0, 0.497318,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0639114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481453,-99) , 
11, -0.705296, 1, 0, 0.50663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43609,-99) , 
11, -3.71682, 1, 0, 0.464006,-99) , 
12, -0.802969, 0, 0, 0.498919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408163,-99) , 
4, 9.39629, 1, 0, 0.495594,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0647315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0137278, 1, 1, 0.565472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398286,-99) , 
5, 0.99981, 0, 0, 0.492498,-99) , 
3, 2.56406, 0, 0, 0.506079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459938,-99) , 
3, 3.54783, 0, 0, 0.5042,-99) , 
NN(
0, 
0, 
-1, -0.999964, 0, -1, 0.434548,-99) , 
9, -951.286, 1, 0, 0.466385,-99) , 
6, 0.216023, 1, 0, 0.4957,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0323191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142706, 1, 1, 0.527803,-99) , 
NN(
0, 
0, 
-1, 1.47872, 0, -1, 0.489103,-99) , 
12, 2.84699, 0, 0, 0.495173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414401,-99) , 
4, 9.41378, 1, 0, 0.492253,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.033884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.540813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443464,-99) , 
6, 0.121646, 1, 0, 0.491387,-99) , 
3, 3.38651, 0, 0, 0.497595,-99) , 
NN(
0, 
0, 
-1, 4.68336, 0, -1, 0.434344,-99) , 
6, 0.682513, 1, 0, 0.494163,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0508433);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476923,-99) , 
11, -1.44338, 1, 0, 0.495898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424038,-99) , 
12, -1.64305, 0, 0, 0.492284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394359,-99) , 
10, -2.1428, 0, 0, 0.489739,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0399277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488677,-99) , 
6, -0.520582, 1, 0, 0.499266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409231,-99) , 
10, -2.1428, 0, 0, 0.496812,-99) , 
NN(
0, 
0, 
-1, 4.08362, 0, -1, 0.429854,-99) , 
6, 0.677931, 1, 0, 0.493059,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0609375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489854,-99) , 
8, 1.43824, 0, 0, 0.551534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480426,-99) , 
11, 2.29604, 0, 0, 0.485492,-99) , 
7, 0.00792915, 0, 0, 0.498549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429121,-99) , 
7, 0.0237891, 1, 0, 0.495689,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0643062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.66824, 1, 1, 0.601291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407032,-99) , 
11, -3.74203, 1, 0, 0.473422,-99) , 
12, -1.28774, 0, 0, 0.52896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440251,-99) , 
10, 2.2517, 1, 0, 0.502922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458012,-99) , 
12, 2.81919, 0, 0, 0.475091,-99) , 
10, -0.142834, 0, 0, 0.49324,-99) , 
11, -2.88184, 1, 0, 0.499033,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0432114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497788,-99) , 
6, -0.547846, 1, 0, 0.506188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383454,-99) , 
12, 2.41143, 0, 0, 0.474119,-99) , 
3, 1.48989, 0, 0, 0.49904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43493,-99) , 
4, 8.62147, 1, 0, 0.495968,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0712118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.71951, 0, 1, 0.58447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474307,-99) , 
11, -1.96654, 1, 0, 0.499712,-99) , 
6, -0.556635, 1, 0, 0.507478,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485568,-99) , 
10, -0.142865, 1, 0, 0.511781,-99) , 
NN(
0, 
0, 
-1, 1.38112, 0, -1, 0.399399,-99) , 
12, 2.64475, 0, 0, 0.471372,-99) , 
3, 1.47137, 0, 0, 0.499793,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0497902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.527886, 1, 1, 0.51617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401469,-99) , 
12, 2.08504, 0, 0, 0.475029,-99) , 
3, 1.56484, 0, 0, 0.50486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507196,-99) , 
NN(
0, 
0, 
-1, 0.695165, 1, -1, 0.423627,-99) , 
5, 0.999524, 1, 0, 0.452906,-99) , 
6, 0.590174, 1, 0, 0.500165,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.049689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479815,-99) , 
3, 1.21532, 0, 0, 0.553358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466779,-99) , 
3, 2.20565, 0, 0, 0.48649,-99) , 
7, 0.00906916, 0, 0, 0.49678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42493,-99) , 
7, 0.0238076, 1, 0, 0.493795,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0765187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394724,-99) , 
5, 0.999714, 0, 0, 0.498757,-99) , 
3, 2.47858, 0, 0, 0.508863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448868,-99) , 
3, 2.92267, 0, 0, 0.50386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417807,-99) , 
5, 0.999524, 1, 0, 0.441459,-99) , 
9, -950.098, 1, 0, 0.471527,-99) , 
6, -0.0652644, 1, 0, 0.493635,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0510058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490385,-99) , 
3, 2.84198, 0, 0, 0.49919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451946,-99) , 
5, 0.999592, 1, 0, 0.469982,-99) , 
6, 0.302571, 1, 0, 0.493373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415035,-99) , 
5, 0.998571, 0, 0, 0.490426,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0554512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.601407, 0, 1, 0.57831,-99) , 
NN(
0, 
0, 
-1, 0.999429, 0, -1, 0.493034,-99) , 
11, -2.06172, 1, 0, 0.506897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452938,-99) , 
6, 0.652587, 1, 0, 0.503922,-99) , 
NN(
0, 
0, 
-1, -0.11636, 0, -1, 0.451168,-99) , 
3, 3.39478, 0, 0, 0.476207,-99) , 
6, 0.02895, 1, 0, 0.495993,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0676602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0101713, 1, 1, 0.543775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458304,-99) , 
6, -0.377025, 1, 0, 0.498858,-99) , 
3, 2.51123, 0, 0, 0.510105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463556,-99) , 
6, 0.651414, 1, 0, 0.499985,-99) , 
NN(
0, 
0, 
-1, 0.429628, 0, -1, 0.440468,-99) , 
3, 3.64272, 0, 0, 0.470683,-99) , 
6, 0.308624, 1, 0, 0.501695,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0550951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.61891, 0, 1, 0.584647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464214,-99) , 
11, -1.12226, 1, 0, 0.494673,-99) , 
6, -0.616489, 1, 0, 0.501765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481157,-99) , 
10, -0.714194, 1, 0, 0.501661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291414,-99) , 
12, 1.96126, 0, 0, 0.463257,-99) , 
8, 1.47447, 0, 0, 0.495349,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0583903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.10043, 1, 1, 0.580303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414214,-99) , 
5, 0.999714, 0, 0, 0.494949,-99) , 
3, 2.49295, 0, 0, 0.504859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475071,-99) , 
11, -2.45238, 1, 0, 0.498719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416444,-99) , 
11, -3.62434, 1, 0, 0.444393,-99) , 
10, 0.143125, 0, 0, 0.472476,-99) , 
6, 0.0289394, 1, 0, 0.493311,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0634924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.26617, 1, 1, 0.523543,-99) , 
NN(
0, 
0, 
-1, 0.999714, 0, -1, 0.481625,-99) , 
3, 1.96647, 0, 0, 0.501675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462132,-99) , 
6, -0.00661321, 1, 0, 0.483999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352389,-99) , 
11, -2.53833, 1, 0, 0.460006,-99) , 
12, -0.44288, 0, 0, 0.490896,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0694531);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494073,-99) , 
11, -2.3677, 1, 0, 0.509002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38137,-99) , 
12, 2.16641, 0, 0, 0.479172,-99) , 
3, 1.4715, 0, 0, 0.50124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446897,-99) , 
12, -1.54324, 0, 0, 0.501448,-99) , 
NN(
0, 
0, 
-1, -1.07058, 0, -1, 0.401952,-99) , 
11, -3.09884, 1, 0, 0.463612,-99) , 
12, -0.770318, 0, 0, 0.494175,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0635517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.33979, 1, 1, 0.516448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395078,-99) , 
11, 0.912139, 0, 0, 0.480294,-99) , 
3, 1.47784, 0, 0, 0.506559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476052,-99) , 
12, -1.25957, 0, 0, 0.513093,-99) , 
NN(
0, 
0, 
-1, -2.54047, 1, -1, 0.409012,-99) , 
11, -3.03475, 1, 0, 0.469492,-99) , 
12, -0.60248, 0, 0, 0.498317,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0462246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.93592, 0, 1, 0.529335,-99) , 
NN(
0, 
0, 
-1, 2.11187, 0, -1, 0.487447,-99) , 
6, -0.432764, 1, 0, 0.498876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454332,-99) , 
6, -0.87556, 1, 0, 0.492343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334043,-99) , 
12, 2.83386, 0, 0, 0.459099,-99) , 
3, 1.24263, 0, 0, 0.493847,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0413418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49336,-99) , 
6, -0.383172, 1, 0, 0.505743,-99) , 
NN(
0, 
0, 
-1, 1.7413, 0, -1, 0.472473,-99) , 
3, 1.4899, 0, 0, 0.498354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422169,-99) , 
4, 9.39629, 1, 0, 0.495601,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0558469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.95384, 0, 1, 0.588396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458311,-99) , 
3, 2.15311, 0, 0, 0.498003,-99) , 
6, -0.445657, 1, 0, 0.508124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461347,-99) , 
6, -0.703463, 1, 0, 0.506609,-99) , 
NN(
0, 
0, 
-1, 1.425, 0, -1, 0.432001,-99) , 
12, 2.33869, 0, 0, 0.477628,-99) , 
8, 1.76907, 0, 0, 0.499645,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0500073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60547, 0, 1, 0.5799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489593,-99) , 
11, -3.82072, 1, 0, 0.493836,-99) , 
6, -0.615186, 1, 0, 0.501323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473063,-99) , 
10, -0.428411, 1, 0, 0.494003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349233,-99) , 
12, 2.1444, 0, 0, 0.465617,-99) , 
8, 1.45445, 0, 0, 0.495602,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0627635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.10241, 0, 1, 0.531236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465941,-99) , 
9, -950.098, 1, 0, 0.490953,-99) , 
6, -0.248366, 1, 0, 0.50657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469036,-99) , 
9, -951.286, 1, 0, 0.500061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353566,-99) , 
12, 2.48318, 0, 0, 0.466678,-99) , 
8, 1.45117, 0, 0, 0.50027,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0612211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476789,-99) , 
12, -1.55032, 0, 0, 0.540223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482676,-99) , 
3, 1.71791, 0, 0, 0.505446,-99) , 
NN(
0, 
0, 
-1, -2.05079, 1, -1, 0.46328,-99) , 
12, 0.0369791, 0, 0, 0.492763,-99) , 
11, -3.20228, 1, 0, 0.497785,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0562433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41379,-99) , 
11, -3.70845, 1, 0, 0.487079,-99) , 
12, -1.44204, 0, 0, 0.540764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473345,-99) , 
3, 1.2264, 0, 0, 0.504765,-99) , 
NN(
0, 
0, 
-1, -2.10444, 1, -1, 0.468301,-99) , 
12, 0.140006, 0, 0, 0.493226,-99) , 
11, -3.10886, 1, 0, 0.498927,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0368744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480107,-99) , 
12, -1.57657, 0, 0, 0.536374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482371,-99) , 
6, -0.255779, 1, 0, 0.495637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422546,-99) , 
5, 0.998571, 0, 0, 0.493276,-99) , 
11, -3.2647, 1, 0, 0.497433,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.032867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459422,-99) , 
11, -3.74203, 1, 0, 0.49536,-99) , 
12, -1.0903, 0, 0, 0.5305,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.493078,-99) , 
11, -2.88184, 1, 0, 0.49907,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0334992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495899,-99) , 
3, 1.21657, 0, 0, 0.554182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458482,-99) , 
7, 0.000968965, 0, 0, 0.496472,-99) , 
7, 0.0101741, 0, 0, 0.503595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447079,-99) , 
7, 0.0237399, 1, 0, 0.501197,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0319018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488534,-99) , 
12, -1.0048, 0, 0, 0.525485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493861,-99) , 
6, -0.907043, 1, 0, 0.496197,-99) , 
11, -2.74869, 1, 0, 0.501638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448308,-99) , 
4, 8.53717, 1, 0, 0.499005,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0825003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496399,-99) , 
11, -1.86214, 1, 0, 0.531673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395897,-99) , 
11, -2.27089, 1, 0, 0.491506,-99) , 
12, -0.0765984, 0, 0, 0.509978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48321,-99) , 
12, 3.48398, 1, 0, 0.52737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426627,-99) , 
11, 1.84801, 0, 0, 0.462353,-99) , 
9, -951.286, 0, 0, 0.484156,-99) , 
11, -0.676408, 1, 0, 0.500622,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0251322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499222,-99) , 
7, 0.00906934, 0, 0, 0.507768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450179,-99) , 
7, 0.0238076, 1, 0, 0.505392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439397,-99) , 
4, 9.39852, 1, 0, 0.503008,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0233449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0102006, 0, 1, 0.508554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457701,-99) , 
7, 0.0238024, 1, 0, 0.5064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443769,-99) , 
4, 9.41691, 1, 0, 0.504115,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0463779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.38339, 1, 1, 0.514817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465141,-99) , 
9, -951.256, 0, 0, 0.488927,-99) , 
3, 1.72736, 0, 0, 0.506826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46341,-99) , 
3, 1.84765, 0, 0, 0.484563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446832,-99) , 
6, 0.0282153, 1, 0, 0.472726,-99) , 
0, 0.502852, 1, 0, 0.501959,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0515823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.35411, 1, 1, 0.522461,-99) , 
NN(
0, 
0, 
-1, 0.999714, 0, -1, 0.491999,-99) , 
8, 2.06798, 0, 0, 0.507631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453048,-99) , 
12, -1.71909, 0, 0, 0.523156,-99) , 
NN(
0, 
0, 
-1, -2.54374, 1, -1, 0.44402,-99) , 
11, -3.21541, 1, 0, 0.479725,-99) , 
12, -0.569829, 0, 0, 0.501253,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0504632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441726,-99) , 
5, 0.99981, 0, 0, 0.502774,-99) , 
3, 2.35401, 0, 0, 0.511705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487295,-99) , 
6, 0.108332, 1, 0, 0.49858,-99) , 
NN(
0, 
0, 
-1, -0.37181, 0, -1, 0.440414,-99) , 
3, 2.64257, 0, 0, 0.486017,-99) , 
6, -0.158737, 1, 0, 0.499896,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0346319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495231,-99) , 
12, -0.758067, 0, 0, 0.522318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481821,-99) , 
12, 0.658001, 0, 0, 0.496875,-99) , 
11, -2.69985, 1, 0, 0.501883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426596,-99) , 
4, 9.39852, 1, 0, 0.49916,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.039718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499766,-99) , 
3, 1.21742, 0, 0, 0.552985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470752,-99) , 
11, -0.587569, 1, 0, 0.495732,-99) , 
7, 0.0102032, 0, 0, 0.502677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446475,-99) , 
7, 0.0238076, 1, 0, 0.500331,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0340641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493445,-99) , 
12, -1.02377, 0, 0, 0.541965,-99) , 
NN(
0, 
0, 
-1, -0.657347, 0, -1, 0.494728,-99) , 
11, -2.65528, 1, 0, 0.502164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533276,-99) , 
NN(
0, 
0, 
-1, 4.29676, 1, -1, 0.446332,-99) , 
3, 4.27175, 0, 0, 0.46837,-99) , 
6, 0.496633, 1, 0, 0.497789,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.044603);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458651,-99) , 
9, -951.286, 0, 0, 0.545059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483213,-99) , 
6, -0.255948, 1, 0, 0.499625,-99) , 
5, 0.999524, 1, 0, 0.502552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441439,-99) , 
5, 0.998571, 0, 0, 0.500272,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.03684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498088, 1, 1, 0.570542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47172,-99) , 
12, -0.361233, 0, 0, 0.500627,-99) , 
3, 3.18409, 0, 0, 0.506256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519967,-99) , 
NN(
0, 
0, 
-1, 4.28068, 1, -1, 0.463186,-99) , 
3, 4.06074, 0, 0, 0.480337,-99) , 
6, 0.399179, 1, 0, 0.501796,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0475983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456611,-99) , 
11, -3.57231, 1, 0, 0.495363,-99) , 
12, -0.949922, 0, 0, 0.524766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485657,-99) , 
3, 2.21095, 0, 0, 0.494534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394932,-99) , 
12, -0.770187, 0, 0, 0.491341,-99) , 
11, -2.71411, 1, 0, 0.497858,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0433931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.68925, 1, 1, 0.581701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436341,-99) , 
11, -3.74203, 1, 0, 0.481785,-99) , 
12, -1.31975, 0, 0, 0.526324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487581,-99) , 
6, -0.440681, 1, 0, 0.498042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43237,-99) , 
5, 0.998572, 0, 0, 0.496054,-99) , 
11, -2.88184, 1, 0, 0.500891,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0489196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471724,-99) , 
11, -3.85489, 1, 0, 0.497046,-99) , 
12, -0.893453, 0, 0, 0.528092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484659,-99) , 
8, 1.29243, 0, 0, 0.516326,-99) , 
NN(
0, 
0, 
-1, 1.68013, 0, -1, 0.489573,-99) , 
6, -0.720334, 1, 0, 0.49468,-99) , 
11, -2.65442, 1, 0, 0.501566,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0313032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495571,-99) , 
11, -0.444462, 1, 0, 0.509832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474211,-99) , 
2, 0.071054, 0, 0, 0.484307,-99) , 
0, 0.502852, 1, 0, 0.506211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446845,-99) , 
4, 9.39629, 1, 0, 0.504071,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0430523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.14887, 1, 1, 0.540131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455092,-99) , 
6, -0.00740512, 1, 0, 0.501833,-99) , 
3, 2.92966, 0, 0, 0.508762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531009,-99) , 
NN(
0, 
0, 
-1, 4.26218, 1, -1, 0.457895,-99) , 
3, 4.28299, 0, 0, 0.475998,-99) , 
6, 0.488903, 1, 0, 0.504414,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0402002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490138,-99) , 
3, 1.45684, 0, 0, 0.533909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490529,-99) , 
11, 2.29604, 0, 0, 0.494219,-99) , 
7, 0.00679906, 0, 0, 0.504267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455502,-99) , 
7, 0.0237968, 1, 0, 0.50225,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0376121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.67116, 1, 1, 0.580264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444422,-99) , 
11, -3.7421, 1, 0, 0.485656,-99) , 
12, -1.31975, 0, 0, 0.527955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487998,-99) , 
12, 0.466447, 0, 0, 0.500622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443658,-99) , 
5, 0.998571, 0, 0, 0.498907,-99) , 
11, -2.88184, 1, 0, 0.503544,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0706434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.870242, 1, 1, 0.573624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465641,-99) , 
11, -1.55128, 1, 0, 0.501543,-99) , 
6, -0.446358, 1, 0, 0.508894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477884,-99) , 
12, 3.14875, 1, 0, 0.524602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395317,-99) , 
12, 2.33869, 0, 0, 0.462351,-99) , 
9, -951.275, 0, 0, 0.483103,-99) , 
8, 1.79614, 0, 0, 0.501405,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0484408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.669625, 1, 1, 0.559558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464441,-99) , 
11, -0.942713, 1, 0, 0.498253,-99) , 
6, -0.616487, 1, 0, 0.503425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469063,-99) , 
6, -0.846946, 1, 0, 0.499561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382512,-99) , 
12, 2.34466, 0, 0, 0.47488,-99) , 
8, 1.45502, 0, 0, 0.498825,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0560276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.55626, 1, 1, 0.516297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468578,-99) , 
9, -948.87, 0, 0, 0.484965,-99) , 
11, -0.682695, 1, 0, 0.502608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447389,-99) , 
12, -1.84404, 0, 0, 0.516637,-99) , 
NN(
0, 
0, 
-1, -2.80284, 1, -1, 0.442358,-99) , 
11, -3.42844, 1, 0, 0.474505,-99) , 
12, -0.850107, 0, 0, 0.497836,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.023889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.538474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456907,-99) , 
6, 0.202654, 1, 0, 0.493447,-99) , 
3, 3.60854, 0, 0, 0.497083,-99) , 
NN(
0, 
0, 
-1, 4.0572, 0, -1, 0.450697,-99) , 
6, 0.68372, 1, 0, 0.494523,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0468279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494508,-99) , 
11, -2.43535, 1, 0, 0.509908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462574,-99) , 
6, -0.630999, 1, 0, 0.485315,-99) , 
11, -0.605214, 1, 0, 0.499114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437829,-99) , 
6, -0.157247, 1, 0, 0.453007,-99) , 
11, -3.51248, 1, 0, 0.475664,-99) , 
12, -0.677202, 0, 0, 0.494329,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0420216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.341134, 1, 1, 0.51224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46732,-99) , 
9, -948.956, 0, 0, 0.483633,-99) , 
3, 1.91736, 0, 0, 0.499462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507375,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.451645,-99) , 
5, 0.999524, 1, 0, 0.468859,-99) , 
6, 0.496633, 1, 0, 0.49549,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0400927);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494953,-99) , 
3, 2.43242, 0, 0, 0.503884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456115,-99) , 
0, 0.490335, 0, 0, 0.500224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47978,-99) , 
3, 2.08177, 0, 0, 0.492744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460328,-99) , 
5, 0.999524, 1, 0, 0.469771,-99) , 
6, -0.164736, 1, 0, 0.482318,-99) , 
0, 0.499043, 1, 0, 0.492744,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0409827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498437,-99) , 
11, -2.4766, 1, 0, 0.506729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429993,-99) , 
6, -0.847833, 1, 0, 0.472639,-99) , 
3, 1.24245, 0, 0, 0.501231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47204,-99) , 
6, -0.0895669, 1, 0, 0.48487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376168,-99) , 
11, -2.50446, 1, 0, 0.472193,-99) , 
12, -0.60248, 0, 0, 0.494861,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0511846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453249,-99) , 
5, 0.999905, 0, 0, 0.500293,-99) , 
8, 2.22369, 0, 0, 0.510146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490387,-99) , 
6, 0.211665, 1, 0, 0.50711,-99) , 
NN(
0, 
0, 
-1, -0.0525132, 0, -1, 0.456607,-99) , 
3, 2.73243, 0, 0, 0.490401,-99) , 
6, -0.251677, 1, 0, 0.499959,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0399771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475067,-99) , 
8, 1.45487, 0, 0, 0.507718,-99) , 
NN(
0, 
0, 
-1, -0.349822, 1, -1, 0.466252,-99) , 
7, 0.00113346, 0, 0, 0.501119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447666,-99) , 
7, 0.0238024, 1, 0, 0.498897,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0326305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46228,-99) , 
9, -951.286, 0, 0, 0.541284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47606,-99) , 
6, 0.116061, 1, 0, 0.497223,-99) , 
5, 0.999524, 1, 0, 0.500008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451714,-99) , 
5, 0.998572, 0, 0, 0.498188,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.03872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475877,-99) , 
3, 1.21222, 0, 0, 0.539768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48727,-99) , 
11, -2.69985, 1, 0, 0.493286,-99) , 
7, 0.0102032, 0, 0, 0.498916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450137,-99) , 
7, 0.0238076, 1, 0, 0.496897,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0389249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.41278, 1, 1, 0.522099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460487,-99) , 
6, -0.369327, 1, 0, 0.495343,-99) , 
8, 2.44572, 0, 0, 0.505235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436679,-99) , 
12, -1.808, 0, 0, 0.493816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410909,-99) , 
11, -2.59743, 1, 0, 0.478032,-99) , 
12, -0.498082, 0, 0, 0.498613,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0270076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497455,-99) , 
8, 2.1202, 0, 0, 0.507457,-99) , 
NN(
0, 
0, 
-1, -1.61404, 1, -1, 0.487399,-99) , 
12, 0.482579, 0, 0, 0.497913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438666,-99) , 
4, 9.41367, 1, 0, 0.495762,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0328764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55145, 0, 1, 0.539544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48938,-99) , 
3, 3.46948, 0, 0, 0.49496,-99) , 
7, 0.0113169, 0, 0, 0.499182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453682,-99) , 
7, 0.0237659, 1, 0, 0.497284,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0482117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.29938, 1, 1, 0.52006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460516,-99) , 
6, -0.490172, 1, 0, 0.495253,-99) , 
8, 2.1202, 0, 0, 0.507256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463774,-99) , 
12, -1.64632, 0, 0, 0.517145,-99) , 
NN(
0, 
0, 
-1, -2.54139, 1, -1, 0.45412,-99) , 
11, -3.2189, 1, 0, 0.480268,-99) , 
12, -0.498082, 0, 0, 0.500643,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0232113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497498,-99) , 
6, -0.710773, 1, 0, 0.500863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438613,-99) , 
6, -0.872306, 1, 0, 0.469636,-99) , 
3, 1.24245, 0, 0, 0.49686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450648,-99) , 
4, 8.64303, 1, 0, 0.494637,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0263075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.530574, 1, 1, 0.508112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415053,-99) , 
12, 2.22654, 0, 0, 0.479024,-99) , 
8, 1.56218, 0, 0, 0.50165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453081,-99) , 
5, 0.999524, 1, 0, 0.470818,-99) , 
6, 0.59018, 1, 0, 0.498858,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0469031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60665, 0, 1, 0.558068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483992,-99) , 
11, -1.94406, 1, 0, 0.498628,-99) , 
6, -0.574566, 1, 0, 0.503167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43454,-99) , 
5, 0.999991, 0, 0, 0.485776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412465,-99) , 
5, 0.999905, 0, 0, 0.475919,-99) , 
3, 1.4819, 0, 0, 0.497259,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.038452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478419,-99) , 
12, -0.358056, 0, 0, 0.502849,-99) , 
NN(
0, 
0, 
-1, 2.94296, 0, -1, 0.472601,-99) , 
3, 1.23645, 0, 0, 0.499067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439753,-99) , 
4, 9.40736, 1, 0, 0.496957,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0375676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.81676, 1, 1, 0.520554,-99) , 
NN(
0, 
0, 
-1, 2.30751, 0, -1, 0.490228,-99) , 
6, -0.285864, 1, 0, 0.499725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478002,-99) , 
10, -0.428918, 1, 0, 0.493013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394028,-99) , 
8, 1.49949, 0, 0, 0.436316,-99) , 
12, 2.50295, 0, 0, 0.474286,-99) , 
3, 1.48207, 0, 0, 0.494212,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0423482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481473,-99) , 
9, -950.098, 1, 0, 0.497733,-99) , 
6, -0.536217, 1, 0, 0.501592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460627,-99) , 
6, -0.673817, 1, 0, 0.497071,-99) , 
NN(
0, 
0, 
-1, 1.45836, 0, -1, 0.444651,-99) , 
12, 2.10834, 0, 0, 0.479371,-99) , 
8, 1.76732, 0, 0, 0.495445,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0329932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60348, 0, 1, 0.542328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466733,-99) , 
8, 1.99931, 0, 0, 0.497979,-99) , 
6, -0.62514, 1, 0, 0.501481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475464,-99) , 
9, -951.286, 1, 0, 0.499319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406707,-99) , 
12, 2.67464, 0, 0, 0.476534,-99) , 
8, 1.45445, 0, 0, 0.497482,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0241455);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498438,-99) , 
3, 2.94679, 0, 0, 0.503723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458662,-99) , 
0, 0.489791, 0, 0, 0.501086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513591,-99) , 
NN(
0, 
0, 
-1, -0.158127, 1, -1, 0.481809,-99) , 
0, 0.499451, 1, 0, 0.484681,-99) , 
0, 0.499043, 1, 0, 0.494247,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0363598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497959,-99) , 
3, 1.69433, 0, 0, 0.525144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479147,-99) , 
3, 2.72709, 0, 0, 0.489485,-99) , 
7, 0.00793568, 0, 0, 0.496538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452638,-99) , 
7, 0.0238076, 1, 0, 0.49472,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0462061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.88575, 0, 1, 0.573617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489232,-99) , 
8, 2.55231, 0, 0, 0.494349,-99) , 
11, -2.14926, 1, 0, 0.503379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491162,-99) , 
6, 0.376752, 1, 0, 0.50579,-99) , 
NN(
0, 
0, 
-1, -0.0293326, 0, -1, 0.468391,-99) , 
3, 3.3, 0, 0, 0.486076,-99) , 
6, -0.0645944, 1, 0, 0.496317,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0548167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47825,-99) , 
13, 1.2806, 0, 0, 0.50818,-99) , 
10, -0.999794, 1, 0, 0.512133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486124,-99) , 
12, 0.132245, 0, 0, 0.503242,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.433924,-99) , 
11, -1.58113, 1, 0, 0.490913,-99) , 
12, 0.810381, 0, 0, 0.500387,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0237578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142998, 0, 1, 0.535965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49709,-99) , 
2, 0.0799219, 0, 0, 0.502529,-99) , 
2, -0.069495, 1, 0, 0.507471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465111,-99) , 
2, -0.193929, 0, 0, 0.493933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445975,-99) , 
2, 0.214211, 1, 0, 0.487557,-99) , 
4, 4.74401, 1, 0, 0.503649,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0329998);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480524,-99) , 
12, -1.47073, 0, 0, 0.532039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486157,-99) , 
12, 0.329757, 0, 0, 0.500809,-99) , 
11, -3.16769, 1, 0, 0.504028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451476,-99) , 
6, 0.772195, 1, 0, 0.502638,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0290684);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471958,-99) , 
12, -1.87924, 0, 0, 0.536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48159,-99) , 
12, -0.189627, 0, 0, 0.499526,-99) , 
11, -3.43055, 1, 0, 0.502219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456521,-99) , 
4, 8.71113, 1, 0, 0.5001,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.034591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.51475, 1, 1, 0.571786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443168,-99) , 
11, -3.77902, 1, 0, 0.485396,-99) , 
12, -1.2079, 0, 0, 0.523783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47902,-99) , 
4, 4.31445, 1, 0, 0.495961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4495,-99) , 
0, 0.505709, 1, 0, 0.494142,-99) , 
11, -2.74869, 1, 0, 0.499639,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0358635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.74799, 1, 1, 0.581958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454546,-99) , 
11, -3.74203, 1, 0, 0.488537,-99) , 
12, -1.28774, 0, 0, 0.528089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486377,-99) , 
6, -0.348945, 1, 0, 0.495549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453351,-99) , 
5, 0.999048, 0, 0, 0.493549,-99) , 
11, -2.88184, 1, 0, 0.499033,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0266141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497282,-99) , 
8, 3.7804, 1, 0, 0.563969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435295,-99) , 
11, -3.74203, 1, 0, 0.474952,-99) , 
12, -1.51491, 0, 0, 0.525761,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.493675,-99) , 
11, -2.88184, 1, 0, 0.49878,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0530929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0417884, 0, 1, 0.524376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433579,-99) , 
12, 0.51809, 0, 0, 0.486992,-99) , 
11, -1.77684, 1, 0, 0.509448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479851,-99) , 
13, 1.32888, 0, 0, 0.499298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445632,-99) , 
9, -951.286, 0, 0, 0.463467,-99) , 
6, -0.634304, 1, 0, 0.485739,-99) , 
11, -0.302525, 1, 0, 0.50215,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0380757);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492153,-99) , 
3, 1.93639, 0, 0, 0.512522,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.484128,-99) , 
7, 0.00339954, 0, 0, 0.499553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4566,-99) , 
7, 0.0237968, 1, 0, 0.497781,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0239645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495757,-99) , 
11, -3.04061, 1, 0, 0.500853,-99) , 
NN(
0, 
0, 
-1, 0.636842, 1, -1, 0.462169,-99) , 
8, 4.1349, 1, 0, 0.498437,-99) , 
3, 4.18194, 0, 0, 0.500611,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0171807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458876,-99) , 
5, 0.998572, 0, 0, 0.504134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454839,-99) , 
0, 0.505709, 1, 0, 0.502251,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0315373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464743,-99) , 
9, -951.286, 0, 0, 0.542504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479096,-99) , 
6, 0.118631, 1, 0, 0.498772,-99) , 
5, 0.999524, 1, 0, 0.501558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460125,-99) , 
5, 0.998571, 0, 0, 0.500008,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0254722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478963,-99) , 
9, -951.286, 0, 0, 0.539564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48668,-99) , 
6, -0.162753, 1, 0, 0.496793,-99) , 
5, 0.999524, 1, 0, 0.499504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463467,-99) , 
5, 0.998571, 0, 0, 0.498151,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0481854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.27823, 1, 1, 0.530502,-99) , 
NN(
0, 
0, 
-1, 4.13584, 0, -1, 0.471507,-99) , 
6, 0.680503, 1, 0, 0.515529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484993,-99) , 
11, -1.88175, 1, 0, 0.496858,-99) , 
NN(
0, 
0, 
-1, -0.256039, 0, -1, 0.45502,-99) , 
13, 3.20244, 1, 0, 0.49297,-99) , 
3, 3.20018, 0, 0, 0.497885,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0227372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49698,-99) , 
11, -2.55321, 1, 0, 0.533165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498233,-99) , 
11, -2.96293, 1, 0, 0.502863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422833,-99) , 
11, -2.63769, 0, 0, 0.458579,-99) , 
8, 3.88672, 1, 0, 0.499491,-99) , 
3, 3.92155, 0, 0, 0.501922,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0319301);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493805,-99) , 
3, 1.73732, 0, 0, 0.509815,-99) , 
NN(
0, 
0, 
-1, 3.39745, 1, -1, 0.479349,-99) , 
7, 0.0011337, 0, 0, 0.504963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459547,-99) , 
7, 0.0238076, 1, 0, 0.503103,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0463052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495834,-99) , 
8, 1.73668, 0, 0, 0.512526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468167,-99) , 
8, 2.71258, 0, 0, 0.490204,-99) , 
10, 0.999992, 1, 0, 0.506728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442428,-99) , 
12, -1.91664, 0, 0, 0.510461,-99) , 
NN(
0, 
0, 
-1, -2.64671, 1, -1, 0.455946,-99) , 
11, -3.0191, 1, 0, 0.488075,-99) , 
12, -0.60248, 0, 0, 0.502613,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0397518);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498082,-99) , 
13, 1.55635, 0, 0, 0.536491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493584,-99) , 
3, 2.23218, 0, 0, 0.504622,-99) , 
10, -0.714205, 1, 0, 0.509324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484205,-99) , 
8, 2.80831, 1, 0, 0.497166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434471,-99) , 
11, -2.57346, 1, 0, 0.48501,-99) , 
12, -0.457833, 0, 0, 0.503164,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0578587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.434895, 1, 1, 0.569798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486428,-99) , 
11, 1.70886, 0, 0, 0.504922,-99) , 
8, 1.9692, 0, 0, 0.516614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489423,-99) , 
12, -0.229892, 0, 0, 0.512408,-99) , 
NN(
0, 
0, 
-1, 0.0231411, 0, -1, 0.47404,-99) , 
11, -2.0837, 1, 0, 0.495338,-99) , 
6, -0.345203, 1, 0, 0.504363,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.040695);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.26804, 1, 1, 0.520525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49263,-99) , 
12, -0.351205, 0, 0, 0.513374,-99) , 
NN(
0, 
0, 
-1, 0.0621603, 0, -1, 0.484353,-99) , 
11, -2.16976, 1, 0, 0.498336,-99) , 
6, -0.438754, 1, 0, 0.506379,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0380706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484214,-99) , 
12, -1.75185, 0, 0, 0.536314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497477,-99) , 
10, 0.428564, 1, 0, 0.510364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409155,-99) , 
11, -2.07049, 1, 0, 0.486286,-99) , 
12, 0.0490725, 0, 0, 0.502947,-99) , 
11, -3.2647, 1, 0, 0.5061,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0210455);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563155,-99) , 
NN(
NN(
0, 
0, 
-1, 3.82065, 0, 1, 0.50728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435988,-99) , 
8, 4.56256, 1, 0, 0.505185,-99) , 
3, 4.37409, 0, 0, 0.506869,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0237729);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475526,-99) , 
9, -951.286, 0, 0, 0.54537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434877,-99) , 
5, 0.999683, 0, 0, 0.503006,-99) , 
5, 0.999524, 1, 0, 0.505671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460689,-99) , 
5, 0.998572, 0, 0, 0.504001,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0480373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.51152, 1, 1, 0.566749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44911,-99) , 
11, -3.77337, 1, 0, 0.486063,-99) , 
12, -1.18377, 0, 0, 0.520551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498527,-99) , 
8, 2.05755, 0, 0, 0.50669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475584,-99) , 
11, -2.55503, 1, 0, 0.485245,-99) , 
12, 0.658001, 0, 0, 0.497882,-99) , 
11, -2.7431, 1, 0, 0.502086,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0196132);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543035,-99) , 
NN(
NN(
0, 
0, 
-1, -0.72825, 1, 1, 0.505904,-99) , 
NN(
0, 
0, 
-1, -0.797981, 1, -1, 0.462015,-99) , 
8, 1.3094, 0, 0, 0.502559,-99) , 
6, -0.906448, 1, 0, 0.504257,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0381823);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479081,-99) , 
12, -1.75185, 0, 0, 0.530389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470734,-99) , 
12, -0.189627, 0, 0, 0.500481,-99) , 
11, -3.26541, 1, 0, 0.503338,-99) , 
NN(
0, 
0, 
-1, 0.0728003, 0, -1, 0.47259,-99) , 
0, 0.503804, 1, 0, 0.500293,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0231358);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495517,-99) , 
11, -2.65528, 1, 0, 0.500918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439771,-99) , 
8, 4.39329, 1, 0, 0.498815,-99) , 
3, 4.2117, 0, 0, 0.500739,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0335317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478934,-99) , 
6, 0.284088, 1, 0, 0.504527,-99) , 
3, 4.13646, 0, 0, 0.506576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481496,-99) , 
10, 1.57153, 0, 0, 0.509074,-99) , 
NN(
0, 
0, 
-1, 1.95237, 1, -1, 0.473403,-99) , 
9, -951.286, 0, 0, 0.487904,-99) , 
10, 1.00001, 1, 0, 0.502786,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0227281);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.84935, 1, 1, 0.538143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496795,-99) , 
3, 3.24144, 0, 0, 0.501034,-99) , 
NN(
0, 
0, 
-1, -2.64553, 0, -1, 0.462605,-99) , 
8, 3.88685, 1, 0, 0.498065,-99) , 
3, 3.92544, 0, 0, 0.500988,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0292021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480906,-99) , 
9, -951.286, 0, 0, 0.540832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486536,-99) , 
6, 0.0232984, 1, 0, 0.501642,-99) , 
5, 0.999524, 1, 0, 0.504075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461298,-99) , 
5, 0.998571, 0, 0, 0.502492,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0219704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.3802, 0, 1, 0.530651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496616,-99) , 
3, 3.43649, 0, 0, 0.501727,-99) , 
7, 0.0101986, 0, 0, 0.505219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468256,-99) , 
7, 0.0237968, 1, 0, 0.503687,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0324469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47558,-99) , 
9, -951.286, 0, 0, 0.53348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488436,-99) , 
9, -948.956, 1, 0, 0.500993,-99) , 
5, 0.999524, 1, 0, 0.50418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461647,-99) , 
4, 9.39629, 1, 0, 0.502656,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0416725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.75113, 1, 1, 0.566233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456024,-99) , 
11, -3.77336, 1, 0, 0.488781,-99) , 
12, -1.12788, 0, 0, 0.518636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49144,-99) , 
9, -951.286, 0, 0, 0.523079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464759,-99) , 
12, 0.0865358, 0, 0, 0.493752,-99) , 
10, -0.714253, 1, 0, 0.498925,-99) , 
11, -2.7431, 1, 0, 0.50258,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0521669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479579,-99) , 
8, 1.41074, 0, 0, 0.526525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460538,-99) , 
11, -3.82818, 1, 0, 0.487043,-99) , 
12, -1.13466, 0, 0, 0.512913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492236,-99) , 
12, 0.956316, 0, 0, 0.504421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45751,-99) , 
6, -0.536533, 1, 0, 0.482934,-99) , 
11, -0.918393, 1, 0, 0.494749,-99) , 
10, -0.428545, 1, 0, 0.500696,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0457733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494345,-99) , 
11, -1.79827, 1, 0, 0.536495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337549,-99) , 
9, -1.28567, 0, 0, 0.49621,-99) , 
9, -951.286, 1, 0, 0.515523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497757,-99) , 
3, 2.18323, 0, 0, 0.503014,-99) , 
NN(
0, 
0, 
-1, 0.278921, 0, -1, 0.467365,-99) , 
6, -0.221843, 1, 0, 0.494885,-99) , 
3, 2.7092, 0, 0, 0.50215,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0234615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494829,-99) , 
8, 1.69647, 0, 0, 0.519079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497448,-99) , 
6, -0.812899, 1, 0, 0.500444,-99) , 
7, 0.00566835, 0, 0, 0.506548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471653,-99) , 
7, 0.0238076, 1, 0, 0.505096,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0438877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439648,-99) , 
3, 2.94677, 0, 0, 0.477323,-99) , 
9, -951.286, 0, 0, 0.532144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483203,-99) , 
12, -1.09878, 0, 0, 0.518265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483889,-99) , 
9, -951.203, 1, 0, 0.499123,-99) , 
10, -0.714256, 1, 0, 0.50374,-99) , 
5, 0.999524, 1, 0, 0.506603,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0414213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435245,-99) , 
6, 0.216087, 0, 0, 0.470858,-99) , 
9, -951.286, 0, 0, 0.528559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478165,-99) , 
12, -1.42485, 0, 0, 0.515622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489416,-99) , 
11, -1.71167, 1, 0, 0.498728,-99) , 
10, -0.714256, 1, 0, 0.502802,-99) , 
5, 0.999524, 1, 0, 0.505367,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.032125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48403,-99) , 
12, -1.58529, 0, 0, 0.540688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487304,-99) , 
12, 0.273512, 0, 0, 0.501993,-99) , 
11, -3.10801, 1, 0, 0.505998,-99) , 
NN(
0, 
0, 
-1, 4.08162, 0, -1, 0.471709,-99) , 
6, 0.68372, 1, 0, 0.504138,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0242898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453261,-99) , 
3, 4.3457, 0, 0, 0.500763,-99) , 
8, 4.35577, 1, 0, 0.526071,-99) , 
NN(
NN(
0, 
0, 
-1, -2.87602, 1, 1, 0.504565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452486,-99) , 
8, 3.87258, 1, 0, 0.501919,-99) , 
3, 3.69107, 0, 0, 0.50459,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0333359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.90862, 1, 1, 0.563042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464762,-99) , 
12, -1.89781, 0, 0, 0.529529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46367,-99) , 
9, -951.286, 0, 0, 0.52447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480613,-99) , 
12, 0.200054, 0, 0, 0.494479,-99) , 
5, 0.999524, 1, 0, 0.497199,-99) , 
11, -3.19669, 1, 0, 0.500566,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0380224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4874,-99) , 
11, -2.48796, 1, 0, 0.504051,-99) , 
6, -0.0978256, 1, 0, 0.510697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493747,-99) , 
11, -2.10082, 1, 0, 0.500458,-99) , 
NN(
0, 
0, 
-1, 0.0804008, 0, -1, 0.459841,-99) , 
6, -0.246301, 1, 0, 0.493814,-99) , 
3, 2.44862, 0, 0, 0.501062,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0223112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479124,-99) , 
12, -1.7021, 0, 0, 0.52674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492219,-99) , 
3, 1.42647, 0, 0, 0.525237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475388,-99) , 
12, -0.528486, 0, 0, 0.497958,-99) , 
10, -1.28564, 1, 0, 0.500226,-99) , 
11, -3.23012, 1, 0, 0.502846,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0290572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496057,-99) , 
5, 0.999524, 1, 0, 0.504743,-99) , 
6, 0.0502971, 1, 0, 0.511452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494068,-99) , 
8, 1.53812, 0, 0, 0.52764,-99) , 
NN(
0, 
0, 
-1, -0.428547, 0, -1, 0.489852,-99) , 
10, -1.28571, 1, 0, 0.494733,-99) , 
3, 2.70916, 0, 0, 0.500641,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0308467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4728,-99) , 
11, -3.57, 1, 0, 0.500061,-99) , 
12, -1.11137, 0, 0, 0.520113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476365,-99) , 
8, 1.38016, 0, 0, 0.524105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472025,-99) , 
12, -0.140102, 0, 0, 0.496837,-99) , 
10, -0.999998, 1, 0, 0.500146,-99) , 
11, -2.88184, 1, 0, 0.50331,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0536043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461228,-99) , 
11, -1.58248, 1, 0, 0.503459,-99) , 
12, 1.00121, 0, 0, 0.508488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483837,-99) , 
12, 3.22995, 1, 0, 0.513153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45163,-99) , 
11, 1.73164, 0, 0, 0.472516,-99) , 
9, -948.956, 0, 0, 0.486317,-99) , 
11, -0.787084, 1, 0, 0.499977,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.019394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489401,-99) , 
9, -951.286, 0, 0, 0.536143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495756,-99) , 
10, -1.85715, 1, 0, 0.497514,-99) , 
5, 0.999524, 1, 0, 0.499892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451013,-99) , 
5, 0.998572, 0, 0, 0.498098,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0332068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.528451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478506,-99) , 
6, -0.200483, 1, 0, 0.49993,-99) , 
3, 2.80115, 0, 0, 0.505181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545922,-99) , 
NN(
0, 
0, 
-1, 4.4704, 1, -1, 0.472277,-99) , 
3, 4.3387, 0, 0, 0.485376,-99) , 
6, 0.399176, 1, 0, 0.501749,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0139654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.55321, 1, 1, 0.534235,-99) , 
NN(
0, 
0, 
-1, 3.68903, 1, -1, 0.496927,-99) , 
3, 3.72354, 0, 0, 0.500014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442691,-99) , 
6, 0.772195, 1, 0, 0.498538,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0416584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499695,-99) , 
11, -2.47911, 1, 0, 0.515247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477509,-99) , 
9, -948.956, 0, 0, 0.490129,-99) , 
11, -0.784629, 1, 0, 0.503749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551477,-99) , 
NN(
0, 
0, 
-1, -1.5467, 0, -1, 0.467183,-99) , 
11, -3.82603, 1, 0, 0.486341,-99) , 
12, -0.876331, 0, 0, 0.500877,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0370175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482987,-99) , 
9, -951.286, 0, 0, 0.504483,-99) , 
12, 1.21901, 0, 0, 0.520714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496618,-99) , 
12, -0.0675751, 0, 0, 0.520863,-99) , 
NN(
0, 
0, 
-1, 0.104209, 0, -1, 0.490838,-99) , 
11, -1.97398, 1, 0, 0.500674,-99) , 
10, -1, 1, 0, 0.504074,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0266054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999997, 1, 1, 0.518931,-99) , 
NN(
0, 
0, 
-1, 0.489966, 0, -1, 0.491567,-99) , 
0, 0.492104, 0, 0, 0.513713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480263,-99) , 
6, 0.118632, 1, 0, 0.496992,-99) , 
5, 0.999524, 1, 0, 0.499995,-99) , 
0, 0.49809, 1, 0, 0.506793,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0350624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47398,-99) , 
11, -3.55789, 1, 0, 0.498538,-99) , 
12, -0.961702, 0, 0, 0.520464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489767,-99) , 
3, 1.38112, 0, 0, 0.531426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464205,-99) , 
12, -0.216576, 0, 0, 0.499634,-99) , 
10, -1.28568, 1, 0, 0.502173,-99) , 
11, -2.69985, 1, 0, 0.505731,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0289523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454094,-99) , 
10, -1.28529, 0, 0, 0.503128,-99) , 
6, -0.161129, 1, 0, 0.509175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539824,-99) , 
NN(
0, 
0, 
-1, -0.373172, 1, -1, 0.489894,-99) , 
10, -1.57148, 1, 0, 0.494673,-99) , 
3, 2.2322, 0, 0, 0.501867,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0321934);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493997,-99) , 
3, 1.21345, 0, 0, 0.526042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481353,-99) , 
11, -1.11818, 1, 0, 0.497948,-99) , 
7, 0.0090688, 0, 0, 0.502302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465099,-99) , 
7, 0.0238076, 1, 0, 0.500746,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0214399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49048,-99) , 
9, -951.286, 0, 0, 0.539281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496109,-99) , 
10, -0.714256, 1, 0, 0.501118,-99) , 
5, 0.999524, 1, 0, 0.503493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461835,-99) , 
5, 0.998571, 0, 0, 0.501943,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0196487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493204,-99) , 
11, -2.60116, 1, 0, 0.538986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444478,-99) , 
8, 3.9083, 1, 0, 0.500991,-99) , 
3, 3.70767, 0, 0, 0.50357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466687,-99) , 
8, 4.71038, 1, 0, 0.502005,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0207673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478028,-99) , 
0, 0.489972, 0, 0, 0.505369,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485435,-99) , 
4, 4.31635, 1, 0, 0.508968,-99) , 
NN(
0, 
0, 
-1, -0.345205, 1, -1, 0.485972,-99) , 
2, 0.0713938, 0, 0, 0.490631,-99) , 
0, 0.499995, 1, 0, 0.500481,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0188879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69004, 0, 1, 0.520485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496345,-99) , 
11, 2.1762, 0, 0, 0.498916,-99) , 
7, 0.00793218, 0, 0, 0.503188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470536,-99) , 
7, 0.0237968, 1, 0, 0.501826,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0223016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49646,-99) , 
3, 2.91938, 0, 0, 0.537443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493153,-99) , 
12, 1.12226, 0, 0, 0.499821,-99) , 
5, 0.999524, 1, 0, 0.502155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460846,-99) , 
5, 0.998571, 0, 0, 0.500629,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0233076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470107,-99) , 
12, -1.87924, 0, 0, 0.528666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49455,-99) , 
9, -951.286, 0, 0, 0.515004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476672,-99) , 
12, -0.303103, 0, 0, 0.495985,-99) , 
10, -0.714241, 1, 0, 0.499739,-99) , 
11, -3.43055, 1, 0, 0.50186,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0352064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0416894, 0, 1, 0.512619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421424,-99) , 
12, 2.04902, 0, 0, 0.483615,-99) , 
8, 1.4575, 0, 0, 0.507325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480014,-99) , 
11, -1.7369, 1, 0, 0.504177,-99) , 
NN(
0, 
0, 
-1, 1.47141, 0, -1, 0.472023,-99) , 
3, 2.46373, 0, 0, 0.487717,-99) , 
10, 0.714263, 1, 0, 0.501834,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0196419);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494551,-99) , 
11, -3.10886, 1, 0, 0.497649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456999,-99) , 
8, 4.34262, 1, 0, 0.496132,-99) , 
3, 4.16592, 0, 0, 0.497678,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0189573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495317,-99) , 
4, 4.79158, 1, 0, 0.517718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477208,-99) , 
6, 0.59018, 1, 0, 0.501193,-99) , 
2, -0.0715808, 1, 0, 0.504081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51181,-99) , 
NN(
0, 
0, 
-1, 0.376297, 0, -1, 0.473662,-99) , 
2, 0.0728003, 0, 0, 0.483508,-99) , 
0, 0.503804, 1, 0, 0.502044,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0307126);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496417,-99) , 
9, -951.286, 0, 0, 0.51992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485329,-99) , 
3, 1.96814, 0, 0, 0.496594,-99) , 
10, -0.428575, 1, 0, 0.50171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532963,-99) , 
NN(
0, 
0, 
-1, -1.81091, 0, -1, 0.469941,-99) , 
3, 3.79368, 0, 0, 0.484267,-99) , 
12, -0.770318, 0, 0, 0.49851,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0258533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57924, 1, 1, 0.529983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478701,-99) , 
10, -0.1429, 1, 0, 0.488942,-99) , 
4, 4.4218, 1, 0, 0.513859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496056,-99) , 
11, -2.65528, 1, 0, 0.500689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456958,-99) , 
3, 3.39028, 0, 0, 0.484533,-99) , 
6, 0.215152, 1, 0, 0.496491,-99) , 
2, -0.0711356, 1, 0, 0.499669,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0291717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00601169, 1, 1, 0.52003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482527,-99) , 
6, -0.332101, 1, 0, 0.498982,-99) , 
3, 2.60055, 0, 0, 0.504326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479442,-99) , 
8, 4.04319, 1, 0, 0.49185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441755,-99) , 
3, 3.30568, 0, 0, 0.483327,-99) , 
6, 0.403094, 1, 0, 0.50074,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0155815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0662205, 0, 1, 0.504578,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.486709,-99) , 
4, 4.75996, 1, 0, 0.501181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451474,-99) , 
5, 0.998571, 0, 0, 0.499352,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0141448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529011,-99) , 
NN(
0, 
0, 
-1, 4.36796, 1, -1, 0.49518,-99) , 
3, 4.18189, 0, 0, 0.496633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456349,-99) , 
10, 2.14281, 1, 0, 0.495339,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0116636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.539084,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.498064,-99) , 
5, 0.999524, 1, 0, 0.500652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452796,-99) , 
5, 0.998571, 0, 0, 0.498923,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0186179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49149,-99) , 
11, -2.40212, 1, 0, 0.522196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461454,-99) , 
8, 3.49831, 1, 0, 0.498247,-99) , 
3, 3.51787, 0, 0, 0.501192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44798,-99) , 
6, 0.777259, 1, 0, 0.499857,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0451421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493302,-99) , 
11, -2.2398, 1, 0, 0.508889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467024,-99) , 
11, 1.05527, 0, 0, 0.489972,-99) , 
8, 1.79644, 0, 0, 0.501863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478958,-99) , 
11, -3.10719, 1, 0, 0.502304,-99) , 
NN(
0, 
0, 
-1, 3.01389, 0, -1, 0.460359,-99) , 
12, -1.38391, 0, 0, 0.486712,-99) , 
12, -0.563576, 0, 0, 0.498412,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0324951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2778, 1, 1, 0.510204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464207,-99) , 
12, -1.63697, 0, 0, 0.506786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482884,-99) , 
8, 1.2686, 0, 0, 0.501907,-99) , 
NN(
0, 
0, 
-1, 1.35239, 0, -1, 0.461131,-99) , 
6, -0.738652, 1, 0, 0.486076,-99) , 
3, 1.47768, 0, 0, 0.502295,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0306989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492172,-99) , 
11, -0.774511, 1, 0, 0.504129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464483,-99) , 
11, -3.53054, 1, 0, 0.485859,-99) , 
12, -0.876331, 0, 0, 0.501247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461433,-99) , 
5, 0.998571, 0, 0, 0.49977,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.038798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485815,-99) , 
12, -0.984054, 0, 0, 0.525392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481096,-99) , 
12, 0.99446, 0, 0, 0.494261,-99) , 
11, -2.5246, 1, 0, 0.500375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445724,-99) , 
3, 4.36765, 0, 0, 0.474322,-99) , 
8, 4.31493, 1, 0, 0.498309,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0160833);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493187,-99) , 
11, -2.55855, 1, 0, 0.536736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460979,-99) , 
8, 3.70789, 1, 0, 0.497752,-99) , 
3, 3.70632, 0, 0, 0.500398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455115,-99) , 
8, 4.71019, 1, 0, 0.49849,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0308247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.677355, 1, 1, 0.535273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483164,-99) , 
11, -1.35951, 1, 0, 0.49832,-99) , 
6, -0.624134, 1, 0, 0.501051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486632,-99) , 
8, 1.19475, 0, 0, 0.501486,-99) , 
NN(
0, 
0, 
-1, 1.35646, 0, -1, 0.448931,-99) , 
6, -0.779253, 1, 0, 0.481746,-99) , 
8, 1.47235, 0, 0, 0.497828,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0150652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489196,-99) , 
9, -951.286, 0, 0, 0.524939,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.495785,-99) , 
5, 0.999524, 1, 0, 0.497592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457994,-99) , 
5, 0.998571, 0, 0, 0.496136,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0281655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476227,-99) , 
3, 1.22729, 0, 0, 0.505411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483582,-99) , 
11, -3.20228, 1, 0, 0.487545,-99) , 
7, 0.00226723, 0, 0, 0.499794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461176,-99) , 
7, 0.0238076, 1, 0, 0.49821,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0214465);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477454,-99) , 
11, -1.97084, 1, 0, 0.52522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466988,-99) , 
8, 3.29178, 1, 0, 0.497047,-99) , 
3, 3.5072, 0, 0, 0.500058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466442,-99) , 
8, 4.71033, 1, 0, 0.498646,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0252746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476789,-99) , 
6, 0.12258, 0, 0, 0.489738,-99) , 
9, -951.286, 0, 0, 0.520028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486243,-99) , 
5, 0.999985, 0, 0, 0.49655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444509,-99) , 
5, 0.999683, 0, 0, 0.495015,-99) , 
5, 0.999524, 1, 0, 0.497496,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0362365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477533,-99) , 
3, 3.57375, 0, 0, 0.497164,-99) , 
8, 3.33825, 1, 0, 0.505224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487743,-99) , 
10, -0.71427, 1, 0, 0.494356,-99) , 
NN(
0, 
0, 
-1, -0.324882, 0, -1, 0.444742,-99) , 
6, 0.07323, 1, 0, 0.489754,-99) , 
3, 2.93583, 0, 0, 0.494222,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0272209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462621,-99) , 
4, 7.05821, 1, 0, 0.513435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490038,-99) , 
2, 0.0779463, 0, 0, 0.493995,-99) , 
2, -0.0716814, 1, 0, 0.497529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445823,-99) , 
6, 0.771149, 1, 0, 0.496172,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.010219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46425,-99) , 
8, 3.8463, 1, 0, 0.497669,-99) , 
3, 3.84478, 0, 0, 0.499391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473515,-99) , 
8, 4.6334, 1, 0, 0.498112,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0248607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.485889, 1, 1, 0.506769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445433,-99) , 
6, -0.742471, 1, 0, 0.482141,-99) , 
8, 1.61382, 0, 0, 0.501059,-99) , 
NN(
0, 
0, 
-1, 4.08162, 0, -1, 0.466132,-99) , 
6, 0.68371, 1, 0, 0.499159,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0363225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.40212, 1, 1, 0.527828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468938,-99) , 
3, 3.77415, 0, 0, 0.491366,-99) , 
6, 0.520489, 1, 0, 0.508636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489736,-99) , 
11, -1.97464, 1, 0, 0.497301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415805,-99) , 
11, -2.46671, 0, 0, 0.453869,-99) , 
8, 3.18521, 1, 0, 0.49306,-99) , 
3, 3.19163, 0, 0, 0.496479,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0335237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490027,-99) , 
9, -948.956, 0, 0, 0.498034,-99) , 
3, 2.35393, 0, 0, 0.502275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486966,-99) , 
9, -951.286, 1, 0, 0.500407,-99) , 
NN(
0, 
0, 
-1, -0.280507, 0, -1, 0.473791,-99) , 
3, 3.03149, 0, 0, 0.488914,-99) , 
6, -0.158737, 1, 0, 0.496132,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0306941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492497,-99) , 
3, 1.25759, 0, 0, 0.543821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4904,-99) , 
9, -948.956, 1, 0, 0.500127,-99) , 
10, -1.28571, 1, 0, 0.503081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538025,-99) , 
NN(
0, 
0, 
-1, -1.48477, 0, -1, 0.466763,-99) , 
11, -3.84109, 1, 0, 0.479842,-99) , 
12, -0.737347, 0, 0, 0.49865,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0332063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41312, 0, 1, 0.53269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488422,-99) , 
8, 1.79644, 0, 0, 0.499806,-99) , 
10, -0.999998, 1, 0, 0.503079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473512,-99) , 
12, -1.48073, 0, 0, 0.508445,-99) , 
NN(
0, 
0, 
-1, 3.37996, 0, -1, 0.46538,-99) , 
11, -3.18137, 1, 0, 0.484144,-99) , 
12, -0.498082, 0, 0, 0.498495,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0355688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483882,-99) , 
12, 1.49642, 0, 0, 0.502674,-99) , 
11, -1.88175, 1, 0, 0.507628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488918,-99) , 
6, -0.0200356, 1, 0, 0.494482,-99) , 
NN(
0, 
0, 
-1, 0.362153, 0, -1, 0.452686,-99) , 
3, 2.3344, 0, 0, 0.489046,-99) , 
6, -0.251673, 1, 0, 0.498096,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0155572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499907,-99) , 
6, -0.662741, 1, 0, 0.503807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447081,-99) , 
6, -0.821618, 1, 0, 0.481823,-99) , 
8, 1.37661, 0, 0, 0.500738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459693,-99) , 
6, 0.76807, 1, 0, 0.499638,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0379692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464867,-99) , 
3, 3.33379, 0, 0, 0.489102,-99) , 
12, -1.50453, 0, 0, 0.52105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493128,-99) , 
10, 0.428604, 1, 0, 0.504281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461226,-99) , 
11, -2.50667, 1, 0, 0.483109,-99) , 
12, 0.13094, 0, 0, 0.497491,-99) , 
11, -3.16769, 1, 0, 0.500031,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0190476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494216,-99) , 
3, 1.89295, 0, 0, 0.503309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472518,-99) , 
7, 0.0238076, 1, 0, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453719,-99) , 
6, 0.772286, 1, 0, 0.500732,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0369209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452197,-99) , 
11, -3.80284, 1, 0, 0.4873,-99) , 
12, -1.3823, 0, 0, 0.520068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498793,-99) , 
8, 2.12139, 0, 0, 0.506006,-99) , 
NN(
0, 
0, 
-1, -2.05019, 1, -1, 0.473042,-99) , 
12, 0.191085, 0, 0, 0.495487,-99) , 
11, -3.05398, 1, 0, 0.498588,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0303182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.420046, 1, 1, 0.541203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490785,-99) , 
10, -1.28601, 1, 0, 0.497962,-99) , 
8, 1.86949, 0, 0, 0.508951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539853,-99) , 
NN(
0, 
0, 
-1, -1.27516, 0, -1, 0.490635,-99) , 
11, -3.82583, 1, 0, 0.49378,-99) , 
6, -0.345206, 1, 0, 0.500261,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0354013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.25012, 1, 1, 0.510007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443831,-99) , 
11, 1.62874, 0, 0, 0.494166,-99) , 
13, 1.53921, 0, 0, 0.505843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495861,-99) , 
8, 3.70897, 1, 0, 0.512758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444584,-99) , 
11, -2.9434, 1, 0, 0.468344,-99) , 
3, 3.13225, 0, 0, 0.490485,-99) , 
12, -0.403351, 0, 0, 0.501795,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0294156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490116,-99) , 
11, -2.16658, 1, 0, 0.519116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471371,-99) , 
12, -0.160744, 0, 0, 0.49766,-99) , 
3, 3.05543, 0, 0, 0.501531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465227,-99) , 
3, 3.78413, 0, 0, 0.493709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458934,-99) , 
13, 4.69049, 1, 0, 0.480152,-99) , 
6, 0.59018, 1, 0, 0.499617,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0293289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487855,-99) , 
11, -2.36698, 1, 0, 0.53588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470096,-99) , 
3, 3.9014, 0, 0, 0.49619,-99) , 
8, 3.95406, 1, 0, 0.512615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496873,-99) , 
3, 2.3001, 0, 0, 0.502457,-99) , 
NN(
0, 
0, 
-1, 2.71211, 0, -1, 0.476949,-99) , 
6, 0.0762233, 1, 0, 0.498475,-99) , 
3, 3.20008, 0, 0, 0.501551,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0440074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491794,-99) , 
13, 3.89337, 1, 0, 0.551179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465163,-99) , 
12, -1.85527, 0, 0, 0.522661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493986,-99) , 
10, 0.714172, 1, 0, 0.508879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466333,-99) , 
11, -2.43025, 1, 0, 0.487984,-99) , 
12, 0.264447, 0, 0, 0.501618,-99) , 
11, -3.10801, 1, 0, 0.504085,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.017602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.77849, 1, 1, 0.514689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452374,-99) , 
13, 3.20244, 1, 0, 0.500429,-99) , 
3, 3.0297, 0, 0, 0.503877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46473,-99) , 
6, 0.77115, 1, 0, 0.502848,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0267327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492316,-99) , 
12, 0.690079, 0, 0, 0.500092,-99) , 
10, -1.85673, 1, 0, 0.502059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518485,-99) , 
NN(
0, 
0, 
-1, 2.02045, 0, -1, 0.461703,-99) , 
12, 7.13795, 0, 0, 0.480229,-99) , 
3, 1.24245, 0, 0, 0.499287,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0190543);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498619,-99) , 
6, -0.598039, 1, 0, 0.502524,-99) , 
NN(
0, 
0, 
-1, 1.67359, 0, -1, 0.464872,-99) , 
3, 1.31055, 0, 0, 0.498125,-99) , 
12, 7.31948, 0, 0, 0.499566,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0460618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487082,-99) , 
8, 1.61286, 0, 0, 0.519905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4565,-99) , 
3, 2.95493, 0, 0, 0.489106,-99) , 
12, -1.13768, 0, 0, 0.509249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490732,-99) , 
12, 0.477521, 0, 0, 0.509827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478442,-99) , 
11, 1.4087, 0, 0, 0.48705,-99) , 
11, -1.44772, 1, 0, 0.496686,-99) , 
10, -0.428545, 1, 0, 0.50078,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0321262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492741,-99) , 
8, 1.65987, 0, 0, 0.527449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46795,-99) , 
8, 2.03333, 0, 0, 0.502719,-99) , 
6, -0.529709, 1, 0, 0.506527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480836,-99) , 
6, -0.800735, 1, 0, 0.498931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439614,-99) , 
12, 2.48318, 0, 0, 0.485313,-99) , 
8, 1.47541, 0, 0, 0.502951,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0310635);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490224,-99) , 
12, -0.208428, 0, 0, 0.510018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484892,-99) , 
12, 1.34658, 0, 0, 0.494638,-99) , 
11, -2.09756, 1, 0, 0.499641,-99) , 
10, -1.8571, 1, 0, 0.501178,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0213819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.27528, 1, 1, 0.505675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449512,-99) , 
12, -1.948, 0, 0, 0.503429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485404,-99) , 
10, -0.428609, 1, 0, 0.49535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426878,-99) , 
12, 2.23462, 0, 0, 0.482298,-99) , 
8, 1.47235, 0, 0, 0.499878,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0371707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482435,-99) , 
11, -2.32896, 1, 0, 0.535202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456776,-99) , 
3, 4.28715, 0, 0, 0.484203,-99) , 
8, 4.32922, 1, 0, 0.510578,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484223,-99) , 
8, 1.67332, 0, 0, 0.499217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461173,-99) , 
11, -3.45514, 1, 0, 0.474805,-99) , 
12, -0.549621, 0, 0, 0.494935,-99) , 
3, 3.44552, 0, 0, 0.497438,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.023564);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487012,-99) , 
12, -0.968883, 0, 0, 0.516649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487875,-99) , 
12, 0.75238, 0, 0, 0.495662,-99) , 
11, -2.64627, 1, 0, 0.499706,-99) , 
10, -1.85715, 1, 0, 0.500997,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0260141);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497287,-99) , 
12, -0.0548752, 0, 0, 0.511579,-99) , 
NN(
0, 
0, 
-1, 1.42807, 0, -1, 0.489916,-99) , 
11, -2.04995, 1, 0, 0.497207,-99) , 
10, -1.85714, 1, 0, 0.498663,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0337276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469147,-99) , 
10, -1.36731, 0, 0, 0.490903,-99) , 
12, -1.10503, 0, 0, 0.515046,-99) , 
NN(
NN(
0, 
0, 
-1, 0.720613, 0, 1, 0.511889,-99) , 
NN(
0, 
0, 
-1, -0.720895, 1, -1, 0.484335,-99) , 
11, -1.16296, 1, 0, 0.498362,-99) , 
10, -0.714256, 1, 0, 0.502385,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0325119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490507,-99) , 
9, -951.286, 1, 0, 0.503036,-99) , 
6, -0.101769, 1, 0, 0.507931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492966,-99) , 
3, 1.63142, 0, 0, 0.503639,-99) , 
NN(
0, 
0, 
-1, 0.231751, 0, -1, 0.477955,-99) , 
6, -0.364996, 1, 0, 0.496205,-99) , 
3, 2.47976, 0, 0, 0.50113,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0171646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.160408, 0, 1, 0.530467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495565,-99) , 
10, -0.142855, 1, 0, 0.501144,-99) , 
2, -0.213742, 1, 0, 0.502747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464956,-99) , 
4, 9.39852, 1, 0, 0.501401,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0212066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488966,-99) , 
12, -0.379854, 0, 0, 0.502296,-99) , 
3, 3.76774, 0, 0, 0.504027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457993,-99) , 
3, 4.28814, 0, 0, 0.48249,-99) , 
8, 4.31477, 1, 0, 0.502294,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0364762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460311,-99) , 
12, -1.69283, 0, 0, 0.482794,-99) , 
12, -1.13768, 0, 0, 0.51197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496697,-99) , 
12, 0.332557, 0, 0, 0.512153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477495,-99) , 
12, 1.864, 0, 0, 0.489943,-99) , 
11, -1.67493, 1, 0, 0.498467,-99) , 
10, -0.714284, 1, 0, 0.501696,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0255725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.269436, 1, 1, 0.506679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479601,-99) , 
9, -948.87, 0, 0, 0.492748,-99) , 
8, 2.1203, 0, 0, 0.501162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466995,-99) , 
7, 0.0237399, 1, 0, 0.49975,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0306084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.13369, 1, 1, 0.52714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472962,-99) , 
3, 4.11974, 0, 0, 0.490709,-99) , 
8, 4.16784, 1, 0, 0.510899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491811,-99) , 
11, -2.32547, 1, 0, 0.497203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450419,-99) , 
13, 3.40249, 1, 0, 0.494762,-99) , 
3, 3.18837, 0, 0, 0.498325,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0292631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.145209, 1, 1, 0.539227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491575,-99) , 
11, -1.67727, 1, 0, 0.502547,-99) , 
6, -0.617196, 1, 0, 0.505472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477226,-99) , 
8, 1.0098, 0, 0, 0.499744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422042,-99) , 
12, 2.17365, 0, 0, 0.485438,-99) , 
8, 1.47235, 0, 0, 0.502129,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0324176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467482,-99) , 
10, 2.23812, 1, 0, 0.506791,-99) , 
10, -0.999828, 1, 0, 0.510135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493316,-99) , 
12, 0.382939, 0, 0, 0.502404,-99) , 
NN(
0, 
0, 
-1, 0.0920156, 1, -1, 0.457156,-99) , 
11, -1.17184, 1, 0, 0.496597,-99) , 
12, 1.12226, 0, 0, 0.501855,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0242363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496712,-99) , 
10, -0.0476116, 1, 0, 0.502321,-99) , 
10, -1.57143, 1, 0, 0.504808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523148,-99) , 
NN(
0, 
0, 
-1, -3.00551, 1, -1, 0.463509,-99) , 
11, -3.62635, 1, 0, 0.485682,-99) , 
12, -1.01496, 0, 0, 0.502138,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.017017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495536,-99) , 
9, -951.286, 0, 0, 0.534717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497182,-99) , 
12, 1.12226, 0, 0, 0.502365,-99) , 
5, 0.999524, 1, 0, 0.504385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473959,-99) , 
5, 0.998571, 0, 0, 0.503253,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0290673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490294,-99) , 
8, 4.35301, 1, 0, 0.50548,-99) , 
6, 0.43099, 1, 0, 0.517311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490728,-99) , 
3, 1.34846, 0, 0, 0.505925,-99) , 
NN(
0, 
0, 
-1, -2.55371, 1, -1, 0.480128,-99) , 
12, -0.379854, 0, 0, 0.500495,-99) , 
3, 3.46938, 0, 0, 0.503071,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0261325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12265, 1, 1, 0.507963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460811,-99) , 
12, -1.8398, 0, 0, 0.505313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478283,-99) , 
9, -951.286, 1, 0, 0.49983,-99) , 
NN(
0, 
0, 
-1, 1.50948, 0, -1, 0.46702,-99) , 
12, 2.03796, 0, 0, 0.489497,-99) , 
8, 1.76873, 0, 0, 0.500861,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.031689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469877,-99) , 
11, -1.88483, 1, 0, 0.53149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485193,-99) , 
3, 4.36889, 0, 0, 0.496427,-99) , 
8, 3.98129, 1, 0, 0.511554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496189,-99) , 
11, -2.42822, 1, 0, 0.501846,-99) , 
NN(
0, 
0, 
-1, -2.46671, 0, -1, 0.461676,-99) , 
13, 3.19952, 1, 0, 0.497994,-99) , 
3, 3.20007, 0, 0, 0.500952,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0223858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489459,-99) , 
8, 4.66834, 1, 0, 0.518581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482928,-99) , 
12, -0.214407, 0, 0, 0.499834,-99) , 
3, 3.41386, 0, 0, 0.502643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468737,-99) , 
5, 0.998571, 0, 0, 0.501384,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0393787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.203, 0, 1, 0.522954,-99) , 
NN(
0, 
0, 
-1, -3.17048, 1, -1, 0.483815,-99) , 
12, -1.13768, 0, 0, 0.509438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492238,-99) , 
12, 0.358898, 0, 0, 0.509609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477672,-99) , 
11, 1.13786, 0, 0, 0.486213,-99) , 
11, -1.58644, 1, 0, 0.495226,-99) , 
10, -0.428536, 1, 0, 0.499864,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0292306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.338856, 0, 1, 0.510734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469483,-99) , 
13, 1.23214, 0, 0, 0.481323,-99) , 
3, 1.24242, 0, 0, 0.506644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498774,-99) , 
10, 1.57146, 0, 0, 0.51512,-99) , 
NN(
0, 
0, 
-1, 2.0476, 1, -1, 0.474448,-99) , 
9, -948.87, 0, 0, 0.490952,-99) , 
10, 1.00001, 1, 0, 0.503439,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0268516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478568,-99) , 
6, 0.746742, 1, 0, 0.503767,-99) , 
6, 0.463937, 1, 0, 0.514984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494996,-99) , 
3, 2.33793, 0, 0, 0.501311,-99) , 
NN(
0, 
0, 
-1, 2.85583, 0, -1, 0.47504,-99) , 
6, 0.163143, 1, 0, 0.497076,-99) , 
3, 3.46938, 0, 0, 0.499804,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.025261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498574,-99) , 
13, 3.58606, 1, 0, 0.545297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451949,-99) , 
3, 3.31313, 0, 0, 0.478672,-99) , 
12, -1.50345, 0, 0, 0.51591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494571,-99) , 
5, 0.999524, 1, 0, 0.496876,-99) , 
10, -1.57139, 1, 0, 0.498803,-99) , 
11, -2.88184, 1, 0, 0.501465,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0309988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470205,-99) , 
12, -1.90727, 0, 0, 0.493329,-99) , 
12, -1.45439, 0, 0, 0.523973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493647,-99) , 
13, 1.62988, 0, 0, 0.507074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457367,-99) , 
11, -2.17435, 1, 0, 0.490113,-99) , 
12, 0.0490725, 0, 0, 0.502022,-99) , 
11, -3.17128, 1, 0, 0.504369,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0141504);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534396,-99) , 
NN(
NN(
0, 
0, 
-1, -0.719154, 1, 1, 0.503633,-99) , 
NN(
0, 
0, 
-1, 1.11534, 0, -1, 0.460974,-99) , 
8, 1.26657, 0, 0, 0.500868,-99) , 
12, 7.31948, 0, 0, 0.502221,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0134067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538489,-99) , 
NN(
NN(
0, 
0, 
-1, -0.719234, 1, 1, 0.503265,-99) , 
NN(
0, 
0, 
-1, -0.848558, 1, -1, 0.461006,-99) , 
8, 1.25287, 0, 0, 0.500733,-99) , 
12, 7.34354, 0, 0, 0.502212,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0330425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431354,-99) , 
11, 3.63777, 0, 0, 0.497606,-99) , 
8, 1.32486, 0, 0, 0.514055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496835,-99) , 
12, 0.666161, 0, 0, 0.505204,-99) , 
NN(
0, 
0, 
-1, 1.57149, 1, -1, 0.484798,-99) , 
11, -1.17285, 1, 0, 0.497797,-99) , 
6, -0.720918, 1, 0, 0.500279,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0290117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495964,-99) , 
3, 1.29433, 0, 0, 0.541266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465255,-99) , 
11, -3.29867, 1, 0, 0.492512,-99) , 
12, -1.03329, 0, 0, 0.519379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495543,-99) , 
12, 0.475719, 0, 0, 0.506266,-99) , 
NN(
0, 
0, 
-1, 1.66666, 1, -1, 0.49159,-99) , 
11, -1.45797, 1, 0, 0.498282,-99) , 
10, -1, 1, 0, 0.501833,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0209936);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.00006, 1, 1, 0.520103,-99) , 
NN(
NN(
0, 
0, 
-1, -0.585433, 1, 1, 0.504596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426688,-99) , 
8, 1.57441, 0, 0, 0.500678,-99) , 
11, 0.730904, 0, 0, 0.504616,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0202955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499695,-99) , 
11, -2.61214, 1, 0, 0.541383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484201,-99) , 
8, 4.68756, 1, 0, 0.519025,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28571, 1, 1, 0.505859,-99) , 
NN(
0, 
0, 
-1, -1.76612, 0, -1, 0.486343,-99) , 
12, -0.457833, 0, 0, 0.501711,-99) , 
3, 3.69099, 0, 0, 0.503604,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.034284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.6452, 0, 1, 0.52023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441007,-99) , 
11, -1.68405, 1, 0, 0.500393,-99) , 
12, 0.356305, 0, 0, 0.508011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48284,-99) , 
11, -2.12971, 1, 0, 0.491181,-99) , 
6, -0.720432, 1, 0, 0.494239,-99) , 
10, 0.142874, 1, 0, 0.501467,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.020337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.37655, 1, 1, 0.529984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479592,-99) , 
11, -2.04584, 1, 0, 0.517881,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28569, 1, 1, 0.502915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464352,-99) , 
11, -3.11999, 1, 0, 0.48147,-99) , 
12, -0.379854, 0, 0, 0.497978,-99) , 
3, 3.71684, 0, 0, 0.500081,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0347858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476303,-99) , 
8, 1.12309, 0, 0, 0.504977,-99) , 
10, -0.999828, 1, 0, 0.508376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494546,-99) , 
12, 0.382977, 0, 0, 0.504024,-99) , 
NN(
0, 
0, 
-1, 0.707374, 1, -1, 0.467053,-99) , 
11, -1.58129, 1, 0, 0.494432,-99) , 
12, 1.12226, 0, 0, 0.499847,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0176203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28467, 1, 1, 0.503363,-99) , 
NN(
0, 
0, 
-1, -3.75327, 1, -1, 0.469926,-99) , 
12, -1.44458, 0, 0, 0.500283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481111,-99) , 
11, 4.41313, 0, 0, 0.498485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440567,-99) , 
12, 2.78392, 0, 0, 0.484051,-99) , 
8, 1.45459, 0, 0, 0.497663,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.033737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.36855, 1, 1, 0.516346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470349,-99) , 
9, -951.286, 0, 0, 0.485863,-99) , 
11, -1.80996, 1, 0, 0.509991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488848,-99) , 
11, -1.8613, 1, 0, 0.496017,-99) , 
NN(
0, 
0, 
-1, -2.50965, 0, -1, 0.462419,-99) , 
13, 2.91924, 1, 0, 0.492316,-99) , 
3, 2.95462, 0, 0, 0.497325,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.016869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475703,-99) , 
12, -1.86644, 0, 0, 0.520178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53544,-99) , 
NN(
0, 
0, 
-1, -0.85883, 0, -1, 0.496127,-99) , 
10, -1.57139, 1, 0, 0.49819,-99) , 
11, -3.39856, 1, 0, 0.499862,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0298462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01362, 0, 1, 0.511634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470273,-99) , 
12, 1.72067, 0, 0, 0.496835,-99) , 
11, -0.913341, 1, 0, 0.504616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523177,-99) , 
NN(
0, 
0, 
-1, -1.43682, 0, -1, 0.473023,-99) , 
11, -3.78473, 1, 0, 0.487252,-99) , 
12, -1.01658, 0, 0, 0.502186,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0159131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493403,-99) , 
9, -951.286, 0, 0, 0.526621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496207,-99) , 
10, -1.8571, 1, 0, 0.497653,-99) , 
5, 0.999524, 1, 0, 0.499468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459181,-99) , 
5, 0.998571, 0, 0, 0.498003,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0314784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496214,-99) , 
8, 1.3943, 0, 0, 0.536091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488622,-99) , 
8, 2.08008, 0, 0, 0.499155,-99) , 
10, -1.28568, 1, 0, 0.501594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476734,-99) , 
11, -3.42672, 1, 0, 0.498154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456262,-99) , 
12, -1.8457, 0, 0, 0.48895,-99) , 
12, -0.764065, 0, 0, 0.499241,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0247825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.47628, 0, 1, 0.503931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476973,-99) , 
5, 0.999955, 1, 0, 0.492407,-99) , 
6, -0.0678102, 1, 0, 0.499453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411832,-99) , 
9, -951.286, 0, 0, 0.468466,-99) , 
5, 0.999048, 0, 0, 0.497722,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0419075);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47551,-99) , 
8, 1.33414, 0, 0, 0.513017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470152,-99) , 
11, -3.78781, 1, 0, 0.487066,-99) , 
12, -1.10503, 0, 0, 0.505419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453811,-99) , 
10, 1.65303, 1, 0, 0.498968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476106,-99) , 
10, 1.65306, 0, 0, 0.483413,-99) , 
9, -21.4907, 1, 0, 0.49229,-99) , 
10, -0.142862, 1, 0, 0.497821,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0308868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48488,-99) , 
12, -1.66718, 0, 0, 0.519405,-99) , 
NN(
NN(
0, 
0, 
-1, -0.999968, 1, 1, 0.508883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476476,-99) , 
11, -2.12739, 1, 0, 0.490337,-99) , 
12, 1.20994, 0, 0, 0.497871,-99) , 
11, -3.33543, 1, 0, 0.499662,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0323745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486352,-99) , 
13, 1.54083, 0, 0, 0.50105,-99) , 
10, -1.28561, 1, 0, 0.504309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497394,-99) , 
8, 3.46387, 1, 0, 0.507309,-99) , 
NN(
0, 
0, 
-1, -2.10583, 1, -1, 0.469603,-99) , 
3, 2.84674, 0, 0, 0.48971,-99) , 
12, 0.503541, 0, 0, 0.497329,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0279383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489794,-99) , 
13, 3.90862, 1, 0, 0.547164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46327,-99) , 
12, -1.87289, 0, 0, 0.518221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499666,-99) , 
3, 1.39506, 0, 0, 0.525594,-99) , 
NN(
0, 
0, 
-1, -0.471912, 0, -1, 0.491784,-99) , 
10, -1.28569, 1, 0, 0.494536,-99) , 
11, -3.16769, 1, 0, 0.49708,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0295569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479277,-99) , 
12, -1.84705, 0, 0, 0.525171,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28561, 1, 1, 0.506078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472533,-99) , 
11, -2.99519, 1, 0, 0.482524,-99) , 
12, -0.0385069, 0, 0, 0.499286,-99) , 
11, -3.33543, 1, 0, 0.501467,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0413772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482197,-99) , 
8, 2.41826, 1, 0, 0.527239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445408,-99) , 
8, 1.42728, 0, 0, 0.497386,-99) , 
9, -951.275, 0, 0, 0.509291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492089,-99) , 
12, 0.720613, 0, 0, 0.501969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482753,-99) , 
11, 5.55478, 0, 0, 0.486738,-99) , 
11, -1.16296, 1, 0, 0.494459,-99) , 
10, -0.714288, 1, 0, 0.497997,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0118842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496294,-99) , 
10, -1.22755, 0, 0, 0.528979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475597,-99) , 
12, -1.04117, 0, 0, 0.499431,-99) , 
10, -1.8571, 1, 0, 0.500694,-99) , 
11, -3.46978, 1, 0, 0.502604,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0141772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495747,-99) , 
12, -1.58846, 0, 0, 0.524901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545068,-99) , 
NN(
0, 
0, 
-1, 1.14968, 1, -1, 0.496591,-99) , 
10, -1.8571, 1, 0, 0.498134,-99) , 
11, -3.2647, 1, 0, 0.500619,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0248033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.48225, 1, 1, 0.552732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467992,-99) , 
11, -3.74394, 1, 0, 0.489578,-99) , 
12, -1.15761, 0, 0, 0.515997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535862,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.495387,-99) , 
10, -1.5714, 1, 0, 0.49743,-99) , 
11, -2.71411, 1, 0, 0.500936,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0339642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465141,-99) , 
11, -3.85749, 1, 0, 0.500549,-99) , 
12, -1.28651, 0, 0, 0.523058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452271,-99) , 
5, 0.999048, 0, 0, 0.504863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464708,-99) , 
3, 2.85572, 0, 0, 0.487425,-99) , 
12, -0.0844341, 0, 0, 0.500434,-99) , 
11, -3.10801, 1, 0, 0.503047,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0276265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.48764, 1, 1, 0.543659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469577,-99) , 
11, -3.74394, 1, 0, 0.490263,-99) , 
12, -1.27872, 0, 0, 0.516811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493477,-99) , 
8, 3.73884, 0, 0, 0.496041,-99) , 
10, -1.57137, 1, 0, 0.498061,-99) , 
11, -2.71411, 1, 0, 0.501587,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0265745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.263593, 0, 1, 0.511431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463339,-99) , 
12, 1.72383, 0, 0, 0.491072,-99) , 
8, 1.76726, 0, 0, 0.505014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496706,-99) , 
10, 1.69384, 0, 0, 0.505219,-99) , 
NN(
0, 
0, 
-1, 2.02038, 1, -1, 0.481,-99) , 
9, -948.87, 0, 0, 0.491003,-99) , 
10, 0.714278, 1, 0, 0.501058,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0114826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.525637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458357,-99) , 
5, 0.999683, 0, 0, 0.50105,-99) , 
5, 0.999524, 1, 0, 0.502581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471632,-99) , 
5, 0.998572, 0, 0, 0.501439,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.024637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.48777, 1, 1, 0.506887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477613,-99) , 
9, -951.256, 0, 0, 0.492875,-99) , 
3, 1.73747, 0, 0, 0.50256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475818,-99) , 
7, 0.0237891, 1, 0, 0.501465,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0164871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473208,-99) , 
12, -1.89156, 0, 0, 0.521911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484396,-99) , 
12, -0.197194, 0, 0, 0.496254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463683,-99) , 
5, 0.998572, 0, 0, 0.495195,-99) , 
11, -3.45298, 1, 0, 0.497069,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.02883);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495913,-99) , 
12, 0.57629, 0, 0, 0.503594,-99) , 
NN(
0, 
0, 
-1, 2.13829, 0, -1, 0.4789,-99) , 
8, 1.45487, 0, 0, 0.499255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467041,-99) , 
11, -1.55636, 1, 0, 0.477572,-99) , 
8, 1.75865, 1, 0, 0.484545,-99) , 
10, 1.00002, 1, 0, 0.496227,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.036567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.439095, 0, 1, 0.518481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479879,-99) , 
12, 0.367584, 0, 0, 0.496208,-99) , 
11, -2.31827, 1, 0, 0.506414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483084,-99) , 
10, -0.42844, 1, 0, 0.510657,-99) , 
NN(
0, 
0, 
-1, 0.432909, 0, -1, 0.482985,-99) , 
9, -948.87, 0, 0, 0.492519,-99) , 
3, 1.98476, 0, 0, 0.50061,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0205079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476542,-99) , 
13, 3.52996, 1, 0, 0.49829,-99) , 
3, 3.92155, 0, 0, 0.500463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446259,-99) , 
11, -1.37084, 1, 0, 0.467051,-99) , 
11, 0.0224026, 0, 0, 0.483915,-99) , 
10, 1.28572, 1, 0, 0.498121,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0309956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490035,-99) , 
12, -0.694617, 0, 0, 0.505019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460121,-99) , 
6, -0.804818, 1, 0, 0.482681,-99) , 
8, 1.45476, 0, 0, 0.501069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476432,-99) , 
6, 0.215286, 1, 0, 0.505135,-99) , 
NN(
0, 
0, 
-1, 2.04761, 1, -1, 0.467597,-99) , 
9, -948.87, 0, 0, 0.482898,-99) , 
10, 1.00001, 1, 0, 0.497368,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0185852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.10669, 0, 1, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46841,-99) , 
8, 1.13673, 0, 0, 0.500788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465408,-99) , 
11, -1.48034, 1, 0, 0.476758,-99) , 
6, -0.532617, 1, 0, 0.484492,-99) , 
10, 1.00001, 1, 0, 0.497477,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0380439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480618,-99) , 
6, 0.535822, 1, 0, 0.492629,-99) , 
13, 3.86805, 1, 0, 0.507253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486947,-99) , 
11, -2.09533, 1, 0, 0.495308,-99) , 
NN(
0, 
0, 
-1, -2.5982, 0, -1, 0.469523,-99) , 
8, 3.43115, 1, 0, 0.492917,-99) , 
3, 3.44554, 0, 0, 0.495204,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0223752);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477907,-99) , 
9, -951.286, 0, 0, 0.519281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488078,-99) , 
9, -20.9575, 1, 0, 0.496421,-99) , 
5, 0.999524, 1, 0, 0.498702,-99) , 
10, -1.85708, 1, 0, 0.500319,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0231291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.19553, 1, 1, 0.542458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488875,-99) , 
13, 4.59795, 1, 0, 0.517092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499129,-99) , 
3, 1.87885, 0, 0, 0.506145,-99) , 
NN(
0, 
0, 
-1, -1.11635, 1, -1, 0.488872,-99) , 
12, 1.25929, 0, 0, 0.495778,-99) , 
3, 3.7169, 0, 0, 0.498021,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.014482);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499206,-99) , 
12, 4.26989, 1, 0, 0.514955,-99) , 
NN(
0, 
0, 
-1, 1.61526, 0, -1, 0.495806,-99) , 
11, 1.52121, 0, 0, 0.498735,-99) , 
10, -1.8571, 1, 0, 0.500304,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0214106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494856,-99) , 
13, 1.12722, 0, 0, 0.510411,-99) , 
10, 1.57153, 0, 0, 0.516331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477828,-99) , 
10, 1.28586, 1, 0, 0.501179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452772,-99) , 
8, 1.46108, 0, 0, 0.499059,-99) , 
12, 2.48082, 0, 0, 0.502406,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0244783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.31686, 0, 1, 0.546549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449307,-99) , 
11, 4.44541, 0, 0, 0.502519,-99) , 
8, 1.28007, 0, 0, 0.517667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498398,-99) , 
6, -0.478788, 1, 0, 0.502359,-99) , 
NN(
0, 
0, 
-1, 0.966936, 0, -1, 0.473529,-99) , 
8, 1.69688, 0, 0, 0.49884,-99) , 
6, -0.719361, 1, 0, 0.501755,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0301293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471687,-99) , 
10, -1.28528, 0, 0, 0.507059,-99) , 
6, -0.101769, 1, 0, 0.510935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437093,-99) , 
5, 0.99981, 0, 0, 0.50272,-99) , 
NN(
0, 
0, 
-1, 0.198895, 0, -1, 0.483256,-99) , 
6, -0.492, 1, 0, 0.494238,-99) , 
3, 2.46373, 0, 0, 0.501357,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0225522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487798,-99) , 
12, -1.6537, 0, 0, 0.521483,-99) , 
NN(
NN(
0, 
0, 
-1, 4.3509, 1, 1, 0.515972,-99) , 
NN(
0, 
0, 
-1, -0.296558, 0, -1, 0.492727,-99) , 
12, 3.13541, 0, 0, 0.49645,-99) , 
11, -3.19669, 1, 0, 0.499018,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0225974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499741,-99) , 
5, 0.999524, 1, 0, 0.504661,-99) , 
6, 0.0446595, 1, 0, 0.508639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495444,-99) , 
3, 1.85713, 0, 0, 0.503662,-99) , 
NN(
0, 
0, 
-1, -0.606331, 1, -1, 0.473932,-99) , 
12, -0.0828982, 0, 0, 0.49838,-99) , 
3, 2.69219, 0, 0, 0.50205,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0172548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486281,-99) , 
12, -1.71772, 0, 0, 0.518684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472727,-99) , 
12, -0.806234, 0, 0, 0.49955,-99) , 
10, -1.57143, 1, 0, 0.501509,-99) , 
11, -3.29181, 1, 0, 0.503031,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0281067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.63954, 0, 1, 0.544715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477866,-99) , 
12, -1.56003, 0, 0, 0.520276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497074,-99) , 
12, -0.175378, 0, 0, 0.511682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485442,-99) , 
12, 1.35014, 0, 0, 0.494879,-99) , 
11, -2.17266, 1, 0, 0.499701,-99) , 
10, -1.28568, 1, 0, 0.502012,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0252371);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.84042, 1, 1, 0.507769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481615,-99) , 
13, 1.39299, 0, 0, 0.523389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475616,-99) , 
6, -0.730585, 1, 0, 0.484849,-99) , 
10, -1.28579, 1, 0, 0.490765,-99) , 
8, 2.09069, 0, 0, 0.501025,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.017088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485168,-99) , 
12, -1.74817, 0, 0, 0.519834,-99) , 
NN(
NN(
0, 
0, 
-1, 0.540744, 0, 1, 0.522143,-99) , 
NN(
0, 
0, 
-1, 0.0238076, 1, -1, 0.495488,-99) , 
10, -1.28568, 1, 0, 0.497663,-99) , 
11, -3.2647, 1, 0, 0.499703,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0308018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.57169, 1, 1, 0.543205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45625,-99) , 
10, -1.41205, 0, 0, 0.485813,-99) , 
12, -1.51957, 0, 0, 0.518297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473929,-99) , 
3, 1.22488, 0, 0, 0.507011,-99) , 
NN(
0, 
0, 
-1, 0.584001, 0, -1, 0.493475,-99) , 
10, 0.142857, 1, 0, 0.499526,-99) , 
11, -2.88184, 1, 0, 0.502436,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.023162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439857,-99) , 
3, 3.34788, 0, 0, 0.49484,-99) , 
13, 3.3714, 1, 0, 0.517313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476937,-99) , 
12, -0.418925, 0, 0, 0.499643,-99) , 
10, -1.57139, 1, 0, 0.501077,-99) , 
11, -2.88184, 1, 0, 0.503594,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0210068);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488885,-99) , 
8, 3.78427, 1, 0, 0.521026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486262,-99) , 
12, 0.0490725, 0, 0, 0.499289,-99) , 
11, -3.2647, 1, 0, 0.501185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467393,-99) , 
5, 0.998572, 0, 0, 0.499953,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.028253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486736,-99) , 
11, -3.85576, 1, 0, 0.502694,-99) , 
12, -0.72026, 0, 0, 0.516059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469812,-99) , 
8, 1.31374, 0, 0, 0.513552,-99) , 
NN(
0, 
0, 
-1, 0.0252706, 0, -1, 0.493757,-99) , 
10, -0.999998, 1, 0, 0.496077,-99) , 
11, -2.65528, 1, 0, 0.500092,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0199408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441854,-99) , 
3, 1.31649, 0, 0, 0.501148,-99) , 
11, 1.93473, 0, 0, 0.503249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437068,-99) , 
6, -0.900102, 1, 0, 0.477677,-99) , 
8, 1.14857, 0, 0, 0.501404,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0330118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494755,-99) , 
10, -0.999594, 1, 0, 0.501546,-99) , 
5, 0.999524, 1, 0, 0.506982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479525,-99) , 
3, 1.70942, 0, 0, 0.498996,-99) , 
NN(
0, 
0, 
-1, 1.93877, 1, -1, 0.466464,-99) , 
10, 1.28571, 1, 0, 0.494187,-99) , 
9, -948.956, 0, 0, 0.499646,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0194025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499609,-99) , 
9, -951.286, 0, 0, 0.530897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495683,-99) , 
0, 0.49673, 1, 0, 0.499949,-99) , 
5, 0.999524, 1, 0, 0.502724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484111,-99) , 
8, 1.71061, 0, 0, 0.494042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459108,-99) , 
12, 0.342199, 0, 0, 0.479507,-99) , 
0, 0.492376, 0, 0, 0.500332,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0237236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498864,-99) , 
10, -0.99967, 1, 0, 0.504854,-99) , 
5, 0.999524, 1, 0, 0.510157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494268,-99) , 
3, 2.67691, 0, 0, 0.500297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453045,-99) , 
5, 0.999524, 0, 0, 0.496267,-99) , 
9, -949.754, 0, 0, 0.502235,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.033075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48921,-99) , 
10, 1.36741, 1, 0, 0.507366,-99) , 
10, -1.28555, 1, 0, 0.511023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498445,-99) , 
12, 0.156646, 0, 0, 0.508622,-99) , 
NN(
0, 
0, 
-1, 0.468018, 1, -1, 0.463518,-99) , 
11, -1.63821, 1, 0, 0.498974,-99) , 
12, 0.852454, 0, 0, 0.50434,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0254113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499608,-99) , 
3, 2.57712, 0, 0, 0.50948,-99) , 
6, -0.533783, 1, 0, 0.511431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460345,-99) , 
8, 1.31648, 0, 0, 0.489221,-99) , 
12, 7.31016, 0, 0, 0.494531,-99) , 
8, 1.79614, 0, 0, 0.506529,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0224653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476097,-99) , 
3, 1.5462, 0, 0, 0.501651,-99) , 
11, 1.99064, 0, 0, 0.504276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446361,-99) , 
6, -0.885909, 1, 0, 0.482549,-99) , 
8, 1.14857, 0, 0, 0.502723,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0246804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.713367, 1, 1, 0.512764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479914,-99) , 
12, -1.2195, 0, 0, 0.508216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486402,-99) , 
3, 1.71226, 0, 0, 0.498351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449036,-99) , 
10, 1.85712, 1, 0, 0.495267,-99) , 
9, -948.87, 0, 0, 0.500799,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0305562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.110684, 0, 1, 0.514295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448859,-99) , 
12, 1.64909, 0, 0, 0.491235,-99) , 
13, 1.69941, 0, 0, 0.507199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486558,-99) , 
4, 4.42754, 1, 0, 0.508015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487873,-99) , 
2, 0.0782685, 0, 0, 0.491573,-99) , 
2, -0.071345, 1, 0, 0.494553,-99) , 
10, 0.142878, 1, 0, 0.501175,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0114285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487992,-99) , 
12, -0.414261, 0, 0, 0.498163,-99) , 
3, 3.90817, 0, 0, 0.499643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477667,-99) , 
8, 4.71093, 1, 0, 0.498703,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.025392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495872,-99) , 
10, -0.99963, 1, 0, 0.500816,-99) , 
5, 0.999524, 1, 0, 0.505315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489037,-99) , 
3, 1.05592, 0, 0, 0.518744,-99) , 
NN(
0, 
0, 
-1, 1.53398, 0, -1, 0.489718,-99) , 
11, 1.12769, 0, 0, 0.495121,-99) , 
9, -948.87, 0, 0, 0.499471,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0360485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435765,-99) , 
9, -1.17255, 0, 0, 0.508047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490716,-99) , 
7, 0.0113169, 0, 0, 0.494743,-99) , 
9, -950.125, 0, 0, 0.500396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469805,-99) , 
7, 0.0237659, 1, 0, 0.499147,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0281704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.37224, 0, 1, 0.540287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493201,-99) , 
8, 2.08611, 0, 0, 0.503587,-99) , 
10, -1.28572, 1, 0, 0.505991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543878,-99) , 
NN(
0, 
0, 
-1, -1.41251, 0, -1, 0.479942,-99) , 
11, -3.87146, 1, 0, 0.490865,-99) , 
12, -0.716731, 0, 0, 0.503049,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0272736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477694,-99) , 
12, 0.17994, 0, 0, 0.501284,-99) , 
3, 2.25862, 0, 0, 0.505582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490606,-99) , 
13, 3.81342, 1, 0, 0.5043,-99) , 
NN(
0, 
0, 
-1, -0.240955, 0, -1, 0.481869,-99) , 
3, 3.02744, 0, 0, 0.494683,-99) , 
6, -0.158128, 1, 0, 0.500587,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0096679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498837,-99) , 
2, -0.21345, 1, 0, 0.500298,-99) , 
10, -1.85709, 1, 0, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466521,-99) , 
5, 0.998571, 0, 0, 0.500349,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0136536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.94036, 1, 1, 0.530621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433668,-99) , 
3, 1.31915, 0, 0, 0.497976,-99) , 
11, 1.29556, 0, 0, 0.501232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432416,-99) , 
12, 6.58756, 0, 0, 0.479268,-99) , 
8, 1.14857, 0, 0, 0.499646,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0277331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567212,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.480641,-99) , 
12, -1.46847, 0, 0, 0.515838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495823,-99) , 
10, 0.428599, 1, 0, 0.504944,-99) , 
NN(
0, 
0, 
-1, -2.14796, 1, -1, 0.486218,-99) , 
12, 0.00884405, 0, 0, 0.49974,-99) , 
11, -3.10801, 1, 0, 0.501588,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0120031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.76211, 1, 1, 0.513266,-99) , 
NN(
0, 
0, 
-1, 3.21115, 1, -1, 0.49717,-99) , 
3, 3.20007, 0, 0, 0.500635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475389,-99) , 
4, 8.6237, 1, 0, 0.499441,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0404504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496859,-99) , 
10, 1.40604, 1, 0, 0.524098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491664,-99) , 
11, 0.864367, 0, 0, 0.50368,-99) , 
8, 2.34146, 0, 0, 0.508019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495896,-99) , 
12, -0.164463, 0, 0, 0.51099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462035,-99) , 
8, 3.57196, 0, 0, 0.47246,-99) , 
11, -2.03183, 1, 0, 0.497598,-99) , 
12, 0.742411, 0, 0, 0.502475,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0257303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.08742, 1, 1, 0.509424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463341,-99) , 
5, 0.998571, 0, 0, 0.507522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480458,-99) , 
9, -951.286, 1, 0, 0.499091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446227,-99) , 
12, 2.8451, 0, 0, 0.485576,-99) , 
8, 1.45502, 0, 0, 0.50399,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0306499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466918,-99) , 
3, 3.61094, 0, 0, 0.498344,-99) , 
13, 3.42677, 1, 0, 0.520708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495665,-99) , 
10, -0.0847674, 1, 0, 0.502744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483323,-99) , 
8, 1.64666, 0, 0, 0.490809,-99) , 
8, 1.76726, 0, 0, 0.498954,-99) , 
11, -3.10801, 1, 0, 0.501474,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0269391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497449,-99) , 
12, -0.596331, 0, 0, 0.51411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493513,-99) , 
11, -2.28203, 1, 0, 0.500057,-99) , 
10, -0.142838, 1, 0, 0.505948,-99) , 
NN(
0, 
0, 
-1, 8.30318, 0, -1, 0.483347,-99) , 
8, 1.13673, 0, 0, 0.504371,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0166324);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530112,-99) , 
NN(
NN(
0, 
0, 
-1, 1.66708, 0, 1, 0.505925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457296,-99) , 
3, 1.07285, 0, 0, 0.503957,-99) , 
12, 7.34354, 0, 0, 0.504998,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0251431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.6496, 1, 1, 0.520817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470896,-99) , 
3, 2.31439, 0, 0, 0.498635,-99) , 
6, -0.270488, 1, 0, 0.504372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49145,-99) , 
8, 1.1177, 0, 0, 0.507364,-99) , 
NN(
0, 
0, 
-1, 1.38877, 0, -1, 0.480134,-99) , 
11, 2.26613, 0, 0, 0.491252,-99) , 
8, 1.79614, 0, 0, 0.500544,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0145243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496524,-99) , 
12, 0.89174, 0, 0, 0.501684,-99) , 
3, 4.15484, 0, 0, 0.502928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478951,-99) , 
0, 0.490471, 0, 0, 0.501773,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0239487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.28071, 1, 1, 0.51076,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.492453,-99) , 
6, 0.342731, 1, 0, 0.50566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492613,-99) , 
10, 0.71412, 0, 0, 0.498969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449497,-99) , 
6, -0.581624, 1, 0, 0.49087,-99) , 
8, 1.77256, 0, 0, 0.501497,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0280198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.18091, 1, 1, 0.524207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454725,-99) , 
3, 4.32523, 0, 0, 0.489839,-99) , 
8, 4.50384, 1, 0, 0.515066,-99) , 
NN(
NN(
0, 
0, 
-1, 1.91647, 0, 1, 0.507868,-99) , 
NN(
0, 
0, 
-1, 0.538467, 1, -1, 0.488138,-99) , 
12, 1.24001, 0, 0, 0.497195,-99) , 
3, 3.16679, 0, 0, 0.501275,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0268105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.593537, 0, 1, 0.507546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478913,-99) , 
11, -1.71252, 1, 0, 0.488114,-99) , 
10, 1.00021, 1, 0, 0.503208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487569,-99) , 
3, 1.01856, 0, 0, 0.503476,-99) , 
NN(
0, 
0, 
-1, 1.40195, 0, -1, 0.471071,-99) , 
11, 2.08928, 0, 0, 0.489033,-99) , 
3, 1.4899, 0, 0, 0.500062,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0341083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470926,-99) , 
8, 1.25501, 0, 0, 0.518933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469494,-99) , 
3, 3.15505, 0, 0, 0.487993,-99) , 
12, -1.0133, 0, 0, 0.506941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488968,-99) , 
11, -2.43833, 1, 0, 0.494242,-99) , 
11, 6.09877, 0, 0, 0.495862,-99) , 
10, -0.428571, 1, 0, 0.499431,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0247788);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.999845, 1, 1, 0.50969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494189,-99) , 
12, 0.729926, 0, 0, 0.500237,-99) , 
NN(
0, 
0, 
-1, 1.7492, 0, -1, 0.466407,-99) , 
11, -1.11635, 1, 0, 0.495699,-99) , 
12, 1.22116, 0, 0, 0.500871,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0136484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525546,-99) , 
NN(
NN(
0, 
0, 
-1, -0.366988, 1, 1, 0.503754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477843,-99) , 
11, 0.366973, 0, 0, 0.491497,-99) , 
8, 2.09031, 0, 0, 0.498991,-99) , 
10, -1.85714, 1, 0, 0.500122,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0162266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489575,-99) , 
3, 1.96201, 0, 0, 0.497836,-99) , 
10, -1.85709, 1, 0, 0.499047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469685,-99) , 
5, 0.998572, 0, 0, 0.497967,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.00955993);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499481,-99) , 
10, -1.3945, 1, 0, 0.500993,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.476903,-99) , 
12, -1.39153, 0, 0, 0.499344,-99) , 
10, -1.85714, 1, 0, 0.500864,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0305821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30875, 0, 1, 0.549437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477023,-99) , 
12, -1.32045, 0, 0, 0.51958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491601,-99) , 
12, -0.291276, 0, 0, 0.512129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48749,-99) , 
12, 1.35014, 0, 0, 0.495022,-99) , 
11, -2.11625, 1, 0, 0.50017,-99) , 
10, -1.28564, 1, 0, 0.502351,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0144963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.27573, 1, 1, 0.504345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468749,-99) , 
12, -1.88321, 0, 0, 0.5029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434824,-99) , 
12, 6.91074, 0, 0, 0.481744,-99) , 
8, 1.13504, 0, 0, 0.501444,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0162509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485084,-99) , 
10, 1.14996, 1, 0, 0.499069,-99) , 
10, -1.85641, 1, 0, 0.500824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492403,-99) , 
3, 0.959603, 0, 0, 0.500716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448489,-99) , 
11, 3.08541, 0, 0, 0.485415,-99) , 
3, 1.24245, 0, 0, 0.49886,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0331509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497092,-99) , 
11, -1.54994, 1, 0, 0.508234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475444,-99) , 
11, -2.57186, 1, 0, 0.4928,-99) , 
12, 0.218805, 0, 0, 0.500712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484714,-99) , 
8, 1.27277, 0, 0, 0.495892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445275,-99) , 
6, -0.739943, 1, 0, 0.483977,-99) , 
8, 1.45445, 0, 0, 0.498014,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0365271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490216,-99) , 
8, 1.73117, 0, 0, 0.501438,-99) , 
10, -1.28568, 1, 0, 0.50404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488664,-99) , 
12, -0.232116, 0, 0, 0.503521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457331,-99) , 
9, -949.754, 0, 0, 0.475675,-99) , 
11, -2.11686, 1, 0, 0.493457,-99) , 
12, 0.658119, 0, 0, 0.498582,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0118526);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530033,-99) , 
NN(
NN(
0, 
0, 
-1, -0.719426, 1, 1, 0.50351,-99) , 
NN(
0, 
0, 
-1, 1.03896, 0, -1, 0.474671,-99) , 
8, 1.26657, 0, 0, 0.501662,-99) , 
12, 7.34815, 0, 0, 0.502811,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0223822);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49568,-99) , 
3, 2.44585, 0, 0, 0.504105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489835,-99) , 
11, -3.42585, 1, 0, 0.493353,-99) , 
7, 0.00339997, 0, 0, 0.499197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475306,-99) , 
7, 0.0238024, 1, 0, 0.498223,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0199024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.6494, 1, 1, 0.543699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495894,-99) , 
8, 2.73039, 0, 0, 0.498675,-99) , 
11, -2.36687, 1, 0, 0.50324,-99) , 
NN(
0, 
0, 
-1, 2.6971, 0, -1, 0.490393,-99) , 
6, 0.028945, 1, 0, 0.498643,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0163818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496566,-99) , 
8, 1.18743, 0, 0, 0.51174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436072,-99) , 
8, 1.54583, 0, 0, 0.499748,-99) , 
11, 0.890253, 0, 0, 0.502052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473877,-99) , 
4, 9.39629, 1, 0, 0.50106,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.00954834);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.0061, 0, 1, 0.517813,-99) , 
NN(
NN(
0, 
0, 
-1, -1.857, 1, 1, 0.501681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448917,-99) , 
3, 1.21186, 0, 0, 0.499911,-99) , 
11, 3.10776, 0, 0, 0.501687,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0113228);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49962,-99) , 
6, -0.718867, 1, 0, 0.501382,-99) , 
NN(
0, 
0, 
-1, 1.04623, 0, -1, 0.466147,-99) , 
8, 1.27746, 0, 0, 0.49903,-99) , 
12, 7.34815, 0, 0, 0.500687,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.027079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496721,-99) , 
3, 1.43173, 0, 0, 0.520403,-99) , 
NN(
0, 
0, 
-1, -1.65273, 0, -1, 0.489209,-99) , 
12, -1.12758, 0, 0, 0.509459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490664,-99) , 
11, -2.30472, 1, 0, 0.49522,-99) , 
11, 4.55075, 0, 0, 0.497465,-99) , 
10, -0.428549, 1, 0, 0.501331,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0180709);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528629,-99) , 
NN(
NN(
0, 
0, 
-1, -0.523833, 1, 1, 0.50556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43868,-99) , 
11, 1.12147, 0, 0, 0.483958,-99) , 
8, 1.56359, 0, 0, 0.501935,-99) , 
12, 7.34354, 0, 0, 0.503011,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0282308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487996,-99) , 
12, 0.896732, 0, 0, 0.500967,-99) , 
11, -2.58652, 1, 0, 0.505747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491572,-99) , 
11, -3.50578, 1, 0, 0.496199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45601,-99) , 
3, 2.90547, 0, 0, 0.490346,-99) , 
13, 3.03953, 1, 0, 0.500656,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0279792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486214,-99) , 
13, 1.62988, 0, 0, 0.503142,-99) , 
10, -1.57137, 1, 0, 0.50535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529487,-99) , 
NN(
0, 
0, 
-1, -1.50082, 0, -1, 0.478347,-99) , 
11, -3.84716, 1, 0, 0.488465,-99) , 
12, -0.812095, 0, 0, 0.502395,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0236838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497285,-99) , 
8, 1.89965, 0, 0, 0.506066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473025,-99) , 
6, 0.395402, 1, 0, 0.504302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490204,-99) , 
8, 4.76331, 1, 0, 0.517772,-99) , 
NN(
0, 
0, 
-1, 0.0805298, 1, -1, 0.488882,-99) , 
3, 3.79808, 0, 0, 0.493665,-99) , 
12, 0.463472, 0, 0, 0.499299,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0281426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.515177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472777,-99) , 
12, -1.84876, 0, 0, 0.49228,-99) , 
12, -1.16023, 0, 0, 0.508856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497627,-99) , 
13, 1.36583, 0, 0, 0.510088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487671,-99) , 
11, -2.60643, 1, 0, 0.492186,-99) , 
11, 1.4712, 0, 0, 0.495297,-99) , 
10, -0.142822, 1, 0, 0.50098,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0177342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.04076, 1, 1, 0.509704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482217,-99) , 
11, -1.72757, 1, 0, 0.499457,-99) , 
12, 0.711478, 0, 0, 0.504114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471434,-99) , 
10, 2.14282, 1, 0, 0.503047,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.026505);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496587,-99) , 
11, -1.57642, 1, 0, 0.505229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476141,-99) , 
11, -3.04686, 1, 0, 0.491264,-99) , 
12, -0.308957, 0, 0, 0.501075,-99) , 
12, 7.09138, 0, 0, 0.502219,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0231474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495497,-99) , 
12, -0.654349, 0, 0, 0.528453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499546,-99) , 
10, -1.57143, 1, 0, 0.501848,-99) , 
11, -2.32547, 1, 0, 0.506765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474316,-99) , 
8, 4.83372, 1, 0, 0.50293,-99) , 
NN(
0, 
0, 
-1, -2.84629, 0, -1, 0.460725,-99) , 
3, 3.59135, 0, 0, 0.489275,-99) , 
8, 3.67137, 1, 0, 0.503506,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0341232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494147,-99) , 
12, -1.4445, 0, 0, 0.540757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48501,-99) , 
12, 0.355169, 0, 0, 0.502675,-99) , 
11, -2.99174, 1, 0, 0.506111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43728,-99) , 
3, 3.92874, 0, 0, 0.471262,-99) , 
11, -2.44128, 0, 0, 0.485736,-99) , 
13, 3.9196, 1, 0, 0.503269,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0195209);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533889,-99) , 
NN(
NN(
0, 
0, 
-1, -0.931908, 1, 1, 0.505354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469944,-99) , 
3, 2.85546, 0, 0, 0.490686,-99) , 
12, 0.0472019, 0, 0, 0.500122,-99) , 
10, -1.8571, 1, 0, 0.50158,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0271148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.629353, 0, 1, 0.530745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488754,-99) , 
12, 1.11723, 0, 0, 0.498692,-99) , 
11, -2.36093, 1, 0, 0.504434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489625,-99) , 
3, 3.60691, 0, 0, 0.501478,-99) , 
NN(
0, 
0, 
-1, 4.00483, 0, -1, 0.477521,-99) , 
6, 0.511126, 1, 0, 0.486901,-99) , 
8, 3.67118, 1, 0, 0.501163,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0229249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490797,-99) , 
3, 1.73745, 0, 0, 0.50062,-99) , 
10, -1.28568, 1, 0, 0.50276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491158,-99) , 
8, 3.52225, 1, 0, 0.501176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439016,-99) , 
13, 2.79424, 1, 0, 0.474455,-99) , 
3, 2.91649, 0, 0, 0.491121,-99) , 
12, -0.569829, 0, 0, 0.50013,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0202946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497786,-99) , 
3, 1.71659, 0, 0, 0.515237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493199,-99) , 
10, -0.428591, 1, 0, 0.497961,-99) , 
2, -0.0705848, 1, 0, 0.500976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454707,-99) , 
5, 0.998571, 0, 0, 0.499322,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0321971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499042,-99) , 
8, 2.06293, 0, 0, 0.510587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471944,-99) , 
11, -3.83125, 1, 0, 0.484166,-99) , 
12, -1.00276, 0, 0, 0.505376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491419,-99) , 
13, 2.5367, 0, 0, 0.499977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434859,-99) , 
11, -1.9244, 1, 0, 0.474156,-99) , 
12, 0.816936, 0, 0, 0.492636,-99) , 
10, 0.714311, 1, 0, 0.501778,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.031129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482124,-99) , 
8, 1.35319, 0, 0, 0.512768,-99) , 
NN(
0, 
0, 
-1, 3.06822, 0, -1, 0.486818,-99) , 
8, 3.04713, 1, 0, 0.504794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511722,-99) , 
NN(
0, 
0, 
-1, 2.04759, 1, -1, 0.487235,-99) , 
11, 1.98259, 0, 0, 0.490937,-99) , 
10, 0.142858, 1, 0, 0.498188,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0218608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40966, 0, 1, 0.536285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496721,-99) , 
8, 2.40313, 0, 0, 0.502083,-99) , 
10, -1.28569, 1, 0, 0.50433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481485,-99) , 
11, -3.40543, 1, 0, 0.497179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453425,-99) , 
12, -1.93487, 0, 0, 0.488091,-99) , 
12, -0.876331, 0, 0, 0.501676,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0300209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483959,-99) , 
3, 1.16657, 0, 0, 0.533965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481245,-99) , 
6, 0.209255, 1, 0, 0.506084,-99) , 
10, -0.714169, 1, 0, 0.509887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493085,-99) , 
12, -0.106778, 0, 0, 0.502145,-99) , 
NN(
0, 
0, 
-1, 2.65583, 0, -1, 0.477666,-99) , 
10, 0.283439, 1, 0, 0.495029,-99) , 
12, 0.821521, 0, 0, 0.501737,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0174146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.23106, 0, 1, 0.524261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497958,-99) , 
9, -951.275, 1, 0, 0.514351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441663,-99) , 
10, 2.143, 1, 0, 0.500727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448782,-99) , 
8, 1.5595, 0, 0, 0.49803,-99) , 
11, 0.903798, 0, 0, 0.501125,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.020032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.131091, 1, 1, 0.524333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479058,-99) , 
6, -0.908384, 1, 0, 0.498961,-99) , 
8, 1.18783, 0, 0, 0.513592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45579,-99) , 
10, 1.85709, 1, 0, 0.499535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443903,-99) , 
8, 1.54522, 0, 0, 0.496965,-99) , 
11, 0.8574, 0, 0, 0.500172,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.031806);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.00004, 1, 1, 0.513071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492471,-99) , 
12, 0.598029, 0, 0, 0.500264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469037,-99) , 
9, -948.87, 0, 0, 0.480031,-99) , 
11, -1.33353, 1, 0, 0.492932,-99) , 
11, 0.730904, 0, 0, 0.496999,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0286945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482596,-99) , 
12, -1.59772, 0, 0, 0.513434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478851,-99) , 
3, 1.2256, 0, 0, 0.508087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497059,-99) , 
6, -0.189901, 1, 0, 0.501581,-99) , 
NN(
0, 
0, 
-1, 2.19915, 0, -1, 0.484254,-99) , 
8, 2.4045, 0, 0, 0.49354,-99) , 
10, -0.428594, 1, 0, 0.498248,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0188223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533029,-99) , 
NN(
NN(
0, 
0, 
-1, -3.53618, 1, 1, 0.507764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482228,-99) , 
12, 0.887839, 0, 0, 0.495718,-99) , 
3, 2.67891, 0, 0, 0.500107,-99) , 
10, -1.85714, 1, 0, 0.501519,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0252092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497039,-99) , 
12, 0.259769, 0, 0, 0.506226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467702,-99) , 
3, 0.983171, 0, 0, 0.503934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472041,-99) , 
12, 1.36079, 0, 0, 0.485093,-99) , 
3, 1.48226, 1, 0, 0.490723,-99) , 
10, 0.714274, 1, 0, 0.500194,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0270031);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536583,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495945,-99) , 
12, -0.147583, 0, 0, 0.511224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490608,-99) , 
11, 1.44097, 0, 0, 0.495247,-99) , 
11, -1.95565, 1, 0, 0.500986,-99) , 
10, -1.85711, 1, 0, 0.502552,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0206859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.09939, 1, 1, 0.533906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499412,-99) , 
3, 4.37677, 0, 0, 0.502187,-99) , 
6, -0.08597, 1, 0, 0.50767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480995,-99) , 
13, 1.33924, 0, 0, 0.51803,-99) , 
NN(
0, 
0, 
-1, 0.187634, 0, -1, 0.492261,-99) , 
10, -0.999995, 1, 0, 0.497344,-99) , 
3, 2.23247, 0, 0, 0.502481,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0268118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0366656, 0, 1, 0.510576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448517,-99) , 
11, 2.98538, 0, 0, 0.491625,-99) , 
3, 1.23123, 0, 0, 0.507865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496571,-99) , 
6, 0.0976013, 1, 0, 0.50385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421647,-99) , 
12, 1.2551, 0, 0, 0.488558,-99) , 
8, 2.76878, 0, 0, 0.495374,-99) , 
10, 0.428564, 1, 0, 0.50317,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0238175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.55163, 1, 1, 0.51052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483257,-99) , 
8, 4.57928, 1, 0, 0.507622,-99) , 
NN(
NN(
0, 
0, 
-1, 0.494058, 0, 1, 0.52002,-99) , 
NN(
0, 
0, 
-1, 0.261458, 0, -1, 0.489203,-99) , 
10, -1.00001, 1, 0, 0.495354,-99) , 
3, 2.21826, 0, 0, 0.501513,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0300958);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497039,-99) , 
12, -0.0751492, 0, 0, 0.509191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47469,-99) , 
11, 2.31409, 0, 0, 0.491527,-99) , 
3, 1.47132, 0, 0, 0.504945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472026,-99) , 
10, 2.2381, 1, 0, 0.500958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444352,-99) , 
11, -1.84022, 1, 0, 0.478711,-99) , 
12, 0.919213, 0, 0, 0.493861,-99) , 
10, 0.714304, 1, 0, 0.501784,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0240691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499218,-99) , 
8, 1.5947, 0, 0, 0.523668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467351,-99) , 
12, -1.97037, 0, 0, 0.497063,-99) , 
12, -1.13768, 0, 0, 0.512926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499806,-99) , 
12, 0.880129, 0, 0, 0.507216,-99) , 
NN(
0, 
0, 
-1, 1.76191, 1, -1, 0.48984,-99) , 
11, -1.15892, 1, 0, 0.498603,-99) , 
10, -0.71426, 1, 0, 0.502007,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0275054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.417484, 0, 1, 0.511953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462575,-99) , 
11, 3.02303, 0, 0, 0.483653,-99) , 
8, 1.45185, 0, 0, 0.506894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489392,-99) , 
10, 1.47616, 0, 0, 0.505439,-99) , 
NN(
0, 
0, 
-1, 2.57559, 0, -1, 0.485551,-99) , 
12, 2.4797, 0, 0, 0.491223,-99) , 
10, 0.714294, 1, 0, 0.502459,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0230939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496014,-99) , 
13, 3.65575, 1, 0, 0.522732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492041,-99) , 
12, -0.251239, 0, 0, 0.504927,-99) , 
11, -3.00412, 1, 0, 0.509986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543997,-99) , 
NN(
0, 
0, 
-1, -0.575257, 0, -1, 0.493465,-99) , 
10, -1.85715, 1, 0, 0.496201,-99) , 
3, 2.44872, 0, 0, 0.502105,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0145559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471418,-99) , 
10, -1.48465, 0, 0, 0.491878,-99) , 
12, -1.41525, 0, 0, 0.52088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475671,-99) , 
10, 2.07484, 1, 0, 0.499738,-99) , 
10, -1.85714, 1, 0, 0.501221,-99) , 
11, -3.04061, 1, 0, 0.50373,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0257646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.56007, 1, 1, 0.526914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479945,-99) , 
3, 3.24891, 0, 0, 0.502133,-99) , 
8, 3.35092, 1, 0, 0.509315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492004,-99) , 
9, -951.286, 0, 0, 0.510449,-99) , 
NN(
0, 
0, 
-1, 0.153179, 0, -1, 0.491847,-99) , 
10, -0.71427, 1, 0, 0.496595,-99) , 
3, 2.69218, 0, 0, 0.501137,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0197241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.318508, 1, 1, 0.508438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484824,-99) , 
6, -0.586553, 1, 0, 0.497422,-99) , 
8, 2.19254, 0, 0, 0.503399,-99) , 
NN(
0, 
0, 
-1, 0.762642, 1, -1, 0.47723,-99) , 
6, 0.682515, 1, 0, 0.501971,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0162412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497125,-99) , 
12, 3.93918, 1, 0, 0.527947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443585,-99) , 
3, 1.32516, 0, 0, 0.500453,-99) , 
11, 1.18113, 0, 0, 0.503393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448328,-99) , 
12, 6.58756, 0, 0, 0.486238,-99) , 
8, 1.14857, 0, 0, 0.502156,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0263606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489667,-99) , 
8, 1.42266, 0, 0, 0.502237,-99) , 
10, -0.999848, 1, 0, 0.505563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494019,-99) , 
12, 0.666848, 0, 0, 0.499493,-99) , 
NN(
0, 
0, 
-1, 0.696895, 1, -1, 0.462051,-99) , 
11, -1.16867, 1, 0, 0.494447,-99) , 
12, 1.15911, 0, 0, 0.498699,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.021998);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496715,-99) , 
12, -0.590953, 0, 0, 0.510855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475696,-99) , 
8, 1.13708, 0, 0, 0.508165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498419,-99) , 
9, -951.286, 1, 0, 0.515726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477021,-99) , 
12, 0.355491, 0, 0, 0.495584,-99) , 
3, 3.71682, 0, 0, 0.497867,-99) , 
10, -0.142851, 1, 0, 0.502178,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0222261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499579,-99) , 
12, 0.0990166, 0, 0, 0.509046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478196,-99) , 
8, 1.13502, 0, 0, 0.506714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489215,-99) , 
12, 2.00001, 0, 0, 0.495386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455824,-99) , 
10, 2.26532, 1, 0, 0.492746,-99) , 
10, 0.428617, 1, 0, 0.501458,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0216499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.73725, 1, 1, 0.551244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475705,-99) , 
12, -1.84423, 0, 0, 0.49187,-99) , 
12, -1.32477, 0, 0, 0.518064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495747,-99) , 
8, 1.32831, 0, 0, 0.507918,-99) , 
NN(
0, 
0, 
-1, 1.57135, 0, -1, 0.494623,-99) , 
11, 0.558871, 0, 0, 0.498066,-99) , 
11, -2.88184, 1, 0, 0.501164,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0192916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.56645, 1, 1, 0.530219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470451,-99) , 
12, 0.570079, 1, 0, 0.50463,-99) , 
6, 0.352513, 1, 0, 0.512939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497668,-99) , 
10, -1.28561, 1, 0, 0.500676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455869,-99) , 
6, 0.228842, 1, 0, 0.498961,-99) , 
3, 2.97451, 0, 0, 0.502835,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0285219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.10846, 0, 1, 0.512545,-99) , 
NN(
0, 
0, 
-1, 2.86002, 0, -1, 0.475761,-99) , 
10, 1.57157, 1, 0, 0.508374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491471,-99) , 
8, 1.03662, 0, 0, 0.512514,-99) , 
NN(
0, 
0, 
-1, 1.4286, 0, -1, 0.487128,-99) , 
11, 2.01383, 0, 0, 0.49521,-99) , 
8, 2.11992, 0, 0, 0.503011,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.024539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487783,-99) , 
12, -1.83752, 0, 0, 0.51927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494553,-99) , 
10, 0.428564, 1, 0, 0.502058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481842,-99) , 
11, -3.01652, 1, 0, 0.490931,-99) , 
12, -0.220748, 0, 0, 0.499329,-99) , 
11, -3.33543, 1, 0, 0.500981,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0261035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.16474, 0, 1, 0.513639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484744,-99) , 
12, 2.05149, 0, 0, 0.499287,-99) , 
11, -0.792567, 1, 0, 0.506883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516037,-99) , 
NN(
0, 
0, 
-1, -3.10501, 0, -1, 0.483176,-99) , 
11, -3.64711, 1, 0, 0.492843,-99) , 
12, -0.84368, 0, 0, 0.504488,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0175208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.28686, 1, 1, 0.50716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49289,-99) , 
8, 1.93512, 0, 0, 0.49736,-99) , 
8, 2.08609, 0, 0, 0.503306,-99) , 
NN(
0, 
0, 
-1, -0.166596, 1, -1, 0.482259,-99) , 
0, 0.504757, 1, 0, 0.501949,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0177481);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499376,-99) , 
12, 0.729589, 0, 0, 0.506035,-99) , 
NN(
0, 
0, 
-1, 1.49171, 0, -1, 0.490067,-99) , 
11, -1.07893, 1, 0, 0.499545,-99) , 
11, 6.14206, 0, 0, 0.500633,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0252373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489488,-99) , 
11, -3.56954, 1, 0, 0.501463,-99) , 
12, -0.624035, 0, 0, 0.514948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494417,-99) , 
11, 0.882443, 0, 0, 0.498482,-99) , 
10, -1.57135, 1, 0, 0.500411,-99) , 
11, -2.54214, 1, 0, 0.503678,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.031368);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495244,-99) , 
12, -0.87805, 0, 0, 0.51598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470213,-99) , 
8, 1.32084, 0, 0, 0.485485,-99) , 
8, 1.45701, 0, 0, 0.509785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49585,-99) , 
8, 2.44371, 0, 0, 0.50326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43926,-99) , 
3, 3.05993, 0, 0, 0.484667,-99) , 
12, 0.0524468, 0, 0, 0.499285,-99) , 
10, -0.142861, 1, 0, 0.503697,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0294597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.16724, 0, 1, 0.510589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477809,-99) , 
12, 1.72849, 0, 0, 0.49386,-99) , 
10, 1.00003, 1, 0, 0.506942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498512,-99) , 
8, 1.04403, 0, 0, 0.51631,-99) , 
NN(
0, 
0, 
-1, 1.31142, 0, -1, 0.463783,-99) , 
11, 3.37207, 0, 0, 0.494139,-99) , 
8, 1.45206, 0, 0, 0.504878,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0121876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504825,-99) , 
NN(
0, 
0, 
-1, 3.03674, 1, -1, 0.487311,-99) , 
0, 0.491696, 0, 0, 0.503302,-99) , 
NN(
0, 
0, 
-1, -0.158123, 1, -1, 0.485624,-99) , 
0, 0.504757, 1, 0, 0.502138,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0186368);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497169,-99) , 
12, 0.319448, 0, 0, 0.503536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472335,-99) , 
9, -948.87, 0, 0, 0.489245,-99) , 
10, 1.28572, 1, 0, 0.501525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469512,-99) , 
0, 0.489519, 0, 0, 0.500617,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0320867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495983,-99) , 
11, -1.76253, 1, 0, 0.510482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484702,-99) , 
11, -2.99979, 1, 0, 0.496182,-99) , 
12, -0.0455127, 0, 0, 0.503721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495025,-99) , 
8, 1.02077, 0, 0, 0.512658,-99) , 
NN(
0, 
0, 
-1, 1.38382, 0, -1, 0.484013,-99) , 
11, 3.36975, 0, 0, 0.4935,-99) , 
8, 1.77226, 0, 0, 0.500833,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0161373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484991,-99) , 
12, -1.39153, 0, 0, 0.504901,-99) , 
10, -1.85711, 1, 0, 0.505844,-99) , 
NN(
0, 
0, 
-1, 0.645128, 0, -1, 0.488765,-99) , 
0, 0.504757, 1, 0, 0.504723,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0284409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.179584, 0, 1, 0.510061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481289,-99) , 
12, 1.53488, 0, 0, 0.491316,-99) , 
10, 0.714888, 1, 0, 0.504108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489257,-99) , 
6, -0.568117, 1, 0, 0.516721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459805,-99) , 
6, -0.749784, 1, 0, 0.486493,-99) , 
8, 1.58793, 0, 0, 0.49416,-99) , 
8, 1.76909, 0, 0, 0.501292,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0202273);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492936,-99) , 
8, 1.96604, 0, 0, 0.502144,-99) , 
NN(
0, 
0, 
-1, -1.76612, 0, -1, 0.488315,-99) , 
12, -0.457833, 0, 0, 0.498881,-99) , 
3, 4.21176, 0, 0, 0.499931,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0205508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.511859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481681,-99) , 
8, 3.05554, 1, 0, 0.495276,-99) , 
4, 4.75996, 1, 0, 0.508698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483596,-99) , 
12, 1.04412, 0, 0, 0.491936,-99) , 
11, 4.50253, 0, 0, 0.494602,-99) , 
10, 0.142857, 1, 0, 0.501983,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0145162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473258,-99) , 
12, -1.37425, 0, 0, 0.500598,-99) , 
NN(
0, 
0, 
-1, 5.24125, 0, -1, 0.481199,-99) , 
8, 1.23078, 0, 0, 0.498722,-99) , 
3, 4.2117, 0, 0, 0.499759,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.01225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498125,-99) , 
2, 0.112282, 0, 0, 0.500368,-99) , 
2, -0.213836, 1, 0, 0.501758,-99) , 
NN(
0, 
0, 
-1, 0.214279, 1, -1, 0.489908,-99) , 
4, 4.39355, 1, 0, 0.499196,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0210243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488247,-99) , 
12, -1.13768, 0, 0, 0.510374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487885,-99) , 
3, 1.98476, 0, 0, 0.496987,-99) , 
10, -0.795892, 1, 0, 0.499955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463069,-99) , 
10, 2.14285, 1, 0, 0.498774,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0280643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479986,-99) , 
8, 1.3363, 0, 0, 0.516481,-99) , 
NN(
0, 
0, 
-1, -1.97037, 0, -1, 0.487419,-99) , 
12, -1.13768, 0, 0, 0.506437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493594,-99) , 
10, 0.38775, 1, 0, 0.498131,-99) , 
NN(
0, 
0, 
-1, 3.13288, 0, -1, 0.475405,-99) , 
12, -0.118359, 0, 0, 0.493393,-99) , 
10, -0.428575, 1, 0, 0.497604,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0226671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497242,-99) , 
8, 1.71945, 0, 0, 0.505037,-99) , 
10, -0.999488, 1, 0, 0.508239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496395,-99) , 
12, 0.812565, 0, 0, 0.501475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460436,-99) , 
12, 0.740355, 1, 0, 0.474704,-99) , 
11, -1.09905, 1, 0, 0.497561,-99) , 
12, 1.30252, 0, 0, 0.501349,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0219859);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496417,-99) , 
12, -0.0417884, 0, 0, 0.506803,-99) , 
NN(
0, 
0, 
-1, 0.585665, 0, -1, 0.492434,-99) , 
11, -1.8497, 1, 0, 0.49854,-99) , 
11, 4.34365, 0, 0, 0.500621,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.022997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476288,-99) , 
3, 1.43394, 0, 0, 0.51012,-99) , 
12, 1.82489, 0, 0, 0.513613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495133,-99) , 
3, 2.68536, 0, 0, 0.501057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467477,-99) , 
7, 0.0237169, 1, 0, 0.49968,-99) , 
10, -0.428571, 1, 0, 0.50417,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0208761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499679,-99) , 
13, 3.10652, 1, 0, 0.513041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48824,-99) , 
12, 0.826352, 0, 0, 0.498606,-99) , 
11, -2.55115, 1, 0, 0.501695,-99) , 
10, -1.85714, 1, 0, 0.502955,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0165502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428439, 1, 1, 0.516811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466221,-99) , 
8, 1.73488, 0, 0, 0.499389,-99) , 
11, 0.531111, 0, 0, 0.502169,-99) , 
NN(
0, 
0, 
-1, -0.899535, 1, -1, 0.479614,-99) , 
8, 1.14902, 0, 0, 0.500538,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0204931);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531266,-99) , 
NN(
NN(
0, 
0, 
-1, -0.714219, 1, 1, 0.508012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479001,-99) , 
3, 2.57244, 0, 0, 0.494495,-99) , 
12, 0.575151, 0, 0, 0.501561,-99) , 
3, 4.2117, 0, 0, 0.502835,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0125352);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498961,-99) , 
11, 0.848049, 0, 0, 0.50113,-99) , 
NN(
0, 
0, 
-1, 3.33342, 0, -1, 0.467695,-99) , 
8, 1.31778, 0, 0, 0.498471,-99) , 
12, 7.34354, 0, 0, 0.499674,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0282924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487163,-99) , 
12, -1.59699, 0, 0, 0.511804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478907,-99) , 
8, 1.13708, 0, 0, 0.50928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490176,-99) , 
11, -2.612, 1, 0, 0.494146,-99) , 
11, 4.01903, 0, 0, 0.496408,-99) , 
10, -0.142836, 1, 0, 0.501839,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0118606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478404,-99) , 
8, 3.84611, 1, 0, 0.500788,-99) , 
3, 3.84346, 0, 0, 0.502326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480476,-99) , 
8, 4.6332, 1, 0, 0.501233,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0158455);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.517645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495286,-99) , 
12, 1.09005, 0, 0, 0.500935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461057,-99) , 
5, 0.998572, 0, 0, 0.499859,-99) , 
3, 3.96426, 0, 0, 0.501073,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0283498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499555,-99) , 
11, -1.76253, 1, 0, 0.513076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482879,-99) , 
11, -2.94714, 1, 0, 0.494316,-99) , 
12, -0.0229406, 0, 0, 0.504095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515138,-99) , 
NN(
0, 
0, 
-1, 1.0289, 0, -1, 0.485759,-99) , 
10, -1.28599, 1, 0, 0.490828,-99) , 
8, 1.76907, 0, 0, 0.50036,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0211894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28501, 1, 1, 0.507309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47309,-99) , 
12, -1.93684, 0, 0, 0.505899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494954,-99) , 
3, 0.998574, 0, 0, 0.507417,-99) , 
NN(
0, 
0, 
-1, 1.31524, 0, -1, 0.461628,-99) , 
11, 3.10436, 0, 0, 0.489077,-99) , 
8, 1.45487, 0, 0, 0.503163,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0305828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.430393, 1, 1, 0.536331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48199,-99) , 
3, 2.36931, 0, 0, 0.499569,-99) , 
6, -0.283783, 1, 0, 0.503576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467263,-99) , 
5, 0.999986, 0, 0, 0.497547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438868,-99) , 
5, 0.999714, 0, 0, 0.493625,-99) , 
8, 2.11992, 0, 0, 0.499523,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0112793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.322221, 1, 1, 0.505077,-99) , 
NN(
0, 
0, 
-1, 0.999714, 0, -1, 0.495492,-99) , 
3, 1.88173, 0, 0, 0.501332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464549,-99) , 
6, 0.772286, 1, 0, 0.500388,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0138858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.275, 0, 1, 0.520476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474954,-99) , 
3, 2.75275, 0, 0, 0.493666,-99) , 
12, -1.16731, 0, 0, 0.509919,-99) , 
NN(
0, 
0, 
-1, 0.0236688, 1, -1, 0.495767,-99) , 
10, -0.714299, 1, 0, 0.499122,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0277861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496671,-99) , 
10, 1.57148, 1, 0, 0.512402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463715,-99) , 
2, 0.0718061, 1, 0, 0.491622,-99) , 
4, 4.36591, 1, 0, 0.507915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487239,-99) , 
12, -0.109717, 0, 0, 0.496984,-99) , 
NN(
0, 
0, 
-1, -0.624576, 1, -1, 0.461687,-99) , 
8, 1.82841, 0, 0, 0.494016,-99) , 
12, 1.12226, 0, 0, 0.499432,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0276969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.862863, 0, 1, 0.509427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473347,-99) , 
12, 2.13932, 0, 0, 0.485792,-99) , 
10, 1.2861, 1, 0, 0.505525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4868,-99) , 
9, -951.286, 1, 0, 0.501705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435432,-99) , 
10, -1.01495, 1, 0, 0.471567,-99) , 
12, 1.9983, 0, 0, 0.492022,-99) , 
8, 1.79614, 0, 0, 0.50161,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0190919);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492852,-99) , 
10, -0.999998, 1, 0, 0.495639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438201,-99) , 
3, 1.148, 0, 0, 0.493916,-99) , 
11, 4.46349, 0, 0, 0.495355,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.017351);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496358,-99) , 
8, 4.10903, 1, 0, 0.511701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49456,-99) , 
10, -1.85708, 1, 0, 0.496044,-99) , 
3, 3.41386, 0, 0, 0.498407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470279,-99) , 
5, 0.998572, 0, 0, 0.497395,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0190685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47379,-99) , 
12, -1.78444, 0, 0, 0.503838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46924,-99) , 
11, 4.12045, 0, 0, 0.490606,-99) , 
8, 1.45206, 0, 0, 0.501731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471318,-99) , 
0, 0.489519, 0, 0, 0.50087,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0138699);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49717,-99) , 
10, -1.85705, 1, 0, 0.498655,-99) , 
NN(
0, 
0, 
-1, -0.826566, 1, -1, 0.469165,-99) , 
8, 1.27746, 0, 0, 0.4967,-99) , 
12, 7.13964, 0, 0, 0.498148,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0124746);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495139,-99) , 
4, 4.414, 1, 0, 0.508095,-99) , 
NN(
0, 
0, 
-1, 0.192368, 1, -1, 0.496173,-99) , 
2, -0.0712254, 1, 0, 0.498334,-99) , 
3, 4.2117, 0, 0, 0.49957,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0326392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490808,-99) , 
13, 1.53952, 0, 0, 0.503441,-99) , 
10, -1.28569, 1, 0, 0.50559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493264,-99) , 
12, -0.0763097, 0, 0, 0.503509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47181,-99) , 
8, 3.52008, 0, 0, 0.480882,-99) , 
11, -1.92054, 1, 0, 0.49608,-99) , 
12, 0.852454, 0, 0, 0.500295,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.02154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497163,-99) , 
5, 0.999524, 1, 0, 0.50177,-99) , 
6, -0.161126, 1, 0, 0.506125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464814,-99) , 
5, 0.999714, 0, 0, 0.50214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451838,-99) , 
11, -2.09633, 1, 0, 0.473935,-99) , 
12, 0.348713, 0, 0, 0.497262,-99) , 
3, 2.23218, 0, 0, 0.501695,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0236372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496879,-99) , 
8, 2.04918, 0, 0, 0.510667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48609,-99) , 
8, 2.40313, 0, 0, 0.494734,-99) , 
10, 0.142857, 1, 0, 0.501814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485224,-99) , 
11, -3.59639, 1, 0, 0.497263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457001,-99) , 
3, 2.75037, 0, 0, 0.487086,-99) , 
12, -1.01658, 0, 0, 0.499759,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0221766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477425,-99) , 
8, 1.12644, 0, 0, 0.506939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476427,-99) , 
12, 0.965693, 0, 0, 0.494865,-99) , 
10, 0.71431, 1, 0, 0.503498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466308,-99) , 
5, 0.998572, 0, 0, 0.50216,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0226961);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49394,-99) , 
12, -0.702526, 0, 0, 0.509867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490898,-99) , 
11, 0.480298, 0, 0, 0.495451,-99) , 
11, -2.48809, 1, 0, 0.498738,-99) , 
10, -1.85714, 1, 0, 0.499882,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0186797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999262, 1, 1, 0.504152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46399,-99) , 
12, -1.97758, 0, 0, 0.502492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493679,-99) , 
6, -0.812895, 1, 0, 0.511748,-99) , 
NN(
0, 
0, 
-1, 1.35574, 0, -1, 0.469158,-99) , 
11, 2.29831, 0, 0, 0.491741,-99) , 
3, 1.48986, 0, 0, 0.500117,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0191515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.52176, 1, 1, 0.520169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477011,-99) , 
8, 2.0554, 0, 0, 0.495682,-99) , 
4, 4.25982, 1, 0, 0.509857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480324,-99) , 
12, -1.42174, 0, 0, 0.505212,-99) , 
NN(
0, 
0, 
-1, 0.0237891, 1, -1, 0.494998,-99) , 
10, -0.714201, 1, 0, 0.49741,-99) , 
2, 0.0714273, 0, 0, 0.499689,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0217779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.718551, 0, 1, 0.511566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474153,-99) , 
6, -0.803936, 1, 0, 0.494359,-99) , 
8, 1.45476, 0, 0, 0.507878,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.512516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490167,-99) , 
11, 1.56574, 0, 0, 0.492785,-99) , 
2, 0.0719381, 0, 0, 0.496383,-99) , 
10, -0.428602, 1, 0, 0.50011,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0176652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464225,-99) , 
10, 2.14283, 1, 0, 0.503753,-99) , 
11, 1.27804, 0, 0, 0.504973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484698,-99) , 
11, 3.48833, 0, 0, 0.500337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450924,-99) , 
12, 2.37314, 0, 0, 0.490994,-99) , 
8, 1.45185, 0, 0, 0.502731,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.026756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491454,-99) , 
12, -0.572633, 0, 0, 0.516535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495106,-99) , 
10, -1.57139, 1, 0, 0.49728,-99) , 
11, -2.36093, 1, 0, 0.501111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483294,-99) , 
11, -2.45857, 1, 0, 0.503374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437493,-99) , 
11, -2.68227, 0, 0, 0.471057,-99) , 
3, 3.81554, 0, 0, 0.489894,-99) , 
13, 3.90046, 1, 0, 0.49951,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0241586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480956,-99) , 
13, 4.01186, 1, 0, 0.516618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487418,-99) , 
10, 1.8572, 1, 0, 0.508924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473746,-99) , 
11, -1.19132, 1, 0, 0.495771,-99) , 
12, 1.62872, 0, 0, 0.500062,-99) , 
11, -3.39785, 1, 0, 0.501315,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0226867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491948,-99) , 
12, 0.224097, 0, 0, 0.501431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47924,-99) , 
9, -951.275, 0, 0, 0.491489,-99) , 
8, 1.4567, 0, 0, 0.499774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470565,-99) , 
5, 0.998572, 0, 0, 0.498719,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0226175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483968,-99) , 
12, 0.428531, 0, 0, 0.500076,-99) , 
11, -2.91439, 1, 0, 0.502113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493016,-99) , 
5, 0.999048, 1, 0, 0.497492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467363,-99) , 
0, 0.493329, 0, 0, 0.493444,-99) , 
6, 0.216023, 1, 0, 0.49983,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0175057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499907,-99) , 
12, 0.343561, 0, 0, 0.507599,-99) , 
NN(
0, 
0, 
-1, 0.99981, 0, -1, 0.494454,-99) , 
3, 1.96197, 0, 0, 0.501815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495621,-99) , 
10, 1.80275, 0, 0, 0.502421,-99) , 
NN(
0, 
0, 
-1, 2.58174, 0, -1, 0.48382,-99) , 
11, 0.00879106, 0, 0, 0.490191,-99) , 
10, 0.714312, 1, 0, 0.498493,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0218815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494925,-99) , 
8, 3.72299, 1, 0, 0.518836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490158,-99) , 
8, 1.72756, 0, 0, 0.50535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474763,-99) , 
12, 0.340408, 0, 0, 0.493825,-99) , 
10, 0.142855, 1, 0, 0.499267,-99) , 
11, -3.20228, 1, 0, 0.501253,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0268293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.517349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482942,-99) , 
0, 0.493328, 0, 0, 0.512627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493441,-99) , 
8, 1.97255, 0, 0, 0.50162,-99) , 
NN(
0, 
0, 
-1, -0.413452, 1, -1, 0.476511,-99) , 
12, -0.25297, 0, 0, 0.497114,-99) , 
3, 2.95463, 0, 0, 0.501559,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0134894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496982,-99) , 
10, 0.143075, 1, 0, 0.505917,-99) , 
3, 1.62155, 0, 0, 0.509966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498554,-99) , 
11, -3.86402, 1, 0, 0.500632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460618,-99) , 
8, 1.4994, 0, 0, 0.498722,-99) , 
12, 2.29929, 0, 0, 0.501131,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0229062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0141839, 0, 1, 0.510792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457629,-99) , 
11, 2.71629, 0, 0, 0.489371,-99) , 
3, 1.22111, 0, 0, 0.507759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491433,-99) , 
5, 0.999955, 1, 0, 0.497314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462431,-99) , 
5, 0.999048, 0, 0, 0.495316,-99) , 
10, 0.142857, 1, 0, 0.501787,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0208928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476024,-99) , 
8, 1.38035, 0, 0, 0.515783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463224,-99) , 
3, 2.9565, 0, 0, 0.489928,-99) , 
12, -1.23709, 0, 0, 0.507662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517335,-99) , 
NN(
0, 
0, 
-1, 2.18367, 1, -1, 0.496702,-99) , 
11, 6.09877, 0, 0, 0.498009,-99) , 
10, -0.428571, 1, 0, 0.501113,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0227068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.604903, 0, 1, 0.511784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463979,-99) , 
8, 3.11087, 0, 0, 0.485023,-99) , 
11, -1.33076, 1, 0, 0.508217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49488,-99) , 
4, 1.43457, 1, 0, 0.501038,-99) , 
NN(
0, 
0, 
-1, -0.29714, 1, -1, 0.468849,-99) , 
12, -0.316963, 0, 0, 0.497611,-99) , 
3, 2.45744, 0, 0, 0.502134,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0257494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.17091, 0, 1, 0.51092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477469,-99) , 
9, -951.286, 0, 0, 0.496403,-99) , 
10, 1.28572, 1, 0, 0.506983,-99) , 
NN(
NN(
0, 
0, 
-1, 3.30697, 1, 1, 0.508643,-99) , 
NN(
0, 
0, 
-1, 0.444435, 1, -1, 0.485884,-99) , 
3, 2.88614, 0, 0, 0.497377,-99) , 
12, 0.652195, 0, 0, 0.502057,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0144646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480036,-99) , 
8, 3.75993, 1, 0, 0.501415,-99) , 
3, 3.7585, 0, 0, 0.502673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466739,-99) , 
3, 4.37044, 0, 0, 0.487468,-99) , 
8, 4.30312, 1, 0, 0.501404,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0134404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49731,-99) , 
3, 3.47075, 0, 0, 0.498901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450808,-99) , 
11, -2.81927, 0, 0, 0.479025,-99) , 
13, 3.93037, 1, 0, 0.49696,-99) , 
3, 4.17012, 0, 0, 0.497732,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0166357);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482273,-99) , 
12, -1.26635, 0, 0, 0.50285,-99) , 
NN(
0, 
0, 
-1, 1.28652, 0, -1, 0.493004,-99) , 
8, 2.09059, 0, 0, 0.499022,-99) , 
10, -1.85714, 1, 0, 0.500189,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.00836662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499549,-99) , 
7, 0.00792932, 0, 0, 0.502014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479393,-99) , 
7, 0.0237891, 1, 0, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471642,-99) , 
0, 0.489519, 0, 0, 0.500243,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0211576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497143,-99) , 
12, -0.571065, 0, 0, 0.510186,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.477271,-99) , 
3, 1.21474, 0, 0, 0.505489,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.507538,-99) , 
NN(
0, 
0, 
-1, 2.19419, 0, -1, 0.492262,-99) , 
12, 1.74776, 0, 0, 0.497717,-99) , 
10, -0.142859, 1, 0, 0.500963,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0126955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.07148, 1, 1, 0.517159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483985,-99) , 
8, 1.27362, 0, 0, 0.499222,-99) , 
3, 3.40921, 0, 0, 0.502217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477479,-99) , 
4, 8.71744, 1, 0, 0.501094,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0185977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.275, 0, 1, 0.522168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475463,-99) , 
3, 3.32611, 0, 0, 0.491993,-99) , 
13, 2.97708, 1, 0, 0.51309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493877,-99) , 
11, -1.20415, 1, 0, 0.499197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47719,-99) , 
7, 0.0238024, 1, 0, 0.498281,-99) , 
10, -0.714257, 1, 0, 0.501762,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0187241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91497, 0, 1, 0.505401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483549,-99) , 
8, 1.1352, 0, 0, 0.503794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480684,-99) , 
11, -1.69532, 1, 0, 0.487494,-99) , 
11, 1.98693, 0, 0, 0.492487,-99) , 
10, 0.714254, 1, 0, 0.500587,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.016228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495063,-99) , 
10, -1.22755, 0, 0, 0.520461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494574,-99) , 
12, 1.51868, 0, 0, 0.499008,-99) , 
11, -3.46978, 1, 0, 0.500466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47683,-99) , 
0, 0.505709, 1, 0, 0.499559,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0365271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498127,-99) , 
10, 1.43836, 1, 0, 0.518063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489305,-99) , 
11, 1.19344, 0, 0, 0.500007,-99) , 
8, 2.32077, 0, 0, 0.503917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489284,-99) , 
12, -0.162313, 0, 0, 0.50009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466929,-99) , 
8, 3.06061, 0, 0, 0.482623,-99) , 
11, -2.01121, 1, 0, 0.494126,-99) , 
12, 0.748335, 0, 0, 0.498686,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0211395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30447, 0, 1, 0.509452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485019,-99) , 
12, 1.38121, 0, 0, 0.496123,-99) , 
10, 0.714279, 1, 0, 0.505608,-99) , 
NN(
0, 
0, 
-1, -0.900931, 1, -1, 0.480524,-99) , 
8, 1.13718, 0, 0, 0.50385,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0248227);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496351,-99) , 
12, 0.147294, 0, 0, 0.506996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48116,-99) , 
12, 1.12678, 0, 0, 0.493341,-99) , 
10, 0.428565, 1, 0, 0.501781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444412,-99) , 
12, 7.13194, 0, 0, 0.479481,-99) , 
8, 1.1489, 0, 0, 0.500169,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0243756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.661283, 0, 1, 0.507172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486301,-99) , 
10, -1.47614, 1, 0, 0.492073,-99) , 
8, 1.77285, 0, 0, 0.502498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493637,-99) , 
6, -0.545868, 0, 0, 0.505854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467384,-99) , 
11, -1.5274, 1, 0, 0.479893,-99) , 
11, 0.282141, 0, 0, 0.487974,-99) , 
10, 1.00002, 1, 0, 0.499529,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0122972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139604, 1, 1, 0.512037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495621,-99) , 
10, -0.142861, 1, 0, 0.499051,-99) , 
2, -0.071606, 1, 0, 0.501335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477509,-99) , 
4, 9.40736, 1, 0, 0.500477,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0140568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487866,-99) , 
13, 2.99362, 1, 0, 0.497905,-99) , 
3, 3.88561, 0, 0, 0.499524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466141,-99) , 
13, 4.92272, 1, 0, 0.498435,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0132195);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497609,-99) , 
11, 1.41906, 0, 0, 0.499521,-99) , 
NN(
0, 
0, 
-1, 1.03641, 0, -1, 0.458446,-99) , 
8, 1.25463, 0, 0, 0.497147,-99) , 
12, 7.06272, 0, 0, 0.498007,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0203502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489951,-99) , 
0, 0.500947, 1, 0, 0.501218,-99) , 
6, -0.247751, 1, 0, 0.503848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490657,-99) , 
9, -948.87, 1, 0, 0.502344,-99) , 
NN(
0, 
0, 
-1, 1.55892, 0, -1, 0.484819,-99) , 
12, 1.78548, 0, 0, 0.493983,-99) , 
3, 2.21084, 0, 0, 0.498951,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0232933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476244,-99) , 
13, 3.87109, 1, 0, 0.512626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497496,-99) , 
8, 2.07953, 0, 0, 0.503556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483217,-99) , 
8, 3.58092, 0, 0, 0.491296,-99) , 
12, 0.128265, 0, 0, 0.4996,-99) , 
11, -3.20313, 1, 0, 0.500918,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0165359);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484053,-99) , 
12, -1.42174, 0, 0, 0.507363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492347,-99) , 
8, 2.44371, 0, 0, 0.498026,-99) , 
10, -0.999967, 1, 0, 0.499568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475009,-99) , 
0, 0.489519, 0, 0, 0.498873,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0333934);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497807,-99) , 
8, 1.90387, 0, 0, 0.510347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484632,-99) , 
9, -951.286, 0, 0, 0.494987,-99) , 
10, 1.00004, 1, 0, 0.504815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494776,-99) , 
12, -0.195963, 0, 0, 0.503908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462204,-99) , 
8, 2.9871, 0, 0, 0.478195,-99) , 
11, -2.06454, 1, 0, 0.494804,-99) , 
12, 0.711478, 0, 0, 0.49956,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0250749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496536,-99) , 
11, -0.617334, 1, 0, 0.504314,-99) , 
11, 4.87847, 0, 0, 0.507667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494369,-99) , 
12, -0.109726, 0, 0, 0.501417,-99) , 
NN(
0, 
0, 
-1, 2.78361, 0, -1, 0.478951,-99) , 
10, 0.407, 1, 0, 0.495104,-99) , 
12, 1.12226, 0, 0, 0.500018,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0299403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.336929, 0, 1, 0.515713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468544,-99) , 
11, 2.83427, 0, 0, 0.493073,-99) , 
8, 1.44209, 0, 0, 0.511501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492837,-99) , 
10, 0.823178, 1, 0, 0.500905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439695,-99) , 
3, 3.12523, 0, 0, 0.481721,-99) , 
12, 0.201335, 0, 0, 0.496922,-99) , 
10, 0.14292, 1, 0, 0.504554,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0228957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477531,-99) , 
12, -1.67449, 0, 0, 0.531684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48987,-99) , 
12, 0.374532, 0, 0, 0.499366,-99) , 
11, -3.23012, 1, 0, 0.501739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465282,-99) , 
9, -951.286, 1, 0, 0.482541,-99) , 
8, 4.29027, 1, 0, 0.500099,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0189795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.35175, 0, 1, 0.506006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486671,-99) , 
11, -2.63449, 1, 0, 0.496355,-99) , 
12, 0.500329, 0, 0, 0.501498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470029,-99) , 
5, 0.998572, 0, 0, 0.500358,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0119396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57143, 1, 1, 0.503825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467301,-99) , 
12, -1.97011, 0, 0, 0.502539,-99) , 
NN(
0, 
0, 
-1, -0.884912, 1, -1, 0.479624,-99) , 
8, 1.1489, 0, 0, 0.500876,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0243847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.285856, 0, 1, 0.508577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473507,-99) , 
9, -951.275, 0, 0, 0.490447,-99) , 
3, 1.47486, 0, 0, 0.504043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516324,-99) , 
NN(
0, 
0, 
-1, 2.56792, 0, -1, 0.490116,-99) , 
3, 1.48986, 1, 0, 0.494498,-99) , 
10, 0.428585, 1, 0, 0.500447,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0115354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48328,-99) , 
12, -1.70766, 0, 0, 0.521369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498852,-99) , 
10, -1.8571, 1, 0, 0.50015,-99) , 
11, -3.30205, 1, 0, 0.501685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481976,-99) , 
8, 4.61728, 1, 0, 0.500674,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0175666);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.531572, 1, 1, 0.520461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492238,-99) , 
3, 1.7019, 0, 0, 0.502799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486615,-99) , 
8, 2.72179, 0, 0, 0.492703,-99) , 
10, -0.142837, 1, 0, 0.496933,-99) , 
2, -0.214032, 1, 0, 0.498316,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0123764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.378086, 1, 1, 0.503023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476755,-99) , 
6, -0.585396, 1, 0, 0.493856,-99) , 
3, 1.88159, 0, 0, 0.499445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469591,-99) , 
6, 0.772286, 1, 0, 0.498666,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0116886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497543,-99) , 
10, -1.857, 1, 0, 0.498845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448516,-99) , 
3, 1.148, 0, 0, 0.497316,-99) , 
11, 4.46349, 0, 0, 0.498722,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0259237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496867,-99) , 
11, -0.716846, 1, 0, 0.514524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492058,-99) , 
10, -0.299148, 1, 0, 0.499704,-99) , 
12, 1.19343, 0, 0, 0.502593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491589,-99) , 
6, -0.700918, 1, 0, 0.503407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426857,-99) , 
11, 3.17855, 0, 0, 0.481231,-99) , 
8, 1.34895, 0, 0, 0.493519,-99) , 
8, 1.77275, 0, 0, 0.500018,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0189641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.497189, 1, 1, 0.512907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484864,-99) , 
10, 0.338401, 1, 0, 0.497251,-99) , 
12, 1.41713, 0, 0, 0.501731,-99) , 
NN(
0, 
0, 
-1, -0.885613, 1, -1, 0.48163,-99) , 
8, 1.14857, 0, 0, 0.500286,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0192423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.37274, 1, 1, 0.509051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479964,-99) , 
8, 1.258, 0, 0, 0.496184,-99) , 
8, 2.08798, 0, 0, 0.50268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509187,-99) , 
NN(
0, 
0, 
-1, -2.83977, 0, -1, 0.481553,-99) , 
11, -3.59835, 1, 0, 0.488356,-99) , 
12, -0.60248, 0, 0, 0.499525,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0238763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.64583, 1, 1, 0.507603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491939,-99) , 
10, -1.57144, 1, 0, 0.494416,-99) , 
8, 2.40489, 0, 0, 0.499871,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482323,-99) , 
11, -3.41397, 1, 0, 0.495922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447981,-99) , 
12, -1.97289, 0, 0, 0.487379,-99) , 
12, -0.791829, 0, 0, 0.497623,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0188133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.9809, 1, 1, 0.524719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478106,-99) , 
8, 1.00886, 0, 0, 0.493977,-99) , 
8, 1.32022, 0, 0, 0.507703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496988,-99) , 
6, -0.613186, 1, 0, 0.499082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426011,-99) , 
8, 1.5323, 0, 0, 0.496336,-99) , 
11, 0.730904, 0, 0, 0.498634,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0366531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.23606, 0, 1, 0.508371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475569,-99) , 
12, 1.80521, 0, 0, 0.494682,-99) , 
10, 1.00003, 1, 0, 0.503514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486435,-99) , 
12, -0.582557, 0, 0, 0.501376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469118,-99) , 
8, 3.30854, 0, 0, 0.483769,-99) , 
11, -2.3562, 1, 0, 0.493643,-99) , 
12, 0.503541, 0, 0, 0.498778,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0206165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493369,-99) , 
8, 1.59322, 0, 0, 0.520693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476899,-99) , 
11, -3.36436, 1, 0, 0.494175,-99) , 
12, -1.22621, 0, 0, 0.510617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488904,-99) , 
8, 2.11992, 0, 0, 0.497641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472265,-99) , 
10, 2.11564, 1, 0, 0.496489,-99) , 
10, -0.714288, 1, 0, 0.499851,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0193914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493934,-99) , 
9, -951.203, 1, 0, 0.515802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492286,-99) , 
3, 2.9468, 0, 0, 0.497064,-99) , 
7, 0.0102028, 0, 0, 0.499358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476481,-99) , 
7, 0.0238076, 1, 0, 0.498403,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0192522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.525412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489556,-99) , 
6, 0.0190898, 1, 0, 0.500026,-99) , 
5, 0.999524, 1, 0, 0.502723,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478972,-99) , 
2, 0.112439, 1, 0, 0.495728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461621,-99) , 
2, -0.214055, 0, 0, 0.491053,-99) , 
4, 4.74166, 1, 0, 0.500493,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0282816);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495412,-99) , 
12, -0.587825, 0, 0, 0.516884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486443,-99) , 
12, 1.17684, 0, 0, 0.496217,-99) , 
11, -2.36093, 1, 0, 0.500468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474642,-99) , 
9, -951.286, 1, 0, 0.500912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453247,-99) , 
11, -2.65848, 0, 0, 0.474811,-99) , 
3, 3.99612, 0, 0, 0.487771,-99) , 
8, 3.99068, 1, 0, 0.498845,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0254739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463194,-99) , 
8, 1.32441, 0, 0, 0.521581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483137,-99) , 
8, 2.97023, 1, 0, 0.510183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492363,-99) , 
12, -0.269092, 0, 0, 0.502368,-99) , 
NN(
0, 
0, 
-1, 0.234575, 0, -1, 0.491327,-99) , 
3, 2.23218, 0, 0, 0.497008,-99) , 
10, -1, 1, 0, 0.499191,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0272725);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496009,-99) , 
12, -0.236073, 0, 0, 0.507243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469049,-99) , 
11, 2.71391, 0, 0, 0.490801,-99) , 
8, 1.45888, 0, 0, 0.50414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491234,-99) , 
10, 0.91837, 1, 0, 0.498304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456935,-99) , 
11, -2.17204, 1, 0, 0.476617,-99) , 
12, 0.523048, 0, 0, 0.492825,-99) , 
10, 0.428565, 1, 0, 0.499856,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.025773);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486811,-99) , 
12, -1.44714, 0, 0, 0.519661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474025,-99) , 
8, 1.72041, 0, 0, 0.499541,-99) , 
9, -951.275, 0, 0, 0.507799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493285,-99) , 
12, 1.25501, 0, 0, 0.498398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477283,-99) , 
10, 2.0204, 1, 0, 0.497076,-99) , 
10, -0.428571, 1, 0, 0.500535,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0265379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497836,-99) , 
12, -1.08023, 0, 0, 0.513586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474762,-99) , 
8, 1.1306, 0, 0, 0.510665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492518,-99) , 
12, 0.355561, 0, 0, 0.502699,-99) , 
NN(
0, 
0, 
-1, 1.11787, 0, -1, 0.487941,-99) , 
8, 2.40449, 0, 0, 0.495916,-99) , 
10, -0.142805, 1, 0, 0.502097,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0148854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497475,-99) , 
8, 4.01557, 1, 0, 0.528399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487614,-99) , 
8, 1.77065, 0, 0, 0.497015,-99) , 
10, -1.57143, 1, 0, 0.498794,-99) , 
11, -3.39785, 1, 0, 0.501054,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0222564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0637208, 0, 1, 0.513974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492103,-99) , 
10, -1.69383, 1, 0, 0.498039,-99) , 
3, 1.95126, 0, 0, 0.506783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497821,-99) , 
0, 0.492376, 1, 0, 0.5003,-99) , 
NN(
0, 
0, 
-1, 3.24798, 0, -1, 0.478936,-99) , 
12, 0.44619, 0, 0, 0.495523,-99) , 
10, 0.428573, 1, 0, 0.502543,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0185684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470542,-99) , 
3, 3.28433, 0, 0, 0.503471,-99) , 
8, 3.15642, 1, 0, 0.515839,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57144, 0, 1, 0.51033,-99) , 
NN(
0, 
0, 
-1, 1.55436, 0, -1, 0.496403,-99) , 
11, 0.558879, 0, 0, 0.499997,-99) , 
11, -2.88184, 1, 0, 0.50246,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0170881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459237,-99) , 
8, 1.25189, 0, 0, 0.502805,-99) , 
12, 6.44505, 0, 0, 0.503936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465835,-99) , 
6, 0.767771, 1, 0, 0.502902,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0193069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494976,-99) , 
12, -1.53581, 0, 0, 0.522657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482731,-99) , 
8, 1.43017, 0, 0, 0.513269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489171,-99) , 
8, 1.90433, 0, 0, 0.498921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478981,-99) , 
8, 4.71033, 1, 0, 0.498007,-99) , 
10, -1.00004, 1, 0, 0.500527,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0203238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474982,-99) , 
13, 4.32818, 1, 0, 0.505728,-99) , 
3, 4.34551, 0, 0, 0.513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498115,-99) , 
6, -0.507635, 1, 0, 0.50254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417216,-99) , 
11, 0.57248, 0, 0, 0.489635,-99) , 
8, 1.55492, 0, 0, 0.499645,-99) , 
3, 3.69097, 0, 0, 0.501119,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0148441);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.16837, 1, 1, 0.504648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499892,-99) , 
10, -0.428153, 1, 0, 0.504938,-99) , 
NN(
0, 
0, 
-1, 1.61138, 0, -1, 0.48151,-99) , 
12, 1.3646, 0, 0, 0.495983,-99) , 
3, 2.21826, 0, 0, 0.500336,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0198153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499342,-99) , 
12, 0.901845, 0, 0, 0.505675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470457,-99) , 
11, -0.847464, 1, 0, 0.483575,-99) , 
10, 1.57145, 1, 0, 0.50345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48259,-99) , 
8, 1.04582, 0, 0, 0.500075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461706,-99) , 
12, 2.6454, 0, 0, 0.491479,-99) , 
8, 1.45445, 0, 0, 0.501527,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0188416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.26597, 1, 1, 0.515401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479857,-99) , 
0, 0.494281, 0, 0, 0.498301,-99) , 
6, 0.445899, 1, 0, 0.507777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499303,-99) , 
9, -951.275, 0, 0, 0.512824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4543,-99) , 
12, 0.0977996, 0, 0, 0.495229,-99) , 
10, -0.71427, 1, 0, 0.499692,-99) , 
3, 2.72708, 0, 0, 0.50252,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0191784);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462495,-99) , 
10, 2.07483, 1, 0, 0.503715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467952,-99) , 
11, 0.927311, 0, 0, 0.490616,-99) , 
8, 1.79614, 0, 0, 0.50002,-99) , 
10, -1.8571, 1, 0, 0.501154,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0188444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.08881, 0, 1, 0.50547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477834,-99) , 
3, 0.98242, 0, 0, 0.503747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495367,-99) , 
11, -2.38056, 1, 0, 0.502136,-99) , 
NN(
0, 
0, 
-1, 0.951703, 0, -1, 0.485219,-99) , 
3, 2.72709, 0, 0, 0.491688,-99) , 
10, 0.142889, 1, 0, 0.497982,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0219061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.96538, 1, 1, 0.506556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484055,-99) , 
3, 4.32812, 0, 0, 0.491642,-99) , 
8, 3.89321, 1, 0, 0.503506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492228,-99) , 
11, 0.00322601, 0, 0, 0.513904,-99) , 
NN(
0, 
0, 
-1, 0.463801, 0, -1, 0.484809,-99) , 
8, 1.61142, 0, 0, 0.492035,-99) , 
8, 1.79644, 0, 0, 0.500155,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0222162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486779,-99) , 
5, 0.999964, 0, 0, 0.500838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452119,-99) , 
5, 0.999238, 0, 0, 0.499113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516405,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.484224,-99) , 
3, 4.35038, 0, 0, 0.487982,-99) , 
6, 0.216017, 1, 0, 0.496177,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0205327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0773023, 1, 1, 0.511483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486459,-99) , 
12, -1.41914, 0, 0, 0.506005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492815,-99) , 
10, 0.142852, 1, 0, 0.499511,-99) , 
NN(
0, 
0, 
-1, -0.872644, 1, -1, 0.48273,-99) , 
12, -0.349132, 0, 0, 0.495932,-99) , 
3, 3.43621, 0, 0, 0.497578,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0139114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551083,-99) , 
NN(
0, 
0, 
-1, -3.70616, 1, -1, 0.494281,-99) , 
13, 3.48617, 1, 0, 0.512389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491199,-99) , 
8, 2.40339, 0, 0, 0.495474,-99) , 
10, -1.85714, 1, 0, 0.496529,-99) , 
11, -3.2647, 1, 0, 0.49799,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0206155);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493264,-99) , 
12, -1.53993, 0, 0, 0.518643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482402,-99) , 
8, 1.43183, 0, 0, 0.510085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496826,-99) , 
11, -2.26295, 1, 0, 0.500424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487885,-99) , 
2, 0.0720489, 0, 0, 0.49064,-99) , 
0, 0.49809, 1, 0, 0.495509,-99) , 
10, -0.999998, 1, 0, 0.497924,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0177027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56439, 0, 1, 0.536914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477082,-99) , 
12, -1.54429, 0, 0, 0.514594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492742,-99) , 
8, 1.72962, 0, 0, 0.512036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492915,-99) , 
12, 1.04527, 0, 0, 0.497127,-99) , 
10, -0.877523, 1, 0, 0.498523,-99) , 
10, -1.28569, 1, 0, 0.500294,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0273885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497813,-99) , 
11, -1.60717, 1, 0, 0.508982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48295,-99) , 
11, -2.5537, 1, 0, 0.496952,-99) , 
12, 0.197478, 0, 0, 0.503189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493337,-99) , 
8, 1.22973, 0, 0, 0.503716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465848,-99) , 
6, -0.760363, 1, 0, 0.4924,-99) , 
8, 1.4567, 0, 0, 0.501451,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0165018);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496929,-99) , 
12, 0.467197, 0, 0, 0.503032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469852,-99) , 
3, 1.19219, 0, 0, 0.501619,-99) , 
11, 4.46349, 0, 0, 0.503008,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0229598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489514,-99) , 
8, 4.04518, 1, 0, 0.518663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496903,-99) , 
13, 1.94896, 0, 0, 0.504478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487586,-99) , 
11, -1.70913, 0, 0, 0.491591,-99) , 
12, 0.159386, 0, 0, 0.500075,-99) , 
11, -3.33543, 1, 0, 0.501626,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0166197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486779,-99) , 
13, 1.32463, 0, 0, 0.519674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474818,-99) , 
10, -1.5848, 0, 0, 0.494699,-99) , 
12, -1.12841, 0, 0, 0.509416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516205,-99) , 
NN(
0, 
0, 
-1, 4.00588, 1, -1, 0.496244,-99) , 
11, 5.91861, 0, 0, 0.497518,-99) , 
10, -0.714288, 1, 0, 0.500334,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0201507);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48522,-99) , 
11, -2.29764, 1, 0, 0.525512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487226,-99) , 
8, 4.86979, 1, 0, 0.513579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492124,-99) , 
8, 1.56301, 0, 0, 0.501844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481082,-99) , 
11, -3.59128, 1, 0, 0.488405,-99) , 
12, -0.731684, 0, 0, 0.499658,-99) , 
3, 3.71682, 0, 0, 0.501134,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0146152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530739,-99) , 
NN(
NN(
0, 
0, 
-1, 1.38451, 0, 1, 0.512917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457259,-99) , 
8, 1.61695, 0, 0, 0.498462,-99) , 
11, 1.47597, 0, 0, 0.500745,-99) , 
10, -1.8571, 1, 0, 0.502043,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0170586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497512,-99) , 
8, 1.21345, 0, 0, 0.506395,-99) , 
8, 1.5697, 0, 0, 0.512869,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454872,-99) , 
8, 1.54522, 0, 0, 0.500863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4413,-99) , 
10, 2.14274, 1, 0, 0.499013,-99) , 
11, 0.946953, 0, 0, 0.501607,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0196837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28954, 0, 1, 0.533675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457212,-99) , 
11, 3.99963, 0, 0, 0.500139,-99) , 
8, 1.32543, 0, 0, 0.515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471232,-99) , 
10, 1.85713, 1, 0, 0.499512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451645,-99) , 
8, 1.58035, 0, 0, 0.497121,-99) , 
11, 0.730904, 0, 0, 0.500742,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0122055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499275,-99) , 
13, 1.03949, 0, 0, 0.511974,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498665,-99) , 
9, -951.286, 1, 0, 0.513467,-99) , 
NN(
0, 
0, 
-1, -1.61306, 0, -1, 0.495696,-99) , 
3, 3.81378, 0, 0, 0.497468,-99) , 
11, 3.10273, 0, 0, 0.498912,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0215676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494798,-99) , 
8, 1.39704, 0, 0, 0.532353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481924,-99) , 
12, -1.56698, 0, 0, 0.51337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483413,-99) , 
12, 0.302384, 1, 0, 0.505535,-99) , 
NN(
0, 
0, 
-1, -0.473086, 0, -1, 0.49285,-99) , 
3, 3.22196, 0, 0, 0.495652,-99) , 
10, -1.28568, 1, 0, 0.497609,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0166626);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714256, 1, 1, 0.508806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495699,-99) , 
6, -0.430493, 1, 0, 0.497715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464465,-99) , 
8, 1.80727, 0, 0, 0.495114,-99) , 
12, 1.15319, 0, 0, 0.500392,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0103321);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498624,-99) , 
11, 1.80549, 0, 0, 0.500191,-99) , 
NN(
0, 
0, 
-1, -0.822298, 1, -1, 0.471029,-99) , 
8, 1.29568, 0, 0, 0.498207,-99) , 
12, 6.96981, 0, 0, 0.499064,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0106995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497077,-99) , 
8, 1.38419, 0, 0, 0.514253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498761,-99) , 
11, 2.43491, 0, 0, 0.500763,-99) , 
7, 0.0102009, 0, 0, 0.502398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477383,-99) , 
7, 0.0238024, 1, 0, 0.501364,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.014434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28026, 0, 1, 0.514268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46643,-99) , 
8, 1.54583, 0, 0, 0.501866,-99) , 
11, 0.890253, 0, 0, 0.504243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475369,-99) , 
0, 0.489519, 0, 0, 0.503429,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0280631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486346,-99) , 
12, 0.916742, 0, 0, 0.501214,-99) , 
11, -2.5241, 1, 0, 0.505747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492019,-99) , 
11, -3.40259, 1, 0, 0.497277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465985,-99) , 
3, 2.87582, 0, 0, 0.493288,-99) , 
13, 3.04195, 1, 0, 0.501618,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0109382);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4984,-99) , 
11, 1.32464, 0, 0, 0.499675,-99) , 
NN(
0, 
0, 
-1, 1.91915, 0, -1, 0.475361,-99) , 
8, 1.41442, 0, 0, 0.497364,-99) , 
11, 6.00272, 0, 0, 0.498459,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0240386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.35335, 0, 1, 0.542982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496926,-99) , 
12, -1.42485, 0, 0, 0.524614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490163,-99) , 
10, 0.959185, 1, 0, 0.504686,-99) , 
NN(
0, 
0, 
-1, 0.257071, 0, -1, 0.48986,-99) , 
8, 2.08669, 0, 0, 0.499079,-99) , 
10, -1.28571, 1, 0, 0.501925,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0202395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.93207, 0, 1, 0.511152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486397,-99) , 
11, -1.88859, 1, 0, 0.499396,-99) , 
12, 0.602444, 0, 0, 0.504394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515057,-99) , 
NN(
0, 
0, 
-1, 2.88478, 0, -1, 0.475237,-99) , 
11, 0.45099, 0, 0, 0.486784,-99) , 
10, 1.28573, 1, 0, 0.501917,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0270594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473424,-99) , 
13, 1.23348, 0, 0, 0.525359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488517,-99) , 
13, 2.99209, 1, 0, 0.49532,-99) , 
12, -1.16731, 0, 0, 0.513338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498894,-99) , 
6, -0.211966, 1, 0, 0.501979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483686,-99) , 
11, 5.83349, 0, 0, 0.487873,-99) , 
8, 2.40311, 0, 0, 0.495336,-99) , 
10, -0.714243, 1, 0, 0.499596,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0234133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492509,-99) , 
3, 1.35918, 0, 0, 0.527029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498115,-99) , 
8, 2.40313, 0, 0, 0.504871,-99) , 
10, -1.28568, 1, 0, 0.506343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548924,-99) , 
NN(
0, 
0, 
-1, -3.21207, 0, -1, 0.475821,-99) , 
11, -3.86435, 1, 0, 0.493747,-99) , 
12, -1.03427, 0, 0, 0.504622,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0182419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464922,-99) , 
8, 1.53509, 0, 0, 0.501972,-99) , 
11, 1.72552, 0, 0, 0.504169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466381,-99) , 
6, -0.827987, 1, 0, 0.488238,-99) , 
12, 4.0705, 1, 0, 0.502531,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0230808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.81563, 0, 1, 0.52171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495996,-99) , 
8, 2.71835, 0, 0, 0.501248,-99) , 
10, -0.42853, 1, 0, 0.505634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491957,-99) , 
12, -1.22762, 0, 0, 0.509252,-99) , 
NN(
0, 
0, 
-1, -0.898654, 1, -1, 0.477065,-99) , 
3, 3.16537, 0, 0, 0.493957,-99) , 
12, -0.764065, 0, 0, 0.503454,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0273262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494454,-99) , 
13, 1.57313, 0, 0, 0.505061,-99) , 
10, -0.71413, 1, 0, 0.508019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494701,-99) , 
12, -0.00691278, 0, 0, 0.504023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418065,-99) , 
8, 2.91396, 0, 0, 0.482009,-99) , 
10, 0.510693, 1, 0, 0.498459,-99) , 
12, 1.22116, 0, 0, 0.502033,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0148939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490989,-99) , 
6, -0.536124, 0, 0, 0.509825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495846,-99) , 
10, -0.999967, 1, 0, 0.497928,-99) , 
2, -0.071166, 1, 0, 0.500018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471442,-99) , 
4, 9.40736, 1, 0, 0.49901,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0211681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499394,-99) , 
12, 0.348532, 0, 0, 0.507574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476236,-99) , 
3, 0.995156, 0, 0, 0.505574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498385,-99) , 
4, 2.53958, 1, 0, 0.510511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450694,-99) , 
8, 2.64866, 0, 0, 0.490541,-99) , 
11, -0.0645265, 0, 0, 0.497554,-99) , 
10, 0.714278, 1, 0, 0.503276,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.023002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48395,-99) , 
8, 1.12074, 0, 0, 0.506975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483305,-99) , 
10, 0.809514, 1, 0, 0.505477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499749,-99) , 
10, 1.66665, 1, 0, 0.508882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457629,-99) , 
11, -1.40084, 1, 0, 0.476157,-99) , 
11, -0.280496, 0, 0, 0.489666,-99) , 
10, 0.999989, 1, 0, 0.502247,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0128949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.101766, 1, 1, 0.505998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495343,-99) , 
10, -1.85708, 1, 0, 0.497108,-99) , 
3, 2.47964, 0, 0, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481704,-99) , 
0, 0.505709, 1, 0, 0.50013,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0131825);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49832,-99) , 
11, 0.379837, 0, 0, 0.501102,-99) , 
NN(
0, 
0, 
-1, -0.817662, 1, -1, 0.473504,-99) , 
8, 1.3119, 0, 0, 0.499192,-99) , 
12, 6.60159, 0, 0, 0.500545,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0177162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485262,-99) , 
13, 3.95295, 1, 0, 0.517193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496377,-99) , 
10, 0.428686, 1, 0, 0.502076,-99) , 
NN(
0, 
0, 
-1, 2.25408, 0, -1, 0.491097,-99) , 
12, -0.0182418, 0, 0, 0.498819,-99) , 
11, -3.33543, 1, 0, 0.50035,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0166173);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.05933, 0, 1, 0.517987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495894,-99) , 
12, 0.391249, 0, 0, 0.502018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467759,-99) , 
3, 1.22799, 0, 0, 0.500773,-99) , 
11, 2.99954, 0, 0, 0.502518,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0126);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528425,-99) , 
NN(
NN(
0, 
0, 
-1, 1.04541, 0, 1, 0.504211,-99) , 
NN(
0, 
0, 
-1, -0.850116, 1, -1, 0.476702,-99) , 
8, 1.25304, 0, 0, 0.502545,-99) , 
12, 7.34815, 0, 0, 0.503591,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0187816);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499945,-99) , 
12, -0.342071, 0, 0, 0.510421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48444,-99) , 
12, 0.789795, 0, 0, 0.495967,-99) , 
11, -2.19922, 1, 0, 0.500765,-99) , 
11, 4.49462, 0, 0, 0.502073,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0198051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486477,-99) , 
11, -3.5723, 1, 0, 0.500937,-99) , 
12, -0.927265, 0, 0, 0.512519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494847,-99) , 
11, 4.15135, 0, 0, 0.496635,-99) , 
8, 4.30537, 0, 0, 0.497681,-99) , 
11, -2.71411, 1, 0, 0.500503,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0216024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499645,-99) , 
8, 2.04908, 0, 0, 0.51082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482044,-99) , 
11, -3.64548, 1, 0, 0.493395,-99) , 
12, -1.16731, 0, 0, 0.507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490082,-99) , 
8, 2.55537, 0, 0, 0.496107,-99) , 
NN(
0, 
0, 
-1, 4.31802, 1, -1, 0.478083,-99) , 
6, 0.496641, 1, 0, 0.493535,-99) , 
10, 0.142889, 1, 0, 0.500573,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0228948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496343,-99) , 
3, 1.94683, 0, 0, 0.50665,-99) , 
10, -2.04758, 1, 0, 0.508899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495767,-99) , 
10, 0.605439, 1, 0, 0.500863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46249,-99) , 
11, -2.60442, 1, 0, 0.483193,-99) , 
12, 0.05295, 0, 0, 0.497101,-99) , 
10, -0.142852, 1, 0, 0.502051,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0177226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.67915, 0, 1, 0.505915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466936,-99) , 
10, 2.14298, 1, 0, 0.504506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488283,-99) , 
8, 1.05639, 0, 0, 0.502124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461193,-99) , 
12, 2.7078, 0, 0, 0.492154,-99) , 
8, 1.47267, 0, 0, 0.502426,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0168532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492307,-99) , 
12, -1.13209, 0, 0, 0.527787,-99) , 
NN(
0, 
0, 
-1, -1.57139, 1, 1, 0.502605,-99) , 
11, -2.58176, 1, 0, 0.505233,-99) , 
NN(
NN(
0, 
0, 
-1, 3.87924, 0, 1, 0.520044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461542,-99) , 
3, 3.39517, 0, 0, 0.488266,-99) , 
11, -1.86971, 0, 0, 0.494649,-99) , 
8, 3.35419, 1, 0, 0.502509,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0170579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499058,-99) , 
13, 1.63934, 0, 0, 0.522207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486104,-99) , 
12, -1.52087, 0, 0, 0.496252,-99) , 
12, -1.10503, 0, 0, 0.511437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486343,-99) , 
7, 0.00113279, 0, 0, 0.499747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475259,-99) , 
7, 0.0237891, 1, 0, 0.49873,-99) , 
10, -0.714289, 1, 0, 0.501741,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0201741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477723,-99) , 
13, 4.24287, 1, 0, 0.496735,-99) , 
8, 3.51757, 1, 0, 0.515624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48747,-99) , 
12, 0.631828, 0, 0, 0.495428,-99) , 
10, -1.85708, 1, 0, 0.496907,-99) , 
11, -3.17114, 1, 0, 0.498903,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0270295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91526, 0, 1, 0.509079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483453,-99) , 
3, 3.38787, 0, 0, 0.492927,-99) , 
12, -1.0133, 0, 0, 0.503747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491348,-99) , 
12, 0.721895, 0, 0, 0.50403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47723,-99) , 
12, 2.383, 0, 0, 0.488618,-99) , 
11, -1.28001, 1, 0, 0.495392,-99) , 
10, -0.14283, 1, 0, 0.498873,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0286292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.019544, 0, 1, 0.508715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484403,-99) , 
12, 1.41471, 0, 0, 0.494089,-99) , 
10, 0.42883, 1, 0, 0.502646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49295,-99) , 
13, 1.20476, 0, 0, 0.505413,-99) , 
NN(
0, 
0, 
-1, 1.37674, 0, -1, 0.472677,-99) , 
11, 2.05407, 0, 0, 0.487183,-99) , 
8, 1.79614, 0, 0, 0.498132,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0256572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497765,-99) , 
12, 0.922138, 0, 0, 0.503237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485687,-99) , 
10, -1.69383, 1, 0, 0.489421,-99) , 
8, 2.07387, 0, 0, 0.497613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434232,-99) , 
11, -0.892349, 1, 0, 0.4709,-99) , 
13, 2.14453, 1, 0, 0.483779,-99) , 
10, 1.57144, 1, 0, 0.496338,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0252753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.259812, 1, 1, 0.51039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474586,-99) , 
6, 0.766057, 1, 0, 0.507467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479909,-99) , 
5, 0.999983, 0, 0, 0.496493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461992,-99) , 
5, 0.999636, 0, 0, 0.494247,-99) , 
3, 2.72706, 0, 0, 0.498879,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0194154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498609,-99) , 
8, 2.27524, 0, 0, 0.506774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485446,-99) , 
10, 0.0611822, 1, 0, 0.497568,-99) , 
12, 0.463472, 0, 0, 0.501797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458443,-99) , 
10, 1.69387, 1, 0, 0.478442,-99) , 
11, 0.584698, 0, 0, 0.488202,-99) , 
10, 1.2857, 1, 0, 0.49987,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0244831);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475659,-99) , 
8, 1.26501, 0, 0, 0.517208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491392,-99) , 
8, 2.44625, 0, 0, 0.497748,-99) , 
10, -0.428545, 1, 0, 0.501852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508787,-99) , 
NN(
0, 
0, 
-1, -0.612136, 1, -1, 0.480188,-99) , 
11, -3.50999, 1, 0, 0.489247,-99) , 
12, -0.698571, 0, 0, 0.499352,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.018195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48793,-99) , 
10, 1.2857, 1, 0, 0.501965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47663,-99) , 
3, 3.13152, 0, 0, 0.48902,-99) , 
12, -0.44288, 0, 0, 0.498778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467546,-99) , 
5, 0.998572, 0, 0, 0.497644,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0177094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493912,-99) , 
8, 2.09069, 0, 0, 0.501394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482444,-99) , 
12, 2.28397, 0, 0, 0.491505,-99) , 
10, 1.00002, 1, 0, 0.499345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471302,-99) , 
0, 0.489519, 0, 0, 0.498551,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0189211);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495136,-99) , 
11, -2.97894, 1, 0, 0.498478,-99) , 
NN(
0, 
0, 
-1, -1.48878, 0, -1, 0.477935,-99) , 
12, -1.4325, 0, 0, 0.496711,-99) , 
11, 4.46852, 0, 0, 0.498355,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.014633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.6454, 0, 1, 0.537692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488989,-99) , 
11, 3.99963, 0, 0, 0.500931,-99) , 
3, 1.36269, 0, 0, 0.511398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498041,-99) , 
6, -0.599602, 1, 0, 0.499605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46866,-99) , 
8, 1.54522, 0, 0, 0.498306,-99) , 
11, 0.730904, 0, 0, 0.50099,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0161668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495189,-99) , 
3, 1.37692, 0, 0, 0.53247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484771,-99) , 
12, -1.59851, 0, 0, 0.514756,-99) , 
NN(
NN(
0, 
0, 
-1, 0.241854, 1, 1, 0.507896,-99) , 
NN(
0, 
0, 
-1, -0.509697, 0, -1, 0.495845,-99) , 
3, 2.72719, 0, 0, 0.500159,-99) , 
10, -1.28568, 1, 0, 0.50177,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.031718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.24936, 0, 1, 0.513274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482395,-99) , 
12, 1.73814, 0, 0, 0.495565,-99) , 
10, 1.00004, 1, 0, 0.507023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482748,-99) , 
8, 3.47196, 1, 0, 0.508048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48662,-99) , 
10, -1.36689, 1, 0, 0.490314,-99) , 
11, -3.04593, 1, 0, 0.495112,-99) , 
12, 0.463472, 0, 0, 0.501433,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0209851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.98898, 1, 1, 0.507836,-99) , 
NN(
0, 
0, 
-1, 3.21916, 0, -1, 0.485152,-99) , 
12, -1.33673, 0, 0, 0.505203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496561,-99) , 
12, 5.08891, 1, 0, 0.508383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421909,-99) , 
13, 1.37973, 0, 0, 0.477908,-99) , 
11, 2.05705, 0, 0, 0.495464,-99) , 
3, 1.47765, 0, 0, 0.503098,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0123798);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498616,-99) , 
11, 0.431744, 0, 0, 0.501081,-99) , 
NN(
0, 
0, 
-1, -0.848814, 1, -1, 0.465125,-99) , 
8, 1.25304, 0, 0, 0.498915,-99) , 
12, 7.34815, 0, 0, 0.500033,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0161013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496873,-99) , 
8, 2.08758, 0, 0, 0.503557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48302,-99) , 
10, -0.895203, 1, 0, 0.493673,-99) , 
12, -0.658322, 0, 0, 0.50157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479066,-99) , 
5, 0.998571, 0, 0, 0.500753,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00830954);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525647,-99) , 
NN(
NN(
0, 
0, 
-1, -3.04061, 1, 1, 0.502134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472845,-99) , 
8, 4.31401, 1, 0, 0.500532,-99) , 
3, 4.37354, 0, 0, 0.501272,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0134489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999676, 1, 1, 0.516682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488673,-99) , 
2, -0.275548, 0, 0, 0.511072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499554,-99) , 
12, 3.6472, 1, 0, 0.509264,-99) , 
NN(
0, 
0, 
-1, 1.53398, 0, -1, 0.496425,-99) , 
11, 0.96637, 0, 0, 0.498831,-99) , 
2, -0.0714805, 1, 0, 0.501058,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0112946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.530727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492973,-99) , 
3, 0.906452, 0, 0, 0.514123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499823,-99) , 
11, -3.8622, 1, 0, 0.501323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454358,-99) , 
11, 1.87344, 0, 0, 0.482344,-99) , 
8, 1.50475, 0, 0, 0.499445,-99) , 
6, -0.812908, 1, 0, 0.500828,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0134417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.519849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454001,-99) , 
5, 0.999683, 0, 0, 0.502213,-99) , 
5, 0.999524, 1, 0, 0.503326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46831,-99) , 
5, 0.998571, 0, 0, 0.502087,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0254916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.31668, 0, 1, 0.522179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484617,-99) , 
8, 2.95312, 1, 0, 0.510973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489328,-99) , 
12, -0.323034, 0, 0, 0.502369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485759,-99) , 
11, 3.55345, 0, 0, 0.491872,-99) , 
8, 2.11992, 0, 0, 0.498315,-99) , 
10, -0.999952, 1, 0, 0.500405,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0224187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.823133, 1, 1, 0.511148,-99) , 
NN(
0, 
0, 
-1, -1.63942, 0, -1, 0.489372,-99) , 
12, -1.21384, 0, 0, 0.505515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483681,-99) , 
10, 0.455783, 0, 0, 0.503306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468635,-99) , 
3, 2.5492, 0, 0, 0.491524,-99) , 
12, 1.31472, 0, 0, 0.496797,-99) , 
10, -0.142857, 1, 0, 0.500439,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0168657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481295,-99) , 
10, 1.28573, 1, 0, 0.499503,-99) , 
11, 1.21795, 0, 0, 0.500988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44884,-99) , 
11, 4.21057, 0, 0, 0.481235,-99) , 
8, 1.35516, 0, 0, 0.489193,-99) , 
8, 1.44503, 0, 0, 0.499106,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0178804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496464,-99) , 
8, 1.86727, 0, 0, 0.506768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47788,-99) , 
3, 0.982401, 0, 0, 0.505008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474999,-99) , 
12, 4.34143, 1, 0, 0.498718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479841,-99) , 
11, 0.62708, 0, 0, 0.487653,-99) , 
10, 1.36736, 1, 0, 0.495779,-99) , 
10, 0.142872, 1, 0, 0.500578,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0258715);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496779,-99) , 
13, 1.64351, 0, 0, 0.509717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490312,-99) , 
12, -0.193737, 0, 0, 0.495394,-99) , 
12, 0.422658, 0, 0, 0.500709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48888,-99) , 
12, 0.0773445, 0, 0, 0.502282,-99) , 
NN(
0, 
0, 
-1, 1.13119, 0, -1, 0.483916,-99) , 
8, 2.71706, 0, 0, 0.492252,-99) , 
10, 0.142887, 1, 0, 0.496645,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0167371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499547,-99) , 
12, 1.54898, 0, 0, 0.503948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483002,-99) , 
8, 1.13706, 0, 0, 0.502334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483577,-99) , 
12, 0.272008, 0, 0, 0.499081,-99) , 
NN(
0, 
0, 
-1, 0.82316, 1, -1, 0.485492,-99) , 
0, 0.497138, 1, 0, 0.491064,-99) , 
10, 0.142878, 1, 0, 0.496921,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0278974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477102,-99) , 
8, 1.70501, 0, 0, 0.499699,-99) , 
9, -951.286, 0, 0, 0.515025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493873,-99) , 
12, -0.299268, 0, 0, 0.509052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483904,-99) , 
12, 1.35014, 0, 0, 0.493959,-99) , 
11, -2.10655, 1, 0, 0.49853,-99) , 
10, -1.28568, 1, 0, 0.500346,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0216024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.18106, 0, 1, 0.509802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479702,-99) , 
3, 0.983398, 0, 0, 0.507928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489753,-99) , 
9, -951.256, 1, 0, 0.50207,-99) , 
NN(
0, 
0, 
-1, 0.99466, 0, -1, 0.488815,-99) , 
10, 0.823116, 1, 0, 0.495081,-99) , 
10, 0.142853, 1, 0, 0.501773,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0200139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.489023, 1, 1, 0.531588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472729,-99) , 
10, 2.14293, 1, 0, 0.500232,-99) , 
6, -0.407449, 1, 0, 0.503211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483185,-99) , 
7, 0.0136033, 0, 0, 0.488374,-99) , 
7, 0.0238077, 0, 0, 0.492144,-99) , 
13, 1.89217, 0, 0, 0.499558,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0120139);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497173,-99) , 
10, -1.8571, 1, 0, 0.498837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472039,-99) , 
12, -1.92995, 0, 0, 0.497822,-99) , 
11, 4.54756, 0, 0, 0.499168,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0255702);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498725,-99) , 
9, -951.286, 0, 0, 0.512761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477407,-99) , 
11, -3.61177, 0, 0, 0.491231,-99) , 
13, 3.05357, 1, 0, 0.50656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491351,-99) , 
12, 0.712309, 0, 0, 0.499698,-99) , 
NN(
0, 
0, 
-1, 1.7619, 1, -1, 0.491142,-99) , 
11, -1.20415, 1, 0, 0.495383,-99) , 
10, -0.714288, 1, 0, 0.498008,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0166947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.97796, 1, 1, 0.5173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483485,-99) , 
10, -0.823104, 1, 0, 0.513214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495013,-99) , 
12, 1.23285, 0, 0, 0.499092,-99) , 
2, -0.214002, 1, 0, 0.500165,-99) , 
10, -0.71426, 1, 0, 0.503254,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0206389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488989,-99) , 
3, 4.37671, 0, 0, 0.506668,-99) , 
8, 4.21127, 1, 0, 0.517577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497277,-99) , 
12, 0.515018, 0, 0, 0.504417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465899,-99) , 
12, 1.24359, 0, 0, 0.491839,-99) , 
10, 0.999992, 1, 0, 0.501882,-99) , 
3, 3.71682, 0, 0, 0.503555,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0169138);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.54525, 1, 1, 0.517465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469933,-99) , 
12, -1.77482, 0, 0, 0.504843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472824,-99) , 
12, 0.409023, 0, 0, 0.495496,-99) , 
3, 2.29435, 0, 0, 0.499573,-99) , 
3, 3.92546, 0, 0, 0.500885,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0234118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.667046, 0, 1, 0.50677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457741,-99) , 
10, 1.6053, 1, 0, 0.486341,-99) , 
11, -1.19165, 1, 0, 0.503971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483945,-99) , 
11, 1.4712, 0, 0, 0.489739,-99) , 
10, -1.85718, 1, 0, 0.492616,-99) , 
3, 2.2183, 0, 0, 0.498337,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0198639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474634,-99) , 
8, 1.28741, 0, 0, 0.518476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486239,-99) , 
3, 3.33437, 0, 0, 0.493847,-99) , 
13, 3.04195, 1, 0, 0.511332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480536,-99) , 
12, 3.82114, 1, 0, 0.500285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478882,-99) , 
10, 1.93878, 1, 0, 0.498907,-99) , 
10, -0.714221, 1, 0, 0.50184,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0200895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492974,-99) , 
3, 1.46445, 0, 0, 0.503806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479872,-99) , 
10, 0.265341, 1, 0, 0.501599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485783,-99) , 
8, 1.60608, 0, 0, 0.501929,-99) , 
NN(
0, 
0, 
-1, 2.57163, 0, -1, 0.48876,-99) , 
12, 2.01677, 0, 0, 0.493358,-99) , 
10, 0.428617, 1, 0, 0.498465,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0145576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.762644, 1, 1, 0.51684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4871,-99) , 
8, 1.65502, 0, 0, 0.498061,-99) , 
6, 0.682513, 0, 0, 0.499144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477463,-99) , 
4, 2.37211, 0, 0, 0.497389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467787,-99) , 
6, -0.161265, 1, 0, 0.484632,-99) , 
0, 0.492376, 0, 0, 0.497658,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0180215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.43324, 1, 1, 0.507222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493155,-99) , 
10, -1.28572, 1, 0, 0.495893,-99) , 
8, 2.40487, 0, 0, 0.500606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49072,-99) , 
8, 3.59106, 1, 0, 0.497011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471384,-99) , 
3, 2.7452, 0, 0, 0.489962,-99) , 
12, -0.812095, 0, 0, 0.498725,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0264241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497406,-99) , 
11, -1.0882, 1, 0, 0.510485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481385,-99) , 
11, 1.78242, 0, 0, 0.499515,-99) , 
8, 1.74482, 0, 0, 0.504478,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494888,-99) , 
12, -0.300526, 0, 0, 0.502376,-99) , 
NN(
0, 
0, 
-1, 2.91175, 0, -1, 0.483676,-99) , 
10, 0.219426, 1, 0, 0.496395,-99) , 
12, 0.858378, 0, 0, 0.499967,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0235466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.05744, 0, 1, 0.512172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478145,-99) , 
11, -2.13732, 1, 0, 0.497877,-99) , 
12, 0.249117, 0, 0, 0.504359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48991,-99) , 
10, 1.25851, 0, 0, 0.506214,-99) , 
NN(
0, 
0, 
-1, 2.6088, 0, -1, 0.48321,-99) , 
12, 2.14763, 0, 0, 0.491162,-99) , 
10, 0.714296, 1, 0, 0.500602,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0162727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497304,-99) , 
9, -951.286, 0, 0, 0.527014,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.495256,-99) , 
5, 0.999524, 1, 0, 0.498642,-99) , 
NN(
0, 
0, 
-1, 0.214279, 1, -1, 0.489257,-99) , 
4, 4.39355, 1, 0, 0.496608,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0268618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.81577, 0, 1, 0.509248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469328,-99) , 
6, -0.853821, 1, 0, 0.489314,-99) , 
12, 4.07894, 1, 0, 0.504002,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492129,-99) , 
12, 0.382994, 0, 0, 0.499361,-99) , 
NN(
0, 
0, 
-1, 0.665938, 1, -1, 0.478384,-99) , 
11, -1.43803, 1, 0, 0.494986,-99) , 
12, 1.12226, 0, 0, 0.498518,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0247758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57036, 0, 1, 0.508423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466174,-99) , 
9, -951.286, 0, 0, 0.48524,-99) , 
10, 1.57156, 1, 0, 0.50586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482777,-99) , 
9, -951.286, 0, 0, 0.492245,-99) , 
7, 0.0237969, 0, 0, 0.495436,-99) , 
3, 1.72755, 0, 0, 0.502543,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0193974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498599,-99) , 
10, -0.999929, 1, 0, 0.50173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461591,-99) , 
11, -3.80579, 1, 0, 0.480078,-99) , 
12, -1.35379, 0, 0, 0.499472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486247,-99) , 
13, 1.03304, 0, 0, 0.503933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419355,-99) , 
8, 1.32721, 0, 0, 0.463515,-99) , 
11, 3.3034, 0, 0, 0.48797,-99) , 
8, 1.43575, 0, 0, 0.497686,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0123705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480911,-99) , 
0, 0.490471, 0, 0, 0.50223,-99) , 
2, -0.215626, 1, 0, 0.503225,-99) , 
NN(
0, 
0, 
-1, 0.214785, 1, -1, 0.488043,-99) , 
4, 4.76008, 1, 0, 0.50033,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0239802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493627,-99) , 
8, 1.65504, 0, 0, 0.506378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482555,-99) , 
3, 2.64627, 0, 0, 0.495899,-99) , 
12, 0.621262, 0, 0, 0.500559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506653,-99) , 
NN(
0, 
0, 
-1, -0.820691, 1, -1, 0.472961,-99) , 
3, 1.97168, 1, 0, 0.482499,-99) , 
10, 1.57143, 1, 0, 0.49891,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0187622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.93329, 0, 1, 0.50961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463289,-99) , 
10, -1.63958, 0, 0, 0.491302,-99) , 
12, -1.13768, 0, 0, 0.5043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483962,-99) , 
3, 2.6117, 0, 0, 0.491354,-99) , 
6, -0.812908, 1, 0, 0.493132,-99) , 
10, -0.142818, 1, 0, 0.4978,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0318193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499714,-99) , 
8, 2.25112, 0, 0, 0.507759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478621,-99) , 
12, 1.73901, 0, 0, 0.494367,-99) , 
10, 1.00004, 1, 0, 0.503017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489306,-99) , 
12, -0.621054, 0, 0, 0.502036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471386,-99) , 
8, 3.60468, 0, 0, 0.480823,-99) , 
11, -2.36586, 1, 0, 0.492931,-99) , 
12, 0.452122, 0, 0, 0.498318,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0186467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91606, 0, 1, 0.510545,-99) , 
NN(
0, 
0, 
-1, 0.673418, 1, -1, 0.494869,-99) , 
12, 0.652195, 0, 0, 0.501396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459561,-99) , 
8, 3.03633, 0, 0, 0.476516,-99) , 
9, -951.286, 0, 0, 0.489552,-99) , 
10, 1.28571, 1, 0, 0.499707,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0305639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482449,-99) , 
3, 1.19974, 0, 0, 0.520771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475303,-99) , 
9, -951.286, 1, 0, 0.492742,-99) , 
12, -1.17744, 0, 0, 0.509637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484695,-99) , 
10, 0.877525, 1, 0, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0.580172, 0, -1, 0.486705,-99) , 
8, 2.08758, 0, 0, 0.495646,-99) , 
10, -0.714302, 1, 0, 0.49897,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0221387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.5184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480849,-99) , 
9, -951.286, 1, 0, 0.490959,-99) , 
8, 2.98113, 1, 0, 0.510046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494801,-99) , 
10, -0.0067683, 1, 0, 0.499139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453234,-99) , 
3, 3.14067, 0, 0, 0.483805,-99) , 
12, -0.395284, 0, 0, 0.496455,-99) , 
10, -0.714284, 1, 0, 0.499654,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0250943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496198,-99) , 
12, -0.103965, 0, 0, 0.507125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486001,-99) , 
8, 1.36364, 0, 0, 0.493828,-99) , 
8, 1.45445, 0, 0, 0.504845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495481,-99) , 
10, 1.6939, 1, 0, 0.506944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462999,-99) , 
11, 0.940413, 0, 0, 0.482766,-99) , 
13, 2.75724, 0, 0, 0.494592,-99) , 
10, 1.28573, 1, 0, 0.503392,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0365446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.01112, 0, 1, 0.512635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46854,-99) , 
12, 2.69485, 0, 0, 0.490643,-99) , 
10, 1.57148, 1, 0, 0.50832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492628,-99) , 
12, 0.238168, 0, 0, 0.501659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466989,-99) , 
8, 2.9875, 0, 0, 0.480619,-99) , 
11, -1.51885, 1, 0, 0.496301,-99) , 
12, 1.22116, 0, 0, 0.500774,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.01859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489159,-99) , 
13, 2.76401, 1, 0, 0.50607,-99) , 
2, -0.0709026, 1, 0, 0.511843,-99) , 
NN(
NN(
0, 
0, 
-1, 1.47081, 0, 1, 0.504374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486964,-99) , 
8, 1.93543, 0, 0, 0.490688,-99) , 
8, 2.08639, 0, 0, 0.499218,-99) , 
10, -1, 1, 0, 0.501289,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0261138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.823089, 1, 1, 0.513689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463644,-99) , 
8, 1.23204, 0, 0, 0.483273,-99) , 
8, 1.45888, 0, 0, 0.50755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491348,-99) , 
8, 2.34822, 0, 0, 0.498873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464189,-99) , 
11, -2.58534, 1, 0, 0.483558,-99) , 
12, 0.0073049, 0, 0, 0.495772,-99) , 
10, -0.142837, 1, 0, 0.500709,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.020819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497211,-99) , 
11, -0.996325, 1, 0, 0.528004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494081,-99) , 
11, 1.35429, 0, 0, 0.501338,-99) , 
8, 2.33527, 0, 0, 0.50628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49902,-99) , 
12, 0.245951, 0, 0, 0.502897,-99) , 
NN(
0, 
0, 
-1, 2.85656, 0, -1, 0.472641,-99) , 
10, 0.577982, 1, 0, 0.496754,-99) , 
12, 0.939356, 0, 0, 0.500818,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0214121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489184,-99) , 
11, -2.63805, 0, 0, 0.503393,-99) , 
8, 4.18663, 1, 0, 0.512858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482212,-99) , 
3, 1.10806, 0, 0, 0.504164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485862,-99) , 
12, 1.76502, 0, 0, 0.494385,-99) , 
10, 0.142857, 1, 0, 0.499543,-99) , 
3, 3.69097, 0, 0, 0.501032,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0175241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472361,-99) , 
3, 3.74974, 0, 0, 0.496864,-99) , 
8, 3.52302, 1, 0, 0.514636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492397,-99) , 
12, 0.571683, 0, 0, 0.498544,-99) , 
10, -1.85715, 1, 0, 0.499408,-99) , 
11, -3.15344, 1, 0, 0.501046,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0243635);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498699,-99) , 
12, -0.0453096, 0, 0, 0.50551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481901,-99) , 
12, 1.616, 0, 0, 0.493863,-99) , 
10, 0.714325, 1, 0, 0.501984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486643,-99) , 
3, 0.907647, 0, 0, 0.507016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443767,-99) , 
11, 1.83058, 0, 0, 0.476088,-99) , 
11, 4.12045, 0, 0, 0.491656,-99) , 
8, 1.45624, 0, 0, 0.50031,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0285054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491384,-99) , 
3, 2.56851, 0, 0, 0.507876,-99) , 
6, -0.302685, 1, 0, 0.510572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482233,-99) , 
9, -948.956, 0, 0, 0.489249,-99) , 
7, 0.0237399, 0, 0, 0.491645,-99) , 
8, 2.1202, 0, 0, 0.502888,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0229079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491292,-99) , 
10, 0.71451, 1, 0, 0.50202,-99) , 
6, -0.387155, 1, 0, 0.504011,-99) , 
NN(
NN(
0, 
0, 
-1, 1.90826, 1, 1, 0.51737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484394,-99) , 
11, 3.06476, 0, 0, 0.491955,-99) , 
8, 1.93913, 0, 0, 0.495372,-99) , 
8, 2.09046, 0, 0, 0.500555,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0172784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47188,-99) , 
4, 8.73069, 1, 0, 0.501545,-99) , 
6, -0.303087, 1, 0, 0.503975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486857,-99) , 
11, 1.88258, 0, 0, 0.492442,-99) , 
7, 0.0238077, 0, 0, 0.495015,-99) , 
8, 2.12264, 0, 0, 0.500303,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.01286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.439867, 0, 1, 0.503407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466356,-99) , 
8, 1.36453, 0, 0, 0.501803,-99) , 
NN(
0, 
0, 
-1, 6.89426, 0, -1, 0.47947,-99) , 
12, 3.91459, 1, 0, 0.499383,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0328993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498074,-99) , 
8, 2.18799, 0, 0, 0.504494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478193,-99) , 
12, 2.21395, 0, 0, 0.488435,-99) , 
10, 1.28575, 1, 0, 0.500068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484342,-99) , 
12, -0.339136, 0, 0, 0.500307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459337,-99) , 
10, 0.232161, 1, 0, 0.482769,-99) , 
11, -2.04256, 1, 0, 0.49378,-99) , 
12, 0.821521, 0, 0, 0.496621,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0212416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476816,-99) , 
10, -1.66668, 0, 0, 0.502705,-99) , 
9, -951.286, 0, 0, 0.511662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48978,-99) , 
9, -948.87, 1, 0, 0.498432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46516,-99) , 
10, 2.23805, 1, 0, 0.497373,-99) , 
10, -1.00001, 1, 0, 0.499716,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.018936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46642,-99) , 
3, 1.4494, 0, 0, 0.497791,-99) , 
9, -951.286, 0, 0, 0.514972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491973,-99) , 
8, 2.44547, 0, 0, 0.497794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471602,-99) , 
7, 0.0237891, 1, 0, 0.496706,-99) , 
10, -1.28567, 1, 0, 0.498701,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0237264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.89434, 0, 1, 0.516769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486454,-99) , 
10, -1.2585, 1, 0, 0.497074,-99) , 
12, -1.10503, 0, 0, 0.508575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487303,-99) , 
10, 1.40817, 1, 0, 0.503768,-99) , 
NN(
0, 
0, 
-1, 2.5163, 0, -1, 0.488195,-99) , 
12, 0.886527, 0, 0, 0.495964,-99) , 
10, -0.714244, 1, 0, 0.498935,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0186524);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481306,-99) , 
8, 1.29482, 0, 0, 0.521524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48536,-99) , 
12, -1.61604, 0, 0, 0.510073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494742,-99) , 
11, -1.84076, 1, 0, 0.498325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465919,-99) , 
7, 0.0238024, 1, 0, 0.497003,-99) , 
10, -0.999998, 1, 0, 0.499173,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0183042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494268,-99) , 
10, 0.455823, 1, 0, 0.500859,-99) , 
NN(
0, 
0, 
-1, 2.37978, 0, -1, 0.490127,-99) , 
12, 0.0859329, 0, 0, 0.49692,-99) , 
10, -1.8571, 1, 0, 0.498433,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0174661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47262,-99) , 
5, 0.99966, 0, 0, 0.506223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487035,-99) , 
11, -1.97913, 1, 0, 0.497837,-99) , 
12, 0.858378, 0, 0, 0.501651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478208,-99) , 
5, 0.998571, 0, 0, 0.500807,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0144223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.154223, 1, 1, 0.504277,-99) , 
NN(
NN(
0, 
0, 
-1, 2.03794, 0, 1, 0.504795,-99) , 
NN(
0, 
0, 
-1, 0.257293, 1, -1, 0.482543,-99) , 
12, 1.52239, 0, 0, 0.495435,-99) , 
3, 2.23218, 0, 0, 0.499838,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0196022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488781,-99) , 
8, 1.69613, 0, 0, 0.506651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494768,-99) , 
11, 1.84881, 0, 0, 0.497304,-99) , 
7, 0.00566835, 0, 0, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482242,-99) , 
7, 0.0238076, 1, 0, 0.499614,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.020902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498967,-99) , 
11, -1.20113, 1, 0, 0.508964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465924,-99) , 
11, 2.13464, 0, 0, 0.492473,-99) , 
8, 1.42341, 0, 0, 0.503846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492911,-99) , 
12, -0.876332, 0, 0, 0.50438,-99) , 
NN(
0, 
0, 
-1, 2.55915, 0, -1, 0.490387,-99) , 
10, -0.578656, 1, 0, 0.495681,-99) , 
12, 0.711478, 0, 0, 0.499559,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0228858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470436,-99) , 
12, -1.39327, 0, 0, 0.503193,-99) , 
11, -3.86503, 1, 0, 0.50552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489995,-99) , 
7, 0.0136037, 0, 0, 0.493448,-99) , 
7, 0.0238077, 0, 0, 0.496053,-99) , 
3, 1.98476, 0, 0, 0.501556,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0298076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48722,-99) , 
9, -951.275, 1, 0, 0.501635,-99) , 
6, -0.463158, 0, 0, 0.505993,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494216,-99) , 
12, 0.516704, 0, 0, 0.501465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482081,-99) , 
8, 2.93765, 0, 0, 0.490761,-99) , 
11, -1.42818, 1, 0, 0.49773,-99) , 
12, 2.00342, 0, 0, 0.499792,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0199389);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493795,-99) , 
12, -0.0208238, 0, 0, 0.502741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479613,-99) , 
8, 3.0928, 0, 0, 0.488551,-99) , 
10, 1.14969, 1, 0, 0.500207,-99) , 
10, -1.85704, 1, 0, 0.501558,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0209002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.558022, 0, 1, 0.511047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47127,-99) , 
8, 1.14145, 0, 0, 0.507996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499388,-99) , 
6, 0.0248372, 1, 0, 0.504316,-99) , 
NN(
0, 
0, 
-1, 1.22492, 0, -1, 0.489182,-99) , 
8, 2.72013, 0, 0, 0.496092,-99) , 
10, 0.142872, 1, 0, 0.502293,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0110376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.39119, 1, 1, 0.533451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489106,-99) , 
13, 4.0879, 1, 0, 0.516089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481405,-99) , 
12, -0.839924, 0, 0, 0.499572,-99) , 
10, -1.85715, 1, 0, 0.500598,-99) , 
11, -3.20228, 1, 0, 0.502156,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0112059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497412,-99) , 
12, -1.27742, 0, 0, 0.514387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486438,-99) , 
3, 1.22654, 0, 0, 0.509761,-99) , 
NN(
NN(
0, 
0, 
-1, -0.537374, 1, 1, 0.501404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47545,-99) , 
7, 0.0238024, 1, 0, 0.500331,-99) , 
10, -0.714256, 1, 0, 0.502548,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0331762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486937,-99) , 
10, 1.60277, 1, 0, 0.524641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482908,-99) , 
10, 0.510924, 1, 0, 0.500615,-99) , 
12, 1.20544, 0, 0, 0.503828,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473019,-99) , 
5, 0.999986, 0, 0, 0.496543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452386,-99) , 
5, 0.999714, 0, 0, 0.493602,-99) , 
8, 2.09007, 0, 0, 0.499751,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0206683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.97204, 0, 1, 0.508141,-99) , 
NN(
0, 
0, 
-1, 0.503804, 0, -1, 0.489614,-99) , 
0, 0.5019, 1, 0, 0.504903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493435,-99) , 
8, 1.63724, 0, 0, 0.504184,-99) , 
NN(
0, 
0, 
-1, 1.14758, 1, -1, 0.489942,-99) , 
12, 1.58414, 0, 0, 0.49595,-99) , 
3, 2.94677, 0, 0, 0.498552,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0184485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.0882, 1, 1, 0.516729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497113,-99) , 
11, -3.87469, 1, 0, 0.499153,-99) , 
12, 0.844986, 0, 0, 0.503911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530825,-99) , 
NN(
0, 
0, 
-1, 1.2487, 0, -1, 0.489667,-99) , 
10, -1.57153, 1, 0, 0.494417,-99) , 
8, 1.77275, 0, 0, 0.501228,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0285842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.24388, 1, 1, 0.512046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445299,-99) , 
11, 2.22142, 0, 0, 0.488562,-99) , 
8, 1.41532, 0, 0, 0.505179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491629,-99) , 
12, -0.525753, 0, 0, 0.502731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479495,-99) , 
10, -0.342087, 1, 0, 0.488626,-99) , 
11, -2.39159, 1, 0, 0.495776,-99) , 
12, 0.652195, 0, 0, 0.500364,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00971861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487291,-99) , 
12, -1.93227, 0, 0, 0.518547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532222,-99) , 
NN(
0, 
0, 
-1, 2.07483, 1, -1, 0.498367,-99) , 
10, -1.85714, 1, 0, 0.499342,-99) , 
11, -3.2647, 1, 0, 0.501115,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0128996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.34157, 1, 1, 0.514629,-99) , 
NN(
0, 
0, 
-1, 1.5884, 0, -1, 0.496724,-99) , 
11, 0.398353, 0, 0, 0.500084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477132,-99) , 
3, 0.995029, 0, 0, 0.498713,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0161893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.3775, 0, 1, 0.524124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475716,-99) , 
10, -1.58474, 0, 0, 0.499943,-99) , 
12, -1.25886, 0, 0, 0.515194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499042,-99) , 
5, 0.999524, 1, 0, 0.500914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464847,-99) , 
7, 0.0237168, 1, 0, 0.499433,-99) , 
10, -0.714256, 1, 0, 0.503143,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0220855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.93723, 1, 1, 0.517087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479264,-99) , 
3, 2.34742, 0, 0, 0.502691,-99) , 
12, -0.00780301, 0, 0, 0.509199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540132,-99) , 
NN(
0, 
0, 
-1, 0.432909, 0, -1, 0.493517,-99) , 
7, 0.0237969, 0, 0, 0.497153,-99) , 
8, 2.09059, 0, 0, 0.504396,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0140061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498288,-99) , 
7, 0.013604, 0, 0, 0.50036,-99) , 
9, -948.87, 0, 0, 0.504069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466791,-99) , 
7, 0.0238077, 1, 0, 0.502571,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.026227);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480046,-99) , 
10, 1.86044, 1, 0, 0.515981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486591,-99) , 
10, 0.515227, 1, 0, 0.500361,-99) , 
12, 1.27874, 0, 0, 0.504356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493564,-99) , 
8, 0.999139, 0, 0, 0.503604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4213,-99) , 
13, 1.31524, 0, 0, 0.472183,-99) , 
11, 3.10436, 0, 0, 0.491429,-99) , 
8, 1.45206, 0, 0, 0.502288,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0183118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.468523, 1, 1, 0.513527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481172,-99) , 
11, -1.28228, 1, 0, 0.497721,-99) , 
12, 1.44375, 0, 0, 0.502189,-99) , 
NN(
0, 
0, 
-1, 6.62992, 0, -1, 0.480056,-99) , 
8, 1.14902, 0, 0, 0.500552,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0121221);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465318,-99) , 
10, 2.14286, 1, 0, 0.501062,-99) , 
NN(
0, 
0, 
-1, 3.48432, 0, -1, 0.473746,-99) , 
8, 1.32859, 0, 0, 0.498791,-99) , 
12, 7.31948, 0, 0, 0.499774,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0135625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91288, 0, 1, 0.514547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474111,-99) , 
7, 0.0237968, 1, 0, 0.499305,-99) , 
10, -0.42851, 1, 0, 0.502568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49083,-99) , 
12, -1.26716, 0, 0, 0.499197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463058,-99) , 
13, 2.62889, 1, 0, 0.476699,-99) , 
3, 3.1406, 0, 0, 0.488825,-99) , 
12, -0.802969, 0, 0, 0.500101,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0102201);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498651,-99) , 
11, 0.725819, 0, 0, 0.500802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454297,-99) , 
3, 1.0941, 0, 0, 0.499437,-99) , 
11, 6.14206, 0, 0, 0.500443,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0293662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494887,-99) , 
11, -1.76253, 1, 0, 0.506674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485658,-99) , 
11, -3.021, 1, 0, 0.495467,-99) , 
12, -0.0455127, 0, 0, 0.501354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490129,-99) , 
10, 0.1442, 1, 0, 0.504169,-99) , 
NN(
0, 
0, 
-1, 1.36843, 0, -1, 0.482459,-99) , 
11, 2.43776, 0, 0, 0.491444,-99) , 
8, 1.76909, 0, 0, 0.498574,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0235931);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49611,-99) , 
11, -1.54994, 1, 0, 0.506153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482645,-99) , 
11, -2.46127, 1, 0, 0.49441,-99) , 
12, 0.219819, 0, 0, 0.500389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510118,-99) , 
NN(
0, 
0, 
-1, 1.22681, 0, -1, 0.477002,-99) , 
11, 5.38734, 0, 0, 0.490367,-99) , 
8, 1.45902, 0, 0, 0.498744,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0183418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.43646, 1, 1, 0.506284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47772,-99) , 
11, 3.82657, 0, 0, 0.494678,-99) , 
8, 1.45371, 0, 0, 0.504024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509652,-99) , 
NN(
0, 
0, 
-1, -1.78678, 0, -1, 0.483956,-99) , 
3, 3.82751, 0, 0, 0.489711,-99) , 
12, -0.84368, 0, 0, 0.501558,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0185335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.10949, 0, 1, 0.516275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468484,-99) , 
12, -1.88396, 0, 0, 0.491043,-99) , 
12, -1.06292, 0, 0, 0.506695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492541,-99) , 
12, 1.07849, 0, 0, 0.49758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459681,-99) , 
7, 0.0237968, 1, 0, 0.496069,-99) , 
10, -0.428571, 1, 0, 0.499487,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0116589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480506,-99) , 
12, -1.3725, 0, 0, 0.499393,-99) , 
11, 1.59572, 0, 0, 0.500853,-99) , 
NN(
0, 
0, 
-1, 6.87018, 0, -1, 0.48442,-99) , 
12, 3.91459, 1, 0, 0.49905,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00753723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499617,-99) , 
11, -3.84807, 1, 0, 0.501194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480221,-99) , 
3, 0.995009, 0, 0, 0.500128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474356,-99) , 
7, 0.0237891, 1, 0, 0.499076,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.011196);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498627,-99) , 
11, 0.33717, 0, 0, 0.500981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467485,-99) , 
12, 3.57741, 1, 0, 0.49934,-99) , 
11, 4.46852, 0, 0, 0.50057,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0103042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499924,-99) , 
5, 0.999524, 1, 0, 0.502817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484221,-99) , 
3, 2.67679, 0, 0, 0.490982,-99) , 
4, 4.74401, 1, 0, 0.500556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47703,-99) , 
7, 0.0237968, 1, 0, 0.499572,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.016998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495187,-99) , 
8, 2.40489, 0, 0, 0.500847,-99) , 
10, -1.57139, 1, 0, 0.502028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511792,-99) , 
NN(
0, 
0, 
-1, -1.69196, 0, -1, 0.484776,-99) , 
3, 3.82183, 0, 0, 0.490838,-99) , 
12, -0.832078, 0, 0, 0.500071,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0214571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999522, 1, 1, 0.526734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476564,-99) , 
0, 0.499994, 0, 0, 0.490439,-99) , 
4, 4.36657, 1, 0, 0.512225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499916,-99) , 
12, -1.13768, 0, 0, 0.509218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491353,-99) , 
12, 1.08346, 0, 0, 0.498093,-99) , 
10, -0.428576, 1, 0, 0.501665,-99) , 
2, 0.0716898, 0, 0, 0.503595,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0147808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484952,-99) , 
8, 1.7538, 0, 0, 0.500161,-99) , 
11, 1.66749, 0, 0, 0.501836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467905,-99) , 
12, 7.32163, 0, 0, 0.487256,-99) , 
12, 4.70613, 1, 0, 0.500586,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0242642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497309,-99) , 
11, -2.16981, 1, 0, 0.504201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486282,-99) , 
11, -2.33645, 0, 0, 0.49128,-99) , 
12, -0.448862, 0, 0, 0.500241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460923,-99) , 
11, 4.30397, 0, 0, 0.484021,-99) , 
13, 1.38105, 0, 0, 0.489841,-99) , 
8, 1.47278, 0, 0, 0.498485,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0163343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481493,-99) , 
8, 2.07297, 1, 0, 0.513555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49858,-99) , 
6, 0.13398, 1, 0, 0.50521,-99) , 
NN(
0, 
0, 
-1, 0.828868, 0, -1, 0.493773,-99) , 
3, 2.21277, 0, 0, 0.499676,-99) , 
10, -1.57139, 1, 0, 0.50063,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0155296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.35408, 0, 1, 0.505785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466913,-99) , 
8, 1.35269, 0, 0, 0.504039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47365,-99) , 
11, 7.01033, 0, 0, 0.488822,-99) , 
12, 4.229, 1, 0, 0.502547,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0172009);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04762, 1, 1, 0.512263,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493853,-99) , 
12, 0.634713, 0, 0, 0.498872,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484675,-99) , 
10, 1.09524, 1, 0, 0.495773,-99) , 
10, -0.999998, 1, 0, 0.498504,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0230645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498781,-99) , 
11, -1.69733, 1, 0, 0.508716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492716,-99) , 
11, -1.86629, 0, 0, 0.496275,-99) , 
12, 0.0728584, 0, 0, 0.503143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483579,-99) , 
8, 1.04812, 0, 0, 0.493235,-99) , 
NN(
0, 
0, 
-1, 1.3433, 0, -1, 0.467171,-99) , 
11, 2.84061, 0, 0, 0.483924,-99) , 
8, 1.4567, 0, 0, 0.500007,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00928795);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.143141, 1, 1, 0.517827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497079,-99) , 
12, 3.60923, 1, 0, 0.506706,-99) , 
NN(
0, 
0, 
-1, 1.53338, 0, -1, 0.497755,-99) , 
11, 0.890253, 0, 0, 0.499496,-99) , 
2, -0.214113, 1, 0, 0.500561,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0221019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619329, 0, 1, 0.508136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47717,-99) , 
12, 1.70844, 0, 0, 0.490417,-99) , 
10, 1.00001, 1, 0, 0.504255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507522,-99) , 
NN(
0, 
0, 
-1, 3.43317, 0, -1, 0.480857,-99) , 
8, 1.33359, 0, 0, 0.488269,-99) , 
8, 1.47235, 0, 0, 0.501583,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0206766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499348,-99) , 
12, -0.0697004, 0, 0, 0.507653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48874,-99) , 
8, 1.6516, 0, 0, 0.495315,-99) , 
8, 1.77267, 0, 0, 0.504324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476492,-99) , 
7, 0.0237968, 1, 0, 0.503179,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0165301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.205469, 1, 1, 0.511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498268,-99) , 
10, -1.57133, 1, 0, 0.500306,-99) , 
8, 2.44371, 0, 0, 0.504752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470598,-99) , 
8, 3.64203, 0, 0, 0.483452,-99) , 
11, -3.67492, 1, 0, 0.493385,-99) , 
12, -0.917288, 0, 0, 0.502955,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.017634);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498435,-99) , 
12, 0.210543, 0, 0, 0.506225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481162,-99) , 
12, 1.20384, 0, 0, 0.495524,-99) , 
10, 1.00001, 1, 0, 0.504024,-99) , 
0, 0.490471, 1, 0, 0.505015,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0285777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498711,-99) , 
10, 0.880825, 1, 0, 0.518459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493296,-99) , 
11, 1.314, 0, 0, 0.502747,-99) , 
13, 1.97911, 0, 0, 0.508321,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496787,-99) , 
12, -0.237513, 0, 0, 0.505517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465675,-99) , 
8, 2.66545, 0, 0, 0.484616,-99) , 
11, -2.03435, 1, 0, 0.498763,-99) , 
12, 0.652195, 0, 0, 0.503457,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0219063);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48797,-99) , 
3, 1.30327, 0, 0, 0.508416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490908,-99) , 
11, -1.8038, 1, 0, 0.495962,-99) , 
10, 0.428599, 1, 0, 0.503644,-99) , 
NN(
0, 
0, 
-1, -0.900938, 1, -1, 0.482907,-99) , 
8, 1.13673, 0, 0, 0.50217,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0161806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.741681, 0, 1, 0.50984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489785,-99) , 
8, 1.12677, 0, 0, 0.508343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487122,-99) , 
12, 0.287658, 0, 0, 0.49915,-99) , 
10, 0.0068325, 1, 0, 0.500729,-99) , 
10, -0.142834, 1, 0, 0.503907,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0199524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.48302, 1, 1, 0.510085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48448,-99) , 
11, -2.37234, 1, 0, 0.495665,-99) , 
12, 0.465024, 0, 0, 0.502673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471513,-99) , 
6, -0.870643, 1, 0, 0.489586,-99) , 
12, 4.57173, 1, 0, 0.501512,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0163417);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492687,-99) , 
8, 1.56712, 0, 0, 0.513794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488293,-99) , 
11, -3.62672, 0, 0, 0.496217,-99) , 
8, 2.98113, 1, 0, 0.508358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498249,-99) , 
11, 1.44416, 0, 0, 0.500228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468644,-99) , 
11, 6.95906, 0, 0, 0.48776,-99) , 
12, 4.11168, 1, 0, 0.498768,-99) , 
10, -0.714217, 1, 0, 0.501015,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0178357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.55855, 1, 1, 0.525122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496866,-99) , 
13, 4.72272, 1, 0, 0.514224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48679,-99) , 
10, 1.28572, 1, 0, 0.500789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47687,-99) , 
11, -3.13703, 1, 0, 0.489368,-99) , 
12, -0.457833, 0, 0, 0.498363,-99) , 
3, 3.68086, 0, 0, 0.500169,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0103251);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480661,-99) , 
4, 2.32228, 1, 0, 0.51665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499103,-99) , 
10, 1.85713, 0, 0, 0.500343,-99) , 
5, 0.999524, 1, 0, 0.501942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479553,-99) , 
4, 9.41378, 1, 0, 0.501169,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0156151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48486,-99) , 
8, 1.73477, 0, 0, 0.501396,-99) , 
11, 1.99064, 0, 0, 0.502746,-99) , 
NN(
0, 
0, 
-1, 6.58756, 0, -1, 0.484039,-99) , 
8, 1.1489, 0, 0, 0.501365,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0277632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488592,-99) , 
11, -0.957551, 1, 0, 0.520509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496348,-99) , 
10, -0.428567, 1, 0, 0.500996,-99) , 
8, 2.05568, 0, 0, 0.50627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491817,-99) , 
12, -0.216319, 0, 0, 0.500036,-99) , 
NN(
0, 
0, 
-1, 2.89722, 0, -1, 0.48145,-99) , 
10, 0.322412, 1, 0, 0.494605,-99) , 
12, 0.939356, 0, 0, 0.499592,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0171712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493402,-99) , 
13, 4.01701, 1, 0, 0.520745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494696,-99) , 
12, 0.702594, 0, 0, 0.500988,-99) , 
10, -1.8571, 1, 0, 0.502029,-99) , 
11, -3.33543, 1, 0, 0.503616,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0267557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498852,-99) , 
11, -1.50699, 1, 0, 0.513133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483843,-99) , 
3, 2.76664, 0, 0, 0.497255,-99) , 
12, 0.266637, 0, 0, 0.504046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49665,-99) , 
13, 1.08675, 0, 0, 0.507442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468031,-99) , 
8, 1.58652, 0, 0, 0.487625,-99) , 
11, 2.33632, 0, 0, 0.495744,-99) , 
8, 1.79614, 0, 0, 0.501631,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0214851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.662138, 1, 1, 0.521241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491633,-99) , 
10, 0.192681, 1, 0, 0.502211,-99) , 
12, 1.18047, 0, 0, 0.505904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497719,-99) , 
8, 1.61142, 0, 0, 0.502154,-99) , 
NN(
0, 
0, 
-1, -0.600599, 1, -1, 0.473539,-99) , 
11, -0.110645, 0, 0, 0.496979,-99) , 
8, 1.79644, 0, 0, 0.503279,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0198276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494778,-99) , 
9, -951.275, 1, 0, 0.50237,-99) , 
10, -1.8571, 1, 0, 0.503887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460526,-99) , 
9, -951.286, 0, 0, 0.486493,-99) , 
5, 0.999524, 0, 0, 0.502233,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0141592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.305937, 0, 1, 0.51893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493082,-99) , 
10, 1.00005, 1, 0, 0.513795,-99) , 
NN(
NN(
0, 
0, 
-1, -0.368596, 1, 1, 0.505042,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.49387,-99) , 
8, 2.08604, 0, 0, 0.500685,-99) , 
0, 0.502852, 0, 0, 0.502594,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0150061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480443,-99) , 
12, -1.66184, 0, 0, 0.524317,-99) , 
NN(
0, 
0, 
-1, -1.5714, 1, 1, 0.502219,-99) , 
11, -3.16769, 1, 0, 0.504052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469764,-99) , 
11, -2.53628, 0, 0, 0.489666,-99) , 
8, 4.3155, 1, 0, 0.502867,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0108686);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481667,-99) , 
12, -1.38542, 0, 0, 0.499764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458139,-99) , 
11, 2.09043, 0, 0, 0.479365,-99) , 
8, 1.45122, 0, 0, 0.497907,-99) , 
11, 4.49462, 0, 0, 0.498768,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0115006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495262,-99) , 
12, 1.25929, 0, 0, 0.498118,-99) , 
3, 4.14812, 0, 0, 0.499199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466534,-99) , 
4, 9.39852, 1, 0, 0.498063,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0236945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484413,-99) , 
12, -1.50612, 0, 0, 0.506001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483095,-99) , 
8, 1.36292, 0, 0, 0.491614,-99) , 
8, 1.45345, 0, 0, 0.503472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488515,-99) , 
10, 1.57142, 0, 0, 0.504465,-99) , 
NN(
0, 
0, 
-1, 2.6088, 0, -1, 0.485858,-99) , 
11, 0.265128, 0, 0, 0.49164,-99) , 
10, 1.00001, 1, 0, 0.501043,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0259123);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499118,-99) , 
8, 2.42147, 1, 0, 0.520065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484993,-99) , 
3, 1.93292, 0, 0, 0.500004,-99) , 
9, -951.275, 0, 0, 0.508096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490506,-99) , 
12, -0.275011, 0, 0, 0.501454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486394,-99) , 
8, 2.25867, 0, 0, 0.489288,-99) , 
8, 2.44371, 0, 0, 0.495542,-99) , 
10, -0.714257, 1, 0, 0.498511,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0237099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.21499, 0, 1, 0.506289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47795,-99) , 
6, 0.116324, 1, 0, 0.5044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492115,-99) , 
12, -1.0105, 0, 0, 0.50934,-99) , 
NN(
0, 
0, 
-1, 0.614282, 1, -1, 0.487379,-99) , 
11, -2.5576, 1, 0, 0.495731,-99) , 
12, 1.01659, 0, 0, 0.4993,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0193053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477478,-99) , 
3, 1.69632, 0, 0, 0.502069,-99) , 
9, -951.286, 0, 0, 0.514519,-99) , 
NN(
NN(
0, 
0, 
-1, -3.00313, 1, 1, 0.504377,-99) , 
NN(
0, 
0, 
-1, -0.100988, 0, -1, 0.490887,-99) , 
3, 2.47976, 0, 0, 0.496742,-99) , 
10, -1.28571, 1, 0, 0.498679,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0216634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468855,-99) , 
10, -1.85709, 0, 0, 0.499252,-99) , 
9, -951.286, 0, 0, 0.514825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497118,-99) , 
13, 1.98837, 0, 0, 0.502871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483339,-99) , 
3, 3.10144, 0, 0, 0.493844,-99) , 
12, 0.413691, 0, 0, 0.49902,-99) , 
10, -1.28567, 1, 0, 0.500746,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0217881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.90695, 0, 1, 0.513507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481108,-99) , 
11, -3.82818, 1, 0, 0.489429,-99) , 
12, -1.03329, 0, 0, 0.504241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49231,-99) , 
11, -2.92679, 1, 0, 0.49407,-99) , 
11, 6.11076, 0, 0, 0.495589,-99) , 
10, -0.428571, 1, 0, 0.498363,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0113746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485142,-99) , 
4, 4.48077, 1, 0, 0.515843,-99) , 
NN(
NN(
0, 
0, 
-1, -0.262854, 0, 1, 0.52303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497753,-99) , 
11, -3.53278, 1, 0, 0.498818,-99) , 
2, -0.132531, 1, 0, 0.500143,-99) , 
2, -0.214146, 1, 0, 0.501067,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0126847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498711,-99) , 
8, 3.97664, 1, 0, 0.503268,-99) , 
6, 0.413527, 1, 0, 0.508213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499303,-99) , 
3, 1.62217, 0, 0, 0.505622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471997,-99) , 
10, 0.735843, 1, 0, 0.495294,-99) , 
12, 1.4899, 0, 0, 0.499265,-99) , 
3, 3.44554, 0, 0, 0.500713,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0186457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.300349, 0, 1, 0.508313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495872,-99) , 
10, -1.85709, 1, 0, 0.498382,-99) , 
3, 2.19282, 0, 0, 0.503252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4783,-99) , 
12, 1.9275, 0, 0, 0.484793,-99) , 
13, 1.98865, 1, 0, 0.492305,-99) , 
10, 1.00001, 1, 0, 0.501009,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0334545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.94699, 0, 1, 0.515094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479504,-99) , 
9, -951.286, 0, 0, 0.495895,-99) , 
10, 1.28572, 1, 0, 0.509828,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494421,-99) , 
12, -0.0792933, 0, 0, 0.50322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475406,-99) , 
8, 3.0602, 0, 0, 0.487744,-99) , 
11, -1.91803, 1, 0, 0.498168,-99) , 
12, 0.852454, 0, 0, 0.503359,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.018394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485575,-99) , 
11, 0.116565, 0, 0, 0.515073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481602,-99) , 
6, -0.824441, 1, 0, 0.49817,-99) , 
8, 1.36785, 0, 0, 0.507698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49916,-99) , 
6, -0.419029, 1, 0, 0.501696,-99) , 
NN(
0, 
0, 
-1, 1.66714, 0, -1, 0.469505,-99) , 
8, 1.87738, 0, 0, 0.498633,-99) , 
11, -0.170722, 0, 0, 0.501339,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0185539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.1995, 0, 1, 0.51784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481501,-99) , 
3, 1.22369, 0, 0, 0.512157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495612,-99) , 
8, 1.77245, 0, 0, 0.503365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479657,-99) , 
10, 1.93876, 1, 0, 0.501838,-99) , 
10, -0.714289, 1, 0, 0.504263,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0161969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.679248, 0, 1, 0.509323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472103,-99) , 
8, 1.13696, 0, 0, 0.506491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480957,-99) , 
12, 0.175607, 0, 0, 0.496245,-99) , 
10, 0.00677162, 1, 0, 0.498408,-99) , 
10, -0.142887, 1, 0, 0.501795,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0208131);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493434,-99) , 
10, 1.14971, 1, 0, 0.506313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479524,-99) , 
11, 0.301872, 0, 0, 0.494374,-99) , 
8, 2.1202, 0, 0, 0.501548,-99) , 
10, -1.85705, 1, 0, 0.502577,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0176826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478201,-99) , 
3, 1.68313, 0, 0, 0.496677,-99) , 
9, -951.286, 0, 0, 0.506905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496554,-99) , 
10, -0.238059, 1, 0, 0.500121,-99) , 
NN(
0, 
0, 
-1, -0.714146, 0, -1, 0.491835,-99) , 
0, 0.499043, 1, 0, 0.496687,-99) , 
10, -1.00001, 1, 0, 0.498355,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0147878);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518355,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49706,-99) , 
10, -0.142837, 1, 0, 0.501312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471529,-99) , 
12, -1.33369, 0, 0, 0.487473,-99) , 
12, -0.731684, 0, 0, 0.498811,-99) , 
3, 4.18189, 0, 0, 0.49969,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0151231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478882,-99) , 
7, 0.0238076, 1, 0, 0.501825,-99) , 
10, -1.57143, 1, 0, 0.503094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484985,-99) , 
12, -1.38391, 0, 0, 0.496148,-99) , 
NN(
0, 
0, 
-1, 3.24858, 0, -1, 0.481092,-99) , 
10, -0.638453, 1, 0, 0.490023,-99) , 
12, -0.563576, 0, 0, 0.500071,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0184303);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.72951, 1, 1, 0.517087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495035,-99) , 
8, 1.86977, 0, 0, 0.503075,-99) , 
NN(
0, 
0, 
-1, -0.843186, 1, -1, 0.487223,-99) , 
12, -0.457833, 0, 0, 0.499496,-99) , 
3, 3.96426, 0, 0, 0.500707,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0241402);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492822,-99) , 
12, -1.32326, 0, 0, 0.51161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481206,-99) , 
3, 1.22745, 0, 0, 0.506777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494306,-99) , 
13, 1.57313, 0, 0, 0.504565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487901,-99) , 
11, -2.45091, 1, 0, 0.493748,-99) , 
12, 1.30164, 0, 0, 0.498157,-99) , 
10, -0.714256, 1, 0, 0.500185,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0174263);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495902,-99) , 
12, -0.521892, 0, 0, 0.505234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488063,-99) , 
8, 2.77475, 0, 0, 0.494165,-99) , 
10, -0.142822, 1, 0, 0.498861,-99) , 
11, 4.46852, 0, 0, 0.500411,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0164869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49708,-99) , 
3, 3.12385, 0, 0, 0.502349,-99) , 
6, -0.17579, 1, 0, 0.504272,-99) , 
NN(
NN(
0, 
0, 
-1, 1.79559, 0, 1, 0.506536,-99) , 
NN(
0, 
0, 
-1, 0.484056, 1, -1, 0.486914,-99) , 
12, 1.80978, 0, 0, 0.497039,-99) , 
8, 2.44371, 0, 0, 0.500614,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0165851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478853,-99) , 
12, -1.87623, 0, 0, 0.498019,-99) , 
6, -0.537155, 1, 0, 0.51305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499398,-99) , 
8, 1.39946, 0, 0, 0.508357,-99) , 
NN(
0, 
0, 
-1, 1.67452, 0, -1, 0.494614,-99) , 
11, 0.987669, 0, 0, 0.497267,-99) , 
10, -1.28566, 1, 0, 0.499013,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0109286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498548,-99) , 
8, 1.02408, 0, 0, 0.513708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464757,-99) , 
8, 1.54693, 0, 0, 0.498391,-99) , 
11, 1.75132, 0, 0, 0.499464,-99) , 
11, 3.10273, 0, 0, 0.500899,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.016084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496169,-99) , 
8, 1.05293, 0, 0, 0.514578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490486,-99) , 
12, -0.0171041, 0, 0, 0.49833,-99) , 
11, -3.86828, 1, 0, 0.499858,-99) , 
11, 2.69753, 0, 0, 0.501496,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0146306);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522684,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.510613,-99) , 
NN(
0, 
0, 
-1, 1.90302, 0, -1, 0.495417,-99) , 
10, -0.71426, 1, 0, 0.499096,-99) , 
11, 4.46349, 0, 0, 0.500898,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0213718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489691,-99) , 
13, 1.5705, 0, 0, 0.508652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497972,-99) , 
11, 4.53186, 0, 0, 0.499949,-99) , 
10, 0.14285, 1, 0, 0.503759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47811,-99) , 
11, -3.18209, 0, 0, 0.488658,-99) , 
8, 2.78611, 1, 0, 0.493925,-99) , 
12, -0.976052, 0, 0, 0.50231,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00880806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.4271, 0, 1, 0.502841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475279,-99) , 
5, 0.999388, 0, 0, 0.501585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480634,-99) , 
5, 0.998572, 0, 0, 0.500821,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0206477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.67886, 1, 1, 0.510525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496958,-99) , 
10, -1.57144, 1, 0, 0.499007,-99) , 
8, 2.39556, 0, 0, 0.503885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480226,-99) , 
8, 3.81984, 1, 0, 0.508486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472977,-99) , 
12, -1.33751, 1, 0, 0.484034,-99) , 
11, -3.43209, 1, 0, 0.494134,-99) , 
12, -0.84368, 0, 0, 0.502218,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0179219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.18832, 0, 1, 0.509091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485206,-99) , 
11, 0.427178, 0, 0, 0.494163,-99) , 
10, 1.28572, 1, 0, 0.504989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497427,-99) , 
12, 0.289209, 0, 0, 0.500288,-99) , 
NN(
0, 
0, 
-1, 3.23211, 0, -1, 0.476348,-99) , 
10, 0.669898, 1, 0, 0.496662,-99) , 
12, 0.742411, 0, 0, 0.500564,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0169209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.515971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488495,-99) , 
5, 0.999524, 0, 0, 0.511798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497585,-99) , 
13, 3.00089, 1, 0, 0.510321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491731,-99) , 
12, 0.658001, 0, 0, 0.498395,-99) , 
11, -2.69985, 1, 0, 0.500704,-99) , 
0, 0.494281, 1, 0, 0.502866,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0152553);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463473,-99) , 
10, 2.07483, 1, 0, 0.502261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482945,-99) , 
11, 0.366973, 0, 0, 0.494634,-99) , 
8, 2.09035, 0, 0, 0.49926,-99) , 
10, -1.85714, 1, 0, 0.500228,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0150763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.424685, 1, 1, 0.528892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476862,-99) , 
12, -1.91341, 0, 0, 0.510789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519171,-99) , 
NN(
0, 
0, 
-1, 0.20015, 0, -1, 0.495286,-99) , 
6, 0.679008, 0, 0, 0.49634,-99) , 
11, -3.20228, 1, 0, 0.497806,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0225812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.975653, 1, 1, 0.515691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487304,-99) , 
11, 1.97676, 0, 0, 0.499624,-99) , 
13, 1.7111, 0, 0, 0.506685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496595,-99) , 
12, 0.110843, 0, 0, 0.502544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435144,-99) , 
3, 2.90547, 0, 0, 0.482355,-99) , 
10, 0.662858, 1, 0, 0.498713,-99) , 
12, 1.03243, 0, 0, 0.501967,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0228107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.236017, 0, 1, 0.510035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47496,-99) , 
13, 1.21507, 0, 0, 0.494458,-99) , 
8, 1.76873, 0, 0, 0.505183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486958,-99) , 
11, 1.92294, 0, 0, 0.49124,-99) , 
10, 0.823127, 1, 0, 0.495332,-99) , 
10, 0.714279, 1, 0, 0.50238,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.00998321);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499365,-99) , 
11, 0.677798, 0, 0, 0.501384,-99) , 
NN(
0, 
0, 
-1, 2.38026, 0, -1, 0.481052,-99) , 
12, 2.98554, 1, 0, 0.499725,-99) , 
11, 4.34365, 0, 0, 0.501139,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0206912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.53788, 0, 1, 0.506194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473308,-99) , 
10, 2.14301, 1, 0, 0.504873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465362,-99) , 
6, -0.76023, 1, 0, 0.485786,-99) , 
8, 1.65119, 0, 0, 0.491877,-99) , 
8, 1.77226, 0, 0, 0.501215,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0255607);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492751,-99) , 
11, -1.13958, 1, 0, 0.508993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477192,-99) , 
10, 0.530467, 1, 0, 0.497605,-99) , 
12, 0.880239, 0, 0, 0.500611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483097,-99) , 
9, -951.256, 1, 0, 0.498494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454577,-99) , 
8, 1.64213, 0, 0, 0.472034,-99) , 
12, 1.90808, 0, 0, 0.491065,-99) , 
8, 1.77226, 0, 0, 0.497924,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0159695);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.351549, 1, 1, 0.516554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496999,-99) , 
12, 1.51629, 0, 0, 0.500589,-99) , 
NN(
0, 
0, 
-1, 1.48248, 0, -1, 0.489958,-99) , 
8, 1.79644, 0, 0, 0.497661,-99) , 
10, -1.2857, 1, 0, 0.499759,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0260006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497896,-99) , 
11, -1.0983, 1, 0, 0.514885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492507,-99) , 
13, 1.37476, 0, 0, 0.500475,-99) , 
13, 1.9572, 0, 0, 0.505178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484863,-99) , 
11, -1.81243, 1, 0, 0.506821,-99) , 
NN(
0, 
0, 
-1, -2.47401, 1, -1, 0.491138,-99) , 
12, 0.163041, 0, 0, 0.495598,-99) , 
12, 0.858378, 0, 0, 0.499837,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0121922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.03255, 0, 1, 0.514423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499745,-99) , 
10, -0.265305, 1, 0, 0.501679,-99) , 
10, -0.428571, 1, 0, 0.504415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499717,-99) , 
11, -3.11411, 0, 0, 0.507338,-99) , 
NN(
0, 
0, 
-1, -0.932461, 1, -1, 0.483422,-99) , 
3, 3.1354, 0, 0, 0.496281,-99) , 
12, -0.770318, 0, 0, 0.502906,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0170398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498826,-99) , 
12, -0.680142, 0, 0, 0.514698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483347,-99) , 
6, 0.729969, 1, 0, 0.501722,-99) , 
6, 0.261228, 1, 0, 0.507358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495469,-99) , 
11, 4.35197, 0, 0, 0.49799,-99) , 
10, -1.85712, 1, 0, 0.499449,-99) , 
3, 2.44929, 0, 0, 0.502877,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0227268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46568, 1, 1, 0.512189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490095,-99) , 
10, -0.051803, 1, 0, 0.501163,-99) , 
12, 0.444355, 0, 0, 0.505313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486019,-99) , 
8, 1.22743, 0, 0, 0.500479,-99) , 
NN(
0, 
0, 
-1, -0.658011, 1, -1, 0.47315,-99) , 
11, 0.00266665, 0, 0, 0.495317,-99) , 
8, 1.77226, 0, 0, 0.502483,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0113666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462669,-99) , 
12, 3.02086, 1, 0, 0.50116,-99) , 
11, 2.08163, 0, 0, 0.502597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458643,-99) , 
6, -0.885185, 1, 0, 0.486289,-99) , 
8, 1.14902, 0, 0, 0.501406,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.01353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.24903, 1, 1, 0.523689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496899,-99) , 
8, 4.9116, 1, 0, 0.515763,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499502,-99) , 
8, 2.61492, 0, 0, 0.50332,-99) , 
NN(
0, 
0, 
-1, -0.534586, 1, -1, 0.489387,-99) , 
12, -0.457833, 0, 0, 0.50033,-99) , 
3, 3.71682, 0, 0, 0.501998,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0178121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.98819, 0, 1, 0.51074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496348,-99) , 
6, -0.534687, 1, 0, 0.498208,-99) , 
12, 0.534474, 0, 0, 0.503766,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.510666,-99) , 
NN(
0, 
0, 
-1, 2.07457, 0, -1, 0.479298,-99) , 
8, 3.0928, 0, 0, 0.491402,-99) , 
10, 1.28572, 1, 0, 0.502006,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0228601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484661,-99) , 
8, 2.48078, 0, 0, 0.505175,-99) , 
6, -0.325189, 1, 0, 0.507123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489209,-99) , 
10, 0.430302, 1, 0, 0.514534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476855,-99) , 
6, -0.660507, 1, 0, 0.4906,-99) , 
8, 1.93415, 0, 0, 0.494804,-99) , 
3, 1.98474, 0, 0, 0.501987,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0131894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.54246, 0, 1, 0.502884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470883,-99) , 
11, 6.66781, 0, 0, 0.487415,-99) , 
12, 3.8871, 1, 0, 0.501113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438682,-99) , 
9, -951.286, 0, 0, 0.481755,-99) , 
5, 0.999048, 0, 0, 0.500026,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00962701);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499769,-99) , 
5, 0.999524, 1, 0, 0.503412,-99) , 
NN(
0, 
0, 
-1, -1.57137, 0, -1, 0.495693,-99) , 
9, -948.956, 0, 0, 0.498994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478153,-99) , 
7, 0.0238076, 1, 0, 0.498156,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0319443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.5759, 0, 1, 0.507525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4811,-99) , 
6, 0.110795, 1, 0, 0.505333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487207,-99) , 
12, -0.339672, 0, 0, 0.501028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476735,-99) , 
8, 3.25745, 0, 0, 0.488826,-99) , 
11, -2.03905, 1, 0, 0.496506,-99) , 
12, 0.821521, 0, 0, 0.500499,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0176928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.49911, 0, 1, 0.502994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461244,-99) , 
11, -0.945718, 1, 0, 0.477236,-99) , 
10, 1.57153, 1, 0, 0.500193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487167,-99) , 
10, 0.137511, 1, 0, 0.506861,-99) , 
NN(
0, 
0, 
-1, 2.82027, 0, -1, 0.482908,-99) , 
8, 1.59317, 0, 0, 0.488923,-99) , 
8, 1.77473, 0, 0, 0.496994,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.012227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495924,-99) , 
4, 9.42691, 0, 0, 0.496829,-99) , 
0, 0.490471, 1, 0, 0.497932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475341,-99) , 
5, 0.998572, 0, 0, 0.497108,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0221204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487999,-99) , 
10, -0.112196, 0, 0, 0.496049,-99) , 
13, 2.93486, 1, 0, 0.509202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482234,-99) , 
8, 1.35169, 0, 0, 0.50716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481026,-99) , 
12, 0.294358, 0, 0, 0.495719,-99) , 
10, -0.428575, 1, 0, 0.498463,-99) , 
11, -2.63399, 1, 0, 0.500682,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0208771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.69049, 1, 1, 0.516918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46849,-99) , 
12, -1.80782, 0, 0, 0.514231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493457,-99) , 
10, -1.85715, 1, 0, 0.494407,-99) , 
11, -3.23012, 1, 0, 0.496034,-99) , 
3, 3.96427, 0, 0, 0.497487,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0275126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480232,-99) , 
10, 0.987264, 1, 0, 0.503222,-99) , 
12, 1.53731, 0, 0, 0.505618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479181,-99) , 
5, 0.999986, 0, 0, 0.498047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450096,-99) , 
5, 0.999714, 0, 0, 0.494865,-99) , 
8, 2.09007, 0, 0, 0.501346,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0182031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.877312, 1, 1, 0.507119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47307,-99) , 
11, 3.10904, 0, 0, 0.489971,-99) , 
8, 1.45502, 0, 0, 0.503934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486832,-99) , 
12, 2.11531, 0, 0, 0.491538,-99) , 
10, 0.551034, 1, 0, 0.493803,-99) , 
10, 0.428585, 1, 0, 0.500116,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0183337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487485,-99) , 
4, 2.97836, 1, 0, 0.518157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491287,-99) , 
4, 1.52253, 1, 0, 0.496872,-99) , 
2, 0.0670344, 0, 0, 0.500001,-99) , 
NN(
0, 
0, 
-1, -0.214417, 0, -1, 0.489431,-99) , 
4, 4.39355, 1, 0, 0.497717,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0191554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496141,-99) , 
10, 0.431276, 1, 0, 0.5243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498069,-99) , 
5, 0.999524, 1, 0, 0.500267,-99) , 
6, -0.284182, 1, 0, 0.502851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483269,-99) , 
11, 2.80296, 0, 0, 0.488641,-99) , 
10, -1.57166, 1, 0, 0.492723,-99) , 
8, 2.11992, 0, 0, 0.498723,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0207392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488472,-99) , 
0, 0.492376, 0, 0, 0.504958,-99) , 
6, -0.0989939, 1, 0, 0.506594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482257,-99) , 
12, 0.115627, 0, 0, 0.501654,-99) , 
NN(
0, 
0, 
-1, 2.14376, 0, -1, 0.487235,-99) , 
8, 1.57232, 0, 0, 0.496532,-99) , 
3, 2.47964, 0, 0, 0.500793,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00990141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499485,-99) , 
10, -1.85694, 1, 0, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456585,-99) , 
5, 0.99941, 0, 0, 0.499664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437282,-99) , 
9, -951.286, 0, 0, 0.477231,-99) , 
5, 0.999048, 0, 0, 0.498416,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0147291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.50771, 1, 1, 0.513604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483921,-99) , 
8, 2.00122, 0, 0, 0.49926,-99) , 
11, 0.478145, 0, 0, 0.501656,-99) , 
NN(
0, 
0, 
-1, -0.900178, 1, -1, 0.485595,-99) , 
8, 1.13886, 0, 0, 0.50051,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0093226);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499527,-99) , 
4, 9.4271, 0, 0, 0.500518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456813,-99) , 
5, 0.99941, 0, 0, 0.499306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427742,-99) , 
5, 0.998186, 0, 0, 0.474459,-99) , 
5, 0.999048, 0, 0, 0.497919,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0154531);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479463,-99) , 
12, -1.64466, 0, 0, 0.514056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497076,-99) , 
10, -1.85715, 1, 0, 0.498309,-99) , 
11, -3.17043, 1, 0, 0.499614,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.48088,-99) , 
6, 0.590172, 1, 0, 0.497892,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0274591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.6398, 0, 1, 0.517473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390356,-99) , 
9, -1.62804, 0, 0, 0.507505,-99) , 
NN(
NN(
0, 
0, 
-1, 8.56977, 0, 1, 0.50258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463524,-99) , 
5, 0.999524, 0, 0, 0.499275,-99) , 
9, -948.956, 0, 0, 0.502813,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0167874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48087,-99) , 
10, 1.85795, 1, 0, 0.503036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486111,-99) , 
9, -948.956, 0, 0, 0.492496,-99) , 
8, 2.1203, 0, 0, 0.498874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479107,-99) , 
7, 0.0237659, 1, 0, 0.498074,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0161173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494368,-99) , 
8, 1.02831, 0, 0, 0.510267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49082,-99) , 
10, 0.428808, 1, 0, 0.498298,-99) , 
NN(
0, 
0, 
-1, 1.36479, 0, -1, 0.474044,-99) , 
8, 1.50688, 0, 0, 0.496449,-99) , 
11, 2.39086, 0, 0, 0.498071,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0170675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499995,-99) , 
8, 2.36628, 0, 0, 0.504104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480209,-99) , 
5, 0.999524, 0, 0, 0.502672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494463,-99) , 
10, -0.578375, 1, 0, 0.498669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469077,-99) , 
10, -1.5457, 1, 0, 0.483594,-99) , 
3, 2.18605, 0, 0, 0.495433,-99) , 
12, 0.711478, 0, 0, 0.498862,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.00902767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.905626, 0, 1, 0.512509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474257,-99) , 
8, 1.50268, 0, 0, 0.498482,-99) , 
11, 2.69753, 0, 0, 0.500023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473981,-99) , 
4, 9.39852, 1, 0, 0.499112,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0237451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477882,-99) , 
8, 1.26501, 0, 0, 0.514182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493724,-99) , 
11, 4.73491, 0, 0, 0.495977,-99) , 
10, -0.428541, 1, 0, 0.500013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480997,-99) , 
8, 4.34041, 1, 0, 0.494534,-99) , 
NN(
0, 
0, 
-1, -1.35914, 1, -1, 0.465188,-99) , 
3, 2.93512, 0, 0, 0.484459,-99) , 
12, -0.903824, 0, 0, 0.497508,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0215642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495919,-99) , 
13, 1.96095, 0, 0, 0.508814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491409,-99) , 
12, 0.957998, 0, 0, 0.497876,-99) , 
10, -0.14282, 1, 0, 0.501044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484753,-99) , 
11, -3.43159, 1, 0, 0.492783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466147,-99) , 
12, -1.91657, 0, 0, 0.488422,-99) , 
12, -0.60248, 0, 0, 0.498231,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0169719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.92736, 0, 1, 0.514615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465663,-99) , 
10, 2.2517, 1, 0, 0.498511,-99) , 
10, -0.142837, 1, 0, 0.503125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474381,-99) , 
10, -1.2188, 1, 0, 0.480296,-99) , 
11, -3.51346, 1, 0, 0.488974,-99) , 
12, -0.569829, 0, 0, 0.499891,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0143174);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485352,-99) , 
12, -0.716731, 0, 0, 0.497987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458699,-99) , 
5, 0.999683, 0, 0, 0.49684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475405,-99) , 
0, 0.500539, 1, 0, 0.498571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452948,-99) , 
0, 0.496185, 0, 0, 0.480327,-99) , 
5, 0.999524, 0, 0, 0.495281,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0209164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49656,-99) , 
8, 2.06293, 0, 0, 0.501779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478934,-99) , 
11, -3.10091, 0, 0, 0.488957,-99) , 
12, -0.832078, 0, 0, 0.498952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492073,-99) , 
10, 1.57145, 0, 0, 0.500721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427763,-99) , 
12, 1.85159, 0, 0, 0.480692,-99) , 
8, 3.09455, 0, 0, 0.48821,-99) , 
10, 1.00001, 1, 0, 0.496738,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.018817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495925,-99) , 
13, 1.98837, 0, 0, 0.502589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48739,-99) , 
3, 3.3162, 0, 0, 0.49386,-99) , 
12, 0.285624, 0, 0, 0.498605,-99) , 
NN(
0, 
0, 
-1, 2.77625, 0, -1, 0.480873,-99) , 
10, 1.85714, 1, 0, 0.497596,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0130954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493524,-99) , 
9, -951.286, 1, 0, 0.513143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453216,-99) , 
5, 0.99921, 0, 0, 0.499422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475609,-99) , 
11, -1.88472, 0, 0, 0.481493,-99) , 
6, 0.279736, 1, 0, 0.496226,-99) , 
3, 3.96427, 0, 0, 0.497394,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0121414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49892,-99) , 
5, 0.999524, 1, 0, 0.501939,-99) , 
NN(
0, 
0, 
-1, -1.57137, 0, -1, 0.49455,-99) , 
9, -948.956, 0, 0, 0.497742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503059,-99) , 
NN(
0, 
0, 
-1, 0.212844, 1, -1, 0.474582,-99) , 
11, -0.422639, 0, 0, 0.484838,-99) , 
0, 0.492376, 0, 0, 0.496412,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0182957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49824,-99) , 
12, -1.13768, 0, 0, 0.517582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464145,-99) , 
10, -0.823137, 1, 0, 0.511241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517446,-99) , 
NN(
0, 
0, 
-1, 3.93938, 1, -1, 0.495409,-99) , 
11, 5.89065, 0, 0, 0.496859,-99) , 
10, -0.714288, 1, 0, 0.500273,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.00870968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.38044, 0, 1, 0.502705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479735,-99) , 
6, -0.854348, 1, 0, 0.493402,-99) , 
12, 4.0215, 1, 0, 0.501741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502783,-99) , 
NN(
0, 
0, 
-1, 0.505256, 0, -1, 0.481162,-99) , 
3, 1.98478, 1, 0, 0.49142,-99) , 
0, 0.503804, 1, 0, 0.500725,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0197088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.61876, 0, 1, 0.52466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476052,-99) , 
11, 4.12519, 0, 0, 0.499996,-99) , 
13, 1.33133, 0, 0, 0.509887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493742,-99) , 
10, -0.142392, 1, 0, 0.498258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454201,-99) , 
8, 1.56788, 0, 0, 0.496034,-99) , 
11, 0.862707, 0, 0, 0.49876,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0211233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.035773, 1, 1, 0.513664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493719,-99) , 
4, 4.25621, 1, 0, 0.50817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492482,-99) , 
12, 0.204807, 0, 0, 0.499703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490634,-99) , 
10, -1.57149, 1, 0, 0.493736,-99) , 
8, 2.44406, 0, 0, 0.496719,-99) , 
0, 0.502852, 0, 0, 0.498378,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0136266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.24936, 0, 1, 0.505806,-99) , 
NN(
0, 
0, 
-1, 2.18605, 0, -1, 0.49465,-99) , 
12, 0.447149, 0, 0, 0.499796,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.485543,-99) , 
10, 1.28571, 1, 0, 0.497789,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0200413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.97324, 1, 1, 0.507944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478218,-99) , 
11, -3.3989, 0, 0, 0.487653,-99) , 
12, -1.25758, 0, 0, 0.50403,-99) , 
NN(
NN(
0, 
0, 
-1, 1.54646, 0, 1, 0.518382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48355,-99) , 
11, 0.0945441, 0, 0, 0.494104,-99) , 
10, -1.28562, 1, 0, 0.497329,-99) , 
8, 2.44371, 0, 0, 0.500634,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.015819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.0436, 1, 1, 0.523578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499881,-99) , 
10, 0.146283, 0, 0, 0.512629,-99) , 
NN(
NN(
0, 
0, 
-1, 1.97762, 0, 1, 0.506264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476086,-99) , 
10, 0.279981, 1, 0, 0.494401,-99) , 
12, 1.03243, 0, 0, 0.499756,-99) , 
3, 3.71683, 0, 0, 0.501143,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0208783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.135077, 0, 1, 0.516426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496949,-99) , 
12, -0.117816, 1, 0, 0.510494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490732,-99) , 
13, 1.62988, 0, 0, 0.500925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469826,-99) , 
11, -2.92898, 1, 0, 0.484714,-99) , 
12, -0.24142, 0, 0, 0.496744,-99) , 
3, 3.69099, 0, 0, 0.498291,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0168251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45311, 0, 1, 0.503517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481541,-99) , 
3, 0.98238, 0, 0, 0.502177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49269,-99) , 
12, 0.626287, 0, 0, 0.503917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42375,-99) , 
12, 1.74647, 0, 0, 0.484822,-99) , 
8, 2.76878, 0, 0, 0.49354,-99) , 
10, 0.714277, 1, 0, 0.499709,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0208372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487223,-99) , 
3, 3.83545, 0, 0, 0.501574,-99) , 
8, 3.7886, 1, 0, 0.505684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497295,-99) , 
8, 2.0353, 0, 0, 0.502423,-99) , 
NN(
0, 
0, 
-1, 0.629057, 1, -1, 0.488097,-99) , 
12, 1.33316, 0, 0, 0.494066,-99) , 
3, 3.41852, 0, 0, 0.496016,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0156626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.507998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493929,-99) , 
8, 2.72116, 0, 0, 0.498231,-99) , 
10, -0.551013, 1, 0, 0.501455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483511,-99) , 
8, 2.69956, 0, 0, 0.495818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471673,-99) , 
10, 1.93875, 1, 0, 0.487534,-99) , 
10, 1.28569, 1, 0, 0.499469,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0219426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49463,-99) , 
8, 2.02099, 0, 0, 0.503258,-99) , 
NN(
0, 
0, 
-1, -0.917383, 1, -1, 0.486066,-99) , 
12, -1.13768, 0, 0, 0.499226,-99) , 
NN(
NN(
0, 
0, 
-1, 4.50634, 1, 1, 0.514057,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.488627,-99) , 
3, 3.67715, 0, 0, 0.491861,-99) , 
10, 0.142881, 1, 0, 0.495685,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0196011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.98484, 0, 1, 0.507403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48892,-99) , 
11, -2.82878, 1, 0, 0.495715,-99) , 
12, 0.279026, 0, 0, 0.501892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472441,-99) , 
10, 2.28411, 1, 0, 0.498587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47012,-99) , 
10, 1.84356, 0, 0, 0.488543,-99) , 
10, 1.57144, 1, 0, 0.500647,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0162155);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493497,-99) , 
12, 4.07905, 1, 0, 0.514351,-99) , 
NN(
0, 
0, 
-1, 1.59625, 0, -1, 0.494007,-99) , 
11, 1.53141, 0, 0, 0.496051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48237,-99) , 
3, 0.995009, 0, 0, 0.49523,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0180078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.35198, 1, 1, 0.506865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495109,-99) , 
7, 0.0238077, 0, 0, 0.497781,-99) , 
8, 2.1203, 0, 0, 0.502222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489368,-99) , 
11, -2.80769, 0, 0, 0.497444,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.477473,-99) , 
3, 2.62885, 0, 0, 0.492436,-99) , 
12, -0.60248, 0, 0, 0.500058,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0210471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0476888, 1, 1, 0.517937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460976,-99) , 
11, 2.83385, 0, 0, 0.496685,-99) , 
8, 1.36586, 0, 0, 0.508069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496422,-99) , 
6, -0.419029, 1, 0, 0.499033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453041,-99) , 
10, -1.26311, 1, 0, 0.473402,-99) , 
8, 1.86285, 0, 0, 0.496434,-99) , 
11, -0.0169193, 0, 0, 0.499691,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0151182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476155,-99) , 
10, -0.551019, 1, 0, 0.506483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496338,-99) , 
10, -0.265288, 1, 0, 0.497937,-99) , 
10, -0.428553, 1, 0, 0.500697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479643,-99) , 
5, 0.998572, 0, 0, 0.499936,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0178867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97455, 0, 1, 0.511377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486812,-99) , 
9, -951.286, 0, 0, 0.497162,-99) , 
10, 1.28575, 1, 0, 0.507482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543996,-99) , 
NN(
0, 
0, 
-1, -1.30833, 1, -1, 0.495176,-99) , 
11, -0.762402, 0, 0, 0.497761,-99) , 
12, 1.12226, 0, 0, 0.501559,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0178365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492545,-99) , 
3, 1.78346, 0, 0, 0.503778,-99) , 
11, 1.88178, 0, 0, 0.505196,-99) , 
NN(
0, 
0, 
-1, -0.898888, 1, -1, 0.485591,-99) , 
8, 1.1508, 0, 0, 0.50374,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0150878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00566714, 0, 1, 0.506978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491811,-99) , 
7, 0.00340032, 1, 0, 0.497115,-99) , 
3, 2.20507, 0, 0, 0.502248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485003,-99) , 
7, 0.0238024, 1, 0, 0.501533,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0182295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.02001, 0, 1, 0.519537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492432,-99) , 
10, 0.877597, 1, 0, 0.499168,-99) , 
10, -0.428494, 1, 0, 0.50353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502672,-99) , 
NN(
0, 
0, 
-1, -0.815468, 1, -1, 0.48153,-99) , 
11, -3.70405, 1, 0, 0.486932,-99) , 
12, -0.802969, 0, 0, 0.500548,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0152518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.333312, 1, 1, 0.506269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493341,-99) , 
13, 3.78729, 0, 0, 0.497699,-99) , 
10, 1.00001, 1, 0, 0.504085,-99) , 
NN(
0, 
0, 
-1, 0.493329, 0, -1, 0.48881,-99) , 
12, -0.770318, 0, 0, 0.501251,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0190641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490909,-99) , 
10, 1.41529, 1, 0, 0.515782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494336,-99) , 
11, 2.11745, 0, 0, 0.50062,-99) , 
8, 2.03357, 0, 0, 0.504347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538559,-99) , 
NN(
0, 
0, 
-1, -1.30838, 1, -1, 0.493906,-99) , 
11, -0.762402, 0, 0, 0.496272,-99) , 
12, 1.12226, 0, 0, 0.499432,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0191403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485814,-99) , 
12, -1.76325, 0, 0, 0.514212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494722,-99) , 
8, 2.61469, 0, 0, 0.500238,-99) , 
10, -1, 1, 0, 0.502512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447231,-99) , 
12, 6.98859, 0, 0, 0.482088,-99) , 
8, 1.15032, 0, 0, 0.501,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0129762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499905,-99) , 
9, -951.286, 0, 0, 0.510559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495174,-99) , 
12, 0.771424, 0, 0, 0.50008,-99) , 
10, -0.999957, 1, 0, 0.501805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476756,-99) , 
0, 0.505709, 1, 0, 0.500869,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0103427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.3018, 1, 1, 0.512209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477948,-99) , 
8, 1.71375, 0, 0, 0.499041,-99) , 
11, 0.34765, 0, 0, 0.501428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467503,-99) , 
6, -0.902098, 1, 0, 0.490479,-99) , 
8, 1.13886, 0, 0, 0.500637,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0104529);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499149,-99) , 
8, 1.9322, 0, 0, 0.503748,-99) , 
NN(
0, 
0, 
-1, 1.60819, 0, -1, 0.4957,-99) , 
12, 1.30057, 0, 0, 0.498703,-99) , 
3, 4.2117, 0, 0, 0.499619,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.015016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.05687, 0, 1, 0.507174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489624,-99) , 
11, -2.09687, 1, 0, 0.497187,-99) , 
12, 1.15319, 0, 0, 0.500844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473019,-99) , 
10, 2.14286, 1, 0, 0.499946,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0165047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.509285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495564,-99) , 
6, -0.532385, 1, 0, 0.498493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480981,-99) , 
8, 1.38028, 0, 0, 0.487057,-99) , 
8, 1.47278, 0, 0, 0.496576,-99) , 
2, 0.0717111, 0, 0, 0.498911,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0155534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.67378, 1, 1, 0.519725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492481,-99) , 
8, 2.32076, 0, 0, 0.500099,-99) , 
11, 1.31935, 0, 0, 0.50206,-99) , 
NN(
0, 
0, 
-1, 6.63956, 0, -1, 0.482951,-99) , 
8, 1.14902, 0, 0, 0.50065,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0111955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.6704, 0, 1, 0.504264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466621,-99) , 
11, -0.104112, 0, 0, 0.495785,-99) , 
8, 1.77401, 0, 0, 0.501975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483426,-99) , 
7, 0.0238076, 1, 0, 0.501212,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.017999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.18253, 0, 1, 0.513163,-99) , 
NN(
0, 
0, 
-1, 3.01582, 0, -1, 0.490262,-99) , 
12, -1.38909, 0, 0, 0.505574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494853,-99) , 
10, -0.00675078, 1, 0, 0.497908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474206,-99) , 
11, -3.0275, 1, 0, 0.484438,-99) , 
12, -0.408265, 0, 0, 0.495577,-99) , 
10, -0.714246, 1, 0, 0.497913,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0140152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463412,-99) , 
8, 1.54522, 0, 0, 0.500297,-99) , 
11, 0.757097, 0, 0, 0.501917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491283,-99) , 
8, 1.01869, 0, 0, 0.503441,-99) , 
NN(
0, 
0, 
-1, 3.40391, 1, -1, 0.473781,-99) , 
11, 3.41618, 0, 0, 0.491067,-99) , 
12, 2.8762, 1, 0, 0.500144,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0149981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491008,-99) , 
12, -0.239533, 0, 0, 0.49868,-99) , 
11, 1.6909, 0, 0, 0.500288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474686,-99) , 
11, 6.77008, 0, 0, 0.489985,-99) , 
12, 3.91459, 1, 0, 0.499157,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0162294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49219,-99) , 
12, 0.00925122, 0, 0, 0.498274,-99) , 
10, -1.57134, 1, 0, 0.499505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4929,-99) , 
13, 1.05967, 0, 0, 0.504742,-99) , 
NN(
0, 
0, 
-1, 1.38713, 0, -1, 0.464767,-99) , 
11, 2.82832, 0, 0, 0.489607,-99) , 
8, 1.47401, 0, 0, 0.497835,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0175519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479989,-99) , 
8, 4.08102, 1, 0, 0.514402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536128,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.494129,-99) , 
10, -1.85708, 1, 0, 0.495363,-99) , 
11, -3.33543, 1, 0, 0.496957,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0118837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.502968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459557,-99) , 
5, 0.999683, 0, 0, 0.501736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468486,-99) , 
9, -951.286, 0, 0, 0.491969,-99) , 
5, 0.999524, 0, 0, 0.500799,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0111019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.753101, 1, 1, 0.516621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49758,-99) , 
10, -0.999968, 1, 0, 0.499388,-99) , 
0, 0.493827, 1, 0, 0.500663,-99) , 
NN(
0, 
0, 
-1, 0.428378, 1, -1, 0.484463,-99) , 
0, 0.492376, 0, 0, 0.499002,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0116213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492833,-99) , 
5, 0.999592, 0, 0, 0.510728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498419,-99) , 
11, -0.444462, 0, 0, 0.501262,-99) , 
2, -0.0705848, 1, 0, 0.502911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472292,-99) , 
5, 0.998572, 0, 0, 0.501814,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0110331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41417, 0, 1, 0.502706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482561,-99) , 
13, 1.23261, 0, 0, 0.49167,-99) , 
8, 1.45502, 0, 0, 0.500831,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.48253,-99) , 
10, 1.57141, 1, 0, 0.499137,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0204595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499374,-99) , 
8, 2.06132, 0, 0, 0.510076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492822,-99) , 
12, -0.221631, 0, 0, 0.495966,-99) , 
12, 0.177788, 0, 0, 0.502173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49405,-99) , 
6, 0.558085, 1, 0, 0.503889,-99) , 
NN(
0, 
0, 
-1, 0.731021, 0, -1, 0.488193,-99) , 
6, 0.398281, 0, 0, 0.491349,-99) , 
10, 0.428625, 1, 0, 0.498085,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.014039);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497456,-99) , 
8, 2.6774, 0, 0, 0.501565,-99) , 
NN(
0, 
0, 
-1, -0.879898, 1, -1, 0.489997,-99) , 
12, -0.60248, 0, 0, 0.499118,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.477787,-99) , 
5, 0.999048, 0, 0, 0.497945,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0142086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.32359, 0, 1, 0.514794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488025,-99) , 
11, -3.29416, 0, 0, 0.495966,-99) , 
13, 3.03989, 1, 0, 0.509076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477016,-99) , 
8, 1.50373, 0, 0, 0.498343,-99) , 
11, 6.09877, 0, 0, 0.499793,-99) , 
10, -0.428571, 1, 0, 0.502787,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_4_6::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_4_6::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_4_6 *ReadBDT_maker_LHC19c2a_4_6(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_4_6(theInpVar);
  }
}
