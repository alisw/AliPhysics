#include "LHC19c2b_TMVAClassification_BDT_6_8.class.h"

double ReadBDT_LHC19c2b_6_8::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_6_8::Initialize()
{
// itree = 0
  fBoostWeights.push_back(0.439205079683175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.679121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32841,-99) , 
6, 0.618268, 1, 0, 0.610508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.221979,-99) , 
9, -951.286, 0, 0, 0.345787,-99) , 
8, 2.03874, 0, 0, 0.545785,-99) , 
NN(
0, 
0, 
-1, 0.425732, 1, -1, 0.209134,-99) , 
10, 1.57141, 1, 0, 0.499805,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.316093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.421999, 1, 1, 0.634806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313846,-99) , 
9, -951.286, 0, 0, 0.416242,-99) , 
12, -0.203753, 1, 0, 0.518162,-99) , 
NN(
0, 
0, 
-1, 0.223027, 1, -1, 0.15096,-99) , 
5, 0.999524, 0, 0, 0.488202,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.274994);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381762,-99) , 
6, 0.516993, 1, 0, 0.592905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28986,-99) , 
3, 2.01802, 0, 0, 0.424817,-99) , 
9, -951.286, 0, 0, 0.508257,-99) , 
NN(
0, 
0, 
-1, 0.426602, 1, -1, 0.188922,-99) , 
10, 1.85718, 1, 0, 0.478436,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.259141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28804,-99) , 
9, -1.57134, 0, 0, 0.588814,-99) , 
NN(
0, 
0, 
-1, -1.57125, 0, -1, 0.430567,-99) , 
9, -951.286, 0, 0, 0.507501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308669,-99) , 
9, -951.286, 0, 0, 0.407407,-99) , 
NN(
0, 
0, 
-1, 0.642203, 1, -1, 0.129538,-99) , 
6, 0.427368, 1, 0, 0.286846,-99) , 
10, 1.28578, 1, 0, 0.467701,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.19801);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374297,-99) , 
3, 1.6937, 0, 0, 0.517316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.192212,-99) , 
10, 2.14285, 1, 0, 0.49959,-99) , 
NN(
0, 
0, 
-1, 0.223027, 1, -1, 0.183215,-99) , 
5, 0.999524, 0, 0, 0.474624,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.197875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345821,-99) , 
3, 2.13365, 0, 0, 0.560798,-99) , 
NN(
0, 
0, 
-1, -1.57122, 0, -1, 0.432847,-99) , 
12, -0.0122127, 1, 0, 0.496761,-99) , 
NN(
0, 
0, 
-1, 1.00278, 1, -1, 0.246306,-99) , 
6, 0.712772, 1, 0, 0.465557,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.209844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348649,-99) , 
5, 0.999905, 0, 0, 0.601583,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.452655,-99) , 
9, -951.286, 0, 0, 0.518492,-99) , 
NN(
0, 
0, 
-1, 0.715458, 1, -1, 0.342022,-99) , 
6, 0.425726, 1, 0, 0.471173,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.193265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285934,-99) , 
10, -1.85692, 0, 0, 0.542902,-99) , 
NN(
0, 
0, 
-1, 2.85088, 0, -1, 0.309423,-99) , 
5, 0.999905, 0, 0, 0.520904,-99) , 
NN(
0, 
0, 
-1, 0.71587, 1, -1, 0.340718,-99) , 
6, 0.522519, 1, 0, 0.48142,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.159403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308853,-99) , 
10, 2.14277, 1, 0, 0.530446,-99) , 
NN(
0, 
0, 
-1, -0.412447, 1, -1, 0.396129,-99) , 
5, 0.999977, 0, 0, 0.489979,-99) , 
NN(
0, 
0, 
-1, 1.00248, 1, -1, 0.232549,-99) , 
5, 0.999524, 0, 0, 0.471553,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.139597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42613,-99) , 
8, 2.45747, 0, 0, 0.495215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230628,-99) , 
5, 0.999048, 0, 0, 0.484416,-99) , 
NN(
0, 
0, 
-1, 0.519629, 1, -1, 0.256804,-99) , 
10, 1.85718, 1, 0, 0.465351,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.070303);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279192,-99) , 
10, -1.96598, 0, 0, 0.492101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.189427,-99) , 
10, 2.42856, 1, 0, 0.483229,-99) , 
NN(
0, 
0, 
-1, -0.135166, 1, -1, 0.246272,-99) , 
5, 0.999524, 0, 0, 0.466643,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0878394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284047,-99) , 
10, -1.97941, 0, 0, 0.490889,-99) , 
NN(
0, 
0, 
-1, 0.331478, 1, -1, 0.36034,-99) , 
10, 1.2857, 1, 0, 0.468927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.198089,-99) , 
5, 0.999048, 0, 0, 0.456902,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.181146);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416255,-99) , 
5, 0.999905, 0, 0, 0.548168,-99) , 
NN(
0, 
0, 
-1, -1.57127, 0, -1, 0.432288,-99) , 
3, 2.638, 0, 0, 0.48554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3968,-99) , 
3, 5.4131, 0, 0, 0.458538,-99) , 
NN(
0, 
0, 
-1, 0.641148, 1, -1, 0.246025,-99) , 
10, 0.715438, 1, 0, 0.369989,-99) , 
6, 0.332206, 1, 0, 0.450293,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0851215);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.457542,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0764276);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289368,-99) , 
10, 2.30612, 1, 0, 0.497436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3274,-99) , 
10, -1.85696, 0, 0, 0.489403,-99) , 
NN(
0, 
0, 
-1, 0.429898, 1, -1, 0.321078,-99) , 
6, 0.712834, 1, 0, 0.469806,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0845942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406194,-99) , 
5, 0.999955, 0, 0, 0.482027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25472,-99) , 
5, 0.999048, 0, 0, 0.473027,-99) , 
NN(
0, 
0, 
-1, 2.51021, 1, -1, 0.243527,-99) , 
10, 2.14288, 1, 0, 0.461285,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0897093);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.455265,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.102564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465896,-99) , 
12, -1.1138, 1, 0, 0.484506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.248675,-99) , 
10, 2.42852, 1, 0, 0.47779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242938,-99) , 
5, 0.999048, 0, 0, 0.467658,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0633797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304011,-99) , 
10, -2.07482, 0, 0, 0.498551,-99) , 
NN(
0, 
0, 
-1, 0.427317, 1, -1, 0.348733,-99) , 
10, 1.85713, 1, 0, 0.487421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.239492,-99) , 
5, 0.999048, 0, 0, 0.477089,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.12548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327358,-99) , 
5, 0.99981, 0, 0, 0.513815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.136479,-99) , 
8, 1.65887, 0, 0, 0.340604,-99) , 
10, -1.57124, 0, 0, 0.499365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382971,-99) , 
3, 5.06458, 0, 0, 0.474373,-99) , 
NN(
0, 
0, 
-1, 0.82725, 1, -1, 0.289223,-99) , 
10, 0.71587, 1, 0, 0.400383,-99) , 
6, 0.332205, 1, 0, 0.469315,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0818645);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.459159,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0613327);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.469372,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0633428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423311,-99) , 
5, 0.999932, 0, 0, 0.491331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.24614,-99) , 
10, 2.42856, 1, 0, 0.484561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.209996,-99) , 
5, 0.998572, 0, 0, 0.476536,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0708547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444217,-99) , 
0, 0.500947, 1, 0, 0.490427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327102,-99) , 
2, -0.215271, 0, 0, 0.482966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291804,-99) , 
10, 2.14285, 1, 0, 0.47365,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0585616);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.470753,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0816693);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4631,-99) , 
9, -951.286, 0, 0, 0.491478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294686,-99) , 
10, 2.42856, 1, 0, 0.486004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241306,-99) , 
5, 0.998572, 0, 0, 0.478834,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0393515);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.480334,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.110145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476022,-99) , 
5, 0.999998, 0, 0, 0.511882,-99) , 
NN(
0, 
0, 
-1, 0.341677, 1, -1, 0.435415,-99) , 
5, 0.999955, 0, 0, 0.495679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272142,-99) , 
5, 0.999048, 0, 0, 0.48696,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0566695);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384478,-99) , 
10, -1.70749, 0, 0, 0.504832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305066,-99) , 
5, 0.998572, 0, 0, 0.499445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273413,-99) , 
10, 2.42856, 1, 0, 0.493139,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.103341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455475,-99) , 
6, 0.203944, 1, 0, 0.503881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.173723,-99) , 
8, 1.88963, 0, 0, 0.390487,-99) , 
10, -1.57141, 0, 0, 0.495902,-99) , 
NN(
0, 
0, 
-1, 0.715458, 1, -1, 0.323038,-99) , 
6, 0.805919, 1, 0, 0.485274,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0714078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.988259, 1, 1, 0.55691,-99) , 
NN(
0, 
0, 
-1, -1.28554, 0, -1, 0.477523,-99) , 
11, -3.89334, 1, 0, 0.488579,-99) , 
NN(
0, 
0, 
-1, 0.432216, 1, -1, 0.333478,-99) , 
6, 0.807992, 1, 0, 0.479255,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0999321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432557,-99) , 
3, 1.69365, 0, 0, 0.511427,-99) , 
NN(
0, 
0, 
-1, 0.615864, 1, -1, 0.436811,-99) , 
10, 0.999935, 1, 0, 0.494761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307925,-99) , 
4, 9.06322, 1, 0, 0.487366,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0549197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30365, 0, 1, 0.597398,-99) , 
NN(
0, 
0, 
-1, 1.51624, 0, -1, 0.484224,-99) , 
11, 1.33504, 0, 0, 0.492409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266167,-99) , 
5, 0.998572, 0, 0, 0.486274,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0482476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374496,-99) , 
10, -1.70748, 0, 0, 0.500748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318108,-99) , 
5, 0.998572, 0, 0, 0.495901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280001,-99) , 
10, 2.42856, 1, 0, 0.490202,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0491825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418118,-99) , 
10, -1.28552, 0, 0, 0.495639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375176,-99) , 
6, 0.807234, 1, 0, 0.490149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315723,-99) , 
5, 0.999048, 0, 0, 0.4834,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0587364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590094,-99) , 
NN(
0, 
0, 
-1, 1.51067, 0, -1, 0.480086,-99) , 
11, 1.90004, 0, 0, 0.486018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264942,-99) , 
5, 0.998572, 0, 0, 0.480123,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0541415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442346,-99) , 
0, 0.502852, 1, 0, 0.501015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375678,-99) , 
10, 2.14283, 1, 0, 0.495469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292795,-99) , 
5, 0.998572, 0, 0, 0.490005,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0673234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455459,-99) , 
10, 1.28571, 1, 0, 0.505944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385089,-99) , 
2, 0.227863, 1, 0, 0.500549,-99) , 
NN(
0, 
0, 
-1, 0.0620134, 1, -1, 0.421539,-99) , 
2, -0.0714192, 0, 0, 0.487229,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.065404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498966,-99) , 
1, -0.00532551, 1, 0, 0.518792,-99) , 
NN(
0, 
0, 
-1, -1.28555, 0, -1, 0.467729,-99) , 
12, -0.54153, 1, 0, 0.487948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28163,-99) , 
5, 0.998572, 0, 0, 0.482545,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0619611);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394842,-99) , 
2, -0.213406, 0, 0, 0.505389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.21745,-99) , 
8, 1.91983, 0, 0, 0.411094,-99) , 
10, -1.57145, 0, 0, 0.498926,-99) , 
NN(
0, 
0, 
-1, 0.431921, 1, -1, 0.364744,-99) , 
6, 0.807992, 1, 0, 0.491058,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0334349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434757,-99) , 
8, 1.58896, 0, 0, 0.494465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363688,-99) , 
10, 2.42856, 1, 0, 0.491073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294953,-99) , 
5, 0.998572, 0, 0, 0.485969,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0610397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580564,-99) , 
NN(
0, 
0, 
-1, 1.51104, 0, -1, 0.478316,-99) , 
11, 1.85493, 0, 0, 0.483968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322718,-99) , 
5, 0.999048, 0, 0, 0.4781,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0599223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457481,-99) , 
5, 0.999932, 0, 0, 0.505545,-99) , 
NN(
0, 
0, 
-1, -1.28546, 0, -1, 0.463316,-99) , 
0, 0.499995, 1, 0, 0.491442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303994,-99) , 
5, 0.998572, 0, 0, 0.486649,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.210254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00725031, 0, 1, 0.638929,-99) , 
NN(
0, 
0, 
-1, 0.00257779, 0, -1, 0.421597,-99) , 
7, 0.0045113, 0, 0, 0.495307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215359,-99) , 
7, 0.0236981, 1, 0, 0.488261,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.070633);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488444,-99) , 
6, 0.140408, 1, 0, 0.518905,-99) , 
NN(
0, 
0, 
-1, -1.28594, 0, -1, 0.469301,-99) , 
3, 2.34251, 0, 0, 0.50239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356719,-99) , 
5, 0.999048, 0, 0, 0.497088,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0724234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378035,-99) , 
4, 9.34278, 1, 0, 0.52089,-99) , 
NN(
0, 
0, 
-1, -1.28557, 0, -1, 0.467156,-99) , 
3, 2.35123, 0, 0, 0.503303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38353,-99) , 
10, 2.14289, 1, 0, 0.497933,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.133994);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29805,-99) , 
9, -1.28588, 0, 0, 0.525729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472112,-99) , 
12, 3.49107, 0, 0, 0.483548,-99) , 
9, -951.286, 0, 0, 0.504222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349576,-99) , 
5, 0.998572, 0, 0, 0.500255,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0498331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495511,-99) , 
10, 0.725637, 1, 0, 0.586428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445638,-99) , 
6, 0.505407, 1, 0, 0.499041,-99) , 
3, 5.89841, 0, 0, 0.506013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352495,-99) , 
4, 9.34278, 1, 0, 0.50092,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0373884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.430096, 1, 1, 0.587245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429213,-99) , 
10, -1.28544, 0, 0, 0.49378,-99) , 
3, 5.89697, 0, 0, 0.50115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381383,-99) , 
4, 9.37272, 1, 0, 0.497142,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.028353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587688,-99) , 
NN(
0, 
0, 
-1, 0.793723, 1, -1, 0.492766,-99) , 
3, 6.26238, 0, 0, 0.496867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354939,-99) , 
10, 2.42856, 1, 0, 0.493209,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.028269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.26238, 0, 1, 0.507276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414627,-99) , 
2, -0.214257, 0, 0, 0.503089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360669,-99) , 
10, 2.42854, 1, 0, 0.499405,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0497207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.37557, 0, 1, 0.522429,-99) , 
NN(
0, 
0, 
-1, -1.28557, 0, -1, 0.479689,-99) , 
12, -0.636146, 1, 0, 0.495339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37372,-99) , 
5, 0.999048, 0, 0, 0.491,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0325503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620895,-99) , 
NN(
0, 
0, 
-1, 0.635793, 1, -1, 0.49369,-99) , 
3, 5.93711, 0, 0, 0.499029,-99) , 
NN(
0, 
0, 
-1, 0.442929, 1, -1, 0.39985,-99) , 
6, 0.807991, 1, 0, 0.493292,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0501918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428647, 0, 1, 0.578679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362069,-99) , 
3, 1.5152, 0, 0, 0.498847,-99) , 
11, 1.53351, 0, 0, 0.504072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383706,-99) , 
4, 9.34868, 1, 0, 0.50003,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0609387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474194,-99) , 
6, 0.23563, 1, 0, 0.502226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237364,-99) , 
13, 1.88164, 0, 0, 0.422927,-99) , 
10, -1.57125, 0, 0, 0.497184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375827,-99) , 
5, 0.999048, 0, 0, 0.492872,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.175362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00727366, 0, 1, 0.588099,-99) , 
NN(
0, 
0, 
-1, 0.00145472, 0, -1, 0.422433,-99) , 
7, 0.00339436, 0, 0, 0.497346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242548,-99) , 
7, 0.0237713, 1, 0, 0.490851,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0540836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.157044, 1, 1, 0.569537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483616,-99) , 
11, 1.42159, 0, 0, 0.489351,-99) , 
8, 6.41022, 0, 0, 0.496269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384855,-99) , 
4, 9.33163, 1, 0, 0.492499,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0546663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495176,-99) , 
10, -1.18845, 1, 0, 0.530841,-99) , 
3, 5.55845, 0, 0, 0.5539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407343,-99) , 
6, 0.80723, 1, 0, 0.504005,-99) , 
NN(
0, 
0, 
-1, 1.57234, 0, -1, 0.364521,-99) , 
10, -1.28555, 0, 0, 0.494547,-99) , 
11, -3.9435, 1, 0, 0.502829,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0359386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.753787, 1, 1, 0.570901,-99) , 
NN(
0, 
0, 
-1, -1.61232, 0, -1, 0.494155,-99) , 
3, 5.58753, 0, 0, 0.50327,-99) , 
NN(
0, 
0, 
-1, 0.42738, 1, -1, 0.423435,-99) , 
10, 1.85712, 1, 0, 0.497707,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0317183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.27818, 1, 1, 0.551557,-99) , 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.493306,-99) , 
11, -4.07993, 1, 0, 0.499844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396529,-99) , 
2, -0.212026, 0, 0, 0.4952,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0630275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0928864, 1, 1, 0.531316,-99) , 
NN(
0, 
0, 
-1, -0.353929, 1, -1, 0.478313,-99) , 
3, 3.13431, 0, 0, 0.516818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329707,-99) , 
10, -0.999827, 0, 0, 0.489799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293028,-99) , 
6, 0.51959, 1, 0, 0.475153,-99) , 
12, 0.53564, 1, 0, 0.502682,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0258091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38107,-99) , 
6, 0.791818, 1, 0, 0.496507,-99) , 
3, 6.23538, 0, 0, 0.500381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399607,-99) , 
2, -0.214276, 0, 0, 0.495935,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0408733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.451081, 1, 1, 0.57381,-99) , 
NN(
0, 
0, 
-1, 0.463611, 1, -1, 0.489243,-99) , 
8, 5.99109, 0, 0, 0.497217,-99) , 
NN(
0, 
0, 
-1, 0.430096, 1, -1, 0.417767,-99) , 
6, 0.807991, 1, 0, 0.492703,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0340677);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483454,-99) , 
6, 0.826992, 1, 0, 0.557412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417149,-99) , 
6, 0.694856, 1, 0, 0.498294,-99) , 
3, 5.93645, 0, 0, 0.502578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388601,-99) , 
10, 2.14287, 1, 0, 0.497763,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0490086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475776,-99) , 
10, 0.714513, 1, 0, 0.501338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329175,-99) , 
10, -0.718322, 0, 0, 0.438938,-99) , 
3, 1.36967, 0, 0, 0.496322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388471,-99) , 
5, 0.999048, 0, 0, 0.492533,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0426438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438178,-99) , 
10, 1.8571, 1, 0, 0.503308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322869,-99) , 
12, 2.63925, 0, 0, 0.438187,-99) , 
3, 1.37302, 0, 0, 0.49821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384176,-99) , 
2, -0.214635, 0, 0, 0.493312,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0497709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492678,-99) , 
10, 0.144291, 1, 0, 0.543249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483189,-99) , 
3, 5.16938, 0, 0, 0.488718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347721,-99) , 
6, 0.789012, 1, 0, 0.484754,-99) , 
3, 5.91098, 0, 0, 0.489362,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.133401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467989,-99) , 
3, 1.36543, 0, 0, 0.617739,-99) , 
NN(
0, 
0, 
-1, 0.0018755, 0, -1, 0.459889,-99) , 
7, 0.0056266, 0, 0, 0.498967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.248919,-99) , 
7, 0.0236326, 1, 0, 0.49259,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0500316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415067,-99) , 
10, 2.14298, 1, 0, 0.508615,-99) , 
NN(
0, 
0, 
-1, -1.01946, 0, -1, 0.400328,-99) , 
3, 1.503, 0, 0, 0.50125,-99) , 
11, 1.74434, 0, 0, 0.505425,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0455003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.035633, 1, 1, 0.519689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388491,-99) , 
10, -1.28562, 0, 0, 0.488393,-99) , 
3, 2.66771, 0, 0, 0.508102,-99) , 
NN(
0, 
0, 
-1, 1.63979, 0, -1, 0.469131,-99) , 
0, 0.500947, 1, 0, 0.49803,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0206666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.23877, 0, 1, 0.504242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406263,-99) , 
2, 0.275499, 1, 0, 0.501636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407892,-99) , 
2, -0.214257, 0, 0, 0.497568,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0654904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466309,-99) , 
10, 0.717515, 1, 0, 0.547972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487258,-99) , 
3, 4.67533, 0, 0, 0.498252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398353,-99) , 
10, -0.140637, 1, 0, 0.440203,-99) , 
6, 0.506538, 1, 0, 0.489676,-99) , 
3, 5.91124, 0, 0, 0.49426,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.026801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.873624, 0, 1, 0.505759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353035,-99) , 
10, -0.7157, 0, 0, 0.453622,-99) , 
3, 1.37576, 0, 0, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417973,-99) , 
5, 0.999048, 0, 0, 0.498614,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0226383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.74434, 0, 1, 0.504557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434787,-99) , 
2, 0.193134, 1, 0, 0.501144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401717,-99) , 
2, -0.214769, 0, 0, 0.496989,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0330105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492796,-99) , 
6, 0.83009, 1, 0, 0.564214,-99) , 
NN(
0, 
0, 
-1, 0.695892, 1, -1, 0.49088,-99) , 
3, 5.89697, 0, 0, 0.496614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40568,-99) , 
4, 9.34253, 1, 0, 0.493605,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0374081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405826,-99) , 
3, 1.51117, 0, 0, 0.498697,-99) , 
11, 2.01077, 0, 0, 0.502449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403794,-99) , 
5, 0.999048, 0, 0, 0.499101,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0511767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.51043, 0, 1, 0.574606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442957,-99) , 
6, 0.304447, 1, 0, 0.495463,-99) , 
8, 5.68828, 0, 0, 0.503141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43672,-99) , 
3, 6.08069, 0, 0, 0.479142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30844,-99) , 
10, 1.28688, 1, 0, 0.43878,-99) , 
6, 0.712113, 1, 0, 0.496296,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0303528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496065,-99) , 
10, 0.432234, 1, 0, 0.5528,-99) , 
NN(
0, 
0, 
-1, 0.4106, 1, -1, 0.491255,-99) , 
3, 5.89789, 0, 0, 0.495975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412625,-99) , 
4, 9.07131, 1, 0, 0.492921,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0254011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25453, 0, 1, 0.54966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417655,-99) , 
3, 1.53457, 0, 0, 0.494991,-99) , 
11, 1.42159, 0, 0, 0.49874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419219,-99) , 
2, -0.214437, 0, 0, 0.49532,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0467619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498912,-99) , 
10, 0.149781, 1, 0, 0.542996,-99) , 
NN(
0, 
0, 
-1, 0.462994, 1, -1, 0.484142,-99) , 
3, 5.29743, 0, 0, 0.491597,-99) , 
NN(
0, 
0, 
-1, 0.442616, 1, -1, 0.411315,-99) , 
6, 0.80723, 1, 0, 0.487063,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0566503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466527,-99) , 
5, 0.999987, 0, 0, 0.498509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43071,-99) , 
5, 0.999728, 0, 0, 0.495201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400909,-99) , 
5, 0.999048, 0, 0, 0.492049,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0424975);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397271,-99) , 
10, 1.57238, 1, 0, 0.53783,-99) , 
NN(
0, 
0, 
-1, 0.347889, 1, -1, 0.491656,-99) , 
3, 5.26703, 0, 0, 0.499839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414734,-99) , 
4, 9.38081, 1, 0, 0.49703,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0622978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.62205, 0, 1, 0.545223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415178,-99) , 
3, 4.37191, 0, 0, 0.488512,-99) , 
6, 0.0432376, 1, 0, 0.506887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411715,-99) , 
6, -0.511605, 1, 0, 0.497059,-99) , 
NN(
0, 
0, 
-1, 1.68343, 0, -1, 0.411581,-99) , 
10, -0.999792, 0, 0, 0.479252,-99) , 
3, 2.67236, 0, 0, 0.496418,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.125397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00738457, 0, 1, 0.546839,-99) , 
NN(
0, 
0, 
-1, 0.00140141, 0, -1, 0.426078,-99) , 
7, 0.00226387, 0, 0, 0.4995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.248239,-99) , 
7, 0.0237713, 1, 0, 0.493142,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0292716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.827749, 1, 1, 0.553474,-99) , 
NN(
0, 
0, 
-1, 0.696838, 1, -1, 0.491352,-99) , 
3, 5.89776, 0, 0, 0.496156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410059,-99) , 
4, 9.39171, 1, 0, 0.493372,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0378979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0625348, 1, 1, 0.512955,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.479934,-99) , 
3, 3.32566, 0, 0, 0.496389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411511,-99) , 
5, 0.999048, 0, 0, 0.493538,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0292549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466577,-99) , 
6, 0.418762, 1, 0, 0.494877,-99) , 
3, 6.22995, 0, 0, 0.498263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402914,-99) , 
4, 9.38661, 1, 0, 0.49519,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0311098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.45827, 0, 1, 0.55477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436322,-99) , 
6, 0.463559, 1, 0, 0.493246,-99) , 
3, 5.63025, 0, 0, 0.497823,-99) , 
NN(
0, 
0, 
-1, 0.429854, 1, -1, 0.432485,-99) , 
6, 0.807927, 1, 0, 0.49412,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0336729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541556,-99) , 
NN(
0, 
0, 
-1, 1.50841, 0, -1, 0.487865,-99) , 
11, 1.74434, 0, 0, 0.491066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396431,-99) , 
4, 9.27109, 1, 0, 0.487962,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.035151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.95203, 0, 1, 0.507957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409927,-99) , 
3, 1.85577, 0, 0, 0.502994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39897,-99) , 
10, -0.714099, 0, 0, 0.48699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330332,-99) , 
6, 0.236317, 1, 0, 0.472609,-99) , 
12, 0.71673, 1, 0, 0.493591,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0361576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568902,-99) , 
NN(
0, 
0, 
-1, 1.24619, 0, -1, 0.486871,-99) , 
3, 6.22995, 0, 0, 0.490477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416257,-99) , 
4, 9.06192, 1, 0, 0.487767,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0459049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359548,-99) , 
12, 0.49229, 1, 0, 0.52428,-99) , 
NN(
0, 
0, 
-1, 0.185553, 1, -1, 0.489656,-99) , 
3, 4.94019, 0, 0, 0.497675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412915,-99) , 
4, 9.39171, 1, 0, 0.495018,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0382715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.120588, 1, 1, 0.513639,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.481866,-99) , 
8, 3.46136, 0, 0, 0.497792,-99) , 
NN(
0, 
0, 
-1, 6.11681, 0, -1, 0.426525,-99) , 
6, 0.806924, 1, 0, 0.493776,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0447008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.620589, 1, 1, 0.577511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451148,-99) , 
6, 0.386571, 1, 0, 0.499626,-99) , 
3, 5.39969, 0, 0, 0.505185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474303,-99) , 
3, 5.95555, 0, 0, 0.505068,-99) , 
NN(
0, 
0, 
-1, 1.28675, 1, -1, 0.386982,-99) , 
10, 0.430096, 1, 0, 0.446756,-99) , 
6, 0.712836, 1, 0, 0.499043,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0246808);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.42836, 0, 1, 0.55142,-99) , 
NN(
0, 
0, 
-1, 1.51742, 0, -1, 0.490679,-99) , 
11, 1.33504, 0, 0, 0.495031,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0484047);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388984,-99) , 
12, 0.502854, 1, 0, 0.526856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437643,-99) , 
6, 0.183328, 1, 0, 0.494118,-99) , 
3, 4.93386, 0, 0, 0.501902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429008,-99) , 
4, 9.39786, 1, 0, 0.499592,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0394773);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493647,-99) , 
6, 0.271819, 1, 0, 0.512441,-99) , 
NN(
0, 
0, 
-1, 0.0868767, 1, -1, 0.485332,-99) , 
3, 4.29612, 0, 0, 0.494682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425893,-99) , 
4, 9.10638, 1, 0, 0.492236,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0330345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499789,-99) , 
11, -1.90882, 0, 0, 0.508186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399312,-99) , 
8, 1.87191, 0, 0, 0.503951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421321,-99) , 
10, -0.428198, 0, 0, 0.486375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371901,-99) , 
6, 0.046122, 1, 0, 0.475438,-99) , 
12, 0.926524, 1, 0, 0.496223,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0346034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467624,-99) , 
6, 0.463611, 1, 0, 0.502315,-99) , 
3, 5.93711, 0, 0, 0.505399,-99) , 
NN(
0, 
0, 
-1, 0.442929, 1, -1, 0.43711,-99) , 
6, 0.807991, 1, 0, 0.501622,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0445385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.149778, 1, 1, 0.558506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462535,-99) , 
6, 0.141399, 1, 0, 0.49523,-99) , 
8, 5.5101, 0, 0, 0.502834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463651,-99) , 
3, 6.09645, 0, 0, 0.500328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359829,-99) , 
10, 1.00102, 1, 0, 0.457598,-99) , 
6, 0.712113, 1, 0, 0.498083,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0749643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475352,-99) , 
10, -0.13881, 1, 0, 0.501602,-99) , 
6, 0.198727, 1, 0, 0.51654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479322,-99) , 
3, 3.34328, 0, 0, 0.487911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412125,-99) , 
6, -0.0617583, 1, 0, 0.47997,-99) , 
3, 3.96122, 0, 0, 0.494898,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0330797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447147,-99) , 
2, 0.214083, 1, 0, 0.506704,-99) , 
NN(
0, 
0, 
-1, -0.048226, 1, -1, 0.466936,-99) , 
0, 0.503804, 1, 0, 0.502877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377119,-99) , 
10, -0.443946, 0, 0, 0.448119,-99) , 
3, 1.382, 0, 0, 0.498551,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0311923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.6335, 0, 1, 0.504406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448974,-99) , 
6, 0.807927, 1, 0, 0.501453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461971,-99) , 
4, 4.62545, 1, 0, 0.506693,-99) , 
NN(
0, 
0, 
-1, -0.139812, 0, -1, 0.415461,-99) , 
3, 3.00658, 0, 0, 0.466367,-99) , 
2, -0.0721599, 0, 0, 0.495616,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0603765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395934,-99) , 
12, 0.497126, 1, 0, 0.497328,-99) , 
6, 0.289772, 1, 0, 0.515113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487323,-99) , 
8, 3.74688, 0, 0, 0.49689,-99) , 
NN(
0, 
0, 
-1, 4.39977, 0, -1, 0.418609,-99) , 
6, 0.0256461, 1, 0, 0.487287,-99) , 
3, 4.30916, 0, 0, 0.497067,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0303639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492031,-99) , 
10, 0.144891, 1, 0, 0.522779,-99) , 
NN(
0, 
0, 
-1, 0.3536, 1, -1, 0.491355,-99) , 
8, 5.53908, 0, 0, 0.497683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430858,-99) , 
4, 9.27084, 1, 0, 0.495485,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0340699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.30032, 0, 1, 0.513053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412219,-99) , 
3, 4.86265, 0, 0, 0.487621,-99) , 
6, 0.33145, 1, 0, 0.505705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437401,-99) , 
2, 0.21376, 1, 0, 0.503129,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0267481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445678,-99) , 
6, 0.699317, 1, 0, 0.499999,-99) , 
3, 6.26217, 0, 0, 0.502142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44128,-99) , 
6, 0.0607025, 1, 0, 0.474773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436815,-99) , 
8, 2.10696, 0, 0, 0.464343,-99) , 
0, 0.503804, 1, 0, 0.498422,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0352521);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404605,-99) , 
8, 1.81923, 0, 0, 0.497134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421216,-99) , 
9, -951.286, 0, 0, 0.458172,-99) , 
12, 1.09945, 1, 0, 0.489304,-99) , 
11, 1.8082, 0, 0, 0.492355,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0342276);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490247,-99) , 
11, 0.845204, 0, 0, 0.49491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439609,-99) , 
2, -0.132548, 0, 0, 0.492167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43499,-99) , 
2, -0.214166, 0, 0, 0.489697,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0347219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448818,-99) , 
12, 0.0952765, 1, 0, 0.523602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468191,-99) , 
6, 0.0757494, 1, 0, 0.492804,-99) , 
3, 5.25102, 0, 0, 0.49832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434426,-99) , 
4, 9.26574, 1, 0, 0.496238,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0701894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46832,-99) , 
10, -0.140614, 1, 0, 0.488366,-99) , 
6, 0.327671, 1, 0, 0.504857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481601,-99) , 
8, 3.71002, 0, 0, 0.490553,-99) , 
NN(
0, 
0, 
-1, 4.17897, 0, -1, 0.429281,-99) , 
6, -0.0489703, 1, 0, 0.480222,-99) , 
3, 4.30787, 0, 0, 0.488878,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0496559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00214013, 1, 1, 0.518784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462083,-99) , 
9, -951.286, 0, 0, 0.490434,-99) , 
8, 2.87569, 0, 0, 0.508339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480398,-99) , 
9, -951.286, 0, 0, 0.501181,-99) , 
NN(
0, 
0, 
-1, 4.36196, 0, -1, 0.477903,-99) , 
6, -0.239049, 1, 0, 0.489117,-99) , 
0, 0.499043, 1, 0, 0.500306,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0273954);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466399,-99) , 
12, 1.20173, 1, 0, 0.498187,-99) , 
NN(
0, 
0, 
-1, -1.05904, 0, -1, 0.43387,-99) , 
3, 1.50615, 0, 0, 0.493673,-99) , 
11, 1.90606, 0, 0, 0.496356,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0317299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497575,-99) , 
3, 4.67368, 0, 0, 0.505231,-99) , 
NN(
0, 
0, 
-1, 0.49229, 1, -1, 0.477009,-99) , 
6, 0.426794, 1, 0, 0.497588,-99) , 
NN(
0, 
0, 
-1, -0.71762, 0, -1, 0.453394,-99) , 
3, 1.37067, 0, 0, 0.494203,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.032996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.03463, 0, 1, 0.520641,-99) , 
NN(
0, 
0, 
-1, 3.41919, 0, -1, 0.490267,-99) , 
6, -0.23871, 1, 0, 0.502981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38657,-99) , 
10, -0.715718, 0, 0, 0.457734,-99) , 
3, 1.37269, 0, 0, 0.499571,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0269185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.599815, 1, 1, 0.534952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449283,-99) , 
6, 0.463569, 1, 0, 0.49884,-99) , 
3, 5.32512, 0, 0, 0.503237,-99) , 
NN(
0, 
0, 
-1, 0.432234, 1, -1, 0.447922,-99) , 
6, 0.807991, 1, 0, 0.500157,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0203637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570978,-99) , 
NN(
0, 
0, 
-1, 1.9339, 1, -1, 0.495134,-99) , 
11, 0.932604, 0, 0, 0.497822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385085,-99) , 
10, -0.71763, 0, 0, 0.460404,-99) , 
3, 1.37067, 0, 0, 0.49495,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.022639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459514,-99) , 
6, 0.697353, 1, 0, 0.500783,-99) , 
8, 7.19496, 0, 0, 0.502355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44382,-99) , 
2, -0.214257, 0, 0, 0.499871,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0283326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.436185, 1, 1, 0.518627,-99) , 
NN(
0, 
0, 
-1, 0.0563428, 1, -1, 0.489607,-99) , 
8, 5.09243, 0, 0, 0.497496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438611,-99) , 
4, 9.38081, 1, 0, 0.495647,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0907394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68488, 0, 1, 0.617933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438772,-99) , 
7, 0.00159743, 0, 0, 0.480607,-99) , 
7, 0.00670918, 0, 0, 0.50622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2979,-99) , 
7, 0.0234841, 1, 0, 0.500795,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0350258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494602,-99) , 
3, 3.11307, 0, 0, 0.50585,-99) , 
NN(
0, 
0, 
-1, 3.84026, 0, -1, 0.483627,-99) , 
6, -0.144067, 1, 0, 0.494724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439799,-99) , 
10, -1.85696, 0, 0, 0.492782,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0284775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475152,-99) , 
3, 1.22994, 0, 0, 0.536648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466843,-99) , 
12, 1.29886, 1, 0, 0.49895,-99) , 
11, 1.40603, 0, 0, 0.501525,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.46496,-99) , 
0, 0.504757, 1, 0, 0.499199,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0198529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448936,-99) , 
12, -2.02342, 0, 0, 0.497783,-99) , 
10, -1.85713, 1, 0, 0.499924,-99) , 
NN(
0, 
0, 
-1, 1.2151, 0, -1, 0.453042,-99) , 
3, 1.36967, 0, 0, 0.496388,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0245878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.82459, 0, 1, 0.529725,-99) , 
NN(
0, 
0, 
-1, 0.319771, 1, -1, 0.491057,-99) , 
3, 5.89697, 0, 0, 0.493991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430787,-99) , 
4, 9.39546, 1, 0, 0.492082,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0163041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55586,-99) , 
NN(
0, 
0, 
-1, 1.246, 0, -1, 0.496002,-99) , 
3, 6.23856, 0, 0, 0.498579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432311,-99) , 
4, 9.25993, 1, 0, 0.496507,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0263915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.98687, 0, 1, 0.550304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446464,-99) , 
10, -1.57125, 0, 0, 0.497389,-99) , 
8, 5.68828, 0, 0, 0.502463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454059,-99) , 
11, -4.01998, 0, 0, 0.496098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402578,-99) , 
10, 1.00141, 1, 0, 0.467711,-99) , 
6, 0.711864, 1, 0, 0.498778,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0416533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439145,-99) , 
6, 0.155441, 1, 0, 0.494013,-99) , 
3, 4.73217, 0, 0, 0.500013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465008,-99) , 
3, 5.85818, 0, 0, 0.48763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36312,-99) , 
12, 0.517395, 1, 0, 0.474146,-99) , 
6, 0.42731, 1, 0, 0.493628,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0431757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452968,-99) , 
3, 4.83101, 0, 0, 0.493513,-99) , 
6, 0.208273, 1, 0, 0.50748,-99) , 
NN(
0, 
0, 
-1, -0.0663974, 1, -1, 0.483137,-99) , 
8, 4.22268, 0, 0, 0.493235,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0344972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.401061, 1, 1, 0.53783,-99) , 
NN(
0, 
0, 
-1, 0.155444, 1, -1, 0.49165,-99) , 
3, 4.63784, 0, 0, 0.499144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432477,-99) , 
0, 0.495235, 0, 0, 0.487185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369014,-99) , 
12, 0.108477, 1, 0, 0.465147,-99) , 
6, 0.617677, 1, 0, 0.49388,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0258041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472213,-99) , 
6, 0.376936, 1, 0, 0.497287,-99) , 
8, 6.6892, 0, 0, 0.498994,-99) , 
NN(
0, 
0, 
-1, 6.11233, 0, -1, 0.43751,-99) , 
6, 0.80723, 1, 0, 0.495574,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0263801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.74362, 0, 1, 0.554797,-99) , 
NN(
0, 
0, 
-1, 1.16574, 0, -1, 0.495131,-99) , 
3, 5.39575, 0, 0, 0.499442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456338,-99) , 
11, -4.01421, 0, 0, 0.498453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392875,-99) , 
10, 1.00102, 1, 0, 0.466935,-99) , 
6, 0.712774, 1, 0, 0.495936,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0374013);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491596,-99) , 
1, -0.00747991, 1, 0, 0.498733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369601,-99) , 
10, -1.01928, 0, 0, 0.444926,-99) , 
3, 1.53063, 0, 0, 0.494704,-99) , 
11, 1.83089, 0, 0, 0.4972,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0349845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473742,-99) , 
6, 0.384987, 1, 0, 0.503306,-99) , 
8, 6.07246, 0, 0, 0.50635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462939,-99) , 
12, -0.995232, 0, 0, 0.490232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413514,-99) , 
10, 1.01406, 1, 0, 0.466948,-99) , 
6, 0.710871, 1, 0, 0.502164,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0364896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49281,-99) , 
3, 4.6065, 0, 0, 0.501302,-99) , 
NN(
0, 
0, 
-1, 0.0703143, 1, -1, 0.470624,-99) , 
6, 0.616731, 1, 0, 0.496126,-99) , 
NN(
0, 
0, 
-1, -0.926909, 1, -1, 0.452219,-99) , 
3, 1.37269, 0, 0, 0.492731,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0409326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.03648, 0, 1, 0.524992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430283,-99) , 
3, 3.64926, 0, 0, 0.493305,-99) , 
6, -0.238716, 1, 0, 0.506664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395221,-99) , 
11, 1.46837, 0, 0, 0.463892,-99) , 
3, 1.37539, 0, 0, 0.50334,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0324022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492076,-99) , 
11, -2.49286, 0, 0, 0.50442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393731,-99) , 
6, -0.933106, 1, 0, 0.458986,-99) , 
3, 1.33185, 0, 0, 0.501283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416652,-99) , 
10, 0.430052, 1, 0, 0.459027,-99) , 
6, 0.807993, 1, 0, 0.498899,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0294375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499777,-99) , 
3, 5.07754, 0, 0, 0.503887,-99) , 
NN(
0, 
0, 
-1, 2.06052, 0, -1, 0.433274,-99) , 
3, 1.2801, 0, 0, 0.499567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473302,-99) , 
10, -0.465219, 1, 0, 0.493878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366933,-99) , 
12, 0.108477, 1, 0, 0.470333,-99) , 
6, 0.617677, 1, 0, 0.495046,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0386774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.02039, 0, 1, 0.548394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445063,-99) , 
6, 0.307856, 1, 0, 0.500915,-99) , 
3, 4.90328, 0, 0, 0.506142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473422,-99) , 
3, 5.65572, 0, 0, 0.504963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365434,-99) , 
12, 0.132124, 1, 0, 0.480251,-99) , 
6, 0.615829, 1, 0, 0.502137,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0245028);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474953,-99) , 
6, 0.418774, 1, 0, 0.497335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446655,-99) , 
3, 1.24826, 0, 0, 0.494955,-99) , 
3, 6.26217, 0, 0, 0.496833,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0461168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498068,-99) , 
6, 0.350098, 1, 0, 0.516181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423302,-99) , 
6, -0.0348438, 1, 0, 0.488325,-99) , 
3, 4.07716, 0, 0, 0.502454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454088,-99) , 
6, -0.71554, 1, 0, 0.494015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418189,-99) , 
2, -0.0716874, 0, 0, 0.481206,-99) , 
12, 0.842378, 1, 0, 0.496349,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0409629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453142,-99) , 
3, 4.76432, 0, 0, 0.497031,-99) , 
6, 0.149206, 1, 0, 0.50846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408143,-99) , 
5, 0.999905, 0, 0, 0.495967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419142,-99) , 
6, -0.0561933, 1, 0, 0.48867,-99) , 
8, 4.23958, 0, 0, 0.49678,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0715359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429613,-99) , 
3, 3.77328, 0, 0, 0.497018,-99) , 
6, -0.161087, 1, 0, 0.505143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424583,-99) , 
5, 0.999995, 0, 0, 0.483033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390632,-99) , 
5, 0.999905, 0, 0, 0.477673,-99) , 
8, 3.35428, 0, 0, 0.492618,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0327722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537904,-99) , 
NN(
0, 
0, 
-1, 1.2491, 0, -1, 0.487088,-99) , 
3, 6.2392, 0, 0, 0.489284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407964,-99) , 
4, 9.33163, 1, 0, 0.486795,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0311333);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495724,-99) , 
6, 0.300018, 1, 0, 0.508588,-99) , 
NN(
0, 
0, 
-1, 0.0404156, 1, -1, 0.487228,-99) , 
8, 4.77748, 0, 0, 0.493373,-99) , 
NN(
0, 
0, 
-1, 6.21959, 0, -1, 0.452334,-99) , 
6, 0.807991, 1, 0, 0.49108,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0178845);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539021,-99) , 
NN(
0, 
0, 
-1, 0.791108, 1, -1, 0.492537,-99) , 
3, 6.23559, 0, 0, 0.494714,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0206834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499566,-99) , 
10, -1.28508, 1, 0, 0.50378,-99) , 
NN(
0, 
0, 
-1, -1.28831, 0, -1, 0.474382,-99) , 
3, 1.64106, 0, 0, 0.498954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410017,-99) , 
3, 6.21536, 0, 0, 0.455556,-99) , 
6, 0.807991, 1, 0, 0.496533,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0241036);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499177,-99) , 
3, 4.10075, 0, 0, 0.507029,-99) , 
NN(
0, 
0, 
-1, 6.09983, 0, -1, 0.472228,-99) , 
6, 0.807235, 1, 0, 0.50484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42846,-99) , 
10, -0.147096, 0, 0, 0.464848,-99) , 
3, 1.37514, 0, 0, 0.501763,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0237223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459364,-99) , 
12, 1.46547, 1, 0, 0.499405,-99) , 
11, 0.911486, 0, 0, 0.501163,-99) , 
NN(
0, 
0, 
-1, 2.48319, 0, -1, 0.463037,-99) , 
3, 1.37166, 0, 0, 0.498234,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0865929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69028, 0, 1, 0.609491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459135,-99) , 
7, 0.00258719, 0, 0, 0.479667,-99) , 
7, 0.00679146, 0, 0, 0.503477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304385,-99) , 
7, 0.0237713, 1, 0, 0.498506,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0173081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458648,-99) , 
12, -1.99446, 0, 0, 0.498739,-99) , 
10, -1.8568, 1, 0, 0.500681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415721,-99) , 
10, -0.715718, 0, 0, 0.468508,-99) , 
3, 1.37547, 0, 0, 0.498137,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0389763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4872,-99) , 
10, -0.998766, 1, 0, 0.494265,-99) , 
6, -0.152427, 1, 0, 0.503491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418145,-99) , 
6, -0.328447, 1, 0, 0.492924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410099,-99) , 
10, -1.57123, 0, 0, 0.486101,-99) , 
8, 3.35766, 0, 0, 0.495546,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0267606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43119,-99) , 
12, -2.00094, 0, 0, 0.496381,-99) , 
10, -1.57093, 1, 0, 0.499179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474823,-99) , 
8, 1.32226, 0, 0, 0.50591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357288,-99) , 
12, 2.20307, 0, 0, 0.460056,-99) , 
8, 1.60886, 0, 0, 0.495003,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0296237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479195,-99) , 
12, -0.71213, 1, 0, 0.545763,-99) , 
NN(
0, 
0, 
-1, 0.807231, 1, -1, 0.489616,-99) , 
5, 0.999524, 1, 0, 0.49274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443078,-99) , 
4, 9.34253, 1, 0, 0.49119,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0343329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431551,-99) , 
3, 3.43803, 0, 0, 0.501361,-99) , 
6, -0.205894, 1, 0, 0.508478,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413645,-99) , 
10, -1.57142, 0, 0, 0.494313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408904,-99) , 
6, -0.382595, 1, 0, 0.486066,-99) , 
3, 3.00309, 0, 0, 0.498599,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0288462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.267295, 1, 1, 0.508055,-99) , 
NN(
0, 
0, 
-1, -0.587437, 1, -1, 0.482237,-99) , 
3, 2.8608, 0, 0, 0.496588,-99) , 
NN(
0, 
0, 
-1, 6.09983, 0, -1, 0.450861,-99) , 
6, 0.807991, 1, 0, 0.494036,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0382429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495307,-99) , 
9, -951.286, 1, 0, 0.520986,-99) , 
NN(
0, 
0, 
-1, -0.0323989, 1, -1, 0.489166,-99) , 
3, 4.07165, 0, 0, 0.497957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475595,-99) , 
5, 0.999524, 1, 0, 0.490505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4067,-99) , 
12, 0.0988824, 1, 0, 0.474482,-99) , 
6, 0.616761, 1, 0, 0.494306,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0391334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565081,-99) , 
NN(
0, 
0, 
-1, 3.40216, 0, -1, 0.49388,-99) , 
6, -0.242526, 1, 0, 0.502429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48484,-99) , 
3, 2.18529, 0, 0, 0.496287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423074,-99) , 
6, -0.518869, 1, 0, 0.486347,-99) , 
8, 2.92038, 0, 0, 0.49615,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0240622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0871568, 1, 1, 0.513742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422651,-99) , 
6, -0.150287, 1, 0, 0.495074,-99) , 
3, 3.64528, 0, 0, 0.503432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439287,-99) , 
4, 9.38661, 1, 0, 0.501449,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0186716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494787,-99) , 
9, -951.286, 1, 0, 0.521848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39233,-99) , 
3, 1.53698, 0, 0, 0.497379,-99) , 
11, 0.299902, 0, 0, 0.500411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454327,-99) , 
0, 0.505709, 1, 0, 0.498705,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0320211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.366371, 1, 1, 0.522188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452279,-99) , 
6, 0.0147024, 1, 0, 0.492549,-99) , 
8, 4.93043, 0, 0, 0.499197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461172,-99) , 
12, -1.40147, 0, 0, 0.487958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401603,-99) , 
10, 1.001, 1, 0, 0.462408,-99) , 
6, 0.712834, 1, 0, 0.495357,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0305566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.13457, 0, 1, 0.529274,-99) , 
NN(
0, 
0, 
-1, 1.18601, 0, -1, 0.4896,-99) , 
8, 5.5994, 0, 0, 0.493946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504377,-99) , 
NN(
0, 
0, 
-1, 0.835189, 1, -1, 0.444266,-99) , 
10, -0.125333, 1, 0, 0.463439,-99) , 
6, 0.712836, 1, 0, 0.490762,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.026483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491351,-99) , 
9, -951.286, 1, 0, 0.501418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440783,-99) , 
10, -1.57123, 0, 0, 0.498893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450558,-99) , 
12, -2.50949, 0, 0, 0.497301,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.085828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28617, 0, 1, 0.531922,-99) , 
NN(
0, 
0, 
-1, 4.65276, 1, -1, 0.264238,-99) , 
9, -1.57142, 0, 0, 0.499069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482939,-99) , 
11, 1.58346, 0, 0, 0.491432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401128,-99) , 
10, -1.57126, 0, 0, 0.484668,-99) , 
9, -951.286, 0, 0, 0.491815,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0400314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412998,-99) , 
5, 0.999905, 0, 0, 0.494821,-99) , 
8, 4.00513, 0, 0, 0.504573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48107,-99) , 
10, -0.712344, 1, 0, 0.492271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425159,-99) , 
3, 4.33154, 0, 0, 0.484072,-99) , 
6, 0.141245, 1, 0, 0.496913,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0286087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.243463, 1, 1, 0.528667,-99) , 
NN(
0, 
0, 
-1, 0.0878938, 1, -1, 0.493599,-99) , 
8, 4.48592, 0, 0, 0.500912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427441,-99) , 
12, -2.2184, 0, 0, 0.490213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403775,-99) , 
12, 0.132124, 1, 0, 0.475278,-99) , 
6, 0.522468, 1, 0, 0.49577,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0277891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495575,-99) , 
3, 4.26654, 0, 0, 0.50287,-99) , 
NN(
0, 
0, 
-1, 0.49229, 1, -1, 0.482305,-99) , 
6, 0.427315, 1, 0, 0.497883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447921,-99) , 
2, -0.213882, 0, 0, 0.495793,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0394588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.557291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435438,-99) , 
6, 0.0145565, 1, 0, 0.49896,-99) , 
3, 4.06459, 0, 0, 0.506947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485518,-99) , 
11, -2.57237, 0, 0, 0.497586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406526,-99) , 
12, 0.503604, 1, 0, 0.487879,-99) , 
6, 0.331649, 1, 0, 0.50139,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0436188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485071,-99) , 
9, -951.286, 1, 0, 0.501367,-99) , 
6, -0.199658, 1, 0, 0.507832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449244,-99) , 
6, -0.468652, 1, 0, 0.493584,-99) , 
NN(
0, 
0, 
-1, -0.133584, 0, -1, 0.441014,-99) , 
2, -0.0658297, 0, 0, 0.48424,-99) , 
3, 2.98563, 0, 0, 0.4975,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0316973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459609,-99) , 
3, 3.36364, 0, 0, 0.498384,-99) , 
6, -0.354721, 1, 0, 0.504058,-99) , 
NN(
0, 
0, 
-1, -1.57123, 0, -1, 0.481659,-99) , 
3, 2.66804, 0, 0, 0.495449,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0208117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564758,-99) , 
NN(
0, 
0, 
-1, -1.96922, 0, -1, 0.494302,-99) , 
10, -1.85714, 1, 0, 0.49643,-99) , 
NN(
0, 
0, 
-1, 1.18719, 0, -1, 0.453802,-99) , 
3, 1.37345, 0, 0, 0.493211,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0247357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476815,-99) , 
12, 0.870409, 1, 0, 0.499619,-99) , 
11, 0.678739, 0, 0, 0.501932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42447,-99) , 
3, 1.2182, 0, 0, 0.46655,-99) , 
3, 1.37269, 0, 0, 0.499222,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0288168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477363,-99) , 
8, 2.99612, 0, 0, 0.493352,-99) , 
1, 0.00966207, 0, 0, 0.498096,-99) , 
NN(
0, 
0, 
-1, 1.1873, 0, -1, 0.46421,-99) , 
3, 1.37269, 0, 0, 0.495497,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.046033);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429066,-99) , 
10, 2.34692, 1, 0, 0.505714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39857,-99) , 
10, -1.57142, 0, 0, 0.50135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459354,-99) , 
3, 3.7339, 0, 0, 0.502282,-99) , 
NN(
0, 
0, 
-1, -0.861675, 0, -1, 0.43312,-99) , 
10, -0.117398, 1, 0, 0.481818,-99) , 
11, -3.19098, 0, 0, 0.495213,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0300294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488993,-99) , 
4, 4.28878, 1, 0, 0.503992,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.487907,-99) , 
4, 2.7318, 0, 0, 0.494221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435918,-99) , 
4, 9.27109, 1, 0, 0.492392,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0105332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451666,-99) , 
2, -0.214037, 0, 0, 0.498215,-99) , 
3, 6.26238, 0, 0, 0.500024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458725,-99) , 
12, -2.37309, 0, 0, 0.498196,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0206078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547219,-99) , 
NN(
0, 
0, 
-1, -2.00197, 0, -1, 0.493859,-99) , 
10, -1.85713, 1, 0, 0.495406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426807,-99) , 
6, -0.954751, 1, 0, 0.457749,-99) , 
3, 1.37547, 0, 0, 0.492494,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0184428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473648,-99) , 
9, -951.286, 0, 0, 0.528675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466065,-99) , 
8, 1.60457, 0, 0, 0.496545,-99) , 
10, 1.85714, 0, 0, 0.498791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455004,-99) , 
2, -0.212005, 0, 0, 0.496933,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0303152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553605,-99) , 
NN(
0, 
0, 
-1, -2.03316, 0, -1, 0.492788,-99) , 
10, -1.5686, 1, 0, 0.49593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454078,-99) , 
3, 1.23018, 0, 0, 0.496695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386479,-99) , 
12, 2.21505, 0, 0, 0.462145,-99) , 
8, 1.61314, 0, 0, 0.492322,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.024209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489571,-99) , 
11, -2.68885, 0, 0, 0.500432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449918,-99) , 
10, -1.57125, 0, 0, 0.498482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460979,-99) , 
12, -2.37309, 0, 0, 0.496858,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0336152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.80057, 0, 1, 0.510706,-99) , 
NN(
0, 
0, 
-1, 0.881524, 1, -1, 0.48681,-99) , 
6, 0.0467542, 1, 0, 0.499694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44849,-99) , 
3, 1.18087, 0, 0, 0.49978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387826,-99) , 
11, 0.887153, 0, 0, 0.465638,-99) , 
8, 1.5998, 0, 0, 0.496217,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0367782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0262703, 1, 1, 0.51844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444202,-99) , 
6, -0.475257, 1, 0, 0.495147,-99) , 
3, 2.99486, 0, 0, 0.508322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46664,-99) , 
13, 2.60048, 0, 0, 0.51359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477611,-99) , 
6, -0.619329, 1, 0, 0.485822,-99) , 
2, 0.0702535, 0, 0, 0.490202,-99) , 
0, 0.49809, 1, 0, 0.499133,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.028571);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49399,-99) , 
6, 0.247757, 1, 0, 0.50566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469643,-99) , 
11, -2.41934, 0, 0, 0.489934,-99) , 
8, 4.53314, 0, 0, 0.495404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452156,-99) , 
5, 0.999048, 0, 0, 0.494005,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0347653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447685,-99) , 
3, 3.01853, 0, 0, 0.498207,-99) , 
6, -0.43062, 1, 0, 0.502649,-99) , 
NN(
0, 
0, 
-1, -0.0747786, 0, -1, 0.471668,-99) , 
8, 2.49006, 0, 0, 0.492977,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0753408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.00433, 0, 1, 0.587741,-99) , 
NN(
0, 
0, 
-1, 3.34953, 0, -1, 0.478164,-99) , 
7, 0.00676073, 0, 0, 0.498104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317891,-99) , 
7, 0.0236633, 1, 0, 0.493523,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.021806);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499365,-99) , 
6, -0.0142663, 1, 0, 0.507667,-99) , 
NN(
0, 
0, 
-1, -0.299736, 1, -1, 0.491648,-99) , 
3, 3.47484, 0, 0, 0.498806,-99) , 
NN(
0, 
0, 
-1, 0.868624, 1, -1, 0.448251,-99) , 
6, 0.805277, 1, 0, 0.496054,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0311113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479599,-99) , 
12, 2.22202, 1, 0, 0.50912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425894,-99) , 
3, 1.21823, 0, 0, 0.471839,-99) , 
3, 1.37345, 0, 0, 0.506132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459767,-99) , 
12, -2.33914, 0, 0, 0.503984,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0690599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440436,-99) , 
3, 4.19823, 0, 0, 0.501322,-99) , 
6, 0.0871326, 1, 0, 0.510949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446659,-99) , 
5, 0.999995, 0, 0, 0.494055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400676,-99) , 
5, 0.999905, 0, 0, 0.488647,-99) , 
3, 3.64205, 0, 0, 0.498875,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0194956);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473761,-99) , 
4, 4.71064, 1, 0, 0.512391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47844,-99) , 
0, 0.5019, 1, 0, 0.496665,-99) , 
2, 0.0716008, 0, 0, 0.499095,-99) , 
10, 2.14284, 0, 0, 0.500712,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0375757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443747,-99) , 
3, 3.23788, 0, 0, 0.495297,-99) , 
6, -0.327922, 1, 0, 0.501801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476056,-99) , 
3, 1.85896, 0, 0, 0.493941,-99) , 
NN(
0, 
0, 
-1, 2.678, 0, -1, 0.446251,-99) , 
6, -0.555867, 1, 0, 0.485449,-99) , 
8, 2.92038, 0, 0, 0.495422,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0418827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4455,-99) , 
6, -0.152901, 1, 0, 0.498855,-99) , 
3, 3.68398, 0, 0, 0.50448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473813,-99) , 
10, 0.430068, 1, 0, 0.500164,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.447915,-99) , 
3, 4.55378, 0, 0, 0.486388,-99) , 
6, 0.0467327, 1, 0, 0.496937,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0264957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.97539, 0, 1, 0.525356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472157,-99) , 
2, 0.207795, 1, 0, 0.51124,-99) , 
NN(
0, 
0, 
-1, 0.490472, 0, -1, 0.489127,-99) , 
2, 0.0717926, 0, 0, 0.49259,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0426081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39407, 1, 1, 0.575413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456299,-99) , 
9, -951.286, 1, 0, 0.525048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491052,-99) , 
1, -0.00747991, 1, 0, 0.496971,-99) , 
NN(
0, 
0, 
-1, -1.0186, 0, -1, 0.42481,-99) , 
3, 1.54987, 0, 0, 0.492909,-99) , 
11, 0.851357, 0, 0, 0.495933,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0352968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430175,-99) , 
12, -1.87492, 0, 0, 0.500679,-99) , 
10, -1.28092, 1, 0, 0.505474,-99) , 
NN(
0, 
0, 
-1, -0.599415, 1, -1, 0.477926,-99) , 
8, 2.49114, 0, 0, 0.496854,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0242483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495426,-99) , 
12, -1.1117, 0, 0, 0.530281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480517,-99) , 
6, 0.131233, 1, 0, 0.496195,-99) , 
3, 5.90593, 0, 0, 0.498805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438117,-99) , 
4, 9.25993, 1, 0, 0.4969,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.057232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56855, 0, 1, 0.599468,-99) , 
NN(
0, 
0, 
-1, 0.00150922, 0, -1, 0.488136,-99) , 
7, 0.00792356, 0, 0, 0.503567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29314,-99) , 
7, 0.0237714, 1, 0, 0.498298,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0328131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471033,-99) , 
12, 1.54316, 1, 0, 0.530314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428975,-99) , 
12, -2.41532, 0, 0, 0.512885,-99) , 
NN(
0, 
0, 
-1, 0.104578, 1, -1, 0.493225,-99) , 
8, 4.55265, 0, 0, 0.500213,-99) , 
10, 1.85714, 0, 0, 0.502365,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0216401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.93776, 0, 1, 0.508929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46769,-99) , 
12, -2.37309, 0, 0, 0.507201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462203,-99) , 
5, 0.999048, 0, 0, 0.505732,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0239258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493427,-99) , 
8, 4.67139, 0, 0, 0.499104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40943,-99) , 
12, -2.33696, 0, 0, 0.496177,-99) , 
10, -1.85694, 1, 0, 0.498172,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0154919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48693,-99) , 
6, 0.711847, 0, 0, 0.543834,-99) , 
NN(
0, 
0, 
-1, 2.14287, 0, 1, 0.503801,-99) , 
5, 0.999524, 1, 0, 0.505953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457964,-99) , 
4, 9.38081, 1, 0, 0.504448,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0291009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.519611, 0, 1, 0.509621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464132,-99) , 
3, 1.2515, 0, 0, 0.507131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542168,-99) , 
NN(
0, 
0, 
-1, -1.38153, 0, -1, 0.474556,-99) , 
10, -0.712344, 1, 0, 0.485746,-99) , 
6, 0.52252, 1, 0, 0.502781,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0540102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.613715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454849,-99) , 
7, 0.00128774, 0, 0, 0.48895,-99) , 
7, 0.00901431, 0, 0, 0.502535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324679,-99) , 
7, 0.0236633, 1, 0, 0.498,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0209584);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495054,-99) , 
10, 2.14285, 0, 0, 0.496934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446015,-99) , 
3, 6.01099, 0, 0, 0.468591,-99) , 
6, 0.697353, 1, 0, 0.494269,-99) , 
8, 7.19805, 0, 0, 0.495954,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0376892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451281,-99) , 
8, 3.81762, 0, 0, 0.495015,-99) , 
6, -0.275295, 1, 0, 0.501374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486562,-99) , 
3, 2.11939, 0, 0, 0.495204,-99) , 
NN(
0, 
0, 
-1, 2.58469, 0, -1, 0.44184,-99) , 
6, -0.587889, 1, 0, 0.484247,-99) , 
3, 2.67876, 0, 0, 0.494799,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0261761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49402,-99) , 
8, 4.08712, 0, 0, 0.500206,-99) , 
NN(
0, 
0, 
-1, 0.468444, 1, -1, 0.486316,-99) , 
6, 0.141409, 1, 0, 0.494904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446559,-99) , 
0, 0.489519, 0, 0, 0.493674,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0150427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497605,-99) , 
2, 0.0497674, 0, 0, 0.501087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463402,-99) , 
2, 0.212903, 1, 0, 0.49966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451499,-99) , 
12, -2.57238, 0, 0, 0.498247,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0190338);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498262,-99) , 
10, -0.99957, 1, 0, 0.502457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428228,-99) , 
8, 1.46032, 0, 0, 0.46922,-99) , 
3, 1.42713, 0, 0, 0.500478,-99) , 
11, 2.77752, 0, 0, 0.502476,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0194517);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.42924, 0, 1, 0.533155,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00953157, 1, 1, 0.505131,-99) , 
NN(
0, 
0, 
-1, -1.0719, 0, -1, 0.45144,-99) , 
3, 1.53715, 0, 0, 0.501645,-99) , 
11, 1.33504, 0, 0, 0.503862,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0156853);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488855,-99) , 
10, -1.21704, 1, 0, 0.528431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499074,-99) , 
10, 1.85714, 0, 0, 0.501416,-99) , 
11, -4.22992, 1, 0, 0.503811,-99) , 
NN(
0, 
0, 
-1, 6.83723, 0, -1, 0.467889,-99) , 
6, 0.807926, 1, 0, 0.501795,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0411485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486984,-99) , 
9, -951.286, 0, 0, 0.501409,-99) , 
3, 3.49898, 0, 0, 0.50747,-99) , 
NN(
NN(
0, 
0, 
-1, 5.18807, 0, 1, 0.534402,-99) , 
NN(
0, 
0, 
-1, -1.67105, 0, -1, 0.483474,-99) , 
10, -0.709474, 1, 0, 0.49232,-99) , 
6, 0.04614, 1, 0, 0.501175,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0260477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497467,-99) , 
11, 1.47255, 0, 0, 0.5585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498739,-99) , 
9, -951.286, 1, 0, 0.534861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454479,-99) , 
12, 1.605, 1, 0, 0.501504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437237,-99) , 
3, 1.53975, 0, 0, 0.498894,-99) , 
11, 0.375626, 0, 0, 0.503297,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0385197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460143,-99) , 
2, -0.0716743, 0, 0, 0.500243,-99) , 
8, 3.22967, 0, 0, 0.509111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4176,-99) , 
12, 0.524436, 1, 0, 0.494102,-99) , 
NN(
0, 
0, 
-1, -0.0290575, 1, -1, 0.440957,-99) , 
3, 3.828, 0, 0, 0.486587,-99) , 
6, -0.14358, 1, 0, 0.497998,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0503493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.578, 0, 1, 0.595334,-99) , 
NN(
0, 
0, 
-1, 0.00111551, 0, -1, 0.490348,-99) , 
7, 0.00780929, 0, 0, 0.505093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342479,-99) , 
7, 0.0234313, 1, 0, 0.500943,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0319683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434705,-99) , 
3, 1.16903, 0, 0, 0.52229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42483,-99) , 
12, 1.87158, 1, 0, 0.502376,-99) , 
6, -0.714536, 1, 0, 0.507211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463173,-99) , 
12, -2.26819, 0, 0, 0.504892,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0128717);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498326,-99) , 
4, 8.77612, 0, 0, 0.500201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456978,-99) , 
5, 0.999683, 0, 0, 0.498488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449982,-99) , 
5, 0.999048, 0, 0, 0.496934,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0418287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.96058, 0, 1, 0.517137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435119,-99) , 
10, -1.28548, 0, 0, 0.511713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494469,-99) , 
10, -1.51904, 1, 0, 0.502094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398382,-99) , 
11, -3.17651, 1, 0, 0.438834,-99) , 
10, 0.454701, 1, 0, 0.490315,-99) , 
11, -2.70844, 0, 0, 0.502196,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0226642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497184,-99) , 
8, 4.96006, 0, 0, 0.506053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441433,-99) , 
11, -2.85258, 0, 0, 0.490294,-99) , 
10, 0.428709, 1, 0, 0.499826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451584,-99) , 
0, 0.489519, 0, 0, 0.498601,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0305753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.909901, 1, 1, 0.579671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463021,-99) , 
9, -951.286, 1, 0, 0.532133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46781,-99) , 
12, 1.41634, 1, 0, 0.502072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451734,-99) , 
3, 1.54619, 0, 0, 0.49939,-99) , 
11, 0.807362, 0, 0, 0.502477,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0257556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482213,-99) , 
11, 2.5696, 0, 0, 0.504915,-99) , 
12, 2.83231, 1, 0, 0.528799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495939,-99) , 
10, 1.85697, 0, 0, 0.497956,-99) , 
NN(
0, 
0, 
-1, 1.21783, 1, -1, 0.452884,-99) , 
12, 1.51519, 1, 0, 0.494293,-99) , 
11, 0.375626, 0, 0, 0.498417,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0344341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435952,-99) , 
5, 0.99981, 0, 0, 0.505205,-99) , 
8, 4.9147, 0, 0, 0.509339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466251,-99) , 
12, -1.50134, 0, 0, 0.496188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412257,-99) , 
12, 0.44975, 1, 0, 0.486517,-99) , 
6, 0.427367, 1, 0, 0.503677,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0266426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49174,-99) , 
11, 1.40043, 0, 0, 0.542589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491841,-99) , 
9, -951.286, 1, 0, 0.523382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496023,-99) , 
10, -1.28508, 1, 0, 0.500523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422566,-99) , 
3, 1.53975, 0, 0, 0.49767,-99) , 
11, 0.299902, 0, 0, 0.500846,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0214767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498021,-99) , 
10, -0.509104, 1, 0, 0.513636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468114,-99) , 
6, 0.137605, 1, 0, 0.497644,-99) , 
8, 5.09107, 0, 0, 0.50195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451193,-99) , 
12, -2.50949, 0, 0, 0.500296,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0311987);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490762,-99) , 
8, 4.61726, 0, 0, 0.500644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411779,-99) , 
6, 0.617622, 1, 0, 0.486434,-99) , 
10, 1.00004, 1, 0, 0.497521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450368,-99) , 
0, 0.489519, 0, 0, 0.496317,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0293045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434707,-99) , 
10, -1.69369, 0, 0, 0.507169,-99) , 
NN(
0, 
0, 
-1, -2.84754, 0, -1, 0.488136,-99) , 
10, 0.42867, 1, 0, 0.499379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440381,-99) , 
12, -2.52125, 0, 0, 0.497455,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0344337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483748,-99) , 
6, 0.0455337, 1, 0, 0.500391,-99) , 
5, 0.999524, 1, 0, 0.503631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46801,-99) , 
3, 3.34592, 0, 0, 0.489566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438818,-99) , 
0, 0.49333, 0, 0, 0.482653,-99) , 
4, 4.7423, 1, 0, 0.499626,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0316226);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489016,-99) , 
9, -951.286, 1, 0, 0.526402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437116,-99) , 
10, -1.28633, 0, 0, 0.512326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497615,-99) , 
6, -0.55155, 1, 0, 0.50059,-99) , 
NN(
0, 
0, 
-1, -0.638306, 1, -1, 0.453477,-99) , 
3, 2.20992, 0, 0, 0.496292,-99) , 
6, -0.714644, 1, 0, 0.499961,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0270423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.07698, 1, 1, 0.55209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489985,-99) , 
11, -2.58898, 0, 0, 0.501137,-99) , 
5, 0.999524, 1, 0, 0.503929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461159,-99) , 
4, 8.95698, 1, 0, 0.502359,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0562238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.101771, 0, 1, 0.508771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402934,-99) , 
6, -0.896272, 1, 0, 0.477403,-99) , 
8, 1.60604, 0, 0, 0.505203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304861,-99) , 
9, -0.721302, 0, 0, 0.519409,-99) , 
NN(
0, 
0, 
-1, 1.81509, 1, -1, 0.442673,-99) , 
9, -951.287, 0, 0, 0.480365,-99) , 
10, 1.28568, 1, 0, 0.501435,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0346164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486455,-99) , 
9, -951.286, 1, 0, 0.497174,-99) , 
6, -0.197515, 1, 0, 0.503146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432287,-99) , 
3, 1.15824, 0, 0, 0.498482,-99) , 
NN(
0, 
0, 
-1, 2.58277, 0, -1, 0.463219,-99) , 
6, -0.56793, 1, 0, 0.488659,-99) , 
3, 3.00639, 0, 0, 0.496739,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0310305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.62021, 0, 1, 0.528842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467082,-99) , 
6, 0.863616, 1, 0, 0.517008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491654,-99) , 
3, 4.41396, 0, 0, 0.496232,-99) , 
NN(
0, 
0, 
-1, 0.727408, 1, -1, 0.467466,-99) , 
6, 0.483035, 1, 0, 0.493332,-99) , 
8, 5.89802, 0, 0, 0.496911,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.015537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498426,-99) , 
10, -1.85713, 1, 0, 0.500596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407216,-99) , 
6, -0.930614, 1, 0, 0.469882,-99) , 
3, 1.33723, 0, 0, 0.498423,-99) , 
NN(
0, 
0, 
-1, 0.8623, 1, -1, 0.465267,-99) , 
6, 0.807926, 1, 0, 0.49661,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0209335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97963, 0, 1, 0.577686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419872,-99) , 
3, 3.32001, 0, 0, 0.472198,-99) , 
9, -951.286, 0, 0, 0.524057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530978,-99) , 
NN(
0, 
0, 
-1, -1.69388, 0, -1, 0.49791,-99) , 
11, -4.45095, 1, 0, 0.500292,-99) , 
10, 1.57136, 0, 0, 0.50285,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.028943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466857,-99) , 
9, -951.287, 0, 0, 0.535352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494785,-99) , 
8, 4.36404, 0, 0, 0.502094,-99) , 
10, 1.85709, 0, 0, 0.504302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428089,-99) , 
6, 0.861276, 1, 0, 0.464223,-99) , 
6, 0.806925, 1, 0, 0.502101,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0333228);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.371764, 1, 1, 0.510481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459657,-99) , 
3, 1.26254, 0, 0, 0.50985,-99) , 
NN(
0, 
0, 
-1, 1.92531, 0, -1, 0.468222,-99) , 
6, -0.750914, 1, 0, 0.494068,-99) , 
3, 2.35039, 0, 0, 0.50517,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.013841);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497897,-99) , 
10, -0.700527, 1, 0, 0.501039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46138,-99) , 
10, -1.57125, 0, 0, 0.499549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469735,-99) , 
12, -2.37309, 0, 0, 0.49824,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.023908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493804,-99) , 
10, 0.0716916, 1, 0, 0.516166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476702,-99) , 
6, 0.263364, 1, 0, 0.499702,-99) , 
8, 5.53971, 0, 0, 0.502961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445576,-99) , 
12, -2.39957, 0, 0, 0.500564,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0215666);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487453,-99) , 
12, -1.34426, 0, 0, 0.503375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454752,-99) , 
3, 1.246, 0, 0, 0.501289,-99) , 
3, 6.23856, 0, 0, 0.502699,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0293376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461914,-99) , 
11, 2.50167, 0, 0, 0.491647,-99) , 
12, 2.83591, 1, 0, 0.517036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494509,-99) , 
10, -1.28508, 1, 0, 0.497612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397318,-99) , 
3, 1.53477, 0, 0, 0.49403,-99) , 
11, 0.299902, 0, 0, 0.496901,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0324285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49751,-99) , 
10, -0.997581, 1, 0, 0.502774,-99) , 
6, -0.14155, 1, 0, 0.510399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491961,-99) , 
3, 2.59181, 0, 0, 0.498425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440445,-99) , 
6, -0.373217, 1, 0, 0.491574,-99) , 
8, 3.35428, 0, 0, 0.50184,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0237864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.121959, 1, 1, 0.513013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452732,-99) , 
6, -0.366677, 1, 0, 0.498276,-99) , 
8, 3.36216, 0, 0, 0.505935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470104,-99) , 
12, -2.33914, 0, 0, 0.504268,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0275788);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488868,-99) , 
10, 0.428831, 1, 0, 0.500837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458584,-99) , 
12, -2.43861, 0, 0, 0.499078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440037,-99) , 
6, -0.95616, 1, 0, 0.469876,-99) , 
3, 1.36929, 0, 0, 0.496894,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0110223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499462,-99) , 
5, 0.999524, 1, 0, 0.501189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462644,-99) , 
2, -0.194116, 0, 0, 0.499188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45702,-99) , 
2, 0.213795, 1, 0, 0.497606,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0226992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49804,-99) , 
11, -1.73812, 0, 0, 0.504592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418102,-99) , 
6, -0.915029, 1, 0, 0.476972,-99) , 
8, 1.5495, 0, 0, 0.502017,-99) , 
NN(
0, 
0, 
-1, 6.09515, 0, -1, 0.471048,-99) , 
6, 0.807927, 1, 0, 0.500326,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0224981);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495074,-99) , 
8, 4.14143, 0, 0, 0.502684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463821,-99) , 
12, -2.27834, 0, 0, 0.50077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452949,-99) , 
5, 0.999048, 0, 0, 0.499253,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.020646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.703967, 0, 1, 0.508288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472923,-99) , 
2, 0.213693, 1, 0, 0.506952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455991,-99) , 
12, -2.42796, 0, 0, 0.505026,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0328686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441705,-99) , 
12, -2.05304, 0, 0, 0.502229,-99) , 
10, -1.57075, 1, 0, 0.504694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482399,-99) , 
10, 0.141673, 0, 0, 0.508108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426796,-99) , 
6, -0.8352, 1, 0, 0.487709,-99) , 
3, 1.69657, 0, 0, 0.50181,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0352043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494681,-99) , 
6, 0.141416, 1, 0, 0.512508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486339,-99) , 
3, 5.26988, 0, 0, 0.492059,-99) , 
4, 1.82008, 0, 0, 0.50164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484735,-99) , 
4, 8.70529, 0, 0, 0.49333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431041,-99) , 
6, 0.705688, 1, 0, 0.485273,-99) , 
4, 4.60913, 1, 0, 0.498349,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0206156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496727,-99) , 
0, 0.499043, 1, 0, 0.505355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465886,-99) , 
5, 0.999048, 0, 0, 0.504158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446274,-99) , 
12, -2.52271, 0, 0, 0.50231,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0458767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470715,-99) , 
6, -0.637854, 1, 0, 0.491781,-99) , 
8, 3.09182, 0, 0, 0.502017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483087,-99) , 
10, -0.427567, 1, 0, 0.496335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426248,-99) , 
3, 3.40216, 0, 0, 0.490163,-99) , 
6, -0.23943, 1, 0, 0.495696,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0248341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496863,-99) , 
5, 0.999909, 1, 0, 0.501992,-99) , 
5, 0.999048, 1, 0, 0.503924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473814,-99) , 
0, 0.499362, 1, 0, 0.491922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456459,-99) , 
0, 0.495236, 0, 0, 0.483622,-99) , 
4, 4.70919, 1, 0, 0.499999,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0231168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497233,-99) , 
3, 2.81923, 0, 0, 0.505767,-99) , 
3, 6.22974, 0, 0, 0.50766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473761,-99) , 
4, 2.86176, 1, 0, 0.497848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431886,-99) , 
4, 4.54098, 1, 0, 0.48424,-99) , 
0, 0.493329, 0, 0, 0.504546,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0196032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.416334, 1, 1, 0.524888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499496,-99) , 
10, 1.57147, 0, 0, 0.50356,-99) , 
8, 5.53971, 0, 0, 0.507801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453528,-99) , 
12, -2.50949, 0, 0, 0.505982,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0261427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65098, 0, 1, 0.512396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440776,-99) , 
6, -0.576009, 1, 0, 0.493493,-99) , 
3, 2.47951, 0, 0, 0.505002,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474793,-99) , 
6, 0.796991, 0, 0, 0.489818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44497,-99) , 
6, 0.848777, 1, 0, 0.474575,-99) , 
6, 0.712834, 1, 0, 0.501829,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0190055);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485705,-99) , 
9, -951.286, 1, 0, 0.521346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429298,-99) , 
3, 1.53975, 0, 0, 0.498982,-99) , 
11, 0.61298, 0, 0, 0.501414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464221,-99) , 
12, -2.57238, 0, 0, 0.500314,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0286949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.32152, 0, 1, 0.517926,-99) , 
NN(
0, 
0, 
-1, 0.900445, 1, -1, 0.493775,-99) , 
6, -0.0844204, 1, 0, 0.502612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434518,-99) , 
10, -1.28695, 0, 0, 0.496633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403446,-99) , 
6, -0.688282, 1, 0, 0.487165,-99) , 
3, 2.02712, 0, 0, 0.498663,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0137321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536998,-99) , 
NN(
0, 
0, 
-1, -2.21268, 0, -1, 0.495662,-99) , 
10, 2.14283, 0, 0, 0.497376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457265,-99) , 
5, 0.999048, 0, 0, 0.496106,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.013282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461436,-99) , 
12, 1.59819, 1, 0, 0.498153,-99) , 
11, 0.195484, 0, 0, 0.500168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444441,-99) , 
6, -0.910643, 1, 0, 0.474665,-99) , 
12, 2.77661, 1, 0, 0.498086,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0176067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464608,-99) , 
9, -951.286, 1, 0, 0.517846,-99) , 
NN(
0, 
0, 
-1, 2.21306, 1, -1, 0.496952,-99) , 
11, 0.718706, 0, 0, 0.499141,-99) , 
8, 7.19805, 0, 0, 0.500485,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0238188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494959,-99) , 
11, 1.4726, 0, 0, 0.549849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487907,-99) , 
9, -951.286, 1, 0, 0.526209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451768,-99) , 
12, 1.59364, 1, 0, 0.499597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432195,-99) , 
3, 1.5366, 0, 0, 0.496991,-99) , 
11, 0.375626, 0, 0, 0.500544,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0174567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470015,-99) , 
4, 1.82233, 0, 0, 0.494183,-99) , 
12, 2.88732, 1, 0, 0.515546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498119,-99) , 
10, -1.85714, 1, 0, 0.500049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437393,-99) , 
12, 1.9545, 1, 0, 0.498065,-99) , 
11, 0.299902, 0, 0, 0.500217,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0213372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45113, 1, 1, 0.557765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475886,-99) , 
9, -951.286, 1, 0, 0.524625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499067,-99) , 
10, -1.57075, 1, 0, 0.501469,-99) , 
NN(
0, 
0, 
-1, -0.848821, 1, -1, 0.467794,-99) , 
3, 1.85121, 0, 0, 0.496979,-99) , 
11, 0.807362, 0, 0, 0.499635,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0246806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.676705, 1, 1, 0.519683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459988,-99) , 
6, 0.0743901, 1, 0, 0.499282,-99) , 
8, 4.66793, 0, 0, 0.506099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458747,-99) , 
12, -2.52271, 0, 0, 0.504575,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0213805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498476,-99) , 
10, -1.28439, 1, 0, 0.502521,-99) , 
6, -0.161424, 1, 0, 0.507545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432529,-99) , 
10, -1.5713, 0, 0, 0.495108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426489,-99) , 
6, -0.331735, 1, 0, 0.48961,-99) , 
8, 3.32356, 0, 0, 0.499451,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.017794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499045, 0, 1, 0.54241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489037,-99) , 
6, 0.844582, 1, 0, 0.525042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497753,-99) , 
3, 4.76669, 0, 0, 0.501247,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.468422,-99) , 
6, 0.684539, 1, 0, 0.499333,-99) , 
8, 6.39367, 0, 0, 0.501635,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0232023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450909,-99) , 
12, -1.96922, 0, 0, 0.501115,-99) , 
10, -1.85713, 1, 0, 0.502823,-99) , 
NN(
0, 
0, 
-1, 1.30915, 0, -1, 0.469069,-99) , 
3, 1.37345, 0, 0, 0.500308,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0397996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45389,-99) , 
12, -2.2868, 0, 0, 0.504703,-99) , 
6, -0.161087, 1, 0, 0.509368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494461,-99) , 
9, -0.715264, 1, 0, 0.510066,-99) , 
NN(
0, 
0, 
-1, -1.28553, 0, -1, 0.473035,-99) , 
9, -951.286, 0, 0, 0.487555,-99) , 
8, 3.35613, 0, 0, 0.499454,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0209402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466348,-99) , 
3, 1.2801, 0, 0, 0.500448,-99) , 
10, 2.14285, 0, 0, 0.502849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530914,-99) , 
NN(
0, 
0, 
-1, -1.14048, 0, -1, 0.470164,-99) , 
10, -0.426119, 1, 0, 0.484691,-99) , 
6, 0.616724, 1, 0, 0.500021,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0215517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475593,-99) , 
12, -0.0452437, 1, 0, 0.524132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470176,-99) , 
12, -1.82175, 0, 0, 0.512863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480888,-99) , 
6, 0.128226, 1, 0, 0.494768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447006,-99) , 
5, 0.999524, 0, 0, 0.493187,-99) , 
3, 5.56967, 0, 0, 0.495703,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0163777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530066,-99) , 
NN(
0, 
0, 
-1, 2.33795, 0, -1, 0.496204,-99) , 
0, 0.494009, 1, 0, 0.497568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509733,-99) , 
NN(
0, 
0, 
-1, -0.0780275, 1, -1, 0.464988,-99) , 
2, 0.0716008, 0, 0, 0.474917,-99) , 
0, 0.493329, 0, 0, 0.494491,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0190099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472177,-99) , 
10, -1.33281, 1, 0, 0.515059,-99) , 
NN(
0, 
0, 
-1, -1.57126, 0, -1, 0.494733,-99) , 
11, -4.20197, 1, 0, 0.496709,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0196348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.69346, 1, 1, 0.523224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421818,-99) , 
12, 1.94598, 1, 0, 0.50185,-99) , 
11, 0.299902, 0, 0, 0.504514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45154,-99) , 
0, 0.489519, 0, 0, 0.503138,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0367178);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49639,-99) , 
9, -951.286, 1, 0, 0.511357,-99) , 
NN(
0, 
0, 
-1, -0.419486, 1, -1, 0.492424,-99) , 
8, 3.32743, 0, 0, 0.501687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492373,-99) , 
3, 4.20735, 0, 0, 0.525413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383087,-99) , 
10, -0.873792, 1, 0, 0.476263,-99) , 
12, -1.60887, 0, 0, 0.498177,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0253709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488546,-99) , 
11, -2.58898, 0, 0, 0.499781,-99) , 
5, 0.999524, 1, 0, 0.501695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454588,-99) , 
4, 9.25993, 1, 0, 0.500177,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.022168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491819,-99) , 
3, 2.33604, 0, 0, 0.519183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488884,-99) , 
6, 0.237048, 1, 0, 0.498355,-99) , 
4, 0.993658, 1, 0, 0.502948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455877,-99) , 
4, 9.38661, 1, 0, 0.501551,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0195795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.4979, 1, 1, 0.524123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434476,-99) , 
3, 1.53865, 0, 0, 0.500373,-99) , 
11, 0.718706, 0, 0, 0.502697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469043,-99) , 
10, -0.428545, 0, 0, 0.491501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447757,-99) , 
6, 0.422156, 1, 0, 0.482065,-99) , 
0, 0.493329, 0, 0, 0.499929,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0106043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527228,-99) , 
NN(
0, 
0, 
-1, -2.13785, 0, -1, 0.496768,-99) , 
10, -1.85697, 1, 0, 0.497888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463801,-99) , 
2, 0.21442, 1, 0, 0.496627,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0667674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.217027,-99) , 
9, -1.85715, 0, 0, 0.506609,-99) , 
NN(
0, 
0, 
-1, 1.28583, 1, -1, 0.490045,-99) , 
9, -951.286, 0, 0, 0.498423,-99) , 
NN(
0, 
0, 
-1, 1.19843, 0, -1, 0.467695,-99) , 
3, 1.3835, 0, 0, 0.496034,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0629076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.62373, 0, 1, 0.517264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430766,-99) , 
10, 1.85712, 1, 0, 0.511614,-99) , 
NN(
NN(
0, 
0, 
-1, 1.5718, 0, 1, 0.5205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216678,-99) , 
9, -1.85677, 0, 0, 0.495193,-99) , 
9, -951.286, 1, 0, 0.503489,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0140398);
  fForest.push_back( 
NN(
0, 
0, 
-1, -0.214923, 0, -1, 0.492981,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0289307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471158,-99) , 
12, -1.86716, 0, 0, 0.502462,-99) , 
6, 0.155464, 1, 0, 0.508702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432536,-99) , 
5, 0.999905, 0, 0, 0.496473,-99) , 
NN(
0, 
0, 
-1, 3.86665, 0, -1, 0.454412,-99) , 
6, -0.192264, 1, 0, 0.488561,-99) , 
3, 3.98205, 0, 0, 0.49673,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0336652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47616,-99) , 
12, -1.0769, 0, 0, 0.502329,-99) , 
6, 0.7272, 1, 0, 0.519888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487705,-99) , 
11, 0.537491, 0, 0, 0.490752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43807,-99) , 
3, 1.1872, 0, 0, 0.488985,-99) , 
3, 5.61052, 0, 0, 0.492762,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0302974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433322,-99) , 
11, -2.46762, 1, 0, 0.487658,-99) , 
9, -951.286, 0, 0, 0.526747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467713,-99) , 
10, -0.877355, 0, 0, 0.501641,-99) , 
NN(
0, 
0, 
-1, -0.653728, 1, -1, 0.447892,-99) , 
12, -1.59097, 0, 0, 0.496293,-99) , 
10, -1.28552, 1, 0, 0.499381,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0314344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.710285, 0, 1, 0.543993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488462,-99) , 
10, 1.85718, 0, 0, 0.491095,-99) , 
5, 0.999524, 1, 0, 0.494026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445913,-99) , 
4, 9.12537, 1, 0, 0.492395,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0623443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.396261, 1, 1, 0.52663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479049,-99) , 
11, 1.6954, 0, 0, 0.490888,-99) , 
3, 2.9816, 0, 0, 0.507896,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28668, 0, 1, 0.513661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230856,-99) , 
9, -1.85699, 0, 0, 0.489893,-99) , 
9, -951.286, 1, 0, 0.499057,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0462766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472492,-99) , 
10, 1.28577, 1, 0, 0.505464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245079,-99) , 
9, -1.85704, 0, 0, 0.489262,-99) , 
9, -951.286, 1, 0, 0.497495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452647,-99) , 
5, 0.999048, 0, 0, 0.496073,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0656267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480252,-99) , 
3, 3.6657, 0, 0, 0.497022,-99) , 
11, 1.90004, 0, 0, 0.501582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429986,-99) , 
9, -0.932204, 0, 0, 0.498555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244386,-99) , 
9, -1.85727, 0, 0, 0.477448,-99) , 
9, -951.286, 1, 0, 0.489742,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0435153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561092,-99) , 
NN(
0, 
0, 
-1, 1.33334, 0, -1, 0.490413,-99) , 
3, 3.69744, 0, 0, 0.49529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525677,-99) , 
NN(
0, 
0, 
-1, -1.69647, 0, -1, 0.464915,-99) , 
10, -0.998779, 1, 0, 0.472256,-99) , 
6, 0.0467398, 1, 0, 0.485766,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0408172);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459086,-99) , 
10, -1.28571, 0, 0, 0.502179,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.476618,-99) , 
9, -951.286, 1, 0, 0.490215,-99) , 
NN(
0, 
0, 
-1, 0.0878426, 1, -1, 0.461958,-99) , 
6, 0.617677, 1, 0, 0.485897,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0502789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482564,-99) , 
10, -0.931907, 1, 0, 0.504459,-99) , 
8, 5.38196, 0, 0, 0.515254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465534,-99) , 
6, 0.42731, 1, 0, 0.502013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262866,-99) , 
9, -1.57148, 0, 0, 0.475076,-99) , 
9, -951.286, 1, 0, 0.488519,-99) , 
10, -0.714185, 1, 0, 0.494642,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0346199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459115,-99) , 
2, -0.068022, 0, 0, 0.494353,-99) , 
3, 2.74146, 0, 0, 0.500797,-99) , 
NN(
0, 
0, 
-1, 3.41283, 0, -1, 0.478767,-99) , 
6, -0.239161, 1, 0, 0.489117,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.036589);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478496,-99) , 
12, 2.31141, 1, 0, 0.498645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450335,-99) , 
10, -1.2857, 0, 0, 0.495446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493479,-99) , 
10, -0.875503, 1, 0, 0.502084,-99) , 
NN(
0, 
0, 
-1, -1.5715, 0, -1, 0.46254,-99) , 
9, -951.286, 1, 0, 0.479534,-99) , 
11, -2.58898, 0, 0, 0.487946,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0653129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.010026, 0, 1, 0.56234,-99) , 
NN(
0, 
0, 
-1, 4.2068, 0, -1, 0.478569,-99) , 
7, 0.00679159, 0, 0, 0.49372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321368,-99) , 
7, 0.0237713, 1, 0, 0.48937,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0119525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54961,-99) , 
NN(
0, 
0, 
-1, 1.46088, 1, -1, 0.497455,-99) , 
11, 0.754876, 0, 0, 0.499126,-99) , 
NN(
0, 
0, 
-1, 0.718588, 0, -1, 0.466732,-99) , 
12, 3.08085, 1, 0, 0.496994,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.013817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542353,-99) , 
NN(
0, 
0, 
-1, -2.57152, 0, -1, 0.496849,-99) , 
11, 0.453547, 0, 0, 0.499155,-99) , 
NN(
0, 
0, 
-1, -0.907781, 1, -1, 0.468788,-99) , 
12, 3.09326, 1, 0, 0.497092,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0211154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495578,-99) , 
9, -951.286, 0, 0, 0.52567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416334,-99) , 
12, -1.86837, 0, 0, 0.4959,-99) , 
10, -1.2857, 1, 0, 0.499117,-99) , 
NN(
0, 
0, 
-1, -0.917092, 1, -1, 0.456572,-99) , 
12, 3.22526, 1, 0, 0.496549,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0404669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462165,-99) , 
12, -2.30619, 0, 0, 0.51456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456862,-99) , 
12, 0.509332, 1, 0, 0.508546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487643,-99) , 
8, 4.06039, 0, 0, 0.491894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439161,-99) , 
6, 0.138356, 1, 0, 0.488591,-99) , 
8, 4.61226, 0, 0, 0.495669,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.022001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483485,-99) , 
11, -3.48944, 1, 0, 0.516743,-99) , 
NN(
0, 
0, 
-1, -1.73109, 0, -1, 0.493887,-99) , 
10, -0.999989, 1, 0, 0.496833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455888,-99) , 
12, -2.56061, 0, 0, 0.495595,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0413004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450748,-99) , 
6, -0.275423, 1, 0, 0.501934,-99) , 
3, 3.29136, 0, 0, 0.506459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482061,-99) , 
12, -1.52939, 0, 0, 0.508773,-99) , 
NN(
0, 
0, 
-1, -0.798994, 0, -1, 0.471936,-99) , 
10, 0.144188, 1, 0, 0.488529,-99) , 
6, -0.0488251, 1, 0, 0.49844,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0532671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.586246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486564,-99) , 
8, 4.66399, 0, 0, 0.497788,-99) , 
7, 0.00894349, 0, 0, 0.507496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309843,-99) , 
7, 0.023484, 1, 0, 0.50256,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0343034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 1, 1, 0.531939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457153,-99) , 
6, 0.0148992, 1, 0, 0.499508,-99) , 
3, 4.06042, 0, 0, 0.503928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445501,-99) , 
12, -2.23726, 0, 0, 0.518587,-99) , 
NN(
0, 
0, 
-1, -1.35843, 0, -1, 0.47574,-99) , 
10, -0.426783, 1, 0, 0.486154,-99) , 
6, 0.332156, 1, 0, 0.498747,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0454628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60023, 0, 1, 0.510435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448559,-99) , 
10, 1.85718, 1, 0, 0.506396,-99) , 
NN(
NN(
0, 
0, 
-1, 1.5715, 0, 1, 0.513473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241654,-99) , 
9, -1.85712, 0, 0, 0.492239,-99) , 
9, -951.286, 1, 0, 0.49942,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0382665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492309,-99) , 
8, 2.65837, 0, 0, 0.504867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482174,-99) , 
10, -1.57848, 1, 0, 0.488753,-99) , 
11, -2.5631, 0, 0, 0.496663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454977,-99) , 
12, 3.38031, 1, 0, 0.494357,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0313418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458064,-99) , 
6, -0.61984, 1, 0, 0.497471,-99) , 
8, 2.67718, 0, 0, 0.506138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550793,-99) , 
NN(
0, 
0, 
-1, 1.15811, 1, -1, 0.489061,-99) , 
1, -0.00649323, 1, 0, 0.493162,-99) , 
6, -0.429684, 1, 0, 0.498182,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0163276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443135,-99) , 
12, 1.59934, 1, 0, 0.496877,-99) , 
11, 0.223881, 0, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 1.84417, 0, -1, 0.469044,-99) , 
12, 2.77661, 1, 0, 0.497037,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0355143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479248,-99) , 
8, 4.32733, 0, 0, 0.501048,-99) , 
6, -0.197118, 1, 0, 0.505721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475672,-99) , 
8, 1.29973, 0, 0, 0.519053,-99) , 
NN(
0, 
0, 
-1, 1.59303, 0, -1, 0.480775,-99) , 
6, -0.903389, 1, 0, 0.487809,-99) , 
3, 2.99132, 0, 0, 0.497859,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0187905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.56233, 1, 1, 0.519758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463346,-99) , 
12, -1.31073, 0, 0, 0.496333,-99) , 
10, -1.00001, 1, 0, 0.499984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457767,-99) , 
2, 0.21352, 1, 0, 0.498429,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0350203);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491064,-99) , 
3, 4.56258, 0, 0, 0.507085,-99) , 
NN(
0, 
0, 
-1, -3.47085, 0, -1, 0.485818,-99) , 
10, -0.428573, 1, 0, 0.491737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455927,-99) , 
12, -2.37309, 0, 0, 0.490206,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0261638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.77501, 1, 1, 0.537462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459847,-99) , 
12, -1.70666, 0, 0, 0.5008,-99) , 
10, -1.28525, 1, 0, 0.504037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468886,-99) , 
8, 1.28541, 0, 0, 0.495513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443512,-99) , 
6, -0.904995, 1, 0, 0.475244,-99) , 
8, 1.61629, 0, 0, 0.500986,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0241891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414307,-99) , 
12, -2.00422, 0, 0, 0.495991,-99) , 
10, -1.28196, 1, 0, 0.498865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44483,-99) , 
3, 1.21438, 0, 0, 0.491063,-99) , 
NN(
0, 
0, 
-1, 1.80281, 0, -1, 0.454232,-99) , 
6, -0.809566, 1, 0, 0.476837,-99) , 
3, 2.0181, 0, 0, 0.493354,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0469844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30482, 1, 1, 0.543584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454737,-99) , 
12, 1.47489, 1, 0, 0.497335,-99) , 
11, 0.874401, 0, 0, 0.502239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488797,-99) , 
10, 1.85738, 0, 0, 0.496983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215196,-99) , 
9, -2.14293, 0, 0, 0.48148,-99) , 
9, -951.286, 1, 0, 0.492011,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.041617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.36107, 0, 1, 0.533464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453972,-99) , 
9, -951.287, 0, 0, 0.480365,-99) , 
11, -3.72151, 1, 0, 0.504626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483894,-99) , 
10, 0.523925, 1, 0, 0.492495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403578,-99) , 
12, -1.41963, 0, 0, 0.462379,-99) , 
11, -3.62419, 0, 0, 0.488708,-99) , 
10, -0.714147, 1, 0, 0.492278,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0243157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.709493, 1, 1, 0.513109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492487,-99) , 
10, 1.57141, 0, 0, 0.495675,-99) , 
3, 4.92353, 0, 0, 0.499976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466556,-99) , 
4, 1.5667, 0, 0, 0.490345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439135,-99) , 
6, 0.616219, 1, 0, 0.483033,-99) , 
0, 0.494281, 0, 0, 0.496913,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0227586);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490967,-99) , 
8, 5.95487, 0, 0, 0.522178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492004,-99) , 
4, 9.08707, 0, 0, 0.493442,-99) , 
5, 0.999524, 1, 0, 0.4951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444199,-99) , 
0, 0.489519, 0, 0, 0.493797,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0283744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.528535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442148,-99) , 
11, 1.88367, 0, 0, 0.491583,-99) , 
12, 2.653, 1, 0, 0.51564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560861,-99) , 
NN(
0, 
0, 
-1, -2.35544, 0, -1, 0.493808,-99) , 
10, -1.85681, 1, 0, 0.496257,-99) , 
11, -1.14454, 0, 0, 0.501286,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0264298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85712, 0, 1, 0.504936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451677,-99) , 
3, 1.22438, 0, 0, 0.502355,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471555,-99) , 
10, -0.00992785, 1, 0, 0.492357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40462,-99) , 
12, 0.497126, 1, 0, 0.483317,-99) , 
6, 0.427366, 1, 0, 0.49768,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0365502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499293,-99) , 
3, 3.91833, 0, 0, 0.519636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469869,-99) , 
12, -2.4396, 0, 0, 0.511465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491648,-99) , 
8, 5.09038, 0, 0, 0.497722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38627,-99) , 
12, -1.44042, 0, 0, 0.452397,-99) , 
11, -3.69241, 0, 0, 0.492768,-99) , 
10, -0.714276, 1, 0, 0.496984,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57148, 0, 1, 0.506245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458946,-99) , 
5, 0.999524, 0, 0, 0.504476,-99) , 
NN(
0, 
0, 
-1, -3.34685, 1, -1, 0.465125,-99) , 
6, 0.807927, 1, 0, 0.502386,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0245279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461764,-99) , 
12, -2.2868, 0, 0, 0.506193,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.490844,-99) , 
3, 3.31573, 0, 0, 0.498771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448664,-99) , 
1, 0.0143116, 1, 0, 0.497384,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0205084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464673,-99) , 
11, 1.00775, 0, 0, 0.517896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497334,-99) , 
10, -1.57075, 1, 0, 0.499789,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.44956,-99) , 
3, 1.55319, 0, 0, 0.496806,-99) , 
6, -0.904838, 1, 0, 0.49849,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0165131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478595,-99) , 
12, 1.51789, 1, 0, 0.524906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497956,-99) , 
11, -0.651605, 0, 0, 0.501103,-99) , 
10, 1.85712, 0, 0, 0.50272,-99) , 
NN(
0, 
0, 
-1, 0.142968, 1, -1, 0.475893,-99) , 
0, 0.491424, 0, 0, 0.500922,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0306586);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.2068, 0, 1, 0.519534,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488359,-99) , 
12, 1.18682, 1, 0, 0.502039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368687,-99) , 
12, -1.43231, 0, 0, 0.496879,-99) , 
10, -0.428444, 1, 0, 0.503969,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0178388);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480783,-99) , 
9, -951.286, 1, 0, 0.520659,-99) , 
NN(
0, 
0, 
-1, 1.85633, 0, -1, 0.495948,-99) , 
11, 0.62279, 0, 0, 0.498668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451336,-99) , 
12, -2.52667, 0, 0, 0.497172,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0196035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499982,-99) , 
3, 4.09173, 0, 0, 0.502852,-99) , 
10, 1.85718, 0, 0, 0.50589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494812,-99) , 
5, 0.999524, 1, 0, 0.502104,-99) , 
NN(
0, 
0, 
-1, 0.634401, 1, -1, 0.45398,-99) , 
12, 0.0952765, 1, 0, 0.493284,-99) , 
6, 0.236532, 1, 0, 0.501655,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0321352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498101,-99) , 
11, -0.628792, 0, 0, 0.50418,-99) , 
3, 4.75876, 0, 0, 0.506297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452435,-99) , 
12, -1.98852, 0, 0, 0.516674,-99) , 
NN(
0, 
0, 
-1, -1.1, 0, -1, 0.474926,-99) , 
10, -0.140614, 1, 0, 0.488857,-99) , 
6, 0.427311, 1, 0, 0.502018,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.018775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.62898, 0, 1, 0.506788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461608,-99) , 
5, 0.999524, 0, 0, 0.505122,-99) , 
NN(
0, 
0, 
-1, 0.429854, 1, -1, 0.465508,-99) , 
6, 0.807991, 1, 0, 0.502984,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0119351);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.504897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458262,-99) , 
4, 9.37272, 1, 0, 0.503542,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0206304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.56225, 0, 1, 0.504649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459829,-99) , 
12, 1.35787, 1, 0, 0.502174,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445964,-99) , 
10, -1.2861, 0, 0, 0.497644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447405,-99) , 
6, -0.725284, 1, 0, 0.489241,-99) , 
3, 2.02375, 0, 0, 0.498865,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0184995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49565,-99) , 
5, 0.999909, 1, 0, 0.499,-99) , 
4, 9.00889, 0, 0, 0.500658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450269,-99) , 
5, 0.999048, 0, 0, 0.499096,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0276296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.460343, 1, 1, 0.510842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43927,-99) , 
2, -0.0681193, 0, 0, 0.491305,-99) , 
3, 1.98304, 0, 0, 0.504481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430759,-99) , 
12, -2.28681, 0, 0, 0.495785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435045,-99) , 
12, 0.0952765, 1, 0, 0.484955,-99) , 
6, 0.42731, 1, 0, 0.499702,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0248307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.06922, 0, 1, 0.523835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478724,-99) , 
12, -2.4396, 0, 0, 0.516261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452217,-99) , 
5, 0.999524, 0, 0, 0.500218,-99) , 
NN(
0, 
0, 
-1, -1.67783, 0, -1, 0.469293,-99) , 
12, -1.04216, 0, 0, 0.494937,-99) , 
10, -0.714184, 1, 0, 0.499765,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0212392);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483848,-99) , 
11, -4.10126, 1, 0, 0.512275,-99) , 
NN(
0, 
0, 
-1, -1.50033, 0, -1, 0.492787,-99) , 
10, -1.28571, 1, 0, 0.49475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44965,-99) , 
0, 0.489519, 0, 0, 0.493614,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0219242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497487,-99) , 
10, -1.85713, 1, 0, 0.499345,-99) , 
11, -0.358233, 0, 0, 0.501035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443747,-99) , 
9, -951.286, 1, 0, 0.494002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444544,-99) , 
6, -0.812035, 1, 0, 0.478865,-99) , 
12, 2.01783, 1, 0, 0.498042,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0278316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.16852, 0, 1, 0.503128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446043,-99) , 
8, 1.28738, 0, 0, 0.500734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462855,-99) , 
12, -2.27746, 0, 0, 0.522047,-99) , 
NN(
0, 
0, 
-1, -1.35649, 0, -1, 0.475622,-99) , 
10, -0.426783, 1, 0, 0.4871,-99) , 
6, 0.235629, 1, 0, 0.496218,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0317655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493632,-99) , 
9, -951.286, 0, 0, 0.51012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489059,-99) , 
10, -1.17033, 1, 0, 0.493961,-99) , 
11, -2.12481, 0, 0, 0.499916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437242,-99) , 
6, -0.939694, 1, 0, 0.471005,-99) , 
3, 1.36967, 0, 0, 0.497767,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0261782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.532253, 1, 1, 0.518968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49385,-99) , 
10, 1.28571, 0, 0, 0.498673,-99) , 
8, 5.09038, 0, 0, 0.504074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445744,-99) , 
12, -2.56061, 0, 0, 0.502363,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0256149);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533648,-99) , 
NN(
NN(
0, 
0, 
-1, 4.11374, 0, 1, 0.508608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478764,-99) , 
5, 0.999955, 1, 0, 0.493684,-99) , 
6, 0.237003, 1, 0, 0.503905,-99) , 
5, 0.999048, 1, 0, 0.504942,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0270015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.715634, 1, 1, 0.526433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46853,-99) , 
8, 1.65531, 0, 0, 0.515395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475102,-99) , 
12, 2.73625, 1, 0, 0.499309,-99) , 
NN(
0, 
0, 
-1, -0.0447697, 1, -1, 0.471221,-99) , 
12, -1.05028, 0, 0, 0.494562,-99) , 
10, -0.714278, 1, 0, 0.499293,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0253817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446689,-99) , 
12, -2.03686, 0, 0, 0.49851,-99) , 
10, -1.57002, 1, 0, 0.500537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464322,-99) , 
9, -951.286, 1, 0, 0.510092,-99) , 
NN(
0, 
0, 
-1, 1.67465, 0, -1, 0.45486,-99) , 
11, 0.665074, 0, 0, 0.485908,-99) , 
3, 1.69365, 0, 0, 0.498065,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.012643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492308,-99) , 
6, 0.707451, 0, 0, 0.538992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498593,-99) , 
10, 1.85718, 0, 0, 0.50019,-99) , 
5, 0.999524, 1, 0, 0.502262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456652,-99) , 
4, 9.32353, 1, 0, 0.500867,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0152919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459764,-99) , 
10, -1.57118, 0, 0, 0.501095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447749,-99) , 
12, -2.58863, 0, 0, 0.499477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450568,-99) , 
10, 1.00303, 0, 0, 0.47217,-99) , 
12, 3.08085, 1, 0, 0.497638,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0221874);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49843,-99) , 
8, 3.61117, 0, 0, 0.503624,-99) , 
NN(
0, 
0, 
-1, -1.89151, 0, -1, 0.485406,-99) , 
6, -0.0585184, 1, 0, 0.495888,-99) , 
8, 6.8435, 0, 0, 0.497724,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0150128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476856,-99) , 
6, 0.604325, 1, 0, 0.499393,-99) , 
3, 6.22995, 0, 0, 0.501375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457015,-99) , 
4, 9.37272, 1, 0, 0.500039,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0208579);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492288,-99) , 
6, -0.487487, 1, 0, 0.497938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425626,-99) , 
6, 0.793755, 1, 0, 0.495418,-99) , 
3, 6.26345, 0, 0, 0.496817,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0185343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469202,-99) , 
12, 1.53117, 1, 0, 0.522506,-99) , 
NN(
NN(
0, 
0, 
-1, 3.16741, 1, -1, 0.497516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465835,-99) , 
11, -3.08855, 1, 0, 0.478752,-99) , 
0, 0.494281, 0, 0, 0.494069,-99) , 
10, 1.85717, 0, 0, 0.496018,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.01138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483551,-99) , 
12, -1.54265, 0, 0, 0.498541,-99) , 
8, 7.09581, 0, 0, 0.499749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445543,-99) , 
0, 0.489519, 0, 0, 0.498364,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0197994);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496748,-99) , 
8, 4.79742, 0, 0, 0.513842,-99) , 
NN(
0, 
0, 
-1, -1.26513, 0, -1, 0.495013,-99) , 
10, -0.428454, 1, 0, 0.499962,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.4724,-99) , 
12, -2.17344, 0, 0, 0.498288,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0318704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.433723, 0, 1, 0.561396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458271,-99) , 
12, 0.210136, 1, 0, 0.498401,-99) , 
11, -1.75577, 0, 0, 0.504077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484503,-99) , 
3, 1.83756, 0, 0, 0.496845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41355,-99) , 
3, 3.63067, 1, 0, 0.488078,-99) , 
12, 0.795688, 1, 0, 0.499365,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0184714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.426589, 1, 1, 0.51212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494949,-99) , 
6, -0.819337, 1, 0, 0.498701,-99) , 
8, 5.52136, 0, 0, 0.501574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474619,-99) , 
12, 0.706144, 1, 0, 0.491113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461755,-99) , 
10, -0.714168, 0, 0, 0.48462,-99) , 
0, 0.502852, 1, 0, 0.499223,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0167243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495102,-99) , 
10, -0.714121, 1, 0, 0.498558,-99) , 
2, -0.212264, 1, 0, 0.500064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460262,-99) , 
5, 0.999048, 0, 0, 0.498821,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0177934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498298,-99) , 
11, -1.00496, 0, 0, 0.502751,-99) , 
10, -1.85713, 1, 0, 0.503986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445682,-99) , 
6, -0.944157, 1, 0, 0.480708,-99) , 
3, 1.37345, 0, 0, 0.502236,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0154698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57147, 0, 1, 0.504676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457511,-99) , 
8, 7.03607, 0, 0, 0.480499,-99) , 
13, 6.48128, 1, 0, 0.502944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467025,-99) , 
12, -2.26819, 0, 0, 0.501149,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0276409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491746,-99) , 
11, -4.08315, 1, 0, 0.530402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460371,-99) , 
12, -1.65411, 0, 0, 0.500235,-99) , 
10, -1.28468, 1, 0, 0.50285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479602,-99) , 
8, 1.40305, 0, 0, 0.505248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423502,-99) , 
6, -0.880242, 1, 0, 0.483926,-99) , 
8, 1.61005, 0, 0, 0.500851,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0277758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496132,-99) , 
8, 4.50801, 0, 0, 0.515289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482545,-99) , 
9, -951.286, 1, 0, 0.492938,-99) , 
10, -0.999839, 1, 0, 0.496383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434256,-99) , 
2, 0.214083, 1, 0, 0.494149,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0280189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.53402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473591,-99) , 
12, 0.716097, 0, 0, 0.492758,-99) , 
11, -3.1977, 1, 0, 0.515916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484756,-99) , 
10, 0.904848, 1, 0, 0.498137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382998,-99) , 
10, -0.434521, 1, 0, 0.465617,-99) , 
12, -1.42729, 0, 0, 0.494684,-99) , 
10, -0.999771, 1, 0, 0.497966,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0322882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495706,-99) , 
9, -951.286, 1, 0, 0.526143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476952,-99) , 
6, -0.813748, 1, 0, 0.515167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494254,-99) , 
6, -0.488679, 1, 0, 0.498929,-99) , 
NN(
0, 
0, 
-1, -0.654073, 1, -1, 0.464144,-99) , 
3, 2.1964, 0, 0, 0.492607,-99) , 
11, 0.0846499, 0, 0, 0.495808,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0274781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483752,-99) , 
12, -1.78823, 0, 0, 0.502621,-99) , 
1, 0.00656721, 0, 0, 0.507591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476282,-99) , 
11, -0.937399, 0, 0, 0.502376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436479,-99) , 
6, -0.71662, 1, 0, 0.492549,-99) , 
3, 2.0253, 0, 0, 0.503767,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0225101);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495494,-99) , 
10, -0.996062, 1, 0, 0.499394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459746,-99) , 
6, -0.848509, 1, 0, 0.484684,-99) , 
3, 1.88934, 0, 0, 0.495945,-99) , 
8, 6.8471, 0, 0, 0.497691,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0406685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69324, 0, 1, 0.55906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471356,-99) , 
7, 0.00112851, 0, 0, 0.495862,-99) , 
7, 0.00789923, 0, 0, 0.504697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319247,-99) , 
7, 0.0236981, 1, 0, 0.500033,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.027281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487886,-99) , 
8, 2.75943, 0, 0, 0.502072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452271,-99) , 
4, 9.39171, 1, 0, 0.500467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459381,-99) , 
8, 1.31766, 0, 0, 0.485747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397299,-99) , 
6, -0.88242, 1, 0, 0.463032,-99) , 
8, 1.60196, 0, 0, 0.49665,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0305505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491686,-99) , 
12, -2.46608, 0, 0, 0.524266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453843,-99) , 
12, -0.430182, 0, 0, 0.490822,-99) , 
11, -3.61765, 1, 0, 0.506767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477651,-99) , 
12, 1.22144, 1, 0, 0.493928,-99) , 
NN(
0, 
0, 
-1, -1.6086, 0, -1, 0.469653,-99) , 
12, -1.05055, 0, 0, 0.489895,-99) , 
10, -0.714147, 1, 0, 0.493711,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0310997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499872,-99) , 
9, -951.286, 0, 0, 0.528143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433747,-99) , 
6, 0.617688, 1, 0, 0.508833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493119,-99) , 
10, -1.77504, 1, 0, 0.496012,-99) , 
NN(
0, 
0, 
-1, -0.892251, 1, -1, 0.468221,-99) , 
8, 1.60765, 0, 0, 0.492868,-99) , 
10, 1.28577, 0, 0, 0.495353,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0132794);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493552,-99) , 
13, 6.40257, 0, 0, 0.522835,-99) , 
NN(
0, 
0, 
-1, 5.96394, 1, -1, 0.496388,-99) , 
8, 6.19865, 0, 0, 0.498075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465787,-99) , 
13, 6.83762, 1, 0, 0.496467,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.00900548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533125,-99) , 
NN(
0, 
0, 
-1, 0.702514, 1, -1, 0.498114,-99) , 
3, 6.26281, 0, 0, 0.499562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455544,-99) , 
12, -2.52271, 0, 0, 0.498149,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0300067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.48726, 0, 1, 0.526271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384329,-99) , 
12, -1.88337, 0, 0, 0.502559,-99) , 
10, -0.99957, 1, 0, 0.505864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528601,-99) , 
NN(
0, 
0, 
-1, 1.65328, 1, -1, 0.460271,-99) , 
10, 0.138072, 0, 0, 0.484876,-99) , 
8, 1.60697, 0, 0, 0.503644,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0218334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475701,-99) , 
4, 2.64286, 1, 0, 0.500508,-99) , 
8, 4.16349, 0, 0, 0.514483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486053,-99) , 
10, 1.28578, 1, 0, 0.497919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370208,-99) , 
10, -0.21071, 1, 0, 0.47863,-99) , 
12, -1.24786, 0, 0, 0.49509,-99) , 
10, -0.999989, 1, 0, 0.498095,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0270139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471386,-99) , 
12, 1.55644, 1, 0, 0.522571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493947,-99) , 
9, -951.286, 0, 0, 0.509565,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.490192,-99) , 
10, -0.918227, 1, 0, 0.493788,-99) , 
10, 1.85718, 0, 0, 0.495754,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0285299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46169,-99) , 
11, -2.45258, 1, 0, 0.496315,-99) , 
9, -951.287, 0, 0, 0.52519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495985,-99) , 
10, 0.347039, 1, 0, 0.502152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383667,-99) , 
10, -0.569544, 1, 0, 0.480494,-99) , 
12, -1.54917, 0, 0, 0.499831,-99) , 
10, -1.28552, 1, 0, 0.502422,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0221648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.101705, 1, 1, 0.518546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491727,-99) , 
11, -1.72982, 0, 0, 0.49884,-99) , 
8, 5.85799, 0, 0, 0.501771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46348,-99) , 
12, -2.50949, 0, 0, 0.500481,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0249103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498712,-99) , 
11, -1.2352, 0, 0, 0.501463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445953,-99) , 
11, -0.071641, 0, 0, 0.474859,-99) , 
12, 1.36663, 1, 0, 0.499045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473994,-99) , 
3, 1.42204, 0, 0, 0.491859,-99) , 
NN(
0, 
0, 
-1, 1.70971, 0, -1, 0.4418,-99) , 
11, 0.150385, 0, 0, 0.475505,-99) , 
3, 1.70004, 0, 0, 0.495059,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0118958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.17364, 1, 1, 0.503706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46587,-99) , 
12, -2.48877, 0, 0, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468523,-99) , 
0, 0.490472, 0, 0, 0.50089,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0164562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495072,-99) , 
4, 2.25542, 0, 0, 0.501552,-99) , 
4, 9.12028, 0, 0, 0.502586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47286,-99) , 
5, 0.999048, 0, 0, 0.501657,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0152305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.40266, 1, 1, 0.506073,-99) , 
NN(
0, 
0, 
-1, -0.580354, 1, -1, 0.492019,-99) , 
8, 2.69008, 0, 0, 0.500844,-99) , 
NN(
0, 
0, 
-1, 0.498095, 0, -1, 0.476766,-99) , 
13, 6.83762, 1, 0, 0.499627,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0187846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489528,-99) , 
9, -951.286, 0, 0, 0.524546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498531,-99) , 
8, 5.56867, 0, 0, 0.501718,-99) , 
10, 1.57144, 0, 0, 0.504005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441653,-99) , 
8, 7.01956, 0, 0, 0.468671,-99) , 
13, 6.48128, 1, 0, 0.501297,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0148108);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471599,-99) , 
10, -1.76189, 0, 0, 0.522413,-99) , 
NN(
0, 
0, 
-1, -1.69904, 0, -1, 0.498108,-99) , 
10, -0.999989, 1, 0, 0.501233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450904,-99) , 
12, -2.52667, 0, 0, 0.49966,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0304581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85716, 0, 1, 0.528878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46043,-99) , 
12, -1.71885, 0, 0, 0.506866,-99) , 
10, -1.28574, 1, 0, 0.509067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485367,-99) , 
10, 0.714372, 0, 0, 0.493243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457192,-99) , 
6, 0.616218, 1, 0, 0.488109,-99) , 
0, 0.494281, 0, 0, 0.505226,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0337586);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466555,-99) , 
12, -2.4285, 0, 0, 0.535729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484831,-99) , 
9, -951.286, 0, 0, 0.499436,-99) , 
3, 3.60397, 0, 0, 0.512356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489859,-99) , 
11, -2.38361, 0, 0, 0.501041,-99) , 
NN(
0, 
0, 
-1, -0.0633599, 1, -1, 0.476703,-99) , 
6, 0.617677, 1, 0, 0.497028,-99) , 
10, -0.714127, 1, 0, 0.500448,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0264045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492838,-99) , 
10, 0.143734, 1, 0, 0.511412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46805,-99) , 
6, -0.214557, 1, 0, 0.494614,-99) , 
8, 4.35784, 0, 0, 0.500545,-99) , 
NN(
0, 
0, 
-1, 0.871432, 1, -1, 0.468405,-99) , 
6, 0.807993, 1, 0, 0.498824,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0318188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471029,-99) , 
12, -2.23726, 0, 0, 0.543385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48513,-99) , 
6, -0.638693, 1, 0, 0.499506,-99) , 
3, 4.27288, 0, 0, 0.511754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495105,-99) , 
11, 2.23533, 0, 0, 0.496997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398833,-99) , 
12, -1.43522, 0, 0, 0.493319,-99) , 
10, -0.428564, 1, 0, 0.499034,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0332712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456109,-99) , 
12, 0.867121, 1, 0, 0.507391,-99) , 
6, -0.0756926, 1, 0, 0.51242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489449,-99) , 
8, 2.87313, 0, 0, 0.49378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449496,-99) , 
6, -0.318733, 1, 0, 0.490273,-99) , 
8, 3.37025, 0, 0, 0.50217,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0178241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49895,-99) , 
6, -0.425709, 1, 0, 0.501979,-99) , 
1, 0.00652116, 0, 0, 0.50579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468087,-99) , 
8, 1.41071, 0, 0, 0.495686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455898,-99) , 
2, -0.0784603, 0, 0, 0.489732,-99) , 
8, 2.48589, 0, 0, 0.500713,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0495145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.97716, 0, 1, 0.515797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420519,-99) , 
12, 0.911523, 1, 0, 0.510428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467903,-99) , 
5, 0.999995, 0, 0, 0.498551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443797,-99) , 
5, 0.999905, 0, 0, 0.495347,-99) , 
3, 3.65124, 0, 0, 0.502128,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0177886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494509,-99) , 
10, 2.14288, 0, 0, 0.495921,-99) , 
5, 0.999524, 1, 0, 0.497782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456059,-99) , 
4, 9.32353, 1, 0, 0.4965,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0370769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68509, 0, 1, 0.563883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477478,-99) , 
7, 0.00113191, 0, 0, 0.497123,-99) , 
7, 0.00792337, 0, 0, 0.506228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350636,-99) , 
7, 0.0237713, 1, 0, 0.502293,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0204123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.72814, 1, 1, 0.505341,-99) , 
NN(
0, 
0, 
-1, -0.679559, 1, -1, 0.475291,-99) , 
12, -1.53943, 0, 0, 0.50046,-99) , 
NN(
0, 
0, 
-1, 1.00326, 0, -1, 0.470138,-99) , 
12, 2.77661, 1, 0, 0.498023,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0209824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534545,-99) , 
NN(
0, 
0, 
-1, 1.10701, 1, -1, 0.493484,-99) , 
11, -0.460256, 0, 0, 0.495753,-99) , 
NN(
0, 
0, 
-1, -0.806852, 1, -1, 0.477662,-99) , 
3, 1.70129, 0, 0, 0.492679,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0125878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530438,-99) , 
NN(
0, 
0, 
-1, -1.7311, 0, -1, 0.496423,-99) , 
11, -4.26665, 1, 0, 0.498423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457341,-99) , 
12, -2.56061, 0, 0, 0.497177,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0308965);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499267,-99) , 
12, 0.0141757, 0, 0, 0.553221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494622,-99) , 
10, -1.29698, 1, 0, 0.499936,-99) , 
11, -2.18814, 0, 0, 0.505361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486987,-99) , 
10, 1.85718, 0, 0, 0.492051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441498,-99) , 
8, 5.42976, 1, 0, 0.488301,-99) , 
12, 0.341677, 1, 0, 0.498913,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0132024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57149, 0, 1, 0.50456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467756,-99) , 
6, 0.807927, 1, 0, 0.503041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465122,-99) , 
5, 0.999048, 0, 0, 0.501873,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.017744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498983,-99) , 
11, -0.762665, 0, 0, 0.502586,-99) , 
11, -4.19339, 1, 0, 0.505888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442432,-99) , 
12, -2.52271, 0, 0, 0.503946,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0295368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49701,-99) , 
2, 0.0714342, 0, 0, 0.503088,-99) , 
6, -0.150159, 1, 0, 0.507424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486739,-99) , 
3, 2.33127, 0, 0, 0.493321,-99) , 
NN(
0, 
0, 
-1, 2.90302, 0, -1, 0.466045,-99) , 
6, -0.411918, 1, 0, 0.489183,-99) , 
8, 3.35333, 0, 0, 0.499034,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0332518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.527756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466227,-99) , 
12, 0.503604, 1, 0, 0.521378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467131,-99) , 
6, 0.122287, 1, 0, 0.504322,-99) , 
NN(
0, 
0, 
-1, 0.0724258, 1, -1, 0.485623,-99) , 
4, 4.02154, 1, 0, 0.499811,-99) , 
8, 4.60609, 0, 0, 0.507478,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0183869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499909,-99) , 
3, 2.99486, 0, 0, 0.506712,-99) , 
NN(
0, 
0, 
-1, 0.0729997, 1, -1, 0.487469,-99) , 
4, 4.75404, 1, 0, 0.503061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450716,-99) , 
12, -2.50949, 0, 0, 0.501408,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.01697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472026,-99) , 
12, -2.41883, 0, 0, 0.503782,-99) , 
10, 2.14284, 0, 0, 0.505469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461107,-99) , 
5, 0.999048, 0, 0, 0.504126,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0177102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.509074, 1, 1, 0.510953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464134,-99) , 
6, -0.366682, 1, 0, 0.497463,-99) , 
8, 3.35628, 0, 0, 0.50447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480135,-99) , 
12, -2.26819, 0, 0, 0.503229,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0267258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475937,-99) , 
12, -1.89151, 0, 0, 0.500464,-99) , 
6, -0.172866, 1, 0, 0.503582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488972,-99) , 
3, 2.55522, 0, 0, 0.493918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459231,-99) , 
6, -0.381766, 1, 0, 0.490038,-99) , 
8, 3.30572, 0, 0, 0.497435,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0215602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467458,-99) , 
3, 1.69382, 0, 0, 0.515988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4969,-99) , 
11, 0.455588, 0, 0, 0.499742,-99) , 
NN(
0, 
0, 
-1, -0.655116, 1, -1, 0.462983,-99) , 
12, -1.6191, 0, 0, 0.496329,-99) , 
10, -1.28555, 1, 0, 0.498283,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0210556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.92253, 0, 1, 0.523458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467854,-99) , 
6, 0.853834, 1, 0, 0.514368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499303,-99) , 
3, 3.95893, 0, 0, 0.502289,-99) , 
NN(
0, 
0, 
-1, 0.146191, 1, -1, 0.479811,-99) , 
6, 0.174278, 1, 0, 0.4979,-99) , 
8, 5.53908, 0, 0, 0.501278,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0140629);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473572,-99) , 
12, -2.37309, 0, 0, 0.502952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477188,-99) , 
13, 6.76498, 1, 0, 0.501588,-99) , 
10, 2.14288, 0, 0, 0.502798,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0192545);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49858,-99) , 
8, 4.96242, 0, 0, 0.511798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385724,-99) , 
12, -1.45341, 0, 0, 0.498242,-99) , 
10, -0.428564, 1, 0, 0.501971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468464,-99) , 
12, -2.33914, 0, 0, 0.5005,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.032835);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474,-99) , 
12, -2.02716, 0, 0, 0.537623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486067,-99) , 
8, 1.57766, 0, 0, 0.503316,-99) , 
3, 4.91815, 0, 0, 0.509855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496202,-99) , 
10, 0.306252, 1, 0, 0.500619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383899,-99) , 
12, -0.986286, 0, 0, 0.450472,-99) , 
11, -3.34267, 0, 0, 0.494516,-99) , 
10, -0.142733, 1, 0, 0.500727,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.019004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495068,-99) , 
10, -0.143114, 0, 0, 0.51052,-99) , 
3, 2.32889, 0, 0, 0.518003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554507,-99) , 
NN(
0, 
0, 
-1, -2.34414, 0, -1, 0.496267,-99) , 
10, -1.85714, 1, 0, 0.498393,-99) , 
11, -1.06408, 0, 0, 0.503308,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0193789);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.36186, 0, 1, 0.521044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458655,-99) , 
5, 0.999683, 0, 0, 0.501662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455321,-99) , 
5, 0.999048, 0, 0, 0.500157,-99) , 
10, -0.714107, 1, 0, 0.50487,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0279774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14288, 0, 1, 0.507075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461422,-99) , 
5, 0.999524, 0, 0, 0.505107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492261,-99) , 
8, 5.21682, 0, 0, 0.511032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406979,-99) , 
10, -0.292975, 1, 0, 0.492525,-99) , 
12, -1.20329, 0, 0, 0.502317,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.015442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.62001, 1, 1, 0.52589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483521,-99) , 
1, -0.00502634, 0, 0, 0.519017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482279,-99) , 
12, -1.23686, 0, 0, 0.497614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457188,-99) , 
10, 2.23808, 1, 0, 0.496131,-99) , 
10, -0.999854, 1, 0, 0.499704,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0351854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483481,-99) , 
12, 0.691641, 1, 0, 0.515219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489894,-99) , 
10, -1.66327, 1, 0, 0.493133,-99) , 
11, -1.99683, 0, 0, 0.498393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46977,-99) , 
4, 1.22992, 0, 0, 0.490998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426811,-99) , 
6, -0.619382, 1, 0, 0.481281,-99) , 
12, 1.42395, 1, 0, 0.495013,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0203867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498282,-99) , 
5, 0.999524, 1, 0, 0.500654,-99) , 
11, -0.149666, 0, 0, 0.502837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453738,-99) , 
9, -951.286, 1, 0, 0.4925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44182,-99) , 
6, -0.812036, 1, 0, 0.477926,-99) , 
12, 2.06512, 1, 0, 0.499543,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.026912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.10073, 0, 1, 0.530449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499554,-99) , 
10, -0.998099, 1, 0, 0.503907,-99) , 
6, -0.252004, 1, 0, 0.509819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488475,-99) , 
3, 1.87004, 0, 0, 0.494944,-99) , 
NN(
0, 
0, 
-1, 2.22697, 0, -1, 0.460825,-99) , 
6, -0.692907, 1, 0, 0.487257,-99) , 
8, 2.45077, 0, 0, 0.502865,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0277467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498949,-99) , 
2, 0.0304006, 0, 0, 0.507549,-99) , 
2, -0.214437, 1, 0, 0.510021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537749,-99) , 
NN(
0, 
0, 
-1, -0.511384, 1, -1, 0.48413,-99) , 
10, 1.57139, 0, 0, 0.488604,-99) , 
3, 2.66883, 0, 0, 0.501794,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0318979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49167,-99) , 
9, -951.286, 0, 0, 0.508248,-99) , 
3, 4.56854, 0, 0, 0.523603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491124,-99) , 
12, 1.35076, 1, 0, 0.505101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418041,-99) , 
10, -0.28111, 1, 0, 0.488267,-99) , 
12, -1.2408, 0, 0, 0.502613,-99) , 
10, -0.999778, 1, 0, 0.505863,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0371332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450192,-99) , 
12, 1.51789, 1, 0, 0.525194,-99) , 
NN(
NN(
0, 
0, 
-1, 1.48826, 0, 1, 0.507569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290878,-99) , 
9, -1.85718, 0, 0, 0.492166,-99) , 
9, -951.286, 1, 0, 0.499944,-99) , 
10, 1.85714, 0, 0, 0.501652,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0251703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488836,-99) , 
9, -951.286, 0, 0, 0.523449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485405,-99) , 
10, -0.224415, 0, 0, 0.508727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483374,-99) , 
10, 0.238229, 1, 0, 0.495055,-99) , 
11, -1.33695, 0, 0, 0.498633,-99) , 
10, 1.85714, 0, 0, 0.500324,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0211927);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496507,-99) , 
10, -0.393403, 1, 0, 0.50296,-99) , 
NN(
0, 
0, 
-1, -0.7393, 1, -1, 0.486372,-99) , 
13, 2.18612, 0, 0, 0.498547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459484,-99) , 
12, -2.50949, 0, 0, 0.497301,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0223115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499899,-99) , 
6, -0.219079, 1, 0, 0.505812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458424,-99) , 
6, -0.512573, 1, 0, 0.4954,-99) , 
8, 2.93025, 0, 0, 0.501146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46177,-99) , 
12, -2.54817, 0, 0, 0.505537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394888,-99) , 
10, -0.739974, 1, 0, 0.480277,-99) , 
12, -1.65579, 0, 0, 0.498457,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.02138);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477255,-99) , 
12, -1.79846, 0, 0, 0.500177,-99) , 
NN(
0, 
0, 
-1, -0.420354, 1, -1, 0.48881,-99) , 
3, 2.98519, 0, 0, 0.495071,-99) , 
10, 2.14285, 0, 0, 0.496524,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0187212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480553,-99) , 
0, 0.499043, 1, 0, 0.505713,-99) , 
3, 3.93779, 0, 0, 0.516242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466354,-99) , 
5, 0.999524, 0, 0, 0.499249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386673,-99) , 
10, -0.507216, 1, 0, 0.462366,-99) , 
12, -1.49826, 0, 0, 0.495897,-99) , 
10, -0.999854, 1, 0, 0.499073,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0190243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.29056, 1, 1, 0.551493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498319,-99) , 
6, 0.00193856, 1, 0, 0.503229,-99) , 
5, 0.999524, 1, 0, 0.508389,-99) , 
NN(
0, 
0, 
-1, 1.16592, 0, -1, 0.491888,-99) , 
8, 3.79939, 0, 0, 0.499711,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0310445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495691,-99) , 
10, 1.0545, 1, 0, 0.506096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471037,-99) , 
6, -0.90687, 1, 0, 0.483922,-99) , 
10, -0.714147, 0, 0, 0.503226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477152,-99) , 
8, 4.50514, 0, 0, 0.506734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382614,-99) , 
10, -0.519708, 1, 0, 0.48628,-99) , 
12, -1.51059, 0, 0, 0.500562,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0330264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.93414, 0, 1, 0.518084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472176,-99) , 
12, -2.45277, 0, 0, 0.510888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47146,-99) , 
11, -2.54173, 0, 0, 0.50303,-99) , 
NN(
0, 
0, 
-1, 1.58034, 0, -1, 0.486442,-99) , 
10, 0.523896, 0, 0, 0.494193,-99) , 
10, -0.714148, 1, 0, 0.497936,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0129969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.309139, 0, 1, 0.503784,-99) , 
NN(
0, 
0, 
-1, 1.41969, 0, -1, 0.478243,-99) , 
12, 2.55423, 1, 0, 0.501257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467729,-99) , 
12, -2.47158, 0, 0, 0.500083,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0204201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465197,-99) , 
12, 1.59749, 1, 0, 0.496734,-99) , 
10, 1.91161, 1, 0, 0.519601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497659,-99) , 
10, -1.47468, 1, 0, 0.500292,-99) , 
NN(
0, 
0, 
-1, -0.877851, 1, -1, 0.473595,-99) , 
8, 1.6166, 0, 0, 0.497311,-99) , 
10, 1.57147, 0, 0, 0.499637,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0170245);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499259,-99) , 
3, 4.24474, 0, 0, 0.514983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488606,-99) , 
3, 2.36204, 0, 0, 0.498469,-99) , 
10, -0.714298, 1, 0, 0.501828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456717,-99) , 
12, -2.59265, 0, 0, 0.500573,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0215804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.907359, 1, 1, 0.532384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48582,-99) , 
4, 3.26844, 1, 0, 0.517854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482623,-99) , 
12, -1.5796, 0, 0, 0.500905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445772,-99) , 
12, 1.91471, 1, 0, 0.498982,-99) , 
11, 0.299902, 0, 0, 0.501374,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0468114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42534, 0, 1, 0.541184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482155,-99) , 
3, 4.63689, 0, 0, 0.489547,-99) , 
7, 0.00562493, 0, 0, 0.502281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341667,-99) , 
7, 0.0236299, 1, 0, 0.498171,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0303805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487557,-99) , 
2, 0.0229083, 0, 0, 0.493304,-99) , 
5, 0.999524, 1, 0, 0.496448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454118,-99) , 
3, 1.84491, 0, 0, 0.49065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443174,-99) , 
6, 0.611652, 1, 0, 0.482426,-99) , 
4, 4.74841, 1, 0, 0.493762,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0179206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488114,-99) , 
0, 0.499042, 1, 0, 0.505767,-99) , 
3, 4.56842, 0, 0, 0.51542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477839,-99) , 
0, 0.491424, 0, 0, 0.50005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410628,-99) , 
12, -1.85721, 0, 0, 0.475496,-99) , 
12, -1.45065, 0, 0, 0.497544,-99) , 
10, -0.999782, 1, 0, 0.500329,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0200336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.60359, 0, 1, 0.512469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475742,-99) , 
6, 0.521657, 1, 0, 0.496845,-99) , 
10, -0.428573, 1, 0, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467289,-99) , 
12, -2.26819, 0, 0, 0.499355,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.035022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490531,-99) , 
9, -951.286, 0, 0, 0.515117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435908,-99) , 
11, 1.95944, 0, 0, 0.482776,-99) , 
12, 2.77695, 1, 0, 0.504301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537077,-99) , 
NN(
0, 
0, 
-1, -2.08718, 0, -1, 0.487118,-99) , 
10, -1.85715, 1, 0, 0.488896,-99) , 
11, -1.06408, 0, 0, 0.492701,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0238208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499917, 0, 1, 0.536154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474514,-99) , 
11, 1.57313, 0, 0, 0.502983,-99) , 
12, 2.72071, 1, 0, 0.520732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496913,-99) , 
11, -1.38538, 0, 0, 0.500999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449605,-99) , 
12, 1.41521, 1, 0, 0.499006,-99) , 
11, -0.479071, 0, 0, 0.503055,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0262696);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49924,-99) , 
2, -0.0140296, 1, 0, 0.505832,-99) , 
NN(
0, 
0, 
-1, 3.01956, 0, -1, 0.477378,-99) , 
2, -0.152972, 0, 0, 0.503381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457427,-99) , 
4, 4.62337, 1, 0, 0.498726,-99) , 
NN(
0, 
0, 
-1, 3.40821, 1, -1, 0.444896,-99) , 
3, 2.67637, 0, 0, 0.478596,-99) , 
2, 0.0714933, 1, 0, 0.499675,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0173618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498208,-99) , 
3, 3.28246, 0, 0, 0.51309,-99) , 
0, 0.494281, 1, 0, 0.520531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485537,-99) , 
2, 0.0730028, 1, 0, 0.500723,-99) , 
3, 6.26587, 0, 0, 0.502115,-99) , 
10, -0.999628, 1, 0, 0.504973,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0178723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 1, 1, 0.527934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486306,-99) , 
0, 0.497141, 0, 0, 0.501769,-99) , 
11, -3.1977, 1, 0, 0.516399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453704,-99) , 
12, -1.62454, 0, 0, 0.498156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468823,-99) , 
12, 3.28316, 1, 0, 0.496211,-99) , 
10, -0.999989, 1, 0, 0.499321,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0279937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456209,-99) , 
4, 9.27898, 1, 0, 0.503824,-99) , 
1, -0.00621739, 1, 0, 0.507265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485457,-99) , 
3, 1.87882, 0, 0, 0.495453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455589,-99) , 
6, -0.610604, 1, 0, 0.490511,-99) , 
3, 2.34251, 0, 0, 0.501876,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0249841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479156,-99) , 
6, 0.332164, 1, 0, 0.496695,-99) , 
5, 0.999524, 1, 0, 0.499305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475242,-99) , 
8, 3.75488, 0, 0, 0.49427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449412,-99) , 
10, 1.28572, 1, 0, 0.487744,-99) , 
4, 4.60913, 1, 0, 0.496953,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0280329);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462689,-99) , 
10, -1.69373, 0, 0, 0.518356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487503,-99) , 
12, -2.4396, 0, 0, 0.513281,-99) , 
NN(
0, 
0, 
-1, -1.05839, 0, -1, 0.489706,-99) , 
10, -0.714167, 1, 0, 0.495011,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0516727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483714,-99) , 
6, -0.674862, 1, 0, 0.506082,-99) , 
3, 3.93779, 0, 0, 0.514357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495814,-99) , 
11, 1.59338, 0, 0, 0.500555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327886,-99) , 
9, -1.28564, 0, 0, 0.486773,-99) , 
9, -951.286, 1, 0, 0.493664,-99) , 
10, -0.99984, 1, 0, 0.496886,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0460954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.9032, 0, 1, 0.50959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474635,-99) , 
3, 5.70067, 0, 0, 0.487158,-99) , 
6, 0.426554, 1, 0, 0.505453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436585,-99) , 
9, -1.16345, 0, 0, 0.504891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.22186,-99) , 
9, -2.14293, 0, 0, 0.490198,-99) , 
9, -951.286, 1, 0, 0.497957,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.039833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.24458, 0, 1, 0.504596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445921,-99) , 
10, -1.57143, 0, 0, 0.500613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445918,-99) , 
9, -0.918611, 0, 0, 0.499159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2531,-99) , 
9, -2.14294, 0, 0, 0.485549,-99) , 
9, -951.286, 1, 0, 0.49323,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0205794);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458417,-99) , 
10, -1.53062, 0, 0, 0.49766,-99) , 
NN(
0, 
0, 
-1, -1.85722, 0, -1, 0.484593,-99) , 
9, -951.286, 1, 0, 0.491216,-99) , 
10, 2.14285, 0, 0, 0.492585,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0277256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483583,-99) , 
9, -951.287, 0, 0, 0.494811,-99) , 
8, 4.54305, 0, 0, 0.502259,-99) , 
NN(
NN(
0, 
0, 
-1, 3.33983, 1, -1, 0.4889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39318,-99) , 
12, -1.86765, 0, 0, 0.470964,-99) , 
12, -1.37165, 0, 0, 0.48678,-99) , 
10, -0.999996, 1, 0, 0.489176,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0298811);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471834,-99) , 
12, -1.93155, 0, 0, 0.510794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488002,-99) , 
11, -4.38191, 1, 0, 0.49012,-99) , 
3, 5.28534, 0, 0, 0.493607,-99) , 
10, 2.14285, 0, 0, 0.495216,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0228968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497255,-99) , 
6, -0.32455, 1, 0, 0.500496,-99) , 
NN(
0, 
0, 
-1, -0.518874, 1, -1, 0.48466,-99) , 
8, 2.91382, 0, 0, 0.493901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460204,-99) , 
12, -2.17344, 0, 0, 0.491873,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0271868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467954,-99) , 
6, -0.64668, 1, 0, 0.501435,-99) , 
8, 2.51312, 0, 0, 0.506828,-99) , 
NN(
0, 
0, 
-1, 1.17231, 1, -1, 0.487665,-99) , 
6, -0.42927, 1, 0, 0.495265,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0380341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.208716, 1, 1, 0.515551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421128,-99) , 
10, -1.15577, 1, 0, 0.474774,-99) , 
12, -1.85466, 0, 0, 0.50854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495208,-99) , 
9, -951.286, 0, 0, 0.5087,-99) , 
NN(
0, 
0, 
-1, -0.250993, 1, -1, 0.481977,-99) , 
10, 0.428651, 0, 0, 0.491285,-99) , 
8, 3.79218, 0, 0, 0.499407,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0254857);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97937, 0, 1, 0.530942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494385,-99) , 
8, 4.17662, 0, 0, 0.502141,-99) , 
NN(
0, 
0, 
-1, -0.98611, 1, -1, 0.454847,-99) , 
12, -1.85282, 0, 0, 0.498765,-99) , 
10, -1.57122, 1, 0, 0.500723,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0241494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497637,-99) , 
11, -2.02279, 0, 0, 0.504161,-99) , 
NN(
0, 
0, 
-1, -0.821493, 1, -1, 0.481934,-99) , 
8, 1.86189, 0, 0, 0.499841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511931,-99) , 
NN(
0, 
0, 
-1, 1.09636, 1, -1, 0.450128,-99) , 
10, 0.144541, 1, 0, 0.475619,-99) , 
6, 0.712772, 1, 0, 0.497378,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.039626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490373,-99) , 
6, 0.422856, 1, 0, 0.5125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33038,-99) , 
9, -1.85698, 0, 0, 0.496977,-99) , 
9, -951.286, 1, 0, 0.504911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431339,-99) , 
9, -951.286, 0, 0, 0.470433,-99) , 
10, 1.85713, 1, 0, 0.502794,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0117414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497643,-99) , 
12, 2.53762, 1, 0, 0.527577,-99) , 
NN(
0, 
0, 
-1, -2.58581, 0, -1, 0.497313,-99) , 
11, 0.344598, 0, 0, 0.499356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472009,-99) , 
12, 3.35768, 1, 0, 0.497809,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0344569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.53074, 0, 1, 0.511341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338541,-99) , 
9, -1.85704, 0, 0, 0.49568,-99) , 
9, -951.286, 1, 0, 0.503953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476073,-99) , 
12, -1.06875, 0, 0, 0.494656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439933,-99) , 
10, 1.00117, 1, 0, 0.478666,-99) , 
6, 0.712834, 1, 0, 0.501367,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0242683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.6931, 1, 1, 0.528663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484737,-99) , 
6, -0.810463, 0, 0, 0.51655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525802,-99) , 
NN(
0, 
0, 
-1, -1.50036, 0, -1, 0.489769,-99) , 
8, 7.19496, 0, 0, 0.490831,-99) , 
10, -1.28554, 1, 0, 0.493428,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0275933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.54253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489152,-99) , 
9, -951.286, 1, 0, 0.499572,-99) , 
11, -2.1187, 0, 0, 0.503381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45918,-99) , 
6, 0.237003, 1, 0, 0.496411,-99) , 
NN(
0, 
0, 
-1, -0.139604, 0, -1, 0.449652,-99) , 
2, -0.0716018, 0, 0, 0.488873,-99) , 
12, 0.357493, 1, 0, 0.497924,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0182445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492028,-99) , 
3, 3.31307, 0, 0, 0.498321,-99) , 
10, 2.14287, 0, 0, 0.500176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456286,-99) , 
5, 0.999048, 0, 0, 0.49886,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0165797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498344,-99) , 
11, -2.25205, 0, 0, 0.501858,-99) , 
NN(
0, 
0, 
-1, 4.60233, 1, -1, 0.489284,-99) , 
12, 0.499279, 1, 0, 0.497266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466761,-99) , 
12, -2.23425, 0, 0, 0.495607,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0233706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489541,-99) , 
8, 4.27338, 1, 0, 0.522678,-99) , 
NN(
NN(
0, 
0, 
-1, 4.54626, 0, 1, 0.508536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489427,-99) , 
6, 0.712113, 0, 0, 0.491635,-99) , 
10, -0.918362, 1, 0, 0.494787,-99) , 
10, 1.85714, 0, 0, 0.496672,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0259921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473151,-99) , 
6, -0.429476, 1, 0, 0.499548,-99) , 
8, 3.22902, 0, 0, 0.504235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490619,-99) , 
11, -1.94813, 0, 0, 0.494214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421883,-99) , 
12, 0.911523, 1, 0, 0.490144,-99) , 
6, -0.144079, 1, 0, 0.497359,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0131024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.952013, 0, 1, 0.503483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471501,-99) , 
12, 3.44756, 1, 0, 0.501631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434008,-99) , 
10, 0.429847, 1, 0, 0.471658,-99) , 
6, 0.806968, 1, 0, 0.500038,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0210567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.08303, 0, 1, 0.509182,-99) , 
NN(
0, 
0, 
-1, -0.770027, 1, -1, 0.490219,-99) , 
8, 2.49114, 0, 0, 0.502935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463328,-99) , 
12, -2.37309, 0, 0, 0.50127,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0118467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.09102, 0, 1, 0.502891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440477,-99) , 
5, 0.999751, 0, 0, 0.501068,-99) , 
NN(
0, 
0, 
-1, 0.711847, 0, -1, 0.469865,-99) , 
5, 0.999524, 0, 0, 0.499388,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0316604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485193,-99) , 
12, -1.93128, 0, 0, 0.515158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423205,-99) , 
12, -1.1, 0, 0, 0.494313,-99) , 
10, -0.139345, 1, 0, 0.501765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484916,-99) , 
12, 2.49123, 1, 0, 0.504429,-99) , 
NN(
0, 
0, 
-1, 1.3764, 0, -1, 0.484248,-99) , 
10, 0.142971, 0, 0, 0.493143,-99) , 
8, 3.35628, 0, 0, 0.497769,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0212169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499289,-99) , 
6, -0.91176, 1, 0, 0.503978,-99) , 
3, 5.21276, 0, 0, 0.512886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487244,-99) , 
10, 0.877648, 1, 0, 0.497565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400484,-99) , 
10, -0.173032, 1, 0, 0.473964,-99) , 
12, -1.19995, 0, 0, 0.49462,-99) , 
10, -0.714147, 1, 0, 0.498774,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0348114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492264,-99) , 
12, -2.31348, 0, 0, 0.537654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479813,-99) , 
0, 0.493328, 0, 0, 0.502727,-99) , 
8, 4.94252, 0, 0, 0.510965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490591,-99) , 
9, -951.286, 1, 0, 0.50016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452444,-99) , 
11, -3.20384, 0, 0, 0.474055,-99) , 
12, -0.688132, 0, 0, 0.494139,-99) , 
10, -0.428573, 1, 0, 0.499306,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0252956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477821,-99) , 
12, 1.46479, 1, 0, 0.523571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491005,-99) , 
9, -951.286, 1, 0, 0.499536,-99) , 
10, 1.57148, 0, 0, 0.502015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458181,-99) , 
5, 0.999048, 0, 0, 0.500687,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0477313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28643, 0, 1, 0.518738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304432,-99) , 
9, -1.85713, 0, 0, 0.502649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489576,-99) , 
11, 0.253318, 0, 0, 0.494702,-99) , 
NN(
0, 
0, 
-1, 3.33594, 0, -1, 0.453945,-99) , 
10, 1.57142, 1, 0, 0.49054,-99) , 
9, -951.286, 0, 0, 0.496495,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0188408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.522595,-99) , 
NN(
0, 
0, 
-1, -1.85949, 0, -1, 0.492848,-99) , 
10, -1.57141, 1, 0, 0.494725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457503,-99) , 
2, 0.215288, 1, 0, 0.493324,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0259054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.24293, 0, 1, 0.519146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475426,-99) , 
12, -2.5225, 0, 0, 0.512837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43232,-99) , 
12, -1.5915, 0, 0, 0.501137,-99) , 
NN(
0, 
0, 
-1, 0.233357, 1, -1, 0.488259,-99) , 
12, 0.674302, 1, 0, 0.496598,-99) , 
10, -0.714298, 1, 0, 0.500225,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.029164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494335,-99) , 
13, 5.04844, 0, 0, 0.505784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453101,-99) , 
11, -2.89077, 0, 0, 0.492605,-99) , 
10, 0.142861, 1, 0, 0.498933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47173,-99) , 
12, -2.23425, 0, 0, 0.497456,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0259916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.512829, 0, 1, 0.535867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478258,-99) , 
6, -0.77376, 1, 0, 0.505844,-99) , 
8, 2.26288, 0, 0, 0.511946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475815,-99) , 
12, -1.75453, 0, 0, 0.496827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449174,-99) , 
3, 2.56863, 0, 0, 0.494227,-99) , 
6, -0.524757, 1, 0, 0.500347,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0127368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46703, 0, 1, 0.53505,-99) , 
NN(
0, 
0, 
-1, 1.84337, 1, -1, 0.496992,-99) , 
11, 0.297416, 0, 0, 0.499368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437536,-99) , 
11, 2.43138, 0, 0, 0.477126,-99) , 
12, 3.09326, 1, 0, 0.497885,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0269261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48923,-99) , 
12, -1.62015, 0, 0, 0.519531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486188,-99) , 
9, -951.286, 1, 0, 0.497173,-99) , 
8, 4.95456, 0, 0, 0.502717,-99) , 
NN(
0, 
0, 
-1, -0.876817, 0, -1, 0.488282,-99) , 
10, 0.142968, 1, 0, 0.49561,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0159115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462169,-99) , 
12, -1.93177, 0, 0, 0.498015,-99) , 
10, -1.57093, 1, 0, 0.499878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461342,-99) , 
3, 1.1901, 0, 0, 0.493241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420284,-99) , 
11, 0.589369, 0, 0, 0.475483,-99) , 
8, 1.61749, 0, 0, 0.497264,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0265324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477115,-99) , 
10, -1.69369, 0, 0, 0.499863,-99) , 
11, -4.12885, 1, 0, 0.518744,-99) , 
NN(
0, 
0, 
-1, 0.436529, 1, -1, 0.488834,-99) , 
10, -1.28554, 1, 0, 0.491869,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0300825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43482,-99) , 
10, -1.21406, 1, 0, 0.49687,-99) , 
12, -1.90939, 0, 0, 0.520392,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467011,-99) , 
6, 0.522578, 1, 0, 0.516611,-99) , 
NN(
0, 
0, 
-1, -1.69372, 0, -1, 0.493532,-99) , 
10, 1.57148, 0, 0, 0.496261,-99) , 
11, -4.0524, 1, 0, 0.499112,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0240657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444815,-99) , 
10, -0.972512, 1, 0, 0.494702,-99) , 
12, -1.74131, 0, 0, 0.513399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494278,-99) , 
6, -0.569706, 1, 0, 0.499198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464249,-99) , 
6, 0.80723, 1, 0, 0.497646,-99) , 
11, -3.83621, 1, 0, 0.50012,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0220523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498837,-99) , 
12, 2.15992, 1, 0, 0.516603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4558,-99) , 
12, -2.11797, 0, 0, 0.501433,-99) , 
11, -1.20884, 0, 0, 0.505475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467264,-99) , 
10, -1.85713, 0, 0, 0.504191,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0306756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472329,-99) , 
6, 0.0929207, 1, 0, 0.500124,-99) , 
3, 4.91815, 0, 0, 0.508665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493909,-99) , 
10, 0.387991, 1, 0, 0.499472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424122,-99) , 
12, -1.12885, 0, 0, 0.474286,-99) , 
11, -3.40863, 0, 0, 0.495846,-99) , 
10, -0.428437, 1, 0, 0.499839,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.00595516);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12028, 0, 1, 0.502081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468374,-99) , 
5, 0.999048, 0, 0, 0.501058,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.037146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.71938, 0, 1, 0.552766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485909,-99) , 
3, 3.98088, 0, 0, 0.49499,-99) , 
7, 0.0089997, 0, 0, 0.50107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35719,-99) , 
7, 0.0236249, 1, 0, 0.497463,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0286705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493085,-99) , 
10, 0.428574, 0, 0, 0.500403,-99) , 
11, -3.83912, 1, 0, 0.502953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48974,-99) , 
5, 0.999524, 1, 0, 0.496555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410138,-99) , 
12, 0.485812, 1, 0, 0.487733,-99) , 
6, 0.237054, 1, 0, 0.497957,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0160459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.4979, 1, 1, 0.522419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464545,-99) , 
13, 1.59693, 0, 0, 0.50256,-99) , 
11, 0.963057, 0, 0, 0.504406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471284,-99) , 
13, 6.84177, 1, 0, 0.502785,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0190436);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496766,-99) , 
9, -951.286, 1, 0, 0.503822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460592,-99) , 
12, -2.09324, 0, 0, 0.501516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466973,-99) , 
10, -1.85714, 0, 0, 0.500362,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0172041);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531306,-99) , 
NN(
NN(
0, 
0, 
-1, 4.91803, 0, 1, 0.506822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420596,-99) , 
12, -1.00454, 0, 0, 0.496818,-99) , 
10, -0.0612652, 1, 0, 0.501336,-99) , 
10, 2.14284, 0, 0, 0.502569,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0181049);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52279,-99) , 
NN(
0, 
0, 
-1, -1.85169, 0, -1, 0.493377,-99) , 
11, -4.62867, 1, 0, 0.494755,-99) , 
11, 2.71126, 0, 0, 0.496922,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0455027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470054,-99) , 
5, 0.999991, 0, 0, 0.512565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469713,-99) , 
5, 0.999905, 0, 0, 0.510089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530131,-99) , 
NN(
0, 
0, 
-1, 0.462655, 1, -1, 0.489133,-99) , 
1, -0.0041168, 1, 0, 0.494112,-99) , 
6, -0.0492878, 1, 0, 0.502953,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0228246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.59973, 1, 1, 0.539962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463165,-99) , 
3, 4.30173, 0, 0, 0.493846,-99) , 
2, -0.139439, 0, 0, 0.516997,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496977,-99) , 
11, -1.41741, 0, 0, 0.500687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465374,-99) , 
0, 0.505709, 1, 0, 0.499565,-99) , 
2, -0.0714192, 1, 0, 0.502506,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0283309);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97941, 0, 1, 0.526411,-99) , 
NN(
NN(
0, 
0, 
-1, 1.62971, 0, 1, 0.504385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311778,-99) , 
9, -1.85712, 0, 0, 0.493236,-99) , 
9, -951.286, 1, 0, 0.498859,-99) , 
10, -1.57125, 1, 0, 0.50061,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0256689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476845,-99) , 
10, 0.224432, 1, 0, 0.500346,-99) , 
5, 0.999524, 1, 0, 0.50375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493905,-99) , 
0, 0.491424, 1, 0, 0.496573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439144,-99) , 
6, 0.712834, 1, 0, 0.493525,-99) , 
11, -2.70844, 1, 0, 0.498103,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0329427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456984,-99) , 
9, -0.714282, 0, 0, 0.522468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459674,-99) , 
4, 4.67335, 1, 0, 0.498305,-99) , 
9, -951.286, 0, 0, 0.510242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491128,-99) , 
3, 5.61021, 0, 0, 0.493853,-99) , 
10, 2.14286, 0, 0, 0.495267,-99) , 
0, 0.496186, 1, 0, 0.500064,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0133383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497202,-99) , 
4, 0.551934, 1, 0, 0.499644,-99) , 
4, 9.38661, 0, 0, 0.500761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469162,-99) , 
2, 0.214536, 1, 0, 0.499594,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0203437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463,-99) , 
12, -1.98432, 0, 0, 0.502361,-99) , 
10, -1.57076, 1, 0, 0.504046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476653,-99) , 
8, 1.27888, 0, 0, 0.501314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454724,-99) , 
6, -0.894394, 1, 0, 0.486216,-99) , 
8, 1.61005, 0, 0, 0.502155,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0218303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.411063, 1, 1, 0.509123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486417,-99) , 
4, 1.90564, 0, 0, 0.499126,-99) , 
8, 3.75278, 0, 0, 0.503654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480012,-99) , 
12, -2.26819, 0, 0, 0.502489,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0175209);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495991,-99) , 
10, 1.28564, 0, 0, 0.498919,-99) , 
NN(
0, 
0, 
-1, 0.441305, 1, -1, 0.468853,-99) , 
6, 0.702514, 1, 0, 0.496716,-99) , 
3, 6.26281, 0, 0, 0.498312,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0225697);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.715083, 1, 1, 0.526887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492745,-99) , 
6, -0.089194, 1, 0, 0.500117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453763,-99) , 
3, 1.52989, 0, 0, 0.49762,-99) , 
6, -0.90484, 1, 0, 0.500056,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0142885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455095,-99) , 
12, -1.56547, 0, 0, 0.497798,-99) , 
11, -4.34575, 1, 0, 0.499696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466362,-99) , 
13, 6.84177, 1, 0, 0.498073,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0290353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465003,-99) , 
10, 2.347, 1, 0, 0.503176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46885,-99) , 
9, -951.286, 0, 0, 0.486513,-99) , 
10, -0.428347, 0, 0, 0.500091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484186,-99) , 
8, 4.90217, 0, 0, 0.510143,-99) , 
NN(
0, 
0, 
-1, -1.71634, 0, -1, 0.459978,-99) , 
10, -0.851069, 1, 0, 0.48669,-99) , 
12, -1.31109, 0, 0, 0.497467,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.021674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453059,-99) , 
8, 1.46973, 0, 0, 0.496429,-99) , 
8, 4.5328, 0, 0, 0.509163,-99) , 
NN(
0, 
0, 
-1, -0.904848, 0, -1, 0.491746,-99) , 
10, -0.714155, 1, 0, 0.495675,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0174297);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497659,-99) , 
11, -0.511093, 0, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 1.32073, 1, -1, 0.466148,-99) , 
12, 2.11733, 1, 0, 0.497671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47594,-99) , 
11, 1.86561, 0, 0, 0.493684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412582,-99) , 
6, -0.877851, 1, 0, 0.473582,-99) , 
8, 1.62245, 0, 0, 0.495074,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0258076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.441305, 1, 1, 0.528893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477993,-99) , 
6, 0.0142893, 1, 0, 0.502905,-99) , 
3, 4.93287, 0, 0, 0.508353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468954,-99) , 
6, 0.750208, 1, 0, 0.50117,-99) , 
NN(
0, 
0, 
-1, -0.666911, 1, -1, 0.485155,-99) , 
8, 2.91907, 0, 0, 0.495032,-99) , 
0, 0.500947, 0, 0, 0.498531,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0221413);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.91943, 0, 1, 0.514944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474895,-99) , 
11, -3.3728, 0, 0, 0.499662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451559,-99) , 
5, 0.999524, 0, 0, 0.497041,-99) , 
10, -0.428446, 1, 0, 0.502598,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0149484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496284,-99) , 
11, 0.335946, 0, 0, 0.498207,-99) , 
NN(
0, 
0, 
-1, 1.93979, 0, -1, 0.478566,-99) , 
12, 2.84504, 1, 0, 0.496588,-99) , 
3, 6.26238, 0, 0, 0.497889,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0162795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471991,-99) , 
10, 1.85719, 1, 0, 0.502035,-99) , 
11, 0.6367, 0, 0, 0.503812,-99) , 
NN(
0, 
0, 
-1, 0.449513, 0, -1, 0.477464,-99) , 
12, 2.81353, 1, 0, 0.501701,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0482552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441298,-99) , 
10, -1.04475, 1, 0, 0.497994,-99) , 
12, -1.83828, 0, 0, 0.514805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32381,-99) , 
9, -1.85699, 0, 0, 0.501649,-99) , 
NN(
0, 
0, 
-1, -1.28571, 0, -1, 0.485898,-99) , 
9, -951.286, 0, 0, 0.493414,-99) , 
11, -3.9435, 1, 0, 0.496386,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0196993);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490753,-99) , 
12, 0.485337, 1, 0, 0.498583,-99) , 
NN(
0, 
0, 
-1, 0.117839, 1, -1, 0.488088,-99) , 
12, -0.871359, 0, 0, 0.495482,-99) , 
10, -1.85696, 1, 0, 0.496733,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0200601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.90776, 0, 1, 0.52381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498343,-99) , 
4, 3.97635, 0, 0, 0.501564,-99) , 
4, 0.757544, 1, 0, 0.50548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475969,-99) , 
10, 0.714486, 1, 0, 0.497529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454813,-99) , 
10, -0.999864, 0, 0, 0.491274,-99) , 
4, 4.73378, 1, 0, 0.502756,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0166614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491219,-99) , 
6, 0.844533, 1, 0, 0.503337,-99) , 
6, 0.749901, 1, 0, 0.514679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491629,-99) , 
9, -951.286, 1, 0, 0.49789,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.469065,-99) , 
6, 0.684539, 1, 0, 0.496248,-99) , 
8, 6.41073, 0, 0, 0.497855,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0288318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465442,-99) , 
12, -0.866212, 0, 0, 0.501066,-99) , 
10, -0.141223, 1, 0, 0.515847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461007,-99) , 
3, 1.16767, 0, 0, 0.505393,-99) , 
NN(
0, 
0, 
-1, 1.85681, 0, -1, 0.490617,-99) , 
6, -0.82001, 1, 0, 0.49334,-99) , 
3, 5.25751, 0, 0, 0.497402,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.014819);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547529,-99) , 
NN(
NN(
0, 
0, 
-1, -0.214257, 1, 1, 0.50166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476624,-99) , 
2, 0.0678118, 0, 0, 0.485475,-99) , 
0, 0.5019, 1, 0, 0.498564,-99) , 
10, 2.14285, 0, 0, 0.500622,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.020488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496989,-99) , 
2, -0.0710758, 1, 0, 0.500299,-99) , 
10, 1.35367, 0, 0, 0.501698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376825,-99) , 
12, 1.48114, 1, 0, 0.448963,-99) , 
9, -951.286, 0, 0, 0.479942,-99) , 
10, 1.5714, 1, 0, 0.499567,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0373593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.59669, 0, 1, 0.515479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432433,-99) , 
10, -1.39893, 1, 0, 0.478272,-99) , 
12, -2.05877, 0, 0, 0.50889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490329,-99) , 
10, 0.306151, 1, 0, 0.49611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374873,-99) , 
12, -1.13108, 0, 0, 0.473834,-99) , 
11, -3.34532, 0, 0, 0.493334,-99) , 
10, -0.142851, 1, 0, 0.499694,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0207717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472566,-99) , 
2, 0.0669351, 1, 0, 0.501937,-99) , 
3, 2.31285, 0, 0, 0.508127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497975,-99) , 
3, 6.30102, 0, 0, 0.500103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449782,-99) , 
8, 3.10926, 0, 0, 0.496523,-99) , 
6, -0.429075, 1, 0, 0.501094,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0195246);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.09845, 1, 1, 0.526637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464999,-99) , 
3, 1.55591, 0, 0, 0.504322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460917,-99) , 
6, -0.904824, 0, 0, 0.502835,-99) , 
11, 1.33504, 0, 0, 0.504602,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.021703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497075,-99) , 
11, -2.20719, 0, 0, 0.501335,-99) , 
NN(
0, 
0, 
-1, 0.0461219, 1, -1, 0.48475,-99) , 
12, 0.514112, 1, 0, 0.495333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466103,-99) , 
12, -2.21706, 0, 0, 0.49375,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0420096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.10858, 0, 1, 0.515631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368261,-99) , 
9, -1.57169, 0, 0, 0.496769,-99) , 
9, -951.286, 1, 0, 0.506576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454964,-99) , 
5, 0.999048, 0, 0, 0.50506,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0240551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480249,-99) , 
12, 1.58079, 1, 0, 0.534829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487059,-99) , 
3, 2.47186, 0, 0, 0.495878,-99) , 
10, 1.85717, 0, 0, 0.498297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468092,-99) , 
12, -0.995232, 0, 0, 0.490759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445878,-99) , 
10, 1.00099, 1, 0, 0.477665,-99) , 
6, 0.712778, 1, 0, 0.496233,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0368322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496937,-99) , 
12, -1.6259, 0, 0, 0.519205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43274,-99) , 
12, -0.783583, 0, 0, 0.492012,-99) , 
10, 0.143695, 1, 0, 0.504014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490388,-99) , 
8, 2.29715, 0, 0, 0.498264,-99) , 
NN(
0, 
0, 
-1, 2.74306, 0, -1, 0.475383,-99) , 
6, -0.497953, 1, 0, 0.489139,-99) , 
8, 4.23235, 0, 0, 0.495174,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0113989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.502932,-99) , 
NN(
0, 
0, 
-1, 0.999977, 1, -1, 0.475551,-99) , 
13, 6.48128, 1, 0, 0.501161,-99) , 
NN(
0, 
0, 
-1, 0.712859, 0, -1, 0.469134,-99) , 
5, 0.999524, 0, 0, 0.499501,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0290465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423735,-99) , 
10, -0.944996, 1, 0, 0.490257,-99) , 
12, -1.72994, 0, 0, 0.505831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489207,-99) , 
10, -0.14271, 1, 0, 0.493451,-99) , 
NN(
0, 
0, 
-1, 0.1383, 1, -1, 0.47939,-99) , 
0, 0.494281, 0, 0, 0.490872,-99) , 
11, -3.86539, 1, 0, 0.493165,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0206061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471045,-99) , 
8, 1.4987, 0, 0, 0.500159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445073,-99) , 
10, 0.157014, 1, 0, 0.474697,-99) , 
13, 6.34143, 1, 0, 0.497826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476878,-99) , 
0, 0.489947, 0, 0, 0.493731,-99) , 
NN(
0, 
0, 
-1, -0.242652, 1, -1, 0.455395,-99) , 
0, 0.491696, 1, 0, 0.477237,-99) , 
0, 0.493329, 0, 0, 0.495122,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0238227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.01785, 0, 1, 0.532364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434745,-99) , 
10, 1.57147, 1, 0, 0.498115,-99) , 
9, -951.286, 0, 0, 0.510825,-99) , 
NN(
0, 
0, 
-1, -2.56332, 0, -1, 0.492623,-99) , 
11, -1.14454, 0, 0, 0.497348,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.021579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.144338, 1, 1, 0.527524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495565,-99) , 
10, 1.28577, 0, 0, 0.499172,-99) , 
6, 0.712772, 0, 0, 0.502043,-99) , 
NN(
0, 
0, 
-1, -0.0718883, 0, -1, 0.481674,-99) , 
4, 4.54783, 1, 0, 0.497874,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0221417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.61554, 0, 1, 0.529131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49549,-99) , 
11, 2.12087, 0, 0, 0.497716,-99) , 
3, 5.5991, 0, 0, 0.501405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469734,-99) , 
2, 0.0798111, 1, 0, 0.489858,-99) , 
NN(
0, 
0, 
-1, 4.30414, 0, -1, 0.459173,-99) , 
2, -0.0696794, 0, 0, 0.480829,-99) , 
4, 4.71771, 1, 0, 0.497487,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0278519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.318903, 1, 1, 0.513385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456426,-99) , 
12, 0.903505, 1, 0, 0.509927,-99) , 
NN(
NN(
0, 
0, 
-1, 1.81895, 0, 1, 0.509431,-99) , 
NN(
0, 
0, 
-1, 1.74193, 0, -1, 0.48547,-99) , 
12, 1.4019, 0, 0, 0.495681,-99) , 
8, 3.28747, 0, 0, 0.503476,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0102164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499671,-99) , 
10, -0.700439, 1, 0, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462807,-99) , 
10, -1.57115, 0, 0, 0.500743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465741,-99) , 
12, -2.52064, 0, 0, 0.499635,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0152527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478045,-99) , 
8, 1.86396, 0, 0, 0.500017,-99) , 
11, 0.998191, 0, 0, 0.501789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468003,-99) , 
12, 3.39176, 1, 0, 0.499948,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0113864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529985,-99) , 
NN(
0, 
0, 
-1, 0.214255, 1, -1, 0.497071,-99) , 
11, -4.30461, 1, 0, 0.498821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449113,-99) , 
12, -2.56685, 0, 0, 0.497406,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0214703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.201477, 1, 1, 0.524874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477879,-99) , 
13, 4.42237, 0, 0, 0.495009,-99) , 
4, 4.54804, 1, 0, 0.513992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494647,-99) , 
11, -0.436835, 0, 0, 0.498104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466589,-99) , 
0, 0.504757, 1, 0, 0.49634,-99) , 
2, -0.0714192, 1, 0, 0.499367,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0179352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.05314, 1, 1, 0.533286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472913,-99) , 
12, 1.34232, 1, 0, 0.500265,-99) , 
11, 0.0620003, 0, 0, 0.502222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48209,-99) , 
8, 1.35436, 0, 0, 0.499402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435933,-99) , 
11, 0.894281, 0, 0, 0.480562,-99) , 
8, 1.5998, 0, 0, 0.500005,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0139346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.24991, 0, 1, 0.502347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471548,-99) , 
2, 0.0708544, 0, 0, 0.485093,-99) , 
0, 0.502852, 1, 0, 0.499951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464986,-99) , 
12, -2.53843, 0, 0, 0.498898,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0144584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497764,-99) , 
3, 4.85665, 0, 0, 0.500516,-99) , 
NN(
0, 
0, 
-1, 6.7834, 0, -1, 0.47879,-99) , 
13, 6.49796, 1, 0, 0.498745,-99) , 
NN(
0, 
0, 
-1, -0.928366, 1, -1, 0.470919,-99) , 
3, 1.36854, 0, 0, 0.496685,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0106237);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453815,-99) , 
12, -2.56251, 0, 0, 0.499495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455634,-99) , 
3, 1.4299, 0, 0, 0.49723,-99) , 
11, 2.18219, 0, 0, 0.49836,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0355263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69087, 0, 1, 0.568435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492458,-99) , 
1, 0.00531116, 0, 0, 0.496342,-99) , 
7, 0.0101402, 0, 0, 0.502178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360985,-99) , 
7, 0.0236633, 1, 0, 0.49861,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.015713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497517,-99) , 
5, 0.999048, 1, 0, 0.498807,-99) , 
10, 1.8571, 0, 0, 0.500817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468515,-99) , 
3, 1.22288, 0, 0, 0.494188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452035,-99) , 
6, -0.812049, 1, 0, 0.482256,-99) , 
12, 2.0872, 1, 0, 0.498422,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0209728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486325,-99) , 
3, 1.48997, 0, 0, 0.507263,-99) , 
11, 2.71126, 0, 0, 0.50816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477163,-99) , 
0, 0.489519, 0, 0, 0.507388,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0261411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60559, 1, 1, 0.507697,-99) , 
NN(
0, 
0, 
-1, 0.068083, 1, -1, 0.490134,-99) , 
10, -0.142742, 0, 0, 0.502892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471476,-99) , 
8, 4.17063, 0, 0, 0.501708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396019,-99) , 
10, -0.367498, 1, 0, 0.485768,-99) , 
12, -1.34315, 0, 0, 0.499628,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0296009);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452231,-99) , 
6, -0.941091, 0, 0, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444327,-99) , 
3, 1.17835, 0, 0, 0.500153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45612,-99) , 
12, -2.12203, 0, 0, 0.501781,-99) , 
NN(
0, 
0, 
-1, -0.800721, 0, -1, 0.472037,-99) , 
10, 0.146545, 1, 0, 0.484952,-99) , 
6, 0.237003, 1, 0, 0.495196,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0144664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498011,-99) , 
12, 3.34269, 1, 0, 0.517705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497401,-99) , 
10, 2.14288, 0, 0, 0.498736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429318,-99) , 
12, 2.18391, 1, 0, 0.496705,-99) , 
11, 0.65064, 0, 0, 0.498938,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0257831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472427,-99) , 
6, -0.728128, 1, 0, 0.501328,-99) , 
8, 2.29475, 0, 0, 0.508047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495955,-99) , 
6, -0.160078, 1, 0, 0.499908,-99) , 
NN(
0, 
0, 
-1, -1.70049, 0, -1, 0.474131,-99) , 
8, 3.2559, 0, 0, 0.495753,-99) , 
6, -0.524226, 1, 0, 0.500036,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.034157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.99648, 0, 1, 0.560134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492758,-99) , 
1, 0.0043454, 0, 0, 0.497159,-99) , 
7, 0.0101395, 0, 0, 0.502256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349736,-99) , 
7, 0.0236633, 1, 0, 0.498412,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0272561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.536734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491594,-99) , 
2, -0.00353618, 1, 0, 0.503275,-99) , 
2, 0.071273, 0, 0, 0.508697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45322,-99) , 
2, 0.102785, 1, 0, 0.499851,-99) , 
NN(
0, 
0, 
-1, 2.61449, 0, -1, 0.476169,-99) , 
6, -0.548358, 1, 0, 0.496107,-99) , 
3, 2.66216, 0, 0, 0.503816,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0154982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489491,-99) , 
12, -0.872119, 0, 0, 0.50013,-99) , 
11, -4.19918, 1, 0, 0.502437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467697,-99) , 
12, -2.52125, 0, 0, 0.501352,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0212401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.700701, 0, 1, 0.544412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465228,-99) , 
3, 1.98279, 0, 0, 0.50176,-99) , 
11, -0.537734, 0, 0, 0.504443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483865,-99) , 
11, 2.03437, 0, 0, 0.495224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451703,-99) , 
6, -0.814043, 1, 0, 0.486795,-99) , 
3, 1.70362, 0, 0, 0.501374,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0225262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.344548, 1, 1, 0.529913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45357,-99) , 
11, -2.53624, 0, 0, 0.482222,-99) , 
10, 0.715901, 1, 0, 0.512387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475255,-99) , 
0, 0.504757, 1, 0, 0.501357,-99) , 
NN(
0, 
0, 
-1, -1.55608, 0, -1, 0.485279,-99) , 
12, -0.955817, 0, 0, 0.497636,-99) , 
8, 5.52136, 0, 0, 0.500664,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0185431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491973,-99) , 
0, 0.500947, 0, 0, 0.495414,-99) , 
6, 0.807992, 0, 0, 0.496706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454523,-99) , 
4, 8.91541, 1, 0, 0.495213,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0132618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499068,-99) , 
11, -0.335817, 0, 0, 0.501791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452813,-99) , 
12, 3.17838, 1, 0, 0.500435,-99) , 
NN(
0, 
0, 
-1, 1.48415, 0, -1, 0.469629,-99) , 
6, -0.90511, 0, 0, 0.498114,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0170024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.138383, 1, 1, 0.517428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487927,-99) , 
6, 0.263989, 1, 0, 0.502352,-99) , 
3, 4.92637, 0, 0, 0.50578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47128,-99) , 
4, 9.39171, 1, 0, 0.504777,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0242934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00511213, 0, 1, 0.50681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436137,-99) , 
6, 0.141911, 1, 0, 0.491074,-99) , 
12, 0.251949, 1, 0, 0.50164,-99) , 
NN(
0, 
0, 
-1, 1.36285, 0, -1, 0.461149,-99) , 
12, 2.47498, 1, 0, 0.497499,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0236794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.833993, 0, 1, 0.528875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480572,-99) , 
10, -1.93849, 0, 0, 0.514898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480353,-99) , 
12, 1.11725, 1, 0, 0.495437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390484,-99) , 
10, -0.548837, 1, 0, 0.476933,-99) , 
12, -1.51323, 0, 0, 0.493337,-99) , 
10, -1.28544, 1, 0, 0.495548,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.042648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485049,-99) , 
11, -4.21379, 0, 0, 0.520341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422555,-99) , 
12, -1.38387, 0, 0, 0.494166,-99) , 
10, -0.423691, 1, 0, 0.500835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463182,-99) , 
5, 0.999995, 0, 0, 0.48934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44918,-99) , 
5, 0.999905, 0, 0, 0.486867,-99) , 
8, 4.18305, 0, 0, 0.492663,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0273104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.77495, 1, 1, 0.507211,-99) , 
NN(
0, 
0, 
-1, -1.09517, 0, -1, 0.475713,-99) , 
8, 1.59206, 0, 0, 0.502826,-99) , 
NN(
0, 
0, 
-1, -1.10561, 0, -1, 0.483535,-99) , 
10, -0.142735, 1, 0, 0.491428,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0282857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470893,-99) , 
12, 1.52118, 1, 0, 0.511329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489032,-99) , 
11, -4.43536, 1, 0, 0.49078,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.467832,-99) , 
10, 1.39454, 1, 0, 0.489193,-99) , 
10, 1.85713, 0, 0, 0.490644,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0169034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497689,-99) , 
11, 2.07299, 0, 0, 0.499443,-99) , 
5, 0.999524, 1, 0, 0.501308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473289,-99) , 
0, 0.501899, 1, 0, 0.502083,-99) , 
NN(
0, 
0, 
-1, 4.28599, 0, -1, 0.459356,-99) , 
2, -0.0713365, 0, 0, 0.489827,-99) , 
4, 4.73378, 1, 0, 0.499123,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.01463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473332,-99) , 
8, 6.82512, 1, 0, 0.502899,-99) , 
5, 0.999048, 1, 0, 0.504378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462182,-99) , 
4, 9.33163, 1, 0, 0.503125,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0144226);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.715213, 1, 1, 0.521176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478645,-99) , 
12, -1.75906, 0, 0, 0.498397,-99) , 
NN(
0, 
0, 
-1, 1.53268, 0, -1, 0.459989,-99) , 
3, 1.53989, 0, 0, 0.496203,-99) , 
6, -0.904844, 1, 0, 0.498252,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0139771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476406,-99) , 
4, 5.70636, 1, 0, 0.499382,-99) , 
4, 9.13835, 0, 0, 0.500725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434241,-99) , 
11, -3.17646, 1, 0, 0.46868,-99) , 
5, 0.999524, 0, 0, 0.499055,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0244475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488879,-99) , 
5, 0.999955, 1, 0, 0.491839,-99) , 
10, 2.14284, 0, 0, 0.493384,-99) , 
NN(
0, 
0, 
-1, 5.90317, 0, -1, 0.461095,-99) , 
5, 0.999524, 0, 0, 0.4917,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0102202);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.521835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475358,-99) , 
10, 1.91157, 1, 0, 0.498882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45498,-99) , 
12, -2.05193, 0, 0, 0.496833,-99) , 
10, -1.57123, 1, 0, 0.498382,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0248506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498445,-99) , 
10, 0.424308, 0, 0, 0.520717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491328,-99) , 
11, -0.138432, 0, 0, 0.493444,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.459737,-99) , 
12, 2.22314, 1, 0, 0.491581,-99) , 
11, 1.42777, 0, 0, 0.493611,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0172507);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499968,-99) , 
4, 2.64068, 1, 0, 0.524879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474719,-99) , 
6, 0.422881, 1, 0, 0.514496,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28547, 0, -1, 0.497573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423015,-99) , 
10, -0.596509, 1, 0, 0.484591,-99) , 
12, -1.42635, 0, 0, 0.495289,-99) , 
0, 0.493329, 1, 0, 0.497941,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.02202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.757271, 0, 1, 0.505751,-99) , 
NN(
0, 
0, 
-1, -0.916498, 1, -1, 0.481462,-99) , 
12, 3.14026, 1, 0, 0.503906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475179,-99) , 
3, 3.9704, 0, 0, 0.506092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445652,-99) , 
10, -0.844156, 1, 0, 0.485172,-99) , 
12, -1.5449, 0, 0, 0.501148,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0146993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.954546, 0, 1, 0.502657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464238,-99) , 
6, -0.809646, 0, 0, 0.500414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454125,-99) , 
13, 1.27518, 0, 0, 0.495623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443664,-99) , 
13, 1.9793, 1, 0, 0.485767,-99) , 
12, 1.74667, 1, 0, 0.498025,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0195807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493574,-99) , 
10, 1.85718, 0, 0, 0.495419,-99) , 
11, -4.21395, 1, 0, 0.497332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448523,-99) , 
12, -2.52271, 0, 0, 0.495832,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0171066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.913168, 1, 1, 0.545949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495896,-99) , 
9, -951.286, 1, 0, 0.525017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497533,-99) , 
2, 0.0708456, 0, 0, 0.500501,-99) , 
NN(
0, 
0, 
-1, -0.635716, 0, -1, 0.476186,-99) , 
8, 1.86133, 0, 0, 0.498137,-99) , 
11, 0.878353, 0, 0, 0.500635,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0148862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492512, 1, 1, 0.50301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476418,-99) , 
0, 0.500675, 0, 0, 0.487409,-99) , 
2, 0.0714933, 1, 0, 0.50072,-99) , 
NN(
0, 
0, 
-1, -0.149313, 1, -1, 0.467572,-99) , 
0, 0.504757, 1, 0, 0.498682,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0209196);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497385,-99) , 
11, -0.913713, 0, 0, 0.500015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460716,-99) , 
9, -951.286, 0, 0, 0.481398,-99) , 
3, 1.8278, 0, 0, 0.496911,-99) , 
11, 2.09564, 0, 0, 0.498404,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0263348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.716725, 0, 1, 0.560247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495418,-99) , 
1, -0.00563329, 1, 0, 0.498281,-99) , 
1, 0.00788699, 0, 0, 0.502691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368081,-99) , 
7, 0.0236623, 1, 0, 0.499299,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0227321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479059,-99) , 
3, 1.89909, 0, 0, 0.502028,-99) , 
11, -0.288752, 0, 0, 0.503899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468186,-99) , 
6, -0.878426, 1, 0, 0.507141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436982,-99) , 
8, 1.74152, 1, 0, 0.487955,-99) , 
12, 2.09511, 1, 0, 0.501799,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0165335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495064,-99) , 
0, 0.492377, 1, 0, 0.497268,-99) , 
5, 0.999524, 1, 0, 0.49881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46171,-99) , 
4, 9.25993, 1, 0, 0.49764,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0106907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42635, 1, 1, 0.519023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49549,-99) , 
2, -0.0701796, 1, 0, 0.501787,-99) , 
11, -1.74784, 0, 0, 0.5082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477367,-99) , 
10, -1.28549, 0, 0, 0.498525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469217,-99) , 
12, -2.37309, 0, 0, 0.497298,-99) , 
0, 0.500947, 0, 0, 0.500159,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0154039);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.06192, 0, 1, 0.504001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481945,-99) , 
8, 6.95326, 0, 0, 0.502601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434652,-99) , 
8, 6.26104, 0, 0, 0.485791,-99) , 
13, 6.03664, 1, 0, 0.501735,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0134345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499311,-99) , 
11, -0.68051, 0, 0, 0.502655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471156,-99) , 
10, -1.85697, 0, 0, 0.501618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467211,-99) , 
0, 0.5019, 1, 0, 0.49421,-99) , 
NN(
0, 
0, 
-1, 0.714833, 1, -1, 0.463469,-99) , 
12, 0.899227, 1, 0, 0.486318,-99) , 
4, 4.61524, 1, 0, 0.498575,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.029029);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499075,-99) , 
10, 0.241353, 1, 0, 0.514311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452728,-99) , 
12, 0.50204, 1, 0, 0.507834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478792,-99) , 
5, 0.999991, 0, 0, 0.496823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461793,-99) , 
5, 0.999905, 0, 0, 0.494504,-99) , 
3, 4.291, 0, 0, 0.499085,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0156337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142768, 0, 1, 0.516197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496573,-99) , 
10, -1.28548, 1, 0, 0.498806,-99) , 
2, 0.0509753, 0, 0, 0.501648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465256,-99) , 
2, 0.21418, 1, 0, 0.500336,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0173802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486436,-99) , 
4, 4.52944, 1, 0, 0.515033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471517,-99) , 
12, 2.51767, 1, 0, 0.498485,-99) , 
2, -0.0716846, 1, 0, 0.501298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457277,-99) , 
12, -2.52271, 0, 0, 0.499933,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0262906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.2254, 0, 1, 0.548646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464965,-99) , 
6, -0.429075, 1, 0, 0.499386,-99) , 
12, 0.854039, 1, 0, 0.509604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490187,-99) , 
3, 3.88908, 0, 0, 0.49985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454756,-99) , 
12, 0.423753, 1, 0, 0.496766,-99) , 
11, -1.76919, 0, 0, 0.501295,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0203602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488927,-99) , 
10, 0.143356, 0, 0, 0.507057,-99) , 
12, 1.53418, 1, 0, 0.515279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496593,-99) , 
10, 1.56125, 0, 0, 0.499435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460594,-99) , 
12, 1.28978, 1, 0, 0.497988,-99) , 
11, -0.739558, 0, 0, 0.501701,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0116549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527537,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.497838,-99) , 
5, 0.999048, 1, 0, 0.498774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446189,-99) , 
9, -951.286, 0, 0, 0.476653,-99) , 
10, 1.57145, 1, 0, 0.496633,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0288163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456957,-99) , 
3, 1.36903, 0, 0, 0.530075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45641,-99) , 
10, 1.85712, 1, 0, 0.498448,-99) , 
7, 0.00676617, 0, 0, 0.504221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358278,-99) , 
7, 0.0236981, 1, 0, 0.500507,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0246045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486064,-99) , 
8, 2.64704, 0, 0, 0.522238,-99) , 
NN(
0, 
0, 
-1, -2.18704, 0, -1, 0.496215,-99) , 
6, -0.337363, 1, 0, 0.500628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492471,-99) , 
12, 3.42575, 1, 0, 0.509068,-99) , 
NN(
0, 
0, 
-1, -0.885388, 0, -1, 0.478146,-99) , 
11, 1.08438, 0, 0, 0.486143,-99) , 
8, 2.46923, 0, 0, 0.49607,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0295541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.237116, 1, 1, 0.509084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456972,-99) , 
11, -4.78641, 1, 0, 0.486397,-99) , 
12, -1.80899, 0, 0, 0.505368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491303,-99) , 
3, 1.82656, 0, 0, 0.498225,-99) , 
NN(
0, 
0, 
-1, 2.25278, 0, -1, 0.478197,-99) , 
6, -0.671534, 1, 0, 0.491538,-99) , 
3, 2.66931, 0, 0, 0.499961,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0240027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85737, 1, 1, 0.506446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469461,-99) , 
9, -951.286, 0, 0, 0.48472,-99) , 
12, 1.32096, 1, 0, 0.501781,-99) , 
NN(
0, 
0, 
-1, 0.494282, 0, -1, 0.478897,-99) , 
4, 4.7423, 1, 0, 0.497411,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0162006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492259,-99) , 
6, 0.577465, 1, 0, 0.5223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496496,-99) , 
4, 9.12912, 0, 0, 0.498152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463637,-99) , 
5, 0.999524, 0, 0, 0.496473,-99) , 
11, -4.34132, 1, 0, 0.498433,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0238521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.53085, 1, 1, 0.527298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446095,-99) , 
12, -2.00468, 0, 0, 0.500773,-99) , 
10, -1.43926, 1, 0, 0.503341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493272,-99) , 
13, 2.94211, 0, 0, 0.497999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411637,-99) , 
13, 4.30281, 1, 0, 0.490335,-99) , 
12, 0.71673, 1, 0, 0.499393,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0303717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.23591, 1, 1, 0.543678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478437,-99) , 
10, -0.714336, 0, 0, 0.504069,-99) , 
8, 2.92563, 0, 0, 0.510312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469159,-99) , 
12, -2.55899, 0, 0, 0.512264,-99) , 
NN(
0, 
0, 
-1, -1.29669, 0, -1, 0.488958,-99) , 
10, -0.444864, 1, 0, 0.496865,-99) , 
11, -1.6711, 0, 0, 0.501288,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0141386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497413,-99) , 
10, 2.14288, 0, 0, 0.498809,-99) , 
4, 9.13835, 0, 0, 0.500762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465346,-99) , 
5, 0.999524, 0, 0, 0.498952,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0125996);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492112,-99) , 
12, -1.91694, 0, 0, 0.511974,-99) , 
NN(
0, 
0, 
-1, 5.90414, 1, -1, 0.497178,-99) , 
11, -4.03342, 1, 0, 0.498998,-99) , 
0, 0.505709, 0, 0, 0.500371,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0166237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496949,-99) , 
12, 1.5859, 1, 0, 0.537518,-99) , 
NN(
0, 
0, 
-1, -1.38079, 1, 1, 0.502354,-99) , 
10, 1.85718, 0, 0, 0.50453,-99) , 
NN(
NN(
0, 
0, 
-1, 6.62471, 0, 1, 0.521375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438226,-99) , 
10, 0.430368, 1, 0, 0.482225,-99) , 
6, 0.712772, 1, 0, 0.502283,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0121914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498115,-99) , 
2, -0.209918, 1, 0, 0.499661,-99) , 
5, 0.999048, 1, 0, 0.501708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465808,-99) , 
4, 9.35281, 1, 0, 0.500638,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0283256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.914901, 0, 1, 0.510042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369373,-99) , 
9, -1.8572, 0, 0, 0.497819,-99) , 
9, -951.286, 1, 0, 0.504078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468408,-99) , 
10, 2.14288, 1, 0, 0.502794,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0171714);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04761, 0, 1, 0.530399,-99) , 
NN(
NN(
0, 
0, 
-1, 2.12925, 0, 1, 0.502923,-99) , 
NN(
0, 
0, 
-1, 0.177472, 1, -1, 0.482367,-99) , 
12, -0.86562, 0, 0, 0.497105,-99) , 
10, -1.57141, 1, 0, 0.499245,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0236729);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498751,-99) , 
11, -3.23292, 1, 0, 0.504827,-99) , 
NN(
0, 
0, 
-1, 0.168803, 1, -1, 0.489127,-99) , 
12, -0.840471, 0, 0, 0.49832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469015,-99) , 
8, 1.47032, 0, 0, 0.493464,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.453416,-99) , 
6, -0.744946, 1, 0, 0.484808,-99) , 
3, 2.02931, 0, 0, 0.494857,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0227751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484764,-99) , 
6, 0.773525, 1, 0, 0.525736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494605,-99) , 
11, -1.44004, 0, 0, 0.503172,-99) , 
3, 4.92034, 0, 0, 0.508311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486576,-99) , 
12, 0.819345, 1, 0, 0.498331,-99) , 
NN(
0, 
0, 
-1, 4.64917, 1, -1, 0.475489,-99) , 
2, 0.0712424, 1, 0, 0.49505,-99) , 
0, 0.499042, 0, 0, 0.50066,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0179506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491547,-99) , 
12, -1.32146, 0, 0, 0.515298,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495442,-99) , 
11, -3.63581, 1, 0, 0.498397,-99) , 
NN(
0, 
0, 
-1, -2.57985, 0, -1, 0.476215,-99) , 
12, -2.12682, 0, 0, 0.496961,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0136142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499776,-99) , 
3, 2.0116, 0, 0, 0.515607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483528,-99) , 
12, 2.1251, 1, 0, 0.498256,-99) , 
10, -1.28555, 1, 0, 0.500018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46945,-99) , 
4, 2.55581, 1, 0, 0.495719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450851,-99) , 
3, 3.62221, 1, 0, 0.479041,-99) , 
0, 0.503804, 1, 0, 0.498001,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0201767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.80074, 0, 1, 0.506072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457697,-99) , 
12, 1.04478, 1, 0, 0.503451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490228,-99) , 
3, 2.21129, 0, 0, 0.49376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464348,-99) , 
6, -0.507294, 1, 0, 0.490469,-99) , 
3, 2.67716, 0, 0, 0.498418,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0195286);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494287,-99) , 
10, -0.00663092, 1, 0, 0.50033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430696,-99) , 
12, -2.38109, 0, 0, 0.498443,-99) , 
10, -1.85713, 1, 0, 0.499918,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0225654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497986,-99) , 
10, -0.430214, 1, 0, 0.524071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495147,-99) , 
11, -1.94096, 0, 0, 0.499668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465973,-99) , 
11, -0.195453, 0, 0, 0.482662,-99) , 
8, 2.19372, 0, 0, 0.496403,-99) , 
3, 1.38246, 1, 0, 0.498685,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0167309);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.529668,-99) , 
NN(
NN(
0, 
0, 
-1, -1.53056, 0, 1, 0.503207,-99) , 
NN(
0, 
0, 
-1, 0.735979, 0, -1, 0.476703,-99) , 
3, 1.85693, 0, 0, 0.499887,-99) , 
11, 0.5783, 0, 0, 0.503172,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0237659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49562,-99) , 
9, -951.286, 0, 0, 0.515042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492278,-99) , 
0, 0.501265, 0, 0, 0.501006,-99) , 
10, -0.714278, 1, 0, 0.504151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487445,-99) , 
10, -1.14956, 1, 0, 0.490018,-99) , 
10, 1.85701, 0, 0, 0.491831,-99) , 
0, 0.49809, 0, 0, 0.498172,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0176116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.936565, 0, 1, 0.530025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482664,-99) , 
2, -0.00515989, 1, 0, 0.49403,-99) , 
4, 1.66484, 0, 0, 0.515166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496861,-99) , 
1, 0.00373063, 0, 0, 0.499786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471018,-99) , 
3, 1.73963, 0, 0, 0.498452,-99) , 
6, -0.809687, 1, 0, 0.501099,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0287722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483117,-99) , 
3, 4.60522, 1, 0, 0.525426,-99) , 
NN(
0, 
0, 
-1, 0.999969, 0, 1, 0.507233,-99) , 
2, -0.0712075, 1, 0, 0.510332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460397,-99) , 
12, -2.19114, 0, 0, 0.494258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444846,-99) , 
10, -0.292917, 1, 0, 0.485965,-99) , 
12, -1.21725, 0, 0, 0.50505,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0180083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493587,-99) , 
11, -0.578354, 0, 0, 0.496269,-99) , 
4, 9.29904, 0, 0, 0.497434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45931,-99) , 
6, 0.807993, 1, 0, 0.495468,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0192879);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462899,-99) , 
12, -2.2868, 0, 0, 0.512263,-99) , 
NN(
0, 
0, 
-1, 0.108856, 1, -1, 0.496848,-99) , 
3, 4.61383, 0, 0, 0.501391,-99) , 
0, 0.504757, 0, 0, 0.503498,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.00728891);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473816,-99) , 
3, 1.2488, 0, 0, 0.499138,-99) , 
10, 2.14288, 0, 0, 0.500322,-99) , 
3, 6.23602, 0, 0, 0.501489,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.00906028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49912,-99) , 
5, 0.999049, 1, 0, 0.500486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466693,-99) , 
10, 2.14289, 1, 0, 0.499314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454282,-99) , 
4, 9.25993, 1, 0, 0.497981,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.016326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.68227, 0, 1, 0.505592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44675,-99) , 
10, -0.203824, 1, 0, 0.490911,-99) , 
12, -1.05179, 0, 0, 0.501846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451258,-99) , 
5, 0.999048, 0, 0, 0.500375,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0256295);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492407,-99) , 
12, -1.22685, 0, 0, 0.506636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458295,-99) , 
5, 0.999751, 0, 0, 0.505191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445869,-99) , 
5, 0.999524, 0, 0, 0.502265,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0179379);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529124,-99) , 
NN(
NN(
0, 
0, 
-1, -3.74704, 1, 1, 0.514657,-99) , 
NN(
0, 
0, 
-1, -1.50033, 0, -1, 0.492698,-99) , 
10, -1.2857, 1, 0, 0.494965,-99) , 
3, 6.26345, 0, 0, 0.496435,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0197917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42203, 1, 1, 0.526461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478771,-99) , 
4, 4.15602, 1, 0, 0.515384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46948,-99) , 
5, 0.999524, 0, 0, 0.501457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423199,-99) , 
10, -0.497388, 1, 0, 0.47646,-99) , 
12, -1.4399, 0, 0, 0.498918,-99) , 
10, -0.99982, 1, 0, 0.501502,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.022805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465789,-99) , 
3, 1.67489, 0, 0, 0.5005,-99) , 
9, -951.286, 0, 0, 0.51436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477658,-99) , 
13, 4.66612, 1, 0, 0.520736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495654,-99) , 
2, 0.213184, 0, 0, 0.497225,-99) , 
10, 1.85719, 0, 0, 0.499059,-99) , 
10, -0.99982, 1, 0, 0.501431,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0186825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470535,-99) , 
12, 1.43652, 1, 0, 0.501117,-99) , 
11, 0.0368247, 0, 0, 0.502645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465397,-99) , 
8, 1.68702, 0, 0, 0.475219,-99) , 
10, 0.711717, 0, 0, 0.48462,-99) , 
3, 1.70129, 0, 0, 0.499594,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0254069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497334,-99) , 
10, -0.106919, 1, 0, 0.507329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488448,-99) , 
11, 2.75956, 0, 0, 0.491206,-99) , 
3, 3.3193, 0, 0, 0.498955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472068,-99) , 
12, -2.23979, 0, 0, 0.497541,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.016022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495869,-99) , 
10, 0.999932, 0, 0, 0.499457,-99) , 
5, 0.999048, 1, 0, 0.500774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464619,-99) , 
4, 9.06192, 1, 0, 0.499575,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0259946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496989,-99) , 
2, -0.0710758, 1, 0, 0.502397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471004,-99) , 
13, 3.762, 1, 0, 0.486889,-99) , 
10, 1.28578, 1, 0, 0.499695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492713,-99) , 
8, 4.62531, 0, 0, 0.511117,-99) , 
NN(
0, 
0, 
-1, 0.498094, 0, -1, 0.439128,-99) , 
10, -0.862959, 1, 0, 0.485323,-99) , 
12, -1.55321, 0, 0, 0.497592,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0321751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487612,-99) , 
10, -1.09511, 0, 0, 0.51018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483291,-99) , 
9, -951.286, 0, 0, 0.495927,-99) , 
10, 1.00007, 1, 0, 0.50655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481757,-99) , 
8, 4.57421, 0, 0, 0.508224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438077,-99) , 
10, -0.675683, 1, 0, 0.49039,-99) , 
12, -1.51059, 0, 0, 0.504026,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0233216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489644,-99) , 
9, -951.286, 0, 0, 0.515823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489984,-99) , 
9, -951.286, 1, 0, 0.496538,-99) , 
11, -0.767075, 0, 0, 0.499841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473211,-99) , 
12, 3.48998, 1, 0, 0.498463,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.00962496);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14285, 0, 1, 0.502483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456977,-99) , 
9, -951.286, 0, 0, 0.483583,-99) , 
0, 0.492376, 0, 0, 0.500667,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0149378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486403,-99) , 
8, 2.23825, 0, 0, 0.498857,-99) , 
11, 2.77752, 0, 0, 0.500081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459151,-99) , 
4, 9.37272, 1, 0, 0.498884,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.014239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488554,-99) , 
12, 1.51789, 1, 0, 0.524668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466264,-99) , 
12, -1.54844, 0, 0, 0.497331,-99) , 
11, -4.45095, 1, 0, 0.499043,-99) , 
10, 1.85713, 0, 0, 0.500726,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0198164);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493571,-99) , 
3, 3.65432, 0, 0, 0.499943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455474,-99) , 
12, -2.09617, 0, 0, 0.497626,-99) , 
10, -1.85696, 1, 0, 0.498746,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0140766);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.0143116, 1, -1, 0.492962,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0180506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491452,-99) , 
9, -951.286, 1, 0, 0.51799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496803,-99) , 
8, 6.47542, 0, 0, 0.499205,-99) , 
11, 0.0511365, 0, 0, 0.501799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441802,-99) , 
12, 1.55286, 1, 0, 0.476499,-99) , 
10, 1.8572, 1, 0, 0.500237,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0144711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.59794, 0, 1, 0.512842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497291,-99) , 
10, -1.28571, 1, 0, 0.499392,-99) , 
4, 0.982613, 1, 0, 0.502255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454316,-99) , 
4, 9.33163, 1, 0, 0.500871,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0235219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0630807, 0, 1, 0.512661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472431,-99) , 
2, -0.0742453, 0, 0, 0.494883,-99) , 
4, 3.67321, 1, 0, 0.507744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464984,-99) , 
12, -2.27816, 0, 0, 0.498935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441977,-99) , 
12, 0.516581, 1, 0, 0.493209,-99) , 
6, 0.237048, 1, 0, 0.502988,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0233184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44018, 1, 1, 0.515096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440629,-99) , 
6, -0.93578, 1, 0, 0.486396,-99) , 
8, 1.46773, 0, 0, 0.508533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496634,-99) , 
10, 1.78046, 0, 0, 0.498981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454164,-99) , 
12, 1.17645, 1, 0, 0.496179,-99) , 
6, -0.619366, 1, 0, 0.499819,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0146052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.623306, 1, 1, 0.533181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48424,-99) , 
0, 0.500947, 1, 0, 0.520798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48223,-99) , 
12, 2.41318, 1, 0, 0.498161,-99) , 
NN(
0, 
0, 
-1, -0.171002, 1, -1, 0.476633,-99) , 
6, 0.71087, 1, 0, 0.49587,-99) , 
10, -1.28571, 1, 0, 0.498412,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0267442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0724816, 1, 1, 0.511552,-99) , 
NN(
0, 
0, 
-1, 0.49229, 1, -1, 0.492831,-99) , 
6, 0.352418, 1, 0, 0.504134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486567,-99) , 
13, 1.85258, 1, 0, 0.512271,-99) , 
NN(
0, 
0, 
-1, -0.751832, 1, -1, 0.479759,-99) , 
10, 0.714248, 0, 0, 0.487622,-99) , 
13, 2.40471, 0, 0, 0.499144,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0201785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499039,-99) , 
6, -0.650671, 1, 0, 0.50619,-99) , 
3, 5.19703, 0, 0, 0.509941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494586,-99) , 
3, 4.40394, 0, 0, 0.499724,-99) , 
NN(
0, 
0, 
-1, 0.198956, 1, -1, 0.483735,-99) , 
3, 5.26726, 1, 0, 0.496792,-99) , 
10, -0.714107, 1, 0, 0.499765,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0113906);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.40755, 0, 1, 0.51994,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14288, 0, 1, 0.502684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476281,-99) , 
13, 5.91534, 1, 0, 0.501278,-99) , 
3, 5.6141, 0, 0, 0.503465,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0128774);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97943, 0, 1, 0.521403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49825,-99) , 
11, -3.76211, 1, 0, 0.501252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473752,-99) , 
12, -2.02388, 0, 0, 0.499906,-99) , 
10, -1.57125, 1, 0, 0.501254,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0207654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49406,-99) , 
5, 0.999992, 0, 0, 0.502868,-99) , 
NN(
0, 
0, 
-1, 0.143774, 1, -1, 0.472015,-99) , 
5, 0.999841, 0, 0, 0.501063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472257,-99) , 
5, 0.999524, 0, 0, 0.499604,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0270637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.527645,-99) , 
NN(
0, 
0, 
-1, 0.0398134, 1, -1, 0.490781,-99) , 
4, 4.58822, 1, 0, 0.514523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495525,-99) , 
10, 0.14448, 1, 0, 0.51232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490446,-99) , 
4, 2.71264, 0, 0, 0.497771,-99) , 
3, 4.60332, 0, 0, 0.501975,-99) , 
2, 0.0713805, 0, 0, 0.503913,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0198658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.23877, 0, 1, 0.510654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485721,-99) , 
12, -2.23425, 0, 0, 0.509312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483461,-99) , 
13, 4.01221, 1, 0, 0.494861,-99) , 
8, 6.39799, 0, 0, 0.497203,-99) , 
0, 0.499995, 1, 0, 0.505298,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0166597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496472,-99) , 
10, 2.14288, 0, 0, 0.497987,-99) , 
2, -0.213355, 1, 0, 0.499832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452788,-99) , 
10, 0.430096, 1, 0, 0.48018,-99) , 
6, 0.711825, 1, 0, 0.497878,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0194844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46393,-99) , 
8, 1.41201, 0, 0, 0.512307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483891,-99) , 
6, -0.945622, 0, 0, 0.50814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464676,-99) , 
8, 2.60263, 0, 0, 0.498405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458861,-99) , 
6, 0.844243, 1, 0, 0.496406,-99) , 
6, -0.619368, 1, 0, 0.499839,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0169678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49362,-99) , 
10, 0.430077, 1, 0, 0.518034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516333,-99) , 
NN(
0, 
0, 
-1, -0.905712, 0, -1, 0.493295,-99) , 
11, 2.10231, 0, 0, 0.494508,-99) , 
3, 5.93619, 0, 0, 0.496258,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0387754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317727,-99) , 
9, -1.00172, 0, 0, 0.530404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482,-99) , 
8, 6.37674, 0, 0, 0.499691,-99) , 
9, -951.286, 0, 0, 0.51909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499548,-99) , 
3, 3.11096, 0, 0, 0.504151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480526,-99) , 
6, 0.530093, 1, 0, 0.502848,-99) , 
3, 5.28423, 0, 0, 0.50564,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0159774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.13835, 0, 1, 0.506061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470637,-99) , 
5, 0.999683, 0, 0, 0.504675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458444,-99) , 
5, 0.999048, 0, 0, 0.503317,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0229698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474005,-99) , 
2, -0.068022, 0, 0, 0.507718,-99) , 
8, 2.29387, 0, 0, 0.513192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497375,-99) , 
11, -1.83712, 0, 0, 0.500704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472673,-99) , 
12, 1.06882, 1, 0, 0.498937,-99) , 
6, -0.524211, 1, 0, 0.503832,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0169686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.17054, 0, 1, 0.527147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479477,-99) , 
3, 6.27582, 0, 0, 0.495434,-99) , 
6, 0.754146, 1, 0, 0.514789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488167,-99) , 
3, 1.86764, 0, 0, 0.497052,-99) , 
10, 2.14287, 0, 0, 0.498147,-99) , 
8, 5.53971, 0, 0, 0.501518,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0182604);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.49392, 1, 1, 0.519475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49617,-99) , 
6, -0.584922, 1, 0, 0.499608,-99) , 
NN(
0, 
0, 
-1, 1.61491, 0, -1, 0.47972,-99) , 
3, 1.82763, 0, 0, 0.49718,-99) , 
11, 0.718706, 0, 0, 0.499401,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0166075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498208,-99) , 
6, -0.0518881, 1, 0, 0.519876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483432,-99) , 
0, 0.502988, 1, 0, 0.501304,-99) , 
NN(
0, 
0, 
-1, -0.139749, 0, -1, 0.483426,-99) , 
2, -0.071745, 0, 0, 0.498512,-99) , 
0, 0.491424, 1, 0, 0.500009,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0192389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.518616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473525,-99) , 
11, -2.25394, 1, 0, 0.511567,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0749406, 0, 1, 0.503,-99) , 
NN(
0, 
0, 
-1, -2.9004, 1, -1, 0.470654,-99) , 
6, 0.243063, 1, 0, 0.498374,-99) , 
8, 5.44075, 0, 0, 0.50125,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.022307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476941,-99) , 
12, 4.09965, 1, 0, 0.504385,-99) , 
12, 1.08772, 1, 0, 0.509114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493824,-99) , 
2, -0.210223, 1, 0, 0.496381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450971,-99) , 
4, 9.38081, 1, 0, 0.49482,-99) , 
11, -1.04645, 0, 0, 0.498337,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0116712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485757,-99) , 
6, 0.871433, 1, 0, 0.524405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498593,-99) , 
4, 8.16146, 0, 0, 0.500404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473734,-99) , 
5, 0.999524, 0, 0, 0.499429,-99) , 
6, 0.807991, 0, 0, 0.500837,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0181881);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85707, 0, 1, 0.505249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486227,-99) , 
12, 3.12006, 1, 0, 0.504941,-99) , 
NN(
0, 
0, 
-1, 1.18094, 1, -1, 0.462976,-99) , 
11, 0.750766, 0, 0, 0.48772,-99) , 
12, 1.74667, 1, 0, 0.502421,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.030951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479862,-99) , 
8, 1.48273, 0, 0, 0.500319,-99) , 
8, 2.67718, 0, 0, 0.506046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483229,-99) , 
3, 4.35605, 0, 0, 0.499294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422308,-99) , 
12, 1.17231, 1, 0, 0.496122,-99) , 
6, -0.429707, 1, 0, 0.500003,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0186815);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49534,-99) , 
11, -3.60598, 1, 0, 0.498906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455183,-99) , 
12, -2.13247, 0, 0, 0.496742,-99) , 
10, -1.85713, 1, 0, 0.497887,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0205293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.716841, 0, 1, 0.52076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45294,-99) , 
12, 0.911523, 1, 0, 0.498322,-99) , 
6, -0.293166, 1, 0, 0.502411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490055,-99) , 
4, 1.48636, 0, 0, 0.498747,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.476278,-99) , 
4, 2.52334, 1, 0, 0.48917,-99) , 
3, 2.35039, 0, 0, 0.498099,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0412926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471727,-99) , 
12, 1.08625, 1, 0, 0.500634,-99) , 
11, 1.83707, 0, 0, 0.504888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495914,-99) , 
10, 1.28665, 0, 0, 0.504806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336139,-99) , 
9, -1.85725, 0, 0, 0.492186,-99) , 
9, -951.286, 1, 0, 0.498706,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0208874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491288,-99) , 
3, 4.62173, 1, 0, 0.515077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478256,-99) , 
12, -1.84291, 0, 0, 0.497925,-99) , 
0, 0.500948, 0, 0, 0.502313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473507,-99) , 
4, 7.42712, 0, 0, 0.48731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456667,-99) , 
3, 5.29083, 1, 0, 0.481788,-99) , 
4, 4.68186, 1, 0, 0.498328,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0109202);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520302,-99) , 
NN(
0, 
0, 
-1, 2.6773, 1, -1, 0.496549,-99) , 
11, 2.07299, 0, 0, 0.49774,-99) , 
0, 0.505709, 0, 0, 0.499166,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0143238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490095,-99) , 
12, 3.67946, 1, 0, 0.523425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462856,-99) , 
6, -0.90483, 0, 0, 0.500173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45198,-99) , 
12, 1.09717, 1, 0, 0.476312,-99) , 
10, 1.57143, 1, 0, 0.497941,-99) , 
11, 0.878353, 0, 0, 0.500243,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0105234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539604,-99) , 
NN(
0, 
0, 
-1, 2.0946, 1, -1, 0.497379,-99) , 
11, 0.819154, 0, 0, 0.49901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473621,-99) , 
12, 3.35768, 1, 0, 0.497632,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0239796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457741,-99) , 
11, 0.588892, 0, 0, 0.505135,-99) , 
12, 2.10528, 1, 0, 0.513431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530545,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.492424,-99) , 
10, 1.85714, 0, 0, 0.494646,-99) , 
11, -0.388594, 0, 0, 0.497963,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0218986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469693,-99) , 
10, -1.77555, 0, 0, 0.504552,-99) , 
9, -951.286, 0, 0, 0.517655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476591,-99) , 
12, 2.99798, 1, 0, 0.500908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402279,-99) , 
10, -0.838308, 1, 0, 0.476863,-99) , 
12, -1.74411, 0, 0, 0.499229,-99) , 
10, -1.2857, 1, 0, 0.501099,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0209679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494034,-99) , 
9, -951.286, 0, 0, 0.501459,-99) , 
11, 1.76594, 0, 0, 0.502725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430121,-99) , 
11, -4.69413, 1, 0, 0.47948,-99) , 
12, -2.1264, 0, 0, 0.501241,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.017192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495087,-99) , 
2, -0.215811, 1, 0, 0.496573,-99) , 
5, 0.999524, 1, 0, 0.498785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469371,-99) , 
4, 9.0008, 1, 0, 0.497786,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0208177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499144,-99) , 
11, 0.0989112, 0, 0, 0.505991,-99) , 
8, 3.09611, 0, 0, 0.508795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495802,-99) , 
11, -2.43756, 0, 0, 0.499853,-99) , 
NN(
0, 
0, 
-1, -1.65401, 0, -1, 0.457398,-99) , 
12, 0.524436, 1, 0, 0.495319,-99) , 
6, -0.238728, 1, 0, 0.501723,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0307613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.509644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482633,-99) , 
5, 0.999524, 0, 0, 0.508491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481438,-99) , 
3, 4.47236, 0, 0, 0.506979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424102,-99) , 
10, -0.292917, 1, 0, 0.493213,-99) , 
12, -1.20329, 0, 0, 0.505126,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0113557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.609287, 0, 1, 0.503008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465903,-99) , 
13, 1.42526, 1, 0, 0.481107,-99) , 
12, 2.40213, 1, 0, 0.500623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465773,-99) , 
4, 9.25184, 1, 0, 0.499582,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0209513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.21442, 0, 1, 0.505886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447104,-99) , 
3, 6.29005, 0, 0, 0.48054,-99) , 
13, 6.71099, 1, 0, 0.504146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471349,-99) , 
0, 0.497138, 0, 0, 0.494703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441918,-99) , 
6, -0.716372, 1, 0, 0.485617,-99) , 
12, 1.78644, 1, 0, 0.50126,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0263112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.159337, 1, 1, 0.536668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489569,-99) , 
0, 0.5019, 1, 0, 0.496724,-99) , 
6, 0.615826, 0, 0, 0.5026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494988,-99) , 
9, -951.286, 0, 0, 0.506779,-99) , 
NN(
0, 
0, 
-1, 0.14267, 1, -1, 0.484549,-99) , 
11, -1.41741, 0, 0, 0.490912,-99) , 
0, 0.499043, 0, 0, 0.495859,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0259359);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49909,-99) , 
12, -2.52613, 0, 0, 0.528403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476189,-99) , 
6, -0.810659, 1, 0, 0.498366,-99) , 
11, -3.63632, 1, 0, 0.512607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494291,-99) , 
10, 2.11559, 0, 0, 0.496228,-99) , 
NN(
0, 
0, 
-1, 1.05471, 1, -1, 0.475926,-99) , 
13, 6.19087, 1, 0, 0.493914,-99) , 
10, -0.714176, 1, 0, 0.498142,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0196474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454765,-99) , 
12, -2.04678, 0, 0, 0.50051,-99) , 
10, -1.56925, 1, 0, 0.502424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526639,-99) , 
NN(
0, 
0, 
-1, -0.866044, 1, -1, 0.477607,-99) , 
3, 1.60818, 0, 0, 0.485562,-99) , 
3, 1.70129, 0, 0, 0.49957,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0184726);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494983,-99) , 
6, -0.0643547, 1, 0, 0.500739,-99) , 
NN(
0, 
0, 
-1, -0.906986, 0, -1, 0.487264,-99) , 
3, 2.13774, 0, 0, 0.49751,-99) , 
11, 1.86231, 0, 0, 0.498925,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.020143);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490218,-99) , 
10, -1.11776, 1, 0, 0.514966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493885,-99) , 
3, 4.92499, 0, 0, 0.496895,-99) , 
11, -4.07993, 1, 0, 0.499023,-99) , 
10, 2.14284, 0, 0, 0.500624,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0347527);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473039,-99) , 
11, -2.88042, 0, 0, 0.514112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492582,-99) , 
8, 5.05384, 0, 0, 0.497853,-99) , 
10, 0.469472, 0, 0, 0.502316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479808,-99) , 
10, 2.10209, 0, 0, 0.499198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429024,-99) , 
6, 0.616776, 1, 0, 0.485463,-99) , 
10, 1.28577, 1, 0, 0.499822,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0199468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.8057, 0, 1, 0.504357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41749,-99) , 
10, -1.02487, 1, 0, 0.486102,-99) , 
12, -1.88386, 0, 0, 0.502452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4956,-99) , 
13, 2.64317, 0, 0, 0.507939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438432,-99) , 
13, 4.36595, 1, 0, 0.475137,-99) , 
10, 1.57149, 1, 0, 0.499782,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0263866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.23853, 1, 1, 0.523257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487388,-99) , 
12, 0.0769851, 0, 0, 0.502453,-99) , 
3, 3.50711, 0, 0, 0.505837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493164,-99) , 
10, 1.24261, 0, 0, 0.497449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452459,-99) , 
12, 0.500736, 1, 0, 0.492821,-99) , 
6, 0.140595, 1, 0, 0.501099,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0241648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.59547, 1, 1, 0.50701,-99) , 
NN(
0, 
0, 
-1, 1.93979, 0, -1, 0.478859,-99) , 
12, 2.82566, 1, 0, 0.504307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484871,-99) , 
11, -3.82865, 0, 0, 0.497709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43021,-99) , 
10, -0.381092, 1, 0, 0.487041,-99) , 
12, -1.34315, 0, 0, 0.501054,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0267767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0134221, 1, 1, 0.555823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4948,-99) , 
11, 1.72742, 0, 0, 0.496406,-99) , 
7, 0.0101876, 0, 0, 0.501215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367595,-99) , 
7, 0.0237713, 1, 0, 0.497862,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0143844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50453, 1, 1, 0.519805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481977,-99) , 
8, 1.60141, 0, 0, 0.500798,-99) , 
0, 0.503804, 0, 0, 0.502726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460995,-99) , 
10, 2.14288, 1, 0, 0.501249,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0156899);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.143118, 1, 1, 0.515027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491213,-99) , 
6, -0.238765, 1, 0, 0.495887,-99) , 
NN(
0, 
0, 
-1, 0.999955, 1, -1, 0.481466,-99) , 
2, -0.0714836, 0, 0, 0.493634,-99) , 
0, 0.491424, 1, 0, 0.495105,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0187241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493214,-99) , 
8, 6.39316, 0, 0, 0.494951,-99) , 
11, -4.3753, 1, 0, 0.496597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463344,-99) , 
2, -0.214346, 0, 0, 0.495278,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0239249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.34213, 1, 1, 0.529525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468591,-99) , 
13, 4.47755, 0, 0, 0.48494,-99) , 
4, 4.75794, 1, 0, 0.514761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492407,-99) , 
11, -2.55649, 1, 0, 0.509629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493523,-99) , 
0, 0.504754, 0, 0, 0.495263,-99) , 
10, -0.714154, 1, 0, 0.498497,-99) , 
2, -0.0714192, 1, 0, 0.50125,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0275822);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49915,-99) , 
12, -1.94078, 0, 0, 0.525298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445694,-99) , 
12, -1.0891, 0, 0, 0.499951,-99) , 
10, -0.141223, 1, 0, 0.508919,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49715,-99) , 
2, 0.0546222, 0, 0, 0.502059,-99) , 
NN(
0, 
0, 
-1, 0.495238, 0, -1, 0.481977,-99) , 
4, 3.18548, 1, 0, 0.495351,-99) , 
3, 3.31722, 0, 0, 0.502157,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0182209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38094, 1, 1, 0.50611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445409,-99) , 
12, 1.50394, 1, 0, 0.479836,-99) , 
10, 1.85712, 1, 0, 0.504574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464906,-99) , 
13, 6.8394, 1, 0, 0.502621,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0151747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495006,-99) , 
9, -951.286, 0, 0, 0.533014,-99) , 
NN(
0, 
0, 
-1, -1.14951, 1, 1, 0.504266,-99) , 
10, 1.85718, 0, 0, 0.506075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462773,-99) , 
6, 0.767172, 1, 0, 0.479506,-99) , 
3, 5.91541, 1, 0, 0.504183,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.022334);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.510258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493596,-99) , 
11, -1.84793, 0, 0, 0.497143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448837,-99) , 
12, 0.919842, 1, 0, 0.494218,-99) , 
6, -0.334167, 1, 0, 0.501241,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0178666);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493373,-99) , 
11, 0.489932, 0, 0, 0.494942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462813,-99) , 
12, 3.08362, 1, 0, 0.493883,-99) , 
11, 2.77752, 0, 0, 0.494812,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0173742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499041, 1, 1, 0.519951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49158,-99) , 
9, -951.286, 1, 0, 0.497936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461517,-99) , 
0, 0.505709, 1, 0, 0.496634,-99) , 
10, -1.28571, 1, 0, 0.499,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0251361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143181, 0, 1, 0.526853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489436,-99) , 
12, 0.260995, 1, 0, 0.503343,-99) , 
11, -0.585322, 0, 0, 0.50496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464985,-99) , 
9, -951.286, 1, 0, 0.496236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451644,-99) , 
13, 1.83141, 1, 0, 0.48642,-99) , 
12, 2.0312, 1, 0, 0.502495,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0273003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495377,-99) , 
12, -2.08523, 0, 0, 0.519721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439467,-99) , 
12, -1.09629, 0, 0, 0.496188,-99) , 
10, -0.141414, 1, 0, 0.50478,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478804,-99) , 
6, -0.670648, 1, 0, 0.494399,-99) , 
NN(
0, 
0, 
-1, 2.33726, 0, -1, 0.46594,-99) , 
8, 1.46298, 0, 0, 0.489761,-99) , 
8, 2.89347, 0, 0, 0.498928,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0303286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.62901, 0, 1, 0.521591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492583,-99) , 
8, 3.75998, 0, 0, 0.499025,-99) , 
2, -0.0710758, 1, 0, 0.502924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48959,-99) , 
10, 0.795945, 1, 0, 0.499536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407377,-99) , 
12, -0.444295, 0, 0, 0.453363,-99) , 
11, -2.84754, 0, 0, 0.491583,-99) , 
10, 0.428574, 1, 0, 0.498481,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0180569);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497734,-99) , 
4, 4.70192, 1, 0, 0.512266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494853,-99) , 
8, 6.2914, 0, 0, 0.497087,-99) , 
2, 0.0310582, 0, 0, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474379,-99) , 
2, -0.213645, 0, 0, 0.499984,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.018059);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491803,-99) , 
2, -0.00340237, 1, 0, 0.500611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472256,-99) , 
4, 4.72098, 1, 0, 0.491145,-99) , 
2, 0.0714181, 1, 0, 0.499222,-99) , 
0, 0.505709, 0, 0, 0.50021,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0124622);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494125,-99) , 
12, 0.78069, 1, 0, 0.516309,-99) , 
NN(
0, 
0, 
-1, 1.40819, 1, -1, 0.496191,-99) , 
0, 0.503804, 0, 0, 0.498228,-99) , 
10, 2.14288, 0, 0, 0.499297,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0199991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.34602, 0, 1, 0.516166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493501,-99) , 
4, 0.941138, 1, 0, 0.497575,-99) , 
4, 4.43116, 0, 0, 0.501681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468376,-99) , 
5, 0.999048, 0, 0, 0.500699,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0224418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468832,-99) , 
10, -1.69377, 0, 0, 0.500529,-99) , 
9, -951.286, 0, 0, 0.518135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496583,-99) , 
10, 0.14297, 1, 0, 0.502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425788,-99) , 
10, -0.641131, 1, 0, 0.480288,-99) , 
12, -1.54917, 0, 0, 0.499762,-99) , 
10, -1.28553, 1, 0, 0.501611,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0198769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49108,-99) , 
13, 1.59364, 0, 0, 0.530897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457324,-99) , 
11, 1.31545, 0, 0, 0.503103,-99) , 
12, 2.53413, 1, 0, 0.517458,-99) , 
NN(
NN(
0, 
0, 
-1, -1.81597, 0, 1, 0.503294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470062,-99) , 
12, 1.31651, 1, 0, 0.502021,-99) , 
11, -0.645014, 0, 0, 0.505127,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.018484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49561,-99) , 
8, 3.93971, 0, 0, 0.501042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435953,-99) , 
10, -1.17511, 1, 0, 0.481765,-99) , 
12, -1.89295, 0, 0, 0.4992,-99) , 
11, 2.77752, 0, 0, 0.500384,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0255728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492524,-99) , 
3, 1.89562, 0, 0, 0.505113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487289,-99) , 
10, -0.787659, 1, 0, 0.494168,-99) , 
12, -0.092933, 0, 0, 0.499587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466532,-99) , 
8, 6.82512, 1, 0, 0.4981,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0313335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.87598, 0, 1, 0.514364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474671,-99) , 
3, 3.9625, 1, 0, 0.510454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492154,-99) , 
12, -1.44282, 0, 0, 0.503984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48306,-99) , 
2, 0.0708544, 0, 0, 0.486999,-99) , 
11, -3.73861, 1, 0, 0.491778,-99) , 
11, -1.84054, 0, 0, 0.498538,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0171556);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495922,-99) , 
11, -4.19243, 1, 0, 0.498475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452688,-99) , 
12, -2.53291, 0, 0, 0.497131,-99) , 
8, 7.19693, 0, 0, 0.498693,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0186974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467932,-99) , 
12, -2.06027, 0, 0, 0.503649,-99) , 
10, -1.85713, 1, 0, 0.504847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463052,-99) , 
3, 1.21508, 0, 0, 0.486093,-99) , 
3, 1.36967, 0, 0, 0.503469,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0122619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498284,-99) , 
6, -0.827878, 1, 0, 0.500708,-99) , 
6, 0.807231, 0, 0, 0.502254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456701,-99) , 
4, 9.25993, 1, 0, 0.500907,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0243892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469096,-99) , 
4, 3.32209, 1, 0, 0.503083,-99) , 
8, 3.29535, 0, 0, 0.516592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464747,-99) , 
8, 6.82742, 1, 0, 0.504506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440899,-99) , 
12, -1.72902, 0, 0, 0.476069,-99) , 
12, -1.39786, 0, 0, 0.501428,-99) , 
10, -0.999865, 1, 0, 0.503791,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0445241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494628,-99) , 
8, 3.80522, 0, 0, 0.518352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363573,-99) , 
9, -1.85728, 0, 0, 0.506773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487225,-99) , 
3, 4.98262, 1, 0, 0.521469,-99) , 
NN(
0, 
0, 
-1, -0.999806, 0, -1, 0.489873,-99) , 
11, -3.75844, 1, 0, 0.494184,-99) , 
9, -951.286, 0, 0, 0.500408,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0279612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450106,-99) , 
6, -0.855816, 1, 0, 0.500366,-99) , 
3, 1.65951, 0, 0, 0.510139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535609,-99) , 
NN(
0, 
0, 
-1, -2.11341, 0, -1, 0.48928,-99) , 
10, -1.85697, 1, 0, 0.490972,-99) , 
11, 0.0345393, 0, 0, 0.493722,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0318523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00756645, 0, 1, 0.511362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464461,-99) , 
6, -0.857832, 1, 0, 0.494749,-99) , 
13, 1.8195, 0, 0, 0.507803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452222,-99) , 
12, -2.58859, 0, 0, 0.50389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437369,-99) , 
10, -0.267228, 1, 0, 0.492515,-99) , 
12, -1.17123, 0, 0, 0.504314,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0198626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488775,-99) , 
12, -0.878998, 0, 0, 0.499794,-99) , 
3, 5.3552, 0, 0, 0.501075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477168,-99) , 
10, 0.299758, 1, 0, 0.503675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430729,-99) , 
11, -2.63255, 1, 0, 0.484224,-99) , 
3, 5.58689, 1, 0, 0.499127,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0268863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487959,-99) , 
13, 1.5608, 0, 0, 0.504785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459838,-99) , 
9, -951.286, 0, 0, 0.478196,-99) , 
0, 0.492376, 0, 0, 0.502187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482252,-99) , 
3, 4.75517, 0, 0, 0.493274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437046,-99) , 
10, 0.389219, 1, 0, 0.488203,-99) , 
12, -0.59558, 0, 0, 0.496846,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0172118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474747,-99) , 
6, 0.685891, 1, 0, 0.498734,-99) , 
8, 6.76743, 0, 0, 0.500172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483157,-99) , 
9, -951.286, 0, 0, 0.502255,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.460192,-99) , 
13, 5.09802, 1, 0, 0.488423,-99) , 
10, 0.999969, 1, 0, 0.49767,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.020044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481565,-99) , 
12, 3.373, 1, 0, 0.501206,-99) , 
10, -1.57127, 1, 0, 0.503334,-99) , 
NN(
0, 
0, 
-1, 0.506464, 1, -1, 0.485142,-99) , 
6, 0.0467327, 1, 0, 0.496021,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0252626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473403,-99) , 
2, 0.0737993, 1, 0, 0.503505,-99) , 
6, 0.514162, 0, 0, 0.507982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486295,-99) , 
12, 0.441457, 1, 0, 0.494961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460609,-99) , 
11, -3.59986, 0, 0, 0.480367,-99) , 
12, -1.0669, 0, 0, 0.492636,-99) , 
10, -0.714081, 1, 0, 0.49612,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.015642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.42822, 1, 1, 0.511969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495108,-99) , 
10, 2.14276, 0, 0, 0.4964,-99) , 
0, 0.494281, 1, 0, 0.499326,-99) , 
NN(
0, 
0, 
-1, 0.429898, 1, -1, 0.476903,-99) , 
6, 0.806924, 1, 0, 0.498147,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.00948445);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498295,-99) , 
6, 0.593005, 1, 0, 0.507603,-99) , 
NN(
0, 
0, 
-1, 4.80063, 1, -1, 0.497751,-99) , 
3, 4.93386, 0, 0, 0.500014,-99) , 
10, 2.14287, 0, 0, 0.500909,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0225641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.141293, 1, 1, 0.517806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474405,-99) , 
13, 7.07753, 1, 0, 0.510321,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48769,-99) , 
4, 4.24017, 1, 0, 0.500498,-99) , 
NN(
0, 
0, 
-1, -0.138899, 1, -1, 0.482493,-99) , 
6, -0.0129269, 1, 0, 0.495352,-99) , 
8, 5.52464, 0, 0, 0.498407,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0131182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498768,-99) , 
11, -0.0411847, 0, 0, 0.501582,-99) , 
4, 8.77853, 0, 0, 0.502794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45962,-99) , 
5, 0.999524, 0, 0, 0.500648,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0204733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488256,-99) , 
8, 2.41192, 0, 0, 0.50164,-99) , 
9, -951.287, 0, 0, 0.513532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494643,-99) , 
0, 0.499995, 1, 0, 0.502484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414562,-99) , 
10, -0.180421, 1, 0, 0.485704,-99) , 
12, -1.1818, 0, 0, 0.49982,-99) , 
10, -0.999752, 1, 0, 0.501954,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0276526);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494847,-99) , 
12, -1.28924, 0, 0, 0.509264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47854,-99) , 
9, -951.286, 0, 0, 0.489164,-99) , 
11, -3.60342, 1, 0, 0.493576,-99) , 
11, 2.79204, 0, 0, 0.494751,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0136447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488667,-99) , 
3, 2.33813, 0, 0, 0.496363,-99) , 
11, -4.26665, 1, 0, 0.498209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457452,-99) , 
12, -2.57238, 0, 0, 0.497068,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0163675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469377,-99) , 
6, -0.941091, 0, 0, 0.502115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466596,-99) , 
3, 1.16975, 0, 0, 0.500781,-99) , 
NN(
0, 
0, 
-1, 0.496312, 1, -1, 0.486947,-99) , 
6, 0.237003, 1, 0, 0.496291,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0166677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.833993, 0, 1, 0.53088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49901,-99) , 
10, -1.93865, 0, 0, 0.521766,-99) , 
NN(
NN(
0, 
0, 
-1, -1.67001, 0, -1, 0.496799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461127,-99) , 
11, -3.03289, 1, 0, 0.475724,-99) , 
2, 0.0713089, 1, 0, 0.493656,-99) , 
10, -1.28555, 1, 0, 0.496501,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.40746, 0, 1, 0.517865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472513,-99) , 
6, -0.194793, 1, 0, 0.494801,-99) , 
3, 4.28947, 0, 0, 0.501775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485286,-99) , 
12, 0.191876, 1, 0, 0.492239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45919,-99) , 
12, -0.554467, 0, 0, 0.489362,-99) , 
10, 0.42867, 1, 0, 0.496959,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0177833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.527362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497575,-99) , 
0, 0.502852, 0, 0, 0.502238,-99) , 
3, 5.2459, 0, 0, 0.505827,-99) , 
NN(
0, 
0, 
-1, -0.847165, 0, -1, 0.491584,-99) , 
10, 0.142861, 1, 0, 0.498891,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0159818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479982,-99) , 
2, 0.0718309, 1, 0, 0.498459,-99) , 
6, 0.807991, 0, 0, 0.500318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484488,-99) , 
2, 0.0694086, 0, 0, 0.490027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454346,-99) , 
6, 0.612087, 1, 0, 0.485018,-99) , 
0, 0.494281, 0, 0, 0.497545,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0278444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85885, 0, 1, 0.533709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497715,-99) , 
9, -951.286, 1, 0, 0.516561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455461,-99) , 
12, 0.0699902, 1, 0, 0.512143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491098,-99) , 
11, 2.37261, 0, 0, 0.493335,-99) , 
3, 5.27309, 0, 0, 0.49666,-99) , 
0, 0.503804, 0, 0, 0.498686,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0131942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496735,-99) , 
10, 2.14288, 0, 0, 0.498361,-99) , 
5, 0.999524, 1, 0, 0.499731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461637,-99) , 
4, 9.39546, 1, 0, 0.498684,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0173846);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484773,-99) , 
12, 2.77661, 1, 0, 0.503722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468124,-99) , 
2, -0.0700435, 0, 0, 0.493972,-99) , 
4, 4.68186, 1, 0, 0.501799,-99) , 
10, 2.14288, 0, 0, 0.503341,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0280199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495158,-99) , 
3, 1.3737, 0, 0, 0.515767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488557,-99) , 
2, -0.0712726, 0, 0, 0.511405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493118,-99) , 
10, -0.141926, 1, 0, 0.501191,-99) , 
NN(
0, 
0, 
-1, -0.0596613, 0, -1, 0.473528,-99) , 
3, 2.58368, 0, 0, 0.496038,-99) , 
11, -1.14454, 0, 0, 0.499983,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0325925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0613745, 1, 1, 0.50972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456518,-99) , 
12, -1.07522, 0, 0, 0.488591,-99) , 
11, -3.40405, 0, 0, 0.506626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498875,-99) , 
11, -3.84727, 0, 0, 0.513066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459889,-99) , 
9, -951.286, 0, 0, 0.475129,-99) , 
11, -3.33462, 1, 0, 0.495044,-99) , 
10, -0.428435, 0, 0, 0.503094,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0276052);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486006,-99) , 
6, 0.674555, 1, 0, 0.504654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482965,-99) , 
11, 0.634399, 0, 0, 0.487072,-99) , 
8, 3.06215, 0, 0, 0.497873,-99) , 
11, 2.09155, 0, 0, 0.499778,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.027029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.544751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495517,-99) , 
8, 6.77481, 0, 0, 0.497628,-99) , 
7, 0.00902767, 0, 0, 0.502578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355513,-99) , 
7, 0.0236981, 1, 0, 0.498876,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0176879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.12689, 0, 1, 0.505804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482773,-99) , 
12, 1.8514, 1, 0, 0.504453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493742,-99) , 
12, 3.60568, 1, 0, 0.507028,-99) , 
NN(
0, 
0, 
-1, 1.659, 0, -1, 0.46693,-99) , 
11, 0.642106, 0, 0, 0.489945,-99) , 
6, -0.809777, 0, 0, 0.502214,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.030492);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470191,-99) , 
11, -3.06328, 0, 0, 0.506532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49052,-99) , 
8, 4.51137, 0, 0, 0.497357,-99) , 
10, 0.142964, 0, 0, 0.501945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472911,-99) , 
10, 0.717279, 1, 0, 0.499108,-99) , 
NN(
0, 
0, 
-1, -0.340767, 1, -1, 0.478537,-99) , 
3, 3.63862, 0, 0, 0.487636,-99) , 
0, 0.496186, 0, 0, 0.497467,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0166572);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.0926, 1, 1, 0.53403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498413,-99) , 
10, -0.264993, 1, 0, 0.502775,-99) , 
NN(
0, 
0, 
-1, 0.498106, 0, -1, 0.469818,-99) , 
12, -1.92942, 0, 0, 0.500743,-99) , 
10, -1.57122, 1, 0, 0.502818,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0267635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.02133, 1, 1, 0.509644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47505,-99) , 
0, 0.490109, 1, 0, 0.489846,-99) , 
0, 0.492376, 0, 0, 0.507742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47412,-99) , 
8, 3.67398, 0, 0, 0.502489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432566,-99) , 
10, -0.284093, 1, 0, 0.490965,-99) , 
12, -1.20329, 0, 0, 0.504049,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0143721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497409,-99) , 
13, 2.94538, 1, 0, 0.501854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457306,-99) , 
12, -2.38109, 0, 0, 0.500608,-99) , 
10, -1.85692, 1, 0, 0.502015,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0284876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489456,-99) , 
9, -951.286, 1, 0, 0.505441,-99) , 
10, 1.57137, 0, 0, 0.508353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492767,-99) , 
11, -1.95121, 0, 0, 0.497812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43993,-99) , 
12, 1.10877, 1, 0, 0.495121,-99) , 
6, -0.429283, 1, 0, 0.500288,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0188166);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97958, 0, 1, 0.522101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490431,-99) , 
12, 0.655679, 1, 0, 0.500245,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.464354,-99) , 
12, -1.92942, 0, 0, 0.498117,-99) , 
10, -1.57141, 1, 0, 0.499587,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0160082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76048, 1, 1, 0.523786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487113,-99) , 
8, 1.65424, 0, 0, 0.51612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499196,-99) , 
6, 0.711867, 0, 0, 0.502026,-99) , 
NN(
0, 
0, 
-1, -0.161394, 1, -1, 0.484026,-99) , 
12, -1.15612, 0, 0, 0.499076,-99) , 
10, -0.999989, 1, 0, 0.501709,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0115868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499376,-99) , 
12, -1.64997, 0, 0, 0.519665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498346,-99) , 
8, 6.39761, 0, 0, 0.500086,-99) , 
11, -3.90816, 1, 0, 0.502121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47641,-99) , 
12, -2.32196, 0, 0, 0.50096,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.017948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85718, 0, 1, 0.50605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456083,-99) , 
12, 1.72455, 1, 0, 0.493226,-99) , 
0, 0.5019, 1, 0, 0.503515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496685,-99) , 
1, -0.000262795, 1, 0, 0.505062,-99) , 
NN(
0, 
0, 
-1, 0.715458, 1, -1, 0.468039,-99) , 
6, 0.731505, 1, 0, 0.486119,-99) , 
8, 5.86443, 1, 0, 0.500939,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0150205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480129,-99) , 
12, 1.55061, 1, 0, 0.531349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525716,-99) , 
NN(
0, 
0, 
-1, -1.77681, 0, -1, 0.49689,-99) , 
11, -4.45095, 1, 0, 0.498865,-99) , 
10, 1.85718, 0, 0, 0.500976,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0143644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.505038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462071,-99) , 
5, 0.999683, 0, 0, 0.503343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464349,-99) , 
5, 0.999048, 0, 0, 0.502217,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0241828);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.50239, 0, 1, 0.506823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465991,-99) , 
10, -0.646779, 1, 0, 0.516049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441539,-99) , 
11, -4.30412, 1, 0, 0.472378,-99) , 
8, 5.43455, 0, 0, 0.490543,-99) , 
12, -1.49436, 0, 0, 0.50424,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0181987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142465, 0, 1, 0.525066,-99) , 
NN(
0, 
0, 
-1, -0.809582, 0, -1, 0.494983,-99) , 
11, -0.384538, 0, 0, 0.497447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473095,-99) , 
12, 4.27433, 1, 0, 0.494896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449208,-99) , 
11, 1.37573, 0, 0, 0.479713,-99) , 
12, 2.46655, 1, 0, 0.495666,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0206032);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.526836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486667,-99) , 
10, 0.605562, 1, 0, 0.497677,-99) , 
NN(
0, 
0, 
-1, -4.5133, 1, -1, 0.464749,-99) , 
12, -1.92413, 0, 0, 0.49572,-99) , 
10, -1.57122, 1, 0, 0.497671,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.025963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491745,-99) , 
12, -2.35689, 0, 0, 0.522447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490208,-99) , 
10, 0.494661, 1, 0, 0.508166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491576,-99) , 
3, 1.33779, 1, 0, 0.493973,-99) , 
8, 5.02241, 0, 0, 0.49758,-99) , 
11, -4.34575, 1, 0, 0.499483,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0351115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479569,-99) , 
11, -3.39431, 1, 0, 0.507382,-99) , 
11, -1.63019, 0, 0, 0.515834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499513,-99) , 
3, 4.27021, 0, 0, 0.505456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337822,-99) , 
9, -1.57166, 0, 0, 0.490769,-99) , 
9, -951.286, 1, 0, 0.498168,-99) , 
10, -0.99982, 1, 0, 0.500943,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0164795);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49175,-99) , 
2, 0.0721794, 1, 0, 0.504288,-99) , 
NN(
0, 
0, 
-1, 0.714669, 1, -1, 0.485249,-99) , 
0, 0.503804, 1, 0, 0.502413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472481,-99) , 
12, -2.39957, 0, 0, 0.501241,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.030997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477789,-99) , 
5, 0.999986, 0, 0, 0.506636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469334,-99) , 
5, 0.999905, 0, 0, 0.504573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468323,-99) , 
10, 0.827234, 1, 0, 0.500393,-99) , 
NN(
0, 
0, 
-1, 0.319959, 1, -1, 0.470461,-99) , 
11, -2.53937, 1, 0, 0.493081,-99) , 
6, -0.143603, 1, 0, 0.49902,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0208442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490905,-99) , 
9, -951.286, 1, 0, 0.498667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442618,-99) , 
5, 0.999751, 0, 0, 0.497018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459986,-99) , 
5, 0.999524, 0, 0, 0.495168,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0261073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49749,-99) , 
9, -951.286, 0, 0, 0.510309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489858,-99) , 
10, -1.28409, 1, 0, 0.492295,-99) , 
11, -1.17337, 0, 0, 0.495446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478499,-99) , 
13, 1.33076, 0, 0, 0.496348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436809,-99) , 
6, -0.896893, 1, 0, 0.477874,-99) , 
8, 1.59479, 0, 0, 0.493676,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.016881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483228,-99) , 
3, 1.73055, 0, 0, 0.51507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496752,-99) , 
8, 5.87106, 0, 0, 0.498408,-99) , 
2, -0.0712824, 1, 0, 0.501216,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.475445,-99) , 
3, 5.93943, 1, 0, 0.499429,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.018539);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0656142, 0, 1, 0.506302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477533,-99) , 
6, 0.42103, 1, 0, 0.505387,-99) , 
NN(
0, 
0, 
-1, 0.0406993, 0, -1, 0.463472,-99) , 
2, -0.0710758, 0, 0, 0.49318,-99) , 
4, 4.73378, 1, 0, 0.503778,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0152194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480875,-99) , 
12, 1.51004, 1, 0, 0.525781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497369,-99) , 
4, 9.02354, 0, 0, 0.498673,-99) , 
5, 0.999524, 1, 0, 0.500371,-99) , 
10, 1.85717, 0, 0, 0.501998,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0138022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476198,-99) , 
3, 1.51227, 0, 0, 0.501699,-99) , 
NN(
0, 
0, 
-1, 1.43679, 1, -1, 0.475058,-99) , 
6, -0.90484, 0, 0, 0.499634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457209,-99) , 
12, -2.56061, 0, 0, 0.498369,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0150746);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49589,-99) , 
10, -1.85642, 1, 0, 0.497807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450191,-99) , 
6, -0.935319, 1, 0, 0.48033,-99) , 
8, 1.47235, 0, 0, 0.496546,-99) , 
3, 6.23856, 0, 0, 0.497467,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0210159);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473786,-99) , 
13, 6.05748, 1, 0, 0.506967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480903,-99) , 
3, 6.48318, 0, 0, 0.494572,-99) , 
8, 6.2914, 1, 0, 0.505788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474599,-99) , 
0, 0.489519, 0, 0, 0.504993,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0141098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47603,-99) , 
12, 2.09161, 1, 0, 0.500299,-99) , 
11, 2.5487, 0, 0, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457592,-99) , 
12, -2.51048, 0, 0, 0.500118,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0174627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549932,-99) , 
NN(
0, 
0, 
-1, 3.12477, 1, -1, 0.494071,-99) , 
4, 9.13153, 0, 0, 0.495821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464268,-99) , 
5, 0.999524, 0, 0, 0.494242,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0170618);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.871434, 0, 1, 0.522406,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486454,-99) , 
12, -1.09583, 0, 0, 0.499059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428875,-99) , 
11, 2.48779, 0, 0, 0.467721,-99) , 
3, 1.3342, 0, 0, 0.496997,-99) , 
6, 0.807991, 0, 0, 0.498415,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0173982);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496131,-99) , 
11, -1.46428, 0, 0, 0.497609,-99) , 
NN(
0, 
0, 
-1, -0.112734, 0, -1, 0.486665,-99) , 
8, 2.46196, 0, 0, 0.494137,-99) , 
10, 2.14289, 0, 0, 0.495744,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0162663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487095,-99) , 
12, 1.83462, 1, 0, 0.510454,-99) , 
NN(
0, 
0, 
-1, 1.03951, 1, -1, 0.497065,-99) , 
11, -1.17337, 0, 0, 0.499356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47636,-99) , 
11, 2.19473, 0, 0, 0.49593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453646,-99) , 
12, 2.1867, 0, 0, 0.483557,-99) , 
8, 1.61891, 0, 0, 0.497663,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0436289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423368,-99) , 
9, -1.00013, 0, 0, 0.506444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439449,-99) , 
10, -1.2857, 0, 0, 0.495585,-99) , 
9, -951.286, 0, 0, 0.500881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472858,-99) , 
12, -2.23425, 0, 0, 0.4994,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0154748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498736,-99) , 
11, -0.855764, 0, 0, 0.501004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47038,-99) , 
10, -0.0619224, 0, 0, 0.485711,-99) , 
8, 2.03169, 0, 0, 0.49763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458706,-99) , 
10, 2.14288, 1, 0, 0.496287,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0123109);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497971,-99) , 
3, 3.98088, 0, 0, 0.501942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471524,-99) , 
12, -2.29516, 0, 0, 0.500915,-99) , 
10, -1.85691, 1, 0, 0.501966,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0224222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495778,-99) , 
6, 0.0467198, 1, 0, 0.504633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466171,-99) , 
10, 0.140687, 0, 0, 0.481766,-99) , 
8, 1.61629, 0, 0, 0.502117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468067,-99) , 
5, 0.999524, 0, 0, 0.500396,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0137318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.49345, 0, 1, 0.505897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480972,-99) , 
6, 0.839222, 1, 0, 0.504313,-99) , 
NN(
0, 
0, 
-1, -0.677333, 0, -1, 0.492924,-99) , 
3, 2.66166, 0, 0, 0.499889,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0115075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.598844, 0, 1, 0.510792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486449,-99) , 
12, -1.56113, 0, 0, 0.499532,-99) , 
4, 0.987291, 1, 0, 0.50197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471874,-99) , 
4, 9.38081, 1, 0, 0.501088,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.017665);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494663,-99) , 
5, 0.999524, 1, 0, 0.49713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468019,-99) , 
4, 9.03008, 1, 0, 0.496151,-99) , 
10, 2.14288, 0, 0, 0.497354,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0152083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.89902, 1, 1, 0.525444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480363,-99) , 
4, 4.61524, 1, 0, 0.51679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495841,-99) , 
10, -1.85686, 0, 0, 0.514551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461508,-99) , 
12, -1.74411, 0, 0, 0.498298,-99) , 
10, -1.28547, 1, 0, 0.499957,-99) , 
0, 0.493329, 1, 0, 0.502256,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0233653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.25125, 1, 1, 0.530928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488478,-99) , 
10, -1.57149, 0, 0, 0.504447,-99) , 
11, -3.63632, 1, 0, 0.517787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495954,-99) , 
11, -3.22932, 1, 0, 0.499014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444398,-99) , 
11, -4.25551, 1, 0, 0.480185,-99) , 
12, -1.43575, 0, 0, 0.497114,-99) , 
10, -1, 1, 0, 0.500346,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.010997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498873,-99) , 
3, 5.2069, 0, 0, 0.501131,-99) , 
NN(
0, 
0, 
-1, 0.756879, 1, -1, 0.476072,-99) , 
13, 6.48128, 1, 0, 0.49945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461708,-99) , 
5, 0.999048, 0, 0, 0.498367,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0161068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57075, 1, 1, 0.506008,-99) , 
NN(
0, 
0, 
-1, -0.884363, 1, -1, 0.485231,-99) , 
8, 1.59582, 0, 0, 0.503857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470399,-99) , 
5, 0.999524, 0, 0, 0.502179,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0238852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475932,-99) , 
12, -1.79653, 0, 0, 0.503161,-99) , 
11, -4.7538, 1, 0, 0.505022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471063,-99) , 
6, -0.927117, 0, 0, 0.497946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459016,-99) , 
6, -0.74495, 1, 0, 0.489869,-99) , 
3, 2.01449, 0, 0, 0.501227,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0267425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491758,-99) , 
0, 0.495233, 1, 0, 0.496369,-99) , 
3, 5.24142, 0, 0, 0.502656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489507,-99) , 
10, 1.8572, 0, 0, 0.491738,-99) , 
NN(
0, 
0, 
-1, -2.75063, 1, -1, 0.466056,-99) , 
6, 0.712834, 1, 0, 0.488966,-99) , 
10, -0.42837, 1, 0, 0.493231,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0185391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495874,-99) , 
2, 0.071273, 0, 0, 0.498473,-99) , 
10, -1.57075, 1, 0, 0.500059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466721,-99) , 
13, 1.27191, 0, 0, 0.495145,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.460822,-99) , 
11, 0.463696, 0, 0, 0.481849,-99) , 
6, -0.809677, 0, 0, 0.497252,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0132418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483603,-99) , 
0, 0.49809, 1, 0, 0.516426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468726,-99) , 
12, 2.43484, 1, 0, 0.499819,-99) , 
6, -0.905573, 1, 0, 0.50119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475756,-99) , 
3, 6.26281, 1, 0, 0.500214,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.014479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496646,-99) , 
0, 0.493329, 1, 0, 0.499385,-99) , 
5, 0.999048, 1, 0, 0.500621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462849,-99) , 
4, 9.07131, 1, 0, 0.499426,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0193154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476589,-99) , 
6, -0.950385, 1, 0, 0.50898,-99) , 
8, 1.41663, 0, 0, 0.528494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490786,-99) , 
8, 6.82508, 1, 0, 0.527132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496678,-99) , 
11, -0.188331, 0, 0, 0.498892,-99) , 
6, 0.807933, 0, 0, 0.500614,-99) , 
3, 1.37547, 1, 0, 0.502839,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0150793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.870375, 0, 1, 0.526287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481313,-99) , 
13, 6.48128, 1, 0, 0.503861,-99) , 
6, 0.806967, 0, 0, 0.505044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468669,-99) , 
2, 0.213932, 1, 0, 0.503747,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0176531);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.523982,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505981, 0, 1, 0.521589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494603,-99) , 
10, -0.99984, 1, 0, 0.496787,-99) , 
0, 0.504757, 0, 0, 0.498495,-99) , 
11, -4.28007, 1, 0, 0.500677,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0200882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462385,-99) , 
10, -1.15476, 1, 0, 0.492711,-99) , 
12, -1.80343, 0, 0, 0.51132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464608,-99) , 
5, 0.999524, 0, 0, 0.500113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418126,-99) , 
10, -0.108927, 1, 0, 0.482678,-99) , 
12, -0.977175, 0, 0, 0.49732,-99) , 
11, -3.92379, 1, 0, 0.499308,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0243464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493804,-99) , 
12, 2.8371, 1, 0, 0.521078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4616,-99) , 
3, 1.93707, 0, 0, 0.502451,-99) , 
11, -0.80134, 0, 0, 0.50652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49225,-99) , 
3, 2.57581, 0, 0, 0.497853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473378,-99) , 
1, -0.000930301, 1, 0, 0.486037,-99) , 
6, -0.051256, 1, 0, 0.492704,-99) , 
0, 0.49809, 1, 0, 0.499548,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0131181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497068,-99) , 
11, 0.299902, 0, 0, 0.499458,-99) , 
5, 0.999048, 1, 0, 0.500817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465907,-99) , 
4, 9.39171, 1, 0, 0.499835,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0228964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49101,-99) , 
12, -2.39198, 0, 0, 0.524634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486533,-99) , 
6, -0.638144, 1, 0, 0.500473,-99) , 
3, 3.30927, 0, 0, 0.510348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482371,-99) , 
12, 2.52645, 1, 0, 0.501686,-99) , 
NN(
0, 
0, 
-1, 0.0611216, 1, -1, 0.482072,-99) , 
12, -0.855601, 0, 0, 0.497436,-99) , 
10, -0.714065, 1, 0, 0.500343,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0201222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495888,-99) , 
11, -0.38663, 0, 0, 0.497836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450025,-99) , 
9, -951.286, 0, 0, 0.478988,-99) , 
12, 1.96725, 1, 0, 0.495913,-99) , 
11, 2.42991, 0, 0, 0.496996,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00996716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499776,-99) , 
11, -3.92395, 1, 0, 0.502076,-99) , 
11, 1.83089, 0, 0, 0.503316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47036,-99) , 
5, 0.999524, 0, 0, 0.501659,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0256521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.237975, 1, 1, 0.513213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490318,-99) , 
10, -1.36499, 1, 0, 0.495593,-99) , 
3, 3.74519, 0, 0, 0.505932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492241,-99) , 
11, 2.80935, 0, 0, 0.49556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442582,-99) , 
3, 4.58894, 1, 0, 0.491232,-99) , 
12, 0.5201, 1, 0, 0.500937,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0177631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.98369, 0, 1, 0.540153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499364,-99) , 
11, 1.51521, 0, 0, 0.501766,-99) , 
7, 0.0101531, 0, 0, 0.504773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376198,-99) , 
7, 0.0236981, 1, 0, 0.501501,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0122786);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.07582, 0, 1, 0.505421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46955,-99) , 
5, 0.999048, 0, 0, 0.504392,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0143676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43954,-99) , 
12, 2.11737, 1, 0, 0.501347,-99) , 
11, 0.597329, 0, 0, 0.502912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479695,-99) , 
12, 3.38031, 1, 0, 0.501615,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0195442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.31533, 1, 1, 0.522043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488091,-99) , 
12, -0.714096, 0, 0, 0.503244,-99) , 
NN(
0, 
0, 
-1, 0.507965, 1, -1, 0.489309,-99) , 
6, -0.0484168, 1, 0, 0.497577,-99) , 
11, -4.28293, 1, 0, 0.499675,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00989143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.432153, 1, 1, 0.52585,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.497412,-99) , 
5, 0.999524, 1, 0, 0.498925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473394,-99) , 
12, -2.26819, 0, 0, 0.497669,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0129833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498853,-99) , 
11, -1.01921, 0, 0, 0.502517,-99) , 
4, 8.78535, 0, 0, 0.503982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477226,-99) , 
5, 0.999524, 0, 0, 0.502632,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0198195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.947708, 0, 1, 0.521323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477162,-99) , 
11, -3.2098, 1, 0, 0.500641,-99) , 
0, 0.497138, 0, 0, 0.513181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495762,-99) , 
6, -0.525808, 0, 0, 0.520625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47983,-99) , 
12, -1.06321, 0, 0, 0.498452,-99) , 
0, 0.492376, 1, 0, 0.50064,-99) , 
10, -0.714306, 1, 0, 0.503503,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0220929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460566,-99) , 
12, -2.39365, 0, 0, 0.504121,-99) , 
10, -1.95385, 1, 0, 0.506083,-99) , 
NN(
0, 
0, 
-1, 4.35182, 1, -1, 0.484674,-99) , 
12, 0.745017, 1, 0, 0.499809,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.036631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381702,-99) , 
9, -1.85722, 0, 0, 0.507413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492271,-99) , 
11, 1.83165, 0, 0, 0.495722,-99) , 
9, -951.286, 0, 0, 0.50146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458413,-99) , 
12, -2.56061, 0, 0, 0.500194,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0295823);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485505,-99) , 
3, 1.64253, 0, 0, 0.508174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364689,-99) , 
9, -1.85714, 0, 0, 0.495061,-99) , 
9, -951.286, 1, 0, 0.501847,-99) , 
8, 7.15492, 0, 0, 0.50292,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0303328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.13718, 0, 1, 0.517007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397537,-99) , 
9, -1.57147, 0, 0, 0.495018,-99) , 
9, -951.286, 1, 0, 0.507693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472748,-99) , 
8, 4.21997, 0, 0, 0.489985,-99) , 
10, -1.7181, 1, 0, 0.493128,-99) , 
12, -0.267762, 0, 0, 0.500856,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0163435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495414,-99) , 
6, 0.761575, 1, 0, 0.51953,-99) , 
NN(
0, 
0, 
-1, 1.18617, 0, -1, 0.495405,-99) , 
3, 5.61021, 0, 0, 0.498131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448868,-99) , 
12, -2.52271, 0, 0, 0.496621,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0165117);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494538,-99) , 
11, 0.397477, 0, 0, 0.496493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47706,-99) , 
12, 3.35768, 1, 0, 0.495352,-99) , 
3, 6.26238, 0, 0, 0.496479,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0188345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49841,-99) , 
12, 0.0972126, 0, 0, 0.503382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454026,-99) , 
12, -2.52668, 0, 0, 0.501669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466466,-99) , 
9, -951.286, 1, 0, 0.489068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450226,-99) , 
6, -0.812049, 1, 0, 0.478122,-99) , 
12, 2.06512, 1, 0, 0.498562,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0204914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.617731, 0, 1, 0.508888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491309,-99) , 
6, 0.0461398, 1, 0, 0.499328,-99) , 
0, 0.499995, 0, 0, 0.502539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4594,-99) , 
8, 1.28704, 0, 0, 0.49283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443454,-99) , 
11, 0.669225, 0, 0, 0.479846,-99) , 
8, 1.61891, 0, 0, 0.500147,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00860631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.0299, 0, 1, 0.502182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465228,-99) , 
5, 0.999728, 0, 0, 0.50048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475413,-99) , 
5, 0.999048, 0, 0, 0.499737,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0118153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499908,-99) , 
11, -3.70734, 1, 0, 0.502611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437488,-99) , 
10, -1.39837, 1, 0, 0.479067,-99) , 
12, -2.0961, 0, 0, 0.500922,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.478318,-99) , 
12, 3.27805, 1, 0, 0.499584,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0147059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0720236, 1, 1, 0.513561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49196,-99) , 
3, 2.66804, 0, 0, 0.498956,-99) , 
0, 0.5014, 0, 0, 0.50188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477907,-99) , 
0, 0.505709, 1, 0, 0.500968,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0139658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496062,-99) , 
2, -0.218116, 1, 0, 0.497194,-99) , 
5, 0.999048, 1, 0, 0.498777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465875,-99) , 
4, 9.33163, 1, 0, 0.497826,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0273374);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477564,-99) , 
5, 0.999887, 0, 0, 0.509944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395822,-99) , 
9, -1.85698, 0, 0, 0.49731,-99) , 
9, -951.286, 1, 0, 0.503823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469104,-99) , 
5, 0.999524, 0, 0, 0.502091,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0137475);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497081,-99) , 
11, 0.619848, 0, 0, 0.498867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447006,-99) , 
12, 1.29604, 1, 0, 0.47357,-99) , 
10, 1.85713, 1, 0, 0.497415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461878,-99) , 
12, 4.21549, 1, 0, 0.496255,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0234536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.81623, 0, 1, 0.511704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454047,-99) , 
0, 0.498096, 1, 0, 0.479671,-99) , 
6, -0.927497, 0, 0, 0.507918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494762,-99) , 
11, -1.94344, 0, 0, 0.497673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449298,-99) , 
12, 0.87852, 1, 0, 0.494747,-99) , 
6, -0.238739, 1, 0, 0.501073,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00771946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47186,-99) , 
12, -2.5711, 0, 0, 0.499774,-99) , 
11, 0.81381, 0, 0, 0.500781,-99) , 
NN(
0, 
0, 
-1, 2.43138, 0, -1, 0.477788,-99) , 
12, 3.09326, 1, 0, 0.499241,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0326605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.822924, 1, 1, 0.521042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464826,-99) , 
10, -0.99999, 0, 0, 0.500763,-99) , 
11, -3.31539, 1, 0, 0.50535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49266,-99) , 
10, 1.5718, 0, 0, 0.499308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369499,-99) , 
9, -1.85712, 0, 0, 0.49014,-99) , 
9, -951.286, 1, 0, 0.497903,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0270472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.55672, 1, 1, 0.520482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495225,-99) , 
6, -0.179577, 1, 0, 0.499409,-99) , 
2, 0.0706818, 0, 0, 0.502775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498015,-99) , 
0, 0.500949, 0, 0, 0.51844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478097,-99) , 
0, 0.492376, 1, 0, 0.48208,-99) , 
13, 1.50264, 1, 0, 0.49002,-99) , 
13, 2.76364, 0, 0, 0.498067,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0233974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49432,-99) , 
12, -1.40146, 0, 0, 0.509577,-99) , 
NN(
0, 
0, 
-1, 0.501265, 1, -1, 0.486967,-99) , 
12, 1.64464, 1, 0, 0.50567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494868,-99) , 
0, 0.497092, 0, 0, 0.500245,-99) , 
NN(
0, 
0, 
-1, -1.57152, 0, -1, 0.485921,-99) , 
9, -951.286, 1, 0, 0.493236,-99) , 
0, 0.49809, 0, 0, 0.499643,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0272724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.87313, 1, 1, 0.511145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450054,-99) , 
10, -0.885773, 1, 0, 0.493358,-99) , 
12, -1.62736, 0, 0, 0.506591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485802,-99) , 
10, 0.428691, 0, 0, 0.496093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452426,-99) , 
6, 0.617679, 1, 0, 0.493456,-99) , 
11, -2.40214, 1, 0, 0.500365,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.020968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.513128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495516,-99) , 
6, 0.712834, 0, 0, 0.498288,-99) , 
10, -0.428435, 1, 0, 0.502914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476087,-99) , 
2, 0.0779996, 1, 0, 0.494644,-99) , 
NN(
0, 
0, 
-1, 0.499044, 0, -1, 0.463113,-99) , 
2, -0.0716195, 0, 0, 0.485638,-99) , 
4, 4.73378, 1, 0, 0.499633,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0193878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.36794, 0, 1, 0.515753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490472,-99) , 
6, -0.691819, 1, 0, 0.499925,-99) , 
8, 4.19107, 0, 0, 0.505581,-99) , 
NN(
0, 
0, 
-1, -0.86032, 0, -1, 0.493029,-99) , 
10, 0.142961, 1, 0, 0.499439,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0209554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.203191, 0, 1, 0.517689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491696,-99) , 
0, 0.502852, 1, 0, 0.513602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495522,-99) , 
10, -0.141598, 1, 0, 0.50137,-99) , 
NN(
0, 
0, 
-1, -0.479705, 1, -1, 0.487784,-99) , 
3, 2.91938, 0, 0, 0.497974,-99) , 
11, -1.31231, 0, 0, 0.502354,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0204017);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.75577, 0, 1, 0.506886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484733,-99) , 
3, 1.59333, 0, 0, 0.499692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439463,-99) , 
13, 3.97184, 1, 0, 0.494108,-99) , 
12, 0.795688, 1, 0, 0.503188,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0201766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494333,-99) , 
0, 0.499224, 1, 0, 0.503358,-99) , 
NN(
0, 
0, 
-1, 0.0892304, 1, -1, 0.489131,-99) , 
6, 0.521662, 1, 0, 0.500533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471367,-99) , 
6, -0.433537, 0, 0, 0.497385,-99) , 
NN(
0, 
0, 
-1, 0.503532, 1, -1, 0.472973,-99) , 
0, 0.504893, 0, 0, 0.483664,-99) , 
0, 0.502852, 1, 0, 0.498168,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0079844);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523759,-99) , 
NN(
0, 
0, 
-1, -2.59236, 0, -1, 0.497096,-99) , 
11, 2.07299, 0, 0, 0.498487,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0218897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494401,-99) , 
0, 0.500947, 0, 0, 0.49804,-99) , 
5, 0.999048, 1, 0, 0.499226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479402,-99) , 
9, -951.286, 0, 0, 0.506788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418887,-99) , 
3, 4.93055, 1, 0, 0.480776,-99) , 
10, 1.5715, 1, 0, 0.497473,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0197015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497265,-99) , 
0, 0.502852, 0, 0, 0.500017,-99) , 
10, 1.85714, 0, 0, 0.501481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455951,-99) , 
6, -0.844943, 1, 0, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446349,-99) , 
8, 1.84648, 1, 0, 0.486247,-99) , 
12, 1.74667, 1, 0, 0.499044,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0264243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.95714, 1, 1, 0.509089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486304,-99) , 
0, 0.505981, 0, 0, 0.491679,-99) , 
0, 0.5019, 1, 0, 0.505703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472914,-99) , 
12, -2.07746, 0, 0, 0.496949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43972,-99) , 
10, -0.35514, 1, 0, 0.487792,-99) , 
12, -1.29486, 0, 0, 0.502116,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.036618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472851,-99) , 
6, 0.8564, 1, 0, 0.509344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429447,-99) , 
9, -951.286, 1, 0, 0.471162,-99) , 
12, 0.497126, 1, 0, 0.505166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467582,-99) , 
5, 0.999991, 0, 0, 0.498429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414167,-99) , 
5, 0.999905, 0, 0, 0.494152,-99) , 
3, 3.31307, 0, 0, 0.49964,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0271498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484151,-99) , 
12, 0.49229, 1, 0, 0.514234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485499,-99) , 
3, 5.46484, 0, 0, 0.497015,-99) , 
0, 0.499995, 1, 0, 0.508815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494572,-99) , 
9, -951.286, 0, 0, 0.512044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488229,-99) , 
0, 0.500947, 0, 0, 0.492551,-99) , 
10, 0.999999, 0, 0, 0.496191,-99) , 
8, 4.22561, 0, 0, 0.501267,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0154993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497762,-99) , 
3, 4.5656, 0, 0, 0.50457,-99) , 
NN(
0, 
0, 
-1, -1.13257, 0, -1, 0.493765,-99) , 
10, -0.142873, 1, 0, 0.4979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474543,-99) , 
12, -2.37309, 0, 0, 0.496921,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.023767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68715, 0, 1, 0.546616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495624,-99) , 
11, 2.17642, 0, 0, 0.497491,-99) , 
7, 0.0101874, 0, 0, 0.501545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388252,-99) , 
7, 0.0237713, 1, 0, 0.498648,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0176481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142943, 0, 1, 0.525537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491633,-99) , 
2, 0.00305349, 0, 0, 0.504397,-99) , 
2, -0.0717387, 1, 0, 0.508705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499253,-99) , 
11, -3.74704, 1, 0, 0.516407,-99) , 
NN(
0, 
0, 
-1, 1.82585, 1, -1, 0.494139,-99) , 
10, -1.28552, 1, 0, 0.496402,-99) , 
0, 0.495233, 1, 0, 0.499438,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0226576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.89741, 0, 1, 0.555726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48895,-99) , 
12, 1.39602, 1, 0, 0.526745,-99) , 
NN(
NN(
0, 
0, 
-1, 1.59427, 0, 1, 0.505954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443502,-99) , 
9, -1.28595, 0, 0, 0.495536,-99) , 
9, -951.286, 1, 0, 0.500852,-99) , 
10, 1.57141, 0, 0, 0.503505,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.00874077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495339,-99) , 
6, 0.791247, 1, 0, 0.51799,-99) , 
NN(
0, 
0, 
-1, -1.85696, 1, 1, 0.501748,-99) , 
8, 6.39053, 0, 0, 0.503178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477669,-99) , 
0, 0.490472, 0, 0, 0.502081,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0197941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.52015, 1, 1, 0.530549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479529,-99) , 
12, -1.82662, 0, 0, 0.520634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487791,-99) , 
5, 0.999983, 0, 0, 0.498026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44521,-99) , 
5, 0.99965, 0, 0, 0.496406,-99) , 
6, 0.617618, 0, 0, 0.500113,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0196012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494485,-99) , 
6, -0.334175, 1, 0, 0.500544,-99) , 
10, 2.14284, 0, 0, 0.5019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474879,-99) , 
2, 0.078224, 1, 0, 0.495514,-99) , 
NN(
0, 
0, 
-1, 0.132804, 0, -1, 0.468744,-99) , 
2, -0.0714192, 0, 0, 0.487715,-99) , 
4, 4.74841, 1, 0, 0.499225,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0127288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143093, 0, 1, 0.542785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474958,-99) , 
12, 1.45975, 1, 0, 0.498234,-99) , 
11, 0.42515, 0, 0, 0.500654,-99) , 
NN(
0, 
0, 
-1, 0.732878, 0, -1, 0.47229,-99) , 
12, 3.08085, 1, 0, 0.498759,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0166282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495028,-99) , 
10, -1.00001, 1, 0, 0.497786,-99) , 
11, 0.7829, 0, 0, 0.499243,-99) , 
NN(
0, 
0, 
-1, -0.907816, 1, -1, 0.477908,-99) , 
12, 3.09326, 1, 0, 0.497831,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0253767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499719,-99) , 
12, -0.551891, 0, 0, 0.517833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494127,-99) , 
12, -0.39824, 1, 0, 0.498053,-99) , 
11, -2.92391, 1, 0, 0.502536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491248,-99) , 
8, 4.55379, 0, 0, 0.503712,-99) , 
NN(
0, 
0, 
-1, -1.71497, 0, -1, 0.472868,-99) , 
10, -0.819985, 1, 0, 0.488988,-99) , 
12, -1.22685, 0, 0, 0.499623,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0104211);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45384,-99) , 
4, 9.37272, 1, 0, 0.502649,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0157636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493528,-99) , 
8, 4.58516, 0, 0, 0.497521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471922,-99) , 
12, -2.56061, 0, 0, 0.496736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46803,-99) , 
0, 0.490472, 0, 0, 0.495507,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0215169);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481167,-99) , 
12, -2.33517, 0, 0, 0.50528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473167,-99) , 
2, 0.214015, 1, 0, 0.50422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535167,-99) , 
NN(
0, 
0, 
-1, 0.00258771, 0, -1, 0.471217,-99) , 
2, -0.0721639, 1, 0, 0.486426,-99) , 
0, 0.502852, 1, 0, 0.501751,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0135681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.50909,-99) , 
NN(
0, 
0, 
-1, 1.46584, 0, -1, 0.497055,-99) , 
10, 0.714345, 0, 0, 0.500519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510482,-99) , 
NN(
0, 
0, 
-1, 0.969409, 0, -1, 0.463146,-99) , 
10, 0.157061, 1, 0, 0.483173,-99) , 
6, 0.712839, 1, 0, 0.498809,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0158761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495447,-99) , 
4, 1.00113, 1, 0, 0.498392,-99) , 
5, 0.999524, 1, 0, 0.500209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460452,-99) , 
4, 9.37272, 1, 0, 0.499057,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0137842);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52852,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0720218, 0, 1, 0.503831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464901,-99) , 
10, -0.601863, 1, 0, 0.487468,-99) , 
12, -1.155, 0, 0, 0.500167,-99) , 
8, 6.8435, 0, 0, 0.501519,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0169769);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521623,-99) , 
NN(
0, 
0, 
-1, 1.69948, 0, -1, 0.492148,-99) , 
0, 0.490472, 1, 0, 0.493509,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0194623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.532702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478052,-99) , 
6, 0.518109, 1, 0, 0.51834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475167,-99) , 
12, -2.1465, 0, 0, 0.505468,-99) , 
NN(
0, 
0, 
-1, 3.31239, 1, -1, 0.49494,-99) , 
3, 4.27759, 0, 0, 0.498426,-99) , 
10, 1.57142, 0, 0, 0.500431,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0185821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486369,-99) , 
12, 1.52534, 1, 0, 0.527041,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999525, 1, 1, 0.505161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480515,-99) , 
10, -0.686524, 1, 0, 0.487357,-99) , 
0, 0.494281, 0, 0, 0.501964,-99) , 
10, 1.8572, 0, 0, 0.503599,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.013268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0686848, 1, 1, 0.510521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497877,-99) , 
0, 0.505845, 0, 0, 0.499532,-99) , 
0, 0.495233, 1, 0, 0.502238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454495,-99) , 
10, 2.14285, 1, 0, 0.500638,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0268179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498356,-99) , 
10, -0.428235, 1, 0, 0.507315,-99) , 
0, 0.493329, 1, 0, 0.516672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479011,-99) , 
1, 0.00744865, 1, 0, 0.509897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474319,-99) , 
2, -0.00709449, 1, 0, 0.492701,-99) , 
2, 0.00359286, 0, 0, 0.501763,-99) , 
2, -0.0712183, 1, 0, 0.504284,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0190436);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493681,-99) , 
4, 8.68467, 0, 0, 0.495328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463347,-99) , 
5, 0.999524, 0, 0, 0.494018,-99) , 
2, 0.213864, 0, 0, 0.495403,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0161391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471944,-99) , 
6, -0.809647, 0, 0, 0.500324,-99) , 
11, 0.89989, 0, 0, 0.50277,-99) , 
NN(
0, 
0, 
-1, 2.1798, 0, -1, 0.477777,-99) , 
12, 3.27805, 1, 0, 0.50132,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0128251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454406,-99) , 
6, 0.721895, 1, 0, 0.499366,-99) , 
6, 0.807991, 0, 0, 0.501073,-99) , 
NN(
0, 
0, 
-1, 4.6055, 1, -1, 0.490029,-99) , 
0, 0.496186, 0, 0, 0.497617,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.01691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.426961, 0, 1, 0.52566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488591,-99) , 
4, 4.35557, 1, 0, 0.51761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534336,-99) , 
NN(
0, 
0, 
-1, 0.797099, 1, -1, 0.495123,-99) , 
3, 6.26238, 0, 0, 0.496828,-99) , 
0, 0.493329, 1, 0, 0.499737,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0185755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.23428, 0, 1, 0.528771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446444,-99) , 
8, 2.48481, 1, 0, 0.502837,-99) , 
12, 1.30068, 1, 0, 0.509907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552507,-99) , 
NN(
0, 
0, 
-1, 0.662725, 1, -1, 0.496547,-99) , 
10, -1.85689, 1, 0, 0.498571,-99) , 
11, -1.41741, 0, 0, 0.501866,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0185411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0078691, 0, 1, 0.506124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370347,-99) , 
7, 0.0236056, 1, 0, 0.502667,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0115374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49862,-99) , 
2, -0.0754763, 1, 0, 0.501037,-99) , 
4, 9.12912, 0, 0, 0.502487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460102,-99) , 
5, 0.999048, 0, 0, 0.501282,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0218051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49267,-99) , 
6, 0.861282, 1, 0, 0.527256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49221,-99) , 
6, 0.290674, 1, 0, 0.502795,-99) , 
6, 0.806928, 0, 0, 0.504383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47055,-99) , 
10, 1.28595, 1, 0, 0.496827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454047,-99) , 
0, 0.495234, 0, 0, 0.486133,-99) , 
12, 1.99143, 1, 0, 0.501886,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0123399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.55584, 0, 1, 0.519568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467974,-99) , 
4, 6.26697, 1, 0, 0.498014,-99) , 
6, 0.61676, 0, 0, 0.501142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469902,-99) , 
4, 9.34278, 1, 0, 0.500241,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0147003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539128,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.494706,-99) , 
2, 0.214101, 0, 0, 0.496176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460377,-99) , 
5, 0.999048, 0, 0, 0.495167,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0178595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491071,-99) , 
4, 3.26003, 1, 0, 0.520151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476529,-99) , 
8, 1.88317, 0, 0, 0.501241,-99) , 
11, 0.665141, 0, 0, 0.50326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459852,-99) , 
12, -2.53843, 0, 0, 0.501986,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0136593);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49721,-99) , 
11, -0.628695, 0, 0, 0.499958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468697,-99) , 
12, 2.54816, 1, 0, 0.498616,-99) , 
11, 1.83707, 0, 0, 0.499828,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_6_8::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_6_8::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_6_8 *ReadBDT_maker_LHC19c2b_6_8(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_6_8(theInpVar);
  }
}
