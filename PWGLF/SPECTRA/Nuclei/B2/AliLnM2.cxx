/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "AliLnM2.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(AliLnM2) 

 AliLnM2::AliLnM2(const char *name, const char *title, 
                        RooAbsReal& _x,
                        RooAbsReal& _mu,
                        RooAbsReal& _sigma,
                        RooAbsReal& _tau,
                        RooAbsReal& _p) :
   RooAbsPdf(name,title), 
   x("x","x",this,_x),
   mu("mu","mu",this,_mu),
   sigma("sigma","sigma",this,_sigma),
   tau("tau","tau",this,_tau),
   p("p","p",this,_p)
 { 
 } 


 AliLnM2::AliLnM2(const AliLnM2& other, const char* name) :  
   RooAbsPdf(other,name), 
   x("x",this,other.x),
   mu("mu",this,other.mu),
   sigma("sigma",this,other.sigma),
   tau("tau",this,other.tau),
   p("p",this,other.p)
 { 
 } 

Double_t AliLnM2::evaluate() const
{
//
// m^2 shape
//
	if( x <= mu + tau)
	{
		return TMath::Exp(-(x-mu)*(x-mu)/(2.*sigma*sigma));
	}
	
	Double_t lambda = 2.*tau*TMath::Sqrt(p*p+mu+tau)/(sigma*sigma);
	Double_t a = TMath::Exp(-tau*tau/(2.*sigma*sigma)+2.*tau*(p*p+mu+tau)/(sigma*sigma));
	
	return a*TMath::Exp(-lambda*TMath::Sqrt(p*p + x));
}
