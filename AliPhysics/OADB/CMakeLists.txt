# **************************************************************************
# * Copyright(c) 1998-2014, ALICE Experiment at CERN, All rights reserved. *
# *                                                                        *
# * Author: The ALICE Off-line Project.                                    *
# * Contributors are mentioned in the code where appropriate.              *
# *                                                                        *
# * Permission to use, copy, modify and distribute this software and its   *
# * documentation strictly for non-commercial purposes is hereby granted   *
# * without fee, provided that the above copyright notice appears in all   *
# * copies and that both the copyright notice and this permission notice   *
# * appear in the supporting documentation. The authors make no claims     *
# * about the suitability of this software for any purpose. It is          *
# * provided "as is" without express or implied warranty.                  *
# **************************************************************************

# Module
set(MODULE OADB)
add_definitions(-D_MODULE_="${MODULE}")

# Module include folder
include_directories(${AliPhysics_SOURCE_DIR}/${MODULE})

# Additional include folders in alphabetical order except ROOT
include_directories(${ROOT_INCLUDE_DIRS}
                    ${AliPhysics_SOURCE_DIR}/OADB/COMMON/MULTIPLICITY
                   )

# Sources
set(SRCS
    AliAnalysisUtils.cxx
    AliBackgroundSelection.cxx
    AliCentralitySelectionTask.cxx
    AliCollisionNormalization.cxx
    AliCollisionNormalizationTask.cxx
    AliEPSelectionTask.cxx
    AliPhysicsSelection.cxx
    AliPhysicsSelectionTask.cxx
    AliTriggerAnalysis.cxx
    AliOADBCentrality.cxx
    AliOADBFillingScheme.cxx
    AliOADBPhysicsSelection.cxx
    AliOADBTrackFix.cxx
    AliOADBTriggerAnalysis.cxx
    AliPPVsMultUtils.cxx
    AliEventCuts.cxx
    AliTimeRangeMasking.cxx
    AliTimeRangeCut.cxx
    COMMON/MULTIPLICITY/AliMultVariable.cxx
    COMMON/MULTIPLICITY/AliMultEstimator.cxx
    COMMON/MULTIPLICITY/AliMultInput.cxx
    COMMON/MULTIPLICITY/AliMultSelection.cxx
    COMMON/MULTIPLICITY/AliMultSelectionCuts.cxx
    COMMON/MULTIPLICITY/AliOADBMultSelection.cxx
    COMMON/MULTIPLICITY/AliMultSelectionTask.cxx
    COMMON/MULTIPLICITY/AliMultSelectionCalibrator.cxx
    COMMON/MULTIPLICITY/AliMultSelectionCalibratorMC.cxx
    COMMON/MULTIPLICITY/AliMultGlauberNBDFitter.cxx
)

# Headers from sources
string(REPLACE ".cxx" ".h" HDRS "${SRCS}")

# Generate the dictionary
# It will create G_ARG1.cxx and G_ARG1.h / ARG1 = function first argument
get_directory_property(incdirs INCLUDE_DIRECTORIES)
generate_dictionary("${MODULE}" "${MODULE}LinkDef.h" "${HDRS}" "${incdirs}")

# Generate the ROOT map
# Dependecies
set(LIBDEPS STEERBase AOD ESD STEER ANALYSIS ANALYSISalice CDB ITSrec VZERObase)
generate_rootmap("${MODULE}" "${LIBDEPS}" "${CMAKE_CURRENT_SOURCE_DIR}/${MODULE}LinkDef.h")

# Generate a PARfile target for this library
file(GLOB_RECURSE OADB_ROOTFILES RELATIVE "${CMAKE_CURRENT_SOURCE_DIR}" "*.root")
add_target_parfile(${MODULE} "${SRCS}" "${HDRS}" "${MODULE}LinkDef.h" "${LIBDEPS}" "COMMON/MULTIPLICITY" "${OADB_ROOTFILES}")

# Add a library to the project using the specified source files
add_library_tested(${MODULE} SHARED ${SRCS} G__${MODULE}.cxx)

# Additional compilation flags
set_target_properties(${MODULE} PROPERTIES COMPILE_FLAGS "")

# Linking the library
target_link_libraries(${MODULE} ${LIBDEPS})

# System dependent: Modify the way the library is build
if(${CMAKE_SYSTEM} MATCHES Darwin)
    set_target_properties(${MODULE} PROPERTIES LINK_FLAGS "-undefined dynamic_lookup")
endif(${CMAKE_SYSTEM} MATCHES Darwin)

# Installation
install(TARGETS ${MODULE}
  ARCHIVE DESTINATION lib
  LIBRARY DESTINATION lib)
install(FILES ${HDRS} DESTINATION include)

if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/EMCAL)
  install(DIRECTORY EMCAL
                    PHOS
                    PWG
                    PWGCF
                    PWGPP
                    PWGLF
                    PWGJE
                    PWGLF
                    PWGUD
          DESTINATION OADB)
endif()

install(DIRECTORY COMMON
                  macros
        DESTINATION OADB)

message(STATUS "${MODULE} enabled")
