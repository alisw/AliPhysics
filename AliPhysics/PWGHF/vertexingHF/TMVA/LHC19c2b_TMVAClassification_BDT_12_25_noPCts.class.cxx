#include "LHC19c2b_TMVAClassification_BDT_12_25_noPCts.class.h"

double ReadBDT_LHC19c2b_12_25_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_12_25_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.497131321703833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.858338, 1, 1, 0.767662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464894,-99) , 
7, 0.720295, 1, 0, 0.568295,-99) , 
8, -3.34554, 1, 0, 0.663026,-99) , 
NN(
0, 
0, 
-1, 0.711778, 1, -1, 0.157751,-99) , 
7, 1.28629, 1, 0, 0.501938,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.428765);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.735265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405314,-99) , 
3, 6.55331, 1, 0, 0.710559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385494,-99) , 
2, 0.0864636, 1, 0, 0.531333,-99) , 
7, 0.267415, 1, 0, 0.634658,-99) , 
NN(
0, 
0, 
-1, 1.77637, 1, -1, 0.196212,-99) , 
7, 1.28701, 1, 0, 0.499513,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.328808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.002621, 1, 1, 0.704442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.757113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4693,-99) , 
1, 0.00567397, 0, 0, 0.489503,-99) , 
8, -3.35686, 1, 0, 0.571904,-99) , 
NN(
0, 
0, 
-1, 2.20707, 1, -1, 0.114754,-99) , 
9, 0.575185, 1, 0, 0.487066,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.365673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375785,-99) , 
2, 0.14588, 1, 0, 0.604949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30315,-99) , 
2, -0.136831, 0, 0, 0.577643,-99) , 
NN(
0, 
0, 
-1, 0.707235, 1, -1, 0.184385,-99) , 
7, 1.57042, 1, 0, 0.484742,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.293568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0039028, 1, 1, 0.640903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439528,-99) , 
1, 0.00198212, 0, 0, 0.485732,-99) , 
7, -0.213807, 1, 0, 0.533406,-99) , 
NN(
0, 
0, 
-1, 2.20804, 1, -1, 0.146528,-99) , 
9, 0.575185, 1, 0, 0.465954,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.20059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0138577, 0, 1, 0.767643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495889,-99) , 
5, 0.00439602, 0, 0, 0.520676,-99) , 
1, -0.00440783, 1, 0, 0.546866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.163167,-99) , 
9, 0.610822, 1, 0, 0.485133,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.265014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000925943, 1, 1, 0.589995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351651,-99) , 
3, 6.87778, 1, 0, 0.571999,-99) , 
NN(
0, 
0, 
-1, 0.880011, 1, -1, 0.20626,-99) , 
9, 0.498741, 1, 0, 0.50762,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.227386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00374104, 0, 1, 0.568675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39,-99) , 
5, 0.00481337, 0, 0, 0.430006,-99) , 
7, 1.06389, 1, 0, 0.531873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.135992,-99) , 
9, 0.929733, 1, 0, 0.488751,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.227509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364314,-99) , 
2, 0.146288, 1, 0, 0.549304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276914,-99) , 
2, -0.166824, 0, 0, 0.52982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.168952,-99) , 
7, 2.1412, 1, 0, 0.488763,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.119831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.418499, 1, 1, 0.514345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34551,-99) , 
3, 6.59017, 1, 0, 0.499633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.18082,-99) , 
9, 0.835691, 1, 0, 0.463599,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.157851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447437,-99) , 
7, -0.0193427, 1, 0, 0.476778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284838,-99) , 
2, -0.19705, 0, 0, 0.467158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.172884,-99) , 
9, 0.95171, 1, 0, 0.440562,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.191271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502852, 1, 1, 0.622891,-99) , 
NN(
0, 
0, 
-1, 6.55688, 1, -1, 0.450771,-99) , 
1, -0.00165388, 1, 0, 0.496644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.167907,-99) , 
9, 0.961669, 1, 0, 0.464642,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.117567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400442,-99) , 
2, 0.1463, 1, 0, 0.5106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321378,-99) , 
2, -0.166824, 0, 0, 0.497717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.20458,-99) , 
9, 0.961669, 1, 0, 0.473679,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.126461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4942,-99) , 
0, 0.49238, 1, 0, 0.507852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375966,-99) , 
3, 6.59017, 1, 0, 0.496471,-99) , 
NN(
0, 
0, 
-1, 1.00918, 1, -1, 0.293496,-99) , 
9, 0.298645, 1, 0, 0.456254,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.117106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.993669, 1, 1, 0.526846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416772,-99) , 
5, 0.00481337, 0, 0, 0.438497,-99) , 
9, -0.0872983, 1, 0, 0.506728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.227329,-99) , 
9, 0.957881, 1, 0, 0.48224,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.163252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.68723, 1, 1, 0.691329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.683364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463488,-99) , 
1, 0.0053661, 0, 0, 0.480603,-99) , 
1, -0.00408005, 1, 0, 0.502196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.211789,-99) , 
9, 1.0017, 1, 0, 0.478672,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.13526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.66931, 1, 1, 0.661103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39413,-99) , 
2, -0.0994913, 0, 0, 0.496797,-99) , 
1, -0.00317125, 1, 0, 0.520094,-99) , 
NN(
0, 
0, 
-1, 2.20804, 1, -1, 0.288697,-99) , 
9, 0.572965, 1, 0, 0.486586,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.145758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473926,-99) , 
8, -2.8512, 1, 0, 0.508836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.204825,-99) , 
7, -1.04687, 1, 0, 0.420831,-99) , 
9, -2.18996, 0, 0, 0.496479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257363,-99) , 
7, 2.14293, 1, 0, 0.474147,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0719858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358748,-99) , 
2, 0.179023, 1, 0, 0.492207,-99) , 
NN(
0, 
0, 
-1, -3.04636, 0, -1, 0.344552,-99) , 
9, -2.69672, 0, 0, 0.482946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254252,-99) , 
9, 0.967511, 1, 0, 0.464681,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.223107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434488,-99) , 
5, 0.00274305, 0, 0, 0.505299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343975,-99) , 
5, 0.011521, 1, 0, 0.496947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268619,-99) , 
7, 2.14289, 1, 0, 0.475881,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0695099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496014,-99) , 
8, -4.69156, 1, 0, 0.503418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372831,-99) , 
2, -0.153242, 0, 0, 0.494192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287313,-99) , 
9, 0.961669, 1, 0, 0.477632,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0972212);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497554,-99) , 
1, -0.0014408, 1, 0, 0.520824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358659,-99) , 
3, 7.02741, 1, 0, 0.508973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293747,-99) , 
9, 0.895552, 1, 0, 0.489546,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.10097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477641,-99) , 
9, -1.43407, 0, 0, 0.520595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404502,-99) , 
2, -0.153242, 0, 0, 0.51189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335371,-99) , 
7, 2.14293, 1, 0, 0.497102,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0880215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0117716, 1, 1, 0.619279,-99) , 
NN(
0, 
0, 
-1, -2.8118, 0, -1, 0.48412,-99) , 
1, 0.00309911, 0, 0, 0.504622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302601,-99) , 
9, 0.995992, 1, 0, 0.489598,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.128639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496577,-99) , 
6, 0.146663, 0, 0, 0.552511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450842,-99) , 
1, -0.00294223, 1, 0, 0.467903,-99) , 
6, -951.286, 0, 0, 0.521419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339041,-99) , 
7, 2.14295, 1, 0, 0.505063,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.114616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496184, 1, 1, 0.54012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372142,-99) , 
2, -0.166824, 0, 0, 0.528155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339102,-99) , 
9, 0.85551, 1, 0, 0.510511,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.113085);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484542,-99) , 
6, -951.286, 0, 0, 0.532871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333204,-99) , 
2, -0.201743, 0, 0, 0.521969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341385,-99) , 
2, 0.199574, 1, 0, 0.512505,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.146853);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45697,-99) , 
0, 0.502852, 1, 0, 0.609207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465191,-99) , 
1, 0.00136164, 0, 0, 0.509082,-99) , 
1, -0.00318612, 1, 0, 0.523589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369294,-99) , 
7, 1.85911, 1, 0, 0.503732,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.101875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445666,-99) , 
9, -2.93325, 0, 0, 0.59757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273106,-99) , 
9, -2.06832, 0, 0, 0.496432,-99) , 
8, -4.14665, 1, 0, 0.509801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387426,-99) , 
9, 0.65422, 1, 0, 0.495681,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.139578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.48531, 1, 1, 0.613195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42112,-99) , 
0, 0.500005, 1, 0, 0.472673,-99) , 
3, 3.33378, 1, 0, 0.571043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326303,-99) , 
9, -2.82047, 0, 0, 0.533252,-99) , 
NN(
0, 
0, 
-1, -0.950909, 0, -1, 0.447345,-99) , 
7, 0.145477, 1, 0, 0.478957,-99) , 
1, -0.00165388, 1, 0, 0.502988,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0727608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.998828, 1, 1, 0.522862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366519,-99) , 
2, -0.187021, 0, 0, 0.513252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335895,-99) , 
2, 0.209197, 1, 0, 0.504473,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0682945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.697249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48971,-99) , 
8, -4.43599, 1, 0, 0.498333,-99) , 
NN(
0, 
0, 
-1, -2.9982, 1, -1, 0.378385,-99) , 
9, -2.6911, 0, 0, 0.490466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382093,-99) , 
8, -1.32783, 1, 0, 0.4797,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.084078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00455213, 0, 1, 0.585884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408039,-99) , 
8, -1.40099, 1, 0, 0.498884,-99) , 
0, 0.49524, 1, 0, 0.520281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378041,-99) , 
3, 7.04013, 1, 0, 0.510069,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0589777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495772,-99) , 
9, -2.76711, 0, 0, 0.589414,-99) , 
NN(
0, 
0, 
-1, -1.9247, 0, -1, 0.484445,-99) , 
7, -0.998422, 1, 0, 0.49369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345424,-99) , 
2, 0.195755, 1, 0, 0.485759,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0883117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494554, 0, 1, 0.553567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430736,-99) , 
8, -1.63892, 1, 0, 0.533614,-99) , 
NN(
NN(
0, 
0, 
-1, -0.345974, 0, -1, 0.485715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29831,-99) , 
7, -0.737509, 1, 0, 0.423228,-99) , 
9, -1.67187, 0, 0, 0.471038,-99) , 
0, 0.496186, 1, 0, 0.49093,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.06626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.16546, 1, 1, 0.520312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346606,-99) , 
9, -2.90482, 0, 0, 0.512777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380803,-99) , 
9, 0.956949, 1, 0, 0.50286,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.116321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463877,-99) , 
5, 0.00243459, 0, 0, 0.505361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349142,-99) , 
5, 0.0127885, 1, 0, 0.499531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400767,-99) , 
7, 2.14326, 1, 0, 0.491471,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.10479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.456734, 1, 1, 0.599148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407798,-99) , 
7, -0.685794, 1, 0, 0.497058,-99) , 
7, -0.14177, 0, 0, 0.565642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469762,-99) , 
3, 0.791848, 1, 0, 0.483054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379831,-99) , 
3, 7.04851, 1, 0, 0.474845,-99) , 
1, -0.00229635, 1, 0, 0.492573,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.100847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411009,-99) , 
9, 0.953006, 1, 0, 0.527306,-99) , 
NN(
0, 
0, 
-1, 0.497151, 0, -1, 0.404526,-99) , 
9, -2.71153, 0, 0, 0.520347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347181,-99) , 
2, -0.196956, 0, 0, 0.510545,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0598293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.434388, 1, 1, 0.561406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417332,-99) , 
9, -2.51668, 0, 0, 0.503205,-99) , 
2, -0.0299377, 1, 0, 0.515857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400348,-99) , 
2, -0.18861, 0, 0, 0.509268,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.063032);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609086,-99) , 
NN(
0, 
0, 
-1, -2.47585, 0, -1, 0.47412,-99) , 
7, -1.56983, 1, 0, 0.478444,-99) , 
0, 0.490473, 1, 0, 0.483742,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0566346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.380378, 1, 1, 0.677057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497932,-99) , 
8, -4.52524, 1, 0, 0.506008,-99) , 
3, 0.508647, 1, 0, 0.516614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329445,-99) , 
3, 8.20208, 1, 0, 0.506616,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0847634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.738014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477151,-99) , 
2, 0.0219744, 0, 0, 0.494974,-99) , 
3, 0.439284, 1, 0, 0.50562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388906,-99) , 
3, 7.02741, 1, 0, 0.49668,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.074484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.99408, 1, 1, 0.54498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484962,-99) , 
0, 0.502852, 0, 0, 0.497643,-99) , 
2, -0.00858989, 1, 0, 0.515949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396489,-99) , 
3, 7.04715, 1, 0, 0.507365,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0713869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.35842, 0, 1, 0.517821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216937,-99) , 
7, -1.29712, 1, 0, 0.420814,-99) , 
9, -2.3824, 0, 0, 0.508999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384829,-99) , 
3, 8.2051, 1, 0, 0.503188,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0542103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498118, 1, 1, 0.615271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449556,-99) , 
9, -1.99004, 0, 0, 0.496154,-99) , 
3, 0.494441, 1, 0, 0.503511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318035,-99) , 
3, 8.18935, 1, 0, 0.493445,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0566249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.29027, 0, 1, 0.678564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456064,-99) , 
9, -2.86097, 0, 0, 0.588441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49476,-99) , 
8, -1.42921, 0, 0, 0.501349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388273,-99) , 
7, 2.23695, 1, 0, 0.492632,-99) , 
7, -0.999142, 1, 0, 0.501185,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0730923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.83033, 0, 1, 0.586724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434644,-99) , 
9, -1.84306, 0, 0, 0.508213,-99) , 
8, -4.39176, 1, 0, 0.514964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422302,-99) , 
8, -2.5615, 1, 0, 0.477259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348085,-99) , 
9, -1.69201, 0, 0, 0.444313,-99) , 
2, 0.0755527, 1, 0, 0.503848,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.129018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0587093, 1, 1, 0.601861,-99) , 
NN(
0, 
0, 
-1, 1.85639, 1, -1, 0.454125,-99) , 
5, 0.00314676, 0, 0, 0.490458,-99) , 
NN(
0, 
0, 
-1, -0.00393687, 0, -1, 0.356573,-99) , 
5, 0.0110203, 1, 0, 0.483252,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0459312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.274015, 0, 1, 0.659942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484464,-99) , 
9, -0.339343, 1, 0, 0.583231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422815,-99) , 
9, -2.65135, 0, 0, 0.49857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413308,-99) , 
9, 0.899745, 1, 0, 0.492233,-99) , 
1, 0.00388765, 0, 0, 0.502146,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0629662);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500007, 1, 1, 0.581714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424919,-99) , 
0, 0.504757, 1, 0, 0.505746,-99) , 
NN(
0, 
0, 
-1, -2.35069, 0, -1, 0.357446,-99) , 
9, -2.10924, 0, 0, 0.495871,-99) , 
8, -4.45106, 1, 0, 0.5024,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.100046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.40673, 0, 1, 0.664764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35833,-99) , 
9, -2.3517, 0, 0, 0.543914,-99) , 
8, -4.48319, 1, 0, 0.585283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474941,-99) , 
7, -0.208874, 1, 0, 0.481432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369569,-99) , 
9, -1.87843, 0, 0, 0.477109,-99) , 
8, -3.81311, 1, 0, 0.496845,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0771812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.23555, 0, 1, 0.576605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3658,-99) , 
1, 0.00578416, 1, 0, 0.488282,-99) , 
3, 3.01587, 1, 0, 0.545607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411545,-99) , 
7, 2.00929, 1, 0, 0.499492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294313,-99) , 
7, -1.35993, 1, 0, 0.409717,-99) , 
9, -2.36364, 0, 0, 0.491,-99) , 
1, 0.00145893, 0, 0, 0.507389,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0456675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.679215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428437,-99) , 
7, -1.53922, 1, 0, 0.511084,-99) , 
7, -1.08333, 0, 0, 0.566957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398118,-99) , 
7, -0.694129, 0, 0, 0.499191,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.398916,-99) , 
9, -2.04751, 0, 0, 0.492214,-99) , 
8, -4.39662, 1, 0, 0.498097,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.085115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.39662, 1, 1, 0.522729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436487,-99) , 
0, 0.503802, 0, 0, 0.448484,-99) , 
5, 0.00121732, 0, 0, 0.495605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345016,-99) , 
5, 0.0127885, 1, 0, 0.489717,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0712345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493331, 0, 1, 0.567266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461968,-99) , 
0, 0.49129, 0, 0, 0.502203,-99) , 
1, 0.00260292, 0, 0, 0.514918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472442,-99) , 
7, -0.694206, 1, 0, 0.478833,-99) , 
NN(
0, 
0, 
-1, 0.50054, 1, -1, 0.357982,-99) , 
9, -2.51857, 0, 0, 0.468958,-99) , 
0, 0.496187, 1, 0, 0.483607,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0651429);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.81422, 0, 1, 0.591507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462438,-99) , 
0, 0.495235, 0, 0, 0.499269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296849,-99) , 
9, -2.15558, 0, 0, 0.491935,-99) , 
7, -0.998422, 1, 0, 0.500521,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0943298);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.78731, 0, 1, 0.60395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474972,-99) , 
7, -0.125807, 1, 0, 0.485617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.720575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.223734,-99) , 
7, -1.03825, 1, 0, 0.416514,-99) , 
9, -2.08657, 0, 0, 0.480641,-99) , 
8, -4.52584, 1, 0, 0.487936,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0746707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427721,-99) , 
9, -0.827307, 1, 0, 0.525598,-99) , 
7, 1.00144, 0, 0, 0.559096,-99) , 
NN(
0, 
0, 
-1, -1.32942, 0, -1, 0.469907,-99) , 
1, 0.00388765, 0, 0, 0.479429,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0763317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.315668, 1, 1, 0.516071,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.387865,-99) , 
7, -0.664775, 0, 0, 0.508105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416775,-99) , 
9, -2.98795, 0, 0, 0.541662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271064,-99) , 
7, -0.985696, 1, 0, 0.44219,-99) , 
9, -2.10334, 0, 0, 0.499486,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0386184);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497143, 1, 1, 0.591467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49732,-99) , 
3, 0.439288, 1, 0, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417467,-99) , 
3, 7.02741, 1, 0, 0.496623,-99) , 
8, -4.45106, 1, 0, 0.503502,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0489543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493712,-99) , 
2, 0.0203846, 0, 0, 0.507354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411836,-99) , 
1, 0.00818643, 1, 0, 0.503112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397922,-99) , 
2, 0.179023, 1, 0, 0.497068,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0533267);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493307,-99) , 
8, -4.12116, 1, 0, 0.501066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284563,-99) , 
9, -2.36488, 0, 0, 0.493666,-99) , 
7, -1.28442, 1, 0, 0.501031,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0898113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444189,-99) , 
9, -1.01192, 0, 0, 0.544779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340735,-99) , 
0, 0.504752, 1, 0, 0.484785,-99) , 
7, 0.143078, 0, 0, 0.521187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388015,-99) , 
3, 8.18935, 1, 0, 0.514132,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0548682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474492,-99) , 
9, -2.82376, 0, 0, 0.597434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459896,-99) , 
2, -0.066125, 0, 0, 0.502235,-99) , 
NN(
0, 
0, 
-1, 0.498094, 1, -1, 0.416609,-99) , 
9, -2.08319, 0, 0, 0.497248,-99) , 
8, -4.39662, 1, 0, 0.504523,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0938729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.95996, 0, 1, 0.59584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470303,-99) , 
0, 0.50095, 1, 0, 0.508572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.197886,-99) , 
7, -0.93759, 1, 0, 0.365722,-99) , 
9, -1.95978, 0, 0, 0.496119,-99) , 
8, -4.33387, 1, 0, 0.504441,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0542199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487788,-99) , 
1, -0.00229635, 1, 0, 0.499912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388267,-99) , 
9, -2.3945, 0, 0, 0.494528,-99) , 
7, -1.56998, 1, 0, 0.498491,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.144427);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329244,-99) , 
6, -1.26786, 0, 0, 0.516766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411864,-99) , 
0, 0.500945, 0, 0, 0.446393,-99) , 
6, -951.286, 0, 0, 0.490192,-99) , 
8, -4.75845, 1, 0, 0.497029,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0490968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00572046, 0, 1, 0.535804,-99) , 
NN(
0, 
0, 
-1, 0.503485, 1, -1, 0.48604,-99) , 
0, 0.495234, 1, 0, 0.498294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371827,-99) , 
2, 0.207157, 1, 0, 0.492263,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0813628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462837,-99) , 
8, -4.40907, 1, 0, 0.543514,-99) , 
9, -2.00967, 0, 0, 0.57417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495846,-99) , 
2, 0.00642165, 1, 0, 0.570627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476745,-99) , 
1, -0.00229635, 1, 0, 0.491558,-99) , 
0, 0.504756, 0, 0, 0.497571,-99) , 
8, -4.04024, 1, 0, 0.50755,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0941402);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331463,-99) , 
9, -1.32615, 0, 0, 0.508822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337566,-99) , 
9, -1.53321, 1, 0, 0.474359,-99) , 
7, -0.161858, 0, 0, 0.498432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42323,-99) , 
8, -1.13751, 1, 0, 0.49303,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0392102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493926,-99) , 
8, -4.50362, 1, 0, 0.498636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371758,-99) , 
9, -2.90317, 0, 0, 0.494062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381249,-99) , 
2, 0.199574, 1, 0, 0.488642,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0549742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499999, 1, 1, 0.571373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415275,-99) , 
9, -1.24978, 0, 0, 0.497367,-99) , 
NN(
0, 
0, 
-1, -1.43735, 1, -1, 0.453189,-99) , 
7, -0.14177, 0, 0, 0.484344,-99) , 
1, 0.00539043, 0, 0, 0.490266,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0345261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408549,-99) , 
8, -4.90839, 0, 0, 0.502031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421709,-99) , 
2, 0.200856, 1, 0, 0.498119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402477,-99) , 
2, -0.198099, 0, 0, 0.493231,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.054824);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490052,-99) , 
7, -0.694129, 1, 0, 0.498445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369781,-99) , 
9, -2.81164, 0, 0, 0.492677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369513,-99) , 
2, 0.187629, 1, 0, 0.485754,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0860521);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500003, 1, 1, 0.616382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369903,-99) , 
7, -0.504571, 0, 0, 0.517009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268164,-99) , 
7, -0.616731, 1, 0, 0.422812,-99) , 
9, -1.74294, 0, 0, 0.504129,-99) , 
8, -4.39116, 1, 0, 0.512043,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0632226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83809, 0, 1, 0.559156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452123,-99) , 
3, 3.58777, 1, 0, 0.49062,-99) , 
8, -3.89744, 1, 0, 0.498378,-99) , 
NN(
0, 
0, 
-1, -1.47923, 1, -1, 0.354993,-99) , 
9, -2.51857, 0, 0, 0.48732,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.132359);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478667,-99) , 
7, 0.326457, 1, 0, 0.499123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281257,-99) , 
7, -0.119311, 0, 0, 0.48291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449832,-99) , 
8, -3.60775, 0, 0, 0.487281,-99) , 
NN(
0, 
0, 
-1, -0.0609777, 1, -1, 0.294509,-99) , 
7, -0.246013, 1, 0, 0.437795,-99) , 
9, -1.39341, 0, 0, 0.469294,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0652816);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.592064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493695,-99) , 
7, -0.182445, 1, 0, 0.501558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253462,-99) , 
9, -1.90852, 0, 0, 0.489758,-99) , 
7, -0.713115, 1, 0, 0.502736,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0928832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.732534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451742,-99) , 
9, -2.77271, 0, 0, 0.510736,-99) , 
9, -2.12795, 0, 0, 0.566531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416303,-99) , 
7, -0.114014, 0, 0, 0.503866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.200588,-99) , 
7, -0.553244, 1, 0, 0.377941,-99) , 
9, -1.65074, 0, 0, 0.488033,-99) , 
8, -4.13326, 1, 0, 0.496603,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0533008);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48096,-99) , 
8, -4.56793, 1, 0, 0.484927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408012,-99) , 
9, -2.85452, 0, 0, 0.481959,-99) , 
1, 0.00702288, 0, 0, 0.485736,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0780152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.7577, 1, 1, 0.53607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467642,-99) , 
3, 0.420351, 1, 0, 0.47566,-99) , 
3, 3.20411, 0, 0, 0.491726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41458,-99) , 
3, 8.2051, 1, 0, 0.48792,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0613347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.24494, 1, 1, 0.514003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268262,-99) , 
7, -1.19548, 1, 0, 0.454651,-99) , 
9, -2.26788, 0, 0, 0.507878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422701,-99) , 
9, 0.995992, 1, 0, 0.502191,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0366913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429562,-99) , 
5, 0.0085607, 1, 0, 0.499346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386612,-99) , 
9, -2.44079, 0, 0, 0.494378,-99) , 
8, -4.91842, 1, 0, 0.498717,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0480629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.500927, 0, 1, 0.609368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492611,-99) , 
9, -2.68168, 0, 0, 0.571354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413389,-99) , 
7, -0.516322, 0, 0, 0.498041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345492,-99) , 
9, -2.06159, 0, 0, 0.493134,-99) , 
8, -3.9825, 1, 0, 0.504012,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.122088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428855, 1, 1, 0.572213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408523,-99) , 
0, 0.499045, 1, 0, 0.46068,-99) , 
2, 0.015637, 1, 0, 0.532461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464783,-99) , 
8, -3.2894, 1, 0, 0.475099,-99) , 
NN(
0, 
0, 
-1, -0.193792, 1, -1, 0.404236,-99) , 
9, -1.28859, 0, 0, 0.450782,-99) , 
1, 0.00145893, 0, 0, 0.473949,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0637818);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499052, 1, 1, 0.588228,-99) , 
NN(
0, 
0, 
-1, -2.07081, 0, -1, 0.472759,-99) , 
8, -4.32773, 1, 0, 0.481482,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0323781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.993434, 1, 1, 0.508592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426167,-99) , 
0, 0.498093, 1, 0, 0.463287,-99) , 
2, -0.0750248, 0, 0, 0.501566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411893,-99) , 
1, 0.0098602, 1, 0, 0.498904,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0905142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491218,-99) , 
7, -1.12858, 1, 0, 0.540042,-99) , 
9, -1.77758, 0, 0, 0.565297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409278,-99) , 
7, -0.00668338, 0, 0, 0.518763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45248,-99) , 
8, -3.71565, 1, 0, 0.472838,-99) , 
8, -2.83068, 0, 0, 0.499922,-99) , 
8, -3.92394, 1, 0, 0.510019,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0764523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47551, 0, 1, 0.632013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423014,-99) , 
0, 0.50094, 1, 0, 0.557485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470602,-99) , 
0, 0.499043, 0, 0, 0.489004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317217,-99) , 
9, -2.10818, 0, 0, 0.481323,-99) , 
7, -0.999603, 1, 0, 0.487706,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0904649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.35959, 1, 1, 0.519807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29718,-99) , 
9, -1.89112, 0, 0, 0.509338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429632,-99) , 
9, -2.53274, 0, 0, 0.514537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252112,-99) , 
9, -1.96316, 1, 0, 0.445889,-99) , 
7, -0.713713, 0, 0, 0.499035,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0775883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.710583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395897,-99) , 
7, -1.30798, 1, 0, 0.509059,-99) , 
9, -2.26286, 0, 0, 0.574909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47731,-99) , 
0, 0.499044, 0, 0, 0.493865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383756,-99) , 
9, -1.96498, 0, 0, 0.48769,-99) , 
8, -4.13326, 1, 0, 0.497462,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0853662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473369,-99) , 
7, 0.61799, 1, 0, 0.495687,-99) , 
NN(
0, 
0, 
-1, 0.0958814, 1, -1, 0.455648,-99) , 
9, -1.17702, 0, 0, 0.480989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357542,-99) , 
1, 0.010139, 1, 0, 0.476604,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0430255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491579,-99) , 
6, -951.286, 0, 0, 0.579854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428454,-99) , 
7, 2.23825, 1, 0, 0.496485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274914,-99) , 
9, -2.16949, 0, 0, 0.48869,-99) , 
7, -0.998422, 1, 0, 0.496252,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0523054);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.582699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.736003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461374,-99) , 
6, -951.286, 0, 0, 0.600756,-99) , 
NN(
0, 
0, 
-1, -1.7061, 0, -1, 0.488675,-99) , 
7, -0.694129, 1, 0, 0.495419,-99) , 
8, -4.11922, 1, 0, 0.505193,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.03735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453561,-99) , 
0, 0.494555, 0, 0, 0.494358,-99) , 
0, 0.490473, 1, 0, 0.498269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426125,-99) , 
3, 8.18935, 1, 0, 0.49473,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0790455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.781701, 0, 1, 0.547403,-99) , 
NN(
0, 
0, 
-1, -2.62311, 0, -1, 0.486892,-99) , 
8, -2.82242, 1, 0, 0.515975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458412,-99) , 
0, 0.504122, 0, 0, 0.496096,-99) , 
NN(
0, 
0, 
-1, -0.109131, 0, -1, 0.410593,-99) , 
3, 3.33695, 1, 0, 0.467129,-99) , 
0, 0.500948, 1, 0, 0.502252,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0756822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488947,-99) , 
7, -0.21731, 1, 0, 0.49717,-99) , 
8, -3.87714, 1, 0, 0.504594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.711544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457638,-99) , 
8, -4.26548, 0, 0, 0.524177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267385,-99) , 
7, -0.783598, 1, 0, 0.459253,-99) , 
9, -1.99004, 0, 0, 0.498112,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0700502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.14589, 0, 1, 0.573681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451012,-99) , 
9, -0.914776, 0, 0, 0.501298,-99) , 
8, -3.56337, 1, 0, 0.517645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475884,-99) , 
7, 0.441999, 1, 0, 0.495947,-99) , 
NN(
0, 
0, 
-1, -1.45797, 0, -1, 0.447299,-99) , 
0, 0.499908, 0, 0, 0.479371,-99) , 
0, 0.498094, 1, 0, 0.498296,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0668497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494112, 0, 1, 0.564847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487464,-99) , 
2, -0.0357458, 1, 0, 0.502771,-99) , 
0, 0.496054, 1, 0, 0.514261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482207,-99) , 
0, 0.491429, 1, 0, 0.503405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373365,-99) , 
7, -0.399034, 0, 0, 0.468681,-99) , 
0, 0.493334, 0, 0, 0.506893,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.07645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.55892, 0, 1, 0.632419,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00733227, 1, 1, 0.523097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4135,-99) , 
8, -3.36276, 1, 0, 0.44323,-99) , 
2, -0.0809292, 0, 0, 0.511048,-99) , 
8, -4.39176, 1, 0, 0.519175,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0739259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.4029, 0, 1, 0.638837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461428,-99) , 
7, -1.7565, 0, 0, 0.578852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405783,-99) , 
7, -0.614473, 0, 0, 0.512754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327519,-99) , 
9, -2.07089, 0, 0, 0.503138,-99) , 
7, -0.995378, 1, 0, 0.509409,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0598265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479741,-99) , 
0, 0.490473, 1, 0, 0.484359,-99) , 
8, -4.90839, 1, 0, 0.487675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378649,-99) , 
3, 8.18935, 1, 0, 0.482354,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0575339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467121,-99) , 
0, 0.498086, 0, 0, 0.534588,-99) , 
2, -0.0220814, 1, 0, 0.574246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483864,-99) , 
0, 0.496188, 0, 0, 0.540304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44374,-99) , 
7, 0.0726481, 0, 0, 0.490167,-99) , 
8, -3.75085, 1, 0, 0.499615,-99) , 
1, 0.00388765, 0, 0, 0.507247,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0587759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497157, 1, 1, 0.608894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491654,-99) , 
7, 1.40972, 0, 0, 0.520471,-99) , 
8, -3.1894, 1, 0, 0.550031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447193,-99) , 
7, 1.85735, 1, 0, 0.497606,-99) , 
NN(
0, 
0, 
-1, -0.683234, 1, -1, 0.448095,-99) , 
0, 0.493334, 0, 0, 0.489599,-99) , 
1, 0.00145893, 0, 0, 0.507113,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.061284);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.813662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487381,-99) , 
3, 3.20632, 0, 0, 0.55562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.270758,-99) , 
9, -1.95119, 0, 0, 0.502043,-99) , 
7, -0.713033, 1, 0, 0.509034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407997,-99) , 
3, 8.2075, 1, 0, 0.503534,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0678515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.59573, 0, 1, 0.526383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452237,-99) , 
9, -0.895842, 0, 0, 0.478005,-99) , 
0, 0.499996, 1, 0, 0.509736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454771,-99) , 
2, 0.136392, 0, 0, 0.480298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357565,-99) , 
2, 0.20048, 1, 0, 0.445144,-99) , 
2, 0.066066, 1, 0, 0.498137,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0843496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39103, 0, 1, 0.654945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381295,-99) , 
9, -3.06702, 0, 0, 0.569479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475196,-99) , 
0, 0.503805, 0, 0, 0.481688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322411,-99) , 
9, -2.10818, 0, 0, 0.474662,-99) , 
7, -0.998828, 1, 0, 0.482335,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0972458);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461202,-99) , 
5, 0.00182678, 0, 0, 0.502647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390774,-99) , 
5, 0.0127888, 1, 0, 0.498829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435688,-99) , 
8, -1.08366, 1, 0, 0.494388,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0765846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.685769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484061,-99) , 
7, 0.430261, 0, 0, 0.527328,-99) , 
0, 0.497146, 1, 0, 0.58573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4365,-99) , 
9, -2.74435, 0, 0, 0.569559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481233,-99) , 
7, -0.274737, 1, 0, 0.487187,-99) , 
8, -4.06066, 1, 0, 0.497021,-99) , 
1, 0.00388765, 0, 0, 0.506191,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.067434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.45482, 1, 1, 0.546735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479763,-99) , 
3, 3.97051, 0, 0, 0.491791,-99) , 
2, -0.0448824, 1, 0, 0.502806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404355,-99) , 
3, 8.20208, 1, 0, 0.497748,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0601832);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632622,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486852,-99) , 
9, -0.523643, 1, 0, 0.515275,-99) , 
NN(
0, 
0, 
-1, -0.00321443, 0, -1, 0.477775,-99) , 
0, 0.499994, 1, 0, 0.501933,-99) , 
1, 0.00663906, 0, 0, 0.507614,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0413235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.183698, 1, 1, 0.560128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49135,-99) , 
3, 0.428577, 1, 0, 0.496884,-99) , 
3, 6.196, 0, 0, 0.501879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413668,-99) , 
2, -0.193924, 0, 0, 0.497339,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0936325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452834,-99) , 
9, -2.94778, 0, 0, 0.570591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31327,-99) , 
9, -1.74415, 0, 0, 0.517113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288999,-99) , 
9, -1.82448, 1, 0, 0.455532,-99) , 
7, -0.599167, 0, 0, 0.510397,-99) , 
8, -4.37633, 1, 0, 0.514919,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0708708);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490467,-99) , 
7, -0.170915, 1, 0, 0.500057,-99) , 
NN(
0, 
0, 
-1, 0.498082, 1, -1, 0.41848,-99) , 
7, -0.504663, 0, 0, 0.495033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448648,-99) , 
9, -2.71177, 0, 0, 0.518058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257747,-99) , 
7, -0.734266, 1, 0, 0.446662,-99) , 
9, -1.90995, 0, 0, 0.48736,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0916046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467292,-99) , 
8, -4.91853, 1, 0, 0.544356,-99) , 
9, -2.36206, 0, 0, 0.582437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410649,-99) , 
9, -0.960574, 0, 0, 0.517423,-99) , 
NN(
0, 
0, 
-1, -0.970929, 1, -1, 0.462791,-99) , 
7, 0.158354, 0, 0, 0.501233,-99) , 
8, -4.13326, 1, 0, 0.509826,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0674578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.744479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477785,-99) , 
8, -4.3824, 1, 0, 0.571256,-99) , 
1, -0.000711809, 1, 0, 0.63007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482867,-99) , 
0, 0.499997, 1, 0, 0.506088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389341,-99) , 
9, -2.06159, 0, 0, 0.501784,-99) , 
8, -4.11922, 1, 0, 0.51475,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0723469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481081,-99) , 
0, 0.5019, 1, 0, 0.511047,-99) , 
8, -4.13255, 1, 0, 0.523165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475735,-99) , 
7, -0.410517, 1, 0, 0.485197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371363,-99) , 
9, -2.58317, 0, 0, 0.478016,-99) , 
0, 0.499043, 0, 0, 0.495848,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0567102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.519252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426056,-99) , 
0, 0.498095, 1, 0, 0.47804,-99) , 
2, -0.0648558, 0, 0, 0.511952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422717,-99) , 
1, 0.0098602, 1, 0, 0.509325,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0708994);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492887,-99) , 
7, 0.143604, 1, 0, 0.530729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475159,-99) , 
3, 0.418483, 1, 0, 0.482923,-99) , 
3, 3.35005, 0, 0, 0.495093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416672,-99) , 
2, -0.19705, 0, 0, 0.490957,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.049919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.45541, 0, 1, 0.586465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484979,-99) , 
6, -951.286, 0, 0, 0.507761,-99) , 
8, -4.52524, 1, 0, 0.512068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43226,-99) , 
3, 8.18935, 1, 0, 0.507883,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0384894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492378, 1, 1, 0.509983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357659,-99) , 
5, 0.0127887, 1, 0, 0.504202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426179,-99) , 
8, -1.11241, 1, 0, 0.498592,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0925463);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.59175, 0, 1, 0.606132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321422,-99) , 
7, -0.297057, 0, 0, 0.511899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282674,-99) , 
7, -0.282301, 1, 0, 0.468328,-99) , 
9, -1.51379, 0, 0, 0.503999,-99) , 
8, -4.37573, 1, 0, 0.511,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0535627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437255,-99) , 
3, 2.60346, 1, 0, 0.496172,-99) , 
7, 0.145477, 1, 0, 0.523107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486098,-99) , 
7, -0.838941, 1, 0, 0.492361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422795,-99) , 
8, -4.72357, 0, 0, 0.488727,-99) , 
1, 0.00309911, 0, 0, 0.493748,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0609052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483011,-99) , 
7, 0.28392, 1, 0, 0.506979,-99) , 
8, -1.88539, 0, 0, 0.512946,-99) , 
NN(
0, 
0, 
-1, 0.000179751, 1, -1, 0.463971,-99) , 
9, 0.219862, 1, 0, 0.502436,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0952631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425649,-99) , 
9, -2.13836, 0, 0, 0.51577,-99) , 
1, 0.00388765, 0, 0, 0.528194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377516,-99) , 
7, -0.711928, 0, 0, 0.509012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429964,-99) , 
6, 0.14554, 0, 0, 0.468778,-99) , 
6, -951.286, 1, 0, 0.482101,-99) , 
0, 0.498091, 0, 0, 0.504491,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0581662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438206,-99) , 
7, 2.14318, 1, 0, 0.504863,-99) , 
NN(
0, 
0, 
-1, 0.498365, 0, -1, 0.376292,-99) , 
1, 0.00702288, 1, 0, 0.4974,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423756,-99) , 
1, -0.000205655, 1, 0, 0.462357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291171,-99) , 
5, 0.00426799, 1, 0, 0.410946,-99) , 
0, 0.491426, 0, 0, 0.489043,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0659073);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489921,-99) , 
9, -0.264544, 1, 0, 0.506708,-99) , 
NN(
0, 
0, 
-1, 0.15037, 1, -1, 0.463962,-99) , 
8, -2.55747, 0, 0, 0.481497,-99) , 
8, -4.74381, 1, 0, 0.485563,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0696094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0562561, 1, 1, 0.586659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407182,-99) , 
7, -0.673646, 1, 0, 0.478939,-99) , 
9, -1.23048, 0, 0, 0.548487,-99) , 
NN(
NN(
0, 
0, 
-1, -2.45565, 0, -1, 0.487248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403352,-99) , 
7, 0.726408, 0, 0, 0.445177,-99) , 
0, 0.50317, 1, 0, 0.479418,-99) , 
0, 0.494282, 1, 0, 0.49254,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0678557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57249, 0, 1, 0.52478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45829,-99) , 
0, 0.502827, 0, 0, 0.469146,-99) , 
5, 0.00104982, 0, 0, 0.506686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404679,-99) , 
5, 0.0110205, 1, 0, 0.501409,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0467351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479219,-99) , 
6, -0.142575, 0, 0, 0.520323,-99) , 
6, -951.286, 1, 0, 0.565381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582126,-99) , 
NN(
0, 
0, 
-1, -1.60587, 0, -1, 0.484594,-99) , 
0, 0.490474, 1, 0, 0.489011,-99) , 
1, 0.0045751, 0, 0, 0.495186,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0506975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.602926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46318,-99) , 
1, 5.10521e-05, 1, 0, 0.507385,-99) , 
8, -3.19473, 1, 0, 0.538759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494432,-99) , 
0, 0.503822, 0, 0, 0.499487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443842,-99) , 
0, 0.505845, 1, 0, 0.496134,-99) , 
0, 0.495235, 1, 0, 0.506536,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0367618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409393,-99) , 
9, -2.38566, 0, 0, 0.501436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404114,-99) , 
7, -1.57036, 0, 0, 0.496996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450551,-99) , 
0, 0.505254, 0, 0, 0.480317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401117,-99) , 
2, 0.0148614, 1, 0, 0.445501,-99) , 
0, 0.503805, 1, 0, 0.491032,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.103197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0606636, 1, 1, 0.545891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420002,-99) , 
6, -0.421524, 0, 0, 0.4922,-99) , 
6, -951.286, 1, 0, 0.510176,-99) , 
NN(
0, 
0, 
-1, -0.120235, 0, -1, 0.432553,-99) , 
0, 0.504757, 1, 0, 0.503571,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0459998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.60366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491559,-99) , 
3, 4.17477, 0, 0, 0.499802,-99) , 
3, 0.51193, 1, 0, 0.5066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417917,-99) , 
3, 8.2051, 1, 0, 0.501956,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0815225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.08555, 1, 1, 0.552628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449596,-99) , 
3, 4.17186, 1, 0, 0.529395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467844,-99) , 
8, -4.02379, 1, 0, 0.479608,-99) , 
2, -0.134537, 1, 0, 0.487143,-99) , 
7, 1.28609, 0, 0, 0.498119,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0462905);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498237,-99) , 
8, -3.70357, 1, 0, 0.507167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28172,-99) , 
7, -0.939982, 1, 0, 0.411042,-99) , 
9, -2.11691, 0, 0, 0.501348,-99) , 
7, -1.28401, 1, 0, 0.506639,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0654134);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494781,-99) , 
3, 1.74427, 0, 0, 0.513788,-99) , 
3, 0.432178, 1, 0, 0.521514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476894,-99) , 
0, 0.499993, 1, 0, 0.515602,-99) , 
NN(
0, 
0, 
-1, 0.493332, 1, -1, 0.439851,-99) , 
0, 0.496187, 0, 0, 0.490522,-99) , 
3, 3.49386, 1, 0, 0.51292,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0685423);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42562,-99) , 
2, -0.146291, 0, 0, 0.517005,-99) , 
NN(
0, 
0, 
-1, 4.9807, 1, -1, 0.463519,-99) , 
2, 0.0741566, 1, 0, 0.508539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411753,-99) , 
8, -4.81074, 0, 0, 0.50401,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0489324);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643277,-99) , 
NN(
NN(
0, 
0, 
-1, -2.29359, 1, 1, 0.527282,-99) , 
NN(
0, 
0, 
-1, -0.0490579, 1, -1, 0.482354,-99) , 
7, 1.2948, 0, 0, 0.494459,-99) , 
8, -4.70991, 1, 0, 0.499545,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0750984);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497933,-99) , 
7, 0.308313, 1, 0, 0.522032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403104,-99) , 
7, -0.767851, 0, 0, 0.515535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35727,-99) , 
8, -4.40001, 1, 0, 0.455204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337136,-99) , 
9, -3.08623, 0, 0, 0.42339,-99) , 
9, -2.21147, 0, 0, 0.505992,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0613805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499497,-99) , 
2, -0.00692799, 0, 0, 0.526998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438602,-99) , 
2, 0.202271, 1, 0, 0.522852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439073,-99) , 
2, -0.196956, 0, 0, 0.518578,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0665517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473318,-99) , 
9, -1.79316, 0, 0, 0.561057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43583,-99) , 
7, -1.15372, 0, 0, 0.498432,-99) , 
3, 3.49386, 0, 0, 0.514936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530438,-99) , 
NN(
0, 
0, 
-1, -1.69447, 0, -1, 0.444001,-99) , 
0, 0.49619, 1, 0, 0.470964,-99) , 
9, 0.119413, 1, 0, 0.504413,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0736076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455136,-99) , 
8, -3.75407, 0, 0, 0.572552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445673,-99) , 
0, 0.504075, 1, 0, 0.478882,-99) , 
3, 3.35469, 1, 0, 0.540775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359062,-99) , 
7, -0.0319436, 0, 0, 0.505839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279366,-99) , 
7, -0.0301532, 1, 0, 0.46932,-99) , 
9, -1.30578, 0, 0, 0.494699,-99) , 
0, 0.5019, 0, 0, 0.503782,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0704284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.326329, 1, 1, 0.540098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411947,-99) , 
6, -0.979805, 0, 0, 0.486816,-99) , 
6, -951.286, 1, 0, 0.504466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462632,-99) , 
5, 0.00351985, 0, 0, 0.493128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343996,-99) , 
2, 0.00192523, 1, 0, 0.417863,-99) , 
7, 0.170051, 0, 0, 0.463514,-99) , 
0, 0.494286, 0, 0, 0.495667,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0295997);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65957,-99) , 
NN(
0, 
0, 
-1, 0.200071, 1, -1, 0.48927,-99) , 
7, -1.57036, 1, 0, 0.493922,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0318899);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598518,-99) , 
NN(
NN(
0, 
0, 
-1, 0.506052, 0, 1, 0.510488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430187,-99) , 
0, 0.491248, 0, 0, 0.506378,-99) , 
0, 0.489526, 1, 0, 0.508996,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0718234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50064, 1, 1, 0.635603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475793,-99) , 
0, 0.493982, 0, 0, 0.526591,-99) , 
0, 0.497152, 0, 0, 0.587172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405146,-99) , 
9, -1.70317, 0, 0, 0.508506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.229892,-99) , 
9, -1.95213, 0, 0, 0.497992,-99) , 
7, -0.712421, 1, 0, 0.508492,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0566568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484638,-99) , 
5, 0.00455213, 0, 0, 0.492401,-99) , 
1, -0.004848, 1, 0, 0.499959,-99) , 
NN(
0, 
0, 
-1, 4.16874, 1, -1, 0.463717,-99) , 
0, 0.5019, 1, 0, 0.492029,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0675568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.437075, 0, 1, 0.527539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473895,-99) , 
9, -0.488436, 1, 0, 0.483572,-99) , 
8, -2.53893, 1, 0, 0.509278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325722,-99) , 
9, -0.865143, 0, 0, 0.429866,-99) , 
1, -0.0066626, 0, 0, 0.504611,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0675739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38587, 1, 1, 0.567912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436006,-99) , 
2, -0.198583, 0, 0, 0.528354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362152,-99) , 
9, -1.30493, 0, 0, 0.500506,-99) , 
NN(
0, 
0, 
-1, -1.41108, 1, -1, 0.46427,-99) , 
7, -0.14177, 0, 0, 0.490316,-99) , 
2, -0.0648558, 1, 0, 0.496462,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0686809);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.8252, 1, 1, 0.568284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465976,-99) , 
0, 0.496097, 0, 0, 0.566463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450419,-99) , 
9, -0.742652, 0, 0, 0.479596,-99) , 
7, -0.996466, 1, 0, 0.486174,-99) , 
0, 0.503805, 0, 0, 0.494305,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0737565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303453,-99) , 
9, -0.718143, 1, 0, 0.518209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379931,-99) , 
9, -0.696158, 0, 0, 0.484945,-99) , 
7, 0.429371, 1, 0, 0.499594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422937,-99) , 
2, 0.199574, 1, 0, 0.495871,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.10281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47818,-99) , 
7, 0.645084, 1, 0, 0.507364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331022,-99) , 
7, -0.297036, 0, 0, 0.500668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473305,-99) , 
9, -1.74735, 0, 0, 0.50241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242362,-99) , 
7, -0.127383, 1, 0, 0.464342,-99) , 
9, -1.44569, 0, 0, 0.490941,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0530151);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431468,-99) , 
9, -2.02055, 0, 0, 0.538267,-99) , 
NN(
0, 
0, 
-1, 0.00702288, 1, -1, 0.48502,-99) , 
0, 0.494282, 1, 0, 0.494945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430302,-99) , 
2, -0.172504, 0, 0, 0.490546,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0686888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431142,-99) , 
7, 0.825483, 0, 0, 0.507122,-99) , 
9, -1.10831, 1, 0, 0.549643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453744,-99) , 
9, -2.07332, 0, 0, 0.515193,-99) , 
NN(
0, 
0, 
-1, -1.22848, 0, -1, 0.482655,-99) , 
7, -0.141572, 1, 0, 0.491048,-99) , 
1, 0.00388765, 0, 0, 0.496872,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0457464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368297,-99) , 
7, -0.98564, 1, 0, 0.558609,-99) , 
NN(
0, 
0, 
-1, -0.694129, 0, -1, 0.494945,-99) , 
9, -2.1324, 1, 0, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389636,-99) , 
3, 8.18935, 1, 0, 0.494598,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0677349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36751,-99) , 
9, -1.43936, 1, 0, 0.544349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385197,-99) , 
9, -1.37233, 0, 0, 0.496455,-99) , 
7, -0.254751, 1, 0, 0.504574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298732,-99) , 
7, -1.3801, 1, 0, 0.43035,-99) , 
9, -2.40886, 0, 0, 0.499062,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0471475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.08525, 1, 1, 0.514176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446208,-99) , 
9, -2.56906, 0, 0, 0.51029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475221,-99) , 
0, 0.497145, 1, 0, 0.504228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349634,-99) , 
7, -0.128982, 0, 0, 0.449233,-99) , 
1, -0.0039028, 0, 0, 0.503035,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0748634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46569,-99) , 
0, 0.5019, 1, 0, 0.573129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271977,-99) , 
9, -1.95213, 0, 0, 0.510117,-99) , 
7, -0.713115, 1, 0, 0.518245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426908,-99) , 
5, 0.011521, 1, 0, 0.514041,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0790781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.00734, 0, 1, 0.574028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447257,-99) , 
9, -1.74153, 1, 0, 0.547967,-99) , 
NN(
0, 
0, 
-1, -1.56132, 0, -1, 0.466964,-99) , 
7, -0.42758, 1, 0, 0.481168,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.068574);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.42629, 0, 1, 0.604103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463993,-99) , 
7, 0.717972, 0, 0, 0.48729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327449,-99) , 
9, -2.10818, 0, 0, 0.481168,-99) , 
7, -0.993502, 1, 0, 0.490019,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.108153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481036,-99) , 
0, 0.499994, 0, 0, 0.508249,-99) , 
9, -1.21303, 0, 0, 0.525774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279189,-99) , 
9, -0.895335, 1, 0, 0.513932,-99) , 
NN(
0, 
0, 
-1, -0.702831, 0, -1, 0.467958,-99) , 
7, 0.297623, 1, 0, 0.476841,-99) , 
8, -3.34719, 1, 0, 0.491347,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0490023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441728,-99) , 
8, -4.63144, 0, 0, 0.577179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315034,-99) , 
9, -2.07672, 0, 0, 0.495796,-99) , 
7, -0.978717, 1, 0, 0.500922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328118,-99) , 
9, -3.05602, 0, 0, 0.496108,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0577735);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607547,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0017269, 0, 1, 0.551058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461485,-99) , 
0, 0.498496, 1, 0, 0.490426,-99) , 
0, 0.502852, 0, 0, 0.498913,-99) , 
8, -4.52524, 1, 0, 0.504392,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.106947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445431,-99) , 
7, -0.535231, 1, 0, 0.512409,-99) , 
7, 0.234642, 0, 0, 0.529165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288116,-99) , 
7, 0.292435, 0, 0, 0.498752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.300346,-99) , 
7, 0.181232, 1, 0, 0.442564,-99) , 
9, -0.899528, 0, 0, 0.486451,-99) , 
8, -3.41109, 1, 0, 0.49791,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.083943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451733,-99) , 
7, 0.466123, 1, 0, 0.570825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426217,-99) , 
8, -3.15429, 1, 0, 0.496653,-99) , 
8, -2.9679, 0, 0, 0.512099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476178,-99) , 
8, -2.69918, 1, 0, 0.488499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317558,-99) , 
7, 0.710043, 0, 0, 0.469772,-99) , 
9, -0.555499, 1, 0, 0.491963,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0559349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587297,-99) , 
NN(
0, 
0, 
-1, -2.11817, 0, -1, 0.483134,-99) , 
7, -1.28356, 1, 0, 0.48755,-99) , 
NN(
0, 
0, 
-1, -0.0680967, 0, -1, 0.442003,-99) , 
0, 0.494282, 0, 0, 0.477894,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0585387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47345,-99) , 
5, 0.00121787, 0, 0, 0.501263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384281,-99) , 
5, 0.0127887, 1, 0, 0.496872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388064,-99) , 
2, 0.20868, 1, 0, 0.491605,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0435436);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473082,-99) , 
9, -2.69584, 0, 0, 0.56423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432063,-99) , 
9, -1.92344, 0, 0, 0.504554,-99) , 
7, -0.998736, 1, 0, 0.508931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406406,-99) , 
1, 0.0103789, 1, 0, 0.505871,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0804815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497128, 1, 1, 0.647261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326371,-99) , 
7, -1.02268, 1, 0, 0.470946,-99) , 
9, -2.16351, 0, 0, 0.554248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480544,-99) , 
9, -1.3821, 1, 0, 0.578468,-99) , 
NN(
0, 
0, 
-1, -0.504571, 0, -1, 0.480679,-99) , 
8, -3.49763, 1, 0, 0.487442,-99) , 
8, -3.74067, 1, 0, 0.499415,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0299882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.04277, 1, 1, 0.554568,-99) , 
NN(
0, 
0, 
-1, -2.43277, 0, -1, 0.493557,-99) , 
0, 0.493742, 1, 0, 0.499064,-99) , 
NN(
0, 
0, 
-1, 0.450809, 0, -1, 0.441194,-99) , 
0, 0.49143, 0, 0, 0.494,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0890682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.17427, 1, 1, 0.520754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388615,-99) , 
7, 0.103557, 0, 0, 0.513611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490141,-99) , 
8, -3.75596, 0, 0, 0.527755,-99) , 
NN(
0, 
0, 
-1, -3.56193, 1, -1, 0.321362,-99) , 
7, 0.00121529, 1, 0, 0.472495,-99) , 
9, -1.10838, 0, 0, 0.498662,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0745354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438307,-99) , 
7, -0.7131, 0, 0, 0.510072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461971,-99) , 
8, -4.36281, 1, 0, 0.470109,-99) , 
0, 0.497093, 0, 0, 0.492675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409169,-99) , 
0, 0.505709, 1, 0, 0.488044,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0723857);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505981, 0, 1, 0.58381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483617,-99) , 
3, 3.5769, 1, 0, 0.550509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475582,-99) , 
7, -0.427166, 1, 0, 0.486959,-99) , 
2, 0.067462, 0, 0, 0.495935,-99) , 
0, 0.504757, 0, 0, 0.501656,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0799959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459353,-99) , 
7, 1.14342, 1, 0, 0.524743,-99) , 
8, -1.85437, 0, 0, 0.531398,-99) , 
NN(
0, 
0, 
-1, 1.84958, 0, -1, 0.478728,-99) , 
9, 0.35169, 1, 0, 0.521207,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0464715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.116249, 0, 1, 0.509324,-99) , 
NN(
0, 
0, 
-1, 2.14448, 0, -1, 0.471554,-99) , 
7, 1.80228, 1, 0, 0.50275,-99) , 
NN(
0, 
0, 
-1, -0.734313, 1, -1, 0.419283,-99) , 
9, -1.90995, 0, 0, 0.489792,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0509711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49713, 0, 1, 0.577291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485313,-99) , 
0, 0.500929, 1, 0, 0.546297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416967,-99) , 
7, 0.103557, 0, 0, 0.502099,-99) , 
NN(
0, 
0, 
-1, 0.122898, 1, -1, 0.458327,-99) , 
9, -1.13893, 0, 0, 0.486266,-99) , 
1, 0.00388765, 0, 0, 0.492308,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0622932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.200681, 1, 1, 0.579276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426999,-99) , 
8, -3.66224, 1, 0, 0.485432,-99) , 
9, -0.851132, 0, 0, 0.534529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497934,-99) , 
8, -3.39655, 1, 0, 0.522178,-99) , 
NN(
0, 
0, 
-1, -2.54945, 0, -1, 0.476173,-99) , 
2, -0.0585956, 1, 0, 0.483774,-99) , 
0, 0.493329, 1, 0, 0.491145,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0994421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401924,-99) , 
5, 0.0115212, 1, 0, 0.52679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376301,-99) , 
7, -0.342045, 0, 0, 0.521637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45177,-99) , 
8, -3.78212, 0, 0, 0.484343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299563,-99) , 
7, -0.21639, 1, 0, 0.456518,-99) , 
9, -1.50917, 0, 0, 0.505684,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0378876);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447701,-99) , 
0, 0.494283, 0, 0, 0.489286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384475,-99) , 
9, -2.3945, 0, 0, 0.485019,-99) , 
7, -1.56988, 1, 0, 0.48889,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0423345);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49517,-99) , 
8, -3.78288, 1, 0, 0.503983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307815,-99) , 
9, -2.34502, 0, 0, 0.497768,-99) , 
7, -1.28395, 1, 0, 0.501789,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0633986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0328067, 1, 1, 0.533282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399219,-99) , 
3, 2.57, 1, 0, 0.485415,-99) , 
3, 3.33901, 0, 0, 0.499041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460726,-99) , 
8, -1.42326, 1, 0, 0.485566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401773,-99) , 
7, 1.68527, 0, 0, 0.459509,-99) , 
9, 0.188702, 1, 0, 0.489961,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.116129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446545,-99) , 
9, -2.42869, 0, 0, 0.55165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328695,-99) , 
9, -0.790113, 1, 0, 0.530175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48212,-99) , 
7, 0.919321, 1, 0, 0.494388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265528,-99) , 
9, -0.842755, 0, 0, 0.473031,-99) , 
7, 0.429454, 1, 0, 0.496715,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0610176);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479808,-99) , 
2, 0.0358025, 0, 0, 0.491414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405115,-99) , 
2, -0.19481, 0, 0, 0.486298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409675,-99) , 
2, 0.20868, 1, 0, 0.482492,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0923479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489892,-99) , 
0, 0.500926, 1, 0, 0.584175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4621,-99) , 
7, 0.433159, 1, 0, 0.480429,-99) , 
6, 1.00589, 0, 0, 0.498298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439241,-99) , 
3, 3.14137, 1, 0, 0.509993,-99) , 
NN(
0, 
0, 
-1, -0.740137, 1, -1, 0.425416,-99) , 
7, 0.716843, 0, 0, 0.461364,-99) , 
6, -951.286, 0, 0, 0.484791,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0727127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.144164, 1, 1, 0.59315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453431,-99) , 
2, -0.196889, 0, 0, 0.549167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476544,-99) , 
3, 6.89352, 0, 0, 0.481552,-99) , 
8, -1.40757, 0, 0, 0.488838,-99) , 
2, -0.0645, 1, 0, 0.498262,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0685359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.08933, 1, 1, 0.53029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383003,-99) , 
7, 0.213548, 0, 0, 0.523439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374361,-99) , 
9, -3.08366, 0, 0, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379035,-99) , 
7, 0.294398, 1, 0, 0.486352,-99) , 
9, -0.907825, 0, 0, 0.507676,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.055702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453609,-99) , 
7, 0.464342, 0, 0, 0.533722,-99) , 
7, -0.13246, 1, 0, 0.55195,-99) , 
NN(
NN(
0, 
0, 
-1, 0.551831, 1, 1, 0.512221,-99) , 
NN(
0, 
0, 
-1, -0.858778, 1, -1, 0.46915,-99) , 
7, 0.429371, 0, 0, 0.492652,-99) , 
2, -0.0737556, 1, 0, 0.500981,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0495238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.63131, 1, 1, 0.566905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493674,-99) , 
3, 4.17042, 1, 0, 0.549594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419627,-99) , 
9, -2.6334, 0, 0, 0.510789,-99) , 
NN(
0, 
0, 
-1, -1.43688, 0, -1, 0.478249,-99) , 
0, 0.4985, 1, 0, 0.49838,-99) , 
0, 0.502853, 0, 0, 0.505448,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0369778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491219,-99) , 
2, 0.132506, 0, 0, 0.495932,-99) , 
3, 6.27842, 0, 0, 0.499656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426141,-99) , 
3, 8.20208, 1, 0, 0.49576,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0488135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505843, 1, 1, 0.566669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491091,-99) , 
3, 3.56867, 0, 0, 0.502039,-99) , 
NN(
0, 
0, 
-1, 3.04881, 1, -1, 0.435357,-99) , 
0, 0.502306, 1, 0, 0.493855,-99) , 
0, 0.504755, 0, 0, 0.498519,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0813699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493605,-99) , 
6, -951.286, 0, 0, 0.579374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476694,-99) , 
1, 0.00248844, 0, 0, 0.492022,-99) , 
1, -0.00375019, 1, 0, 0.501308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383625,-99) , 
1, 0.00815977, 1, 0, 0.495902,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0514289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.28242, 0, 1, 0.555577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453301,-99) , 
3, 3.60007, 1, 0, 0.528481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434589,-99) , 
7, -1.36651, 0, 0, 0.497102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418899,-99) , 
9, -0.122143, 1, 0, 0.490468,-99) , 
7, 1.28387, 0, 0, 0.501146,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0769575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476687,-99) , 
7, 2.22493, 1, 0, 0.53873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415805,-99) , 
7, 0.965561, 0, 0, 0.525977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486457,-99) , 
1, 0.00374104, 0, 0, 0.496377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401989,-99) , 
7, 0.895901, 1, 0, 0.484975,-99) , 
9, -0.257977, 0, 0, 0.499597,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0611518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492464,-99) , 
7, -0.543114, 1, 0, 0.532417,-99) , 
7, 0.439617, 0, 0, 0.543352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482074,-99) , 
8, -1.68018, 1, 0, 0.505377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413805,-99) , 
9, -1.19811, 0, 0, 0.498409,-99) , 
8, -3.22278, 1, 0, 0.513174,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0582723);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.67927, 0, 1, 0.59556,-99) , 
NN(
NN(
0, 
0, 
-1, -1.35509, 1, 1, 0.507177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.220768,-99) , 
7, -0.76845, 1, 0, 0.382551,-99) , 
9, -1.84306, 0, 0, 0.494432,-99) , 
8, -4.3643, 1, 0, 0.501299,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0760688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.09768, 1, 1, 0.582151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387,-99) , 
7, -1.62753, 1, 0, 0.478379,-99) , 
9, -2.54927, 0, 0, 0.551286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481833,-99) , 
7, 1.62654, 0, 0, 0.492877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406505,-99) , 
3, 6.6221, 1, 0, 0.485274,-99) , 
8, -3.72463, 1, 0, 0.497757,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0618335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714992, 1, 1, 0.535888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477984,-99) , 
0, 0.500677, 0, 0, 0.490912,-99) , 
1, -0.000712534, 1, 0, 0.507932,-99) , 
NN(
0, 
0, 
-1, 0.0145161, 0, -1, 0.433547,-99) , 
0, 0.491431, 0, 0, 0.501239,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0468224);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -5.03664, 0, 1, 0.571242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46631,-99) , 
9, 0.321607, 1, 0, 0.499396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414963,-99) , 
0, 0.499043, 0, 0, 0.455816,-99) , 
1, 0.00388765, 1, 0, 0.49445,-99) , 
8, -4.33387, 1, 0, 0.500216,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.104963);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388425,-99) , 
6, -1.2785, 0, 0, 0.558264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380926,-99) , 
7, -0.708466, 0, 0, 0.478056,-99) , 
6, -951.286, 0, 0, 0.527264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49335,-99) , 
8, -2.99214, 1, 0, 0.505698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310895,-99) , 
9, -0.87356, 0, 0, 0.491167,-99) , 
7, 0.429851, 1, 0, 0.506758,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0671938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475528,-99) , 
5, 0.00210725, 0, 0, 0.519647,-99) , 
6, -951.286, 1, 0, 0.558178,-99) , 
NN(
NN(
0, 
0, 
-1, -1.70483, 0, 1, 0.515226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436495,-99) , 
7, -0.809545, 1, 0, 0.451908,-99) , 
8, -3.23977, 0, 0, 0.499765,-99) , 
8, -4.00741, 1, 0, 0.506965,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0682379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.877137, 1, 1, 0.549526,-99) , 
NN(
0, 
0, 
-1, -1.34303, 0, -1, 0.485905,-99) , 
8, -3.37677, 1, 0, 0.502837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423874,-99) , 
3, 3.05312, 1, 0, 0.487446,-99) , 
NN(
0, 
0, 
-1, 0.00493734, 1, -1, 0.423653,-99) , 
0, 0.499044, 1, 0, 0.459486,-99) , 
1, 0.00145893, 1, 0, 0.489402,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0695573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49712, 0, 1, 0.556506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473483,-99) , 
8, -2.91039, 1, 0, 0.503433,-99) , 
7, 1.57212, 0, 0, 0.513597,-99) , 
NN(
0, 
0, 
-1, -3.05195, 0, -1, 0.45442,-99) , 
2, -0.113471, 0, 0, 0.507007,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.085731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.305832, 1, 1, 0.517078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334344,-99) , 
8, -3.70896, 1, 0, 0.424536,-99) , 
9, -1.22586, 0, 0, 0.506899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402872,-99) , 
7, -0.415334, 1, 0, 0.510561,-99) , 
NN(
0, 
0, 
-1, -0.283113, 0, -1, 0.350271,-99) , 
9, -1.46122, 1, 0, 0.474668,-99) , 
7, -0.142827, 0, 0, 0.498326,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0570396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474169,-99) , 
0, 0.498099, 0, 0, 0.506183,-99) , 
2, -0.0220814, 1, 0, 0.540222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448255,-99) , 
7, -1.58368, 0, 0, 0.540847,-99) , 
NN(
0, 
0, 
-1, -1.89112, 0, -1, 0.481464,-99) , 
7, -0.713115, 1, 0, 0.488573,-99) , 
1, 0.00388765, 0, 0, 0.493818,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0693812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495299,-99) , 
9, -0.264544, 1, 0, 0.516977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468533,-99) , 
7, -0.0714499, 1, 0, 0.488939,-99) , 
8, -2.51762, 0, 0, 0.501136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.208179,-99) , 
7, -1.28255, 1, 0, 0.40947,-99) , 
9, -2.39655, 0, 0, 0.493937,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0641781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393276,-99) , 
9, -1.44835, 0, 0, 0.507123,-99) , 
7, -0.694878, 1, 0, 0.521723,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496748,-99) , 
9, -1.27755, 1, 0, 0.503398,-99) , 
NN(
0, 
0, 
-1, -0.318304, 1, -1, 0.433408,-99) , 
9, -1.50119, 0, 0, 0.48656,-99) , 
0, 0.49619, 1, 0, 0.497875,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0983024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481476,-99) , 
8, -2.3046, 0, 0, 0.533618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44674,-99) , 
9, 0.491431, 0, 0, 0.486334,-99) , 
7, 1.60321, 1, 0, 0.514334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455938,-99) , 
8, -3.05192, 0, 0, 0.480728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340338,-99) , 
7, 0.65878, 1, 0, 0.398288,-99) , 
7, 0.546134, 1, 0, 0.469297,-99) , 
9, -0.629676, 0, 0, 0.490893,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0791114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.32602, 1, 1, 0.573949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433065,-99) , 
6, -0.993506, 0, 0, 0.513369,-99) , 
6, -951.286, 1, 0, 0.534215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472449,-99) , 
0, 0.491428, 1, 0, 0.480842,-99) , 
7, -1.28395, 1, 0, 0.485495,-99) , 
0, 0.499045, 0, 0, 0.504853,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0869384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0647098, 1, 1, 0.531957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324696,-99) , 
7, -0.980106, 1, 0, 0.477256,-99) , 
9, -2.09948, 0, 0, 0.523571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450519,-99) , 
7, 1.22373, 0, 0, 0.502065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391508,-99) , 
9, 0.00423288, 1, 0, 0.454305,-99) , 
8, -1.80773, 0, 0, 0.485899,-99) , 
8, -2.14628, 1, 0, 0.512132,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0695408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.685382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486755,-99) , 
0, 0.499042, 1, 0, 0.583492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459885,-99) , 
0, 0.492382, 0, 0, 0.506203,-99) , 
8, -3.63399, 1, 0, 0.511953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453094,-99) , 
8, -3.9736, 0, 0, 0.492451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331141,-99) , 
7, -0.588339, 1, 0, 0.451279,-99) , 
9, -1.71638, 0, 0, 0.500402,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0836919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490729,-99) , 
3, 1.59409, 1, 0, 0.54642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427149,-99) , 
8, -2.85618, 0, 0, 0.474352,-99) , 
3, 3.21151, 1, 0, 0.521172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46859,-99) , 
8, -3.57804, 1, 0, 0.479765,-99) , 
0, 0.497594, 0, 0, 0.48534,-99) , 
0, 0.498093, 0, 0, 0.502797,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0339809);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.17492, 1, 1, 0.575673,-99) , 
NN(
0, 
0, 
-1, -2.72723, 0, -1, 0.489014,-99) , 
1, 0.00388765, 0, 0, 0.497049,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0749604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05334, 0, 1, 0.536108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481887,-99) , 
2, -0.0498117, 1, 0, 0.494478,-99) , 
8, -3.01219, 1, 0, 0.510226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48869,-99) , 
1, 0.000965282, 0, 0, 0.509055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429376,-99) , 
6, 0.438975, 0, 0, 0.465503,-99) , 
6, -951.286, 1, 0, 0.480482,-99) , 
0, 0.499046, 1, 0, 0.49782,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0996359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.620914, 0, 1, 0.559684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374089,-99) , 
7, -0.588339, 1, 0, 0.479846,-99) , 
9, -1.72216, 0, 0, 0.525959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397047,-99) , 
8, -2.42963, 1, 0, 0.546653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38275,-99) , 
9, -0.345913, 0, 0, 0.480203,-99) , 
7, 0.496337, 1, 0, 0.490213,-99) , 
8, -2.93546, 1, 0, 0.505053,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0743825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499679, 0, 1, 0.544861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487413,-99) , 
7, -0.998416, 1, 0, 0.49482,-99) , 
1, -0.000712534, 1, 0, 0.513015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46308,-99) , 
2, -0.0177997, 1, 0, 0.489567,-99) , 
NN(
0, 
0, 
-1, 0.504273, 0, -1, 0.415044,-99) , 
0, 0.503487, 1, 0, 0.454934,-99) , 
0, 0.500948, 1, 0, 0.496584,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0463195);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571659,-99) , 
NN(
NN(
0, 
0, 
-1, 0.144016, 1, 1, 0.51482,-99) , 
NN(
0, 
0, 
-1, -4.42374, 1, -1, 0.378836,-99) , 
9, -2.15568, 0, 0, 0.50743,-99) , 
7, -1.2843, 1, 0, 0.51063,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.108354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31453,-99) , 
7, 0.0238901, 0, 0, 0.527927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28753,-99) , 
7, 0.17958, 1, 0, 0.484383,-99) , 
9, -1.09645, 0, 0, 0.508736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41175,-99) , 
6, -0.0707483, 0, 0, 0.477075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419092,-99) , 
6, -951.286, 0, 0, 0.456749,-99) , 
7, 1.57186, 1, 0, 0.497959,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0484776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47366,-99) , 
9, -2.51107, 0, 0, 0.541513,-99) , 
NN(
NN(
0, 
0, 
-1, -0.353977, 0, -1, 0.493396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254507,-99) , 
7, -0.567619, 1, 0, 0.431186,-99) , 
9, -1.66614, 0, 0, 0.48759,-99) , 
8, -4.11922, 1, 0, 0.492958,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0426345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497751,-99) , 
7, 0.224452, 1, 0, 0.511169,-99) , 
NN(
0, 
0, 
-1, 0.378652, 1, -1, 0.476841,-99) , 
0, 0.499044, 1, 0, 0.496375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353642,-99) , 
7, -1.85565, 0, 0, 0.492776,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0296386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392083,-99) , 
8, -4.43146, 0, 0, 0.499271,-99) , 
8, -4.74381, 1, 0, 0.502825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406521,-99) , 
2, -0.196956, 0, 0, 0.497512,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0648619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497045,-99) , 
7, 0.313249, 0, 0, 0.58541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458113,-99) , 
8, -2.26447, 0, 0, 0.503243,-99) , 
7, 0.857462, 1, 0, 0.5212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568385,-99) , 
NN(
0, 
0, 
-1, 0.689506, 1, -1, 0.47685,-99) , 
7, 0.873977, 0, 0, 0.486357,-99) , 
8, -2.69413, 0, 0, 0.50295,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0380063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493393,-99) , 
7, -0.827501, 1, 0, 0.499118,-99) , 
8, -1.57923, 0, 0, 0.505417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442248,-99) , 
9, 1.02057, 1, 0, 0.500882,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0864298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.32383, 1, 1, 0.516698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383586,-99) , 
7, -0.192913, 1, 0, 0.440531,-99) , 
9, -1.26429, 0, 0, 0.504306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434313,-99) , 
8, -3.94093, 0, 0, 0.471534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334365,-99) , 
9, -1.73575, 1, 0, 0.441991,-99) , 
7, -0.427715, 0, 0, 0.491843,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0721014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465404,-99) , 
6, -951.286, 0, 0, 0.519538,-99) , 
NN(
0, 
0, 
-1, -0.667306, 0, -1, 0.477829,-99) , 
7, 0.459158, 1, 0, 0.494322,-99) , 
NN(
0, 
0, 
-1, -1.53969, 1, -1, 0.41318,-99) , 
9, -2.45565, 0, 0, 0.488806,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0721919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00555723, 1, 1, 0.519229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445621,-99) , 
7, 0.601232, 1, 0, 0.470789,-99) , 
0, 0.500945, 1, 0, 0.505614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385505,-99) , 
7, -1.78904, 0, 0, 0.509006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328336,-99) , 
7, -0.689647, 1, 0, 0.458278,-99) , 
9, -1.81202, 0, 0, 0.49793,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0487756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489332,-99) , 
3, 4.14964, 0, 0, 0.499451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407903,-99) , 
2, -0.201745, 0, 0, 0.494488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416994,-99) , 
2, 0.199574, 1, 0, 0.490532,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0590133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.523257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469952,-99) , 
9, 0.243221, 1, 0, 0.511358,-99) , 
NN(
0, 
0, 
-1, -0.713751, 0, -1, 0.467423,-99) , 
0, 0.499044, 0, 0, 0.484901,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0435094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486304,-99) , 
3, 2.64801, 0, 0, 0.498187,-99) , 
3, 0.453199, 1, 0, 0.502026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440396,-99) , 
3, 7.04013, 1, 0, 0.497571,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0685446);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388461,-99) , 
9, -1.25304, 0, 0, 0.507313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338959,-99) , 
9, -1.39714, 1, 0, 0.47285,-99) , 
7, -0.141381, 0, 0, 0.498298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389217,-99) , 
3, 8.2051, 1, 0, 0.492603,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0609066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463771,-99) , 
0, 0.500948, 1, 0, 0.494325,-99) , 
8, -4.11801, 1, 0, 0.499691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397134,-99) , 
8, -4.98619, 0, 0, 0.502468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288426,-99) , 
7, -1.02294, 1, 0, 0.441707,-99) , 
9, -2.1904, 0, 0, 0.494038,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0590906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487002,-99) , 
7, 0.429371, 1, 0, 0.502344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452146,-99) , 
2, -0.0860434, 1, 0, 0.473332,-99) , 
0, 0.494691, 0, 0, 0.496157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383778,-99) , 
0, 0.489521, 0, 0, 0.491889,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.024879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586433,-99) , 
NN(
0, 
0, 
-1, -4.24507, 0, -1, 0.495233,-99) , 
8, -4.52584, 1, 0, 0.499986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397333,-99) , 
0, 0.489525, 0, 0, 0.496244,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0571596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.16172, 1, 1, 0.523861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404114,-99) , 
2, 0.0755527, 1, 0, 0.475288,-99) , 
3, 3.49386, 1, 0, 0.509895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373375,-99) , 
7, -1.85296, 0, 0, 0.506186,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0778643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497158,-99) , 
7, 0.453622, 1, 0, 0.513423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341168,-99) , 
7, -0.342124, 0, 0, 0.505806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445018,-99) , 
9, -2.35971, 0, 0, 0.504586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292181,-99) , 
7, -0.351674, 1, 0, 0.454177,-99) , 
9, -1.53329, 0, 0, 0.494027,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.048342);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393642,-99) , 
7, -0.470043, 0, 0, 0.502062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349559,-99) , 
7, -0.702832, 1, 0, 0.441319,-99) , 
9, -1.74737, 0, 0, 0.493239,-99) , 
7, -1.56917, 1, 0, 0.498307,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0855561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503802, 0, 1, 0.527635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306879,-99) , 
7, 0.0596076, 1, 0, 0.415011,-99) , 
9, -1.26448, 0, 0, 0.516991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45504,-99) , 
9, -1.78193, 0, 0, 0.473741,-99) , 
NN(
0, 
0, 
-1, 0.498054, 0, -1, 0.36666,-99) , 
9, -1.4731, 1, 0, 0.450327,-99) , 
7, -0.140089, 0, 0, 0.49911,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0476926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.3854, 1, 1, 0.607795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435209,-99) , 
9, -2.79788, 0, 0, 0.543346,-99) , 
NN(
0, 
0, 
-1, -1.96498, 0, -1, 0.483776,-99) , 
8, -4.13118, 1, 0, 0.489775,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0699973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83868, 1, 1, 0.52282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471669,-99) , 
9, -2.7515, 1, 0, 0.476762,-99) , 
9, 0.166182, 0, 0, 0.487227,-99) , 
NN(
0, 
0, 
-1, -1.37828, 0, -1, 0.434356,-99) , 
2, -0.0737556, 0, 0, 0.47869,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0665206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.988514, 0, 1, 0.549378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490133,-99) , 
8, -2.03748, 1, 0, 0.532884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473703,-99) , 
6, -951.286, 1, 0, 0.491505,-99) , 
NN(
0, 
0, 
-1, -0.130927, 0, -1, 0.43101,-99) , 
0, 0.492378, 0, 0, 0.484434,-99) , 
2, -0.0304532, 1, 0, 0.496408,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0683484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426636,-99) , 
9, -0.00176312, 1, 0, 0.514748,-99) , 
8, -1.83503, 0, 0, 0.52155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517899,-99) , 
NN(
0, 
0, 
-1, -1.28267, 0, -1, 0.457525,-99) , 
8, -1.72454, 1, 0, 0.473471,-99) , 
9, 0.234465, 1, 0, 0.510633,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0817864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.724603, 0, 1, 0.614462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484759,-99) , 
9, 0.297687, 1, 0, 0.504513,-99) , 
9, -0.38383, 1, 0, 0.524289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581637,-99) , 
NN(
0, 
0, 
-1, -4.30369, 0, -1, 0.459893,-99) , 
8, -4.68457, 1, 0, 0.469067,-99) , 
8, -2.68743, 0, 0, 0.494045,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0615128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000623044, 0, 1, 0.606807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465724,-99) , 
1, -0.000909935, 1, 0, 0.499803,-99) , 
8, -2.75216, 1, 0, 0.547542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488249,-99) , 
7, -0.875484, 1, 0, 0.493617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409289,-99) , 
7, -1.28364, 0, 0, 0.488419,-99) , 
0, 0.494282, 1, 0, 0.499419,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0606065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474157,-99) , 
8, -3.68672, 1, 0, 0.514961,-99) , 
9, -1.05579, 0, 0, 0.536376,-99) , 
NN(
NN(
0, 
0, 
-1, 0.848128, 1, 1, 0.546243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447385,-99) , 
3, 4.17042, 1, 0, 0.488734,-99) , 
8, -1.49778, 0, 0, 0.501011,-99) , 
8, -3.15426, 1, 0, 0.512936,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0570634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465637,-99) , 
8, -1.21695, 1, 0, 0.509637,-99) , 
8, -3.97362, 1, 0, 0.513565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558606,-99) , 
NN(
0, 
0, 
-1, 0.00143017, 0, -1, 0.375025,-99) , 
7, -1.28436, 1, 0, 0.459036,-99) , 
9, -2.1324, 0, 0, 0.507881,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0698235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.967918, 0, 1, 0.527811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452849,-99) , 
9, -0.250552, 0, 0, 0.482716,-99) , 
8, -3.13869, 1, 0, 0.495586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415249,-99) , 
7, -1.57034, 1, 0, 0.482572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.234043,-99) , 
9, -2.29192, 1, 0, 0.40683,-99) , 
7, -0.999163, 0, 0, 0.487131,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0627004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479836,-99) , 
0, 0.494418, 0, 0, 0.514733,-99) , 
NN(
0, 
0, 
-1, -0.897489, 0, -1, 0.476721,-99) , 
0, 0.497139, 1, 0, 0.491547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382633,-99) , 
9, -2.93047, 0, 0, 0.48795,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0720982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35842,-99) , 
9, -2.62962, 0, 0, 0.545127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385865,-99) , 
7, -1.79607, 0, 0, 0.529053,-99) , 
NN(
0, 
0, 
-1, -1.39657, 0, -1, 0.48283,-99) , 
8, -3.27985, 1, 0, 0.496277,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0607346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499573,-99) , 
7, 1.6151, 1, 0, 0.516325,-99) , 
8, -2.30741, 1, 0, 0.531297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491752,-99) , 
1, 0.00216756, 0, 0, 0.521584,-99) , 
NN(
0, 
0, 
-1, -1.53056, 0, -1, 0.473185,-99) , 
8, -3.4459, 1, 0, 0.489885,-99) , 
7, 1.28851, 0, 0, 0.50169,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.062104);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.87512, 1, 1, 0.586788,-99) , 
NN(
NN(
0, 
0, 
-1, 0.503805, 0, 1, 0.516113,-99) , 
NN(
0, 
0, 
-1, -0.313815, 1, -1, 0.407331,-99) , 
9, -1.60653, 0, 0, 0.500845,-99) , 
7, -0.999094, 1, 0, 0.506803,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0452442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492755,-99) , 
3, 2.28762, 0, 0, 0.549365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47762,-99) , 
9, -0.893812, 0, 0, 0.500593,-99) , 
8, -4.02485, 1, 0, 0.504134,-99) , 
8, -4.57425, 1, 0, 0.509005,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0831676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499046, 1, 1, 0.560669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393178,-99) , 
3, 2.39762, 1, 0, 0.454026,-99) , 
9, -2.58661, 0, 0, 0.527775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479459,-99) , 
7, 0.225562, 1, 0, 0.488982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35065,-99) , 
7, -0.214873, 1, 0, 0.412491,-99) , 
9, -1.34906, 0, 0, 0.478911,-99) , 
7, -0.427493, 1, 0, 0.487256,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0561685);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.443672, 0, 1, 0.587541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458753,-99) , 
3, 6.61188, 1, 0, 0.509837,-99) , 
NN(
0, 
0, 
-1, -0.0338938, 1, -1, 0.463247,-99) , 
9, -1.28859, 0, 0, 0.495915,-99) , 
1, -0.00408005, 1, 0, 0.50363,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0506796);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489311,-99) , 
6, -951.288, 0, 0, 0.529899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485162,-99) , 
5, 0.00941509, 0, 0, 0.490129,-99) , 
8, -1.90335, 0, 0, 0.499005,-99) , 
0, 0.490473, 1, 0, 0.502606,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0774141);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478878,-99) , 
8, -2.2826, 1, 0, 0.507241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.213202,-99) , 
7, -0.256776, 1, 0, 0.461121,-99) , 
9, -1.54727, 0, 0, 0.496174,-99) , 
7, 2.1431, 0, 0, 0.501259,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0596815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.75852, 1, 1, 0.613528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490052,-99) , 
8, -4.88016, 1, 0, 0.536607,-99) , 
8, -4.45257, 0, 0, 0.57643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4881,-99) , 
7, -0.00564485, 1, 0, 0.497963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339775,-99) , 
9, -1.89112, 0, 0, 0.491939,-99) , 
7, -0.712995, 1, 0, 0.501102,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0802268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441931,-99) , 
6, -0.992543, 0, 0, 0.5223,-99) , 
NN(
0, 
0, 
-1, -0.142687, 0, -1, 0.472494,-99) , 
6, -951.286, 0, 0, 0.503637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422677,-99) , 
2, -0.19705, 0, 0, 0.499141,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0771839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.125814, 1, 1, 0.523946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35428,-99) , 
7, -0.35355, 0, 0, 0.517241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46989,-99) , 
8, -3.68159, 0, 0, 0.496823,-99) , 
NN(
0, 
0, 
-1, 0.498047, 1, -1, 0.340731,-99) , 
7, -0.403875, 1, 0, 0.459246,-99) , 
9, -1.55612, 0, 0, 0.504627,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0853741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491296,-99) , 
6, -951.286, 0, 0, 0.573887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430796,-99) , 
7, 0.618743, 1, 0, 0.509987,-99) , 
8, -2.59502, 0, 0, 0.522164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470773,-99) , 
0, 0.499037, 0, 0, 0.497344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391491,-99) , 
9, -0.207982, 0, 0, 0.478876,-99) , 
7, 0.999547, 1, 0, 0.504862,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0858654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457634,-99) , 
7, -0.70823, 0, 0, 0.539676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473056,-99) , 
2, 0.0145161, 0, 0, 0.494863,-99) , 
0, 0.498086, 0, 0, 0.516936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474451,-99) , 
6, 1.47844, 0, 0, 0.485901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337848,-99) , 
6, -1.56288, 0, 0, 0.472309,-99) , 
6, -951.286, 1, 0, 0.487491,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0410878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.81811, 1, 1, 0.583694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479703,-99) , 
0, 0.504666, 1, 0, 0.506543,-99) , 
3, 2.8142, 1, 0, 0.549894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494737,-99) , 
1, -0.00426212, 1, 0, 0.502159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418424,-99) , 
5, 0.0127889, 1, 0, 0.499521,-99) , 
0, 0.502852, 0, 0, 0.506598,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0839995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.49288, 1, 1, 0.525161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338458,-99) , 
7, -0.666178, 1, 0, 0.485084,-99) , 
9, -1.81202, 0, 0, 0.518718,-99) , 
NN(
NN(
0, 
0, 
-1, 0.479852, 1, 1, 0.548565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402317,-99) , 
9, -0.560633, 0, 0, 0.454214,-99) , 
0, 0.491244, 1, 0, 0.47798,-99) , 
0, 0.495234, 0, 0, 0.507684,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0512157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.384626, 1, 1, 0.582998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482569,-99) , 
3, 4.15712, 0, 0, 0.491072,-99) , 
3, 0.494508, 1, 0, 0.496161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439777,-99) , 
3, 8.18935, 1, 0, 0.493121,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0563663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497651,-99) , 
9, -1.74517, 0, 0, 0.546664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396736,-99) , 
7, 0.0504694, 1, 0, 0.530973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498864,-99) , 
8, -3.39986, 1, 0, 0.502566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256552,-99) , 
7, -0.119311, 0, 0, 0.488909,-99) , 
9, -1.26715, 1, 0, 0.500353,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0888059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.493687, 0, 1, 0.606754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408788,-99) , 
9, -2.62523, 1, 0, 0.522563,-99) , 
7, -0.920079, 0, 0, 0.560837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495551,-99) , 
7, 1.43707, 1, 0, 0.524602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467116,-99) , 
7, -0.443388, 1, 0, 0.480653,-99) , 
8, -2.32602, 0, 0, 0.498332,-99) , 
8, -3.9825, 1, 0, 0.506135,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0526338);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.583233, 1, 1, 0.555675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449311,-99) , 
9, -2.93344, 0, 0, 0.546712,-99) , 
NN(
0, 
0, 
-1, 0.00567397, 1, -1, 0.49003,-99) , 
8, -3.79712, 1, 0, 0.500958,-99) , 
8, -1.66148, 0, 0, 0.50999,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0477953);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5058, 1, 1, 0.569264,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502295, 0, 1, 0.515855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418172,-99) , 
0, 0.503031, 1, 0, 0.511229,-99) , 
0, 0.503805, 0, 0, 0.516885,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0358531);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480612,-99) , 
9, -1.40662, 0, 0, 0.505651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433028,-99) , 
9, -2.15073, 0, 0, 0.502326,-99) , 
7, -1.2843, 1, 0, 0.506275,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0678661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142482, 0, 1, 0.527228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478517,-99) , 
8, -1.2627, 0, 0, 0.493454,-99) , 
8, -2.3298, 1, 0, 0.513741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267761,-99) , 
7, -1.3777, 1, 0, 0.421549,-99) , 
9, -2.39655, 0, 0, 0.506899,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0594182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.92454, 0, 1, 0.51957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312592,-99) , 
7, -1.23363, 1, 0, 0.443792,-99) , 
9, -2.31074, 0, 0, 0.51339,-99) , 
NN(
0, 
0, 
-1, 0.499049, 1, -1, 0.378213,-99) , 
1, 0.00663906, 1, 0, 0.50526,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0707316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.33352, 1, 1, 0.543856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489371,-99) , 
9, 0.0920032, 0, 0, 0.532715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489231,-99) , 
7, -0.142132, 0, 0, 0.524215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468551,-99) , 
2, 0.0933672, 0, 0, 0.4797,-99) , 
0, 0.49714, 1, 0, 0.497112,-99) , 
7, 1.28623, 0, 0, 0.507284,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.10295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.379237, 0, 1, 0.567506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408669,-99) , 
7, 0.569222, 0, 0, 0.489893,-99) , 
8, -2.77532, 1, 0, 0.524325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459867,-99) , 
7, -0.141895, 0, 0, 0.518985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436557,-99) , 
7, -0.396241, 1, 0, 0.459162,-99) , 
6, -0.138414, 0, 0, 0.490213,-99) , 
6, -951.286, 1, 0, 0.50201,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0746745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499948, 0, 1, 0.587769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486014,-99) , 
7, -1.28082, 1, 0, 0.491991,-99) , 
1, -0.00408005, 1, 0, 0.500058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45635,-99) , 
7, 1.14986, 1, 0, 0.482691,-99) , 
NN(
0, 
0, 
-1, -2.70453, 0, -1, 0.411092,-99) , 
7, 0.714418, 0, 0, 0.441657,-99) , 
0, 0.495234, 0, 0, 0.483857,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0543905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407881,-99) , 
5, 0.0127887, 1, 0, 0.512461,-99) , 
8, -1.88249, 0, 0, 0.51946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459282,-99) , 
0, 0.498085, 1, 0, 0.488101,-99) , 
9, 0.355781, 1, 0, 0.51305,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0420455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458885,-99) , 
0, 0.499045, 0, 0, 0.496257,-99) , 
6, -951.286, 1, 0, 0.533195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498178,-99) , 
8, -3.16939, 1, 0, 0.506563,-99) , 
NN(
0, 
0, 
-1, 0.20299, 1, -1, 0.47177,-99) , 
9, -1.03397, 0, 0, 0.496364,-99) , 
8, -4.13255, 1, 0, 0.500237,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.068122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47169,-99) , 
3, 6.63048, 1, 0, 0.519831,-99) , 
NN(
0, 
0, 
-1, -1.41565, 1, -1, 0.406052,-99) , 
9, -2.46364, 0, 0, 0.511702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357386,-99) , 
0, 0.489527, 0, 0, 0.505641,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0716687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475917,-99) , 
7, 0.432779, 0, 0, 0.503277,-99) , 
3, 0.4462, 1, 0, 0.510017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465056,-99) , 
2, 0.00196541, 0, 0, 0.483279,-99) , 
NN(
0, 
0, 
-1, -3.25142, 0, -1, 0.413189,-99) , 
2, 0.0755527, 1, 0, 0.462808,-99) , 
3, 3.50725, 1, 0, 0.496333,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0616532);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.47976, 1, 1, 0.563152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462739,-99) , 
8, -1.12162, 1, 0, 0.512307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285077,-99) , 
7, -0.248876, 1, 0, 0.453654,-99) , 
9, -1.51721, 0, 0, 0.503061,-99) , 
7, -0.998607, 1, 0, 0.507349,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0816079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424472,-99) , 
7, 0.519287, 1, 0, 0.495218,-99) , 
7, 0.889761, 0, 0, 0.506858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432501,-99) , 
9, -0.40378, 1, 0, 0.54188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415334,-99) , 
7, 1.59345, 0, 0, 0.460649,-99) , 
7, 0.891098, 1, 0, 0.480666,-99) , 
8, -2.74014, 1, 0, 0.493364,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0793241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.303983, 0, 1, 0.534413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461211,-99) , 
3, 4.16304, 1, 0, 0.516639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469038,-99) , 
7, 0.542292, 1, 0, 0.485459,-99) , 
NN(
0, 
0, 
-1, -4.63687, 0, -1, 0.42226,-99) , 
8, -3.60843, 0, 0, 0.470126,-99) , 
0, 0.500948, 0, 0, 0.48198,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0877691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493414,-99) , 
8, -2.72582, 1, 0, 0.515527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380216,-99) , 
7, 0.482449, 0, 0, 0.505298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471202,-99) , 
8, -3.29717, 0, 0, 0.49254,-99) , 
NN(
0, 
0, 
-1, -1.18497, 0, -1, 0.412876,-99) , 
7, 0.0735218, 1, 0, 0.464955,-99) , 
9, -0.770518, 0, 0, 0.486638,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0861715);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493866,-99) , 
7, 0.772575, 1, 0, 0.509163,-99) , 
NN(
0, 
0, 
-1, -2.70517, 0, -1, 0.406364,-99) , 
7, 0.401297, 0, 0, 0.498747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467038,-99) , 
8, -3.28609, 0, 0, 0.493082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301934,-99) , 
7, 0.254269, 1, 0, 0.464638,-99) , 
9, -0.973896, 0, 0, 0.485566,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0820176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497145, 1, 1, 0.59262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472911,-99) , 
9, -2.6302, 0, 0, 0.548758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430104,-99) , 
9, -0.429371, 0, 0, 0.504387,-99) , 
NN(
0, 
0, 
-1, -0.505597, 1, -1, 0.452561,-99) , 
7, 0.726551, 0, 0, 0.480283,-99) , 
8, -3.9825, 1, 0, 0.48895,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0252759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.37547, 1, 1, 0.507542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411442,-99) , 
9, -2.66336, 0, 0, 0.504691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393783,-99) , 
7, -1.85296, 0, 0, 0.501593,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.044351);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.81382, 0, 1, 0.600659,-99) , 
NN(
NN(
0, 
0, 
-1, -3.58225, 1, 1, 0.50892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407088,-99) , 
7, -0.693044, 1, 0, 0.444765,-99) , 
8, -3.82952, 0, 0, 0.501638,-99) , 
8, -4.37633, 1, 0, 0.508165,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0727488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493657,-99) , 
8, -1.91051, 0, 0, 0.51169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447816,-99) , 
7, 2.02047, 1, 0, 0.499631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45869,-99) , 
8, -2.91083, 0, 0, 0.47146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387828,-99) , 
1, -0.00408005, 0, 0, 0.462452,-99) , 
7, 0.429213, 0, 0, 0.483236,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0613325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456337,-99) , 
7, -1.357, 1, 0, 0.554363,-99) , 
9, -2.30461, 0, 0, 0.592174,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00455213, 0, 1, 0.524092,-99) , 
NN(
0, 
0, 
-1, -2.66089, 1, -1, 0.47884,-99) , 
0, 0.496187, 1, 0, 0.492956,-99) , 
8, -4.18974, 1, 0, 0.501776,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0820664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.37305, 0, 1, 0.535358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419081,-99) , 
0, 0.497149, 0, 0, 0.465576,-99) , 
8, -1.71823, 1, 0, 0.521429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409183,-99) , 
3, 1.23782, 0, 0, 0.495327,-99) , 
NN(
0, 
0, 
-1, -0.73052, 1, -1, 0.425463,-99) , 
3, 3.49386, 1, 0, 0.465227,-99) , 
2, 0.0385174, 1, 0, 0.507312,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0862813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.91022, 1, 1, 0.534118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374084,-99) , 
7, 0.437433, 0, 0, 0.523158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485707,-99) , 
0, 0.495235, 1, 0, 0.502151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332786,-99) , 
7, 0.428038, 1, 0, 0.476019,-99) , 
9, -0.770518, 0, 0, 0.500939,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0799731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434505,-99) , 
7, -0.89528, 0, 0, 0.519468,-99) , 
9, -2.54145, 1, 0, 0.525375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461606,-99) , 
0, 0.491969, 0, 0, 0.50761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425745,-99) , 
1, 0.00195615, 0, 0, 0.445668,-99) , 
0, 0.494146, 1, 0, 0.479706,-99) , 
0, 0.496187, 0, 0, 0.510168,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0418638);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.63562, 0, 1, 0.617794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494544,-99) , 
1, -0.0044658, 1, 0, 0.500942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439278,-99) , 
0, 0.505709, 1, 0, 0.497955,-99) , 
8, -4.33387, 1, 0, 0.506515,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.05622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498386,-99) , 
1, 0.000599713, 1, 0, 0.521357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416631,-99) , 
5, 0.0127887, 1, 0, 0.517874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434079,-99) , 
9, 1.02529, 1, 0, 0.511159,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0690732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.606691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461113,-99) , 
7, -0.582015, 0, 0, 0.5287,-99) , 
7, -1.1438, 1, 0, 0.554754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337219,-99) , 
7, -0.119873, 0, 0, 0.498947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34782,-99) , 
7, -0.221208, 1, 0, 0.454663,-99) , 
9, -1.33581, 0, 0, 0.492606,-99) , 
8, -3.82463, 1, 0, 0.50248,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0356237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435928,-99) , 
2, -0.181792, 0, 0, 0.502025,-99) , 
8, -1.52345, 0, 0, 0.507593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451149,-99) , 
9, 0.929733, 1, 0, 0.502805,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0781566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.22694, 0, 1, 0.577123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474468,-99) , 
9, -1.83696, 1, 0, 0.550292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45369,-99) , 
7, 0.878359, 1, 0, 0.47829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370048,-99) , 
9, -1.60948, 0, 0, 0.473029,-99) , 
7, -0.427469, 1, 0, 0.485597,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0785862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4633,-99) , 
8, -2.35173, 0, 0, 0.520962,-99) , 
8, -3.09245, 1, 0, 0.564072,-99) , 
NN(
NN(
0, 
0, 
-1, 0.496191, 0, 1, 0.536077,-99) , 
NN(
0, 
0, 
-1, 0.00926934, 0, -1, 0.465729,-99) , 
2, 0.082476, 0, 0, 0.474893,-99) , 
1, 0.00388765, 0, 0, 0.483052,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0574737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480023,-99) , 
7, -1.28422, 1, 0, 0.484635,-99) , 
NN(
0, 
0, 
-1, -1.10455, 0, -1, 0.420572,-99) , 
0, 0.505165, 1, 0, 0.480225,-99) , 
0, 0.490474, 1, 0, 0.484154,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0628631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416733,-99) , 
3, 1.88999, 0, 0, 0.504357,-99) , 
2, -0.0183484, 1, 0, 0.550456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490449,-99) , 
7, -0.303084, 1, 0, 0.502557,-99) , 
NN(
0, 
0, 
-1, -4.65432, 1, -1, 0.435073,-99) , 
9, -2.39655, 0, 0, 0.497653,-99) , 
1, 0.00388765, 0, 0, 0.502605,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0619795);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6817,-99) , 
NN(
NN(
0, 
0, 
-1, -0.31592, 1, 1, 0.522357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347724,-99) , 
8, -3.49998, 1, 0, 0.470049,-99) , 
7, -0.481735, 0, 0, 0.514499,-99) , 
7, -1.56988, 1, 0, 0.519032,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0549762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.58479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431822,-99) , 
8, -3.38827, 1, 0, 0.50661,-99) , 
0, 0.495236, 1, 0, 0.524622,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447488,-99) , 
9, -0.505775, 0, 0, 0.484246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387454,-99) , 
7, -0.329421, 0, 0, 0.479781,-99) , 
8, -3.22278, 1, 0, 0.493862,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.125146);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294403,-99) , 
9, -1.99583, 0, 0, 0.555602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296923,-99) , 
9, -2.04546, 1, 0, 0.463175,-99) , 
7, -0.753993, 0, 0, 0.519439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471163,-99) , 
7, 0.824518, 1, 0, 0.487074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311843,-99) , 
7, 0.277038, 1, 0, 0.387441,-99) , 
9, -0.950909, 0, 0, 0.474313,-99) , 
7, 0.143749, 1, 0, 0.488491,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0876364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.440707, 1, 1, 0.585492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474559,-99) , 
8, -1.3403, 1, 0, 0.512913,-99) , 
9, -0.34573, 1, 0, 0.522311,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497145, 0, 1, 0.564043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438306,-99) , 
2, 0.0101134, 0, 0, 0.470465,-99) , 
8, -4.41474, 1, 0, 0.480698,-99) , 
9, -0.527062, 0, 0, 0.499539,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0708009);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459949,-99) , 
2, 0.179023, 1, 0, 0.523683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338533,-99) , 
7, -1.54017, 1, 0, 0.440783,-99) , 
9, -2.46364, 0, 0, 0.518333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415135,-99) , 
0, 0.505709, 1, 0, 0.512615,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.056051);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426831,-99) , 
2, 0.0335772, 1, 0, 0.525136,-99) , 
NN(
0, 
0, 
-1, -0.844973, 0, -1, 0.482552,-99) , 
8, -3.8447, 1, 0, 0.489542,-99) , 
8, -1.08366, 0, 0, 0.494105,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0770154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.427166, 1, 1, 0.53474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465434,-99) , 
3, 3.13927, 0, 0, 0.492223,-99) , 
6, -951.286, 0, 0, 0.519363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474833,-99) , 
0, 0.501896, 0, 0, 0.514622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458862,-99) , 
7, -0.713192, 1, 0, 0.465379,-99) , 
2, 0.0140985, 0, 0, 0.482645,-99) , 
0, 0.499043, 1, 0, 0.50341,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0661347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496813,-99) , 
7, 1.40145, 1, 0, 0.519158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431434,-99) , 
7, 0.603058, 0, 0, 0.510663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468253,-99) , 
7, 0.0772601, 1, 0, 0.510164,-99) , 
NN(
0, 
0, 
-1, 0.00455598, 1, -1, 0.471981,-99) , 
0, 0.499995, 0, 0, 0.48483,-99) , 
8, -2.16914, 0, 0, 0.492804,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0449357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.573626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46812,-99) , 
0, 0.496188, 0, 0, 0.49391,-99) , 
8, -4.11273, 1, 0, 0.499603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404391,-99) , 
9, -2.80305, 0, 0, 0.495906,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0675183);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346867,-99) , 
9, -1.27234, 1, 0, 0.537487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405347,-99) , 
9, -1.19203, 0, 0, 0.495979,-99) , 
7, -0.125807, 1, 0, 0.504385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415761,-99) , 
9, -2.6334, 0, 0, 0.500028,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.067895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378716,-99) , 
9, -1.1484, 1, 0, 0.541566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268362,-99) , 
9, -1.30412, 0, 0, 0.489515,-99) , 
7, 0.0124951, 1, 0, 0.498022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505805,-99) , 
NN(
0, 
0, 
-1, -1.02616, 1, -1, 0.419907,-99) , 
8, -4.04653, 0, 0, 0.440444,-99) , 
9, -1.84159, 0, 0, 0.489363,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0659967);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481652,-99) , 
9, -0.067643, 0, 0, 0.49713,-99) , 
NN(
0, 
0, 
-1, 0.498087, 0, -1, 0.430955,-99) , 
2, 0.0823977, 1, 0, 0.487412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325871,-99) , 
9, -3.11231, 0, 0, 0.483284,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0677806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.152583, 0, 1, 0.586161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438909,-99) , 
3, 3.0446, 1, 0, 0.495696,-99) , 
0, 0.498097, 1, 0, 0.536327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468625,-99) , 
7, 1.16133, 1, 0, 0.489032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411174,-99) , 
9, -1.36001, 0, 0, 0.48385,-99) , 
8, -3.42179, 1, 0, 0.496808,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0684241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.555475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48233,-99) , 
2, 0.00326845, 0, 0, 0.495615,-99) , 
8, -3.2821, 1, 0, 0.512424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443414,-99) , 
8, -2.13382, 1, 0, 0.48821,-99) , 
NN(
0, 
0, 
-1, 0.504618, 0, -1, 0.404022,-99) , 
8, -3.22758, 0, 0, 0.456454,-99) , 
0, 0.5019, 1, 0, 0.500133,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0819955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319944,-99) , 
9, -1.95558, 0, 0, 0.542857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414686,-99) , 
9, -0.851243, 0, 0, 0.492891,-99) , 
7, 0.170952, 1, 0, 0.504591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493273,-99) , 
3, 3.2545, 0, 0, 0.51811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290906,-99) , 
9, -1.95049, 1, 0, 0.460789,-99) , 
7, -0.7131, 0, 0, 0.498814,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0766989);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.37021, 1, 1, 0.580542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480291,-99) , 
7, 1.28192, 0, 0, 0.488843,-99) , 
NN(
0, 
0, 
-1, 0.540467, 0, -1, 0.452049,-99) , 
8, -2.30002, 1, 0, 0.474135,-99) , 
8, -4.13255, 1, 0, 0.484038,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0738156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498094, 0, 1, 0.555582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291117,-99) , 
7, -1.41825, 1, 0, 0.421959,-99) , 
9, -2.46869, 0, 0, 0.53021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487029,-99) , 
8, -3.20547, 1, 0, 0.492978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355647,-99) , 
7, 0.103479, 0, 0, 0.486424,-99) , 
9, -1.01203, 1, 0, 0.501679,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0784337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415354,-99) , 
1, 0.00220673, 1, 0, 0.512163,-99) , 
5, 0.005148, 0, 0, 0.527223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479693,-99) , 
8, -3.35231, 1, 0, 0.496056,-99) , 
NN(
0, 
0, 
-1, -1.53385, 0, -1, 0.400113,-99) , 
8, -4.46249, 0, 0, 0.489041,-99) , 
0, 0.495235, 1, 0, 0.49814,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0981423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.88478, 1, 1, 0.538428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391345,-99) , 
7, -0.876713, 1, 0, 0.465617,-99) , 
9, -1.65794, 0, 0, 0.525089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569655,-99) , 
NN(
0, 
0, 
-1, -2.719, 0, -1, 0.449072,-99) , 
0, 0.49016, 1, 0, 0.465311,-99) , 
0, 0.495238, 0, 0, 0.508994,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0293493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.15642, 1, 1, 0.504592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389065,-99) , 
6, -951.286, 0, 0, 0.458156,-99) , 
2, 0.0741566, 1, 0, 0.497408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360164,-99) , 
7, -1.84899, 0, 0, 0.49371,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0698227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500812, 1, 1, 0.517706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429772,-99) , 
9, -2.19215, 0, 0, 0.509307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483614,-99) , 
0, 0.490467, 0, 0, 0.529181,-99) , 
NN(
0, 
0, 
-1, -0.371388, 0, -1, 0.452642,-99) , 
0, 0.492605, 1, 0, 0.469175,-99) , 
0, 0.498092, 0, 0, 0.488762,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0861893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441691,-99) , 
9, -0.294777, 0, 0, 0.50047,-99) , 
8, -2.95157, 1, 0, 0.509647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460895,-99) , 
8, -3.03102, 0, 0, 0.484678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345187,-99) , 
9, -0.567698, 1, 0, 0.471335,-99) , 
7, 0.714867, 0, 0, 0.489612,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0764998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460301,-99) , 
3, 2.56171, 0, 0, 0.526083,-99) , 
3, 1.37838, 1, 0, 0.557685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419517,-99) , 
9, -1.70377, 0, 0, 0.512445,-99) , 
NN(
0, 
0, 
-1, -1.67721, 0, -1, 0.459876,-99) , 
0, 0.498093, 1, 0, 0.484738,-99) , 
8, -3.9825, 1, 0, 0.493693,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0532676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495344,-99) , 
9, 0.0602837, 1, 0, 0.515428,-99) , 
NN(
0, 
0, 
-1, 0.0126873, 1, -1, 0.477914,-99) , 
8, -2.23663, 0, 0, 0.490034,-99) , 
NN(
0, 
0, 
-1, -7.09668e-05, 0, -1, 0.403483,-99) , 
0, 0.490476, 0, 0, 0.484964,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0488024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.37198, 0, 1, 0.593494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47641,-99) , 
6, -951.286, 1, 0, 0.509338,-99) , 
0, 0.498093, 0, 0, 0.549422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494095,-99) , 
0, 0.497142, 1, 0, 0.50532,-99) , 
NN(
0, 
0, 
-1, -1.78482, 0, -1, 0.440884,-99) , 
9, -1.55022, 0, 0, 0.501045,-99) , 
8, -3.73987, 1, 0, 0.509405,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0670755);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481065,-99) , 
9, 0.262165, 1, 0, 0.511538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472035,-99) , 
9, -2.72427, 1, 0, 0.475912,-99) , 
8, -1.92491, 0, 0, 0.48424,-99) , 
0, 0.490474, 1, 0, 0.487339,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0413186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.41868, 1, 1, 0.556513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491834,-99) , 
0, 0.499994, 0, 0, 0.502394,-99) , 
1, 0.00388765, 0, 0, 0.507393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35739,-99) , 
8, -4.5936, 1, 0, 0.436989,-99) , 
7, -1.28356, 0, 0, 0.503366,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0367179);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614647,-99) , 
NN(
NN(
0, 
0, 
-1, -3.56141, 1, 1, 0.511385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351168,-99) , 
9, -2.4911, 0, 0, 0.506422,-99) , 
7, -1.56998, 1, 0, 0.509382,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0509586);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.17517, 0, 1, 0.520849,-99) , 
NN(
0, 
0, 
-1, -1.26298, 0, -1, 0.465585,-99) , 
0, 0.496187, 0, 0, 0.502076,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0593459);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464758,-99) , 
9, -2.15374, 1, 0, 0.595091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48487,-99) , 
0, 0.505709, 0, 0, 0.489455,-99) , 
7, -0.802347, 1, 0, 0.496451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377904,-99) , 
9, -2.80305, 0, 0, 0.491577,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0739317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.77168, 0, 1, 0.5698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421243,-99) , 
0, 0.49374, 0, 0, 0.481825,-99) , 
3, 3.59572, 1, 0, 0.545901,-99) , 
NN(
0, 
0, 
-1, -1.28364, 0, -1, 0.477746,-99) , 
0, 0.496188, 1, 0, 0.498378,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0789574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414986,-99) , 
9, -2.04531, 0, 0, 0.532525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381172,-99) , 
9, -2.29429, 1, 0, 0.473969,-99) , 
7, -0.943315, 0, 0, 0.525031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493895,-99) , 
8, -1.73057, 0, 0, 0.514978,-99) , 
NN(
0, 
0, 
-1, 0.390976, 1, -1, 0.460289,-99) , 
5, 0.00298031, 0, 0, 0.477614,-99) , 
9, 0.0424959, 1, 0, 0.511067,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0436266);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497141, 0, 1, 0.586653,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505846, 0, 1, 0.559819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465177,-99) , 
0, 0.500675, 1, 0, 0.497178,-99) , 
0, 0.504757, 0, 0, 0.501444,-99) , 
8, -4.39662, 1, 0, 0.50653,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0429088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00785316, 0, 1, 0.550784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494724,-99) , 
0, 0.501295, 0, 0, 0.504643,-99) , 
0, 0.495552, 1, 0, 0.508964,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491745, 0, 1, 0.522527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443012,-99) , 
3, 2.4461, 0, 0, 0.461135,-99) , 
3, 3.37226, 0, 0, 0.478215,-99) , 
0, 0.494282, 0, 0, 0.502714,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0713175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450639,-99) , 
0, 0.499995, 1, 0, 0.555841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373741,-99) , 
9, -1.55577, 0, 0, 0.504459,-99) , 
7, -0.427612, 1, 0, 0.512869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408036,-99) , 
3, 3.59704, 1, 0, 0.457627,-99) , 
2, 0.103805, 1, 0, 0.506651,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0802127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498302,-99) , 
6, -951.286, 0, 0, 0.57561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41738,-99) , 
9, -1.66054, 0, 0, 0.51648,-99) , 
7, -0.713248, 1, 0, 0.523102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475516,-99) , 
8, -3.43727, 0, 0, 0.510063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38771,-99) , 
0, 0.500773, 1, 0, 0.445642,-99) , 
0, 0.501809, 0, 0, 0.485024,-99) , 
0, 0.499996, 1, 0, 0.509455,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0733703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499621,-99) , 
7, -0.0744091, 1, 0, 0.516685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401266,-99) , 
9, -1.92799, 1, 0, 0.460647,-99) , 
8, -3.68577, 0, 0, 0.499399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438728,-99) , 
8, -1.87267, 0, 0, 0.489453,-99) , 
NN(
0, 
0, 
-1, 0.8946, 0, -1, 0.441733,-99) , 
9, 0.353485, 1, 0, 0.45939,-99) , 
8, -2.1315, 1, 0, 0.486896,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.048506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.35539, 0, 1, 0.606963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409871,-99) , 
2, 0.105428, 1, 0, 0.491285,-99) , 
2, -0.02815, 1, 0, 0.520594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420901,-99) , 
9, -2.29121, 0, 0, 0.494449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409181,-99) , 
6, -1.55706, 0, 0, 0.487968,-99) , 
6, -951.286, 1, 0, 0.499254,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0551128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.983, 1, 1, 0.579998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461514,-99) , 
9, -2.86096, 0, 0, 0.553601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479723,-99) , 
8, -2.34917, 1, 0, 0.497166,-99) , 
NN(
0, 
0, 
-1, -3.72869, 1, -1, 0.434911,-99) , 
8, -3.65061, 0, 0, 0.492042,-99) , 
8, -3.92394, 1, 0, 0.50004,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.068357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.63807, 0, 1, 0.626106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46721,-99) , 
7, -1.23673, 1, 0, 0.513825,-99) , 
7, -0.531826, 0, 0, 0.553351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463719,-99) , 
6, -951.286, 0, 0, 0.565434,-99) , 
NN(
0, 
0, 
-1, -1.13253, 0, -1, 0.481951,-99) , 
7, -0.252599, 1, 0, 0.488738,-99) , 
8, -3.72463, 1, 0, 0.499668,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0526538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493551,-99) , 
9, 0.0742529, 0, 0, 0.504334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465239,-99) , 
0, 0.506162, 0, 0, 0.474338,-99) , 
0, 0.499996, 1, 0, 0.493679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328525,-99) , 
7, -1.8556, 0, 0, 0.489404,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0632096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142637, 1, 1, 0.521828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392755,-99) , 
7, 0.165218, 0, 0, 0.460634,-99) , 
0, 0.493013, 0, 0, 0.511851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542473,-99) , 
NN(
0, 
0, 
-1, 0.505437, 0, -1, 0.407352,-99) , 
9, -1.17347, 1, 0, 0.443153,-99) , 
0, 0.503805, 1, 0, 0.503787,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.062866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0376268, 1, 1, 0.518625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352354,-99) , 
7, 0.165708, 1, 0, 0.49199,-99) , 
9, -1.02714, 0, 0, 0.509606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419215,-99) , 
8, -4.82371, 0, 0, 0.505805,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0619886);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482674,-99) , 
0, 0.4985, 0, 0, 0.501777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413166,-99) , 
5, 0.00198963, 0, 0, 0.454002,-99) , 
0, 0.502852, 1, 0, 0.494328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386391,-99) , 
1, 0.010139, 1, 0, 0.491196,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0613379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489511,-99) , 
7, -1.17676, 1, 0, 0.5673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490197,-99) , 
8, -3.06334, 1, 0, 0.499895,-99) , 
NN(
0, 
0, 
-1, 0.332494, 1, -1, 0.458046,-99) , 
9, -0.884513, 0, 0, 0.484705,-99) , 
9, -2.1591, 1, 0, 0.490965,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0799763);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506251, 1, 1, 0.601959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454215,-99) , 
0, 0.491697, 0, 0, 0.523847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46873,-99) , 
6, 1.28782, 0, 0, 0.481115,-99) , 
6, -951.286, 1, 0, 0.495782,-99) , 
0, 0.504754, 0, 0, 0.502351,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0685774);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486124,-99) , 
7, 0.0748403, 1, 0, 0.539005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362754,-99) , 
1, -0.000711809, 0, 0, 0.445583,-99) , 
7, -1.04263, 0, 0, 0.521041,-99) , 
NN(
0, 
0, 
-1, 0.0810016, 1, -1, 0.479779,-99) , 
8, -2.95379, 1, 0, 0.495968,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.065519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.430669, 0, 1, 0.536084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476661,-99) , 
8, -3.60585, 1, 0, 0.488129,-99) , 
6, -951.286, 0, 0, 0.518529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477657,-99) , 
7, -0.7131, 1, 0, 0.48701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402139,-99) , 
0, 0.500359, 0, 0, 0.47986,-99) , 
0, 0.499996, 1, 0, 0.504951,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.069233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496339, 0, 1, 0.563315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467364,-99) , 
2, -0.0724437, 0, 0, 0.509829,-99) , 
0, 0.496823, 1, 0, 0.520994,-99) , 
NN(
NN(
0, 
0, 
-1, -0.444629, 1, 1, 0.554577,-99) , 
NN(
0, 
0, 
-1, -0.49903, 0, -1, 0.446882,-99) , 
8, -3.24385, 1, 0, 0.47682,-99) , 
0, 0.494284, 0, 0, 0.511695,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0826051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484473,-99) , 
9, -0.305162, 0, 0, 0.522804,-99) , 
8, -2.97828, 1, 0, 0.531714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481154,-99) , 
6, -951.286, 1, 0, 0.505119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316095,-99) , 
9, -0.529125, 1, 0, 0.487323,-99) , 
7, 0.714063, 0, 0, 0.508288,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0525544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488145,-99) , 
3, 1.09982, 1, 0, 0.501513,-99) , 
2, -0.150612, 1, 0, 0.506271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444816,-99) , 
0, 0.497135, 0, 0, 0.487371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392266,-99) , 
8, -3.93653, 0, 0, 0.471766,-99) , 
3, 4.1767, 1, 0, 0.498843,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.055631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499033, 1, 1, 0.585441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472347,-99) , 
7, -1.18116, 1, 0, 0.503239,-99) , 
8, -3.87329, 0, 0, 0.526551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493469,-99) , 
8, -2.24381, 1, 0, 0.506671,-99) , 
NN(
0, 
0, 
-1, 1.0567, 1, -1, 0.476955,-99) , 
9, -0.122162, 0, 0, 0.48936,-99) , 
8, -3.58338, 1, 0, 0.497069,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0578058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.80929, 1, 1, 0.561715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478998,-99) , 
9, -1.43312, 0, 0, 0.511066,-99) , 
0, 0.493332, 1, 0, 0.518199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404744,-99) , 
8, -4.81074, 0, 0, 0.513404,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0583965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.15272, 1, 1, 0.544527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492406,-99) , 
0, 0.493953, 1, 0, 0.50419,-99) , 
0, 0.499861, 0, 0, 0.518323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392644,-99) , 
0, 0.489521, 0, 0, 0.51336,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0766507);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495499,-99) , 
7, 0.42148, 1, 0, 0.529802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399248,-99) , 
8, -3.40356, 0, 0, 0.474505,-99) , 
0, 0.502854, 1, 0, 0.520742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461298,-99) , 
7, 2.03487, 0, 0, 0.476205,-99) , 
8, -2.62882, 1, 0, 0.482225,-99) , 
9, -0.306807, 1, 0, 0.504722,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0522148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.76189, 0, 1, 0.517226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475175,-99) , 
7, -0.714106, 1, 0, 0.489091,-99) , 
3, 3.58524, 1, 0, 0.509163,-99) , 
NN(
0, 
0, 
-1, -1.03912, 1, -1, 0.431403,-99) , 
1, 0.0045751, 1, 0, 0.50239,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0733378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445029,-99) , 
5, 0.00752633, 1, 0, 0.529441,-99) , 
NN(
0, 
0, 
-1, 0.106257, 0, -1, 0.47902,-99) , 
9, -0.0736009, 1, 0, 0.511403,-99) , 
NN(
0, 
0, 
-1, -1.37748, 1, -1, 0.408993,-99) , 
9, -2.39655, 0, 0, 0.50427,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0840604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48267,-99) , 
9, -0.757987, 0, 0, 0.520924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42763,-99) , 
7, 0.153326, 1, 0, 0.461681,-99) , 
6, -0.702745, 0, 0, 0.504388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518701,-99) , 
NN(
0, 
0, 
-1, -0.388364, 1, -1, 0.462109,-99) , 
9, 0.266042, 0, 0, 0.474673,-99) , 
6, -951.286, 0, 0, 0.49353,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0816107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489251,-99) , 
8, -1.5671, 1, 0, 0.521262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352582,-99) , 
9, -1.41729, 0, 0, 0.451389,-99) , 
9, -1.24224, 0, 0, 0.514774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495366,-99) , 
9, -1.88524, 0, 0, 0.527409,-99) , 
NN(
0, 
0, 
-1, -3.31563, 0, -1, 0.378426,-99) , 
9, -1.60498, 1, 0, 0.479389,-99) , 
7, -0.141867, 0, 0, 0.505985,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0613006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00474879, 1, 1, 0.61546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456886,-99) , 
8, -4.84233, 0, 0, 0.57444,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489793, 0, 1, 0.553774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48514,-99) , 
7, 1.57916, 0, 0, 0.494422,-99) , 
0, 0.491426, 1, 0, 0.498747,-99) , 
8, -3.82283, 1, 0, 0.509827,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0900731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481685,-99) , 
7, 0.714043, 1, 0, 0.507602,-99) , 
5, 0.0085607, 0, 0, 0.514696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477028,-99) , 
0, 0.49905, 1, 0, 0.545169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433994,-99) , 
0, 0.502841, 0, 0, 0.449662,-99) , 
7, 0.997986, 0, 0, 0.483865,-99) , 
6, -951.286, 0, 0, 0.50325,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0447366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.35089, 1, 1, 0.509623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376015,-99) , 
2, 0.00642165, 1, 0, 0.457784,-99) , 
0, 0.504757, 1, 0, 0.505556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284636,-99) , 
9, -2.73903, 1, 0, 0.435663,-99) , 
7, -1.28442, 0, 0, 0.501603,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0377383);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.07106, 1, 1, 0.53261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491519,-99) , 
3, 6.87778, 0, 0, 0.496198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415236,-99) , 
8, -1.71899, 1, 0, 0.490894,-99) , 
8, -1.46432, 0, 0, 0.496656,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0577155);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620199,-99) , 
NN(
NN(
0, 
0, 
-1, 3.36915, 0, 1, 0.520273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343592,-99) , 
7, -0.060109, 0, 0, 0.469245,-99) , 
0, 0.503805, 1, 0, 0.51459,-99) , 
7, -1.28436, 1, 0, 0.519063,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0708626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47962,-99) , 
2, 0.0741566, 1, 0, 0.5242,-99) , 
8, -4.00741, 1, 0, 0.534942,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0651083, 0, 1, 0.51519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454192,-99) , 
3, 0.877848, 1, 0, 0.478704,-99) , 
9, -0.722938, 0, 0, 0.498385,-99) , 
3, 3.2797, 0, 0, 0.509031,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0346389);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498281,-99) , 
7, -0.3423, 1, 0, 0.504161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329886,-99) , 
9, -1.9884, 1, 0, 0.440952,-99) , 
7, -0.694206, 0, 0, 0.49867,-99) , 
8, -4.52584, 1, 0, 0.502095,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0822921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.294845, 0, 1, 0.543866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452341,-99) , 
8, -1.86924, 0, 0, 0.480996,-99) , 
9, -0.372836, 1, 0, 0.516046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44981,-99) , 
3, 4.16304, 0, 0, 0.461593,-99) , 
2, 0.0984812, 0, 0, 0.469997,-99) , 
0, 0.49809, 1, 0, 0.492055,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0461051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469454,-99) , 
0, 0.503304, 1, 0, 0.509787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439136,-99) , 
0, 0.489521, 0, 0, 0.507784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412716,-99) , 
2, -0.197161, 0, 0, 0.502484,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0356169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565097,-99) , 
NN(
0, 
0, 
-1, -1.90818, 1, -1, 0.489421,-99) , 
8, -1.38378, 0, 0, 0.494322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445959,-99) , 
7, 2.14382, 1, 0, 0.489851,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0365031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423316,-99) , 
8, -4.03645, 0, 0, 0.504313,-99) , 
8, -4.32953, 1, 0, 0.508728,-99) , 
NN(
0, 
0, 
-1, -2.86671, 1, -1, 0.434018,-99) , 
7, -1.28442, 0, 0, 0.504413,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0467735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498274,-99) , 
0, 0.493334, 1, 0, 0.50695,-99) , 
3, 6.53517, 0, 0, 0.513472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439023,-99) , 
5, 0.0025538, 0, 0, 0.466953,-99) , 
7, 1.57199, 1, 0, 0.502958,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0700902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497279,-99) , 
9, -1.44225, 0, 0, 0.547414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427357,-99) , 
8, -2.6715, 0, 0, 0.486462,-99) , 
8, -3.07073, 1, 0, 0.507902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472415,-99) , 
7, -0.695293, 1, 0, 0.481441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392998,-99) , 
9, -2.6334, 0, 0, 0.477077,-99) , 
0, 0.499043, 0, 0, 0.489799,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0420914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000890702, 1, 1, 0.559078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479095,-99) , 
0, 0.499861, 1, 0, 0.500653,-99) , 
0, 0.504757, 0, 0, 0.504614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407794,-99) , 
2, -0.196956, 0, 0, 0.498918,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0660541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495672,-99) , 
9, -1.10293, 0, 0, 0.515206,-99) , 
8, -4.68536, 1, 0, 0.523544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481393,-99) , 
7, 1.42077, 0, 0, 0.498324,-99) , 
NN(
0, 
0, 
-1, 0.767381, 0, -1, 0.461403,-99) , 
8, -2.16683, 1, 0, 0.479611,-99) , 
8, -3.10406, 1, 0, 0.494516,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0346516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440439,-99) , 
9, 0.182846, 1, 0, 0.493572,-99) , 
8, -1.49835, 0, 0, 0.499967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448361,-99) , 
9, 0.950891, 1, 0, 0.495341,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0621104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498106, 1, 1, 0.564016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490084,-99) , 
0, 0.494302, 0, 0, 0.545712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488761,-99) , 
6, 0.433114, 0, 0, 0.512789,-99) , 
NN(
0, 
0, 
-1, 0.497136, 0, -1, 0.474664,-99) , 
6, -951.286, 0, 0, 0.499026,-99) , 
2, -0.0720295, 1, 0, 0.506408,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0575341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492726,-99) , 
6, -951.286, 0, 0, 0.538402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495518,-99) , 
7, -0.141572, 1, 0, 0.506331,-99) , 
0, 0.500678, 0, 0, 0.516069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354586,-99) , 
9, -0.684479, 0, 0, 0.436584,-99) , 
0, 0.49143, 0, 0, 0.509127,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0324508);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.303983, 1, 1, 0.546841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561097,-99) , 
NN(
0, 
0, 
-1, 0.500572, 1, -1, 0.494044,-99) , 
0, 0.50122, 0, 0, 0.497593,-99) , 
0, 0.5019, 0, 0, 0.507121,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0606396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488389,-99) , 
2, -0.154219, 0, 0, 0.535416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491362,-99) , 
2, 0.0280271, 0, 0, 0.503586,-99) , 
2, -0.0140302, 1, 0, 0.517598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449555,-99) , 
0, 0.50253, 1, 0, 0.496309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422417,-99) , 
0, 0.494283, 0, 0, 0.475035,-99) , 
2, 0.0595711, 1, 0, 0.50959,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0656135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.010909, 1, 1, 0.554763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484491,-99) , 
7, -0.161925, 0, 0, 0.515599,-99) , 
1, 0.00128212, 0, 0, 0.527591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472978,-99) , 
8, -1.28734, 1, 0, 0.521464,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0552777);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447012,-99) , 
9, -2.02789, 0, 0, 0.517403,-99) , 
NN(
0, 
0, 
-1, 4.16304, 1, -1, 0.474708,-99) , 
0, 0.500946, 1, 0, 0.505345,-99) , 
8, -4.52584, 1, 0, 0.509613,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0549609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444086,-99) , 
3, 4.16874, 1, 0, 0.501621,-99) , 
7, -0.713192, 1, 0, 0.511845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475435,-99) , 
7, 1.5709, 0, 0, 0.482645,-99) , 
0, 0.490565, 1, 0, 0.48685,-99) , 
0, 0.499996, 0, 0, 0.495201,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0953306);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481649,-99) , 
3, 2.23956, 1, 0, 0.548073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411207,-99) , 
0, 0.502128, 1, 0, 0.500683,-99) , 
3, 4.16304, 1, 0, 0.537345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479872,-99) , 
9, -1.60587, 1, 0, 0.48974,-99) , 
0, 0.489888, 1, 0, 0.4963,-99) , 
0, 0.497141, 0, 0, 0.52007,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0729301);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499763,-99) , 
9, -1.44771, 0, 0, 0.533393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467779,-99) , 
9, 0.785958, 1, 0, 0.483478,-99) , 
7, 1.74815, 1, 0, 0.523698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306733,-99) , 
7, -1.57542, 1, 0, 0.411806,-99) , 
9, -2.51668, 0, 0, 0.51678,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0777198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.29885, 1, 1, 0.578514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487143,-99) , 
2, -0.0737556, 1, 0, 0.506976,-99) , 
8, -2.54339, 0, 0, 0.537776,-99) , 
NN(
NN(
0, 
0, 
-1, -2.82744, 1, 1, 0.539729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470029,-99) , 
0, 0.500948, 0, 0, 0.487052,-99) , 
3, 2.08635, 0, 0, 0.50324,-99) , 
3, 3.56867, 0, 0, 0.512471,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0527197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471088,-99) , 
9, 0.288587, 1, 0, 0.506739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397332,-99) , 
0, 0.489521, 0, 0, 0.502969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392333,-99) , 
7, -1.57004, 0, 0, 0.498652,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0366309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495132,-99) , 
3, 0.494508, 1, 0, 0.499209,-99) , 
NN(
0, 
0, 
-1, -2.76326, 1, -1, 0.408933,-99) , 
7, -1.28422, 0, 0, 0.493689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396745,-99) , 
3, 8.18935, 1, 0, 0.488452,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0640228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493016, 1, 1, 0.53012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480218,-99) , 
3, 7.02741, 1, 0, 0.526256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543609,-99) , 
NN(
0, 
0, 
-1, 0.505435, 0, -1, 0.443709,-99) , 
8, -3.35783, 1, 0, 0.470727,-99) , 
0, 0.503804, 1, 0, 0.520009,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0546024);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.22853, 1, 1, 0.570572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485296,-99) , 
9, -2.33104, 0, 0, 0.535712,-99) , 
NN(
0, 
0, 
-1, -1.56132, 0, -1, 0.482352,-99) , 
7, -0.43131, 1, 0, 0.491034,-99) , 
1, -0.00354631, 1, 0, 0.498786,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0541377);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.02428, 0, 1, 0.542921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380511,-99) , 
9, -2.99752, 0, 0, 0.500734,-99) , 
NN(
0, 
0, 
-1, -951.288, 0, -1, 0.4247,-99) , 
9, -0.0106084, 1, 0, 0.484738,-99) , 
8, -1.49778, 0, 0, 0.493332,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0326544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.65859, 0, 1, 0.578052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495261,-99) , 
0, 0.504166, 0, 0, 0.500789,-99) , 
7, -0.999034, 1, 0, 0.505727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414602,-99) , 
0, 0.489526, 0, 0, 0.502556,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0607047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552781,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479634,-99) , 
9, -2.16915, 1, 0, 0.577424,-99) , 
NN(
0, 
0, 
-1, -1.64667, 0, -1, 0.478189,-99) , 
7, -0.815457, 1, 0, 0.487603,-99) , 
9, 0.956949, 0, 0, 0.493204,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0720285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44132,-99) , 
0, 0.491188, 0, 0, 0.522085,-99) , 
0, 0.490157, 1, 0, 0.525066,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451521,-99) , 
2, -0.0133962, 0, 0, 0.546841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43245,-99) , 
9, -0.142048, 0, 0, 0.45999,-99) , 
9, -1.43688, 1, 0, 0.478453,-99) , 
0, 0.500948, 1, 0, 0.512102,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0596202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.36636, 0, 1, 0.522108,-99) , 
NN(
0, 
0, 
-1, 0.00132098, 1, -1, 0.48024,-99) , 
7, 1.57042, 1, 0, 0.512577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47055,-99) , 
0, 0.499994, 0, 0, 0.496082,-99) , 
NN(
0, 
0, 
-1, -3.0258, 0, -1, 0.423309,-99) , 
3, 3.58524, 1, 0, 0.47473,-99) , 
1, -0.00129495, 0, 0, 0.50095,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0693594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00433889, 1, 1, 0.544047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430676,-99) , 
7, 1.51485, 0, 0, 0.484059,-99) , 
9, -0.102127, 1, 0, 0.521125,-99) , 
NN(
NN(
0, 
0, 
-1, 1.98176, 0, 1, 0.594529,-99) , 
NN(
0, 
0, 
-1, -2.77333, 0, -1, 0.474854,-99) , 
6, 1.57461, 0, 0, 0.484304,-99) , 
6, -951.286, 1, 0, 0.497017,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0666426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480877,-99) , 
7, 0.878307, 0, 0, 0.515306,-99) , 
7, -0.712909, 1, 0, 0.523344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472933,-99) , 
0, 0.505435, 1, 0, 0.547866,-99) , 
NN(
0, 
0, 
-1, 0.502259, 1, -1, 0.477814,-99) , 
0, 0.503803, 0, 0, 0.484953,-99) , 
1, 0.000677622, 0, 0, 0.500188,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0330395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2849, 1, 1, 0.511549,-99) , 
NN(
0, 
0, 
-1, -0.715102, 0, -1, 0.47201,-99) , 
0, 0.502853, 1, 0, 0.505091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405622,-99) , 
1, 0.0103789, 1, 0, 0.502261,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.060233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.117609, 1, 1, 0.522992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347336,-99) , 
7, -0.749029, 1, 0, 0.466386,-99) , 
9, -1.90995, 0, 0, 0.515479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400321,-99) , 
8, -3.01632, 1, 0, 0.449007,-99) , 
0, 0.504755, 1, 0, 0.510182,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0637284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.82645, 0, 1, 0.571281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43184,-99) , 
8, -3.81245, 1, 0, 0.501058,-99) , 
0, 0.496188, 0, 0, 0.547041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485822,-99) , 
7, 0.549158, 1, 0, 0.496679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386,-99) , 
9, -1.49668, 0, 0, 0.491153,-99) , 
8, -3.514, 1, 0, 0.503348,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0294283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407391,-99) , 
8, -4.09272, 0, 0, 0.498857,-99) , 
8, -4.36801, 1, 0, 0.502958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36552,-99) , 
9, -3.04229, 0, 0, 0.499466,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0558778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.06886, 0, 1, 0.536157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493772,-99) , 
1, 0.00341563, 0, 0, 0.503503,-99) , 
0, 0.499043, 1, 0, 0.522424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458156,-99) , 
3, 8.20208, 1, 0, 0.518765,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0852327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.180231, 0, 1, 0.566581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492861,-99) , 
9, 0.116786, 1, 0, 0.499948,-99) , 
6, -951.286, 0, 0, 0.540382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471241,-99) , 
9, -1.93712, 0, 0, 0.524281,-99) , 
NN(
0, 
0, 
-1, -0.887294, 0, -1, 0.462537,-99) , 
7, 0.294585, 1, 0, 0.493709,-99) , 
8, -2.24863, 0, 0, 0.509782,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.044099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496874,-99) , 
8, -4.51587, 0, 0, 0.55706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479345,-99) , 
8, -3.35017, 0, 0, 0.508339,-99) , 
8, -4.14278, 1, 0, 0.511483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406671,-99) , 
9, -2.81164, 0, 0, 0.507795,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.064644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496311,-99) , 
9, 0.910769, 1, 0, 0.532917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442026,-99) , 
2, 0.0537331, 1, 0, 0.516067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471814,-99) , 
3, 3.59572, 0, 0, 0.485368,-99) , 
8, -3.29263, 1, 0, 0.495425,-99) , 
8, -1.49778, 0, 0, 0.500791,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0201526);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58335,-99) , 
NN(
0, 
0, 
-1, -2.13342, 0, -1, 0.493242,-99) , 
7, -1.28403, 1, 0, 0.497144,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0767838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.63283, 0, 1, 0.573385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334709,-99) , 
7, -0.0979133, 0, 0, 0.430723,-99) , 
9, -1.29568, 1, 0, 0.537752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49545,-99) , 
7, 0.687829, 1, 0, 0.505768,-99) , 
NN(
0, 
0, 
-1, 0.00015331, 0, -1, 0.399351,-99) , 
9, -1.04581, 0, 0, 0.497391,-99) , 
7, 0.143736, 1, 0, 0.509501,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0835216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.08463, 1, 1, 0.536038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433302,-99) , 
3, 3.37893, 1, 0, 0.481287,-99) , 
2, -0.0317224, 0, 0, 0.520676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479187,-99) , 
8, -3.04556, 0, 0, 0.49388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318547,-99) , 
9, -0.834862, 1, 0, 0.471846,-99) , 
7, 0.429454, 0, 0, 0.500569,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.057461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.84212, 1, 1, 0.617638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399846,-99) , 
9, -1.99822, 1, 0, 0.507561,-99) , 
7, -0.301406, 0, 0, 0.540168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412207,-99) , 
9, -1.49668, 0, 0, 0.496409,-99) , 
NN(
0, 
0, 
-1, 0.499041, 0, -1, 0.437038,-99) , 
2, 0.0810016, 1, 0, 0.487444,-99) , 
8, -3.62367, 1, 0, 0.4976,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0715809);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.598693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48841,-99) , 
6, 1.01583, 0, 0, 0.502392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452387,-99) , 
1, 0.00254449, 0, 0, 0.467557,-99) , 
6, -951.286, 0, 0, 0.489411,-99) , 
1, -0.00408005, 1, 0, 0.498167,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0370404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4932,-99) , 
8, -3.61184, 1, 0, 0.499439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412627,-99) , 
7, -1.24848, 1, 0, 0.460111,-99) , 
8, -4.21815, 0, 0, 0.495521,-99) , 
8, -1.03474, 0, 0, 0.498913,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.054235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.41922, 1, 1, 0.566351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467704,-99) , 
9, -2.91776, 0, 0, 0.556481,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0810016, 0, 1, 0.508095,-99) , 
NN(
0, 
0, 
-1, 0.497143, 0, -1, 0.469252,-99) , 
8, -1.75167, 1, 0, 0.49702,-99) , 
8, -3.33004, 1, 0, 0.512425,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0692571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.62828, 1, 1, 0.601662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460337,-99) , 
2, -0.0513456, 0, 0, 0.512673,-99) , 
8, -3.83122, 1, 0, 0.52509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534865,-99) , 
NN(
0, 
0, 
-1, 0.496643, 1, -1, 0.471118,-99) , 
0, 0.497594, 0, 0, 0.476845,-99) , 
0, 0.498092, 0, 0, 0.500292,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0589726);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387484,-99) , 
9, -0.280867, 1, 0, 0.498661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453068,-99) , 
8, -2.77252, 1, 0, 0.468219,-99) , 
7, 0.98688, 1, 0, 0.487197,-99) , 
8, -1.08366, 0, 0, 0.491168,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0777374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.7946, 1, 1, 0.531991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393944,-99) , 
7, 0.684029, 0, 0, 0.522001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487678,-99) , 
8, -2.93638, 0, 0, 0.50475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316343,-99) , 
7, 0.786214, 1, 0, 0.40384,-99) , 
7, 0.641827, 1, 0, 0.488389,-99) , 
9, -0.506901, 0, 0, 0.504437,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0461694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.68584, 1, 1, 0.537936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491711,-99) , 
8, -3.96222, 1, 0, 0.501369,-99) , 
9, 0.180798, 0, 0, 0.509997,-99) , 
NN(
0, 
0, 
-1, -0.000746607, 0, -1, 0.451382,-99) , 
0, 0.49143, 0, 0, 0.504934,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0321604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50095, 0, 1, 0.523496,-99) , 
NN(
0, 
0, 
-1, -0.85081, 0, -1, 0.490668,-99) , 
7, 0.261732, 1, 0, 0.501321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408848,-99) , 
9, -2.94742, 0, 0, 0.49875,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0660479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.72255, 1, 1, 0.54389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458781,-99) , 
7, 0.756616, 0, 0, 0.482187,-99) , 
0, 0.5019, 0, 0, 0.493691,-99) , 
NN(
0, 
0, 
-1, -4.94022, 1, -1, 0.38301,-99) , 
9, -2.54145, 0, 0, 0.487188,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0567267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.77772, 0, 1, 0.536354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484321,-99) , 
8, -1.21552, 1, 0, 0.521589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498301,-99) , 
7, 0.449211, 0, 0, 0.508527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437685,-99) , 
8, -2.47219, 0, 0, 0.462998,-99) , 
8, -3.19977, 1, 0, 0.483248,-99) , 
7, 1.28767, 0, 0, 0.494456,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0758281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.71062, 0, 1, 0.536459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438023,-99) , 
0, 0.494608, 0, 0, 0.479802,-99) , 
3, 3.51607, 1, 0, 0.520663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467889,-99) , 
8, -1.46432, 0, 0, 0.478169,-99) , 
2, 0.103409, 0, 0, 0.487712,-99) , 
0, 0.498092, 1, 0, 0.503836,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0774411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433835,-99) , 
9, -0.279347, 1, 0, 0.517056,-99) , 
NN(
0, 
0, 
-1, 0.120702, 0, -1, 0.46675,-99) , 
7, 1.06179, 1, 0, 0.494868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523347,-99) , 
NN(
0, 
0, 
-1, -2.3042, 1, -1, 0.388544,-99) , 
7, -0.692982, 0, 0, 0.421692,-99) , 
8, -4.11922, 0, 0, 0.486177,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.049223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.48184, 1, 1, 0.516886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294599,-99) , 
7, -1.06712, 1, 0, 0.452099,-99) , 
9, -2.197, 0, 0, 0.510828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46326,-99) , 
9, 1.02529, 1, 0, 0.507208,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0536486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.670115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489569,-99) , 
9, -2.09581, 1, 0, 0.590294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4414,-99) , 
9, -2.72713, 0, 0, 0.536669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488182,-99) , 
7, -0.182618, 1, 0, 0.494077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371534,-99) , 
9, -1.8943, 0, 0, 0.489788,-99) , 
7, -0.7131, 1, 0, 0.494953,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0662629);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490108,-99) , 
0, 0.497139, 0, 0, 0.525466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456483,-99) , 
7, 1.91072, 0, 0, 0.487609,-99) , 
7, 1.6536, 1, 0, 0.512462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424285,-99) , 
2, -0.10432, 0, 0, 0.498568,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.349868,-99) , 
9, -0.944805, 1, 0, 0.473844,-99) , 
7, 0.429371, 0, 0, 0.496085,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0545961);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484587,-99) , 
0, 0.493331, 1, 0, 0.492343,-99) , 
NN(
0, 
0, 
-1, 0.498095, 0, -1, 0.440924,-99) , 
8, -3.66819, 0, 0, 0.484019,-99) , 
8, -4.51381, 1, 0, 0.488086,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0656292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497364,-99) , 
8, -2.53956, 1, 0, 0.516371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364169,-99) , 
9, -1.91991, 0, 0, 0.511497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447108,-99) , 
8, -4.59535, 0, 0, 0.51176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344724,-99) , 
9, -2.04546, 1, 0, 0.460957,-99) , 
7, -0.71276, 0, 0, 0.504866,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.054029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.86477, 1, 1, 0.52487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451057,-99) , 
7, 2.04926, 1, 0, 0.481306,-99) , 
8, -1.68535, 1, 0, 0.516311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441193,-99) , 
3, 8.20208, 1, 0, 0.512034,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0522043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484196,-99) , 
8, -4.22746, 0, 0, 0.54642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490958,-99) , 
7, 0.521446, 1, 0, 0.499066,-99) , 
8, -3.26061, 1, 0, 0.510985,-99) , 
NN(
0, 
0, 
-1, -4.96096, 1, -1, 0.425401,-99) , 
9, -2.58317, 0, 0, 0.506528,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0941058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425331,-99) , 
1, -0.00667908, 0, 0, 0.53452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420767,-99) , 
6, -1.56465, 0, 0, 0.525018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49746,-99) , 
7, 0.985057, 0, 0, 0.534205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424281,-99) , 
2, 0.0582398, 0, 0, 0.451792,-99) , 
2, -0.00383795, 1, 0, 0.488482,-99) , 
6, -951.286, 0, 0, 0.511637,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0571104);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638339,-99) , 
NN(
NN(
0, 
0, 
-1, -2.69697, 1, 1, 0.516666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431568,-99) , 
7, 0.0813292, 1, 0, 0.466256,-99) , 
9, -0.513243, 0, 0, 0.49114,-99) , 
8, -4.81074, 1, 0, 0.495318,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0640128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.81242, 1, 1, 0.549439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413635,-99) , 
8, -3.00764, 1, 0, 0.49528,-99) , 
7, 0.42712, 0, 0, 0.526436,-99) , 
NN(
NN(
0, 
0, 
-1, 0.494146, 0, 1, 0.528569,-99) , 
NN(
0, 
0, 
-1, 0.00286996, 1, -1, 0.479268,-99) , 
0, 0.495235, 1, 0, 0.491764,-99) , 
6, -951.286, 1, 0, 0.503778,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0821568);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460509,-99) , 
7, -1.0991, 0, 0, 0.540688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490509,-99) , 
9, -0.397942, 1, 0, 0.501808,-99) , 
8, -2.61307, 1, 0, 0.521314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457048,-99) , 
1, -0.000726784, 0, 0, 0.528883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410563,-99) , 
8, -2.45017, 0, 0, 0.446659,-99) , 
0, 0.491428, 1, 0, 0.475888,-99) , 
0, 0.494284, 0, 0, 0.512247,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0447305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.545499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294412,-99) , 
9, -1.89112, 0, 0, 0.499682,-99) , 
7, -0.713072, 1, 0, 0.504605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400227,-99) , 
0, 0.489522, 0, 0, 0.500972,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0438138);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494727,-99) , 
3, 6.5898, 0, 0, 0.499895,-99) , 
NN(
0, 
0, 
-1, -1.03306, 0, -1, 0.44088,-99) , 
0, 0.49333, 0, 0, 0.49053,-99) , 
8, -4.52584, 1, 0, 0.496227,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0546341);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.39086, 1, 1, 0.540281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553113,-99) , 
NN(
0, 
0, 
-1, 1.20858, 1, -1, 0.477959,-99) , 
8, -1.82683, 0, 0, 0.483662,-99) , 
9, 0.449003, 0, 0, 0.49397,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0381862);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637449,-99) , 
NN(
NN(
0, 
0, 
-1, -3.18626, 1, 1, 0.540788,-99) , 
NN(
0, 
0, 
-1, -2.13271, 0, -1, 0.49165,-99) , 
0, 0.494283, 1, 0, 0.500601,-99) , 
7, -1.28496, 1, 0, 0.505961,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0802404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.76595, 1, 1, 0.54481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459047,-99) , 
9, -0.567698, 1, 0, 0.510862,-99) , 
NN(
0, 
0, 
-1, 3.09682, 0, -1, 0.441137,-99) , 
2, -0.0337783, 0, 0, 0.491433,-99) , 
7, 1.00013, 0, 0, 0.512222,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0344101);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489442,-99) , 
0, 0.497141, 1, 0, 0.497859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374911,-99) , 
9, -2.47585, 0, 0, 0.494213,-99) , 
7, -1.56961, 1, 0, 0.498202,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0517943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424829,-99) , 
9, -1.3668, 0, 0, 0.503284,-99) , 
7, -0.459668, 1, 0, 0.508541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411891,-99) , 
9, -2.98276, 0, 0, 0.505346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403756,-99) , 
7, -0.124928, 0, 0, 0.444808,-99) , 
7, -0.823826, 1, 0, 0.468591,-99) , 
8, -3.62367, 0, 0, 0.499994,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0719888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480164,-99) , 
9, -1.10945, 0, 0, 0.51372,-99) , 
0, 0.498545, 1, 0, 0.519788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471364,-99) , 
3, 3.59152, 0, 0, 0.487362,-99) , 
NN(
0, 
0, 
-1, 0.140747, 0, -1, 0.428873,-99) , 
2, 0.0745067, 1, 0, 0.478088,-99) , 
0, 0.498091, 0, 0, 0.498598,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.039427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494494,-99) , 
0, 0.502851, 0, 0, 0.501275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42481,-99) , 
1, -0.00660347, 0, 0, 0.49727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415553,-99) , 
9, 1.02529, 1, 0, 0.490769,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.063819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.43559, 0, 1, 0.545349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383677,-99) , 
1, -0.00408005, 0, 0, 0.525561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426889,-99) , 
7, 0.246647, 0, 0, 0.500564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289522,-99) , 
7, -0.0016821, 1, 0, 0.44187,-99) , 
9, -1.0638, 0, 0, 0.49399,-99) , 
8, -3.33004, 1, 0, 0.502475,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0536083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46272,-99) , 
0, 0.497123, 0, 0, 0.547589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459794,-99) , 
6, -951.286, 0, 0, 0.514842,-99) , 
NN(
0, 
0, 
-1, 0.000623044, 1, -1, 0.478956,-99) , 
0, 0.503805, 0, 0, 0.482633,-99) , 
8, -4.45106, 1, 0, 0.486324,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0531646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499156,-99) , 
8, -2.86263, 0, 0, 0.513013,-99) , 
0, 0.490474, 1, 0, 0.516176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435883,-99) , 
9, 0.51864, 1, 0, 0.46887,-99) , 
8, -1.67196, 1, 0, 0.507445,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0793338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.700635, 0, 1, 0.557237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381557,-99) , 
7, -1.04074, 0, 0, 0.477212,-99) , 
6, -951.286, 0, 0, 0.52788,-99) , 
NN(
NN(
0, 
0, 
-1, 0.749605, 1, 1, 0.535736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462171,-99) , 
7, 0.756603, 1, 0, 0.479724,-99) , 
8, -1.58237, 0, 0, 0.494269,-99) , 
8, -2.95379, 1, 0, 0.507271,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.068465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498178,-99) , 
0, 0.49197, 1, 0, 0.516524,-99) , 
5, 0.00572055, 0, 0, 0.526585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489232,-99) , 
8, -2.81811, 1, 0, 0.535538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465128,-99) , 
0, 0.496498, 1, 0, 0.474121,-99) , 
0, 0.504077, 0, 0, 0.481349,-99) , 
0, 0.495235, 1, 0, 0.492283,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0976449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470533,-99) , 
7, -1.04181, 1, 0, 0.508001,-99) , 
8, -3.67038, 0, 0, 0.528883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465187,-99) , 
0, 0.493511, 0, 0, 0.515514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450914,-99) , 
3, 4.17042, 0, 0, 0.465617,-99) , 
0, 0.497138, 1, 0, 0.484999,-99) , 
8, -3.514, 1, 0, 0.494738,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0548201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482819,-99) , 
3, 3.28223, 1, 0, 0.518633,-99) , 
9, -1.12003, 0, 0, 0.533039,-99) , 
NN(
NN(
0, 
0, 
-1, -2.80113, 1, 1, 0.518366,-99) , 
NN(
0, 
0, 
-1, -3.07067, 0, -1, 0.473997,-99) , 
7, 0.854544, 0, 0, 0.502037,-99) , 
8, -3.23993, 1, 0, 0.511071,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.047156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465268,-99) , 
0, 0.503261, 1, 0, 0.502273,-99) , 
NN(
0, 
0, 
-1, 0.495778, 1, -1, 0.469531,-99) , 
0, 0.496187, 0, 0, 0.491259,-99) , 
7, -1.57036, 1, 0, 0.494112,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0716976);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505979, 0, 1, 0.544766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48394,-99) , 
0, 0.49578, 1, 0, 0.509177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431143,-99) , 
3, 6.61441, 1, 0, 0.502032,-99) , 
0, 0.499044, 0, 0, 0.519326,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0621569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48637,-99) , 
7, 0.508258, 0, 0, 0.51221,-99) , 
8, -4.33387, 1, 0, 0.516783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465322,-99) , 
7, 0.428186, 1, 0, 0.492206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412273,-99) , 
3, 4.17042, 1, 0, 0.471659,-99) , 
0, 0.501899, 1, 0, 0.507341,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0372256);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617307,-99) , 
NN(
NN(
0, 
0, 
-1, -0.409968, 1, 1, 0.509163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31581,-99) , 
7, -1.37748, 1, 0, 0.440641,-99) , 
9, -2.39655, 0, 0, 0.504775,-99) , 
0, 0.505707, 0, 0, 0.509086,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0790228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485826,-99) , 
0, 0.49537, 0, 0, 0.523104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417663,-99) , 
0, 0.505709, 1, 0, 0.517271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539979,-99) , 
NN(
0, 
0, 
-1, 2.04874, 0, -1, 0.43781,-99) , 
9, 0.429058, 1, 0, 0.464285,-99) , 
8, -1.83145, 1, 0, 0.504467,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0692789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499339,-99) , 
7, -0.304487, 1, 0, 0.517798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408758,-99) , 
0, 0.497139, 1, 0, 0.466555,-99) , 
7, -0.712535, 0, 0, 0.506973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475071,-99) , 
2, -0.0252203, 1, 0, 0.487746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410226,-99) , 
9, -0.190808, 0, 0, 0.473383,-99) , 
7, 1.00085, 1, 0, 0.493329,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0495179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484204,-99) , 
0, 0.498091, 1, 0, 0.500734,-99) , 
7, -0.811302, 1, 0, 0.505451,-99) , 
NN(
0, 
0, 
-1, -1.38917, 1, -1, 0.428773,-99) , 
9, -2.39655, 0, 0, 0.50033,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.10186);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447915,-99) , 
9, -0.754538, 1, 0, 0.562312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343412,-99) , 
9, -0.87356, 0, 0, 0.515127,-99) , 
7, 0.429616, 1, 0, 0.53292,-99) , 
NN(
0, 
0, 
-1, 0.489974, 1, -1, 0.435917,-99) , 
0, 0.491426, 0, 0, 0.524528,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0614037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49607,-99) , 
9, -0.589031, 0, 0, 0.50978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456795,-99) , 
9, -0.172195, 1, 0, 0.504022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442585,-99) , 
7, 1.93917, 1, 0, 0.472027,-99) , 
NN(
0, 
0, 
-1, 0.0803888, 0, -1, 0.425667,-99) , 
8, -1.82902, 0, 0, 0.452012,-99) , 
7, 1.28609, 1, 0, 0.487619,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0478257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.1777, 0, 1, 0.559195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475892,-99) , 
6, -951.286, 0, 0, 0.496407,-99) , 
2, -0.11737, 1, 0, 0.502306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451301,-99) , 
7, 1.83151, 0, 0, 0.481274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42724,-99) , 
7, 2.25232, 1, 0, 0.462541,-99) , 
7, 1.57249, 1, 0, 0.493263,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0664752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489558,-99) , 
3, 0.439333, 1, 0, 0.495967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447967,-99) , 
0, 0.493333, 1, 0, 0.46186,-99) , 
3, 3.56867, 1, 0, 0.48636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398068,-99) , 
7, -1.56354, 1, 0, 0.479865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328954,-99) , 
9, -2.43245, 1, 0, 0.428822,-99) , 
7, -0.993092, 0, 0, 0.481714,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0421805);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.557339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492829,-99) , 
7, -0.232587, 1, 0, 0.49782,-99) , 
NN(
0, 
0, 
-1, -0.617319, 1, -1, 0.401769,-99) , 
9, -1.84335, 0, 0, 0.489593,-99) , 
7, -0.997157, 1, 0, 0.493977,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0557309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499938,-99) , 
2, 0.0119042, 0, 0, 0.514332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34445,-99) , 
7, -1.023, 1, 0, 0.462863,-99) , 
9, -2.16299, 0, 0, 0.507902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541685,-99) , 
NN(
0, 
0, 
-1, 0.190572, 0, -1, 0.454004,-99) , 
1, -0.00171836, 1, 0, 0.475269,-99) , 
7, 1.28623, 1, 0, 0.497839,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0628996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.583999, 1, 1, 0.533127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41198,-99) , 
7, -1.7317, 0, 0, 0.528232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439588,-99) , 
0, 0.500001, 1, 0, 0.480884,-99) , 
2, 0.0204158, 0, 0, 0.495451,-99) , 
8, -2.17973, 1, 0, 0.517517,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0775873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488676,-99) , 
0, 0.49809, 0, 0, 0.510609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388566,-99) , 
7, 0.0745494, 0, 0, 0.504762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454048,-99) , 
8, -3.31304, 0, 0, 0.476685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363329,-99) , 
7, 0.142782, 1, 0, 0.461817,-99) , 
9, -1.12267, 0, 0, 0.490638,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0508693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476296,-99) , 
7, 0.49609, 0, 0, 0.52757,-99) , 
8, -3.50035, 1, 0, 0.556596,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00263847, 1, 1, 0.515445,-99) , 
NN(
0, 
0, 
-1, 0.074051, 1, -1, 0.474458,-99) , 
3, 3.37226, 1, 0, 0.502795,-99) , 
0, 0.493334, 1, 0, 0.510305,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0444802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499046, 0, 1, 0.526043,-99) , 
NN(
0, 
0, 
-1, 0.0206747, 0, -1, 0.486103,-99) , 
8, -3.00036, 1, 0, 0.498576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504058,-99) , 
NN(
0, 
0, 
-1, -2.44221, 0, -1, 0.402477,-99) , 
7, -1.5177, 1, 0, 0.437596,-99) , 
9, -2.1324, 0, 0, 0.492756,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0240396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38383, 0, 1, 0.535435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4168,-99) , 
7, -0.48759, 0, 0, 0.496633,-99) , 
8, -3.58903, 1, 0, 0.503184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451095,-99) , 
9, -2.56906, 0, 0, 0.500705,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0585829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.562116, 1, 1, 0.547258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456167,-99) , 
9, -2.5486, 0, 0, 0.527784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46103,-99) , 
3, 3.34476, 1, 0, 0.521557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481452,-99) , 
9, 0.873673, 0, 0, 0.487131,-99) , 
0, 0.494283, 1, 0, 0.493582,-99) , 
8, -3.514, 1, 0, 0.500958,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.066084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502988, 0, 1, 0.522641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402088,-99) , 
0, 0.505649, 0, 0, 0.464733,-99) , 
0, 0.504439, 1, 0, 0.516486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459069,-99) , 
8, -2.77454, 1, 0, 0.507067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372432,-99) , 
0, 0.49383, 0, 0, 0.432878,-99) , 
0, 0.493331, 1, 0, 0.486398,-99) , 
0, 0.494284, 0, 0, 0.510357,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0528408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491315,-99) , 
0, 0.496207, 0, 0, 0.56382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465722,-99) , 
7, 1.0996, 1, 0, 0.498706,-99) , 
2, -0.110541, 1, 0, 0.505715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455699,-99) , 
9, 0.610822, 1, 0, 0.497968,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0662851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449905,-99) , 
8, -1.12251, 1, 0, 0.518333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463638,-99) , 
8, -3.31243, 1, 0, 0.47964,-99) , 
0, 0.494283, 0, 0, 0.510174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39169,-99) , 
8, -4.7754, 0, 0, 0.504982,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0657964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.5677, 0, 1, 0.549103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465239,-99) , 
0, 0.49034, 0, 0, 0.521859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481166,-99) , 
7, 0.813053, 1, 0, 0.497471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453215,-99) , 
2, -0.0189066, 1, 0, 0.468866,-99) , 
8, -2.69413, 0, 0, 0.4834,-99) , 
0, 0.493333, 1, 0, 0.488919,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0694406);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467819,-99) , 
7, 0.525987, 0, 0, 0.578535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487635,-99) , 
0, 0.498071, 1, 0, 0.504244,-99) , 
7, 1.20854, 1, 0, 0.529364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495594,-99) , 
7, 0.416612, 0, 0, 0.503861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374869,-99) , 
7, 0.587332, 1, 0, 0.485768,-99) , 
9, -0.609649, 0, 0, 0.508201,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0769629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.16089, 0, 1, 0.601731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497281,-99) , 
1, -0.002621, 1, 0, 0.511174,-99) , 
8, -3.15137, 0, 0, 0.534673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490124,-99) , 
7, 1.65429, 1, 0, 0.516468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286207,-99) , 
9, -0.881274, 0, 0, 0.405597,-99) , 
9, -0.692066, 0, 0, 0.500843,-99) , 
7, 0.430674, 1, 0, 0.513768,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0526602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532159,-99) , 
NN(
0, 
0, 
-1, -3.76211, 0, -1, 0.47658,-99) , 
8, -1.30802, 0, 0, 0.482784,-99) , 
8, -4.74381, 1, 0, 0.486103,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.049881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456027,-99) , 
2, 0.121851, 1, 0, 0.509855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369412,-99) , 
8, -4.50186, 1, 0, 0.45351,-99) , 
9, -2.21147, 0, 0, 0.505192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436034,-99) , 
2, -0.19705, 0, 0, 0.501231,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0656309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.715295, 0, 1, 0.560249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459085,-99) , 
0, 0.489433, 0, 0, 0.546867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473048,-99) , 
2, -0.0567665, 0, 0, 0.507911,-99) , 
NN(
0, 
0, 
-1, -0.111559, 0, -1, 0.435243,-99) , 
0, 0.496415, 0, 0, 0.498474,-99) , 
0, 0.495236, 1, 0, 0.510499,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0597351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481588,-99) , 
7, -0.713192, 1, 0, 0.486613,-99) , 
0, 0.504757, 0, 0, 0.490854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429651,-99) , 
3, 3.25374, 1, 0, 0.483695,-99) , 
NN(
0, 
0, 
-1, -3.44449, 0, -1, 0.422032,-99) , 
0, 0.499049, 1, 0, 0.455613,-99) , 
2, 0.0595711, 1, 0, 0.484378,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0715311);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475294,-99) , 
7, 1.82907, 1, 0, 0.507794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46399,-99) , 
1, -0.00408005, 1, 0, 0.472273,-99) , 
8, -2.5377, 0, 0, 0.487806,-99) , 
0, 0.490474, 1, 0, 0.492224,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0470821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0568697, 0, 1, 0.581646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48998,-99) , 
0, 0.504894, 1, 0, 0.519437,-99) , 
2, 0.0103498, 1, 0, 0.555366,-99) , 
NN(
NN(
0, 
0, 
-1, -0.138202, 1, 1, 0.511817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418776,-99) , 
3, 3.4674, 1, 0, 0.467547,-99) , 
2, -0.0809292, 0, 0, 0.505292,-99) , 
0, 0.502854, 0, 0, 0.512429,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0785097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.718216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453924,-99) , 
2, -0.0149007, 0, 0, 0.517147,-99) , 
2, -0.0838274, 1, 0, 0.538946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482258,-99) , 
0, 0.493334, 0, 0, 0.521895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450384,-99) , 
8, -2.28955, 0, 0, 0.475832,-99) , 
0, 0.49619, 1, 0, 0.490503,-99) , 
8, -3.35081, 1, 0, 0.502856,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0525246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479408,-99) , 
7, -0.12844, 0, 0, 0.521339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481814,-99) , 
7, 0.528551, 1, 0, 0.496632,-99) , 
6, -951.286, 1, 0, 0.505259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398189,-99) , 
8, -4.81074, 0, 0, 0.501071,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.081416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398063,-99) , 
9, -1.41768, 0, 0, 0.524033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253197,-99) , 
9, -1.38132, 1, 0, 0.469759,-99) , 
7, -0.178656, 0, 0, 0.505748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501952,-99) , 
NN(
0, 
0, 
-1, 0.497147, 1, -1, 0.441819,-99) , 
9, 0.710425, 0, 0, 0.464844,-99) , 
8, -2.16914, 1, 0, 0.492126,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0411424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397318,-99) , 
7, -0.248109, 0, 0, 0.502836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354067,-99) , 
7, -0.295684, 1, 0, 0.460084,-99) , 
9, -1.45897, 0, 0, 0.494082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385101,-99) , 
7, -1.56959, 0, 0, 0.489989,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0511991);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496686,-99) , 
8, -3.6145, 0, 0, 0.526016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475107,-99) , 
9, -0.122162, 0, 0, 0.49456,-99) , 
8, -3.27985, 1, 0, 0.503297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43257,-99) , 
0, 0.505709, 1, 0, 0.499677,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0644107);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432768,-99) , 
0, 0.503532, 1, 0, 0.514565,-99) , 
NN(
0, 
0, 
-1, 0.498635, 0, -1, 0.475213,-99) , 
7, 0.429454, 1, 0, 0.490577,-99) , 
0, 0.490474, 1, 0, 0.49583,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0685618);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475798,-99) , 
2, 0.066066, 0, 0, 0.484928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434538,-99) , 
8, -1.41327, 1, 0, 0.4781,-99) , 
8, -4.51381, 1, 0, 0.4834,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0529574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497217,-99) , 
0, 0.489438, 0, 0, 0.562531,-99) , 
NN(
NN(
0, 
0, 
-1, -2.78509, 1, 1, 0.51489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473663,-99) , 
2, -0.116606, 1, 0, 0.484246,-99) , 
9, -0.584266, 0, 0, 0.499789,-99) , 
0, 0.491432, 1, 0, 0.504211,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.05917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472391,-99) , 
8, -4.13188, 0, 0, 0.576642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485446,-99) , 
6, -951.286, 0, 0, 0.512446,-99) , 
8, -3.1545, 1, 0, 0.531859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483243,-99) , 
7, 0.707085, 1, 0, 0.526086,-99) , 
NN(
0, 
0, 
-1, -2.68967, 0, -1, 0.479334,-99) , 
2, -0.066125, 1, 0, 0.486744,-99) , 
0, 0.495236, 1, 0, 0.497561,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0619005);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.6654, 1, 1, 0.579734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484892,-99) , 
7, -0.223724, 0, 0, 0.522408,-99) , 
NN(
0, 
0, 
-1, -0.872722, 0, -1, 0.480455,-99) , 
7, 0.429213, 1, 0, 0.497054,-99) , 
1, -0.0044658, 1, 0, 0.503008,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0251062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.17227, 0, 1, 0.564056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499881,-99) , 
8, -3.48325, 1, 0, 0.506268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44599,-99) , 
8, -4.04104, 0, 0, 0.503143,-99) , 
8, -4.33387, 1, 0, 0.507134,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0302143);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492514, 0, 1, 0.553401,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495307, 1, 1, 0.506519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445737,-99) , 
0, 0.494012, 0, 0, 0.503537,-99) , 
0, 0.493331, 1, 0, 0.510525,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0622692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493527, 1, 1, 0.580837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458724,-99) , 
0, 0.49076, 1, 0, 0.510504,-99) , 
0, 0.492695, 0, 0, 0.536212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493167,-99) , 
8, -3.93141, 1, 0, 0.501907,-99) , 
NN(
0, 
0, 
-1, -4.41767, 0, -1, 0.457122,-99) , 
0, 0.497457, 0, 0, 0.487885,-99) , 
0, 0.494282, 1, 0, 0.496786,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0816436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.47915, 1, 1, 0.560383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457222,-99) , 
7, 0.619798, 1, 0, 0.508357,-99) , 
9, -0.276898, 0, 0, 0.52097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593187,-99) , 
NN(
0, 
0, 
-1, -1.28612, 0, -1, 0.465059,-99) , 
9, 0.305104, 1, 0, 0.487317,-99) , 
8, -1.80301, 1, 0, 0.51348,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0560053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.802166, 1, 1, 0.539877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497841,-99) , 
8, -1.47629, 0, 0, 0.506015,-99) , 
0, 0.498091, 0, 0, 0.522557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397203,-99) , 
8, -4.74381, 0, 0, 0.516895,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0731548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481134,-99) , 
6, -0.707535, 0, 0, 0.547142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481674,-99) , 
6, -0.137472, 1, 0, 0.507045,-99) , 
8, -2.31125, 0, 0, 0.521297,-99) , 
NN(
NN(
0, 
0, 
-1, -3.45179, 1, 1, 0.51737,-99) , 
NN(
0, 
0, 
-1, 0.00371048, 1, -1, 0.456094,-99) , 
0, 0.499039, 0, 0, 0.479822,-99) , 
6, -951.286, 0, 0, 0.505613,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0549939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488331,-99) , 
2, -0.134726, 0, 0, 0.565973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492976,-99) , 
2, 0.0824921, 1, 0, 0.547033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493622,-99) , 
3, 0.38993, 1, 0, 0.498092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400779,-99) , 
3, 3.04996, 1, 0, 0.491166,-99) , 
3, 3.35966, 0, 0, 0.506873,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0935289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.13535, 1, 1, 0.548393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414894,-99) , 
7, 0.198976, 0, 0, 0.540696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424373,-99) , 
9, -1.20737, 1, 0, 0.511435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391922,-99) , 
7, 0.19869, 1, 0, 0.494132,-99) , 
9, -1.02535, 0, 0, 0.524505,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0606311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.739336, 1, 1, 0.517622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380343,-99) , 
7, -0.451324, 0, 0, 0.468983,-99) , 
8, -3.63645, 0, 0, 0.511334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415661,-99) , 
8, -4.63745, 0, 0, 0.488521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366478,-99) , 
7, -0.976374, 1, 0, 0.445699,-99) , 
9, -2.05012, 0, 0, 0.504472,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0619931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420317,-99) , 
7, -0.61472, 1, 0, 0.494731,-99) , 
7, -0.217126, 0, 0, 0.528893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482482,-99) , 
7, -0.00120053, 1, 0, 0.488452,-99) , 
0, 0.490473, 1, 0, 0.492106,-99) , 
8, -3.57804, 1, 0, 0.499524,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0580067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463568,-99) , 
7, 0.312198, 0, 0, 0.529898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466233,-99) , 
9, -0.373104, 1, 0, 0.489709,-99) , 
0, 0.502851, 0, 0, 0.495568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417561,-99) , 
8, -4.81074, 0, 0, 0.492659,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0700687);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475589,-99) , 
3, 4.18105, 1, 0, 0.513524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414221,-99) , 
7, -0.119311, 0, 0, 0.509765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460389,-99) , 
8, -3.64121, 0, 0, 0.488812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372223,-99) , 
7, -0.0288333, 1, 0, 0.471854,-99) , 
9, -1.28859, 0, 0, 0.499649,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0737126);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454489,-99) , 
2, 0.0819432, 1, 0, 0.532839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456008,-99) , 
8, -2.5054, 0, 0, 0.482117,-99) , 
0, 0.49587, 0, 0, 0.508781,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462702,-99) , 
6, -951.286, 0, 0, 0.491173,-99) , 
NN(
0, 
0, 
-1, 2.23504, 1, -1, 0.441396,-99) , 
0, 0.501447, 0, 0, 0.474702,-99) , 
0, 0.499996, 1, 0, 0.497019,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0570889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.813978, 0, 1, 0.550028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490182,-99) , 
8, -4.69434, 1, 0, 0.499795,-99) , 
7, 0.238807, 0, 0, 0.52093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552665,-99) , 
NN(
0, 
0, 
-1, -0.0521398, 0, -1, 0.478061,-99) , 
8, -2.67937, 1, 0, 0.485651,-99) , 
7, 1.00048, 1, 0, 0.50579,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0379077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46201,-99) , 
2, 0.00642165, 1, 0, 0.534554,-99) , 
0, 0.504894, 1, 0, 0.572178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496284,-99) , 
7, -0.338816, 1, 0, 0.501004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436811,-99) , 
9, -2.51668, 0, 0, 0.49764,-99) , 
0, 0.503805, 0, 0, 0.504874,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0336187);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499419,-99) , 
6, -951.286, 1, 0, 0.508453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352127,-99) , 
7, -1.13387, 0, 0, 0.502017,-99) , 
7, -1.56919, 1, 0, 0.504257,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0487676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.78038, 1, 1, 0.525183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457457,-99) , 
3, 2.3791, 1, 0, 0.484501,-99) , 
3, 6.8905, 0, 0, 0.490516,-99) , 
7, 1.56953, 0, 0, 0.498308,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0333869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498096, 0, 1, 0.553141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421247,-99) , 
0, 0.490473, 0, 0, 0.498699,-99) , 
5, 0.00426072, 0, 0, 0.506289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385195,-99) , 
5, 0.0127885, 1, 0, 0.502004,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0771392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.32014, 0, 1, 0.565406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350584,-99) , 
9, -1.53459, 0, 0, 0.50816,-99) , 
7, -0.259781, 1, 0, 0.535672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454556,-99) , 
2, -0.0498117, 0, 0, 0.499351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386936,-99) , 
7, 0.284091, 0, 0, 0.492408,-99) , 
9, -0.908715, 1, 0, 0.507603,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0743005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474461,-99) , 
0, 0.497129, 0, 0, 0.511153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454943,-99) , 
7, -0.0391532, 1, 0, 0.470694,-99) , 
7, 1.61247, 0, 0, 0.479158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377433,-99) , 
7, -1.85565, 0, 0, 0.476653,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0490122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495649,-99) , 
7, 0.253356, 1, 0, 0.50496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419952,-99) , 
9, -1.2884, 1, 0, 0.469433,-99) , 
8, -3.14854, 0, 0, 0.495033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506499,-99) , 
NN(
0, 
0, 
-1, -4.43899, 1, -1, 0.376385,-99) , 
7, -1.38769, 1, 0, 0.431357,-99) , 
9, -2.1302, 0, 0, 0.489175,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0877301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.271238, 1, 1, 0.562736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450518,-99) , 
9, 0.0792773, 0, 0, 0.50534,-99) , 
7, 1.11183, 1, 0, 0.523665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484689,-99) , 
7, 0.123184, 0, 0, 0.506919,-99) , 
NN(
0, 
0, 
-1, 0.529466, 1, -1, 0.444663,-99) , 
8, -3.49243, 1, 0, 0.476654,-99) , 
9, -0.736584, 0, 0, 0.503291,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0838011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495572,-99) , 
8, -2.57552, 1, 0, 0.514353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462805,-99) , 
1, -0.0031256, 1, 0, 0.471804,-99) , 
9, -0.681617, 0, 0, 0.494611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448716,-99) , 
7, 0.206575, 0, 0, 0.513551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436063,-99) , 
1, 0.00210979, 0, 0, 0.451543,-99) , 
0, 0.493104, 1, 0, 0.467457,-99) , 
0, 0.498091, 0, 0, 0.480807,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0746132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142182, 1, 1, 0.544095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45013,-99) , 
0, 0.489884, 0, 0, 0.534932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464546,-99) , 
7, 0.43238, 1, 0, 0.516745,-99) , 
NN(
0, 
0, 
-1, -0.758878, 0, -1, 0.475691,-99) , 
3, 4.16304, 0, 0, 0.484146,-99) , 
0, 0.497139, 1, 0, 0.503971,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0429069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.72571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481037,-99) , 
0, 0.498094, 1, 0, 0.494521,-99) , 
2, -0.000834474, 1, 0, 0.575019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489425,-99) , 
2, -0.00210987, 1, 0, 0.543188,-99) , 
NN(
0, 
0, 
-1, 0.750363, 1, -1, 0.489259,-99) , 
8, -4.06066, 1, 0, 0.494801,-99) , 
1, -0.0039028, 1, 0, 0.501563,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0689959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449232,-99) , 
0, 0.491425, 0, 0, 0.516036,-99) , 
1, -0.00408005, 1, 0, 0.522049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476456,-99) , 
7, 0.267041, 0, 0, 0.508683,-99) , 
NN(
0, 
0, 
-1, -1.87748, 0, -1, 0.44669,-99) , 
9, -0.151133, 1, 0, 0.484877,-99) , 
6, -951.286, 0, 0, 0.508554,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0618067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490364,-99) , 
3, 2.5202, 1, 0, 0.509751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460435,-99) , 
3, 0.387811, 1, 0, 0.469995,-99) , 
3, 1.45404, 0, 0, 0.494485,-99) , 
3, 7.05193, 0, 0, 0.497838,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0756694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00927267, 1, 1, 0.544834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478034,-99) , 
0, 0.498094, 0, 0, 0.509956,-99) , 
6, -951.286, 1, 0, 0.522042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45655,-99) , 
9, 0.991271, 1, 0, 0.516346,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0891024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447801,-99) , 
5, 0.00925154, 1, 0, 0.536396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475877,-99) , 
7, 1.92274, 1, 0, 0.524908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479854,-99) , 
7, -1.33576, 1, 0, 0.509716,-99) , 
NN(
0, 
0, 
-1, -1.60495, 0, -1, 0.381754,-99) , 
7, -0.314873, 1, 0, 0.47462,-99) , 
9, -1.44569, 0, 0, 0.513664,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0919735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488409,-99) , 
9, 0.800213, 0, 0, 0.516184,-99) , 
9, 0.387808, 1, 0, 0.538802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440125,-99) , 
9, -0.832079, 1, 0, 0.527102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449297,-99) , 
9, 0.0651055, 0, 0, 0.469754,-99) , 
7, 0.524472, 1, 0, 0.499829,-99) , 
8, -1.9119, 0, 0, 0.50961,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0534559);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.75127, 1, 1, 0.547725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572652,-99) , 
NN(
0, 
0, 
-1, 5.27851, 1, -1, 0.479716,-99) , 
3, 6.8905, 0, 0, 0.484505,-99) , 
2, -0.0737556, 1, 0, 0.494011,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0677627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432166,-99) , 
2, -0.102312, 0, 0, 0.518564,-99) , 
2, -0.14396, 1, 0, 0.524353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42473,-99) , 
8, -3.1066, 0, 0, 0.491611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369152,-99) , 
9, -1.54301, 0, 0, 0.463975,-99) , 
2, 0.0745067, 1, 0, 0.514133,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0692403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.32077, 1, 1, 0.528493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461077,-99) , 
7, 1.92414, 1, 0, 0.477737,-99) , 
8, -1.46016, 1, 0, 0.517616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473384,-99) , 
0, 0.499046, 1, 0, 0.504935,-99) , 
NN(
0, 
0, 
-1, -3.58124, 1, -1, 0.387691,-99) , 
7, -0.0504903, 1, 0, 0.476643,-99) , 
9, -1.17181, 0, 0, 0.505167,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0424537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486921,-99) , 
7, -0.217928, 0, 0, 0.511781,-99) , 
0, 0.495237, 1, 0, 0.53333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459926,-99) , 
0, 0.494286, 0, 0, 0.494425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413982,-99) , 
9, -1.55022, 0, 0, 0.489816,-99) , 
8, -3.72463, 1, 0, 0.496964,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0489336);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.551065,-99) , 
NN(
NN(
0, 
0, 
-1, 1.26449, 0, 1, 0.512872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466557,-99) , 
8, -2.14273, 1, 0, 0.476303,-99) , 
8, -2.30617, 1, 0, 0.49854,-99) , 
0, 0.492382, 1, 0, 0.504023,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0493681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441342,-99) , 
0, 0.49619, 0, 0, 0.526745,-99) , 
NN(
0, 
0, 
-1, -1.5662, 0, -1, 0.489349,-99) , 
8, -3.58411, 1, 0, 0.496018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383155,-99) , 
9, -2.83228, 0, 0, 0.492154,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0619393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.711142, 1, 1, 0.530353,-99) , 
NN(
0, 
0, 
-1, -4.46358, 0, -1, 0.473528,-99) , 
5, 0.00182787, 0, 0, 0.498376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392768,-99) , 
5, 0.0127894, 1, 0, 0.494688,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0545217);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459765,-99) , 
5, 0.0056093, 1, 0, 0.517752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468146,-99) , 
0, 0.502898, 0, 0, 0.487583,-99) , 
0, 0.499996, 1, 0, 0.507426,-99) , 
1, -0.00593158, 1, 0, 0.511673,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.047279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00823649, 1, 1, 0.586778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48671,-99) , 
2, -0.0385052, 1, 0, 0.494877,-99) , 
8, -4.39662, 1, 0, 0.499852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415951,-99) , 
2, -0.198193, 0, 0, 0.495147,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0611247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.467606, 1, 1, 0.517104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402403,-99) , 
0, 0.500001, 0, 0, 0.449843,-99) , 
8, -3.84569, 0, 0, 0.508837,-99) , 
NN(
0, 
0, 
-1, -2.77639, 1, -1, 0.398091,-99) , 
7, -1.28401, 0, 0, 0.50268,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0390989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490867,-99) , 
7, -0.338861, 1, 0, 0.496843,-99) , 
NN(
0, 
0, 
-1, -4.09121, 0, -1, 0.423729,-99) , 
7, -0.895347, 0, 0, 0.492911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418293,-99) , 
9, -2.6334, 0, 0, 0.489697,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0606575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435754,-99) , 
3, 1.69941, 0, 0, 0.509187,-99) , 
3, 3.38078, 0, 0, 0.547247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433791,-99) , 
9, -2.7289, 0, 0, 0.53478,-99) , 
NN(
0, 
0, 
-1, 3.35005, 1, -1, 0.486135,-99) , 
8, -3.83122, 1, 0, 0.492927,-99) , 
0, 0.492378, 1, 0, 0.49884,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0524712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.06055, 0, 1, 0.532207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476125,-99) , 
9, -0.4086, 0, 0, 0.495275,-99) , 
8, -3.23824, 1, 0, 0.504193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309787,-99) , 
7, -1.38017, 1, 0, 0.438331,-99) , 
9, -2.31243, 0, 0, 0.499565,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0650457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495778, 0, 1, 0.542729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394008,-99) , 
7, -0.0880478, 1, 0, 0.492662,-99) , 
9, -1.17198, 0, 0, 0.528001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482044,-99) , 
9, -1.39119, 1, 0, 0.490796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422891,-99) , 
9, -2.46364, 0, 0, 0.486822,-99) , 
0, 0.497138, 1, 0, 0.502792,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0702355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498094, 1, 1, 0.572703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495181,-99) , 
2, 0.000224338, 1, 0, 0.523638,-99) , 
2, -0.0737556, 1, 0, 0.530812,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478352,-99) , 
8, -1.66552, 0, 0, 0.503638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454684,-99) , 
9, 0.985618, 1, 0, 0.492705,-99) , 
8, -2.28419, 1, 0, 0.516476,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0465298);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471877,-99) , 
8, -3.37213, 0, 0, 0.502284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252646,-99) , 
7, -1.05822, 1, 0, 0.402069,-99) , 
9, -2.21052, 0, 0, 0.496878,-99) , 
7, -1.56619, 1, 0, 0.49906,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0395918);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.158089, 0, 1, 0.594847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498916,-99) , 
8, -1.41883, 0, 0, 0.505317,-99) , 
NN(
0, 
0, 
-1, -2.8681, 1, -1, 0.408683,-99) , 
9, -2.43277, 0, 0, 0.499487,-99) , 
0, 0.503805, 0, 0, 0.50817,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0560907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.02201, 1, 1, 0.542134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453357,-99) , 
3, 2.7644, 1, 0, 0.501805,-99) , 
3, 3.58777, 0, 0, 0.510726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416885,-99) , 
5, 0.00256913, 0, 0, 0.453137,-99) , 
2, 0.107142, 1, 0, 0.504137,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.066174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.64811, 0, 1, 0.527365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413299,-99) , 
9, -0.268647, 1, 0, 0.519063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462863,-99) , 
0, 0.497129, 0, 0, 0.492613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402404,-99) , 
9, -0.223419, 0, 0, 0.478619,-99) , 
7, 1.00517, 1, 0, 0.501821,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0390578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499828,-99) , 
9, -0.025883, 1, 0, 0.539647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470523,-99) , 
7, -0.144556, 0, 0, 0.522505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491249,-99) , 
0, 0.496128, 1, 0, 0.496171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421985,-99) , 
0, 0.494918, 0, 0, 0.492145,-99) , 
0, 0.494283, 1, 0, 0.497862,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0658001);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40727,-99) , 
9, -2.03544, 0, 0, 0.515803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437422,-99) , 
6, -951.286, 0, 0, 0.48338,-99) , 
0, 0.497138, 0, 0, 0.502373,-99) , 
8, -4.74381, 1, 0, 0.5055,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0754457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475709,-99) , 
8, -1.46432, 1, 0, 0.531471,-99) , 
NN(
0, 
0, 
-1, 0.506319, 1, -1, 0.453118,-99) , 
0, 0.505347, 1, 0, 0.522098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487832,-99) , 
8, -2.77454, 1, 0, 0.51295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440931,-99) , 
8, -2.26633, 0, 0, 0.463385,-99) , 
0, 0.494104, 1, 0, 0.480892,-99) , 
0, 0.498094, 0, 0, 0.501025,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0362101);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568991,-99) , 
NN(
NN(
0, 
0, 
-1, -2.94835, 1, 1, 0.509732,-99) , 
NN(
0, 
0, 
-1, -0.861157, 1, -1, 0.477643,-99) , 
7, 0.726551, 0, 0, 0.494651,-99) , 
8, -4.51381, 1, 0, 0.498041,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0443464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.760427, 0, 1, 0.537386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395048,-99) , 
7, 0.0272931, 0, 0, 0.495198,-99) , 
8, -2.88119, 1, 0, 0.510543,-99) , 
NN(
0, 
0, 
-1, -1.42864, 0, -1, 0.422966,-99) , 
8, -4.51151, 0, 0, 0.505053,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0599185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505846, 0, 1, 0.554926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476202,-99) , 
3, 0.754444, 1, 0, 0.483342,-99) , 
0, 0.504757, 0, 0, 0.488123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425198,-99) , 
3, 6.87778, 1, 0, 0.483317,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0548322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49677,-99) , 
8, -3.07073, 1, 0, 0.514901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45216,-99) , 
2, 0.000228645, 0, 0, 0.480012,-99) , 
0, 0.497136, 0, 0, 0.49975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466296,-99) , 
7, 0.841464, 0, 0, 0.505334,-99) , 
NN(
0, 
0, 
-1, 0.499045, 1, -1, 0.376022,-99) , 
9, -1.20663, 0, 0, 0.462711,-99) , 
2, -0.0737556, 0, 0, 0.493531,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0773028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456086,-99) , 
2, 0.0482997, 0, 0, 0.529938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462728,-99) , 
2, 0.167535, 1, 0, 0.512236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416924,-99) , 
7, -0.428334, 0, 0, 0.496071,-99) , 
NN(
0, 
0, 
-1, 0.499406, 1, -1, 0.461023,-99) , 
0, 0.499996, 0, 0, 0.471634,-99) , 
2, 0.0357786, 0, 0, 0.481053,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0350772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484932,-99) , 
2, 0.00862224, 1, 0, 0.579231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
5, 0.0115212, 0, 0, 0.502248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379979,-99) , 
7, 0.710137, 0, 0, 0.452485,-99) , 
0, 0.503804, 1, 0, 0.496431,-99) , 
7, -0.999365, 1, 0, 0.501404,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.053812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442257,-99) , 
7, -0.500884, 1, 0, 0.56214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485626,-99) , 
2, -0.0409519, 1, 0, 0.494022,-99) , 
9, -1.70578, 1, 0, 0.501765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420551,-99) , 
8, -4.84147, 0, 0, 0.498712,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.063768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475375,-99) , 
8, -1.77338, 0, 0, 0.523094,-99) , 
9, -0.0867855, 1, 0, 0.533149,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490941,-99) , 
7, -0.146114, 0, 0, 0.521695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46066,-99) , 
0, 0.498093, 1, 0, 0.482245,-99) , 
8, -3.44718, 1, 0, 0.495198,-99) , 
8, -2.10864, 0, 0, 0.506734,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0520531);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470563,-99) , 
2, -0.0585956, 0, 0, 0.508091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404059,-99) , 
9, -2.18317, 0, 0, 0.504677,-99) , 
8, -4.45106, 1, 0, 0.509187,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0587439);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.339343, 1, 1, 0.554388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408423,-99) , 
8, -4.03187, 0, 0, 0.518008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481552,-99) , 
7, -0.998607, 1, 0, 0.486582,-99) , 
0, 0.495238, 1, 0, 0.494578,-99) , 
1, 0.00388765, 0, 0, 0.499949,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.075384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.29961, 0, 1, 0.612878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497053,-99) , 
0, 0.495777, 0, 0, 0.524695,-99) , 
8, -4.0747, 1, 0, 0.53269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470892,-99) , 
0, 0.50353, 1, 0, 0.509875,-99) , 
NN(
0, 
0, 
-1, 0.503527, 0, -1, 0.447972,-99) , 
6, -951.287, 0, 0, 0.485271,-99) , 
0, 0.501896, 1, 0, 0.522265,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0628829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424474,-99) , 
9, -1.37002, 1, 0, 0.566234,-99) , 
NN(
0, 
0, 
-1, -1.2268, 0, -1, 0.488229,-99) , 
7, -0.141248, 1, 0, 0.498835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418028,-99) , 
7, -1.46442, 0, 0, 0.466738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315933,-99) , 
7, -0.985375, 1, 0, 0.421382,-99) , 
9, -2.1324, 0, 0, 0.491763,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0321043);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591391,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.487316,-99) , 
8, -4.52471, 1, 0, 0.491763,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0748379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.57446, 0, 1, 0.529572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438805,-99) , 
0, 0.497141, 0, 0, 0.478968,-99) , 
1, -0.00240127, 0, 0, 0.520744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466061,-99) , 
9, 0.110318, 0, 0, 0.491463,-99) , 
NN(
0, 
0, 
-1, -1.86732, 1, -1, 0.424996,-99) , 
7, 0.142679, 0, 0, 0.469515,-99) , 
0, 0.500949, 1, 0, 0.506024,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0720095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487655,-99) , 
9, -0.307969, 1, 0, 0.561844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481199,-99) , 
0, 0.493334, 0, 0, 0.524485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468006,-99) , 
8, -2.23663, 0, 0, 0.485097,-99) , 
0, 0.49619, 1, 0, 0.497153,-99) , 
1, 0.00374104, 0, 0, 0.503247,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0764054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.91209, 0, 1, 0.583143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492153,-99) , 
9, -1.25541, 0, 0, 0.523233,-99) , 
3, 3.35558, 0, 0, 0.540759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558752,-99) , 
NN(
0, 
0, 
-1, 0.497133, 0, -1, 0.477786,-99) , 
8, -2.34771, 1, 0, 0.488319,-99) , 
9, -0.226582, 1, 0, 0.519615,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0581846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.95422, 0, 1, 0.574654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469471,-99) , 
7, 1.50557, 1, 0, 0.518603,-99) , 
9, -1.38938, 1, 0, 0.530959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479454,-99) , 
6, -951.286, 1, 0, 0.492633,-99) , 
0, 0.504757, 0, 0, 0.496992,-99) , 
3, 3.33695, 0, 0, 0.506703,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0513378);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5058, 1, 1, 0.56228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489777,-99) , 
7, -0.0508757, 1, 0, 0.499445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390985,-99) , 
8, -4.84147, 0, 0, 0.49506,-99) , 
0, 0.502852, 0, 0, 0.504888,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0877935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.91331, 1, 1, 0.54705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425995,-99) , 
9, -2.64896, 0, 0, 0.53838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464701,-99) , 
9, -0.458978, 0, 0, 0.557147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437506,-99) , 
3, 3.16004, 1, 0, 0.485605,-99) , 
9, -0.0943638, 1, 0, 0.498786,-99) , 
8, -2.32602, 1, 0, 0.522477,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0785177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.16135, 0, 1, 0.61092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462634,-99) , 
0, 0.498092, 1, 0, 0.50401,-99) , 
2, 0.00351842, 0, 0, 0.548344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494799,-99) , 
7, 1.53128, 1, 0, 0.523116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451186,-99) , 
9, -1.00322, 0, 0, 0.465228,-99) , 
9, -0.893812, 0, 0, 0.507134,-99) , 
8, -3.80523, 1, 0, 0.513036,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0553309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432455,-99) , 
0, 0.502424, 1, 0, 0.510116,-99) , 
0, 0.503983, 0, 0, 0.513553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424936,-99) , 
0, 0.505706, 1, 0, 0.509184,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0672279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468953,-99) , 
7, -0.285202, 0, 0, 0.545089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485899,-99) , 
8, -3.3761, 1, 0, 0.490695,-99) , 
7, 0.125436, 1, 0, 0.499658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452367,-99) , 
0, 0.497142, 0, 0, 0.510386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359149,-99) , 
7, -0.657002, 1, 0, 0.463496,-99) , 
9, -1.74372, 0, 0, 0.494136,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0540434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48944,-99) , 
0, 0.502854, 0, 0, 0.497944,-99) , 
7, 1.90338, 0, 0, 0.507101,-99) , 
8, -4.52584, 1, 0, 0.512308,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.040312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48742,-99) , 
7, 1.00043, 1, 0, 0.53634,-99) , 
NN(
0, 
0, 
-1, -1.56397, 0, -1, 0.490762,-99) , 
0, 0.501492, 0, 0, 0.498028,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.425151,-99) , 
0, 0.504757, 1, 0, 0.492071,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0479365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450293,-99) , 
8, -3.03014, 0, 0, 0.531145,-99) , 
8, -3.49724, 1, 0, 0.549094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494278,-99) , 
0, 0.492968, 1, 0, 0.498633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355585,-99) , 
7, 0.216069, 0, 0, 0.444202,-99) , 
0, 0.491426, 0, 0, 0.494404,-99) , 
2, -0.0573264, 1, 0, 0.504705,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.064647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.84993, 1, 1, 0.551551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48274,-99) , 
0, 0.495235, 0, 0, 0.514422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433446,-99) , 
2, -0.159549, 0, 0, 0.508007,-99) , 
7, 1.57186, 0, 0, 0.517624,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0247443);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.8206, 0, 1, 0.589573,-99) , 
NN(
NN(
0, 
0, 
-1, -0.503629, 1, 1, 0.505506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408922,-99) , 
7, -1.08766, 0, 0, 0.502922,-99) , 
8, -4.37973, 1, 0, 0.507769,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0635073);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556996,-99) , 
NN(
NN(
0, 
0, 
-1, -3.17263, 1, 1, 0.531253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472803,-99) , 
2, 0.0933672, 0, 0, 0.479342,-99) , 
0, 0.494281, 1, 0, 0.489201,-99) , 
7, 2.14358, 0, 0, 0.496276,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0831865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498819, 0, 1, 0.540618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45577,-99) , 
8, -3.13997, 0, 0, 0.498752,-99) , 
0, 0.499998, 1, 0, 0.525941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466366,-99) , 
8, -2.44687, 1, 0, 0.49453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377918,-99) , 
9, -1.14722, 0, 0, 0.456123,-99) , 
2, 0.0755527, 1, 0, 0.514817,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0803628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.96925, 1, 1, 0.528157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464975,-99) , 
3, 2.70722, 0, 0, 0.491457,-99) , 
2, -0.0121782, 1, 0, 0.504743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441169,-99) , 
0, 0.490112, 1, 0, 0.486198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389938,-99) , 
7, -0.0781459, 0, 0, 0.459467,-99) , 
0, 0.49238, 0, 0, 0.499395,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0424946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494069,-99) , 
3, 2.45522, 0, 0, 0.546293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467037,-99) , 
3, 3.58555, 1, 0, 0.496369,-99) , 
0, 0.493333, 1, 0, 0.503156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418906,-99) , 
3, 8.20208, 1, 0, 0.498524,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0539453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.913316, 1, 1, 0.550354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45583,-99) , 
8, -1.38378, 1, 0, 0.505876,-99) , 
0, 0.494283, 1, 0, 0.51448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42016,-99) , 
3, 8.21106, 1, 0, 0.509411,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0371896);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504754, 0, 1, 0.5153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431309,-99) , 
5, 0.00284637, 0, 0, 0.45142,-99) , 
7, 0.15207, 1, 0, 0.465737,-99) , 
2, -0.0750248, 0, 0, 0.506935,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0424511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43539,-99) , 
0, 0.501904, 1, 0, 0.546873,-99) , 
NN(
0, 
0, 
-1, 0.00304381, 1, -1, 0.491856,-99) , 
5, 0.00426206, 0, 0, 0.499025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392787,-99) , 
5, 0.0127887, 1, 0, 0.494998,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0845891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464836,-99) , 
9, 0.324548, 0, 0, 0.506327,-99) , 
8, -2.31543, 1, 0, 0.521391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441215,-99) , 
3, 3.26313, 1, 0, 0.520996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456954,-99) , 
0, 0.504214, 0, 0, 0.463689,-99) , 
0, 0.493334, 1, 0, 0.471369,-99) , 
7, 1.2864, 0, 0, 0.486474,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0784829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.48203, 1, 1, 0.574202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428001,-99) , 
7, -0.974069, 1, 0, 0.493915,-99) , 
9, -2.07394, 0, 0, 0.553546,-99) , 
NN(
NN(
0, 
0, 
-1, 1.21133, 1, 1, 0.517897,-99) , 
NN(
0, 
0, 
-1, 0.50095, 1, -1, 0.468308,-99) , 
8, -2.3374, 0, 0, 0.498737,-99) , 
8, -2.95451, 1, 0, 0.519274,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0733378);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485593,-99) , 
8, -2.48486, 1, 0, 0.506703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410036,-99) , 
7, -0.458206, 1, 0, 0.445958,-99) , 
9, -1.16441, 0, 0, 0.490109,-99) , 
7, -1.28422, 1, 0, 0.494656,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.045325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495781,-99) , 
0, 0.49143, 1, 0, 0.50133,-99) , 
8, -1.99456, 0, 0, 0.507498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448776,-99) , 
8, -1.72889, 0, 0, 0.487287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450529,-99) , 
7, 2.01389, 1, 0, 0.470864,-99) , 
9, 0.0955376, 1, 0, 0.497142,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0508258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498088, 0, 1, 0.583624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49196,-99) , 
0, 0.496456, 0, 0, 0.510865,-99) , 
NN(
0, 
0, 
-1, 0.00322206, 1, -1, 0.463564,-99) , 
0, 0.501896, 1, 0, 0.50098,-99) , 
8, -4.37633, 1, 0, 0.505538,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0492025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.122587, 1, 1, 0.516999,-99) , 
NN(
0, 
0, 
-1, -0.721538, 1, -1, 0.463858,-99) , 
9, -1.90995, 0, 0, 0.510645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367651,-99) , 
0, 0.506117, 0, 0, 0.42909,-99) , 
0, 0.504757, 1, 0, 0.504538,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0743802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495001,-99) , 
2, -0.0084049, 0, 0, 0.532763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471722,-99) , 
8, -2.90339, 1, 0, 0.500927,-99) , 
7, 0.737449, 1, 0, 0.523654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457075,-99) , 
6, -951.286, 0, 0, 0.491228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388279,-99) , 
7, 0.766685, 0, 0, 0.477132,-99) , 
8, -2.32602, 1, 0, 0.504557,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0687535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434423,-99) , 
8, -4.04304, 0, 0, 0.572175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419585,-99) , 
3, 0.592588, 0, 0, 0.504875,-99) , 
3, 3.3454, 0, 0, 0.522912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495659,-99) , 
7, 2.02095, 0, 0, 0.505652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373941,-99) , 
8, -3.084, 1, 0, 0.437791,-99) , 
9, -0.631997, 0, 0, 0.494802,-99) , 
7, 0.429851, 1, 0, 0.505244,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0783111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494202,-99) , 
6, -951.286, 1, 0, 0.516287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292942,-99) , 
9, -2.3434, 1, 0, 0.436648,-99) , 
7, -0.947791, 0, 0, 0.506297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448049,-99) , 
7, 0.796567, 0, 0, 0.512484,-99) , 
NN(
0, 
0, 
-1, -1.29683, 0, -1, 0.439793,-99) , 
9, 0.313803, 1, 0, 0.464391,-99) , 
8, -2.14628, 1, 0, 0.492497,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0786736);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450163,-99) , 
6, -0.707412, 0, 0, 0.509932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469107,-99) , 
8, -3.83122, 1, 0, 0.479589,-99) , 
6, -951.286, 0, 0, 0.498809,-99) , 
0, 0.489526, 1, 0, 0.501554,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0613427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.04118, 1, 1, 0.571688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409447,-99) , 
6, -951.288, 0, 0, 0.472625,-99) , 
7, 0.436379, 0, 0, 0.531441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443825,-99) , 
7, -0.993031, 0, 0, 0.501235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456513,-99) , 
2, -0.0722806, 1, 0, 0.468247,-99) , 
0, 0.498091, 1, 0, 0.484116,-99) , 
2, 0.067462, 0, 0, 0.491743,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0643979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473149,-99) , 
0, 0.494509, 0, 0, 0.512758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423109,-99) , 
0, 0.505709, 1, 0, 0.507867,-99) , 
NN(
0, 
0, 
-1, -1.66167, 1, -1, 0.396283,-99) , 
9, -2.51857, 0, 0, 0.501637,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0216622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.781461, 1, 1, 0.563384,-99) , 
NN(
0, 
0, 
-1, -0.138048, 0, -1, 0.496668,-99) , 
3, 4.76519, 0, 0, 0.501966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461193,-99) , 
3, 6.6221, 1, 0, 0.498341,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0586607);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492382, 1, 1, 0.520766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554597,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.454648,-99) , 
8, -2.2693, 1, 0, 0.47064,-99) , 
7, 1.28625, 1, 0, 0.504362,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0634427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386113,-99) , 
9, -1.57093, 0, 0, 0.5051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456608,-99) , 
9, 0.832901, 1, 0, 0.498458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406431,-99) , 
0, 0.499998, 1, 0, 0.477884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35688,-99) , 
1, -0.00191291, 0, 0, 0.445451,-99) , 
7, -0.426853, 0, 0, 0.48946,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0494316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611302,-99) , 
NN(
NN(
0, 
0, 
-1, 0.25512, 0, 1, 0.510716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439801,-99) , 
9, 0.51864, 1, 0, 0.463532,-99) , 
8, -1.65005, 1, 0, 0.501261,-99) , 
8, -4.39116, 1, 0, 0.506923,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0700592);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456161,-99) , 
0, 0.498091, 0, 0, 0.522165,-99) , 
NN(
0, 
0, 
-1, -0.212664, 0, -1, 0.471688,-99) , 
9, -1.59114, 1, 0, 0.480738,-99) , 
8, -1.3545, 0, 0, 0.486656,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0436838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470177,-99) , 
0, 0.50095, 0, 0, 0.502526,-99) , 
7, -0.355665, 0, 0, 0.536242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391858,-99) , 
7, -0.35355, 0, 0, 0.501331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420685,-99) , 
9, -1.65034, 0, 0, 0.498011,-99) , 
8, -3.72463, 1, 0, 0.503973,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0714094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.349734, 0, 1, 0.538535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476336,-99) , 
0, 0.495827, 1, 0, 0.482075,-99) , 
0, 0.495238, 1, 0, 0.495676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385351,-99) , 
6, 0.449963, 0, 0, 0.421266,-99) , 
6, -951.286, 1, 0, 0.453687,-99) , 
2, -0.0737556, 0, 0, 0.488645,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0484684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499998, 1, 1, 0.55303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491191,-99) , 
8, -1.70967, 0, 0, 0.498745,-99) , 
8, -3.83285, 1, 0, 0.505983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456855,-99) , 
0, 0.498088, 1, 0, 0.478708,-99) , 
NN(
0, 
0, 
-1, -0.357721, 1, -1, 0.396338,-99) , 
8, -3.02871, 0, 0, 0.446199,-99) , 
2, -0.0750248, 0, 0, 0.496029,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0654002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.713769, 1, 1, 0.54145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46486,-99) , 
0, 0.491658, 1, 0, 0.494158,-99) , 
0, 0.494689, 0, 0, 0.52218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455659,-99) , 
0, 0.501005, 0, 0, 0.489126,-99) , 
0, 0.499451, 1, 0, 0.494632,-99) , 
0, 0.499042, 1, 0, 0.510595,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0763721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475734,-99) , 
0, 0.495238, 1, 0, 0.486141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380919,-99) , 
9, -2.85589, 0, 0, 0.482833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545281,-99) , 
NN(
0, 
0, 
-1, -0.741134, 0, -1, 0.405246,-99) , 
7, -0.141194, 1, 0, 0.431164,-99) , 
2, -0.0573264, 0, 0, 0.472529,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0626023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430341,-99) , 
0, 0.489657, 0, 0, 0.532031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475788,-99) , 
0, 0.498908, 0, 0, 0.503236,-99) , 
0, 0.496187, 1, 0, 0.511999,-99) , 
NN(
0, 
0, 
-1, -2.83016, 0, -1, 0.445652,-99) , 
9, -2.29921, 0, 0, 0.5076,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.044448);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459713,-99) , 
2, 0.0450119, 1, 0, 0.493556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409416,-99) , 
9, 0.978745, 1, 0, 0.456353,-99) , 
8, -1.43555, 1, 0, 0.48769,-99) , 
NN(
0, 
0, 
-1, -0.00492796, 0, -1, 0.428679,-99) , 
9, -2.46245, 0, 0, 0.484575,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0610099);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499048, 1, 1, 0.595747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430724,-99) , 
9, -1.16632, 0, 0, 0.504392,-99) , 
NN(
0, 
0, 
-1, 0.494286, 0, -1, 0.434079,-99) , 
7, -0.00110414, 0, 0, 0.488495,-99) , 
8, -4.33232, 1, 0, 0.49461,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0685851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23745, 1, 1, 0.528722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351552,-99) , 
7, 0.142782, 1, 0, 0.499688,-99) , 
NN(
0, 
0, 
-1, 0.0046258, 0, -1, 0.467175,-99) , 
9, -1.13356, 1, 0, 0.478237,-99) , 
7, 1.85648, 0, 0, 0.486272,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0706669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448698,-99) , 
9, -0.784045, 0, 0, 0.522786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456588,-99) , 
8, -1.40734, 1, 0, 0.50785,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.465522,-99) , 
7, 0.428453, 0, 0, 0.49059,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0838329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00439483, 0, 1, 0.54171,-99) , 
NN(
0, 
0, 
-1, 4.17042, 1, -1, 0.48102,-99) , 
8, -2.81811, 1, 0, 0.506532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44297,-99) , 
8, -4.01111, 0, 0, 0.511978,-99) , 
NN(
0, 
0, 
-1, 0.00751217, 0, -1, 0.450045,-99) , 
7, -0.142182, 1, 0, 0.462084,-99) , 
0, 0.498094, 0, 0, 0.484012,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0703462);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.158089, 1, 1, 0.551021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487362,-99) , 
6, -951.286, 1, 0, 0.51153,-99) , 
NN(
0, 
0, 
-1, 0.4972, 0, -1, 0.463163,-99) , 
0, 0.496869, 1, 0, 0.482704,-99) , 
0, 0.503805, 0, 0, 0.489368,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0630488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.09946, 1, 1, 0.52962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384463,-99) , 
9, -2.11583, 1, 0, 0.474765,-99) , 
7, -0.754067, 0, 0, 0.521025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524685,-99) , 
NN(
0, 
0, 
-1, 1.61253, 0, -1, 0.467413,-99) , 
6, -951.287, 1, 0, 0.486104,-99) , 
7, 1.28609, 1, 0, 0.509577,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0560004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499453, 1, 1, 0.521156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48048,-99) , 
8, -1.51436, 1, 0, 0.514981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467727,-99) , 
8, -3.17122, 1, 0, 0.484779,-99) , 
NN(
0, 
0, 
-1, 0.49576, 0, -1, 0.413408,-99) , 
0, 0.495371, 1, 0, 0.470133,-99) , 
0, 0.496188, 0, 0, 0.499873,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0657595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.265159, 1, 1, 0.525491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440391,-99) , 
9, -2.42953, 0, 0, 0.520556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526358,-99) , 
NN(
0, 
0, 
-1, 0.503261, 1, -1, 0.443642,-99) , 
1, 0.00333685, 0, 0, 0.453527,-99) , 
0, 0.5019, 1, 0, 0.506348,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0633869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444023,-99) , 
7, -0.903535, 0, 0, 0.500903,-99) , 
2, -0.0901857, 1, 0, 0.51179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479864,-99) , 
0, 0.495234, 1, 0, 0.488817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33535,-99) , 
7, 0.302267, 1, 0, 0.420741,-99) , 
9, -0.989988, 0, 0, 0.482535,-99) , 
7, 0.143736, 1, 0, 0.49116,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0618746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491576,-99) , 
2, 0.012317, 0, 0, 0.509332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438972,-99) , 
2, 0.192275, 1, 0, 0.505119,-99) , 
NN(
0, 
0, 
-1, -3.40479, 1, -1, 0.414397,-99) , 
2, -0.0984693, 0, 0, 0.493081,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.065647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460246,-99) , 
2, -0.0750248, 0, 0, 0.512329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414775,-99) , 
6, -1.56302, 0, 0, 0.504151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477615,-99) , 
9, -0.679573, 1, 0, 0.491715,-99) , 
NN(
0, 
0, 
-1, -0.0283479, 1, -1, 0.441917,-99) , 
9, -1.09593, 0, 0, 0.476152,-99) , 
6, -951.286, 0, 0, 0.493925,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0585078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.707954, 1, 1, 0.541154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430884,-99) , 
0, 0.504091, 0, 0, 0.49606,-99) , 
0, 0.503261, 1, 0, 0.523801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469069,-99) , 
8, -2.66742, 0, 0, 0.496414,-99) , 
NN(
0, 
0, 
-1, -0.124103, 1, -1, 0.449148,-99) , 
9, -1.00153, 0, 0, 0.480266,-99) , 
0, 0.499996, 0, 0, 0.494607,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0410555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480559,-99) , 
6, -951.286, 0, 0, 0.573641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454677,-99) , 
0, 0.504757, 1, 0, 0.5043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361265,-99) , 
9, -2.07941, 0, 0, 0.498902,-99) , 
7, -0.998422, 1, 0, 0.503417,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0626094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464869,-99) , 
8, -2.06886, 1, 0, 0.505369,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.471776,-99) , 
0, 0.498362, 1, 0, 0.487524,-99) , 
NN(
0, 
0, 
-1, -0.874745, 0, -1, 0.429847,-99) , 
0, 0.491425, 0, 0, 0.482774,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0464117);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00261389, 1, 1, 0.516069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555773,-99) , 
NN(
0, 
0, 
-1, 0.494294, 0, -1, 0.452517,-99) , 
2, -0.0585956, 1, 0, 0.482676,-99) , 
3, 4.16621, 1, 0, 0.509042,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0957678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466347,-99) , 
2, -0.0548855, 0, 0, 0.529295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39887,-99) , 
9, -2.60814, 0, 0, 0.522369,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436955,-99) , 
3, 6.40454, 1, 0, 0.504798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445366,-99) , 
7, -0.422949, 1, 0, 0.454831,-99) , 
3, 3.3454, 0, 0, 0.468528,-99) , 
0, 0.498094, 0, 0, 0.494708,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0667942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480028,-99) , 
3, 7.1237, 0, 0, 0.507512,-99) , 
7, 1.0008, 0, 0, 0.525017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480258,-99) , 
3, 1.07634, 0, 0, 0.501155,-99) , 
NN(
0, 
0, 
-1, -2.04227, 1, -1, 0.463712,-99) , 
3, 1.6626, 1, 0, 0.481731,-99) , 
3, 4.16304, 0, 0, 0.490249,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0775418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46698, 1, 1, 0.538129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44678,-99) , 
0, 0.500005, 0, 0, 0.476179,-99) , 
3, 3.26313, 1, 0, 0.518569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43371,-99) , 
8, -3.65129, 0, 0, 0.512817,-99) , 
NN(
0, 
0, 
-1, 0.497776, 1, -1, 0.464364,-99) , 
0, 0.50095, 0, 0, 0.476534,-99) , 
6, -951.286, 1, 0, 0.491074,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0606347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464719,-99) , 
6, -951.286, 0, 0, 0.571411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484513,-99) , 
2, -0.066125, 1, 0, 0.490882,-99) , 
7, -0.303084, 1, 0, 0.499855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376448,-99) , 
7, -1.48593, 1, 0, 0.446672,-99) , 
9, -2.31074, 0, 0, 0.496048,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0686807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.570556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492797,-99) , 
7, 0.145371, 0, 0, 0.51709,-99) , 
0, 0.492377, 1, 0, 0.52382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445371,-99) , 
0, 0.506316, 1, 0, 0.518027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372249,-99) , 
0, 0.503466, 1, 0, 0.445574,-99) , 
0, 0.504891, 0, 0, 0.468019,-99) , 
0, 0.501898, 1, 0, 0.511916,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.052847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476314,-99) , 
7, -0.413386, 0, 0, 0.496394,-99) , 
0, 0.50095, 0, 0, 0.524727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499464,-99) , 
8, -2.85008, 1, 0, 0.508581,-99) , 
NN(
0, 
0, 
-1, -1.4415, 0, -1, 0.462348,-99) , 
7, 0.756261, 0, 0, 0.491575,-99) , 
7, -0.141285, 1, 0, 0.498349,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0683515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57342, 0, 1, 0.534594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461856,-99) , 
9, -1.13601, 0, 0, 0.491605,-99) , 
6, -951.286, 0, 0, 0.51835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446112,-99) , 
9, -1.73142, 1, 0, 0.458286,-99) , 
5, 0.00572093, 0, 0, 0.468604,-99) , 
0, 0.495235, 0, 0, 0.504946,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0397123);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442621,-99) , 
7, 0.295092, 1, 0, 0.507227,-99) , 
NN(
0, 
0, 
-1, -0.679257, 0, -1, 0.482646,-99) , 
9, -0.941551, 1, 0, 0.491733,-99) , 
8, -1.08366, 0, 0, 0.494634,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0662314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.599167, 1, 1, 0.526938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444385,-99) , 
8, -4.44017, 0, 0, 0.521782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479862,-99) , 
9, -1.14564, 1, 0, 0.504343,-99) , 
NN(
0, 
0, 
-1, -0.624413, 0, -1, 0.449411,-99) , 
2, 0.00863973, 1, 0, 0.480383,-99) , 
0, 0.499996, 1, 0, 0.507135,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0442311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362327,-99) , 
9, -2.23703, 0, 0, 0.506071,-99) , 
7, -1.28449, 1, 0, 0.509635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427438,-99) , 
0, 0.505709, 1, 0, 0.505286,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0450637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.575152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471133,-99) , 
0, 0.499047, 1, 0, 0.525657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46863,-99) , 
0, 0.497139, 0, 0, 0.487393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354484,-99) , 
9, -1.83087, 0, 0, 0.482007,-99) , 
7, -0.713115, 1, 0, 0.486461,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0621068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494598, 0, 1, 0.580305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459785,-99) , 
0, 0.501727, 0, 0, 0.511245,-99) , 
0, 0.498091, 1, 0, 0.542482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463127,-99) , 
2, 0.000260129, 1, 0, 0.478741,-99) , 
7, -1.28436, 1, 0, 0.483363,-99) , 
2, -0.0737556, 1, 0, 0.491728,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0594136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.72231, 1, 1, 0.515986,-99) , 
NN(
0, 
0, 
-1, 0.564437, 1, -1, 0.468599,-99) , 
9, -0.748466, 0, 0, 0.503108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415094,-99) , 
7, -0.414345, 1, 0, 0.491451,-99) , 
NN(
0, 
0, 
-1, -3.2301, 0, -1, 0.337546,-99) , 
9, -1.51021, 1, 0, 0.450422,-99) , 
7, -0.141872, 0, 0, 0.490893,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0616962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475169,-99) , 
7, -0.46786, 1, 0, 0.480381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366031,-99) , 
9, -2.27852, 0, 0, 0.476912,-99) , 
7, -1.28436, 1, 0, 0.480464,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0626128);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491764,-99) , 
2, 0.0672061, 0, 0, 0.500226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365341,-99) , 
7, -0.236099, 0, 0, 0.495399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472342,-99) , 
8, -4.13937, 0, 0, 0.514476,-99) , 
NN(
0, 
0, 
-1, -2.01357, 0, -1, 0.406532,-99) , 
7, -0.764229, 1, 0, 0.451381,-99) , 
9, -1.40638, 0, 0, 0.485615,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0394918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.92971, 1, 1, 0.509964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435273,-99) , 
0, 0.497135, 0, 0, 0.473213,-99) , 
2, 0.0741566, 1, 0, 0.504384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316644,-99) , 
8, -4.36283, 1, 0, 0.447132,-99) , 
9, -2.1904, 0, 0, 0.49971,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0569621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.5964, 0, 1, 0.59449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399647,-99) , 
9, -1.1017, 0, 0, 0.496667,-99) , 
7, 0.062166, 1, 0, 0.508056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465856,-99) , 
8, -3.64951, 0, 0, 0.488543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357226,-99) , 
2, 0.0748788, 1, 0, 0.462794,-99) , 
7, -0.427493, 0, 0, 0.500801,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.04935);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492164,-99) , 
3, 1.11993, 1, 0, 0.504348,-99) , 
NN(
0, 
0, 
-1, -0.119739, 1, -1, 0.460103,-99) , 
9, -1.40487, 0, 0, 0.494118,-99) , 
3, 7.04013, 0, 0, 0.499058,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0475885);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405956,-99) , 
9, -1.42676, 0, 0, 0.50058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390868,-99) , 
9, -1.8529, 1, 0, 0.45694,-99) , 
7, -0.296632, 0, 0, 0.493932,-99) , 
8, -4.66772, 1, 0, 0.497487,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0423883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498142, 1, 1, 0.572353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435147,-99) , 
3, 6.89752, 1, 0, 0.495914,-99) , 
6, 1.57519, 0, 0, 0.502819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446106,-99) , 
7, -0.141146, 0, 0, 0.502069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446354,-99) , 
8, -2.04856, 0, 0, 0.46241,-99) , 
1, 0.00145585, 0, 0, 0.473982,-99) , 
6, -951.286, 0, 0, 0.492078,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0744013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464797,-99) , 
7, 0.477516, 1, 0, 0.574006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459767,-99) , 
0, 0.499997, 1, 0, 0.48759,-99) , 
9, -0.798619, 1, 0, 0.50117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451038,-99) , 
7, -0.635772, 1, 0, 0.484848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308249,-99) , 
1, 0.00427038, 1, 0, 0.466593,-99) , 
9, -1.21889, 0, 0, 0.491378,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0723065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436662,-99) , 
2, 0.0705504, 1, 0, 0.505775,-99) , 
NN(
0, 
0, 
-1, -0.432255, 0, -1, 0.469155,-99) , 
0, 0.497139, 1, 0, 0.48354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425178,-99) , 
8, -1.3545, 1, 0, 0.47653,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0946057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464326,-99) , 
9, -1.70845, 0, 0, 0.546173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352747,-99) , 
9, -2.40123, 1, 0, 0.444418,-99) , 
7, -0.903623, 0, 0, 0.514943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461039,-99) , 
7, 0.959719, 1, 0, 0.478781,-99) , 
NN(
0, 
0, 
-1, 0.298274, 1, -1, 0.401148,-99) , 
9, -1.01098, 0, 0, 0.471266,-99) , 
7, 0.143643, 1, 0, 0.4837,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0906119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498099, 1, 1, 0.618909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443511,-99) , 
3, 6.47297, 1, 0, 0.506417,-99) , 
7, 0.142761, 1, 0, 0.534524,-99) , 
NN(
NN(
0, 
0, 
-1, 1.71005, 0, 1, 0.56665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463743,-99) , 
3, 0.594078, 1, 0, 0.473031,-99) , 
2, 0.0750589, 0, 0, 0.481469,-99) , 
3, 3.37876, 0, 0, 0.495989,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0529462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450831,-99) , 
7, -0.151218, 0, 0, 0.51919,-99) , 
2, -0.0665875, 1, 0, 0.536997,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462435,-99) , 
8, -1.86296, 1, 0, 0.49555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421309,-99) , 
9, -2.4821, 0, 0, 0.491604,-99) , 
0, 0.501901, 0, 0, 0.500444,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0879543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.63246, 1, 1, 0.552385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412597,-99) , 
9, -1.31946, 1, 0, 0.488643,-99) , 
7, 0.138779, 0, 0, 0.531856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452845,-99) , 
7, -0.45442, 0, 0, 0.508631,-99) , 
NN(
0, 
0, 
-1, 0.960238, 0, -1, 0.463609,-99) , 
7, 0.144022, 1, 0, 0.47599,-99) , 
0, 0.499043, 0, 0, 0.498479,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0601905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00307012, 0, 1, 0.541935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430515,-99) , 
2, 0.0962076, 1, 0, 0.5264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499631,-99) , 
7, -0.359232, 0, 0, 0.555001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415376,-99) , 
9, -0.639704, 0, 0, 0.482301,-99) , 
7, 0.0267794, 1, 0, 0.489188,-99) , 
8, -3.43881, 1, 0, 0.497408,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0773507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76822, 0, 1, 0.546461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453984,-99) , 
0, 0.501898, 1, 0, 0.524046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45728,-99) , 
7, 1.36282, 1, 0, 0.502815,-99) , 
NN(
0, 
0, 
-1, 0.795564, 0, -1, 0.462427,-99) , 
3, 3.59448, 0, 0, 0.472302,-99) , 
8, -3.56838, 1, 0, 0.48214,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0530804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404643,-99) , 
9, -1.13666, 0, 0, 0.500181,-99) , 
8, -3.58283, 1, 0, 0.504149,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385291,-99) , 
9, -1.46122, 1, 0, 0.492793,-99) , 
NN(
0, 
0, 
-1, -0.675265, 1, -1, 0.383578,-99) , 
0, 0.494288, 0, 0, 0.468022,-99) , 
7, -0.14177, 0, 0, 0.495874,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0778582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464733,-99) , 
0, 0.499046, 1, 0, 0.50024,-99) , 
9, -0.40481, 0, 0, 0.510257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471263,-99) , 
9, -0.279601, 1, 0, 0.481456,-99) , 
NN(
0, 
0, 
-1, 0.498074, 0, -1, 0.415333,-99) , 
8, -2.46602, 0, 0, 0.471829,-99) , 
8, -2.64561, 1, 0, 0.490133,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.061994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495944,-99) , 
7, 1.77588, 1, 0, 0.51394,-99) , 
8, -2.34025, 1, 0, 0.531504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459475,-99) , 
7, 0.673829, 1, 0, 0.501514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353887,-99) , 
7, 0.951848, 0, 0, 0.439476,-99) , 
9, -0.254735, 1, 0, 0.491958,-99) , 
7, 1.28609, 0, 0, 0.504962,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0934128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.586893, 1, 1, 0.553523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449549,-99) , 
7, -1.23977, 1, 0, 0.497999,-99) , 
8, -3.98254, 0, 0, 0.532696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475533,-99) , 
9, 0.712982, 1, 0, 0.511964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462407,-99) , 
2, 0.0869324, 0, 0, 0.475278,-99) , 
7, 1.64879, 0, 0, 0.486803,-99) , 
8, -3.10406, 1, 0, 0.500921,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0573164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.7369, 0, 1, 0.560469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472315,-99) , 
8, -1.93014, 1, 0, 0.48971,-99) , 
0, 0.498085, 0, 0, 0.524207,-99) , 
NN(
0, 
0, 
-1, -0.0126602, 1, -1, 0.478171,-99) , 
7, 1.28471, 0, 0, 0.493028,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.096522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47323,-99) , 
7, -0.0228558, 0, 0, 0.546595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414693,-99) , 
9, -0.533656, 0, 0, 0.500572,-99) , 
7, 0.604491, 1, 0, 0.515173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47806,-99) , 
8, -4.35023, 0, 0, 0.541704,-99) , 
NN(
0, 
0, 
-1, -0.337277, 1, -1, 0.356286,-99) , 
7, -0.588339, 1, 0, 0.476093,-99) , 
9, -1.6389, 0, 0, 0.508738,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0454439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434003,-99) , 
7, 0.149827, 0, 0, 0.49968,-99) , 
0, 0.492516, 0, 0, 0.5257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426519,-99) , 
9, -2.48398, 0, 0, 0.498724,-99) , 
NN(
0, 
0, 
-1, 0.494888, 1, -1, 0.451053,-99) , 
0, 0.496054, 0, 0, 0.488587,-99) , 
0, 0.493334, 1, 0, 0.493673,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0623339);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465355,-99) , 
0, 0.494283, 0, 0, 0.520012,-99) , 
NN(
0, 
0, 
-1, 0.00732719, 1, -1, 0.469209,-99) , 
2, 0.074051, 0, 0, 0.476344,-99) , 
9, 0.835691, 0, 0, 0.481583,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0573781);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499057, 1, 1, 0.567494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477489,-99) , 
7, 1.08081, 1, 0, 0.50201,-99) , 
NN(
0, 
0, 
-1, 2.16093, 1, -1, 0.446187,-99) , 
8, -3.84338, 0, 0, 0.496626,-99) , 
8, -4.39176, 1, 0, 0.500566,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0587269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456016,-99) , 
2, 0.0861796, 1, 0, 0.509709,-99) , 
8, -4.46249, 1, 0, 0.514797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463624,-99) , 
9, -0.986453, 1, 0, 0.48841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401904,-99) , 
2, 0.134924, 1, 0, 0.441446,-99) , 
2, 0.067462, 1, 0, 0.474037,-99) , 
3, 3.56867, 1, 0, 0.503624,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0543848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.34662, 0, 1, 0.582435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459267,-99) , 
0, 0.501898, 1, 0, 0.548989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499639,-99) , 
7, 0.325669, 1, 0, 0.50821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.323985,-99) , 
7, -0.397285, 1, 0, 0.429681,-99) , 
9, -1.41853, 0, 0, 0.498849,-99) , 
8, -3.9825, 1, 0, 0.50425,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.059958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465304,-99) , 
0, 0.497453, 0, 0, 0.511641,-99) , 
0, 0.494279, 1, 0, 0.523044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599898,-99) , 
NN(
0, 
0, 
-1, 0.495237, 0, -1, 0.480358,-99) , 
5, 0.00856112, 0, 0, 0.486211,-99) , 
8, -2.23663, 0, 0, 0.499618,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0402511);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.67, 0, 1, 0.558387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485126,-99) , 
9, -0.425307, 0, 0, 0.522321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471382,-99) , 
8, -2.30782, 1, 0, 0.490239,-99) , 
1, -0.00229635, 1, 0, 0.495935,-99) , 
8, -4.42048, 1, 0, 0.499247,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0682366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480271,-99) , 
7, 0.210038, 0, 0, 0.579194,-99) , 
NN(
0, 
0, 
-1, 0.877007, 0, -1, 0.489344,-99) , 
9, -0.391191, 1, 0, 0.504626,-99) , 
NN(
NN(
0, 
0, 
-1, -1.21472, 1, 1, 0.544326,-99) , 
NN(
0, 
0, 
-1, -1.63538, 0, -1, 0.45538,-99) , 
0, 0.493335, 1, 0, 0.466505,-99) , 
8, -2.69413, 0, 0, 0.486169,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0768581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0194355, 1, 1, 0.636849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494524,-99) , 
8, -3.5319, 0, 0, 0.528755,-99) , 
0, 0.499997, 0, 0, 0.563647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443552,-99) , 
9, -1.19999, 0, 0, 0.516209,-99) , 
NN(
0, 
0, 
-1, 0.490336, 0, -1, 0.446821,-99) , 
0, 0.492378, 0, 0, 0.507849,-99) , 
8, -3.21044, 1, 0, 0.523087,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0446712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.18051, 1, 1, 0.575274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463318,-99) , 
0, 0.493334, 0, 0, 0.503809,-99) , 
8, -4.18459, 1, 0, 0.507785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378716,-99) , 
9, -2.80305, 0, 0, 0.502786,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0740222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0129473, 1, 1, 0.572412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480743,-99) , 
8, -3.7591, 1, 0, 0.487649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446687,-99) , 
7, -0.447991, 1, 0, 0.452964,-99) , 
1, 0.000677622, 1, 0, 0.473247,-99) , 
8, -4.29829, 1, 0, 0.479321,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0468393);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395775,-99) , 
7, -1.12554, 0, 0, 0.514558,-99) , 
NN(
0, 
0, 
-1, 0.876493, 0, -1, 0.485721,-99) , 
9, -0.442198, 1, 0, 0.499769,-99) , 
9, -2.73351, 1, 0, 0.502766,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0724022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.37316, 1, 1, 0.534172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450316,-99) , 
7, -0.119311, 0, 0, 0.530937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441665,-99) , 
9, -2.59589, 0, 0, 0.495225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347931,-99) , 
7, -0.0303133, 1, 0, 0.472205,-99) , 
9, -1.29142, 0, 0, 0.5159,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0739161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.97487, 1, 1, 0.556008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485734,-99) , 
7, 1.57292, 0, 0, 0.505663,-99) , 
3, 3.51938, 0, 0, 0.517421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581054,-99) , 
NN(
0, 
0, 
-1, -1.35886, 0, -1, 0.464119,-99) , 
8, -4.07437, 1, 0, 0.474777,-99) , 
0, 0.499044, 1, 0, 0.498888,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0432323);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491426, 1, 1, 0.517454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414067,-99) , 
2, -0.198099, 0, 0, 0.511191,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0472272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.794866, 1, 1, 0.579988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424483,-99) , 
6, -951.286, 0, 0, 0.494081,-99) , 
0, 0.497142, 0, 0, 0.544566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493619,-99) , 
1, -0.00593158, 1, 0, 0.497918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378726,-99) , 
7, -0.264369, 0, 0, 0.492139,-99) , 
7, -0.42758, 1, 0, 0.499621,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0569484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00856102, 0, 1, 0.526123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480053,-99) , 
9, -0.568068, 0, 0, 0.510022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442893,-99) , 
3, 8.01906, 1, 0, 0.492635,-99) , 
3, 4.1725, 1, 0, 0.518962,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0550321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484138,-99) , 
9, -0.252814, 0, 0, 0.497903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433665,-99) , 
8, -1.0363, 1, 0, 0.492607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348396,-99) , 
7, -0.999165, 1, 0, 0.442336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33209,-99) , 
7, -1.82117, 0, 0, 0.410809,-99) , 
9, -2.1302, 0, 0, 0.485229,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0519138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.39293, 0, 1, 0.557059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437703,-99) , 
9, -1.06963, 0, 0, 0.501907,-99) , 
7, 0.0622574, 1, 0, 0.509084,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468093,-99) , 
7, -1.21449, 0, 0, 0.506631,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.415301,-99) , 
7, -0.794838, 1, 0, 0.466699,-99) , 
7, -0.427469, 0, 0, 0.50213,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0821523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455447,-99) , 
2, 0.07662, 1, 0, 0.520438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456954,-99) , 
8, -1.50401, 0, 0, 0.487107,-99) , 
8, -2.13898, 1, 0, 0.507309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406148,-99) , 
1, -0.00100154, 0, 0, 0.4703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355042,-99) , 
2, -0.0424394, 0, 0, 0.440406,-99) , 
8, -3.80523, 0, 0, 0.496263,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0686636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455748,-99) , 
0, 0.504702, 1, 0, 0.539664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454006,-99) , 
0, 0.492375, 0, 0, 0.529099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42218,-99) , 
5, 0.00553435, 1, 0, 0.50705,-99) , 
NN(
0, 
0, 
-1, -1.33781, 0, -1, 0.472018,-99) , 
1, 0.000220417, 1, 0, 0.490454,-99) , 
6, -951.286, 1, 0, 0.503837,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.038338);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.437209, 0, 1, 0.538252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545375,-99) , 
NN(
0, 
0, 
-1, 0.503282, 1, -1, 0.483325,-99) , 
0, 0.506072, 0, 0, 0.485692,-99) , 
0, 0.491426, 1, 0, 0.489259,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0414055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474112,-99) , 
7, -1.66442, 0, 0, 0.563819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489273,-99) , 
8, -4.06752, 1, 0, 0.49334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400688,-99) , 
7, -0.807661, 0, 0, 0.49062,-99) , 
7, -0.998056, 1, 0, 0.494957,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0594665);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483706,-99) , 
9, -0.396659, 1, 0, 0.505404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343702,-99) , 
9, -2.23577, 0, 0, 0.499389,-99) , 
7, -1.28442, 1, 0, 0.502806,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0732226);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493553,-99) , 
3, 3.58777, 1, 0, 0.524801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423439,-99) , 
7, -0.593087, 0, 0, 0.520692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433485,-99) , 
9, -2.66918, 0, 0, 0.48684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367041,-99) , 
7, -0.935893, 1, 0, 0.442707,-99) , 
9, -1.99004, 0, 0, 0.51218,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0497836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482378,-99) , 
3, 3.56867, 0, 0, 0.492829,-99) , 
2, 0.126497, 0, 0, 0.49712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437007,-99) , 
2, 0.207157, 1, 0, 0.49409,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0758634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503123, 1, 1, 0.587231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489777,-99) , 
8, -3.10461, 0, 0, 0.509396,-99) , 
0, 0.499043, 0, 0, 0.540457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469931,-99) , 
8, -2.35571, 0, 0, 0.502428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351349,-99) , 
9, -0.863968, 0, 0, 0.493421,-99) , 
7, 0.429371, 1, 0, 0.510103,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0424776);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647061,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489795, 1, 1, 0.510652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44335,-99) , 
0, 0.506024, 0, 0, 0.459301,-99) , 
0, 0.502851, 1, 0, 0.502751,-99) , 
7, -1.28401, 1, 0, 0.507951,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0588357);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506253, 1, 1, 0.552821,-99) , 
NN(
0, 
0, 
-1, -2.0899, 1, -1, 0.472279,-99) , 
0, 0.504757, 0, 0, 0.477616,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0455788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.55323, 0, 1, 0.542877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474922,-99) , 
8, -2.1315, 1, 0, 0.497373,-99) , 
0, 0.49528, 1, 0, 0.505911,-99) , 
NN(
0, 
0, 
-1, 0.490337, 1, -1, 0.445788,-99) , 
0, 0.491426, 0, 0, 0.500816,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0569871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.150957, 0, 1, 0.543536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489155,-99) , 
0, 0.494282, 1, 0, 0.498222,-99) , 
2, 0.0017653, 0, 0, 0.514877,-99) , 
NN(
0, 
0, 
-1, 0.496187, 1, -1, 0.458517,-99) , 
2, 0.074585, 1, 0, 0.505819,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0696655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454474,-99) , 
3, 4.44824, 1, 0, 0.540407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482089,-99) , 
3, 3.83167, 0, 0, 0.491839,-99) , 
2, -0.0169797, 1, 0, 0.50737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449732,-99) , 
3, 6.60831, 1, 0, 0.502131,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0818493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.37491, 1, 1, 0.542124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471858,-99) , 
0, 0.500943, 0, 0, 0.48992,-99) , 
7, 0.994535, 0, 0, 0.510844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480689,-99) , 
6, -0.128168, 1, 0, 0.533641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462591,-99) , 
6, 1.29043, 0, 0, 0.474628,-99) , 
7, -0.427166, 1, 0, 0.48257,-99) , 
6, -951.286, 1, 0, 0.492409,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0550532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455965,-99) , 
7, 0.168056, 0, 0, 0.527696,-99) , 
1, -0.000899757, 1, 0, 0.556176,-99) , 
NN(
NN(
0, 
0, 
-1, -2.96777, 1, 1, 0.54792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464191,-99) , 
0, 0.499031, 1, 0, 0.485459,-99) , 
0, 0.504213, 0, 0, 0.491529,-99) , 
0, 0.49333, 1, 0, 0.500354,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0397979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496965,-99) , 
8, -1.61524, 1, 0, 0.560298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494009,-99) , 
7, -1.25788, 1, 0, 0.498129,-99) , 
8, -1.96647, 0, 0, 0.505147,-99) , 
NN(
0, 
0, 
-1, 0.775149, 0, -1, 0.467186,-99) , 
7, 1.57047, 1, 0, 0.495531,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0609332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481997,-99) , 
9, -0.859789, 0, 0, 0.537984,-99) , 
7, -0.110208, 1, 0, 0.555111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412766,-99) , 
1, 0.00702288, 1, 0, 0.508969,-99) , 
NN(
0, 
0, 
-1, 0.505649, 1, -1, 0.448675,-99) , 
0, 0.504666, 1, 0, 0.502228,-99) , 
0, 0.495235, 1, 0, 0.514698,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0816393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.27105, 1, 1, 0.537106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449934,-99) , 
1, 2.52458e-05, 0, 0, 0.491148,-99) , 
2, -0.0585956, 0, 0, 0.527869,-99) , 
NN(
NN(
0, 
0, 
-1, -1.1651, 0, 1, 0.555744,-99) , 
NN(
0, 
0, 
-1, 0.501902, 1, -1, 0.445922,-99) , 
8, -4.32592, 1, 0, 0.486186,-99) , 
8, -3.72463, 0, 0, 0.520547,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0342849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490042,-99) , 
9, -0.395945, 1, 0, 0.560973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497351,-99) , 
8, -4.12246, 1, 0, 0.502122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336365,-99) , 
7, -1.50235, 1, 0, 0.422741,-99) , 
9, -2.39655, 0, 0, 0.497128,-99) , 
1, 0.00388765, 0, 0, 0.502603,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0510851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.713751, 1, 1, 0.537958,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502176, 1, 1, 0.537092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452125,-99) , 
0, 0.498999, 0, 0, 0.49304,-99) , 
2, -0.0724437, 1, 0, 0.500254,-99) , 
0, 0.498091, 1, 0, 0.518238,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0754411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46278,-99) , 
7, 0.917539, 1, 0, 0.526925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447275,-99) , 
2, -0.058492, 1, 0, 0.471983,-99) , 
3, 3.49386, 1, 0, 0.509926,-99) , 
NN(
0, 
0, 
-1, 0.0172484, 0, -1, 0.470527,-99) , 
9, -0.146298, 1, 0, 0.494183,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0702966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00260292, 0, 1, 0.548701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484771,-99) , 
9, 0.429239, 1, 0, 0.533577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487272,-99) , 
7, 0.834476, 1, 0, 0.508912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409537,-99) , 
8, -3.56791, 1, 0, 0.471006,-99) , 
9, -1.10945, 0, 0, 0.497356,-99) , 
0, 0.497138, 1, 0, 0.511271,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0618078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501127, 0, 1, 0.524969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441243,-99) , 
1, 0.00702288, 1, 0, 0.520498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487155,-99) , 
9, -1.26879, 1, 0, 0.505693,-99) , 
NN(
0, 
0, 
-1, 0.495065, 0, -1, 0.457566,-99) , 
0, 0.493511, 1, 0, 0.474631,-99) , 
0, 0.497138, 0, 0, 0.501222,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0803828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.8266, 1, 1, 0.532487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417556,-99) , 
9, -0.581809, 0, 0, 0.523579,-99) , 
NN(
0, 
0, 
-1, -0.494944, 1, -1, 0.455923,-99) , 
7, 0.715211, 0, 0, 0.490739,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.055916);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.60163, 0, 1, 0.583995,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504894, 1, 1, 0.556686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480495,-99) , 
0, 0.493013, 1, 0, 0.486526,-99) , 
0, 0.503805, 0, 0, 0.492764,-99) , 
8, -4.13255, 1, 0, 0.499821,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0415139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487573,-99) , 
0, 0.492808, 0, 0, 0.522425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489488,-99) , 
7, -0.141968, 1, 0, 0.497901,-99) , 
0, 0.496417, 1, 0, 0.505669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44305,-99) , 
0, 0.489526, 0, 0, 0.503692,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0762663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46884,-99) , 
6, -951.287, 0, 0, 0.506418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457466,-99) , 
8, -2.59502, 0, 0, 0.472781,-99) , 
7, 1.00067, 0, 0, 0.487032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402565,-99) , 
0, 0.505709, 1, 0, 0.483303,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0825181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477664,-99) , 
9, -2.19931, 0, 0, 0.548863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471298,-99) , 
9, -1.19261, 1, 0, 0.535563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485188,-99) , 
0, 0.499989, 0, 0, 0.501513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45141,-99) , 
8, -3.50942, 1, 0, 0.459915,-99) , 
9, -0.175581, 0, 0, 0.481749,-99) , 
7, 0.14522, 1, 0, 0.496672,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0698688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464677,-99) , 
7, 1.06202, 0, 0, 0.564395,-99) , 
NN(
0, 
0, 
-1, 0.895288, 0, 1, 0.522623,-99) , 
7, 1.52049, 1, 0, 0.538094,-99) , 
NN(
NN(
0, 
0, 
-1, -0.002621, 1, 1, 0.513225,-99) , 
NN(
0, 
0, 
-1, -0.465045, 0, -1, 0.435513,-99) , 
7, 0.679568, 1, 0, 0.492517,-99) , 
9, -0.257977, 0, 0, 0.51122,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0437985);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469,-99) , 
0, 0.505392, 1, 0, 0.528928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461115,-99) , 
0, 0.499678, 1, 0, 0.499842,-99) , 
0, 0.500948, 0, 0, 0.507178,-99) , 
1, -0.0066626, 1, 0, 0.51108,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0392164);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490276,-99) , 
0, 0.490474, 1, 0, 0.493611,-99) , 
NN(
0, 
0, 
-1, -0.324008, 1, -1, 0.45081,-99) , 
9, -1.5277, 0, 0, 0.487218,-99) , 
8, -4.65126, 1, 0, 0.49017,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0700111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492186,-99) , 
2, -0.121, 0, 0, 0.544331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494555,-99) , 
7, -0.322999, 1, 0, 0.503806,-99) , 
0, 0.497139, 0, 0, 0.527397,-99) , 
NN(
0, 
0, 
-1, 0.499994, 1, -1, 0.43948,-99) , 
8, -4.24711, 0, 0, 0.519713,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0632533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999543, 1, 1, 0.57803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455739,-99) , 
9, -1.01211, 0, 0, 0.509345,-99) , 
1, -0.00107188, 1, 0, 0.530971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486522,-99) , 
7, 0.158354, 1, 0, 0.498123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413922,-99) , 
8, -4.60035, 0, 0, 0.493709,-99) , 
0, 0.496188, 1, 0, 0.505851,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.057821);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.427029, 0, 1, 0.58491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443548,-99) , 
9, -1.77335, 0, 0, 0.510982,-99) , 
7, -1.28356, 1, 0, 0.513848,-99) , 
0, 0.491428, 1, 0, 0.518804,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0552385);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494302,-99) , 
8, -2.50037, 1, 0, 0.539694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468988,-99) , 
7, 0.1447, 0, 0, 0.499209,-99) , 
0, 0.499043, 0, 0, 0.506688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484768,-99) , 
7, 1.43556, 1, 0, 0.504164,-99) , 
NN(
0, 
0, 
-1, 0.207629, 1, -1, 0.448248,-99) , 
9, -0.303983, 0, 0, 0.471714,-99) , 
0, 0.500948, 1, 0, 0.496892,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0850071);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468068,-99) , 
9, -0.176527, 0, 0, 0.534593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483837,-99) , 
7, 2.23821, 1, 0, 0.523956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485174,-99) , 
1, -0.00124541, 1, 0, 0.509923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452172,-99) , 
0, 0.490886, 1, 0, 0.46164,-99) , 
0, 0.499045, 0, 0, 0.481013,-99) , 
7, 1.00067, 0, 0, 0.498697,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.048296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488865,-99) , 
0, 0.501901, 1, 0, 0.564133,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.503204,-99) , 
7, 1.0008, 1, 0, 0.537433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493444,-99) , 
3, 1.48147, 1, 0, 0.511079,-99) , 
NN(
0, 
0, 
-1, -0.428899, 0, -1, 0.4777,-99) , 
1, -0.00129495, 0, 0, 0.500759,-99) , 
3, 4.17042, 0, 0, 0.50839,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0534771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.88614, 1, 1, 0.5174,-99) , 
NN(
0, 
0, 
-1, -1.53321, 1, -1, 0.461608,-99) , 
7, -0.386727, 0, 0, 0.504805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505931,-99) , 
NN(
0, 
0, 
-1, 0.498086, 1, -1, 0.436348,-99) , 
7, 2.1839, 0, 0, 0.463927,-99) , 
7, 1.57175, 1, 0, 0.494772,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0553721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.96592, 1, 1, 0.553159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487153,-99) , 
8, -2.43306, 1, 0, 0.50544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443159,-99) , 
1, -0.000899757, 1, 0, 0.471227,-99) , 
9, -1.50917, 0, 0, 0.498944,-99) , 
0, 0.503805, 0, 0, 0.504018,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0559601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0305382, 1, 1, 0.515822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457872,-99) , 
5, 0.00352807, 0, 0, 0.476219,-99) , 
8, -3.68737, 0, 0, 0.503485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434978,-99) , 
2, -0.0557161, 0, 0, 0.490484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407133,-99) , 
7, 1.20772, 0, 0, 0.474936,-99) , 
9, -0.2525, 1, 0, 0.491586,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0429382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499115,-99) , 
0, 0.499057, 1, 0, 0.56874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482309,-99) , 
0, 0.503806, 1, 0, 0.525954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491302,-99) , 
3, 6.55627, 0, 0, 0.495063,-99) , 
0, 0.500949, 0, 0, 0.502837,-99) , 
8, -4.39662, 1, 0, 0.506458,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0624789);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490474, 1, 1, 0.52422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43897,-99) , 
5, 0.00257338, 0, 0, 0.473975,-99) , 
7, 1.57175, 1, 0, 0.51183,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.068392);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490004,-99) , 
6, -951.286, 0, 0, 0.523308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485654,-99) , 
2, -0.0573264, 1, 0, 0.495849,-99) , 
0, 0.497139, 0, 0, 0.507754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463235,-99) , 
3, 1.2837, 1, 0, 0.491438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39462,-99) , 
3, 4.16874, 1, 0, 0.464818,-99) , 
0, 0.500948, 1, 0, 0.495845,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0893802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0231688, 1, 1, 0.567589,-99) , 
NN(
0, 
0, 
-1, 0.0135725, 1, -1, 0.44283,-99) , 
0, 0.502851, 1, 0, 0.54489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479484,-99) , 
8, -2.94761, 1, 0, 0.48468,-99) , 
0, 0.50285, 0, 0, 0.49453,-99) , 
7, 0.715211, 1, 0, 0.517169,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0640042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483898,-99) , 
0, 0.49999, 1, 0, 0.52108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478492,-99) , 
1, 0.00191959, 0, 0, 0.494521,-99) , 
8, -2.41462, 0, 0, 0.506594,-99) , 
8, -4.76538, 1, 0, 0.509111,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0487711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999218, 0, 1, 0.570448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474883,-99) , 
7, -0.666088, 1, 0, 0.545614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470738,-99) , 
9, -0.0350051, 1, 0, 0.486857,-99) , 
NN(
0, 
0, 
-1, -0.0108507, 1, -1, 0.44525,-99) , 
9, -1.31557, 0, 0, 0.481525,-99) , 
9, -1.7874, 1, 0, 0.489141,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0701735);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.716518, 1, 1, 0.544396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469875,-99) , 
3, 5.94798, 1, 0, 0.526436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419466,-99) , 
7, 1.02408, 1, 0, 0.479185,-99) , 
1, -0.000352534, 0, 0, 0.505,-99) , 
8, -1.75169, 0, 0, 0.513416,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.021192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416515,-99) , 
0, 0.491245, 0, 0, 0.497538,-99) , 
0, 0.489521, 1, 0, 0.500133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467038,-99) , 
8, -1.29454, 1, 0, 0.496082,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0589399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.780744, 1, 1, 0.561962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461534,-99) , 
9, -1.60839, 0, 0, 0.543769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494357,-99) , 
9, -2.63564, 0, 0, 0.559861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469907,-99) , 
9, -0.0916474, 0, 0, 0.48395,-99) , 
8, -4.13326, 1, 0, 0.490351,-99) , 
2, -0.0750248, 1, 0, 0.49831,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0504102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467676,-99) , 
7, 1.30578, 1, 0, 0.502104,-99) , 
8, -1.43199, 0, 0, 0.50831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449431,-99) , 
9, 0.95171, 1, 0, 0.502409,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0689094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477523,-99) , 
0, 0.497139, 1, 0, 0.498267,-99) , 
1, -0.00408005, 1, 0, 0.505645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427911,-99) , 
9, 0.222888, 1, 0, 0.459669,-99) , 
8, -1.07887, 0, 0, 0.472219,-99) , 
8, -2.23663, 1, 0, 0.492629,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0517275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474965,-99) , 
7, 0.879416, 0, 0, 0.496694,-99) , 
8, -3.82727, 1, 0, 0.500126,-99) , 
NN(
0, 
0, 
-1, 3.2545, 1, -1, 0.444203,-99) , 
7, -0.425548, 0, 0, 0.490745,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.065268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497923,-99) , 
8, -3.95977, 1, 0, 0.589202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35256,-99) , 
9, -2.2885, 1, 0, 0.46679,-99) , 
7, -0.741572, 0, 0, 0.524006,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.475543,-99) , 
8, -3.72463, 1, 0, 0.483183,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.051818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473955,-99) , 
0, 0.500632, 0, 0, 0.525132,-99) , 
0, 0.497142, 1, 0, 0.558372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491996,-99) , 
8, -3.37769, 1, 0, 0.500112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325475,-99) , 
8, -4.06981, 1, 0, 0.408815,-99) , 
9, -1.66054, 0, 0, 0.493682,-99) , 
7, -0.713115, 1, 0, 0.499897,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0707558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481349,-99) , 
9, -0.441756, 0, 0, 0.535462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464368,-99) , 
0, 0.502853, 1, 0, 0.523693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488167,-99) , 
0, 0.496189, 1, 0, 0.504725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40306,-99) , 
9, -0.613461, 1, 0, 0.492814,-99) , 
7, 0.715122, 0, 0, 0.508948,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.079974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4781,-99) , 
6, -0.985556, 0, 0, 0.565549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447109,-99) , 
0, 0.503169, 1, 0, 0.472651,-99) , 
6, -951.286, 0, 0, 0.527762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473147,-99) , 
3, 1.75695, 0, 0, 0.497653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409357,-99) , 
0, 0.496506, 0, 0, 0.455708,-99) , 
3, 3.56867, 1, 0, 0.486526,-99) , 
0, 0.500948, 0, 0, 0.497419,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0662658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531345,-99) , 
NN(
0, 
0, 
-1, -2.87254, 1, -1, 0.460473,-99) , 
0, 0.504349, 1, 0, 0.521716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444194,-99) , 
3, 0.933441, 0, 0, 0.493753,-99) , 
NN(
0, 
0, 
-1, 0.499212, 0, -1, 0.447847,-99) , 
3, 3.56867, 1, 0, 0.4816,-99) , 
0, 0.496189, 0, 0, 0.508552,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0773371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.88394, 0, 1, 0.548382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452588,-99) , 
3, 3.60007, 1, 0, 0.49359,-99) , 
0, 0.499043, 0, 0, 0.515362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496299,-99) , 
0, 0.497141, 1, 0, 0.542145,-99) , 
NN(
0, 
0, 
-1, -0.765388, 1, -1, 0.447809,-99) , 
8, -3.99721, 1, 0, 0.472686,-99) , 
7, 0.429371, 0, 0, 0.498703,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.041521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.248707, 1, 1, 0.562182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449926,-99) , 
9, -1.6917, 0, 0, 0.541735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440356,-99) , 
9, -2.55648, 0, 0, 0.500429,-99) , 
NN(
0, 
0, 
-1, 0.497053, 0, -1, 0.46253,-99) , 
8, -1.70495, 1, 0, 0.49199,-99) , 
0, 0.502852, 0, 0, 0.499059,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0491726);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.4306, 1, 1, 0.525978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48202,-99) , 
7, -0.176691, 1, 0, 0.490203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353993,-99) , 
0, 0.497139, 0, 0, 0.444787,-99) , 
9, -2.31918, 0, 0, 0.486466,-99) , 
9, 0.449003, 0, 0, 0.494555,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0674534);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478497,-99) , 
7, 1.00061, 1, 0, 0.504968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403245,-99) , 
7, 0.737518, 0, 0, 0.457736,-99) , 
2, -0.0648558, 0, 0, 0.496186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36611,-99) , 
1, -0.00978926, 0, 0, 0.492066,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0666408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477063,-99) , 
7, -0.141968, 0, 0, 0.513795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401553,-99) , 
2, 0.134189, 1, 0, 0.451998,-99) , 
2, 0.0676617, 1, 0, 0.503304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553043,-99) , 
NN(
0, 
0, 
-1, 0.00153466, 0, -1, 0.460742,-99) , 
5, 0.00460478, 0, 0, 0.472546,-99) , 
0, 0.496187, 0, 0, 0.493142,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0510354);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.449639, 1, 1, 0.550535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518155,-99) , 
NN(
0, 
0, 
-1, -2.37797, 1, -1, 0.476336,-99) , 
7, 1.85725, 0, 0, 0.48308,-99) , 
0, 0.492378, 1, 0, 0.489689,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0766891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477292,-99) , 
9, -1.69877, 0, 0, 0.527601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456508,-99) , 
9, 0.71458, 1, 0, 0.478848,-99) , 
9, 0.231884, 1, 0, 0.51475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48149,-99) , 
2, -0.0225974, 1, 0, 0.505039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42257,-99) , 
3, 3.29018, 0, 0, 0.443115,-99) , 
0, 0.498087, 0, 0, 0.473364,-99) , 
6, -951.286, 0, 0, 0.499075,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.052178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.49115, 0, 1, 0.52222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433641,-99) , 
3, 3.59704, 1, 0, 0.468783,-99) , 
2, 0.106828, 1, 0, 0.516207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443911,-99) , 
0, 0.490474, 0, 0, 0.5124,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0613209);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.496188, 1, 1, 0.533645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436917,-99) , 
0, 0.493329, 0, 0, 0.489024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444176,-99) , 
0, 0.500946, 1, 0, 0.476659,-99) , 
8, -2.31804, 1, 0, 0.50958,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0633706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.50545, 1, 1, 0.555251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477591,-99) , 
0, 0.505402, 0, 0, 0.494237,-99) , 
0, 0.501809, 1, 0, 0.51588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477478,-99) , 
0, 0.498283, 0, 0, 0.484136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402574,-99) , 
0, 0.499406, 1, 0, 0.477481,-99) , 
0, 0.499996, 0, 0, 0.490236,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0723626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424392,-99) , 
7, 0.575808, 1, 0, 0.542308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440346,-99) , 
7, 0.00692987, 1, 0, 0.487179,-99) , 
8, -3.11257, 0, 0, 0.506078,-99) , 
NN(
0, 
0, 
-1, -0.480547, 0, -1, 0.470206,-99) , 
7, 0.714992, 1, 0, 0.486702,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0772175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.102892, 0, 1, 0.54251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448956,-99) , 
8, -3.56829, 0, 0, 0.488517,-99) , 
6, -951.286, 1, 0, 0.508079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480736,-99) , 
8, -2.66127, 1, 0, 0.490289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360392,-99) , 
8, -3.16882, 1, 0, 0.419273,-99) , 
9, -0.680534, 0, 0, 0.480524,-99) , 
7, 0.429454, 1, 0, 0.49077,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0603796);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476995,-99) , 
2, -0.0347214, 0, 0, 0.533834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484155,-99) , 
7, 0.558769, 1, 0, 0.499291,-99) , 
0, 0.495237, 1, 0, 0.507944,-99) , 
8, -4.39662, 1, 0, 0.512515,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0749809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.44622, 0, 1, 0.594377,-99) , 
NN(
0, 
0, 
-1, 0.504666, 1, -1, 0.45849,-99) , 
7, 0.143697, 0, 0, 0.547622,-99) , 
NN(
NN(
0, 
0, 
-1, -2.88114, 0, 1, 0.526406,-99) , 
NN(
0, 
0, 
-1, -1.29142, 0, -1, 0.465701,-99) , 
0, 0.497049, 1, 0, 0.492953,-99) , 
0, 0.502852, 0, 0, 0.500973,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0596591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483739,-99) , 
3, 3.0079, 1, 0, 0.509038,-99) , 
NN(
0, 
0, 
-1, 0.497005, 0, -1, 0.468082,-99) , 
9, -1.40638, 0, 0, 0.49974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556431,-99) , 
NN(
0, 
0, 
-1, -0.000216833, 0, -1, 0.453061,-99) , 
5, 0.00460516, 0, 0, 0.465953,-99) , 
0, 0.495238, 0, 0, 0.490728,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0485732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472147,-99) , 
0, 0.503623, 1, 0, 0.514861,-99) , 
NN(
0, 
0, 
-1, -4.06415, 0, -1, 0.484615,-99) , 
0, 0.497139, 0, 0, 0.502302,-99) , 
7, -1.28444, 1, 0, 0.505541,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0548661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.84369, 1, 1, 0.516845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425165,-99) , 
7, 0.563134, 0, 0, 0.511759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496371,-99) , 
8, -3.44194, 1, 0, 0.54299,-99) , 
NN(
0, 
0, 
-1, 0.529306, 1, -1, 0.46573,-99) , 
2, -0.0737556, 1, 0, 0.477066,-99) , 
9, -0.619346, 0, 0, 0.495897,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0785876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496337,-99) , 
0, 0.494273, 1, 0, 0.510143,-99) , 
7, 1.19093, 1, 0, 0.520547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459536,-99) , 
8, -4.64782, 0, 0, 0.530259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447246,-99) , 
0, 0.501902, 0, 0, 0.464631,-99) , 
8, -3.53096, 1, 0, 0.487489,-99) , 
7, 1.00048, 0, 0, 0.501561,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0842363);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.467807, 1, 1, 0.547162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461143,-99) , 
7, 1.07554, 1, 0, 0.524776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455047,-99) , 
0, 0.502625, 0, 0, 0.469309,-99) , 
0, 0.497141, 1, 0, 0.490869,-99) , 
8, -1.77646, 0, 0, 0.503143,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0678176);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.28788, 0, 1, 0.555948,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442755,-99) , 
9, -1.8162, 0, 0, 0.501892,-99) , 
NN(
0, 
0, 
-1, -1.23906, 0, -1, 0.454217,-99) , 
8, -1.68018, 1, 0, 0.491627,-99) , 
0, 0.500949, 0, 0, 0.508053,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0589278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0917556, 1, 1, 0.538362,-99) , 
NN(
0, 
0, 
-1, 0.492155, 0, -1, 0.479021,-99) , 
9, -0.446837, 0, 0, 0.50772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486892,-99) , 
1, 0.000760815, 1, 0, 0.533302,-99) , 
NN(
0, 
0, 
-1, 0.503195, 1, -1, 0.472653,-99) , 
0, 0.50462, 0, 0, 0.480143,-99) , 
0, 0.497139, 1, 0, 0.490998,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.082965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46935,-99) , 
7, 0.985731, 1, 0, 0.521537,-99) , 
8, -2.01757, 0, 0, 0.538036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485002,-99) , 
6, -951.286, 0, 0, 0.515346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460281,-99) , 
0, 0.491158, 1, 0, 0.471595,-99) , 
8, -2.42535, 0, 0, 0.490041,-99) , 
0, 0.499998, 0, 0, 0.505561,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0697078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.12785, 1, 1, 0.535399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451164,-99) , 
0, 0.493741, 1, 0, 0.488009,-99) , 
0, 0.496189, 0, 0, 0.520033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499431,-99) , 
8, -3.56075, 1, 0, 0.517064,-99) , 
NN(
0, 
0, 
-1, -2.8252, 0, -1, 0.447586,-99) , 
0, 0.499994, 1, 0, 0.491785,-99) , 
6, -951.286, 0, 0, 0.50943,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0683499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00388765, 0, 1, 0.55334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42749,-99) , 
9, -2.08643, 0, 0, 0.54086,-99) , 
NN(
0, 
0, 
-1, -1.27967, 0, -1, 0.476734,-99) , 
6, -951.286, 1, 0, 0.498506,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0551914);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.47485, 0, 1, 0.613527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481854,-99) , 
8, -2.26343, 1, 0, 0.5544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474585,-99) , 
7, 0.143942, 0, 0, 0.504808,-99) , 
1, 0.00388765, 0, 0, 0.509147,-99) , 
7, -0.998736, 1, 0, 0.514976,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0561494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0249452, 1, 1, 0.529079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463733,-99) , 
2, -0.117694, 0, 0, 0.521522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486713,-99) , 
9, 0.832247, 0, 0, 0.499437,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.463617,-99) , 
7, 1.5949, 0, 0, 0.479339,-99) , 
8, -2.64181, 1, 0, 0.498979,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0497971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.752914, 0, 1, 0.569037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494142,-99) , 
6, -951.286, 1, 0, 0.517877,-99) , 
0, 0.494558, 0, 0, 0.534243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487688,-99) , 
3, 6.54356, 0, 0, 0.492258,-99) , 
0, 0.505981, 0, 0, 0.496662,-99) , 
0, 0.49619, 1, 0, 0.508525,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0640527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497154, 0, 1, 0.560872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441419,-99) , 
9, -1.78547, 1, 0, 0.531296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484705,-99) , 
1, 0.00145893, 0, 0, 0.500259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359123,-99) , 
9, -1.63377, 0, 0, 0.495162,-99) , 
7, -0.427469, 1, 0, 0.500583,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0511694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491303,-99) , 
7, -1.08793, 1, 0, 0.511804,-99) , 
0, 0.495238, 1, 0, 0.532732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487644,-99) , 
7, 0.802002, 1, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382468,-99) , 
9, -1.49826, 0, 0, 0.495849,-99) , 
8, -3.42179, 1, 0, 0.503866,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0497729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.1948, 1, 1, 0.571316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497504,-99) , 
8, -1.80794, 0, 0, 0.509713,-99) , 
2, -0.038041, 1, 0, 0.523482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462585,-99) , 
1, 0.00205455, 1, 0, 0.499895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366032,-99) , 
9, -1.93523, 1, 0, 0.448567,-99) , 
7, -0.410095, 0, 0, 0.491788,-99) , 
0, 0.497139, 0, 0, 0.510508,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0436185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00471491, 0, 1, 0.515123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417184,-99) , 
0, 0.504213, 0, 0, 0.476198,-99) , 
0, 0.502852, 1, 0, 0.509037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457872,-99) , 
8, -1.11364, 1, 0, 0.504692,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0617572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481495,-99) , 
9, -1.76194, 1, 0, 0.586894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36723,-99) , 
8, -4.45985, 1, 0, 0.486126,-99) , 
9, -2.2738, 0, 0, 0.541229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495785,-99) , 
8, -3.24393, 1, 0, 0.504696,-99) , 
NN(
0, 
0, 
-1, -2.52782, 1, -1, 0.46923,-99) , 
0, 0.499044, 1, 0, 0.489703,-99) , 
7, -0.427253, 1, 0, 0.49709,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.05737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47767,-99) , 
8, -1.69529, 1, 0, 0.514412,-99) , 
8, -4.51381, 1, 0, 0.517422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440795,-99) , 
2, -0.205264, 0, 0, 0.513321,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0604116);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.534108,-99) , 
NN(
NN(
0, 
0, 
-1, -3.7978, 1, 1, 0.518407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365948,-99) , 
7, 0.0557285, 0, 0, 0.442861,-99) , 
0, 0.492382, 0, 0, 0.509678,-99) , 
7, 1.00061, 0, 0, 0.520308,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.086543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.79881, 0, 1, 0.554798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478995,-99) , 
5, 0.00207325, 0, 0, 0.492209,-99) , 
7, 1.80058, 1, 0, 0.537394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482537,-99) , 
8, -3.11132, 0, 0, 0.497489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373397,-99) , 
7, 0.264716, 1, 0, 0.479531,-99) , 
9, -0.970749, 0, 0, 0.51713,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0833226);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486934,-99) , 
3, 3.59089, 1, 0, 0.536614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448805,-99) , 
7, 1.06893, 0, 0, 0.527223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465819,-99) , 
0, 0.496188, 0, 0, 0.512551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440958,-99) , 
9, -1.46728, 1, 0, 0.459786,-99) , 
1, 0.000606179, 0, 0, 0.480597,-99) , 
9, -0.208553, 0, 0, 0.49944,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0386378);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473005,-99) , 
0, 0.503124, 1, 0, 0.509241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437206,-99) , 
0, 0.505709, 1, 0, 0.505798,-99) , 
8, -4.81074, 1, 0, 0.508434,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0676908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481265,-99) , 
7, 1.37856, 0, 0, 0.510444,-99) , 
8, -3.4016, 1, 0, 0.530446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482608,-99) , 
0, 0.498089, 0, 0, 0.510002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46738,-99) , 
8, -1.40537, 0, 0, 0.475045,-99) , 
2, -0.0317224, 1, 0, 0.483969,-99) , 
1, -0.00229635, 1, 0, 0.491851,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0457122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494552,-99) , 
7, -1.48551, 0, 0, 0.563717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492377,-99) , 
8, -2.92725, 1, 0, 0.497616,-99) , 
NN(
0, 
0, 
-1, 0.374993, 1, -1, 0.462795,-99) , 
9, -0.84124, 0, 0, 0.485754,-99) , 
8, -4.39662, 1, 0, 0.489812,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0719374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43504, 1, 1, 0.547337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468553,-99) , 
2, -0.00711677, 0, 0, 0.497344,-99) , 
6, -951.286, 1, 0, 0.515013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40528,-99) , 
9, -0.471783, 1, 0, 0.453148,-99) , 
0, 0.492378, 0, 0, 0.507917,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0386991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46303,-99) , 
7, 0.450809, 0, 0, 0.542981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447397,-99) , 
9, -2.43277, 0, 0, 0.503747,-99) , 
NN(
0, 
0, 
-1, 0.0231688, 1, -1, 0.43505,-99) , 
0, 0.493738, 0, 0, 0.496555,-99) , 
0, 0.491426, 1, 0, 0.499771,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0778202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.657544, 1, 1, 0.565752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490491,-99) , 
0, 0.499989, 1, 0, 0.540815,-99) , 
NN(
NN(
0, 
0, 
-1, 3.26816, 0, 1, 0.535446,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.466098,-99) , 
8, -3.75706, 1, 0, 0.481531,-99) , 
9, -0.106128, 0, 0, 0.502655,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0656287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.885768, 1, 1, 0.599849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443025,-99) , 
0, 0.489732, 1, 0, 0.474981,-99) , 
0, 0.49206, 0, 0, 0.531508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488705,-99) , 
0, 0.499365, 1, 0, 0.543456,-99) , 
NN(
0, 
0, 
-1, -1.68238, 0, -1, 0.480333,-99) , 
7, -0.712526, 1, 0, 0.486355,-99) , 
0, 0.494282, 1, 0, 0.494558,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0864994);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418908,-99) , 
7, -0.299639, 0, 0, 0.548221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458117,-99) , 
9, 0.0347448, 0, 0, 0.508706,-99) , 
7, 1.21756, 1, 0, 0.52987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484228,-99) , 
2, -0.0307261, 1, 0, 0.503812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358396,-99) , 
7, -0.127411, 1, 0, 0.48437,-99) , 
9, -1.44569, 0, 0, 0.520458,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.052212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482125,-99) , 
9, 0.924284, 1, 0, 0.511083,-99) , 
8, -2.59148, 1, 0, 0.518586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485302,-99) , 
0, 0.497142, 1, 0, 0.506199,-99) , 
NN(
0, 
0, 
-1, 0.494284, 0, -1, 0.471952,-99) , 
6, -951.286, 0, 0, 0.493149,-99) , 
7, 1.00068, 0, 0, 0.503801,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0749059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.256341, 1, 1, 0.561795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422617,-99) , 
9, -2.03884, 0, 0, 0.54633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492332,-99) , 
9, -1.75395, 0, 0, 0.533751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45321,-99) , 
9, -0.158089, 0, 0, 0.479515,-99) , 
7, 0.143001, 1, 0, 0.494794,-99) , 
3, 3.56867, 0, 0, 0.508311,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0639341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.1231, 1, 1, 0.57692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413357,-99) , 
7, -1.35186, 0, 0, 0.491011,-99) , 
2, 0.0701843, 0, 0, 0.503645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475619,-99) , 
8, -3.05886, 1, 0, 0.481448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32097,-99) , 
0, 0.498077, 0, 0, 0.404085,-99) , 
7, 0.482362, 0, 0, 0.47395,-99) , 
9, -0.907825, 1, 0, 0.484377,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0609222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492891,-99) , 
7, -1.24593, 1, 0, 0.542605,-99) , 
7, -0.544997, 0, 0, 0.572444,-99) , 
NN(
NN(
0, 
0, 
-1, 0.506026, 0, 1, 0.539035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478904,-99) , 
0, 0.493422, 1, 0, 0.486962,-99) , 
0, 0.502852, 0, 0, 0.493813,-99) , 
8, -3.92394, 1, 0, 0.502422,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0367304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00392311, 1, 1, 0.511143,-99) , 
NN(
0, 
0, 
-1, -1.11979, 1, -1, 0.464199,-99) , 
9, -2.1324, 0, 0, 0.507141,-99) , 
NN(
0, 
0, 
-1, 0.200853, 0, -1, 0.424339,-99) , 
0, 0.491426, 0, 0, 0.500359,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0687839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.4884, 0, 1, 0.592756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448701,-99) , 
0, 0.499062, 0, 0, 0.477876,-99) , 
3, 3.04142, 1, 0, 0.548725,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500937, 0, 1, 0.531247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476126,-99) , 
2, 0.0675475, 0, 0, 0.48479,-99) , 
3, 3.59152, 0, 0, 0.496898,-99) , 
7, -0.427469, 1, 0, 0.504301,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0661928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471917,-99) , 
7, -1.2601, 0, 0, 0.523343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472235,-99) , 
3, 3.58945, 0, 0, 0.490912,-99) , 
8, -2.32602, 1, 0, 0.509706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416167,-99) , 
0, 0.505709, 1, 0, 0.505069,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0499681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485169,-99) , 
6, -951.286, 0, 0, 0.506593,-99) , 
8, -4.33387, 1, 0, 0.511561,-99) , 
NN(
0, 
0, 
-1, 0.00191959, 1, -1, 0.467826,-99) , 
3, 3.58206, 1, 0, 0.499296,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0578193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464968,-99) , 
3, 5.64149, 1, 0, 0.53488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491627,-99) , 
3, 0.387978, 1, 0, 0.496772,-99) , 
3, 2.82246, 0, 0, 0.509303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414536,-99) , 
3, 8.20909, 1, 0, 0.503729,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0629063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498993, 0, 1, 0.543852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428147,-99) , 
9, -2.24303, 0, 0, 0.498434,-99) , 
0, 0.500133, 1, 0, 0.518101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467491,-99) , 
0, 0.49442, 1, 0, 0.494644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432575,-99) , 
9, 0.137926, 1, 0, 0.475421,-99) , 
0, 0.49714, 0, 0, 0.500292,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0690433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.556501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48729,-99) , 
7, 2.10886, 1, 0, 0.513909,-99) , 
7, 1.2989, 1, 0, 0.529314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601446,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.473562,-99) , 
7, -1.09683, 1, 0, 0.4854,-99) , 
8, -2.54087, 0, 0, 0.505774,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0652079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65837, 0, 1, 0.525834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485534,-99) , 
7, 1.85735, 1, 0, 0.519161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458685,-99) , 
7, 1.18995, 1, 0, 0.497111,-99) , 
NN(
0, 
0, 
-1, -0.0159037, 0, -1, 0.413937,-99) , 
7, 0.466432, 0, 0, 0.462612,-99) , 
0, 0.494282, 0, 0, 0.507362,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0476946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28864, 0, 1, 0.593032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424531,-99) , 
9, -1.60331, 1, 0, 0.516731,-99) , 
7, 0.00661211, 0, 0, 0.536743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437711,-99) , 
0, 0.504755, 1, 0, 0.498092,-99) , 
8, -1.04892, 0, 0, 0.503011,-99) , 
8, -3.27985, 1, 0, 0.511261,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0419415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441557,-99) , 
1, 0.00388765, 1, 0, 0.501572,-99) , 
8, -4.46249, 1, 0, 0.505996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418433,-99) , 
2, -0.203507, 0, 0, 0.500751,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0448551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.463192, 1, 1, 0.511524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445761,-99) , 
3, 7.04912, 1, 0, 0.506518,-99) , 
NN(
0, 
0, 
-1, 0.501901, 0, -1, 0.458551,-99) , 
0, 0.500948, 1, 0, 0.492784,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.063159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.14058, 0, 1, 0.558521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494048,-99) , 
9, -1.83696, 1, 0, 0.541426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499916,-99) , 
5, 0.00298031, 0, 0, 0.521306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469946,-99) , 
0, 0.503805, 0, 0, 0.475976,-99) , 
2, -0.0724437, 1, 0, 0.482814,-99) , 
7, -0.428042, 1, 0, 0.49111,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0485316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496189, 1, 1, 0.543302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48629,-99) , 
9, 0.986659, 1, 0, 0.524961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494981,-99) , 
9, -0.559379, 0, 0, 0.505754,-99) , 
NN(
0, 
0, 
-1, -2.5004, 0, -1, 0.472557,-99) , 
8, -2.83932, 1, 0, 0.491205,-99) , 
9, 0.137926, 0, 0, 0.500673,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0454006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472448,-99) , 
7, -0.713658, 0, 0, 0.52093,-99) , 
NN(
0, 
0, 
-1, -0.872722, 0, -1, 0.488704,-99) , 
7, 0.428639, 1, 0, 0.500386,-99) , 
0, 0.489521, 1, 0, 0.50281,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0400673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.717446, 1, 1, 0.522865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453452,-99) , 
8, -1.3559, 1, 0, 0.49972,-99) , 
0, 0.499996, 0, 0, 0.507631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408716,-99) , 
2, 0.207157, 1, 0, 0.502831,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0769412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499045, 1, 1, 0.532829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464933,-99) , 
6, -0.132019, 0, 0, 0.500147,-99) , 
6, -951.286, 1, 0, 0.511638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456791,-99) , 
0, 0.493056, 0, 0, 0.491386,-99) , 
NN(
0, 
0, 
-1, 0.501123, 0, -1, 0.423748,-99) , 
0, 0.497135, 1, 0, 0.451153,-99) , 
2, 0.0745067, 1, 0, 0.501462,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0498866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48109,-99) , 
8, -1.95764, 1, 0, 0.521484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475937,-99) , 
0, 0.496714, 1, 0, 0.491389,-99) , 
0, 0.500678, 0, 0, 0.500346,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.445176,-99) , 
0, 0.49143, 0, 0, 0.49597,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0311177);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499815,-99) , 
2, 0.0114886, 0, 0, 0.508503,-99) , 
NN(
0, 
0, 
-1, 2.90427, 0, -1, 0.455802,-99) , 
2, 0.12848, 1, 0, 0.50381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42788,-99) , 
3, 8.2051, 1, 0, 0.499226,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.043483);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0173346, 1, 1, 0.592793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443779,-99) , 
7, -0.297233, 0, 0, 0.495063,-99) , 
8, -4.39176, 1, 0, 0.500198,-99) , 
1, 0.00388765, 0, 0, 0.507644,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0538609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498094, 0, 1, 0.589358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465717,-99) , 
2, -0.0229138, 0, 0, 0.547121,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0141768, 1, 1, 0.513359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447242,-99) , 
7, 0.447349, 1, 0, 0.475504,-99) , 
8, -2.3453, 0, 0, 0.492509,-99) , 
7, -0.713192, 1, 0, 0.497611,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0510986);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478036,-99) , 
8, -3.57633, 0, 0, 0.516424,-99) , 
NN(
0, 
0, 
-1, -1.31079, 0, -1, 0.481268,-99) , 
7, -0.151428, 1, 0, 0.488891,-99) , 
8, -1.08366, 0, 0, 0.492485,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0632585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442384,-99) , 
5, 0.00752658, 1, 0, 0.517958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361288,-99) , 
7, -1.82221, 0, 0, 0.51249,-99) , 
NN(
0, 
0, 
-1, 0.670706, 1, -1, 0.465928,-99) , 
9, 0.234465, 1, 0, 0.499948,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0434653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487715,-99) , 
9, -2.54893, 0, 0, 0.551823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571306,-99) , 
NN(
0, 
0, 
-1, 0.0556148, 1, -1, 0.484755,-99) , 
0, 0.50571, 0, 0, 0.488578,-99) , 
8, -4.07399, 1, 0, 0.494139,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0405031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493835,-99) , 
8, -2.91734, 1, 0, 0.50089,-99) , 
5, 0.00941508, 0, 0, 0.50724,-99) , 
NN(
0, 
0, 
-1, -2.70392, 1, -1, 0.476217,-99) , 
9, -0.819578, 0, 0, 0.495488,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.050346);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498069, 1, 1, 0.548879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494872,-99) , 
2, -0.0518083, 1, 0, 0.503716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430418,-99) , 
8, -3.19828, 1, 0, 0.457002,-99) , 
0, 0.494283, 0, 0, 0.494507,-99) , 
9, 0.610822, 0, 0, 0.503468,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0579206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.670014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48485,-99) , 
6, -951.286, 0, 0, 0.575088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46388,-99) , 
9, -1.17796, 0, 0, 0.512408,-99) , 
7, -0.290332, 1, 0, 0.516857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469041,-99) , 
0, 0.499996, 0, 0, 0.504453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420974,-99) , 
2, 0.0469306, 1, 0, 0.483515,-99) , 
8, -3.82283, 0, 0, 0.512092,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0592182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490754,-99) , 
0, 0.500948, 1, 0, 0.521716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473718,-99) , 
0, 0.5038, 0, 0, 0.483692,-99) , 
2, 0.0425399, 1, 0, 0.512758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430637,-99) , 
2, -0.19705, 0, 0, 0.507794,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.062737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.78751, 0, 1, 0.598803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469923,-99) , 
0, 0.498816, 0, 0, 0.487289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408687,-99) , 
0, 0.505709, 1, 0, 0.483285,-99) , 
7, -0.998354, 1, 0, 0.489611,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.049848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481607,-99) , 
0, 0.498092, 0, 0, 0.523818,-99) , 
7, 0.441247, 1, 0, 0.56509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479528,-99) , 
0, 0.498091, 1, 0, 0.494617,-99) , 
7, 1.85735, 0, 0, 0.502013,-99) , 
1, 0.00388765, 0, 0, 0.507497,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0589349);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.715085, 1, 1, 0.527533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449006,-99) , 
7, 0.158089, 1, 0, 0.472733,-99) , 
0, 0.503805, 1, 0, 0.521588,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0661639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.326239, 1, 1, 0.526402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420049,-99) , 
7, -0.55754, 1, 0, 0.475307,-99) , 
9, -1.51469, 0, 0, 0.516664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489675,-99) , 
8, -2.89573, 1, 0, 0.511887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440102,-99) , 
3, 2.43805, 0, 0, 0.455225,-99) , 
3, 3.59089, 0, 0, 0.470011,-99) , 
0, 0.496187, 0, 0, 0.50122,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0696668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0769987, 0, 1, 0.526389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468905,-99) , 
7, 1.43478, 1, 0, 0.487886,-99) , 
8, -2.32602, 1, 0, 0.510633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493539,-99) , 
7, 1.18385, 1, 0, 0.534964,-99) , 
NN(
0, 
0, 
-1, -3.49821, 0, -1, 0.408584,-99) , 
8, -2.77333, 0, 0, 0.474058,-99) , 
0, 0.494283, 0, 0, 0.503284,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0543584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449665,-99) , 
0, 0.49999, 1, 0, 0.516924,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.479872,-99) , 
2, 0.0954584, 0, 0, 0.484284,-99) , 
NN(
0, 
0, 
-1, -2.50282, 1, -1, 0.433224,-99) , 
7, -0.998736, 0, 0, 0.480888,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0631498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497817, 0, 1, 0.517362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432234,-99) , 
0, 0.505163, 0, 0, 0.468934,-99) , 
0, 0.501898, 1, 0, 0.507604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437417,-99) , 
0, 0.496199, 0, 0, 0.481433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355964,-99) , 
8, -3.85933, 0, 0, 0.458986,-99) , 
2, -0.0648558, 0, 0, 0.499075,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0539179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465901,-99) , 
0, 0.496187, 0, 0, 0.559365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490785,-99) , 
3, 3.59448, 0, 0, 0.501359,-99) , 
NN(
0, 
0, 
-1, -3.41974, 0, -1, 0.461339,-99) , 
0, 0.50095, 1, 0, 0.490019,-99) , 
8, -4.11922, 1, 0, 0.495613,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0608028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000677622, 0, 1, 0.533686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483087,-99) , 
6, -951.286, 1, 0, 0.495502,-99) , 
3, 2.22593, 0, 0, 0.508092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450351,-99) , 
0, 0.501267, 1, 0, 0.495212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392036,-99) , 
2, 0.0168605, 0, 0, 0.433676,-99) , 
0, 0.498099, 0, 0, 0.464768,-99) , 
3, 4.14964, 1, 0, 0.498868,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0564104);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480157,-99) , 
0, 0.494292, 0, 0, 0.544166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448646,-99) , 
7, -0.0287514, 1, 0, 0.529864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486544,-99) , 
0, 0.5019, 0, 0, 0.495095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367787,-99) , 
7, -0.119311, 0, 0, 0.490088,-99) , 
9, -1.30679, 1, 0, 0.49882,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0661147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494143, 0, 1, 0.539952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491284,-99) , 
0, 0.503252, 0, 0, 0.50216,-99) , 
0, 0.496182, 1, 0, 0.513748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429805,-99) , 
8, -3.19162, 1, 0, 0.507475,-99) , 
NN(
0, 
0, 
-1, -1.32916, 1, -1, 0.423117,-99) , 
6, -951.286, 0, 0, 0.474883,-99) , 
8, -3.01894, 0, 0, 0.499844,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0586752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455098,-99) , 
3, 6.89752, 1, 0, 0.512458,-99) , 
NN(
0, 
0, 
-1, -1.66157, 1, -1, 0.393029,-99) , 
9, -2.48152, 0, 0, 0.505398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414343,-99) , 
8, -0.967503, 1, 0, 0.498866,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.054164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.147952, 0, 1, 0.582315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484274,-99) , 
3, 3.49386, 1, 0, 0.551749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486532,-99) , 
6, -951.286, 0, 0, 0.516023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422802,-99) , 
7, 0.53453, 1, 0, 0.486159,-99) , 
9, -0.587125, 0, 0, 0.502559,-99) , 
0, 0.493331, 1, 0, 0.50898,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0897577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.40341, 1, 1, 0.559507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466986,-99) , 
7, 1.2323, 1, 0, 0.507877,-99) , 
7, 1.80206, 0, 0, 0.52501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463001,-99) , 
7, -0.699481, 1, 0, 0.474083,-99) , 
NN(
0, 
0, 
-1, 0.184974, 1, -1, 0.40213,-99) , 
1, 0.00309911, 1, 0, 0.464366,-99) , 
7, 0.714425, 0, 0, 0.496291,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0607017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491307, 0, 1, 0.658805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471226,-99) , 
0, 0.490334, 0, 0, 0.569385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434632,-99) , 
9, -1.49932, 0, 0, 0.511001,-99) , 
NN(
0, 
0, 
-1, -1.68555, 1, -1, 0.459678,-99) , 
7, -0.425719, 0, 0, 0.502842,-99) , 
0, 0.492378, 1, 0, 0.509559,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0611377);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.410937, 1, 1, 0.56937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496249,-99) , 
7, 1.28465, 0, 0, 0.509931,-99) , 
NN(
0, 
0, 
-1, 0.499116, 1, -1, 0.470307,-99) , 
0, 0.50181, 0, 0, 0.479452,-99) , 
0, 0.492379, 1, 0, 0.48824,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0571053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499433, 0, 1, 0.563013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454298,-99) , 
7, 1.85759, 1, 0, 0.495273,-99) , 
0, 0.498816, 0, 0, 0.504684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452455,-99) , 
3, 5.23743, 0, 0, 0.464735,-99) , 
1, 0.00388765, 0, 0, 0.474141,-99) , 
0, 0.499994, 1, 0, 0.493964,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0674224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.5937, 0, 1, 0.554733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433068,-99) , 
0, 0.493334, 0, 0, 0.534311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482167,-99) , 
7, 0.755859, 1, 0, 0.496387,-99) , 
NN(
0, 
0, 
-1, -3.47394, 1, -1, 0.428857,-99) , 
9, -1.19673, 0, 0, 0.489505,-99) , 
7, -0.142004, 1, 0, 0.498323,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0511345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4853,-99) , 
6, -951.286, 0, 0, 0.503342,-99) , 
0, 0.491426, 1, 0, 0.508185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416249,-99) , 
2, -0.0372881, 0, 0, 0.487179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360311,-99) , 
7, -0.0842422, 1, 0, 0.466002,-99) , 
9, -1.35723, 0, 0, 0.498453,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0945974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447534,-99) , 
9, -2.21415, 0, 0, 0.539121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438118,-99) , 
7, 1.38981, 0, 0, 0.491015,-99) , 
9, -0.247321, 1, 0, 0.518423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495153,-99) , 
8, -1.83907, 0, 0, 0.524053,-99) , 
NN(
0, 
0, 
-1, -1.27516, 1, -1, 0.429701,-99) , 
7, 0.999951, 0, 0, 0.468906,-99) , 
0, 0.49619, 0, 0, 0.501415,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.064996);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483602,-99) , 
8, -2.34466, 1, 0, 0.505373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401466,-99) , 
7, -1.26651, 1, 0, 0.447131,-99) , 
9, -1.84159, 0, 0, 0.498071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409894,-99) , 
0, 0.505708, 1, 0, 0.493693,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0549689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495711,-99) , 
2, 0.000281896, 1, 0, 0.566933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482085,-99) , 
0, 0.505891, 0, 0, 0.48581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390277,-99) , 
0, 0.489524, 0, 0, 0.482577,-99) , 
1, 0.00388765, 0, 0, 0.489696,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0358393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41405, 0, 1, 0.510961,-99) , 
NN(
0, 
0, 
-1, 3.35179, 1, -1, 0.47991,-99) , 
8, -2.14628, 1, 0, 0.499742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414139,-99) , 
2, 0.20868, 1, 0, 0.495375,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0563981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495261,-99) , 
9, -0.460081, 0, 0, 0.582223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467919,-99) , 
8, -2.90913, 0, 0, 0.494196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400525,-99) , 
9, -1.00641, 1, 0, 0.431198,-99) , 
0, 0.503805, 1, 0, 0.48738,-99) , 
1, -0.00487853, 1, 0, 0.493067,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0497333);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.494273, 1, 1, 0.528019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489542,-99) , 
8, -2.32415, 0, 0, 0.497833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421652,-99) , 
9, -0.288682, 1, 0, 0.4915,-99) , 
7, 1.00067, 0, 0, 0.507316,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0588761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486546,-99) , 
6, -951.286, 1, 0, 0.514223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474987,-99) , 
0, 0.495235, 1, 0, 0.487022,-99) , 
9, 0.179303, 0, 0, 0.494857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410562,-99) , 
8, -4.75895, 0, 0, 0.491584,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.06424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494939,-99) , 
3, 3.49386, 1, 0, 0.550764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421657,-99) , 
8, -3.71257, 1, 0, 0.468784,-99) , 
0, 0.502849, 1, 0, 0.536363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486034,-99) , 
9, -0.575146, 1, 0, 0.494318,-99) , 
NN(
0, 
0, 
-1, 0.000116515, 1, -1, 0.418325,-99) , 
9, -0.981366, 0, 0, 0.488192,-99) , 
8, -3.10406, 1, 0, 0.502542,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0613244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482821,-99) , 
0, 0.501112, 0, 0, 0.518611,-99) , 
0, 0.497133, 1, 0, 0.540069,-99) , 
NN(
NN(
0, 
0, 
-1, -4.85804, 0, 1, 0.554241,-99) , 
NN(
0, 
0, 
-1, 0.914735, 1, -1, 0.481014,-99) , 
8, -4.38191, 1, 0, 0.48648,-99) , 
9, 0.0939794, 0, 0, 0.502394,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0631923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484079,-99) , 
7, 0.965482, 1, 0, 0.506185,-99) , 
9, 0.642396, 0, 0, 0.516972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417958,-99) , 
9, -2.435, 0, 0, 0.48788,-99) , 
NN(
0, 
0, 
-1, 0.57587, 0, -1, 0.427162,-99) , 
9, -0.864863, 1, 0, 0.470462,-99) , 
8, -2.69413, 0, 0, 0.494948,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0529534);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392348,-99) , 
9, -0.863968, 0, 0, 0.513245,-99) , 
NN(
0, 
0, 
-1, -1.07348, 1, -1, 0.47838,-99) , 
7, 0.429213, 0, 0, 0.50003,-99) , 
NN(
0, 
0, 
-1, 0.506254, 1, -1, 0.441358,-99) , 
0, 0.504758, 1, 0, 0.495505,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0613367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0754263, 1, 1, 0.528632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483813,-99) , 
3, 4.16874, 0, 0, 0.49862,-99) , 
0, 0.499044, 1, 0, 0.515686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449929,-99) , 
9, 0.615228, 1, 0, 0.50474,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0617323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.011328, 1, 1, 0.555912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487299,-99) , 
1, 0.0019967, 0, 0, 0.501388,-99) , 
0, 0.498139, 1, 0, 0.509815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471925,-99) , 
9, -1.51165, 1, 0, 0.481784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401647,-99) , 
9, -2.31054, 0, 0, 0.47633,-99) , 
0, 0.497142, 0, 0, 0.495915,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0521095);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496592,-99) , 
0, 0.503624, 1, 0, 0.539051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466883,-99) , 
9, -2.17435, 0, 0, 0.532089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476744,-99) , 
0, 0.49587, 0, 0, 0.493427,-99) , 
8, -4.44017, 1, 0, 0.498458,-99) , 
0, 0.499996, 0, 0, 0.509601,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0529915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497142, 0, 1, 0.588758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486283,-99) , 
9, 0.536349, 1, 0, 0.511819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412536,-99) , 
9, -1.95258, 0, 0, 0.508951,-99) , 
8, -3.99302, 1, 0, 0.516849,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0595019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497412, 1, 1, 0.522623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45802,-99) , 
3, 2.20358, 0, 0, 0.48438,-99) , 
0, 0.493331, 0, 0, 0.516704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477532,-99) , 
0, 0.495236, 1, 0, 0.495234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394965,-99) , 
8, -4.15441, 0, 0, 0.485101,-99) , 
3, 3.49386, 1, 0, 0.507405,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0649193);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493234,-99) , 
7, -1.15255, 1, 0, 0.585602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450182,-99) , 
7, 1.03811, 0, 0, 0.520274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453006,-99) , 
8, -2.74323, 1, 0, 0.485218,-99) , 
8, -2.05242, 0, 0, 0.497193,-99) , 
9, -2.1591, 1, 0, 0.503185,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0467664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00263974, 0, 1, 0.531872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486865,-99) , 
1, -0.0066626, 1, 0, 0.491798,-99) , 
8, -3.45218, 1, 0, 0.500103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422,-99) , 
2, 0.199574, 1, 0, 0.495757,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0871247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.795699, 1, 1, 0.567795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393576,-99) , 
7, 0.101672, 1, 0, 0.507483,-99) , 
7, 0.428102, 0, 0, 0.543364,-99) , 
NN(
NN(
0, 
0, 
-1, 0.822665, 1, 1, 0.52583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431339,-99) , 
7, -0.0577652, 1, 0, 0.483212,-99) , 
8, -3.00611, 0, 0, 0.510736,-99) , 
0, 0.50095, 0, 0, 0.519373,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.063041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69856, 0, 1, 0.51972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466483,-99) , 
8, -1.67492, 1, 0, 0.486137,-99) , 
7, 1.60227, 1, 0, 0.505151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454973,-99) , 
9, -1.78585, 0, 0, 0.491529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360163,-99) , 
7, 0.546134, 1, 0, 0.470219,-99) , 
9, -0.653881, 0, 0, 0.489796,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.052526);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478358,-99) , 
0, 0.492695, 0, 0, 0.529077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449593,-99) , 
9, -1.59489, 0, 0, 0.490034,-99) , 
0, 0.495234, 1, 0, 0.499576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4367,-99) , 
9, 0.698869, 1, 0, 0.460887,-99) , 
8, -1.68018, 1, 0, 0.491443,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0678292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495609,-99) , 
9, -0.81957, 0, 0, 0.561922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412496,-99) , 
0, 0.497279, 0, 0, 0.489103,-99) , 
0, 0.49619, 1, 0, 0.51266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470289,-99) , 
8, -1.92822, 0, 0, 0.478435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433872,-99) , 
7, 1.85621, 1, 0, 0.471348,-99) , 
1, 0.00145893, 0, 0, 0.482416,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0642798);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563812,-99) , 
NN(
NN(
0, 
0, 
-1, 5.96427, 0, 1, 0.519163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465962,-99) , 
7, -0.794579, 1, 0, 0.472337,-99) , 
0, 0.499042, 0, 0, 0.491477,-99) , 
7, 2.14294, 0, 0, 0.499373,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0371994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484876,-99) , 
9, -2.61355, 1, 0, 0.559041,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0285098, 1, 1, 0.545549,-99) , 
NN(
0, 
0, 
-1, -3.29201, 0, -1, 0.48818,-99) , 
0, 0.492377, 1, 0, 0.493894,-99) , 
7, -0.998804, 1, 0, 0.497681,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0543587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.556365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453626,-99) , 
0, 0.492382, 0, 0, 0.543029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464028,-99) , 
9, -0.0126223, 1, 0, 0.493313,-99) , 
9, 0.773536, 0, 0, 0.500668,-99) , 
7, -0.141867, 1, 0, 0.508945,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0582881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49634,-99) , 
0, 0.493392, 1, 0, 0.519997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414098,-99) , 
0, 0.489662, 0, 0, 0.507317,-99) , 
NN(
0, 
0, 
-1, 0.0110205, 1, -1, 0.472236,-99) , 
0, 0.49619, 1, 0, 0.483453,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0736817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.33741, 0, 1, 0.585859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443812,-99) , 
2, -0.0498117, 0, 0, 0.502429,-99) , 
8, -2.15375, 1, 0, 0.522014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490903,-99) , 
0, 0.50326, 1, 0, 0.535083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47333,-99) , 
3, 6.8905, 0, 0, 0.479935,-99) , 
0, 0.5019, 0, 0, 0.490744,-99) , 
9, -0.257977, 0, 0, 0.503622,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0721242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.98096, 0, 1, 0.60412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383009,-99) , 
9, -2.39135, 1, 0, 0.494028,-99) , 
7, -0.917248, 0, 0, 0.543237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490011,-99) , 
6, -951.286, 1, 0, 0.505236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470495,-99) , 
0, 0.50598, 0, 0, 0.474929,-99) , 
0, 0.496187, 1, 0, 0.484621,-99) , 
7, -0.42758, 1, 0, 0.492584,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0659967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470826,-99) , 
7, 0.803642, 1, 0, 0.510561,-99) , 
7, 1.4367, 0, 0, 0.516486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537543,-99) , 
NN(
0, 
0, 
-1, -1.73902, 0, -1, 0.462701,-99) , 
0, 0.49522, 1, 0, 0.480458,-99) , 
8, -2.06583, 1, 0, 0.504679,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0770894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.03504, 0, 1, 0.588661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431006,-99) , 
7, 0.798631, 0, 0, 0.50482,-99) , 
9, -1.01211, 1, 0, 0.527814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497161,-99) , 
0, 0.500537, 0, 0, 0.524843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470591,-99) , 
9, -2.22312, 1, 0, 0.477227,-99) , 
8, -1.743, 0, 0, 0.487201,-99) , 
0, 0.496187, 1, 0, 0.499612,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.046823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.528167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457076,-99) , 
8, -2.0587, 1, 0, 0.487658,-99) , 
0, 0.498816, 0, 0, 0.503916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427529,-99) , 
0, 0.505709, 1, 0, 0.499828,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0677302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483739,-99) , 
0, 0.49504, 0, 0, 0.544402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485437,-99) , 
3, 5.60472, 0, 0, 0.494188,-99) , 
0, 0.497458, 1, 0, 0.508512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557801,-99) , 
NN(
0, 
0, 
-1, 0.0123252, 1, -1, 0.446495,-99) , 
1, -0.00197315, 1, 0, 0.468101,-99) , 
0, 0.494284, 0, 0, 0.500472,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0590418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.48105, 0, 1, 0.524454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467995,-99) , 
8, -3.94469, 1, 0, 0.499062,-99) , 
8, -3.45518, 0, 0, 0.51825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4414,-99) , 
9, 0.879764, 1, 0, 0.509719,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0423368);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499045, 0, 1, 0.580814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531583,-99) , 
NN(
0, 
0, 
-1, 6.55254, 1, -1, 0.485766,-99) , 
8, -1.31401, 0, 0, 0.491283,-99) , 
1, -0.00408005, 1, 0, 0.497992,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_12_25_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_12_25_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_12_25_noPCts *ReadBDT_maker_LHC19c2b_12_25_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_12_25_noPCts(theInpVar);
  }
}
