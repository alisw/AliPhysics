#include "LHC19c2b_TMVAClassification_BDT_8_12_noNsigma.class.h"

double ReadBDT_LHC19c2b_8_12_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_8_12_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.57237813058693);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.768006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429791,-99) , 
4, 0.999905, 0, 0, 0.744559,-99) , 
NN(
0, 
0, 
-1, -0.922883, 0, -1, 0.332985,-99) , 
5, -0.768697, 0, 0, 0.644577,-99) , 
NN(
0, 
0, 
-1, 0.782281, 1, -1, 0.187274,-99) , 
5, 0.61902, 1, 0, 0.498369,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.435446);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.714254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486104,-99) , 
5, 0.492709, 1, 0, 0.669038,-99) , 
NN(
0, 
0, 
-1, -0.945552, 0, -1, 0.362724,-99) , 
5, -0.836711, 0, 0, 0.612229,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.185887,-99) , 
5, 0.714289, 1, 0, 0.50367,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.34413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.383842, 1, 1, 0.660046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335826,-99) , 
5, -0.922239, 0, 0, 0.446149,-99) , 
5, -0.673463, 0, 0, 0.596781,-99) , 
NN(
0, 
0, 
-1, 0.999525, 0, -1, 0.228997,-99) , 
5, 0.714254, 1, 0, 0.504514,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.274861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472873,-99) , 
5, 0.390931, 1, 0, 0.593888,-99) , 
NN(
0, 
0, 
-1, -0.967175, 0, -1, 0.442393,-99) , 
5, -0.655345, 0, 0, 0.551035,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.198404,-99) , 
5, 0.809437, 1, 0, 0.490658,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.223955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.218612, 1, 1, 0.596533,-99) , 
NN(
0, 
0, 
-1, -0.0918156, 0, -1, 0.47191,-99) , 
5, -0.569184, 0, 0, 0.556234,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.212661,-99) , 
5, 0.809437, 1, 0, 0.498565,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.223761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999998, 0, 1, 0.579297,-99) , 
NN(
0, 
0, 
-1, 0.8092, 1, -1, 0.400368,-99) , 
4, 0.999977, 0, 0, 0.528664,-99) , 
NN(
0, 
0, 
-1, 0.998164, 0, -1, 0.129321,-99) , 
4, 0.999524, 0, 0, 0.493712,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.192556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465108,-99) , 
4, 0.999977, 0, 0, 0.541794,-99) , 
NN(
0, 
0, 
-1, 0.891176, 1, -1, 0.333372,-99) , 
5, 0.809526, 1, 0, 0.518491,-99) , 
NN(
0, 
0, 
-1, 4.55086, 1, -1, 0.140558,-99) , 
4, 0.999524, 0, 0, 0.48591,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.175551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463518,-99) , 
5, -0.569173, 0, 0, 0.530658,-99) , 
NN(
0, 
0, 
-1, 0.86387, 1, -1, 0.356778,-99) , 
5, 0.809438, 1, 0, 0.510994,-99) , 
NN(
0, 
0, 
-1, 4.51103, 1, -1, 0.169976,-99) , 
4, 0.999524, 0, 0, 0.482622,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.12385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523991, 0, 1, 0.6693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40171,-99) , 
5, 0.714205, 1, 0, 0.4846,-99) , 
1, 0.00592662, 0, 0, 0.502479,-99) , 
NN(
0, 
0, 
-1, 0.998164, 0, -1, 0.179443,-99) , 
4, 0.999524, 0, 0, 0.475594,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.163472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47035,-99) , 
5, -0.492201, 0, 0, 0.523013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40608,-99) , 
1, -0.00140935, 1, 0, 0.43516,-99) , 
5, 0.332985, 1, 0, 0.488391,-99) , 
NN(
0, 
0, 
-1, 4.30389, 1, -1, 0.18659,-99) , 
4, 0.999524, 0, 0, 0.46411,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.114684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714415, 0, 1, 0.627853,-99) , 
NN(
0, 
0, 
-1, 0.904671, 1, -1, 0.479218,-99) , 
1, 0.00458981, 0, 0, 0.500215,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.196684,-99) , 
4, 0.999524, 0, 0, 0.476169,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.127122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495355,-99) , 
5, -0.682583, 0, 0, 0.548932,-99) , 
NN(
0, 
0, 
-1, 0.87269, 1, -1, 0.468261,-99) , 
5, 0.3331, 1, 0, 0.516806,-99) , 
NN(
0, 
0, 
-1, 4.51103, 1, -1, 0.214969,-99) , 
4, 0.999524, 0, 0, 0.493184,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.100777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523991, 0, 1, 0.648311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363614,-99) , 
5, 0.904761, 1, 0, 0.504756,-99) , 
1, 0.00592662, 0, 0, 0.518972,-99) , 
NN(
0, 
0, 
-1, 4.4993, 1, -1, 0.213334,-99) , 
4, 0.999524, 0, 0, 0.495664,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.117809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433512,-99) , 
5, -0.904815, 0, 0, 0.564824,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.473271,-99) , 
1, -0.00178541, 1, 0, 0.500873,-99) , 
NN(
0, 
0, 
-1, 0.997325, 0, -1, 0.162954,-99) , 
4, 0.999048, 0, 0, 0.482929,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.12496);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406407,-99) , 
2, -0.0918156, 0, 0, 0.537735,-99) , 
NN(
0, 
0, 
-1, 0.890822, 1, -1, 0.469472,-99) , 
5, 0.237882, 1, 0, 0.507407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.171418,-99) , 
4, 0.999048, 0, 0, 0.489865,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0616223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498088, 1, 1, 0.637529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369622,-99) , 
5, 0.904762, 1, 0, 0.494508,-99) , 
1, -0.00808413, 1, 0, 0.50244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.18499,-99) , 
4, 0.999048, 0, 0, 0.485966,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.109696);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472892,-99) , 
4, 0.999991, 0, 0, 0.515295,-99) , 
NN(
0, 
0, 
-1, 0.809357, 1, -1, 0.420462,-99) , 
4, 0.999819, 0, 0, 0.508112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.194071,-99) , 
4, 0.999048, 0, 0, 0.491717,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.077716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437878,-99) , 
5, -0.904736, 0, 0, 0.507315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357584,-99) , 
3, 8.52364, 1, 0, 0.502086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.192738,-99) , 
4, 0.999048, 0, 0, 0.486354,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.112938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492661,-99) , 
1, 0.00328721, 0, 0, 0.519188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434312,-99) , 
1, 0.00226237, 0, 0, 0.464588,-99) , 
0, 0.499042, 1, 0, 0.496074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.182317,-99) , 
4, 0.999048, 0, 0, 0.481132,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0914033);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386773,-99) , 
4, 0.999728, 0, 0, 0.520704,-99) , 
NN(
0, 
0, 
-1, -0.904734, 0, -1, 0.467187,-99) , 
0, 0.499043, 1, 0, 0.498082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.147814,-99) , 
4, 0.998572, 0, 0, 0.485262,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0695997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435368,-99) , 
5, -0.909296, 0, 0, 0.505289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377546,-99) , 
5, 0.904761, 1, 0, 0.498906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.159473,-99) , 
4, 0.998572, 0, 0, 0.486814,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.082924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428837, 0, 1, 0.590654,-99) , 
NN(
0, 
0, 
-1, -0.192297, 0, -1, 0.480634,-99) , 
1, 0.00458981, 0, 0, 0.49549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.213237,-99) , 
4, 0.999048, 0, 0, 0.481939,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0688254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523991, 0, 1, 0.590819,-99) , 
NN(
0, 
0, 
-1, 8.32102, 1, -1, 0.486875,-99) , 
1, 0.00458981, 0, 0, 0.500523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.158499,-99) , 
4, 0.998572, 0, 0, 0.488664,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0755409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.524042, 0, 1, 0.598431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453227,-99) , 
0, 0.501898, 1, 0, 0.500128,-99) , 
1, 0.00592662, 0, 0, 0.509349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.236354,-99) , 
4, 0.999048, 0, 0, 0.496097,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0500776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414042,-99) , 
4, 0.999729, 0, 0, 0.501888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381248,-99) , 
2, -0.202559, 0, 0, 0.496923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.18203,-99) , 
4, 0.998572, 0, 0, 0.486609,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0686856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.524321, 0, 1, 0.564065,-99) , 
NN(
0, 
0, 
-1, 8.28318, 1, -1, 0.480948,-99) , 
1, 0.00458981, 0, 0, 0.492044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.194956,-99) , 
4, 0.998572, 0, 0, 0.482251,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.080408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619315, 0, 1, 0.658469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455851,-99) , 
5, -0.428713, 0, 0, 0.490279,-99) , 
1, -0.00621516, 1, 0, 0.504714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.18102,-99) , 
4, 0.998573, 0, 0, 0.493713,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.101409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479976,-99) , 
5, 0.714032, 1, 0, 0.557612,-99) , 
NN(
0, 
0, 
-1, 0.999729, 0, -1, 0.467583,-99) , 
1, -0.00178541, 1, 0, 0.494772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.191481,-99) , 
4, 0.998574, 0, 0, 0.484755,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0695504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471006,-99) , 
2, -0.075619, 0, 0, 0.512168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3968,-99) , 
5, 0.904763, 1, 0, 0.506861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247864,-99) , 
4, 0.999048, 0, 0, 0.495479,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0410707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451758,-99) , 
5, -0.904761, 0, 0, 0.497492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367472,-99) , 
3, 8.52364, 1, 0, 0.493001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.222406,-99) , 
4, 0.998572, 0, 0, 0.483976,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0578086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47735,-99) , 
0, 0.498089, 1, 0, 0.4938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380382,-99) , 
3, 8.52364, 1, 0, 0.489822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.220987,-99) , 
4, 0.998572, 0, 0, 0.481114,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0616663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48289,-99) , 
5, -0.482994, 0, 0, 0.504255,-99) , 
NN(
0, 
0, 
-1, 0.927452, 1, -1, 0.446253,-99) , 
5, 0.809523, 1, 0, 0.497507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261442,-99) , 
4, 0.999048, 0, 0, 0.486995,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0788273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498151,-99) , 
5, -0.523886, 0, 0, 0.556267,-99) , 
NN(
0, 
0, 
-1, 8.32102, 1, -1, 0.47509,-99) , 
1, 0.00328721, 0, 0, 0.491246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224395,-99) , 
4, 0.998572, 0, 0, 0.482672,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0373934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00592662, 0, 1, 0.506537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384725,-99) , 
3, 8.54447, 1, 0, 0.502259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216068,-99) , 
4, 0.998572, 0, 0, 0.493542,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0791663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397757,-99) , 
4, 0.999955, 0, 0, 0.515907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466023,-99) , 
1, -0.00152122, 1, 0, 0.48355,-99) , 
5, 0.0475017, 1, 0, 0.499093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267236,-99) , 
4, 0.999048, 0, 0, 0.489486,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.039554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495135,-99) , 
3, 0.489486, 1, 0, 0.499425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378408,-99) , 
3, 8.52364, 1, 0, 0.495321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257407,-99) , 
4, 0.998572, 0, 0, 0.487663,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0428952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411198,-99) , 
2, 0.188435, 1, 0, 0.50344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401857,-99) , 
2, -0.211907, 0, 0, 0.499596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272756,-99) , 
4, 0.998572, 0, 0, 0.492408,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0438166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593131,-99) , 
NN(
0, 
0, 
-1, 0.225425, 1, -1, 0.488474,-99) , 
1, -0.00964224, 1, 0, 0.49256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.246703,-99) , 
4, 0.998572, 0, 0, 0.485158,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0470792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445307,-99) , 
5, 0.904475, 1, 0, 0.505837,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.462351,-99) , 
3, 4.18549, 1, 0, 0.496216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268918,-99) , 
4, 0.998572, 0, 0, 0.489132,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0492378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480423,-99) , 
4, 0.999989, 0, 0, 0.497998,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.424361,-99) , 
4, 0.999773, 0, 0, 0.493606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292431,-99) , 
4, 0.999048, 0, 0, 0.485129,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0320129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467927,-99) , 
2, -0.0805201, 0, 0, 0.497248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42228,-99) , 
4, 0.999661, 0, 0, 0.493611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263247,-99) , 
4, 0.998572, 0, 0, 0.486672,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0535672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428837, 0, 1, 0.570023,-99) , 
NN(
0, 
0, 
-1, -0.333358, 0, -1, 0.48449,-99) , 
1, 0.00592662, 0, 0, 0.492338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271253,-99) , 
4, 0.998572, 0, 0, 0.485708,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0530736);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.620028, 0, 1, 0.624174,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.480395,-99) , 
1, -0.00693979, 1, 0, 0.489892,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0302778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00805734, 0, 1, 0.505974,-99) , 
NN(
0, 
0, 
-1, 0.808999, 1, -1, 0.446338,-99) , 
4, 0.999728, 0, 0, 0.502475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27403,-99) , 
4, 0.998572, 0, 0, 0.495783,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0416859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494406,-99) , 
1, -0.00796446, 1, 0, 0.500595,-99) , 
NN(
0, 
0, 
-1, -0.959184, 0, -1, 0.472175,-99) , 
5, -0.714291, 0, 0, 0.494214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298425,-99) , 
4, 0.998572, 0, 0, 0.488148,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0415506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451099,-99) , 
2, -0.179169, 0, 0, 0.50784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415663,-99) , 
2, 0.225223, 1, 0, 0.504918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295947,-99) , 
4, 0.998573, 0, 0, 0.498838,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0434099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492877,-99) , 
5, -0.428598, 0, 0, 0.508175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416175,-99) , 
2, 0.223825, 1, 0, 0.505481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327588,-99) , 
4, 0.999048, 0, 0, 0.498141,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0434554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447055,-99) , 
5, 0.918281, 1, 0, 0.509512,-99) , 
NN(
0, 
0, 
-1, -0.972765, 0, -1, 0.481963,-99) , 
5, -0.714276, 0, 0, 0.503209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344467,-99) , 
3, 8.79022, 1, 0, 0.496935,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0286844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464949,-99) , 
0, 0.504755, 1, 0, 0.50218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424638,-99) , 
3, 8.52364, 1, 0, 0.499465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317136,-99) , 
4, 0.998572, 0, 0, 0.494121,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0271371);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.486435,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0356471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619117, 1, 1, 0.558834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493743,-99) , 
1, -0.00985878, 1, 0, 0.497521,-99) , 
1, 0.00751948, 0, 0, 0.501453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348848,-99) , 
3, 8.80985, 1, 0, 0.495816,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0344749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.74665, 0, 1, 0.509347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433098,-99) , 
5, -0.333314, 0, 0, 0.480685,-99) , 
3, 4.13183, 1, 0, 0.503032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319551,-99) , 
4, 0.998572, 0, 0, 0.497567,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0424267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49393,-99) , 
1, -0.00808413, 1, 0, 0.499905,-99) , 
NN(
0, 
0, 
-1, 0.5058, 0, -1, 0.463161,-99) , 
0, 0.502852, 1, 0, 0.494648,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.385269,-99) , 
4, 0.999524, 0, 0, 0.487855,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0240898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.620123, 0, 1, 0.583359,-99) , 
NN(
0, 
0, 
-1, 0.999456, 0, -1, 0.498633,-99) , 
1, -0.00765204, 1, 0, 0.503673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289854,-99) , 
4, 0.998573, 0, 0, 0.497592,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0434675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428875, 0, 1, 0.560385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476003,-99) , 
5, -0.333358, 0, 0, 0.495973,-99) , 
1, 0.00592662, 0, 0, 0.501964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351595,-99) , 
3, 8.93425, 1, 0, 0.496538,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0355559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493072,-99) , 
5, 0.238103, 1, 0, 0.504607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430459,-99) , 
4, 0.999458, 0, 0, 0.502423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30598,-99) , 
4, 0.998575, 0, 0, 0.496674,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0316071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714384, 0, 1, 0.556679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445042,-99) , 
4, 0.999592, 0, 0, 0.498727,-99) , 
1, 0.00458981, 0, 0, 0.506386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312691,-99) , 
4, 0.998572, 0, 0, 0.500821,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0252126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714345, 0, 1, 0.541191,-99) , 
NN(
0, 
0, 
-1, 7.95402, 1, -1, 0.495331,-99) , 
1, 0.00592662, 0, 0, 0.499624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336664,-99) , 
4, 0.998572, 0, 0, 0.494883,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.031656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.345361, 0, 1, 0.543879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47299,-99) , 
0, 0.502849, 1, 0, 0.499713,-99) , 
3, 0.50902, 1, 0, 0.502756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334904,-99) , 
3, 8.93425, 1, 0, 0.496759,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0327004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.344821, 0, 1, 0.537662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488142,-99) , 
3, 2.06253, 0, 0, 0.49889,-99) , 
3, 0.49834, 1, 0, 0.50142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367076,-99) , 
3, 8.71137, 1, 0, 0.496395,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0478369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523784, 1, 1, 0.532447,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.486647,-99) , 
1, -0.00178541, 1, 0, 0.500543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310767,-99) , 
4, 0.998572, 0, 0, 0.49524,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0232741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493328, 1, 1, 0.504363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458762,-99) , 
5, 0.904419, 1, 0, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297633,-99) , 
4, 0.998572, 0, 0, 0.496435,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0298337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0476418, 1, 1, 0.510314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399543,-99) , 
2, -0.115174, 0, 0, 0.490972,-99) , 
5, -0.33333, 0, 0, 0.503137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346244,-99) , 
3, 8.93425, 1, 0, 0.497767,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0516391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4243,-99) , 
5, -0.95009, 0, 0, 0.507994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483533,-99) , 
2, 0.0711179, 0, 0, 0.490646,-99) , 
5, 0.0476101, 1, 0, 0.498951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368852,-99) , 
3, 8.9721, 1, 0, 0.494349,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0433254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714314, 0, 1, 0.559524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479094,-99) , 
5, 0.33327, 0, 0, 0.489771,-99) , 
1, 0.00592662, 0, 0, 0.495989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329013,-99) , 
4, 0.998572, 0, 0, 0.491338,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.027685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484254,-99) , 
5, -0.523859, 0, 0, 0.498013,-99) , 
1, -0.00964224, 1, 0, 0.500393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336709,-99) , 
4, 0.998572, 0, 0, 0.49569,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0346451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471052,-99) , 
4, 0.999729, 0, 0, 0.50224,-99) , 
NN(
0, 
0, 
-1, 0.142843, 1, -1, 0.47966,-99) , 
1, 0.000160057, 0, 0, 0.490584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337679,-99) , 
4, 0.998572, 0, 0, 0.48642,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0349311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428698, 0, 1, 0.53459,-99) , 
NN(
0, 
0, 
-1, 0.502848, 1, -1, 0.489171,-99) , 
1, 0.00592662, 0, 0, 0.493384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37431,-99) , 
4, 0.999048, 0, 0, 0.488707,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0287293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498055,-99) , 
1, -0.00721094, 1, 0, 0.504453,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.479199,-99) , 
3, 4.3389, 1, 0, 0.499264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355913,-99) , 
4, 0.998572, 0, 0, 0.495334,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0262426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490979,-99) , 
5, -0.429172, 0, 0, 0.526757,-99) , 
NN(
0, 
0, 
-1, 0.504755, 1, -1, 0.496175,-99) , 
1, 0.00458981, 0, 0, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366737,-99) , 
4, 0.999048, 0, 0, 0.495049,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0375027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498128, 0, 1, 0.577289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488392,-99) , 
5, -0.333315, 0, 0, 0.50222,-99) , 
1, -0.00808413, 1, 0, 0.506225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305943,-99) , 
4, 0.998572, 0, 0, 0.501034,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.033631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473957,-99) , 
0, 0.503805, 1, 0, 0.504947,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.455332,-99) , 
5, 0.904531, 1, 0, 0.502276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361985,-99) , 
3, 8.80985, 1, 0, 0.497271,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0669237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415579,-99) , 
4, 0.999955, 0, 0, 0.512825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470823,-99) , 
1, 0.00240846, 0, 0, 0.490031,-99) , 
5, 0.142857, 1, 0, 0.50176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395457,-99) , 
4, 0.999048, 0, 0, 0.497545,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0451834);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.620123, 0, 1, 0.608259,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.484751,-99) , 
1, -0.00621516, 1, 0, 0.494482,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0274993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0588144, 0, 1, 0.514494,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494525,-99) , 
3, 1.74483, 1, 0, 0.503035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371895,-99) , 
3, 8.79022, 1, 0, 0.498146,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0211155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999922, 1, 1, 0.506405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462608,-99) , 
4, 0.999456, 0, 0, 0.505112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373208,-99) , 
4, 0.998572, 0, 0, 0.501539,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0334862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523991, 0, 1, 0.534605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488257,-99) , 
5, 0.61902, 0, 0, 0.493482,-99) , 
1, 0.00458981, 0, 0, 0.498931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357963,-99) , 
4, 0.998572, 0, 0, 0.495236,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0357188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0049151, 1, 1, 0.514095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43154,-99) , 
2, -0.0929966, 0, 0, 0.49747,-99) , 
5, -0.428706, 0, 0, 0.50838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383452,-99) , 
4, 0.999048, 0, 0, 0.50366,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0197447);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49375,-99) , 
5, -0.0477511, 1, 0, 0.49898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457658,-99) , 
2, 0.225425, 1, 0, 0.497774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389461,-99) , 
4, 0.998572, 0, 0, 0.494704,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0158101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714383, 0, 1, 0.527882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499352,-99) , 
0, 0.490471, 1, 0, 0.501099,-99) , 
1, 0.00592662, 0, 0, 0.503477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375969,-99) , 
4, 0.998572, 0, 0, 0.499949,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0465085);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489148,-99) , 
5, -0.333466, 0, 0, 0.527247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486692,-99) , 
2, 0.0412476, 0, 0, 0.492266,-99) , 
1, 0.00226237, 0, 0, 0.501919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379081,-99) , 
3, 8.93425, 1, 0, 0.497899,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.021171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.21428, 0, 1, 0.505179,-99) , 
NN(
0, 
0, 
-1, 0.497128, 0, -1, 0.463721,-99) , 
4, 0.999796, 0, 0, 0.502092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379661,-99) , 
4, 0.998572, 0, 0, 0.498741,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.052308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.492377, 0, 1, 0.551476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494102,-99) , 
0, 0.499993, 0, 0, 0.510192,-99) , 
5, 0.522828, 1, 0, 0.540155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484804,-99) , 
2, -0.0504473, 1, 0, 0.490577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372695,-99) , 
3, 8.79022, 1, 0, 0.485906,-99) , 
1, -0.00178541, 1, 0, 0.501984,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0307403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487492,-99) , 
5, -0.71436, 0, 0, 0.531261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492623,-99) , 
5, 0.428398, 0, 0, 0.500565,-99) , 
1, 0.00592662, 0, 0, 0.503299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377161,-99) , 
4, 0.998572, 0, 0, 0.499878,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0347467);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.430238, 0, 1, 0.573238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493954,-99) , 
3, 0.543722, 1, 0, 0.497282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380578,-99) , 
3, 8.96578, 1, 0, 0.493032,-99) , 
1, -0.00621516, 1, 0, 0.499472,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0413481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.14278, 1, 1, 0.520205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446303,-99) , 
2, 0.0777876, 1, 0, 0.497712,-99) , 
5, -0.333333, 0, 0, 0.511737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381526,-99) , 
3, 8.80212, 1, 0, 0.506955,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0385959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496521,-99) , 
1, 0.00302413, 0, 0, 0.5099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418113,-99) , 
2, -0.0638239, 0, 0, 0.489275,-99) , 
5, -0.428591, 0, 0, 0.502789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403904,-99) , 
3, 8.84829, 1, 0, 0.499322,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0066662, 1, 1, 0.510344,-99) , 
NN(
0, 
0, 
-1, -0.0575635, 0, -1, 0.488498,-99) , 
5, -0.428626, 0, 0, 0.502966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402988,-99) , 
4, 0.998572, 0, 0, 0.500286,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.024276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00808413, 1, 1, 0.510219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491696,-99) , 
0, 0.5058, 0, 0, 0.494294,-99) , 
0, 0.499995, 1, 0, 0.504761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403851,-99) , 
4, 0.998572, 0, 0, 0.502065,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0136161);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.504381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424394,-99) , 
3, 8.9721, 1, 0, 0.501656,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0250178);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49184,-99) , 
2, 0.0391739, 0, 0, 0.49551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456522,-99) , 
2, -0.202829, 0, 0, 0.494016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376473,-99) , 
4, 0.998572, 0, 0, 0.49091,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0205698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.111134, 1, 1, 0.508339,-99) , 
NN(
0, 
0, 
-1, -0.96823, 0, -1, 0.492501,-99) , 
5, -0.333329, 0, 0, 0.502419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425033,-99) , 
3, 8.93425, 1, 0, 0.499809,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.018653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.87357, 0, 1, 0.503832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480435,-99) , 
0, 0.491967, 1, 0, 0.492555,-99) , 
0, 0.495232, 0, 0, 0.500983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420918,-99) , 
4, 0.998572, 0, 0, 0.498808,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0437111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.636513, 1, 1, 0.558283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462116,-99) , 
5, -0.904749, 0, 0, 0.543239,-99) , 
NN(
0, 
0, 
-1, 8.79022, 1, -1, 0.485943,-99) , 
1, 0.00328721, 0, 0, 0.496812,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0202696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500672, 0, 1, 0.505365,-99) , 
NN(
0, 
0, 
-1, 2.60867, 1, -1, 0.465695,-99) , 
0, 0.504752, 1, 0, 0.502681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412181,-99) , 
3, 8.80985, 1, 0, 0.499522,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0308403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490172,-99) , 
4, 0.99999, 0, 0, 0.504148,-99) , 
NN(
0, 
0, 
-1, 0.714304, 1, -1, 0.471159,-99) , 
4, 0.999796, 0, 0, 0.501611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406732,-99) , 
4, 0.998572, 0, 0, 0.498952,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0485554);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714504, 0, 1, 0.592469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481527,-99) , 
5, 0.714204, 0, 0, 0.48666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405894,-99) , 
3, 8.80985, 1, 0, 0.483698,-99) , 
1, -0.00621516, 1, 0, 0.492237,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0196988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0066662, 1, 1, 0.506916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427519,-99) , 
3, 5.0992, 1, 0, 0.49442,-99) , 
5, -0.428575, 0, 0, 0.502642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420356,-99) , 
3, 8.97226, 1, 0, 0.500026,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0466981);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489606,-99) , 
1, 0.00224134, 0, 0, 0.503073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422559,-99) , 
5, -0.963734, 0, 0, 0.476374,-99) , 
5, -0.904751, 0, 0, 0.500508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370301,-99) , 
4, 0.998572, 0, 0, 0.49718,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0164353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00911108, 1, 1, 0.503064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414796,-99) , 
5, -0.972769, 0, 0, 0.473824,-99) , 
5, -0.904742, 0, 0, 0.500251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403441,-99) , 
3, 8.96578, 1, 0, 0.497146,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0357481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480258,-99) , 
5, -0.142862, 0, 0, 0.521671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486182,-99) , 
5, 0.0476191, 1, 0, 0.497408,-99) , 
2, 0.0624959, 0, 0, 0.501332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428479,-99) , 
3, 8.93425, 1, 0, 0.499076,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0223043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0726665, 1, 1, 0.50717,-99) , 
NN(
0, 
0, 
-1, 5.05291, 1, -1, 0.488887,-99) , 
5, -0.333319, 0, 0, 0.500374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425806,-99) , 
4, 0.999048, 0, 0, 0.497514,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0212158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495699,-99) , 
4, 0.999932, 1, 0, 0.500345,-99) , 
3, 8.54447, 0, 0, 0.501438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405646,-99) , 
4, 0.998572, 0, 0, 0.49895,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0243373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.81187, 1, 1, 0.553213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456872,-99) , 
4, 0.999774, 0, 0, 0.504419,-99) , 
4, 0.999525, 1, 0, 0.507239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427506,-99) , 
3, 8.96578, 1, 0, 0.504746,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0425169);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472717,-99) , 
3, 4.83618, 1, 0, 0.507402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482428,-99) , 
1, -0.00364508, 1, 0, 0.493176,-99) , 
5, 0.142697, 1, 0, 0.500383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427249,-99) , 
4, 0.998574, 0, 0, 0.498418,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0278761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490532,-99) , 
4, 0.999977, 1, 0, 0.495767,-99) , 
3, 8.30401, 0, 0, 0.498406,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.451082,-99) , 
4, 0.999524, 0, 0, 0.495521,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0128621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536996,-99) , 
NN(
0, 
0, 
-1, 0.185114, 1, -1, 0.497181,-99) , 
4, 0.999048, 1, 0, 0.498548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427895,-99) , 
3, 8.71137, 1, 0, 0.496019,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0324028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43538,-99) , 
2, -0.273819, 0, 0, 0.508259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439218,-99) , 
2, 0.214856, 1, 0, 0.505525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398022,-99) , 
1, 0.0119697, 1, 0, 0.502627,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0320139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492528,-99) , 
1, 0.00232958, 0, 0, 0.501279,-99) , 
NN(
0, 
0, 
-1, -0.959185, 0, -1, 0.469329,-99) , 
5, -0.904753, 0, 0, 0.498179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417233,-99) , 
4, 0.998572, 0, 0, 0.496022,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0217535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.085824, 1, 1, 0.509175,-99) , 
NN(
0, 
0, 
-1, -0.0809219, 0, -1, 0.490865,-99) , 
5, -0.333333, 0, 0, 0.502374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439735,-99) , 
3, 8.84932, 1, 0, 0.500273,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0191103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483962,-99) , 
4, 0.999796, 0, 0, 0.504114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463083,-99) , 
1, 0.0103564, 1, 0, 0.502615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421574,-99) , 
4, 0.998572, 0, 0, 0.500503,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0129439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499249,-99) , 
3, 8.54447, 0, 0, 0.501022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453263,-99) , 
2, 0.208166, 1, 0, 0.499476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423846,-99) , 
4, 0.999048, 0, 0, 0.496799,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0202031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491505,-99) , 
3, 4.13183, 1, 0, 0.502818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445163,-99) , 
1, 0.0103564, 1, 0, 0.500855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419415,-99) , 
4, 0.998572, 0, 0, 0.498789,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0320992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461803,-99) , 
5, -0.619024, 0, 0, 0.506774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487461,-99) , 
2, 0.0229771, 0, 0, 0.492166,-99) , 
3, 4.17528, 0, 0, 0.495334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417727,-99) , 
4, 0.999048, 0, 0, 0.492602,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0196838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492536,-99) , 
2, -0.0275959, 1, 0, 0.496064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453612,-99) , 
2, 0.211892, 1, 0, 0.494684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421507,-99) , 
4, 0.998572, 0, 0, 0.492767,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0185513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00981749, 1, 1, 0.503923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411859,-99) , 
5, -0.972775, 0, 0, 0.480302,-99) , 
5, -0.904751, 0, 0, 0.501609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42717,-99) , 
4, 0.999048, 0, 0, 0.498928,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0234763);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48981,-99) , 
5, -0.42831, 0, 0, 0.524643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494378,-99) , 
4, 0.999524, 1, 0, 0.49637,-99) , 
0, 0.492376, 1, 0, 0.499285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431588,-99) , 
3, 8.80985, 1, 0, 0.496978,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.022131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00394721, 1, 1, 0.518034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484536,-99) , 
5, 0.618853, 1, 0, 0.496402,-99) , 
0, 0.499995, 0, 0, 0.503816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430412,-99) , 
4, 0.998572, 0, 0, 0.501896,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0263185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487462,-99) , 
3, 0.729692, 1, 0, 0.511767,-99) , 
NN(
0, 
0, 
-1, 1.31147, 0, -1, 0.491356,-99) , 
3, 0.930304, 1, 0, 0.495473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420642,-99) , 
3, 8.93425, 1, 0, 0.493009,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0246713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498905, 1, 1, 0.50851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476256,-99) , 
5, -0.455743, 0, 0, 0.494195,-99) , 
0, 0.496184, 0, 0, 0.503853,-99) , 
NN(
0, 
0, 
-1, 0.941051, 1, -1, 0.441938,-99) , 
5, 0.904762, 1, 0, 0.500252,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0148942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460712,-99) , 
2, 0.185114, 1, 0, 0.501431,-99) , 
4, 0.999048, 1, 0, 0.502732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433727,-99) , 
3, 8.93425, 1, 0, 0.500459,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0205564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496047,-99) , 
4, 0.999977, 1, 0, 0.501054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462395,-99) , 
4, 0.999524, 0, 0, 0.499226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439669,-99) , 
2, 0.216175, 1, 0, 0.496975,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0231396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00328721, 0, 1, 0.507516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481482,-99) , 
2, -0.0567044, 1, 0, 0.49156,-99) , 
0, 0.501898, 1, 0, 0.504338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43267,-99) , 
4, 0.998572, 0, 0, 0.502423,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0262849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484359,-99) , 
5, -0.333505, 0, 0, 0.507231,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.493539,-99) , 
0, 0.496186, 1, 0, 0.497974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41966,-99) , 
4, 0.999048, 0, 0, 0.495298,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0197715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49678,-99) , 
5, 0.0475743, 1, 0, 0.503092,-99) , 
4, 0.999048, 1, 0, 0.505626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463972,-99) , 
3, 8.28192, 1, 0, 0.503931,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0129112);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498106,-99) , 
3, 6.67795, 0, 0, 0.500104,-99) , 
NN(
0, 
0, 
-1, 0.945542, 1, -1, 0.472019,-99) , 
5, 0.904723, 1, 0, 0.498387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4479,-99) , 
0, 0.489519, 0, 0, 0.496953,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0253514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480522,-99) , 
2, -0.00420776, 1, 0, 0.517109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492094,-99) , 
0, 0.498089, 1, 0, 0.498671,-99) , 
1, 0.00458981, 0, 0, 0.501104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429797,-99) , 
3, 8.93425, 1, 0, 0.498821,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0166889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496047,-99) , 
4, 0.999048, 1, 0, 0.497735,-99) , 
0, 0.490472, 1, 0, 0.499254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435488,-99) , 
3, 8.96578, 1, 0, 0.497272,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0268668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00721094, 1, 1, 0.508546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419291,-99) , 
5, -0.974092, 0, 0, 0.476428,-99) , 
5, -0.909296, 0, 0, 0.505503,-99) , 
NN(
0, 
0, 
-1, 0.497148, 1, -1, 0.430525,-99) , 
5, 0.904761, 1, 0, 0.501285,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0370545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.24586, 0, 1, 0.524586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45539,-99) , 
5, 0.890888, 1, 0, 0.488844,-99) , 
5, 0.809254, 1, 0, 0.520032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48885,-99) , 
5, -0.619056, 1, 0, 0.493944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442706,-99) , 
4, 0.999524, 0, 0, 0.490852,-99) , 
1, -0.000651124, 1, 0, 0.503149,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0209343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49936, 1, 1, 0.507824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486583,-99) , 
5, 0.523506, 0, 0, 0.493802,-99) , 
0, 0.495233, 0, 0, 0.504259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436723,-99) , 
4, 0.998572, 0, 0, 0.502484,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0199006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493873,-99) , 
4, 0.999909, 1, 0, 0.496975,-99) , 
4, 0.999048, 1, 0, 0.498295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45381,-99) , 
3, 8.83996, 1, 0, 0.496746,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.033011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48039,-99) , 
0, 0.491423, 0, 0, 0.510368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46249,-99) , 
2, -0.212735, 0, 0, 0.508305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397342,-99) , 
1, 0.0121806, 1, 0, 0.505452,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.020642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498747,-99) , 
1, -0.00139653, 1, 0, 0.50723,-99) , 
NN(
0, 
0, 
-1, -0.968254, 0, -1, 0.491646,-99) , 
5, -0.333333, 0, 0, 0.501793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446949,-99) , 
1, 0.0103564, 1, 0, 0.499833,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0357084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476972,-99) , 
5, 0.672776, 1, 0, 0.542637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47207,-99) , 
5, -0.877593, 0, 0, 0.492124,-99) , 
5, -0.714386, 0, 0, 0.525266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490767,-99) , 
5, 0.904671, 0, 0, 0.492603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429769,-99) , 
3, 8.80985, 1, 0, 0.490329,-99) , 
1, 0.00328721, 0, 0, 0.497062,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0463962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0321018, 0, 1, 0.535443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462195,-99) , 
5, 0.809296, 1, 0, 0.528162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487823,-99) , 
5, 0.428503, 0, 0, 0.498979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440888,-99) , 
4, 0.999525, 0, 0, 0.495293,-99) , 
1, -0.00141849, 1, 0, 0.506564,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.020955);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.715085, 0, 1, 0.572029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479693,-99) , 
2, -0.112057, 0, 0, 0.49898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459707,-99) , 
2, 0.214267, 1, 0, 0.49737,-99) , 
1, -0.00621516, 1, 0, 0.503378,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0152969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499639,-99) , 
0, 0.499178, 0, 0, 0.503844,-99) , 
NN(
0, 
0, 
-1, -0.110065, 0, -1, 0.486191,-99) , 
0, 0.5019, 1, 0, 0.500404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456435,-99) , 
2, 0.215886, 1, 0, 0.498717,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0307241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472583,-99) , 
5, -0.714304, 0, 0, 0.516009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48997,-99) , 
5, -0.523832, 1, 0, 0.49599,-99) , 
2, 0.0443922, 0, 0, 0.499994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439767,-99) , 
3, 8.80985, 1, 0, 0.497975,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0142568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499038,-99) , 
3, 8.28318, 0, 0, 0.500924,-99) , 
1, -0.00808413, 1, 0, 0.503366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436718,-99) , 
4, 0.999048, 0, 0, 0.50107,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0183099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478728,-99) , 
3, 6.15242, 1, 0, 0.50265,-99) , 
3, 8.56207, 0, 0, 0.504616,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.456366,-99) , 
4, 0.999524, 0, 0, 0.501915,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0304333);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714446, 0, 1, 0.570584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492902,-99) , 
4, 0.999048, 1, 0, 0.494912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436615,-99) , 
3, 8.93425, 1, 0, 0.492952,-99) , 
1, -0.00621516, 1, 0, 0.499106,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0322939);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0066662, 1, 1, 0.512822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48146,-99) , 
3, 1.16754, 0, 0, 0.503977,-99) , 
NN(
0, 
0, 
-1, -0.886649, 0, -1, 0.464508,-99) , 
3, 3.32744, 1, 0, 0.49331,-99) , 
5, -0.523819, 0, 0, 0.50695,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0194557);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.431197, 0, 1, 0.542484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497186,-99) , 
2, -0.0304088, 1, 0, 0.501424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458426,-99) , 
2, 0.214436, 1, 0, 0.499742,-99) , 
1, -0.00621516, 1, 0, 0.503161,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0260405);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00621516, 1, 1, 0.51441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466105,-99) , 
5, 0.872934, 1, 0, 0.497998,-99) , 
NN(
0, 
0, 
-1, -0.0638239, 0, -1, 0.482186,-99) , 
5, -0.333346, 0, 0, 0.492342,-99) , 
0, 0.49809, 0, 0, 0.503588,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0192895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.83559, 0, 1, 0.504889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461221,-99) , 
2, -0.214584, 0, 0, 0.503362,-99) , 
NN(
0, 
0, 
-1, 0.945348, 1, -1, 0.46829,-99) , 
5, 0.809305, 1, 0, 0.498479,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0192958);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496797,-99) , 
2, -0.0698819, 1, 0, 0.502207,-99) , 
NN(
0, 
0, 
-1, -0.0293528, 0, -1, 0.489845,-99) , 
5, -0.333346, 0, 0, 0.497776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44908,-99) , 
0, 0.489519, 0, 0, 0.496422,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0298787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494949,-99) , 
3, 2.62522, 0, 0, 0.500357,-99) , 
4, 0.999524, 1, 0, 0.504673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464329,-99) , 
2, -0.0990062, 0, 0, 0.504826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428903,-99) , 
5, 0.809526, 1, 0, 0.491242,-99) , 
3, 4.51103, 1, 0, 0.502081,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0166084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428567, 0, 1, 0.543879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473842,-99) , 
4, 0.999796, 0, 0, 0.500243,-99) , 
0, 0.491423, 1, 0, 0.503216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431729,-99) , 
4, 0.998572, 0, 0, 0.501406,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0174178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.384131, 1, 1, 0.548675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498527,-99) , 
5, -0.809508, 1, 0, 0.501575,-99) , 
3, 0.502674, 1, 0, 0.504681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441262,-99) , 
3, 8.80212, 1, 0, 0.502548,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0207794);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493892,-99) , 
5, -0.428766, 0, 0, 0.517366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487721,-99) , 
5, 0.523692, 1, 0, 0.497165,-99) , 
0, 0.494281, 1, 0, 0.500969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449376,-99) , 
2, -0.211276, 0, 0, 0.498891,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0135823);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496348,-99) , 
3, 8.01751, 0, 0, 0.497306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458039,-99) , 
2, 0.270731, 1, 0, 0.496266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459085,-99) , 
2, -0.217437, 0, 0, 0.494785,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0266061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480112,-99) , 
2, -0.111144, 0, 0, 0.505189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450286,-99) , 
2, 0.214517, 1, 0, 0.503099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408111,-99) , 
1, 0.0121806, 1, 0, 0.500602,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0199892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814075, 1, 1, 0.507434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467967,-99) , 
5, -0.904773, 0, 0, 0.503826,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.489687,-99) , 
0, 0.49809, 0, 0, 0.496853,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.070888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474757,-99) , 
5, 0.428275, 0, 0, 0.521163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464742,-99) , 
4, 0.999996, 0, 0, 0.4983,-99) , 
4, 0.999909, 1, 0, 0.501257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44398,-99) , 
4, 0.999048, 0, 0, 0.499248,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0480108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.309621, 1, 1, 0.612009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487442,-99) , 
5, -0.809671, 0, 0, 0.5735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487815,-99) , 
2, -0.0710983, 1, 0, 0.492828,-99) , 
NN(
0, 
0, 
-1, -0.782324, 1, -1, 0.478679,-99) , 
5, -0.428598, 0, 0, 0.488598,-99) , 
1, -0.00445233, 1, 0, 0.499457,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0398654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488618,-99) , 
5, -0.619046, 0, 0, 0.518761,-99) , 
0, 0.492376, 1, 0, 0.525354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468143,-99) , 
4, 0.999524, 0, 0, 0.503808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456449,-99) , 
5, -0.238238, 1, 0, 0.486426,-99) , 
5, 0.333272, 0, 0, 0.494479,-99) , 
1, -0.00178541, 1, 0, 0.50381,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0166674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.76953, 1, 1, 0.555947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473362,-99) , 
4, 0.999819, 0, 0, 0.502076,-99) , 
4, 0.999524, 1, 0, 0.505116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470424,-99) , 
3, 8.93425, 1, 0, 0.503975,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0200998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493297,-99) , 
3, 6.74838, 0, 0, 0.494632,-99) , 
4, 0.999048, 1, 0, 0.496687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461579,-99) , 
3, 8.82294, 1, 0, 0.495583,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0255164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00306557, 0, 1, 0.510977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447115,-99) , 
2, -0.0512258, 0, 0, 0.495337,-99) , 
5, -0.71432, 0, 0, 0.507478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471211,-99) , 
2, -0.21361, 0, 0, 0.506026,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0203202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486592,-99) , 
0, 0.499042, 1, 0, 0.495936,-99) , 
3, 8.52364, 0, 0, 0.49783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452272,-99) , 
4, 0.999049, 0, 0, 0.496237,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0116357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475655,-99) , 
4, 0.999819, 0, 0, 0.49894,-99) , 
4, 0.999048, 1, 0, 0.501349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459991,-99) , 
3, 8.71013, 1, 0, 0.49996,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0222734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.659917, 1, 1, 0.529982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470633,-99) , 
5, -0.809618, 1, 0, 0.487824,-99) , 
5, -0.428563, 0, 0, 0.512659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492959,-99) , 
5, 0.904671, 0, 0, 0.494377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453148,-99) , 
2, 0.214517, 1, 0, 0.492991,-99) , 
0, 0.493328, 1, 0, 0.495882,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.021358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490153, 1, 1, 0.529667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490966,-99) , 
5, -0.093102, 0, 0, 0.499404,-99) , 
0, 0.491423, 1, 0, 0.50164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423599,-99) , 
5, 0.945287, 1, 0, 0.468038,-99) , 
5, 0.904477, 1, 0, 0.499648,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0175592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470362,-99) , 
3, 5.94071, 1, 0, 0.502153,-99) , 
3, 8.28318, 0, 0, 0.50382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464928,-99) , 
4, 0.999048, 0, 0, 0.502449,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0208474);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498099, 0, 1, 0.527359,-99) , 
NN(
0, 
0, 
-1, -0.142909, 0, -1, 0.490512,-99) , 
1, -0.00808413, 1, 0, 0.492437,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0333357);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476284,-99) , 
5, -0.238369, 0, 0, 0.527294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487828,-99) , 
5, -0.142954, 1, 0, 0.496823,-99) , 
2, -0.096957, 1, 0, 0.499717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464656,-99) , 
5, -0.310704, 0, 0, 0.492397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432721,-99) , 
5, 0.809387, 1, 0, 0.482321,-99) , 
3, 4.39959, 1, 0, 0.496197,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0354999);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.809637, 0, 1, 0.55828,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486945,-99) , 
5, 0.61897, 0, 0, 0.491356,-99) , 
NN(
0, 
0, 
-1, -0.428685, 1, -1, 0.466581,-99) , 
0, 0.492376, 0, 0, 0.488754,-99) , 
1, -0.00445233, 1, 0, 0.497713,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0353241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.42893, 0, 1, 0.536444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476263,-99) , 
5, 0.332624, 1, 0, 0.523686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468755,-99) , 
3, 1.17996, 0, 0, 0.511368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492028,-99) , 
1, -0.00627799, 1, 0, 0.497562,-99) , 
5, -0.809523, 1, 0, 0.49964,-99) , 
1, 0.00458981, 0, 0, 0.502778,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0308805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.633356, 0, 1, 0.577846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495916,-99) , 
5, 0.818511, 0, 0, 0.499491,-99) , 
1, -0.00520423, 1, 0, 0.506683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522917,-99) , 
NN(
0, 
0, 
-1, -0.0036184, 0, -1, 0.453395,-99) , 
5, -0.941051, 0, 0, 0.477154,-99) , 
5, -0.904766, 0, 0, 0.503747,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0439868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493403,-99) , 
0, 0.501898, 1, 0, 0.515894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452663,-99) , 
3, 2.11886, 1, 0, 0.481145,-99) , 
2, -0.0638239, 0, 0, 0.509702,-99) , 
NN(
NN(
0, 
0, 
-1, 0.727978, 1, 1, 0.522563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48272,-99) , 
2, -0.0694578, 1, 0, 0.487432,-99) , 
0, 0.500948, 0, 0, 0.496032,-99) , 
5, 0.523815, 1, 0, 0.504982,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0277846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00675144, 1, 1, 0.509407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39823,-99) , 
5, -0.974098, 0, 0, 0.478302,-99) , 
5, -0.909286, 0, 0, 0.506409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423211,-99) , 
5, 0.941055, 1, 0, 0.465842,-99) , 
5, 0.904762, 1, 0, 0.504049,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0255312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496642,-99) , 
2, -0.0293528, 1, 0, 0.501265,-99) , 
4, 0.999051, 1, 0, 0.503725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485352,-99) , 
5, 0.469068, 0, 0, 0.496773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440067,-99) , 
5, 0.713982, 1, 0, 0.482087,-99) , 
3, 4.51103, 1, 0, 0.499596,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0360791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.22752, 1, 1, 0.533021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455365,-99) , 
3, 8.84785, 1, 0, 0.50491,-99) , 
5, 0.111097, 1, 0, 0.510398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488628,-99) , 
3, 2.68499, 1, 0, 0.506853,-99) , 
NN(
0, 
0, 
-1, -0.682677, 1, -1, 0.471129,-99) , 
3, 1.48627, 0, 0, 0.49279,-99) , 
5, -0.333346, 0, 0, 0.503994,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0165278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714325, 0, 1, 0.52052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472428,-99) , 
5, -0.904749, 0, 0, 0.498745,-99) , 
0, 0.502988, 0, 0, 0.502013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437208,-99) , 
5, -0.333372, 1, 0, 0.468134,-99) , 
0, 0.491424, 0, 0, 0.499458,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0301685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499714,-99) , 
1, -0.00520423, 1, 0, 0.512546,-99) , 
NN(
0, 
0, 
-1, -0.974076, 0, -1, 0.467222,-99) , 
5, -0.945568, 0, 0, 0.507252,-99) , 
NN(
NN(
0, 
0, 
-1, 4.60925, 1, 1, 0.527419,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.487564,-99) , 
2, 0.071981, 0, 0, 0.493917,-99) , 
5, 0.142862, 1, 0, 0.500573,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0121817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499145,-99) , 
0, 0.502852, 0, 0, 0.501622,-99) , 
4, 0.999048, 1, 0, 0.503023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442367,-99) , 
3, 8.93425, 1, 0, 0.501145,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0202994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498224,-99) , 
2, 0.00615879, 0, 0, 0.504787,-99) , 
3, 8.56866, 0, 0, 0.506668,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.466977,-99) , 
4, 0.999524, 0, 0, 0.504305,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0235095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0505989, 1, 1, 0.516036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455753,-99) , 
2, -0.133485, 0, 0, 0.505505,-99) , 
0, 0.496186, 1, 0, 0.508895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482061,-99) , 
2, -0.213865, 0, 0, 0.5078,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0259023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49908,-99) , 
5, 0.346467, 1, 0, 0.549838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479547,-99) , 
0, 0.498075, 0, 0, 0.490634,-99) , 
5, -0.523969, 0, 0, 0.518966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491921,-99) , 
3, 0.891172, 1, 0, 0.496215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459901,-99) , 
3, 8.52364, 1, 0, 0.494814,-99) , 
1, 0.00458981, 0, 0, 0.497929,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0247773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00523434, 1, 1, 0.511341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488147,-99) , 
1, -9.45486e-05, 0, 0, 0.499979,-99) , 
2, 0.0323383, 0, 0, 0.502913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463272,-99) , 
2, -0.212127, 0, 0, 0.501265,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0256132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.673433, 1, 1, 0.519255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49569,-99) , 
0, 0.496184, 1, 0, 0.502526,-99) , 
5, 0.61897, 0, 0, 0.507196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446305,-99) , 
3, 8.74981, 1, 0, 0.505171,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0163791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.47143, 0, 1, 0.505987,-99) , 
NN(
0, 
0, 
-1, 0.941051, 1, -1, 0.477126,-99) , 
5, 0.904761, 1, 0, 0.504314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461037,-99) , 
2, 0.214436, 1, 0, 0.502661,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0167975);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499248,-99) , 
2, 0.00730458, 0, 0, 0.505474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456059,-99) , 
5, 0.71429, 1, 0, 0.49061,-99) , 
3, 4.55201, 1, 0, 0.502644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465489,-99) , 
0, 0.489519, 0, 0, 0.501581,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0169419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.536466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463699,-99) , 
4, 0.999819, 0, 0, 0.502126,-99) , 
4, 0.999524, 1, 0, 0.504052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461058,-99) , 
3, 8.79022, 1, 0, 0.502653,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0132011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532646,-99) , 
NN(
0, 
0, 
-1, 5.34474, 1, -1, 0.495921,-99) , 
3, 8.55799, 0, 0, 0.49709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453188,-99) , 
2, 0.214436, 1, 0, 0.495397,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0176016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496486,-99) , 
2, -0.0194558, 1, 0, 0.501463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470015,-99) , 
2, 0.13568, 1, 0, 0.500219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442075,-99) , 
2, 0.217269, 1, 0, 0.498125,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0179978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.673267, 1, 1, 0.512969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46356,-99) , 
5, 0.541744, 1, 0, 0.501117,-99) , 
5, 0.618853, 0, 0, 0.504255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458806,-99) , 
4, 0.999048, 0, 0, 0.502667,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0205066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485329,-99) , 
2, 0.00963233, 1, 0, 0.524805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495941,-99) , 
2, 0.0676585, 0, 0, 0.499545,-99) , 
1, 0.00592662, 0, 0, 0.501913,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.471527,-99) , 
5, 0.904761, 1, 0, 0.500112,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.01865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498565,-99) , 
5, -0.714276, 1, 0, 0.503253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455262,-99) , 
5, -0.0476236, 0, 0, 0.487525,-99) , 
2, 0.071981, 1, 0, 0.500975,-99) , 
NN(
0, 
0, 
-1, 0.489973, 1, -1, 0.475233,-99) , 
0, 0.491424, 0, 0, 0.499075,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0392354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00246712, 1, 1, 0.531978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489895,-99) , 
5, 0.789245, 1, 0, 0.50503,-99) , 
5, 0.115521, 1, 0, 0.511285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481012,-99) , 
3, 1.87453, 0, 0, 0.499546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41372,-99) , 
3, 2.35058, 1, 0, 0.45356,-99) , 
2, 0.0466494, 1, 0, 0.489972,-99) , 
5, -0.42864, 0, 0, 0.504139,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0205287);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481306,-99) , 
2, -0.111948, 0, 0, 0.503789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455974,-99) , 
0, 0.489519, 0, 0, 0.502371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458539,-99) , 
2, 0.214436, 1, 0, 0.500658,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.02576);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.619339, 0, 1, 0.538282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495357,-99) , 
5, 0.618822, 0, 0, 0.500802,-99) , 
NN(
0, 
0, 
-1, 0.713779, 1, -1, 0.478561,-99) , 
0, 0.495233, 0, 0, 0.495214,-99) , 
1, -0.00621516, 1, 0, 0.498547,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.03117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487147,-99) , 
2, 0.0539929, 1, 0, 0.510221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463391,-99) , 
2, 0.21694, 1, 0, 0.50873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517696,-99) , 
NN(
0, 
0, 
-1, 0.00498844, 0, -1, 0.478212,-99) , 
2, -0.0697417, 1, 0, 0.486667,-99) , 
0, 0.493328, 0, 0, 0.505531,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0296654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498389,-99) , 
4, 0.999524, 1, 0, 0.507081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468248,-99) , 
3, 8.86432, 1, 0, 0.504804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466134,-99) , 
2, 0.0796927, 1, 0, 0.499612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442874,-99) , 
3, 2.00634, 1, 0, 0.466423,-99) , 
2, -0.0625835, 0, 0, 0.493666,-99) , 
5, 0.333175, 0, 0, 0.49847,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0203813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.940962, 1, 1, 0.547596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495076,-99) , 
0, 0.503805, 0, 0, 0.498081,-99) , 
5, 0.904672, 0, 0, 0.500991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463013,-99) , 
3, 8.80212, 1, 0, 0.499787,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0224679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491679,-99) , 
2, 0.0211266, 0, 0, 0.495708,-99) , 
3, 8.32446, 0, 0, 0.498322,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.466806,-99) , 
4, 0.999524, 0, 0, 0.496506,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0291137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45583, 0, 1, 0.534052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497968,-99) , 
0, 0.495235, 1, 0, 0.504419,-99) , 
5, 0.111134, 1, 0, 0.51019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488301,-99) , 
0, 0.496183, 0, 0, 0.505874,-99) , 
NN(
0, 
0, 
-1, -0.122051, 0, -1, 0.463767,-99) , 
2, -0.0575635, 0, 0, 0.497943,-99) , 
5, -0.333346, 0, 0, 0.505792,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0303835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00377083, 1, 1, 0.513477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46833,-99) , 
0, 0.504755, 1, 0, 0.511147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483317,-99) , 
5, -0.551048, 1, 0, 0.500666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468613,-99) , 
5, -0.600923, 0, 0, 0.485762,-99) , 
2, -0.0293528, 0, 0, 0.496444,-99) , 
5, 0.0476191, 0, 0, 0.504293,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0302785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495358,-99) , 
0, 0.496094, 0, 0, 0.505907,-99) , 
NN(
0, 
0, 
-1, 0.505979, 1, -1, 0.486238,-99) , 
0, 0.503802, 1, 0, 0.503962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472483,-99) , 
1, -0.0017722, 1, 0, 0.497415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430501,-99) , 
5, -0.523798, 0, 0, 0.477954,-99) , 
2, 0.0733455, 1, 0, 0.500043,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0393216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.17984, 0, 1, 0.533236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483323,-99) , 
2, -0.0726335, 1, 0, 0.486349,-99) , 
1, 0.00236595, 0, 0, 0.496958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484728,-99) , 
1, -0.00394721, 1, 0, 0.494659,-99) , 
NN(
0, 
0, 
-1, 0.498083, 0, -1, 0.457239,-99) , 
2, -0.0575635, 0, 0, 0.4876,-99) , 
5, -0.523793, 0, 0, 0.494152,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0287557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487317,-99) , 
4, 0.999991, 0, 0, 0.50097,-99) , 
NN(
0, 
0, 
-1, 0.499038, 0, -1, 0.462824,-99) , 
4, 0.999819, 0, 0, 0.498153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45624,-99) , 
4, 0.999048, 0, 0, 0.496664,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0234802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.233392, 0, 1, 0.527014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463284,-99) , 
5, 0.618825, 1, 0, 0.516891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496761,-99) , 
3, 7.59701, 0, 0, 0.49955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461177,-99) , 
4, 0.999524, 0, 0, 0.497174,-99) , 
1, 0.00337592, 0, 0, 0.500952,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0259745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48275,-99) , 
3, 4.48883, 1, 0, 0.515855,-99) , 
1, 0.00328721, 0, 0, 0.52206,-99) , 
NN(
NN(
0, 
0, 
-1, 0.537424, 1, 1, 0.512107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481925,-99) , 
0, 0.497456, 0, 0, 0.497173,-99) , 
5, 0.428571, 0, 0, 0.503199,-99) , 
0, 0.494281, 1, 0, 0.506902,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0246157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00971883, 0, 1, 0.526311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495178,-99) , 
2, -0.20036, 1, 0, 0.497642,-99) , 
3, 0.918238, 1, 0, 0.503339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437684,-99) , 
3, 8.80985, 1, 0, 0.501261,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0173879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.387361, 1, 1, 0.503691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410451,-99) , 
5, 0.0474444, 0, 0, 0.472932,-99) , 
3, 5.91868, 1, 0, 0.501306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44488,-99) , 
3, 8.82294, 1, 0, 0.499429,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0351001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.691588, 1, 1, 0.533849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442439,-99) , 
5, -0.927454, 0, 0, 0.485371,-99) , 
5, -0.619046, 0, 0, 0.517565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491944,-99) , 
2, -0.0720622, 1, 0, 0.497545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446187,-99) , 
4, 0.999048, 0, 0, 0.495577,-99) , 
1, -0.00178541, 1, 0, 0.502189,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0262765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431852,-99) , 
1, -0.0104756, 0, 0, 0.504429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477373,-99) , 
0, 0.498089, 1, 0, 0.495805,-99) , 
NN(
0, 
0, 
-1, 0.850472, 1, -1, 0.450878,-99) , 
5, 0.714289, 1, 0, 0.484711,-99) , 
3, 4.18549, 1, 0, 0.50014,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0208095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.845757, 1, 1, 0.520821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494932,-99) , 
0, 0.490471, 1, 0, 0.497005,-99) , 
5, 0.80944, 0, 0, 0.500525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440952,-99) , 
1, -0.0104756, 0, 0, 0.498562,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0416738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451245,-99) , 
5, 0.781586, 1, 0, 0.539508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461002,-99) , 
3, 1.33011, 0, 0, 0.495248,-99) , 
5, -0.523987, 0, 0, 0.52166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482635,-99) , 
5, 0.428506, 0, 0, 0.489883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460417,-99) , 
4, 0.999524, 0, 0, 0.488026,-99) , 
1, 0.00226237, 0, 0, 0.496858,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.023507);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492053,-99) , 
5, -0.715344, 0, 0, 0.524536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496609,-99) , 
5, 0.904724, 0, 0, 0.498399,-99) , 
1, -0.00621516, 1, 0, 0.500508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45185,-99) , 
0, 0.500945, 1, 0, 0.491972,-99) , 
NN(
0, 
0, 
-1, 0.499047, 0, -1, 0.439365,-99) , 
2, -0.0709862, 0, 0, 0.47714,-99) , 
3, 4.43901, 1, 0, 0.495888,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0259983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.60456, 1, 1, 0.543137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463523,-99) , 
5, -0.746241, 0, 0, 0.482199,-99) , 
5, -0.238092, 0, 0, 0.521269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47393,-99) , 
2, -0.0669464, 0, 0, 0.520511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488349,-99) , 
5, 0.741283, 1, 0, 0.499486,-99) , 
5, -0.809538, 1, 0, 0.503037,-99) , 
2, 0.0746138, 0, 0, 0.505755,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0470237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0735345, 0, 1, 0.518627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48254,-99) , 
0, 0.497138, 1, 0, 0.494403,-99) , 
5, -0.142908, 0, 0, 0.508674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464262,-99) , 
2, 0.00574114, 0, 0, 0.495379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457132,-99) , 
0, 0.500946, 0, 0, 0.470127,-99) , 
2, -0.0688674, 0, 0, 0.491275,-99) , 
1, 0.000160057, 0, 0, 0.499748,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0188871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493601,-99) , 
5, 0.142812, 1, 0, 0.500701,-99) , 
3, 8.56311, 0, 0, 0.502293,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.467782,-99) , 
4, 0.999525, 0, 0, 0.500384,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0427202);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492937,-99) , 
3, 4.34727, 1, 0, 0.507901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461628,-99) , 
1, -0.000651124, 1, 0, 0.492238,-99) , 
2, -0.000239902, 1, 0, 0.501605,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473001,-99) , 
5, 0.782269, 1, 0, 0.494685,-99) , 
NN(
0, 
0, 
-1, 3.19446, 1, -1, 0.46568,-99) , 
5, 0.428163, 0, 0, 0.477533,-99) , 
2, 0.0744248, 1, 0, 0.498085,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.026629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619015, 0, 1, 0.532867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474975,-99) , 
0, 0.490788, 0, 0, 0.505011,-99) , 
1, 0.00337592, 0, 0, 0.510219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473998,-99) , 
5, 0.42847, 1, 0, 0.515403,-99) , 
NN(
0, 
0, 
-1, 0.503455, 1, -1, 0.491914,-99) , 
0, 0.50412, 0, 0, 0.49543,-99) , 
0, 0.497137, 1, 0, 0.501392,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0183553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496821,-99) , 
1, 0.00233228, 0, 0, 0.503688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490431,-99) , 
0, 0.493057, 1, 0, 0.494952,-99) , 
0, 0.497138, 0, 0, 0.500129,-99) , 
NN(
0, 
0, 
-1, 0.49714, 1, -1, 0.473159,-99) , 
5, 0.904761, 1, 0, 0.498557,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0148604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00133158, 0, 1, 0.527878,-99) , 
NN(
0, 
0, 
-1, 0.504754, 1, -1, 0.497214,-99) , 
5, 0.809294, 0, 0, 0.5014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454106,-99) , 
3, 8.93425, 1, 0, 0.499948,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.00922998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478696,-99) , 
4, 0.999524, 0, 0, 0.501379,-99) , 
2, 0.214776, 0, 0, 0.502118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471484,-99) , 
0, 0.489519, 0, 0, 0.501258,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0290051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.46861, 1, 1, 0.541412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45594,-99) , 
3, 2.81262, 1, 0, 0.484441,-99) , 
5, -0.0477267, 0, 0, 0.517499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466984,-99) , 
2, 0.153392, 1, 0, 0.505699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47917,-99) , 
0, 0.49809, 1, 0, 0.490039,-99) , 
5, 0.428577, 1, 0, 0.49959,-99) , 
2, -0.0693893, 1, 0, 0.502563,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.019167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0748489, 1, 1, 0.504193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482778,-99) , 
0, 0.501627, 0, 0, 0.49201,-99) , 
5, -0.428615, 0, 0, 0.500261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488402,-99) , 
3, 4.89883, 0, 0, 0.493417,-99) , 
NN(
0, 
0, 
-1, 0.000594225, 0, -1, 0.480396,-99) , 
5, 0.7142, 1, 0, 0.490678,-99) , 
0, 0.496186, 0, 0, 0.497183,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0320939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464086,-99) , 
5, 0.800257, 1, 0, 0.523272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495036,-99) , 
2, 0.0802105, 0, 0, 0.498587,-99) , 
2, -0.0690174, 1, 0, 0.50273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473794,-99) , 
3, 1.24408, 0, 0, 0.494323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42908,-99) , 
3, 2.30951, 1, 0, 0.459384,-99) , 
2, -0.0638239, 0, 0, 0.488218,-99) , 
5, -0.0477346, 0, 0, 0.496365,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0132983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496684,-99) , 
3, 0.531907, 1, 0, 0.498224,-99) , 
2, 0.204194, 0, 0, 0.499804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46332,-99) , 
3, 8.95508, 1, 0, 0.498705,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0216665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497016,-99) , 
0, 0.499041, 0, 0, 0.502658,-99) , 
4, 0.999048, 1, 0, 0.504458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468366,-99) , 
2, -0.152835, 0, 0, 0.501768,-99) , 
NN(
0, 
0, 
-1, 0.523736, 1, -1, 0.456864,-99) , 
2, 0.0715145, 1, 0, 0.490167,-99) , 
3, 4.44496, 1, 0, 0.501606,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0289272);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482708,-99) , 
3, 4.66463, 1, 0, 0.519209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489147,-99) , 
0, 0.496186, 1, 0, 0.495208,-99) , 
5, 0.80949, 0, 0, 0.498902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461929,-99) , 
5, -0.727975, 0, 0, 0.481879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442015,-99) , 
5, -0.0480423, 1, 0, 0.470658,-99) , 
1, 0.00592662, 1, 0, 0.496375,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0185115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494327,-99) , 
3, 4.36563, 0, 0, 0.497446,-99) , 
3, 8.21532, 0, 0, 0.498936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44458,-99) , 
1, -0.000190665, 1, 0, 0.470681,-99) , 
4, 0.999525, 0, 0, 0.497352,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0267437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464296,-99) , 
4, 0.999841, 0, 0, 0.502916,-99) , 
4, 0.999524, 1, 0, 0.50575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474721,-99) , 
5, 0.33324, 0, 0, 0.496801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450089,-99) , 
0, 0.495233, 0, 0, 0.485467,-99) , 
3, 4.47075, 1, 0, 0.501758,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0374755);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489507,-99) , 
4, 0.999994, 0, 0, 0.507567,-99) , 
NN(
0, 
0, 
-1, 0.498096, 1, -1, 0.47522,-99) , 
4, 0.999864, 0, 0, 0.505178,-99) , 
NN(
0, 
0, 
-1, 0.497141, 1, -1, 0.463765,-99) , 
4, 0.999525, 0, 0, 0.502865,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.037478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.292913, 0, 1, 0.55758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477932,-99) , 
5, -0.809637, 0, 0, 0.534207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497197,-99) , 
5, 0.768748, 1, 0, 0.509954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486225,-99) , 
0, 0.490471, 1, 0, 0.488647,-99) , 
5, 0.714285, 0, 0, 0.493663,-99) , 
1, -0.00461583, 1, 0, 0.498716,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0389262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.306153, 1, 1, 0.538478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469894,-99) , 
3, 2.07144, 1, 0, 0.485735,-99) , 
5, -0.619046, 0, 0, 0.520517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483032,-99) , 
5, -0.637188, 1, 0, 0.488433,-99) , 
5, 0.904761, 0, 0, 0.490725,-99) , 
1, -0.00178541, 1, 0, 0.49971,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0343408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491006,-99) , 
4, 0.999977, 1, 0, 0.514247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455576,-99) , 
4, 0.999977, 0, 0, 0.498982,-99) , 
5, 0.33327, 0, 0, 0.505006,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.469266,-99) , 
4, 0.999524, 0, 0, 0.503042,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0356368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.691422, 1, 1, 0.54547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471856,-99) , 
3, 2.81111, 1, 0, 0.500465,-99) , 
5, -0.619052, 0, 0, 0.529751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497717,-99) , 
3, 2.67629, 1, 0, 0.515657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480163,-99) , 
5, 0.224484, 0, 0, 0.494113,-99) , 
5, -0.809527, 1, 0, 0.497279,-99) , 
1, -0.00213819, 1, 0, 0.505762,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0242698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.27903, 1, 1, 0.534074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476185,-99) , 
5, -0.523798, 0, 0, 0.517346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488316,-99) , 
5, 0.941059, 1, 0, 0.525673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487956,-99) , 
2, -0.00196471, 1, 0, 0.496419,-99) , 
5, 0.904761, 0, 0, 0.498232,-99) , 
2, 0.0726027, 0, 0, 0.50109,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0291735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0571715, 1, 1, 0.527705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477018,-99) , 
3, 4.36977, 1, 0, 0.494992,-99) , 
1, 0.00101908, 0, 0, 0.507354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482145,-99) , 
3, 1.53449, 0, 0, 0.496448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4424,-99) , 
5, -0.968235, 0, 0, 0.491223,-99) , 
5, -0.333354, 0, 0, 0.501546,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0173055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502851, 0, 1, 0.506449,-99) , 
NN(
0, 
0, 
-1, 5.43343, 1, -1, 0.490342,-99) , 
5, -0.333326, 0, 0, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4622,-99) , 
3, 8.80212, 1, 0, 0.499186,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0283627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454856,-99) , 
3, 3.29454, 1, 0, 0.53852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435262,-99) , 
5, 0.523736, 0, 0, 0.468765,-99) , 
3, 4.53849, 1, 0, 0.513724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484661,-99) , 
0, 0.49623, 0, 0, 0.495726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459796,-99) , 
0, 0.505707, 1, 0, 0.494375,-99) , 
2, 0.0729019, 0, 0, 0.497256,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0307929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487773,-99) , 
3, 4.08995, 1, 0, 0.50521,-99) , 
NN(
0, 
0, 
-1, 0.927622, 1, -1, 0.487928,-99) , 
3, 1.12523, 0, 0, 0.500383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471801,-99) , 
5, 0.620991, 0, 0, 0.498163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471703,-99) , 
4, 0.999524, 1, 0, 0.478394,-99) , 
5, 0.75058, 1, 0, 0.48725,-99) , 
5, 0.523809, 1, 0, 0.495846,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0296581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456041,-99) , 
4, 0.999819, 0, 0, 0.506861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48705,-99) , 
3, 7.83514, 0, 0, 0.488662,-99) , 
0, 0.496185, 1, 0, 0.494467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452487,-99) , 
4, 0.999048, 0, 0, 0.493023,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0247127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489363,-99) , 
0, 0.49193, 0, 0, 0.506344,-99) , 
0, 0.490064, 1, 0, 0.513938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495515,-99) , 
3, 4.44496, 0, 0, 0.499897,-99) , 
NN(
0, 
0, 
-1, 0.0990584, 1, -1, 0.481742,-99) , 
0, 0.497409, 0, 0, 0.493749,-99) , 
0, 0.493328, 1, 0, 0.496684,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0166068);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488927,-99) , 
0, 0.493328, 0, 0, 0.502957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452784,-99) , 
2, -0.0160239, 0, 0, 0.486362,-99) , 
5, -0.904773, 0, 0, 0.50134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467648,-99) , 
2, 0.216637, 1, 0, 0.500066,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0205274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418427,-99) , 
1, -0.0105881, 0, 0, 0.503001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469028,-99) , 
1, 0.0103564, 1, 0, 0.501773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450048,-99) , 
4, 0.998572, 0, 0, 0.500474,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0126182);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496445,-99) , 
4, 0.999592, 1, 0, 0.497513,-99) , 
3, 8.52364, 0, 0, 0.498689,-99) , 
4, 0.999048, 1, 0, 0.499902,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0234049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488777,-99) , 
5, 0.854547, 1, 0, 0.513706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49182,-99) , 
0, 0.492376, 1, 0, 0.493369,-99) , 
5, 0.8092, 0, 0, 0.495788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455641,-99) , 
4, 0.999048, 0, 0, 0.494405,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.017017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69333, 1, 1, 0.53466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48437,-99) , 
3, 2.91495, 1, 0, 0.495093,-99) , 
4, 0.999524, 1, 0, 0.497296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464433,-99) , 
3, 8.52364, 1, 0, 0.496152,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0138006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497366,-99) , 
4, 0.999526, 1, 0, 0.498502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46214,-99) , 
2, -0.213308, 0, 0, 0.497182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425077,-99) , 
5, 0.941004, 1, 0, 0.467003,-99) , 
5, 0.904723, 1, 0, 0.495445,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0616943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475342,-99) , 
6, 0.00252079, 0, 0, 0.502402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451595,-99) , 
1, -0.0105881, 0, 0, 0.500706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449036,-99) , 
1, 0.0103564, 1, 0, 0.498849,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0106632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49842,-99) , 
4, 0.999796, 1, 0, 0.499682,-99) , 
3, 8.56207, 0, 0, 0.50128,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.476411,-99) , 
4, 0.999524, 0, 0, 0.499841,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0228855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466697,-99) , 
4, 0.999637, 0, 0, 0.506817,-99) , 
5, 0.904671, 0, 0, 0.508093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443252,-99) , 
4, 0.999048, 0, 0, 0.505949,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0282441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491772,-99) , 
3, 4.0089, 1, 0, 0.509295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485248,-99) , 
0, 0.498181, 0, 0, 0.494955,-99) , 
5, 0.238075, 1, 0, 0.502378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521424,-99) , 
NN(
0, 
0, 
-1, -0.143003, 0, -1, 0.452162,-99) , 
2, -0.064203, 1, 0, 0.468582,-99) , 
0, 0.492375, 0, 0, 0.498669,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0128346);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.904741, 1, 1, 0.505464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460398,-99) , 
0, 0.489519, 0, 0, 0.504207,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.011901);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499344,-99) , 
4, 0.999524, 1, 0, 0.501264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447646,-99) , 
3, 8.93425, 1, 0, 0.499645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44463,-99) , 
1, 0.0103564, 1, 0, 0.497566,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0260564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484945,-99) , 
5, -0.510397, 0, 0, 0.531376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495551,-99) , 
5, 0.387729, 0, 0, 0.498814,-99) , 
1, -0.00621516, 1, 0, 0.501779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466762,-99) , 
3, 2.42107, 1, 0, 0.496763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445324,-99) , 
3, 4.46927, 1, 0, 0.485582,-99) , 
5, 0.714253, 1, 0, 0.498303,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0267711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.808753, 0, 1, 0.519211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4765,-99) , 
0, 0.500844, 0, 0, 0.500333,-99) , 
0, 0.500131, 1, 0, 0.508791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524513,-99) , 
NN(
0, 
0, 
-1, 4.48201, 1, -1, 0.487665,-99) , 
0, 0.496684, 0, 0, 0.491327,-99) , 
0, 0.497138, 0, 0, 0.50161,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.036528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.30527, 1, 1, 0.567147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489529,-99) , 
5, -0.891296, 0, 0, 0.51086,-99) , 
5, -0.619286, 0, 0, 0.544198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491474,-99) , 
5, -0.523813, 1, 0, 0.496666,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, -1, 0.46385,-99) , 
0, 0.504756, 1, 0, 0.494527,-99) , 
1, -0.00308713, 1, 0, 0.504263,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0284585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456251,-99) , 
4, 0.999774, 0, 0, 0.514033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492547,-99) , 
3, 4.17922, 0, 0, 0.49652,-99) , 
0, 0.497137, 1, 0, 0.503571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442704,-99) , 
4, 0.999049, 0, 0, 0.501586,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0247443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493044,-99) , 
5, 0.650748, 1, 0, 0.524053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494304,-99) , 
5, 0.809535, 0, 0, 0.503073,-99) , 
1, 0.00269892, 0, 0, 0.506552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486708,-99) , 
0, 0.499994, 0, 0, 0.492166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453073,-99) , 
5, 0.269796, 1, 0, 0.490364,-99) , 
5, 0.333337, 0, 0, 0.497336,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0344299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.20708, 0, 1, 0.513897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474203,-99) , 
0, 0.498089, 1, 0, 0.493862,-99) , 
5, 0.53739, 1, 0, 0.504744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482004,-99) , 
3, 1.33408, 0, 0, 0.49618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43661,-99) , 
2, -0.0638239, 0, 0, 0.485905,-99) , 
5, -0.619046, 0, 0, 0.499781,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0157557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490273,-99) , 
5, -0.959185, 0, 0, 0.518648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492725,-99) , 
5, 0.00222511, 0, 0, 0.498237,-99) , 
NN(
0, 
0, 
-1, 0.504212, 0, -1, 0.482728,-99) , 
0, 0.502851, 1, 0, 0.496075,-99) , 
5, -0.904761, 1, 0, 0.498279,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.020286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492028, 1, 1, 0.536832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495645,-99) , 
5, -0.523869, 0, 0, 0.520589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49368,-99) , 
3, 8.52364, 0, 0, 0.495576,-99) , 
4, 0.999048, 1, 0, 0.496791,-99) , 
0, 0.503804, 0, 0, 0.499161,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0136619);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474333,-99) , 
1, 0.0103564, 1, 0, 0.50319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474571,-99) , 
2, 0.215546, 1, 0, 0.502156,-99) , 
0, 0.505706, 0, 0, 0.50334,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0156271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467845,-99) , 
4, 0.999774, 0, 0, 0.501145,-99) , 
2, -0.202296, 1, 0, 0.502736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438216,-99) , 
4, 0.999048, 0, 0, 0.500638,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0241791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497539,-99) , 
2, 0.0106193, 0, 0, 0.51552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489444,-99) , 
3, 2.44384, 0, 0, 0.499125,-99) , 
3, 0.9412, 1, 0, 0.502533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458559,-99) , 
3, 8.83068, 1, 0, 0.501136,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0194107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.141469, 0, 1, 0.527415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490591,-99) , 
0, 0.492104, 0, 0, 0.504753,-99) , 
2, -0.0737098, 1, 0, 0.508669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485834,-99) , 
5, -0.42864, 0, 0, 0.496247,-99) , 
NN(
0, 
0, 
-1, 0.4966, 0, -1, 0.475427,-99) , 
0, 0.497274, 0, 0, 0.493433,-99) , 
0, 0.496186, 1, 0, 0.498368,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0219028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.508588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475423,-99) , 
3, 8.93425, 1, 0, 0.507558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435739,-99) , 
1, -0.0104756, 0, 0, 0.505131,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.02134);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483113,-99) , 
5, 0.745843, 1, 0, 0.525424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497434,-99) , 
2, -0.0708144, 1, 0, 0.501172,-99) , 
1, 0.00269892, 0, 0, 0.505641,-99) , 
NN(
NN(
0, 
0, 
-1, -0.968253, 0, -1, 0.494983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425959,-99) , 
5, -0.777935, 0, 0, 0.461877,-99) , 
2, -0.0638239, 0, 0, 0.489586,-99) , 
5, -0.333333, 0, 0, 0.499872,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0191762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496971,-99) , 
0, 0.489791, 0, 0, 0.527475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496047,-99) , 
3, 8.56207, 0, 0, 0.497431,-99) , 
0, 0.491424, 1, 0, 0.499606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441936,-99) , 
4, 0.999524, 0, 0, 0.4966,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0111627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484489,-99) , 
0, 0.504757, 1, 0, 0.501555,-99) , 
4, 0.999048, 1, 0, 0.502831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474153,-99) , 
3, 8.83068, 1, 0, 0.501844,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0191599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.66107, 1, 1, 0.53429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492401,-99) , 
5, -0.428653, 0, 0, 0.521368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494663,-99) , 
5, -0.714353, 1, 0, 0.497396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465788,-99) , 
4, 0.999524, 0, 0, 0.496179,-99) , 
2, 0.0740959, 0, 0, 0.499923,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0223002);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507578,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47643,-99) , 
0, 0.500675, 1, 0, 0.497273,-99) , 
NN(
0, 
0, 
-1, -0.0698819, 0, -1, 0.47644,-99) , 
0, 0.499041, 0, 0, 0.486181,-99) , 
3, 4.55086, 1, 0, 0.503575,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0216335);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467398,-99) , 
0, 0.489655, 0, 0, 0.512639,-99) , 
NN(
0, 
0, 
-1, 0.904762, 1, -1, 0.494598,-99) , 
0, 0.496185, 1, 0, 0.50044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441503,-99) , 
1, 0.0121806, 1, 0, 0.498934,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0199457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494923,-99) , 
3, 0.91393, 1, 0, 0.499649,-99) , 
3, 8.54447, 0, 0, 0.501108,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.47359,-99) , 
4, 0.999524, 0, 0, 0.499612,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0268946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714073, 0, 1, 0.509176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484552,-99) , 
5, -0.142977, 1, 0, 0.497503,-99) , 
0, 0.499992, 1, 0, 0.505291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473522,-99) , 
3, 4.54236, 1, 0, 0.502645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465832,-99) , 
5, -0.523874, 0, 0, 0.491653,-99) , 
2, 0.0675429, 1, 0, 0.503115,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0321815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493331,-99) , 
1, -0.0046042, 1, 0, 0.500916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421387,-99) , 
1, -0.0105872, 0, 0, 0.498311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456048,-99) , 
1, 0.0103564, 1, 0, 0.496841,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0255956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498315,-99) , 
5, 0.428405, 0, 0, 0.505776,-99) , 
1, -0.00621516, 1, 0, 0.508675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485204,-99) , 
2, -0.068564, 1, 0, 0.490313,-99) , 
0, 0.496685, 0, 0, 0.494204,-99) , 
0, 0.497138, 0, 0, 0.502793,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.025242);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.512215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475598,-99) , 
3, 8.79022, 1, 0, 0.511002,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0210724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492246,-99) , 
3, 1.35579, 1, 0, 0.497083,-99) , 
4, 0.999048, 1, 0, 0.499611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463829,-99) , 
3, 8.83068, 1, 0, 0.498473,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0157181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.98555, 0, 1, 0.505861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468778,-99) , 
4, 0.999774, 0, 0, 0.504482,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.474806,-99) , 
4, 0.999524, 0, 0, 0.502781,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0245892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495655,-99) , 
4, 0.999955, 0, 0, 0.507702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465224,-99) , 
4, 0.999048, 0, 0, 0.506265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432433,-99) , 
1, -0.0104756, 0, 0, 0.50374,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.029058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489271,-99) , 
3, 2.73402, 1, 0, 0.518729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47932,-99) , 
5, 0.713981, 1, 0, 0.509484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471655,-99) , 
0, 0.494283, 0, 0, 0.510646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490798,-99) , 
4, 0.999524, 1, 0, 0.492415,-99) , 
3, 4.42173, 0, 0, 0.495625,-99) , 
2, 0.0716687, 0, 0, 0.497699,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0203027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499732,-99) , 
3, 3.21859, 1, 0, 0.527842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468642,-99) , 
0, 0.503532, 1, 0, 0.501698,-99) , 
5, 0.428571, 1, 0, 0.518988,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00610972, 1, 1, 0.502485,-99) , 
NN(
0, 
0, 
-1, 1.92273, 1, -1, 0.467368,-99) , 
5, -0.904737, 0, 0, 0.499257,-99) , 
0, 0.5019, 0, 0, 0.503227,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0220497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.33796, 1, 1, 0.525379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480516,-99) , 
5, -0.714267, 0, 0, 0.516045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493958,-99) , 
2, 0.0451688, 0, 0, 0.49587,-99) , 
NN(
0, 
0, 
-1, -0.238104, 0, -1, 0.482761,-99) , 
2, -0.075763, 0, 0, 0.493495,-99) , 
2, 0.0736227, 0, 0, 0.496771,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.00845482);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505706, 0, 1, 0.502788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454288,-99) , 
4, 0.999048, 0, 0, 0.501162,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.00972316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499616,-99) , 
0, 0.505709, 0, 0, 0.501234,-99) , 
4, 0.999048, 1, 0, 0.502683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458916,-99) , 
2, -0.21213, 0, 0, 0.500983,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0166934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.22146, 0, 1, 0.506026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452509,-99) , 
4, 0.999566, 1, 0, 0.48195,-99) , 
4, 0.999773, 0, 0, 0.50462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469218,-99) , 
4, 0.999048, 0, 0, 0.503369,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0247966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0760083, 1, 1, 0.51236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490485,-99) , 
0, 0.490476, 1, 0, 0.492911,-99) , 
3, 2.11862, 1, 0, 0.502896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467676,-99) , 
3, 8.54447, 1, 0, 0.501634,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0230609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498821,-99) , 
0, 0.499632, 1, 0, 0.507751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488556,-99) , 
0, 0.491696, 1, 0, 0.493453,-99) , 
0, 0.497138, 0, 0, 0.501941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458379,-99) , 
2, -0.21361, 0, 0, 0.500265,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0338192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474242,-99) , 
2, -0.0333364, 0, 0, 0.510167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489966,-99) , 
2, -0.0703899, 1, 0, 0.493154,-99) , 
5, -0.0476189, 1, 0, 0.500325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481495,-99) , 
5, -0.237919, 1, 0, 0.499507,-99) , 
NN(
0, 
0, 
-1, -0.0476636, 0, -1, 0.480355,-99) , 
0, 0.491287, 1, 0, 0.484488,-99) , 
0, 0.496185, 0, 0, 0.495198,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0149956);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.03197, 0, 1, 0.506938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47695,-99) , 
4, 0.999048, 0, 0, 0.505897,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0270919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482465,-99) , 
5, -0.637181, 0, 0, 0.516958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490661,-99) , 
2, -0.00196827, 1, 0, 0.502215,-99) , 
2, 0.0727477, 0, 0, 0.504392,-99) , 
NN(
0, 
0, 
-1, 0.945589, 1, -1, 0.47251,-99) , 
5, 0.904761, 1, 0, 0.502591,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0159103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00350201, 0, 1, 0.503872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462085,-99) , 
5, -0.954632, 0, 0, 0.481512,-99) , 
5, -0.904739, 0, 0, 0.501846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481233,-99) , 
5, 0.528653, 1, 0, 0.501555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456448,-99) , 
5, -0.238078, 0, 0, 0.479956,-99) , 
0, 0.503804, 1, 0, 0.499614,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0134305);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534969,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.522064,-99) , 
NN(
0, 
0, 
-1, 0.0541281, 1, -1, 0.495472,-99) , 
5, 0.90452, 0, 0, 0.497045,-99) , 
2, 0.216083, 0, 0, 0.498527,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0245019);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490147,-99) , 
0, 0.499389, 1, 0, 0.501088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478533,-99) , 
2, 0.0831149, 0, 0, 0.484014,-99) , 
0, 0.493645, 0, 0, 0.498183,-99) , 
0, 0.505707, 0, 0, 0.499658,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0282761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487386,-99) , 
5, 0.809526, 1, 0, 0.506279,-99) , 
0, 0.500357, 1, 0, 0.509236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491784,-99) , 
5, -0.333601, 0, 0, 0.513594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483766,-99) , 
5, -0.428584, 1, 0, 0.489836,-99) , 
1, 0.00206901, 0, 0, 0.496653,-99) , 
0, 0.499994, 0, 0, 0.500934,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0344269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498425,-99) , 
5, 0.536449, 1, 0, 0.544285,-99) , 
NN(
0, 
0, 
-1, 0.497129, 1, -1, 0.486099,-99) , 
5, -0.619278, 0, 0, 0.520745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492907,-99) , 
0, 0.499994, 0, 0, 0.502279,-99) , 
NN(
0, 
0, 
-1, 0.111881, 1, -1, 0.485119,-99) , 
5, 0.333279, 0, 0, 0.493223,-99) , 
1, -0.00308713, 1, 0, 0.498611,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0199929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.60828, 0, 1, 0.529101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471755,-99) , 
3, 4.71105, 1, 0, 0.516925,-99) , 
NN(
NN(
0, 
0, 
-1, -0.138368, 0, 1, 0.522115,-99) , 
NN(
0, 
0, 
-1, 0.191734, 1, -1, 0.494943,-99) , 
0, 0.503804, 0, 0, 0.497827,-99) , 
5, 0.809525, 0, 0, 0.500536,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.015954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714256, 0, 1, 0.511492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456056,-99) , 
4, 0.999525, 0, 0, 0.499814,-99) , 
0, 0.497274, 1, 0, 0.504523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461061,-99) , 
0, 0.489519, 0, 0, 0.503296,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0119103);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.32446, 0, 1, 0.50466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44764,-99) , 
0, 0.498089, 0, 0, 0.474796,-99) , 
4, 0.999524, 0, 0, 0.50298,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0163335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.520491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481615,-99) , 
2, -0.0710498, 0, 0, 0.498876,-99) , 
5, 0.809387, 0, 0, 0.502003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466821,-99) , 
0, 0.490471, 0, 0, 0.500291,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0219345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492376,-99) , 
4, 0.999525, 1, 0, 0.493843,-99) , 
0, 0.490471, 1, 0, 0.495213,-99) , 
NN(
0, 
0, 
-1, 0.941008, 1, -1, 0.45835,-99) , 
5, 0.904725, 1, 0, 0.493139,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0157629);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496126,-99) , 
0, 0.495232, 1, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46947,-99) , 
4, 0.999524, 0, 0, 0.498646,-99) , 
2, 0.215546, 0, 0, 0.499861,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0340502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487419,-99) , 
5, -0.451273, 0, 0, 0.520679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493496,-99) , 
2, 0.0684877, 0, 0, 0.499052,-99) , 
1, 0.00142017, 0, 0, 0.506473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458536,-99) , 
5, -0.959185, 0, 0, 0.486176,-99) , 
5, -0.904753, 0, 0, 0.50454,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0296969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00268664, 1, 1, 0.519208,-99) , 
NN(
0, 
0, 
-1, 1.1446, 0, -1, 0.481656,-99) , 
5, -0.882088, 0, 0, 0.510859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497047,-99) , 
2, -0.0612151, 1, 0, 0.503125,-99) , 
NN(
0, 
0, 
-1, 0.903218, 0, -1, 0.481846,-99) , 
5, 0.85484, 1, 0, 0.498556,-99) , 
5, 0.238071, 1, 0, 0.505061,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0247882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.371485, 0, 1, 0.51536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499028,-99) , 
0, 0.494282, 1, 0, 0.503674,-99) , 
5, 0.455734, 1, 0, 0.508706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481929,-99) , 
3, 1.21151, 0, 0, 0.50287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460962,-99) , 
0, 0.498072, 1, 0, 0.47997,-99) , 
5, -0.809536, 1, 0, 0.491291,-99) , 
5, -0.428598, 0, 0, 0.502909,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0212902);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714207, 0, 1, 0.509729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457892,-99) , 
0, 0.489519, 0, 0, 0.508264,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0185536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.945586, 0, 1, 0.534252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476448,-99) , 
5, 0.870172, 1, 0, 0.510274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492118,-99) , 
5, -0.261436, 1, 0, 0.497101,-99) , 
5, 0.723322, 0, 0, 0.499223,-99) , 
5, 0.904761, 0, 0, 0.501381,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0198698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496855,-99) , 
5, -0.619138, 1, 0, 0.501161,-99) , 
4, 0.999524, 1, 0, 0.502515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482601,-99) , 
5, 0.142777, 1, 0, 0.503933,-99) , 
NN(
0, 
0, 
-1, 3.47761, 1, -1, 0.484977,-99) , 
3, 4.27077, 0, 0, 0.488767,-99) , 
0, 0.496186, 0, 0, 0.498096,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0163728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499531,-99) , 
0, 0.501898, 0, 0, 0.503768,-99) , 
NN(
0, 
0, 
-1, 0.584312, 0, -1, 0.490404,-99) , 
5, -0.238082, 0, 0, 0.498406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443528,-99) , 
4, 0.999049, 0, 0, 0.496625,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0340539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.95998, 1, 1, 0.516045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458848,-99) , 
3, 8.84785, 1, 0, 0.513032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474685,-99) , 
2, -0.041257, 0, 0, 0.499547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458358,-99) , 
5, -0.564639, 1, 0, 0.482328,-99) , 
3, 1.46531, 0, 0, 0.492862,-99) , 
5, 0.142834, 0, 0, 0.50296,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0190672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.03094, 0, 1, 0.506124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472643,-99) , 
4, 0.999819, 0, 0, 0.504412,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.450992,-99) , 
4, 0.999524, 0, 0, 0.501443,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0217872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.61886, 0, 1, 0.533843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481707,-99) , 
5, 0.882554, 1, 0, 0.503045,-99) , 
5, -0.233438, 1, 0, 0.506652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520299,-99) , 
NN(
0, 
0, 
-1, 0.49904, 1, -1, 0.489938,-99) , 
1, 0.00794264, 0, 0, 0.493486,-99) , 
5, -0.523793, 0, 0, 0.502645,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0222888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504666, 1, 1, 0.533454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490864,-99) , 
5, 0.564654, 1, 0, 0.498592,-99) , 
0, 0.502853, 0, 0, 0.502935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483747,-99) , 
5, -0.351478, 1, 0, 0.496445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464794,-99) , 
3, 6.17086, 1, 0, 0.494442,-99) , 
5, 0.238099, 0, 0, 0.498442,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0124945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618925, 0, 1, 0.504156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471843,-99) , 
2, 0.215968, 1, 0, 0.50298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45626,-99) , 
1, -0.0104756, 0, 0, 0.501512,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0220243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497607,-99) , 
5, 0.762655, 0, 0, 0.501679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473581,-99) , 
5, 0.918125, 1, 0, 0.5,-99) , 
NN(
0, 
0, 
-1, -0.768733, 1, -1, 0.474227,-99) , 
5, -0.714312, 0, 0, 0.494307,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0207679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49623,-99) , 
0, 0.501522, 0, 0, 0.499234,-99) , 
NN(
0, 
0, 
-1, 0.237922, 1, -1, 0.476894,-99) , 
0, 0.504666, 1, 0, 0.49711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48062,-99) , 
5, 0.68252, 1, 0, 0.49735,-99) , 
NN(
0, 
0, 
-1, 0.49088, 1, -1, 0.473428,-99) , 
5, 0.0475763, 0, 0, 0.485023,-99) , 
0, 0.495234, 0, 0, 0.494018,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0243511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00246712, 1, 1, 0.50969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472229,-99) , 
5, 0.745986, 1, 0, 0.492857,-99) , 
3, 4.48496, 1, 0, 0.505956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486027,-99) , 
5, -0.809509, 1, 0, 0.494589,-99) , 
NN(
0, 
0, 
-1, -0.904747, 1, -1, 0.472043,-99) , 
0, 0.496185, 0, 0, 0.486579,-99) , 
5, -0.333349, 0, 0, 0.498904,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0154089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.28318, 0, 1, 0.505786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473322,-99) , 
4, 0.999048, 0, 0, 0.504747,-99) , 
NN(
0, 
0, 
-1, 0.505844, 0, -1, 0.475445,-99) , 
0, 0.504756, 1, 0, 0.502726,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0130278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490103,-99) , 
5, -0.333271, 0, 0, 0.514519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469606,-99) , 
0, 0.490698, 0, 0, 0.49836,-99) , 
2, -0.0708144, 1, 0, 0.500861,-99) , 
NN(
0, 
0, 
-1, 0.428331, 1, -1, 0.477865,-99) , 
0, 0.503804, 1, 0, 0.498489,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0169714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494466,-99) , 
2, -0.205662, 1, 0, 0.495625,-99) , 
4, 0.999048, 1, 0, 0.497163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460651,-99) , 
3, 8.80985, 1, 0, 0.496039,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0198448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.510091, 1, 1, 0.518479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464474,-99) , 
3, 2.73521, 1, 0, 0.493316,-99) , 
5, -0.142951, 0, 0, 0.508426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494338,-99) , 
0, 0.492967, 1, 0, 0.49555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456094,-99) , 
0, 0.490154, 1, 0, 0.480453,-99) , 
0, 0.491424, 0, 0, 0.494541,-99) , 
2, -0.0708144, 1, 0, 0.496854,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0200316);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483995,-99) , 
3, 0.876413, 0, 0, 0.512888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40442,-99) , 
6, 0.0114676, 1, 0, 0.496747,-99) , 
5, -0.80951, 1, 0, 0.499331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483372,-99) , 
0, 0.504492, 1, 0, 0.490788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457183,-99) , 
0, 0.503758, 0, 0, 0.481478,-99) , 
0, 0.502851, 1, 0, 0.496736,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0262477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.318699, 1, 1, 0.570126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474786,-99) , 
5, -0.864317, 0, 0, 0.501446,-99) , 
5, -0.429061, 0, 0, 0.531044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490959,-99) , 
5, 0.333333, 0, 0, 0.496614,-99) , 
NN(
0, 
0, 
-1, -0.0478393, 1, -1, 0.460094,-99) , 
0, 0.491424, 0, 0, 0.493855,-99) , 
1, -0.00445233, 1, 0, 0.49849,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0204227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.527601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487575,-99) , 
0, 0.500948, 1, 0, 0.518799,-99) , 
NN(
NN(
0, 
0, 
-1, -0.015134, 1, 1, 0.52161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492619,-99) , 
0, 0.499905, 0, 0, 0.49754,-99) , 
0, 0.491424, 1, 0, 0.499354,-99) , 
5, 0.80943, 0, 0, 0.502173,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0225215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476299,-99) , 
1, 0.00240846, 1, 0, 0.513447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490809,-99) , 
5, 0.142783, 1, 0, 0.500272,-99) , 
5, 0.714204, 0, 0, 0.503257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492227,-99) , 
0, 0.491244, 0, 0, 0.500077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461819,-99) , 
5, 0.523349, 1, 0, 0.489716,-99) , 
0, 0.492377, 0, 0, 0.501858,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0197952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487435,-99) , 
3, 4.48201, 1, 0, 0.499906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458409,-99) , 
0, 0.490472, 0, 0, 0.498252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483539,-99) , 
5, -0.909286, 1, 0, 0.490397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453643,-99) , 
2, 0.0777876, 1, 0, 0.48572,-99) , 
5, -0.523793, 0, 0, 0.494523,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0222282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.0724, 0, 1, 0.505434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451378,-99) , 
0, 0.496185, 1, 0, 0.476912,-99) , 
5, 0.872917, 1, 0, 0.501563,-99) , 
NN(
0, 
0, 
-1, 5.54942, 1, -1, 0.487,-99) , 
5, -0.333361, 0, 0, 0.496222,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0222656);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488141,-99) , 
3, 0.950509, 1, 0, 0.491586,-99) , 
3, 8.74922, 0, 0, 0.492707,-99) , 
2, 0.214436, 0, 0, 0.493908,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0356587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.38868, 0, 1, 0.51136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445632,-99) , 
3, 2.63329, 1, 0, 0.486421,-99) , 
2, 0.0466494, 1, 0, 0.506106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533472,-99) , 
NN(
0, 
0, 
-1, 0.00490579, 1, -1, 0.485199,-99) , 
0, 0.503804, 0, 0, 0.489267,-99) , 
5, 0.238075, 1, 0, 0.498176,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0221322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.72781, 0, 1, 0.50748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477016,-99) , 
5, -0.904766, 0, 0, 0.504735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490877,-99) , 
5, 0.773065, 1, 0, 0.503404,-99) , 
NN(
0, 
0, 
-1, -0.129411, 1, -1, 0.485002,-99) , 
5, 0.523618, 0, 0, 0.491014,-99) , 
0, 0.497137, 0, 0, 0.499138,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0241385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495668, 1, 1, 0.509651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474963,-99) , 
0, 0.494386, 1, 0, 0.496779,-99) , 
0, 0.495098, 0, 0, 0.503221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488028,-99) , 
0, 0.503528, 0, 0, 0.495135,-99) , 
NN(
0, 
0, 
-1, 0.000918822, 0, -1, 0.480357,-99) , 
5, 0.142444, 1, 0, 0.487745,-99) , 
0, 0.49809, 1, 0, 0.495373,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0231457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.509773,-99) , 
NN(
0, 
0, 
-1, 0.492375, 0, -1, 0.494884,-99) , 
2, 0.00400535, 0, 0, 0.502668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471593,-99) , 
0, 0.499046, 0, 0, 0.494003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442161,-99) , 
5, -0.714277, 0, 0, 0.483103,-99) , 
2, -0.0708144, 0, 0, 0.499505,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0214648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494822,-99) , 
5, 0.714081, 0, 0, 0.497681,-99) , 
4, 0.999048, 1, 0, 0.499158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51877,-99) , 
NN(
0, 
0, 
-1, 0.714285, 1, -1, 0.473372,-99) , 
2, -0.0718028, 1, 0, 0.482081,-99) , 
0, 0.5019, 1, 0, 0.495706,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0151539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499119,-99) , 
0, 0.495324, 0, 0, 0.507869,-99) , 
NN(
0, 
0, 
-1, 0.498136, 0, -1, 0.49559,-99) , 
0, 0.497138, 1, 0, 0.500537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456303,-99) , 
2, 0.215886, 1, 0, 0.498985,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0178675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.941051, 0, 1, 0.529052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497071,-99) , 
0, 0.501492, 0, 0, 0.501717,-99) , 
5, 0.904761, 0, 0, 0.503401,-99) , 
NN(
0, 
0, 
-1, 0.523629, 0, -1, 0.482128,-99) , 
0, 0.493329, 0, 0, 0.500307,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0208046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481378,-99) , 
1, 0.00415307, 1, 0, 0.511681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498457,-99) , 
3, 3.94857, 0, 0, 0.501589,-99) , 
5, 0.333307, 0, 0, 0.506038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438069,-99) , 
1, -0.0104756, 0, 0, 0.503792,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0352213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.86405, 1, 1, 0.522995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467625,-99) , 
5, -0.836762, 1, 0, 0.482617,-99) , 
3, 1.02011, 0, 0, 0.512353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49106,-99) , 
1, -0.00513252, 1, 0, 0.495909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417803,-99) , 
6, 0.00980744, 1, 0, 0.49289,-99) , 
5, -0.428571, 1, 0, 0.499327,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0379077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402563,-99) , 
6, 0.0106494, 1, 0, 0.512167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467902,-99) , 
3, 3.43822, 1, 0, 0.498319,-99) , 
5, -0.619055, 0, 0, 0.508414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476763,-99) , 
2, -0.2119, 0, 0, 0.507094,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0148709);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.54447, 0, 1, 0.506233,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.472327,-99) , 
4, 0.999524, 0, 0, 0.504333,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0176399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486551,-99) , 
5, -0.96371, 0, 0, 0.510792,-99) , 
NN(
0, 
0, 
-1, -0.269828, 0, -1, 0.494647,-99) , 
5, -0.904753, 1, 0, 0.49617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436765,-99) , 
1, -0.0104756, 0, 0, 0.494167,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0112341);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.143003, 1, 1, 0.51597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498684,-99) , 
4, 0.999524, 1, 0, 0.501232,-99) , 
3, 8.80985, 0, 0, 0.502357,-99) , 
0, 0.491424, 1, 0, 0.503386,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0249101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485311,-99) , 
5, -0.941025, 0, 0, 0.515322,-99) , 
NN(
0, 
0, 
-1, 0.346794, 0, -1, 0.496251,-99) , 
5, 0.237948, 1, 0, 0.506069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491687,-99) , 
3, 1.73027, 0, 0, 0.501225,-99) , 
NN(
0, 
0, 
-1, -0.305794, 0, -1, 0.483144,-99) , 
5, -0.52379, 1, 0, 0.489021,-99) , 
0, 0.499994, 1, 0, 0.500294,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.00965453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499514,-99) , 
0, 0.491424, 1, 0, 0.501396,-99) , 
4, 0.999048, 1, 0, 0.503029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467625,-99) , 
3, 8.7322, 1, 0, 0.501878,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0273807);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00269892, 0, 1, 0.513386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474602,-99) , 
3, 0.717532, 0, 0, 0.500148,-99) , 
NN(
0, 
0, 
-1, 2.42991, 1, -1, 0.46586,-99) , 
2, -0.0638239, 0, 0, 0.493951,-99) , 
5, 0.0476191, 0, 0, 0.504272,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0316881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.01738, 0, 1, 0.53087,-99) , 
NN(
0, 
0, 
-1, -0.891059, 1, -1, 0.487619,-99) , 
5, -0.71421, 0, 0, 0.516137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489208,-99) , 
5, 0.809526, 0, 0, 0.49387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453643,-99) , 
4, 0.999048, 0, 0, 0.492408,-99) , 
1, 0.00328721, 0, 0, 0.496924,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0198297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.23288, 0, 1, 0.506883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443867,-99) , 
0, 0.498091, 0, 0, 0.474025,-99) , 
4, 0.999524, 0, 0, 0.504921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472097,-99) , 
5, -0.959186, 0, 0, 0.491513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451029,-99) , 
0, 0.500953, 1, 0, 0.479893,-99) , 
5, -0.904756, 0, 0, 0.502545,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0176026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489493,-99) , 
2, 0.0117383, 0, 0, 0.521988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493516,-99) , 
0, 0.502443, 1, 0, 0.503796,-99) , 
1, -0.00621516, 1, 0, 0.505173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468363,-99) , 
0, 0.48952, 0, 0, 0.504151,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0240505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468636,-99) , 
4, 0.999955, 0, 0, 0.512284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494704,-99) , 
2, -0.107391, 1, 0, 0.497788,-99) , 
3, 4.32764, 0, 0, 0.500719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461321,-99) , 
4, 0.999048, 0, 0, 0.49942,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0422391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491725,-99) , 
6, 0.00342784, 0, 0, 0.50917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445683,-99) , 
6, 0.010283, 1, 0, 0.506505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495163,-99) , 
3, 2.0463, 1, 0, 0.504926,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.468243,-99) , 
3, 0.918654, 0, 0, 0.496053,-99) , 
5, -0.619065, 0, 0, 0.503739,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0268156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999525, 1, 1, 0.511769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465536,-99) , 
5, 0.941051, 1, 0, 0.485573,-99) , 
5, 0.904761, 1, 0, 0.510256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480816,-99) , 
5, 0.237864, 0, 0, 0.492746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46279,-99) , 
0, 0.491468, 1, 0, 0.4839,-99) , 
0, 0.492375, 0, 0, 0.50745,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0192063);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498359,-99) , 
0, 0.490334, 0, 0, 0.522311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494797,-99) , 
0, 0.501808, 0, 0, 0.498531,-99) , 
0, 0.492375, 1, 0, 0.500952,-99) , 
2, -0.210652, 1, 0, 0.502534,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0205566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495136, 0, 1, 0.510745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490261,-99) , 
1, 0.000160057, 0, 0, 0.498116,-99) , 
0, 0.498635, 1, 0, 0.504676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472692,-99) , 
0, 0.490471, 0, 0, 0.503119,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.024435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.3056, 1, 1, 0.508989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488299,-99) , 
1, -0.00721094, 1, 0, 0.492075,-99) , 
5, 0.142846, 0, 0, 0.500263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460756,-99) , 
3, 8.28192, 1, 0, 0.498771,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0217606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46468,-99) , 
2, 0.131539, 1, 0, 0.507176,-99) , 
NN(
0, 
0, 
-1, 0.809526, 1, -1, 0.490465,-99) , 
0, 0.500948, 1, 0, 0.502837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464207,-99) , 
2, 0.212869, 1, 0, 0.501379,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0244352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480241,-99) , 
2, -0.123605, 0, 0, 0.510528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48719,-99) , 
0, 0.501491, 0, 0, 0.496605,-99) , 
5, 0.714072, 1, 0, 0.507636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495946,-99) , 
3, 1.37214, 0, 0, 0.513635,-99) , 
NN(
0, 
0, 
-1, 0.523751, 0, -1, 0.490749,-99) , 
5, -0.428579, 1, 0, 0.497991,-99) , 
0, 0.499042, 0, 0, 0.502041,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0142865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215377, 1, 1, 0.504662,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.485213,-99) , 
5, 0.904763, 1, 0, 0.503503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43776,-99) , 
1, -0.0104756, 0, 0, 0.501337,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0184701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904521, 0, 1, 0.506479,-99) , 
NN(
0, 
0, 
-1, 0.493341, 0, -1, 0.490869,-99) , 
0, 0.496866, 0, 0, 0.49987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469819,-99) , 
3, 2.57365, 1, 0, 0.487444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454817,-99) , 
5, 0.523823, 1, 0, 0.479174,-99) , 
0, 0.503805, 1, 0, 0.497746,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0275493);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498566,-99) , 
0, 0.500938, 1, 0, 0.523502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494765,-99) , 
3, 0.491049, 1, 0, 0.497776,-99) , 
3, 4.32205, 0, 0, 0.502726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486362,-99) , 
0, 0.494297, 1, 0, 0.497968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456968,-99) , 
3, 4.41757, 1, 0, 0.488513,-99) , 
5, 0.714255, 1, 0, 0.499629,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0154454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.03064, 1, 1, 0.507686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494418,-99) , 
2, 0.132625, 0, 0, 0.495874,-99) , 
0, 0.496185, 1, 0, 0.499702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471694,-99) , 
2, 0.214267, 1, 0, 0.49869,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0314667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0723311, 0, 1, 0.517256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480826,-99) , 
2, -0.0693893, 1, 0, 0.492439,-99) , 
0, 0.492602, 0, 0, 0.511405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496555,-99) , 
5, 0.183785, 1, 0, 0.506435,-99) , 
NN(
0, 
0, 
-1, -0.700677, 1, -1, 0.483598,-99) , 
5, -0.428553, 0, 0, 0.498695,-99) , 
0, 0.498089, 1, 0, 0.504923,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0290798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.224395, 0, 1, 0.508965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469561,-99) , 
2, -0.0033851, 1, 0, 0.491002,-99) , 
5, 0.428462, 1, 0, 0.501966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471737,-99) , 
5, 0.704881, 1, 0, 0.496008,-99) , 
NN(
0, 
0, 
-1, 2.87106, 1, -1, 0.461136,-99) , 
5, -0.238235, 0, 0, 0.483136,-99) , 
2, 0.0715145, 1, 0, 0.499134,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0198502);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.940943, 1, 1, 0.541874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477653,-99) , 
3, 5.47355, 1, 0, 0.501007,-99) , 
2, 0.213335, 0, 0, 0.50279,-99) , 
5, 0.904661, 0, 0, 0.505286,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0281336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470321,-99) , 
5, 0.81377, 1, 0, 0.504687,-99) , 
5, 0.904531, 0, 0, 0.506316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483531,-99) , 
1, 0.00751948, 0, 0, 0.48599,-99) , 
0, 0.489609, 1, 0, 0.48857,-99) , 
0, 0.49809, 0, 0, 0.497648,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0658179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472403,-99) , 
4, 0.999997, 0, 0, 0.502606,-99) , 
NN(
0, 
0, 
-1, 0.999893, 1, -1, 0.477561,-99) , 
4, 0.999932, 0, 0, 0.499218,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.460003,-99) , 
4, 0.999524, 0, 0, 0.497124,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0135226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499723,-99) , 
2, -0.0918156, 1, 0, 0.501673,-99) , 
4, 0.999048, 1, 0, 0.502941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462087,-99) , 
2, -0.0610168, 0, 0, 0.490106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449478,-99) , 
5, 0.714289, 1, 0, 0.480022,-99) , 
3, 4.55258, 1, 0, 0.49871,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.025778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494399,-99) , 
2, -0.00109283, 0, 0, 0.507798,-99) , 
2, 0.0735551, 0, 0, 0.514092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480834,-99) , 
4, 0.999524, 0, 0, 0.505337,-99) , 
NN(
0, 
0, 
-1, 5.87179, 1, -1, 0.490242,-99) , 
5, 0.52363, 0, 0, 0.495872,-99) , 
1, -0.00178541, 1, 0, 0.501289,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0204094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498153,-99) , 
1, -0.00460009, 1, 0, 0.503544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411258,-99) , 
1, -0.010586, 0, 0, 0.500392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476175,-99) , 
1, 0.0103564, 1, 0, 0.499502,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0203296);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489609, 1, 1, 0.523877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495531,-99) , 
5, 0.650814, 1, 0, 0.504797,-99) , 
NN(
0, 
0, 
-1, 0.206307, 1, -1, 0.491864,-99) , 
5, 0.333337, 0, 0, 0.497507,-99) , 
0, 0.491423, 1, 0, 0.499447,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0241306);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498356,-99) , 
0, 0.500269, 1, 0, 0.517288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485323,-99) , 
5, 0.551013, 1, 0, 0.505994,-99) , 
5, 0.71429, 0, 0, 0.508493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486313,-99) , 
0, 0.490472, 0, 0, 0.507407,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0285592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490928,-99) , 
5, 0.590836, 1, 0, 0.542762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470453,-99) , 
3, 1.98044, 1, 0, 0.498073,-99) , 
5, -0.714461, 0, 0, 0.527101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494763,-99) , 
3, 4.54871, 1, 0, 0.529475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499424,-99) , 
5, -0.827641, 1, 0, 0.502623,-99) , 
5, 0.809526, 0, 0, 0.506975,-99) , 
1, -0.00308713, 1, 0, 0.510846,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0254964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47845,-99) , 
4, 0.999524, 0, 0, 0.508005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486903,-99) , 
5, 0.808557, 0, 0, 0.490886,-99) , 
0, 0.497818, 0, 0, 0.500496,-99) , 
0, 0.490471, 1, 0, 0.50225,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0431431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474823,-99) , 
5, 0.81337, 0, 0, 0.512896,-99) , 
5, 0.755036, 1, 0, 0.519115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474994,-99) , 
4, 0.999994, 0, 0, 0.498788,-99) , 
4, 0.999881, 1, 0, 0.50024,-99) , 
5, 0.714204, 0, 0, 0.504391,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0224995);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.21361, 1, 1, 0.509139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479971,-99) , 
3, 1.15037, 0, 0, 0.499362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460562,-99) , 
3, 4.55247, 1, 0, 0.494362,-99) , 
5, -0.619047, 0, 0, 0.50521,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0186408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497353,-99) , 
1, -0.00312625, 1, 0, 0.502206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461601,-99) , 
1, -0.00924958, 0, 0, 0.500529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438649,-99) , 
1, 0.0121806, 1, 0, 0.498946,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0253457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.430112, 1, 1, 0.515428,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.475097,-99) , 
5, 0.841249, 1, 0, 0.504857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482196,-99) , 
3, 3.4795, 1, 0, 0.495214,-99) , 
NN(
0, 
0, 
-1, 0.497143, 1, -1, 0.47146,-99) , 
5, 0.0793282, 1, 0, 0.491287,-99) , 
5, 0.33331, 0, 0, 0.497054,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0249414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489967,-99) , 
3, 4.54421, 1, 0, 0.508123,-99) , 
0, 0.490064, 1, 0, 0.510771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493082,-99) , 
5, 0.451092, 1, 0, 0.500646,-99) , 
NN(
0, 
0, 
-1, 5.13548, 1, -1, 0.485964,-99) , 
5, -0.0477215, 0, 0, 0.494397,-99) , 
0, 0.496186, 1, 0, 0.499732,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0197325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496823,-99) , 
0, 0.492058, 1, 0, 0.499349,-99) , 
5, 0.904521, 0, 0, 0.501332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498478,-99) , 
0, 0.503166, 1, 0, 0.513092,-99) , 
NN(
0, 
0, 
-1, 1.36085, 0, -1, 0.479433,-99) , 
3, 4.43942, 0, 0, 0.486765,-99) , 
0, 0.500946, 1, 0, 0.497507,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.00947294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462459,-99) , 
3, 8.9721, 1, 0, 0.500517,-99) , 
NN(
0, 
0, 
-1, 1.853, 1, -1, 0.478275,-99) , 
5, -0.904751, 0, 0, 0.498376,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0289138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.332994, 0, 1, 0.525016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474679,-99) , 
0, 0.493329, 0, 0, 0.514427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489086,-99) , 
0, 0.499995, 1, 0, 0.501018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481164,-99) , 
3, 3.34569, 0, 0, 0.487734,-99) , 
2, -0.00282056, 1, 0, 0.495066,-99) , 
2, 0.071981, 0, 0, 0.497995,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0130793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499831,-99) , 
4, 0.999524, 1, 0, 0.501828,-99) , 
3, 8.83364, 0, 0, 0.502743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466738,-99) , 
2, 0.0640459, 0, 0, 0.479026,-99) , 
5, -0.809516, 1, 0, 0.486764,-99) , 
0, 0.493327, 0, 0, 0.500407,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0134502);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.56258, 0, 1, 0.505674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456738,-99) , 
0, 0.49714, 1, 0, 0.47834,-99) , 
4, 0.999524, 0, 0, 0.504149,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0316238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495823, 1, 1, 0.514614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480727,-99) , 
0, 0.503486, 0, 0, 0.487847,-99) , 
5, -0.714308, 0, 0, 0.508884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484475,-99) , 
2, -0.0754161, 1, 0, 0.489554,-99) , 
5, -0.809502, 1, 0, 0.495903,-99) , 
0, 0.495233, 0, 0, 0.505581,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0215685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477525,-99) , 
3, 2.10099, 0, 0, 0.497016,-99) , 
5, 0.333343, 0, 0, 0.51442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493808,-99) , 
1, -0.00340812, 1, 0, 0.496472,-99) , 
NN(
0, 
0, 
-1, -0.714039, 0, -1, 0.479738,-99) , 
2, -0.0712385, 0, 0, 0.49392,-99) , 
0, 0.503802, 0, 0, 0.496059,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0239755);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497125,-99) , 
5, 0.773119, 1, 0, 0.528833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494015,-99) , 
2, 0.00572555, 0, 0, 0.503151,-99) , 
2, -0.0689724, 1, 0, 0.507567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494919,-99) , 
3, 4.70415, 0, 0, 0.498713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453576,-99) , 
3, 5.78031, 1, 0, 0.495279,-99) , 
5, 0.0475775, 0, 0, 0.501758,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0238448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498364, 0, 1, 0.527977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479117,-99) , 
5, 0.813967, 1, 0, 0.506085,-99) , 
5, 0.904671, 0, 0, 0.507477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447277,-99) , 
0, 0.490153, 1, 0, 0.479137,-99) , 
0, 0.491424, 0, 0, 0.505406,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0116358);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.238093, 0, 1, 0.522065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499946,-99) , 
2, -0.219597, 1, 0, 0.501589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464993,-99) , 
4, 0.999524, 0, 0, 0.500149,-99) , 
2, 0.0733455, 0, 0, 0.503384,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0154159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809573, 1, 1, 0.512089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476946,-99) , 
5, -0.714261, 0, 0, 0.496432,-99) , 
0, 0.503622, 1, 0, 0.507015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483137,-99) , 
5, -0.809536, 0, 0, 0.497552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471773,-99) , 
3, 3.3492, 0, 0, 0.480946,-99) , 
0, 0.498815, 1, 0, 0.494965,-99) , 
0, 0.499994, 0, 0, 0.499034,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.00966417);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499284,-99) , 
3, 8.20737, 0, 0, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463303,-99) , 
4, 0.999524, 0, 0, 0.499191,-99) , 
2, 0.214436, 0, 0, 0.500442,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0149317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498472,-99) , 
2, 0.0310069, 0, 0, 0.502687,-99) , 
2, -0.213764, 1, 0, 0.503797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434797,-99) , 
1, 0.0121806, 1, 0, 0.502037,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0270187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.141413, 0, 1, 0.546352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495384,-99) , 
2, -0.204884, 1, 0, 0.503249,-99) , 
0, 0.500952, 0, 0, 0.516422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488693,-99) , 
0, 0.500943, 1, 0, 0.505142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480123,-99) , 
2, 0.00560716, 0, 0, 0.492247,-99) , 
5, 0.0476241, 1, 0, 0.498262,-99) , 
2, -0.0690844, 1, 0, 0.50126,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0175589);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498435,-99) , 
2, -0.0186803, 1, 0, 0.504355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457646,-99) , 
2, -0.275085, 0, 0, 0.503125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455604,-99) , 
2, 0.214436, 1, 0, 0.501361,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0144314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.536234, 1, 1, 0.504722,-99) , 
NN(
0, 
0, 
-1, -0.510215, 1, -1, 0.491505,-99) , 
5, -0.428563, 0, 0, 0.500175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455675,-99) , 
3, 8.81105, 1, 0, 0.498787,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.015239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.45555, 0, 1, 0.506053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468031,-99) , 
3, 5.82088, 1, 0, 0.503627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469562,-99) , 
0, 0.504755, 1, 0, 0.499293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458869,-99) , 
0, 0.500952, 0, 0, 0.470381,-99) , 
5, 0.183692, 0, 0, 0.494262,-99) , 
5, -0.142857, 1, 0, 0.498076,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0190604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.29702, 0, 1, 0.503165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458553,-99) , 
4, 0.999524, 0, 0, 0.500977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48201,-99) , 
0, 0.495797, 1, 0, 0.50142,-99) , 
NN(
0, 
0, 
-1, 0.493154, 1, -1, 0.481522,-99) , 
0, 0.49537, 0, 0, 0.485373,-99) , 
0, 0.496186, 0, 0, 0.495834,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.012684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497162,-99) , 
3, 7.9925, 0, 0, 0.498854,-99) , 
4, 0.999048, 1, 0, 0.50013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469685,-99) , 
0, 0.505709, 1, 0, 0.498937,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0247905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00880851, 0, 1, 0.505282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484357,-99) , 
1, 0.00101908, 0, 0, 0.495365,-99) , 
5, -0.455802, 1, 0, 0.498771,-99) , 
NN(
0, 
0, 
-1, 0.497137, 1, -1, 0.474343,-99) , 
5, 0.904671, 1, 0, 0.497369,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0179979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49563,-99) , 
3, 1.69385, 1, 0, 0.501921,-99) , 
4, 0.999048, 1, 0, 0.503146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464936,-99) , 
3, 8.51999, 1, 0, 0.501828,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0151335);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498739,-99) , 
0, 0.498996, 1, 0, 0.504514,-99) , 
NN(
0, 
0, 
-1, -0.714267, 0, -1, 0.488286,-99) , 
2, 0.0727477, 1, 0, 0.502215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456343,-99) , 
0, 0.489519, 0, 0, 0.500861,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0253475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.510742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474522,-99) , 
1, 0.000747646, 0, 0, 0.488194,-99) , 
5, 0.841183, 1, 0, 0.504781,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497143, 0, 1, 0.523124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479593,-99) , 
3, 1.88775, 0, 0, 0.490595,-99) , 
2, 0.0979557, 0, 0, 0.49387,-99) , 
5, 0.333273, 0, 0, 0.49854,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0281966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486414,-99) , 
5, 0.238036, 1, 0, 0.498376,-99) , 
4, 0.999524, 1, 0, 0.501472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453278,-99) , 
0, 0.494292, 0, 0, 0.492279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447749,-99) , 
2, 0.0732142, 1, 0, 0.480457,-99) , 
3, 4.51103, 1, 0, 0.497469,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0119361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498855,-99) , 
0, 0.490471, 1, 0, 0.500607,-99) , 
NN(
0, 
0, 
-1, 0.498087, 0, -1, 0.465754,-99) , 
4, 0.999773, 0, 0, 0.498587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452603,-99) , 
4, 0.999048, 0, 0, 0.497138,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0153347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498377,-99) , 
0, 0.499321, 0, 0, 0.502973,-99) , 
0, 0.493102, 1, 0, 0.504398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507077,-99) , 
NN(
0, 
0, 
-1, -0.237406, 1, -1, 0.474024,-99) , 
0, 0.489428, 1, 0, 0.482236,-99) , 
0, 0.492376, 0, 0, 0.502104,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0245436);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496811,-99) , 
3, 1.30388, 1, 0, 0.507203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467229,-99) , 
3, 8.35045, 1, 0, 0.504606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49336,-99) , 
2, -0.0918156, 1, 0, 0.496478,-99) , 
NN(
0, 
0, 
-1, 0.496196, 1, -1, 0.471495,-99) , 
3, 4.56237, 1, 0, 0.49249,-99) , 
5, 0.238095, 0, 0, 0.498142,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0274834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00468815, 1, 1, 0.515192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468946,-99) , 
3, 2.18446, 1, 0, 0.485961,-99) , 
5, -0.619038, 0, 0, 0.507456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495732,-99) , 
3, 4.5397, 0, 0, 0.504381,-99) , 
NN(
0, 
0, 
-1, 5.4276, 1, -1, 0.486808,-99) , 
5, 0.619055, 0, 0, 0.491661,-99) , 
0, 0.498089, 1, 0, 0.499345,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0237653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479629,-99) , 
3, 4.9567, 1, 0, 0.504001,-99) , 
3, 8.57057, 0, 0, 0.505698,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.471074,-99) , 
4, 0.999524, 0, 0, 0.503775,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0156964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499129,-99) , 
2, 0.0242469, 0, 0, 0.503578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470306,-99) , 
2, 0.0336023, 1, 0, 0.490278,-99) , 
3, 4.53295, 1, 0, 0.501231,-99) , 
2, -0.210706, 1, 0, 0.502593,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0135503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497028,-99) , 
3, 1.78627, 1, 0, 0.530517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496618,-99) , 
3, 0.546103, 1, 0, 0.498103,-99) , 
4, 0.999524, 1, 0, 0.499845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467334,-99) , 
3, 8.83996, 1, 0, 0.498774,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0230335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25634, 0, 1, 0.537507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462843,-99) , 
4, 0.999048, 0, 0, 0.505598,-99) , 
5, -0.809538, 1, 0, 0.510266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522608,-99) , 
NN(
0, 
0, 
-1, -0.078145, 0, -1, 0.493641,-99) , 
0, 0.492374, 1, 0, 0.496774,-99) , 
1, -0.00178541, 0, 0, 0.506246,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0206066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.464853, 1, 1, 0.50672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476569,-99) , 
3, 2.59376, 1, 0, 0.49195,-99) , 
5, -0.809523, 0, 0, 0.504324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48952,-99) , 
5, 0.237964, 1, 0, 0.513596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473464,-99) , 
5, 0.333272, 0, 0, 0.487084,-99) , 
0, 0.491604, 1, 0, 0.495276,-99) , 
0, 0.495232, 0, 0, 0.502006,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0123729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499304,-99) , 
5, 0.940762, 1, 0, 0.514892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493881,-99) , 
2, -0.0302427, 1, 0, 0.496148,-99) , 
5, 0.904476, 0, 0, 0.497231,-99) , 
2, 0.214776, 0, 0, 0.498156,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.010518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493288,-99) , 
5, 0.945586, 1, 0, 0.525899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489341,-99) , 
2, -0.0748489, 0, 0, 0.499123,-99) , 
0, 0.505706, 0, 0, 0.500395,-99) , 
5, 0.904762, 0, 0, 0.501942,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0263289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.673484, 1, 1, 0.512681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491689,-99) , 
1, 0.00763591, 0, 0, 0.495949,-99) , 
5, 0.61902, 0, 0, 0.500804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431578,-99) , 
1, -0.0121037, 0, 0, 0.499013,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0168274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498867,-99) , 
0, 0.499995, 0, 0, 0.503666,-99) , 
3, 8.54447, 0, 0, 0.505345,-99) , 
NN(
0, 
0, 
-1, 0.497136, 1, -1, 0.464706,-99) , 
4, 0.999524, 0, 0, 0.50306,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0254886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714254, 0, 1, 0.538377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488818,-99) , 
0, 0.489518, 0, 0, 0.52867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47297,-99) , 
2, -0.196894, 0, 0, 0.505845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46133,-99) , 
2, 0.210061, 1, 0, 0.504368,-99) , 
0, 0.493327, 1, 0, 0.507902,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0224941);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.531982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492807,-99) , 
3, 0.539025, 1, 0, 0.494737,-99) , 
3, 8.56866, 0, 0, 0.497094,-99) , 
4, 0.999524, 1, 0, 0.499156,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.00914889);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.904763, 0, 1, 0.503506,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.477658,-99) , 
4, 0.999524, 0, 0, 0.50204,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.022097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49326,-99) , 
0, 0.496464, 1, 0, 0.520073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490596,-99) , 
0, 0.495778, 0, 0, 0.500214,-99) , 
2, -0.0739901, 1, 0, 0.503116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510061,-99) , 
NN(
0, 
0, 
-1, 0.504167, 0, -1, 0.482677,-99) , 
0, 0.502444, 1, 0, 0.487238,-99) , 
0, 0.5019, 1, 0, 0.499953,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0105201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469594,-99) , 
4, 0.999819, 0, 0, 0.498737,-99) , 
4, 0.999048, 1, 0, 0.499839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449528,-99) , 
3, 8.95508, 1, 0, 0.498423,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0329506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486157,-99) , 
2, 0.0532436, 1, 0, 0.512157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447161,-99) , 
2, -0.0918156, 0, 0, 0.504871,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491216,-99) , 
5, 0.637139, 1, 0, 0.499593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483453,-99) , 
2, -0.0803575, 1, 0, 0.487221,-99) , 
5, 0.492016, 0, 0, 0.493598,-99) , 
5, -0.523834, 1, 0, 0.496962,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0245755);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490495,-99) , 
2, 0.0797291, 1, 0, 0.514161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495563,-99) , 
3, 0.918408, 1, 0, 0.499459,-99) , 
3, 4.44883, 0, 0, 0.501869,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467469,-99) , 
3, 4.55402, 1, 0, 0.497286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426151,-99) , 
5, -0.714373, 0, 0, 0.483035,-99) , 
2, -0.0697417, 0, 0, 0.498788,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0233567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496792,-99) , 
0, 0.491153, 0, 0, 0.522002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494153,-99) , 
5, -0.523827, 0, 0, 0.511853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483767,-99) , 
3, 4.17281, 1, 0, 0.505082,-99) , 
NN(
0, 
0, 
-1, -0.0675065, 0, -1, 0.490752,-99) , 
0, 0.500812, 0, 0, 0.495351,-99) , 
0, 0.49333, 1, 0, 0.497738,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0153267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491788,-99) , 
0, 0.492279, 0, 0, 0.503901,-99) , 
0, 0.495777, 0, 0, 0.507545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486344,-99) , 
0, 0.497818, 0, 0, 0.49797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470091,-99) , 
5, 0.904762, 1, 0, 0.496413,-99) , 
0, 0.496185, 1, 0, 0.500073,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0268015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494418, 0, 1, 0.517388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495095,-99) , 
5, 0.274463, 1, 0, 0.498334,-99) , 
0, 0.497139, 1, 0, 0.506111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479494,-99) , 
2, -0.0194874, 0, 0, 0.503621,-99) , 
NN(
0, 
0, 
-1, 0.499992, 1, -1, 0.484746,-99) , 
5, -0.800441, 1, 0, 0.491695,-99) , 
5, 0.0476289, 0, 0, 0.499339,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.021304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0741308, 1, 1, 0.508157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482811,-99) , 
5, 0.904661, 1, 0, 0.506521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489053,-99) , 
2, 0.0715145, 0, 0, 0.492111,-99) , 
5, 0.904672, 0, 0, 0.494336,-99) , 
0, 0.497138, 1, 0, 0.499298,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0232591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498652,-99) , 
5, 0.945547, 1, 0, 0.528656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475693,-99) , 
4, 0.999524, 0, 0, 0.507007,-99) , 
5, 0.904725, 0, 0, 0.508401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486406,-99) , 
5, -0.274426, 0, 0, 0.50057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460105,-99) , 
5, 0.523699, 1, 0, 0.490586,-99) , 
0, 0.503804, 1, 0, 0.506539,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0193288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498595,-99) , 
1, 0.000160057, 0, 0, 0.517708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493578,-99) , 
5, 0.904265, 0, 0, 0.49522,-99) , 
0, 0.503803, 0, 0, 0.497494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457966,-99) , 
4, 0.999048, 0, 0, 0.496213,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0127687);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493098,-99) , 
5, -0.333333, 0, 0, 0.498051,-99) , 
3, 7.83514, 0, 0, 0.499472,-99) , 
4, 0.998572, 1, 0, 0.501448,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.015182);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543204,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0759388, 0, 1, 0.50401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472978,-99) , 
0, 0.496415, 1, 0, 0.486627,-99) , 
5, 0.809306, 1, 0, 0.501578,-99) , 
0, 0.489519, 1, 0, 0.502754,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0281077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492832,-99) , 
6, 0.00302492, 0, 0, 0.502344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426284,-99) , 
1, -0.0105881, 0, 0, 0.499761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469984,-99) , 
1, 0.0103564, 1, 0, 0.498747,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.012993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497926,-99) , 
0, 0.492376, 1, 0, 0.500125,-99) , 
4, 0.999048, 1, 0, 0.501853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460459,-99) , 
3, 8.6893, 1, 0, 0.500591,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0415671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480634,-99) , 
4, 0.999995, 0, 0, 0.504779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482056,-99) , 
4, 0.999886, 0, 0, 0.503228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536635,-99) , 
NN(
0, 
0, 
-1, 0.824307, 0, -1, 0.481787,-99) , 
5, 0.945437, 0, 0, 0.488796,-99) , 
5, 0.714157, 1, 0, 0.500075,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0191322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496835, 1, 1, 0.513213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479029,-99) , 
0, 0.494299, 0, 0, 0.507312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48266,-99) , 
3, 1.07063, 0, 0, 0.496824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470527,-99) , 
5, 0.541931, 1, 0, 0.495093,-99) , 
5, 0.619051, 0, 0, 0.498578,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0195123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49656,-99) , 
2, 0.0324656, 0, 0, 0.502071,-99) , 
2, -0.21213, 1, 0, 0.504455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474994,-99) , 
0, 0.493782, 0, 0, 0.496011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467516,-99) , 
0, 0.503803, 1, 0, 0.492372,-99) , 
5, -0.142898, 0, 0, 0.499423,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.00959961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544548,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.497801,-99) , 
4, 0.999048, 1, 0, 0.499297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452699,-99) , 
3, 8.84137, 1, 0, 0.49797,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0352426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478778,-99) , 
6, 0.00116052, 0, 0, 0.503752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475337,-99) , 
1, -0.00925, 0, 0, 0.502573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421613,-99) , 
1, 0.0121806, 1, 0, 0.500479,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0240983);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526993,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485177,-99) , 
5, -0.142951, 0, 0, 0.506882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488666,-99) , 
2, 0.0194257, 0, 0, 0.494279,-99) , 
2, -0.0271145, 1, 0, 0.497988,-99) , 
2, 0.217269, 0, 0, 0.499037,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0325785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48149,-99) , 
3, 3.10273, 1, 0, 0.514266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473313,-99) , 
0, 0.497138, 0, 0, 0.49311,-99) , 
3, 4.5765, 1, 0, 0.509777,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490154, 1, 1, 0.513059,-99) , 
NN(
0, 
0, 
-1, 1.74478, 0, -1, 0.485548,-99) , 
0, 0.495233, 1, 0, 0.492666,-99) , 
5, 0.333231, 0, 0, 0.500041,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0162383);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00232564, 0, 1, 0.522025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495276,-99) , 
5, 0.523627, 0, 0, 0.499285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465019,-99) , 
0, 0.50303, 1, 0, 0.49798,-99) , 
0, 0.503803, 0, 0, 0.500438,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0272649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494221,-99) , 
5, -0.632858, 0, 0, 0.525441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491396,-99) , 
2, 0.216218, 0, 0, 0.492904,-99) , 
1, -0.00366722, 1, 0, 0.497665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478265,-99) , 
5, -0.938043, 1, 0, 0.49152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450239,-99) , 
5, -0.968264, 0, 0, 0.476701,-99) , 
5, -0.904742, 0, 0, 0.495664,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0253958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462016,-99) , 
2, -0.143929, 0, 0, 0.505174,-99) , 
4, 0.999524, 1, 0, 0.507237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532687,-99) , 
NN(
0, 
0, 
-1, 0.713807, 1, -1, 0.480251,-99) , 
0, 0.501896, 0, 0, 0.492546,-99) , 
3, 4.55086, 1, 0, 0.504526,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0510309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485684,-99) , 
4, 0.999997, 0, 0, 0.510829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447875,-99) , 
0, 0.499988, 1, 0, 0.484443,-99) , 
4, 0.999932, 0, 0, 0.507298,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.480196,-99) , 
4, 0.999524, 0, 0, 0.505777,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0167603);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.904761, 0, 1, 0.507406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460958,-99) , 
3, 8.83068, 1, 0, 0.505978,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0257126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0192859, 0, 1, 0.533145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496331,-99) , 
5, 0.396804, 0, 0, 0.505342,-99) , 
1, -0.00445068, 1, 0, 0.508203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469936,-99) , 
5, -0.882127, 0, 0, 0.480057,-99) , 
3, 3.86232, 0, 0, 0.487375,-99) , 
5, -0.809517, 0, 0, 0.50472,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0174274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.415725, 1, 1, 0.505927,-99) , 
NN(
0, 
0, 
-1, 0.179271, 1, -1, 0.487415,-99) , 
3, 6.27829, 1, 0, 0.504398,-99) , 
NN(
0, 
0, 
-1, 0.498104, 0, -1, 0.453613,-99) , 
5, 0.904725, 1, 0, 0.501552,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0296445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497063,-99) , 
5, -0.428648, 0, 0, 0.513877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488819,-99) , 
0, 0.504216, 0, 0, 0.497194,-99) , 
0, 0.501128, 1, 0, 0.506677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494426,-99) , 
3, 3.23434, 1, 0, 0.511178,-99) , 
NN(
0, 
0, 
-1, -0.0881748, 0, -1, 0.483261,-99) , 
5, -0.428575, 1, 0, 0.49276,-99) , 
0, 0.497137, 0, 0, 0.501011,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0139643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498808,-99) , 
5, 0.809437, 0, 0, 0.501384,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.466797,-99) , 
4, 0.999774, 0, 0, 0.499439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437791,-99) , 
4, 0.999048, 0, 0, 0.497501,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0408215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484624,-99) , 
6, 0.00119821, 0, 0, 0.507475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41368,-99) , 
6, 0.0125769, 1, 0, 0.503965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482,-99) , 
3, 1.19607, 0, 0, 0.499798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44907,-99) , 
2, 0.0229771, 1, 0, 0.484168,-99) , 
5, -0.809532, 0, 0, 0.500693,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0280792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492626,-99) , 
5, -0.333333, 1, 0, 0.497813,-99) , 
0, 0.495823, 1, 0, 0.499867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459001,-99) , 
5, 0.72792, 1, 0, 0.500856,-99) , 
NN(
0, 
0, 
-1, 0.491241, 1, -1, 0.464868,-99) , 
5, -0.428537, 0, 0, 0.487583,-99) , 
0, 0.495233, 0, 0, 0.496758,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0251088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0726335, 1, 1, 0.506895,-99) , 
NN(
0, 
0, 
-1, 0.941719, 1, -1, 0.480233,-99) , 
5, 0.863976, 1, 0, 0.503161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483279,-99) , 
0, 0.498361, 1, 0, 0.491462,-99) , 
NN(
0, 
0, 
-1, -0.755099, 1, -1, 0.472975,-99) , 
0, 0.496184, 0, 0, 0.485066,-99) , 
5, -0.428551, 0, 0, 0.497077,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0155655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0742849, 0, 1, 0.502618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472275,-99) , 
1, 0.0103564, 1, 0, 0.501535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476595,-99) , 
3, 1.57395, 1, 0, 0.490007,-99) , 
NN(
0, 
0, 
-1, 0.503168, 1, -1, 0.470364,-99) , 
3, 4.44698, 1, 0, 0.485605,-99) , 
0, 0.500946, 1, 0, 0.497386,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0149879);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486084,-99) , 
5, 0.918381, 1, 0, 0.51208,-99) , 
NN(
0, 
0, 
-1, 0.550997, 1, -1, 0.496614,-99) , 
5, 0.809523, 0, 0, 0.498869,-99) , 
0, 0.490472, 1, 0, 0.500674,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.026616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.08916, 1, 1, 0.519737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451249,-99) , 
3, 5.86919, 1, 0, 0.502233,-99) , 
5, -0.0476532, 0, 0, 0.507083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496185,-99) , 
0, 0.496188, 1, 0, 0.506898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481215,-99) , 
2, -0.0916063, 1, 0, 0.485547,-99) , 
5, 0.809464, 0, 0, 0.493193,-99) , 
5, 0.42851, 1, 0, 0.501657,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0133593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49428, 1, 1, 0.504512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482408,-99) , 
2, -0.211413, 0, 0, 0.503592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432462,-99) , 
1, 0.0121806, 1, 0, 0.501744,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0181473);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49843,-99) , 
5, -0.183705, 0, 0, 0.501611,-99) , 
NN(
0, 
0, 
-1, 0.0521517, 0, -1, 0.489082,-99) , 
5, -0.0476499, 1, 0, 0.494678,-99) , 
2, -0.212512, 1, 0, 0.496227,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0112743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497296,-99) , 
4, 0.999864, 0, 0, 0.51963,-99) , 
NN(
0, 
0, 
-1, 0.723105, 1, -1, 0.497908,-99) , 
5, 0.809306, 0, 0, 0.500566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459193,-99) , 
4, 0.999048, 0, 0, 0.499204,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0207864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497966,-99) , 
2, 0.00416152, 0, 0, 0.513925,-99) , 
2, -0.0708144, 1, 0, 0.518602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493109,-99) , 
3, 2.21752, 1, 0, 0.507689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491463,-99) , 
3, 2.17274, 0, 0, 0.496514,-99) , 
2, 0.0375829, 0, 0, 0.49906,-99) , 
5, 0.809488, 0, 0, 0.501892,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.017788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0608003, 0, 1, 0.506118,-99) , 
NN(
0, 
0, 
-1, 2.06265, 0, -1, 0.49069,-99) , 
3, 1.73025, 1, 0, 0.497351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460848,-99) , 
3, 8.71137, 1, 0, 0.496227,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.018987);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543734,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500358, 1, 1, 0.513049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490145,-99) , 
0, 0.497637, 1, 0, 0.498701,-99) , 
0, 0.499995, 0, 0, 0.503573,-99) , 
1, 0.00805734, 0, 0, 0.505585,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0299369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50312, 0, 1, 0.525779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485189,-99) , 
3, 4.13183, 1, 0, 0.506691,-99) , 
2, -0.0681924, 1, 0, 0.509815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480805,-99) , 
0, 0.493056, 0, 0, 0.512044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475049,-99) , 
2, -0.000693608, 1, 0, 0.49225,-99) , 
2, 0.0739726, 0, 0, 0.49535,-99) , 
0, 0.497138, 0, 0, 0.503908,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0310341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00221558, 1, 1, 0.533299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493924,-99) , 
0, 0.494281, 1, 0, 0.499861,-99) , 
5, 0.746042, 1, 0, 0.510827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494029,-99) , 
5, 0.0793516, 0, 0, 0.507202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485558,-99) , 
3, 5.29126, 0, 0, 0.488608,-99) , 
2, 0.0376353, 0, 0, 0.492838,-99) , 
5, 0.619047, 0, 0, 0.497994,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0184206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498226, 0, 1, 0.507193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471798,-99) , 
2, 0.216175, 1, 0, 0.506042,-99) , 
NN(
0, 
0, 
-1, 0.506118, 0, -1, 0.472916,-99) , 
0, 0.504757, 1, 0, 0.503744,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0185721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481997,-99) , 
5, -0.714733, 0, 0, 0.513378,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.49406,-99) , 
0, 0.502851, 0, 0, 0.49677,-99) , 
4, 0.998572, 1, 0, 0.49805,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.012511);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473713,-99) , 
4, 0.999955, 0, 0, 0.49527,-99) , 
4, 0.999049, 1, 0, 0.496356,-99) , 
2, -0.211668, 1, 0, 0.497429,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0165569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500946, 0, 1, 0.505233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475744,-99) , 
5, -0.501136, 1, 0, 0.492456,-99) , 
5, 0.0476033, 0, 0, 0.499382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463102,-99) , 
1, -0.0104756, 0, 0, 0.498151,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0171691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495796,-99) , 
5, 0.945453, 1, 0, 0.528829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483573,-99) , 
5, -0.818487, 0, 0, 0.507557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469977,-99) , 
0, 0.499676, 1, 0, 0.496121,-99) , 
0, 0.500946, 0, 0, 0.499152,-99) , 
5, 0.904616, 0, 0, 0.501028,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0181718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.763309, 1, 1, 0.511347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474419,-99) , 
5, -0.972359, 0, 0, 0.489765,-99) , 
5, -0.927433, 0, 0, 0.507024,-99) , 
NN(
0, 
0, 
-1, 0.941011, 1, -1, 0.492243,-99) , 
5, -0.238104, 1, 0, 0.497973,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0211458);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497449,-99) , 
5, 0.237474, 1, 0, 0.532296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48822,-99) , 
5, -0.333495, 0, 0, 0.499312,-99) , 
0, 0.501899, 1, 0, 0.507155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496773,-99) , 
5, 0.151933, 1, 0, 0.5007,-99) , 
NN(
0, 
0, 
-1, 0.66602, 0, -1, 0.487901,-99) , 
5, -0.0476324, 0, 0, 0.495202,-99) , 
0, 0.500947, 0, 0, 0.498335,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0147637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488379,-99) , 
0, 0.496601, 0, 0, 0.499913,-99) , 
0, 0.494009, 1, 0, 0.501282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460694,-99) , 
0, 0.492511, 1, 0, 0.491029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459605,-99) , 
5, 0.714199, 1, 0, 0.485416,-99) , 
0, 0.493328, 0, 0, 0.499026,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0200782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.48702, 0, 1, 0.507801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473458,-99) , 
3, 3.23982, 1, 0, 0.493696,-99) , 
5, -0.142858, 0, 0, 0.502186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449408,-99) , 
1, -0.00964224, 0, 0, 0.500175,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0271504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480686,-99) , 
5, -0.619215, 0, 0, 0.510332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467351,-99) , 
2, -0.272685, 0, 0, 0.503764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510178,-99) , 
NN(
0, 
0, 
-1, -0.00229736, 1, -1, 0.488194,-99) , 
5, 0.904761, 0, 0, 0.489447,-99) , 
2, -0.0689724, 1, 0, 0.491802,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0219645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490882,-99) , 
0, 0.499043, 0, 0, 0.497263,-99) , 
NN(
0, 
0, 
-1, 0.99967, 1, -1, 0.47168,-99) , 
4, 0.999864, 0, 0, 0.494879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450403,-99) , 
4, 0.999049, 0, 0, 0.493443,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0225037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485606,-99) , 
0, 0.494505, 1, 0, 0.5102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465458,-99) , 
0, 0.493783, 0, 0, 0.481584,-99) , 
5, 0.618847, 1, 0, 0.502663,-99) , 
NN(
0, 
0, 
-1, 0.497591, 0, -1, 0.490963,-99) , 
0, 0.495233, 1, 0, 0.493881,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0184358);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499576,-99) , 
0, 0.500115, 1, 0, 0.510086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496475,-99) , 
0, 0.491241, 1, 0, 0.498587,-99) , 
0, 0.498496, 0, 0, 0.502477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477337,-99) , 
2, 0.0703121, 0, 0, 0.484358,-99) , 
5, -0.809538, 1, 0, 0.489533,-99) , 
0, 0.501896, 1, 0, 0.499892,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0204461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480824,-99) , 
4, 0.999864, 0, 0, 0.505017,-99) , 
2, -0.202296, 1, 0, 0.506542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468483,-99) , 
4, 0.999048, 0, 0, 0.505292,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0181238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.525569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476979,-99) , 
0, 0.504528, 1, 0, 0.500776,-99) , 
5, 0.809437, 0, 0, 0.504457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447764,-99) , 
5, -0.0475184, 1, 0, 0.479504,-99) , 
0, 0.491424, 0, 0, 0.502658,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0171642);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49714, 1, 1, 0.526243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479767,-99) , 
0, 0.494278, 0, 0, 0.508387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34926,-99) , 
6, 0.0141238, 1, 0, 0.495096,-99) , 
5, -0.818588, 1, 0, 0.497433,-99) , 
5, 0.904724, 0, 0, 0.499222,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0236705);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497146, 0, 1, 0.523773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489961,-99) , 
3, 8.49117, 0, 0, 0.491107,-99) , 
2, 0.209146, 0, 0, 0.492265,-99) , 
5, 0.904762, 0, 0, 0.494178,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0130858);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536068,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49028, 0, 1, 0.517391,-99) , 
NN(
0, 
0, 
-1, -0.21027, 0, -1, 0.495942,-99) , 
0, 0.491923, 1, 0, 0.497878,-99) , 
0, 0.505709, 0, 0, 0.499466,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0169814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497128,-99) , 
5, 0.945366, 1, 0, 0.523678,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497548,-99) , 
1, -0.00621516, 1, 0, 0.500083,-99) , 
NN(
0, 
0, 
-1, 0.499996, 0, -1, 0.485622,-99) , 
5, 0.541762, 1, 0, 0.495895,-99) , 
5, 0.90453, 0, 0, 0.497572,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.023356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.8984, 1, 1, 0.534211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467871,-99) , 
5, 0.632497, 0, 0, 0.501598,-99) , 
5, 0.142632, 1, 0, 0.517088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490883,-99) , 
0, 0.499044, 1, 0, 0.499361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466154,-99) , 
4, 0.999524, 0, 0, 0.498046,-99) , 
2, 0.0735345, 0, 0, 0.500906,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0121522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494915, 1, 1, 0.502631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48087,-99) , 
2, 0.0376353, 0, 0, 0.48859,-99) , 
0, 0.49428, 0, 0, 0.499929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470817,-99) , 
4, 0.999048, 0, 0, 0.498935,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0152637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500563, 0, 1, 0.532341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498608,-99) , 
2, -0.0853519, 1, 0, 0.506298,-99) , 
0, 0.501082, 1, 0, 0.512847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467517,-99) , 
4, 0.999819, 0, 0, 0.498936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462297,-99) , 
4, 0.999524, 0, 0, 0.49701,-99) , 
0, 0.499993, 0, 0, 0.502342,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0191031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497995,-99) , 
2, -0.071436, 1, 0, 0.499643,-99) , 
0, 0.498543, 1, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, -0.0737098, 0, -1, 0.484808,-99) , 
0, 0.49809, 0, 0, 0.493066,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0134804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499509,-99) , 
0, 0.505027, 0, 0, 0.502331,-99) , 
NN(
0, 
0, 
-1, 0.498995, 0, -1, 0.488344,-99) , 
1, -0.00178541, 0, 0, 0.49818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460024,-99) , 
0, 0.489519, 0, 0, 0.497074,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.018928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499154,-99) , 
5, -0.401419, 0, 0, 0.504813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486824,-99) , 
5, 0.714198, 0, 0, 0.493911,-99) , 
5, 0.142801, 1, 0, 0.499254,-99) , 
NN(
0, 
0, 
-1, 0.489972, 0, -1, 0.465803,-99) , 
0, 0.491423, 0, 0, 0.496807,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0233266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486657,-99) , 
5, 0.904761, 1, 0, 0.508396,-99) , 
2, -0.211794, 1, 0, 0.509532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472478,-99) , 
0, 0.490471, 0, 0, 0.507858,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0465351);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486727,-99) , 
4, 0.999998, 0, 0, 0.507751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459891,-99) , 
5, 0.333159, 0, 0, 0.494139,-99) , 
4, 0.999955, 0, 0, 0.504975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442402,-99) , 
4, 0.999048, 0, 0, 0.502983,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0181448);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548425,-99) , 
NN(
NN(
0, 
0, 
-1, 0.904763, 0, 1, 0.508158,-99) , 
NN(
0, 
0, 
-1, 0.80943, 1, -1, 0.493565,-99) , 
0, 0.497093, 0, 0, 0.502032,-99) , 
0, 0.505709, 0, 0, 0.503884,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0243316);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489303,-99) , 
3, 2.67317, 1, 0, 0.540245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481811,-99) , 
2, 0.13998, 0, 0, 0.506495,-99) , 
5, 0.0476118, 1, 0, 0.521055,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0771835, 1, 1, 0.510395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489535,-99) , 
5, 0.142803, 0, 0, 0.496965,-99) , 
0, 0.496189, 1, 0, 0.501259,-99) , 
2, 0.071981, 0, 0, 0.504139,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0271178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.564676, 1, 1, 0.519749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46609,-99) , 
5, -0.773243, 1, 0, 0.495071,-99) , 
5, -0.523788, 0, 0, 0.511581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49407,-99) , 
3, 4.24737, 1, 0, 0.516526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489134,-99) , 
2, -0.00572004, 1, 0, 0.497511,-99) , 
2, 0.0688918, 0, 0, 0.500284,-99) , 
0, 0.499994, 0, 0, 0.504065,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0259886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0385063, 0, 1, 0.509113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484425,-99) , 
5, -0.428582, 1, 0, 0.490472,-99) , 
3, 1.77281, 1, 0, 0.500127,-99) , 
NN(
0, 
0, 
-1, -0.0719135, 0, -1, 0.474697,-99) , 
3, 4.51103, 1, 0, 0.495331,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.028546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.509856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47594,-99) , 
2, -0.0125105, 1, 0, 0.490609,-99) , 
2, 0.00528484, 0, 0, 0.500255,-99) , 
NN(
0, 
0, 
-1, -0.809595, 0, -1, 0.476159,-99) , 
2, -0.0694578, 0, 0, 0.496312,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0241576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493511, 0, 1, 0.516555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494466,-99) , 
3, 0.526041, 1, 0, 0.497985,-99) , 
3, 4.47075, 0, 0, 0.501245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490137,-99) , 
0, 0.50412, 0, 0, 0.49367,-99) , 
NN(
0, 
0, 
-1, 0.499133, 1, -1, 0.463258,-99) , 
5, 0.809437, 1, 0, 0.489606,-99) , 
0, 0.497137, 1, 0, 0.49437,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.00670103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46534,-99) , 
3, 8.93425, 1, 0, 0.500139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457826,-99) , 
0, 0.489519, 0, 0, 0.498872,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0161694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493011, 0, 1, 0.508861,-99) , 
NN(
0, 
0, 
-1, 0.50444, 1, -1, 0.495184,-99) , 
0, 0.494281, 1, 0, 0.49783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467531,-99) , 
5, 0.863824, 0, 0, 0.494934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446774,-99) , 
0, 0.495233, 0, 0, 0.483473,-99) , 
5, 0.809384, 1, 0, 0.495887,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0290262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49314,-99) , 
4, 0.999997, 0, 0, 0.504843,-99) , 
NN(
0, 
0, 
-1, 0.333222, 0, -1, 0.479421,-99) , 
4, 0.999932, 0, 0, 0.501462,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.468712,-99) , 
4, 0.999524, 0, 0, 0.499663,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0275536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491583,-99) , 
4, 0.999909, 0, 0, 0.508434,-99) , 
4, 0.999048, 1, 0, 0.509859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522452,-99) , 
NN(
0, 
0, 
-1, 0.537346, 1, -1, 0.465567,-99) , 
5, -0.619091, 1, 0, 0.484528,-99) , 
0, 0.492377, 0, 0, 0.507212,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0202157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50085, 0, 1, 0.506385,-99) , 
NN(
0, 
0, 
-1, -0.333365, 0, -1, 0.487584,-99) , 
0, 0.501628, 1, 0, 0.500319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487447,-99) , 
5, -0.723278, 1, 0, 0.4907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471273,-99) , 
5, -0.904747, 0, 0, 0.488748,-99) , 
0, 0.496186, 0, 0, 0.496541,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.02306);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.428836, 0, 1, 0.522261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485999,-99) , 
0, 0.504503, 1, 0, 0.503091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485748,-99) , 
0, 0.496937, 1, 0, 0.493692,-99) , 
0, 0.501083, 0, 0, 0.496361,-99) , 
0, 0.492376, 1, 0, 0.499052,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.00887796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468016,-99) , 
3, 7.2556, 1, 0, 0.500589,-99) , 
4, 0.999524, 1, 0, 0.50208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475981,-99) , 
3, 8.93425, 1, 0, 0.501306,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0132115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499293,-99) , 
5, -0.650062, 1, 0, 0.50121,-99) , 
NN(
0, 
0, 
-1, -0.792675, 1, -1, 0.486502,-99) , 
5, -0.727881, 0, 0, 0.497919,-99) , 
NN(
0, 
0, 
-1, 0.497147, 1, -1, 0.467352,-99) , 
5, 0.904672, 1, 0, 0.496148,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.015537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496615,-99) , 
5, 0.904672, 0, 0, 0.498368,-99) , 
NN(
0, 
0, 
-1, 0.0475582, 0, -1, 0.481014,-99) , 
0, 0.503122, 1, 0, 0.496736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452613,-99) , 
0, 0.505708, 1, 0, 0.494904,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0367195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00739721, 0, 1, 0.513624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350626,-99) , 
6, 0.014124, 1, 0, 0.508117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481459,-99) , 
0, 0.499035, 1, 0, 0.496161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451567,-99) , 
3, 0.815907, 0, 0, 0.487248,-99) , 
5, -0.8095, 0, 0, 0.504647,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0247845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452452,-99) , 
5, 0.931987, 1, 0, 0.505033,-99) , 
4, 0.998572, 1, 0, 0.506815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494101,-99) , 
0, 0.494278, 1, 0, 0.501462,-99) , 
NN(
0, 
0, 
-1, 0.499993, 0, -1, 0.480173,-99) , 
5, -0.83669, 1, 0, 0.489699,-99) , 
5, -0.428531, 0, 0, 0.501117,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0324116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.53922, 1, 1, 0.516148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481924,-99) , 
3, 1.47299, 0, 0, 0.496695,-99) , 
2, 0.0466494, 0, 0, 0.500664,-99) , 
NN(
0, 
0, 
-1, -0.0710983, 1, -1, 0.471557,-99) , 
5, 0.714254, 1, 0, 0.494446,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0216491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48635,-99) , 
0, 0.499676, 1, 0, 0.49703,-99) , 
0, 0.505706, 0, 0, 0.498319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486458,-99) , 
2, -0.0899159, 1, 0, 0.491674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45924,-99) , 
5, 0.714033, 1, 0, 0.486399,-99) , 
1, -0.00178541, 0, 0, 0.494751,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0185793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.6893, 0, 1, 0.506023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483317,-99) , 
5, 0.152027, 1, 0, 0.496692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466806,-99) , 
5, -0.619033, 0, 0, 0.487417,-99) , 
0, 0.49428, 0, 0, 0.502456,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0253919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.69406, 1, 1, 0.512716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482855,-99) , 
0, 0.494281, 0, 0, 0.506045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474191,-99) , 
2, 0.2094, 1, 0, 0.506421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486922,-99) , 
2, -0.0759031, 1, 0, 0.489586,-99) , 
2, 0.0735345, 0, 0, 0.492111,-99) , 
5, -0.809523, 1, 0, 0.494435,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.022133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490574,-99) , 
3, 0.930304, 1, 0, 0.493912,-99) , 
2, 0.217347, 0, 0, 0.495466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449577,-99) , 
3, 8.93425, 1, 0, 0.494173,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0205099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499443,-99) , 
1, -0.00530403, 1, 0, 0.503878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449974,-99) , 
3, 4.40852, 1, 0, 0.48153,-99) , 
2, -0.0709862, 0, 0, 0.500167,-99) , 
NN(
0, 
0, 
-1, -0.510235, 1, -1, 0.485248,-99) , 
5, -0.428591, 0, 0, 0.495227,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0210163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485898,-99) , 
4, 0.999864, 0, 0, 0.519085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481535,-99) , 
4, 0.999955, 0, 0, 0.501051,-99) , 
5, 0.714204, 0, 0, 0.504558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472094,-99) , 
4, 0.999048, 0, 0, 0.50344,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0234595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498278,-99) , 
6, 0.00450909, 0, 0, 0.501841,-99) , 
NN(
0, 
0, 
-1, 0.497135, 0, -1, 0.485938,-99) , 
5, 0.0476191, 0, 0, 0.494953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436702,-99) , 
3, 3.88118, 1, 0, 0.487657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424501,-99) , 
5, 0.332833, 1, 0, 0.474517,-99) , 
1, 0.00458981, 1, 0, 0.492252,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0172941);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494859,-99) , 
1, 0.00592662, 0, 0, 0.496997,-99) , 
NN(
0, 
0, 
-1, -0.00184262, 0, -1, 0.479993,-99) , 
5, 0.809306, 1, 0, 0.494762,-99) , 
2, 0.214776, 0, 0, 0.495827,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0126288);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547222,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503986,-99) , 
NN(
0, 
0, 
-1, 0.490154, 0, -1, 0.493845,-99) , 
0, 0.495233, 0, 0, 0.501462,-99) , 
2, -0.210845, 1, 0, 0.503378,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0116077);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499725,-99) , 
5, -0.251713, 0, 0, 0.503955,-99) , 
NN(
0, 
0, 
-1, 0.138335, 0, -1, 0.494454,-99) , 
5, 0.0476191, 1, 0, 0.498822,-99) , 
0, 0.490471, 1, 0, 0.499904,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.019118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482376,-99) , 
2, -0.0708144, 0, 0, 0.496152,-99) , 
3, 4.39959, 1, 0, 0.507193,-99) , 
NN(
0, 
0, 
-1, 0.505846, 0, -1, 0.484457,-99) , 
0, 0.504756, 1, 0, 0.505639,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0266497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.88727, 0, 1, 0.526833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494139,-99) , 
5, 0.918369, 1, 0, 0.515789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498636,-99) , 
5, 0.378593, 0, 0, 0.50961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489896,-99) , 
2, 0.0135586, 0, 0, 0.497184,-99) , 
2, 0.0870616, 0, 0, 0.498703,-99) , 
5, 0.809523, 0, 0, 0.501143,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.022268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.936407, 0, 1, 0.529935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496393,-99) , 
5, -0.909301, 1, 0, 0.498776,-99) , 
5, 0.904661, 0, 0, 0.500814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462609,-99) , 
5, -0.795958, 0, 0, 0.503306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417077,-99) , 
5, -0.143138, 1, 0, 0.477556,-99) , 
1, 0.00592662, 1, 0, 0.498739,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0172392);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530419,-99) , 
NN(
NN(
0, 
0, 
-1, -0.428551, 1, 1, 0.506743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489941,-99) , 
0, 0.494669, 1, 0, 0.496246,-99) , 
0, 0.497818, 0, 0, 0.502121,-99) , 
0, 0.490471, 1, 0, 0.503495,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0228084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00971883, 0, 1, 0.515973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492695,-99) , 
0, 0.494281, 1, 0, 0.496554,-99) , 
3, 0.909079, 1, 0, 0.500404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441135,-99) , 
3, 8.71137, 1, 0, 0.498569,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0158228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494943,-99) , 
5, -0.142857, 1, 0, 0.499856,-99) , 
3, 8.28318, 0, 0, 0.501212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454149,-99) , 
4, 0.999048, 0, 0, 0.499746,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0253557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000609078, 1, 1, 0.512943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471806,-99) , 
5, -0.455887, 1, 0, 0.499971,-99) , 
5, -0.238135, 0, 0, 0.508092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455087,-99) , 
1, -0.0104756, 0, 0, 0.506358,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0147694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.52954, 0, 1, 0.511001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497761,-99) , 
0, 0.504712, 0, 0, 0.499444,-99) , 
5, 0.619051, 0, 0, 0.502805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50283,-99) , 
NN(
0, 
0, 
-1, -0.650701, 1, -1, 0.464113,-99) , 
5, 0.0475061, 0, 0, 0.480959,-99) , 
0, 0.492377, 0, 0, 0.500482,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0196284);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492995,-99) , 
5, -0.691733, 0, 0, 0.523595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499527,-99) , 
2, -0.0620938, 1, 0, 0.502432,-99) , 
0, 0.493329, 1, 0, 0.505614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494487,-99) , 
5, 0.85488, 0, 0, 0.503672,-99) , 
NN(
0, 
0, 
-1, 0.497411, 1, -1, 0.479471,-99) , 
0, 0.499044, 0, 0, 0.489194,-99) , 
5, 0.619052, 1, 0, 0.500945,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0258491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464545,-99) , 
0, 0.501809, 1, 0, 0.522409,-99) , 
NN(
0, 
0, 
-1, 0.505436, 0, 1, 0.504598,-99) , 
5, 0.714285, 0, 0, 0.508555,-99) , 
NN(
0, 
0, 
-1, -0.523923, 1, -1, 0.473023,-99) , 
0, 0.492376, 0, 0, 0.504793,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0165334);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.428659, 0, 1, 0.522919,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498121,-99) , 
0, 0.495141, 1, 0, 0.500529,-99) , 
NN(
0, 
0, 
-1, 0.493137, 1, -1, 0.459701,-99) , 
0, 0.493828, 0, 0, 0.497547,-99) , 
0, 0.492376, 1, 0, 0.500145,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0329059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499988, 1, 1, 0.518136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470291,-99) , 
2, -0.0684519, 0, 0, 0.500223,-99) , 
5, 0.455794, 1, 0, 0.506511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468075,-99) , 
2, 0.0414706, 1, 0, 0.501697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470253,-99) , 
3, 0.472922, 1, 0, 0.478449,-99) , 
3, 1.24323, 0, 0, 0.494084,-99) , 
5, -0.142857, 0, 0, 0.501362,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0248138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00668729, 0, 1, 0.51049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464348,-99) , 
6, 0.00936202, 1, 0, 0.508456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484286,-99) , 
0, 0.498767, 0, 0, 0.49516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460844,-99) , 
0, 0.493327, 0, 0, 0.489174,-99) , 
5, -0.52381, 0, 0, 0.502705,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0265531);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493584,-99) , 
5, -0.339148, 1, 0, 0.497815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470225,-99) , 
0, 0.49999, 0, 0, 0.483998,-99) , 
5, -0.727874, 0, 0, 0.494646,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.455019,-99) , 
5, 0.904725, 1, 0, 0.492428,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0213303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00451161, 1, 1, 0.5062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47627,-99) , 
3, 1.67839, 1, 0, 0.491605,-99) , 
5, -0.727893, 0, 0, 0.502832,-99) , 
NN(
0, 
0, 
-1, 0.941051, 1, -1, 0.45991,-99) , 
5, 0.904761, 1, 0, 0.500414,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0164313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491103,-99) , 
5, 0.809438, 1, 0, 0.502879,-99) , 
NN(
0, 
0, 
-1, 0.49426, 1, -1, 0.490632,-99) , 
0, 0.49496, 0, 0, 0.499815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449981,-99) , 
0, 0.506251, 0, 0, 0.472984,-99) , 
0, 0.504755, 1, 0, 0.497934,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0143464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.913832, 0, -1, 0.496454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468737,-99) , 
0, 0.499859, 0, 0, 0.479452,-99) , 
5, 0.809305, 1, 0, 0.494137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451892,-99) , 
0, 0.48952, 0, 0, 0.492963,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0199328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.151947, 0, 1, 0.50777,-99) , 
NN(
0, 
0, 
-1, 0.500312, 1, -1, 0.495409,-99) , 
5, 0.047608, 1, 0, 0.500975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515456,-99) , 
NN(
0, 
0, 
-1, 0.501582, 0, -1, 0.477724,-99) , 
2, -0.0780167, 1, 0, 0.484369,-99) , 
0, 0.500947, 1, 0, 0.496626,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0209015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.818492, 0, 1, 0.538294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493287,-99) , 
0, 0.495279, 0, 0, 0.508411,-99) , 
0, 0.499995, 0, 0, 0.517682,-99) , 
NN(
NN(
0, 
0, 
-1, -0.000491364, 1, 1, 0.523611,-99) , 
NN(
0, 
0, 
-1, -0.922898, 0, -1, 0.495174,-99) , 
0, 0.491424, 1, 0, 0.497365,-99) , 
5, 0.618925, 0, 0, 0.503202,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0130619);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533805,-99) , 
NN(
NN(
0, 
0, 
-1, 0.945586, 0, 1, 0.529926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496796,-99) , 
0, 0.505709, 0, 0, 0.497791,-99) , 
5, 0.904761, 0, 0, 0.499656,-99) , 
2, 0.214776, 0, 0, 0.500941,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0123131);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534244,-99) , 
NN(
NN(
0, 
0, 
-1, -0.199114, 1, 1, 0.504017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48124,-99) , 
4, 0.999524, 0, 0, 0.502804,-99) , 
0, 0.490471, 1, 0, 0.50425,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0243807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.823114, 0, 1, 0.517025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472636,-99) , 
5, 0.881959, 1, 0, 0.499568,-99) , 
0, 0.499043, 1, 0, 0.509816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492431,-99) , 
0, 0.495231, 1, 0, 0.497609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462894,-99) , 
3, 0.584312, 0, 0, 0.49366,-99) , 
5, -0.23811, 0, 0, 0.503596,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0178786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0473383, 1, 1, 0.514393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491547,-99) , 
5, -0.809547, 0, 0, 0.500441,-99) , 
0, 0.497818, 1, 0, 0.50338,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0476236, 0, 1, 0.512853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475448,-99) , 
5, 0.523618, 0, 0, 0.483589,-99) , 
2, 0.0696077, 0, 0, 0.488649,-99) , 
0, 0.496185, 0, 0, 0.498608,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0165891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497539,-99) , 
3, 3.66936, 0, 0, 0.502024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459455,-99) , 
5, 0.809085, 0, 0, 0.476535,-99) , 
4, 0.999864, 0, 0, 0.499655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466059,-99) , 
4, 0.999048, 0, 0, 0.498561,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0248968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00246712, 1, 1, 0.520562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489325,-99) , 
3, 2.35016, 1, 0, 0.503049,-99) , 
5, -0.410465, 0, 0, 0.509317,-99) , 
NN(
0, 
0, 
-1, 0.499996, 1, -1, 0.49059,-99) , 
5, 0.238078, 1, 0, 0.500445,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0238201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498084, 0, 1, 0.524458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495451,-99) , 
2, 0.0735345, 0, 0, 0.498655,-99) , 
5, -0.904763, 1, 0, 0.500984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458432,-99) , 
5, -0.796041, 0, 0, 0.4981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421008,-99) , 
5, -0.143153, 1, 0, 0.474632,-99) , 
1, 0.00592662, 1, 0, 0.498666,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0160307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499558,-99) , 
2, 0.103434, 0, 0, 0.501715,-99) , 
4, 0.999524, 1, 0, 0.504419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459659,-99) , 
5, 0.809531, 1, 0, 0.495645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464717,-99) , 
5, -0.333314, 0, 0, 0.486837,-99) , 
3, 4.51103, 1, 0, 0.501108,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0188791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490473, 1, 1, 0.508494,-99) , 
NN(
0, 
0, 
-1, 0.591262, 0, -1, 0.491807,-99) , 
5, -0.33333, 0, 0, 0.502585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449577,-99) , 
1, 0.0121806, 1, 0, 0.501259,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0193924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491997,-99) , 
5, -0.238095, 1, 0, 0.497645,-99) , 
3, 8.54447, 0, 0, 0.499207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431588,-99) , 
0, 0.497137, 1, 0, 0.46527,-99) , 
4, 0.999524, 0, 0, 0.497431,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0160699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.386684, 1, 1, 0.521993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494833,-99) , 
5, 0.238047, 0, 0, 0.499973,-99) , 
3, 0.54482, 1, 0, 0.50177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453551,-99) , 
3, 8.84785, 1, 0, 0.500285,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.015285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481679,-99) , 
3, 5.48151, 1, 0, 0.502,-99) , 
2, -0.216352, 1, 0, 0.503333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454795,-99) , 
3, 8.80212, 1, 0, 0.501849,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0297239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459488,-99) , 
4, 0.999819, 0, 0, 0.513561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491982,-99) , 
2, 0.0767477, 0, 0, 0.495087,-99) , 
0, 0.497138, 1, 0, 0.502537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439927,-99) , 
4, 0.999048, 0, 0, 0.50054,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.018156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496716,-99) , 
0, 0.501625, 1, 0, 0.518564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499084,-99) , 
1, -0.00612635, 1, 0, 0.501774,-99) , 
5, -0.809497, 1, 0, 0.504428,-99) , 
NN(
0, 
0, 
-1, 0.49623, 1, -1, 0.486936,-99) , 
0, 0.497137, 0, 0, 0.497262,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0164679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.78212, 1, 1, 0.519396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467382,-99) , 
3, 6.04199, 1, 0, 0.497879,-99) , 
5, 0.714077, 0, 0, 0.501999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441355,-99) , 
4, 0.999048, 0, 0, 0.500142,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0245921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0747888, 1, 1, 0.50848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491347,-99) , 
5, -0.795926, 1, 0, 0.501029,-99) , 
5, -0.142917, 0, 0, 0.505377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480842,-99) , 
3, 2.81343, 1, 0, 0.497572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441079,-99) , 
5, 0.714199, 1, 0, 0.485075,-99) , 
2, 0.0717919, 1, 0, 0.502391,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0180999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496431,-99) , 
0, 0.499995, 0, 0, 0.500937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459044,-99) , 
4, 0.999592, 1, 0, 0.47325,-99) , 
4, 0.999864, 0, 0, 0.498351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452726,-99) , 
4, 0.999048, 0, 0, 0.496949,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0230073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487852,-99) , 
3, 2.33456, 0, 0, 0.513233,-99) , 
5, -0.335098, 0, 0, 0.531919,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499747,-99) , 
5, 0.941055, 1, 0, 0.523921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486053,-99) , 
3, 3.38288, 1, 0, 0.497819,-99) , 
5, 0.904763, 0, 0, 0.499576,-99) , 
1, -0.00445233, 1, 0, 0.503552,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0239363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451872,-99) , 
6, 0.00677806, 1, 0, 0.505108,-99) , 
NN(
0, 
0, 
-1, -0.501135, 1, -1, 0.489225,-99) , 
5, 0.047608, 0, 0, 0.497455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452927,-99) , 
3, 8.80985, 1, 0, 0.49613,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0239463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475973,-99) , 
5, -0.954632, 0, 0, 0.513118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464058,-99) , 
3, 1.84479, 0, 0, 0.490784,-99) , 
0, 0.497134, 0, 0, 0.503859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496383,-99) , 
5, 0.92735, 0, 0, 0.497801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461277,-99) , 
0, 0.497136, 1, 0, 0.478549,-99) , 
2, 0.071981, 1, 0, 0.494833,-99) , 
5, -0.523816, 1, 0, 0.497526,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0273372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504754, 0, 1, 0.513053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468137,-99) , 
3, 6.83579, 1, 0, 0.510807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490263,-99) , 
3, 4.50881, 0, 0, 0.49641,-99) , 
0, 0.493331, 1, 0, 0.499728,-99) , 
5, 0.523809, 1, 0, 0.507011,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0220357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494918, 1, 1, 0.50736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472429,-99) , 
0, 0.499362, 1, 0, 0.486614,-99) , 
2, -0.0679183, 0, 0, 0.504138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510485,-99) , 
NN(
0, 
0, 
-1, 0.0666552, 0, -1, 0.476779,-99) , 
0, 0.490157, 1, 0, 0.483685,-99) , 
0, 0.494283, 0, 0, 0.500177,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0365079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490484,-99) , 
4, 0.999998, 0, 0, 0.50548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440421,-99) , 
2, 0.0680521, 1, 0, 0.486072,-99) , 
4, 0.999955, 0, 0, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45682,-99) , 
4, 0.999048, 0, 0, 0.500264,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0160007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480284,-99) , 
5, -0.927443, 0, 0, 0.503475,-99) , 
NN(
0, 
0, 
-1, 0.00861315, 1, -1, 0.49496,-99) , 
5, -0.238095, 1, 0, 0.498148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478477,-99) , 
0, 0.490474, 0, 0, 0.497213,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0145389);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498781,-99) , 
2, -0.084619, 1, 0, 0.501477,-99) , 
NN(
0, 
0, 
-1, 0.49808, 0, -1, 0.460925,-99) , 
4, 0.999819, 0, 0, 0.498578,-99) , 
4, 0.999048, 1, 0, 0.499951,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0241598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999525, 1, 1, 0.510504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477933,-99) , 
5, -0.142941, 0, 0, 0.490929,-99) , 
0, 0.494417, 0, 0, 0.50554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48568,-99) , 
5, -0.591827, 0, 0, 0.49637,-99) , 
NN(
0, 
0, 
-1, 0.727902, 0, -1, 0.467866,-99) , 
5, 0.428582, 1, 0, 0.487126,-99) , 
0, 0.5019, 1, 0, 0.5019,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0161013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491854,-99) , 
3, 1.16036, 0, 0, 0.525328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479857,-99) , 
3, 2.90593, 1, 0, 0.510803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493836,-99) , 
0, 0.49936, 1, 0, 0.497913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479089,-99) , 
0, 0.491741, 1, 0, 0.489247,-99) , 
0, 0.494281, 0, 0, 0.496276,-99) , 
5, -0.904756, 1, 0, 0.497702,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0227503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498558,-99) , 
4, 0.999997, 0, 0, 0.509021,-99) , 
NN(
0, 
0, 
-1, 0.333395, 0, -1, 0.488328,-99) , 
4, 0.999932, 0, 0, 0.506229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478459,-99) , 
4, 0.999524, 0, 0, 0.504744,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0176114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501113, 0, 1, 0.507054,-99) , 
NN(
0, 
0, 
-1, -0.714448, 0, -1, 0.488179,-99) , 
0, 0.493646, 0, 0, 0.503941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468585,-99) , 
0, 0.505708, 1, 0, 0.502495,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0182319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143165, 0, 1, 0.516969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493888,-99) , 
3, 4.54421, 1, 0, 0.512846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493934,-99) , 
5, 0.714154, 0, 0, 0.4972,-99) , 
1, -0.00721094, 1, 0, 0.498952,-99) , 
0, 0.49428, 1, 0, 0.501627,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0368525);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487809,-99) , 
4, 0.999998, 0, 0, 0.503328,-99) , 
NN(
0, 
0, 
-1, -0.0477113, 0, -1, 0.485948,-99) , 
4, 0.999955, 0, 0, 0.499761,-99) , 
4, 0.999048, 1, 0, 0.501179,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0252041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00328721, 1, 1, 0.520715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491082,-99) , 
5, -0.365095, 0, 0, 0.501587,-99) , 
0, 0.494281, 1, 0, 0.505259,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.45138,-99) , 
5, 0.904662, 1, 0, 0.50226,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0161739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504892, 1, 1, 0.524112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497756,-99) , 
5, 0.618972, 0, 0, 0.50215,-99) , 
0, 0.503803, 0, 0, 0.504367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467443,-99) , 
4, 0.999048, 0, 0, 0.503212,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.015758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488979,-99) , 
0, 0.500816, 0, 0, 0.502728,-99) , 
0, 0.493334, 1, 0, 0.513235,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50312,-99) , 
NN(
0, 
0, 
-1, 0.489972, 0, -1, 0.470985,-99) , 
0, 0.491423, 0, 0, 0.501084,-99) , 
2, -0.0708144, 1, 0, 0.503044,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0198695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904725, 0, 1, 0.502076,-99) , 
NN(
0, 
0, 
-1, 0.499994, 0, -1, 0.483499,-99) , 
3, 4.51103, 1, 0, 0.498559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481309,-99) , 
5, -0.528534, 0, 0, 0.50315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409425,-99) , 
5, 0.237646, 1, 0, 0.479893,-99) , 
1, 0.00458981, 1, 0, 0.496153,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0214042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495862,-99) , 
5, -0.42858, 1, 0, 0.499628,-99) , 
2, 0.214567, 0, 0, 0.500705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480667,-99) , 
5, -0.075276, 0, 0, 0.493211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431338,-99) , 
5, 0.618433, 1, 0, 0.483293,-99) , 
1, 0.00328721, 1, 0, 0.497333,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0284738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497994,-99) , 
5, -0.836715, 0, 0, 0.51346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493126,-99) , 
0, 0.491424, 1, 0, 0.497685,-99) , 
1, 0.000160057, 0, 0, 0.505429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487872,-99) , 
5, 0.86395, 1, 0, 0.503687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467472,-99) , 
0, 0.501084, 0, 0, 0.480769,-99) , 
0, 0.49619, 1, 0, 0.488087,-99) , 
5, 0.714289, 1, 0, 0.501657,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0236513);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49051,-99) , 
5, 0.428277, 0, 0, 0.500028,-99) , 
NN(
0, 
0, 
-1, 0.496729, 0, -1, 0.489329,-99) , 
0, 0.496185, 1, 0, 0.492809,-99) , 
2, -0.212512, 1, 0, 0.494326,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0173762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.6685, 0, 1, 0.507289,-99) , 
NN(
0, 
0, 
-1, 0.809526, 1, -1, 0.491636,-99) , 
3, 4.51103, 1, 0, 0.504386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466966,-99) , 
0, 0.490472, 0, 0, 0.502629,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0148934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495753,-99) , 
5, 0.0474856, 1, 0, 0.526031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498753,-99) , 
0, 0.497411, 0, 0, 0.525039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494056,-99) , 
0, 0.498226, 1, 0, 0.498941,-99) , 
5, 0.904531, 0, 0, 0.500578,-99) , 
0, 0.504756, 0, 0, 0.502281,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0246412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49547,-99) , 
5, 0.0473192, 0, 0, 0.509723,-99) , 
0, 0.502848, 0, 0, 0.515538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4775,-99) , 
3, 5.79968, 1, 0, 0.506483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488904,-99) , 
5, 0.909197, 0, 0, 0.492427,-99) , 
5, 0.0475639, 1, 0, 0.498938,-99) , 
2, -0.0696296, 1, 0, 0.5017,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0232487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499347,-99) , 
0, 0.496457, 1, 0, 0.510892,-99) , 
0, 0.5019, 0, 0, 0.519252,-99) , 
NN(
NN(
0, 
0, 
-1, 1.33594, 1, 1, 0.516625,-99) , 
NN(
0, 
0, 
-1, 0.498447, 0, -1, 0.493275,-99) , 
2, 0.01755, 0, 0, 0.499975,-99) , 
3, 4.39959, 0, 0, 0.503834,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0161904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.141382, 0, 1, 0.539909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457594,-99) , 
5, 0.618433, 1, 0, 0.4993,-99) , 
0, 0.500946, 0, 0, 0.511956,-99) , 
NN(
0, 
0, 
-1, 0.504755, 1, -1, 0.495906,-99) , 
2, -0.0680822, 1, 0, 0.498602,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0191448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.10959, 1, 1, 0.505728,-99) , 
NN(
0, 
0, 
-1, 0.00459557, 1, -1, 0.493546,-99) , 
5, 0.655254, 1, 0, 0.501949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477998,-99) , 
3, 2.59632, 1, 0, 0.506655,-99) , 
NN(
0, 
0, 
-1, -0.0157997, 0, -1, 0.467292,-99) , 
0, 0.498099, 0, 0, 0.487252,-99) , 
5, -0.809523, 0, 0, 0.499512,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0220296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490959,-99) , 
5, -0.428551, 0, 0, 0.518026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490232,-99) , 
1, 0.000160057, 1, 0, 0.49744,-99) , 
3, 4.44496, 0, 0, 0.501145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461328,-99) , 
2, -0.213991, 0, 0, 0.499616,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0219293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502126, 0, 1, 0.508859,-99) , 
NN(
0, 
0, 
-1, 0.502625, 1, -1, 0.493568,-99) , 
5, -0.0476189, 1, 0, 0.500169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492557,-99) , 
5, 0.40135, 1, 0, 0.500308,-99) , 
NN(
0, 
0, 
-1, 2.13444, 1, -1, 0.476734,-99) , 
5, -0.14289, 0, 0, 0.490165,-99) , 
0, 0.497138, 0, 0, 0.496097,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0220797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503759, 0, 1, 0.539939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480957,-99) , 
0, 0.506253, 0, 0, 0.498843,-99) , 
0, 0.50444, 1, 0, 0.517349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477342,-99) , 
4, 0.999932, 0, 0, 0.500754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477117,-99) , 
4, 0.999524, 0, 0, 0.499542,-99) , 
0, 0.502852, 0, 0, 0.502158,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0235466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.764086, 1, 1, 0.526067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490554,-99) , 
0, 0.495869, 1, 0, 0.502852,-99) , 
0, 0.499995, 0, 0, 0.509971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499354,-99) , 
0, 0.491151, 1, 0, 0.509649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490781,-99) , 
3, 5.29708, 0, 0, 0.493105,-99) , 
0, 0.493328, 1, 0, 0.495643,-99) , 
5, 0.618974, 0, 0, 0.499756,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0186028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502572, 1, 1, 0.526371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491761,-99) , 
0, 0.505436, 1, 0, 0.518231,-99) , 
NN(
NN(
0, 
0, 
-1, 4.54421, 0, 1, 0.504074,-99) , 
NN(
0, 
0, 
-1, -0.00308713, 0, -1, 0.483388,-99) , 
5, -0.809508, 0, 0, 0.500737,-99) , 
0, 0.501898, 0, 0, 0.504238,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0215168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.682646, 1, 1, 0.528184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497369,-99) , 
0, 0.501447, 1, 0, 0.503379,-99) , 
5, 0.523698, 0, 0, 0.511441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493279,-99) , 
3, 4.42856, 0, 0, 0.496413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469538,-99) , 
0, 0.499406, 1, 0, 0.494421,-99) , 
0, 0.499995, 0, 0, 0.500157,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0321474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497002,-99) , 
5, 0.237613, 0, 0, 0.51332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484531,-99) , 
5, -0.333407, 1, 0, 0.494816,-99) , 
2, -0.00783864, 1, 0, 0.502428,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.472465,-99) , 
4, 0.999524, 0, 0, 0.500787,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0240423);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49693,-99) , 
3, 2.05364, 1, 0, 0.506978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413885,-99) , 
6, 0.00489048, 1, 0, 0.498269,-99) , 
5, 0.54629, 1, 0, 0.503802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486314,-99) , 
3, 2.23822, 0, 0, 0.496138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476092,-99) , 
5, -0.972793, 0, 0, 0.489876,-99) , 
5, -0.904773, 0, 0, 0.502468,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0248466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497134, 0, 1, 0.519259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483101,-99) , 
5, -0.809522, 0, 0, 0.513334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468337,-99) , 
0, 0.49088, 0, 0, 0.503853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486095,-99) , 
5, -0.809494, 1, 0, 0.490444,-99) , 
0, 0.499042, 1, 0, 0.498225,-99) , 
2, -0.0679183, 1, 0, 0.500746,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0279485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489024, 0, 1, 0.516565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491893,-99) , 
5, 0.939497, 0, 0, 0.495339,-99) , 
5, 0.682522, 1, 0, 0.508525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492511,-99) , 
3, 2.0214, 1, 0, 0.50065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473871,-99) , 
5, -0.619298, 0, 0, 0.482569,-99) , 
3, 1.12759, 0, 0, 0.495296,-99) , 
5, -0.333346, 0, 0, 0.503742,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0174838);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495695,-99) , 
3, 4.47075, 0, 0, 0.499367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467589,-99) , 
2, -0.21361, 0, 0, 0.498207,-99) , 
0, 0.505709, 0, 0, 0.499943,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0199655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.309463, 1, 1, 0.563416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499435,-99) , 
5, -0.809679, 0, 0, 0.542636,-99) , 
NN(
NN(
0, 
0, 
-1, 0.618975, 0, 1, 0.503991,-99) , 
NN(
0, 
0, 
-1, 0.142731, 0, -1, 0.476279,-99) , 
0, 0.491424, 0, 0, 0.502094,-99) , 
1, -0.00445233, 1, 0, 0.507089,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.00875888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505256, 1, 1, 0.517444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48091,-99) , 
0, 0.49224, 0, 0, 0.498038,-99) , 
2, -0.210466, 1, 0, 0.498897,-99) , 
0, 0.503804, 0, 0, 0.500811,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0221198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496182, 1, 1, 0.520418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46495,-99) , 
5, -0.972794, 0, 0, 0.51082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497163,-99) , 
5, 0.569098, 1, 0, 0.505403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489459,-99) , 
2, -0.0702045, 1, 0, 0.492719,-99) , 
0, 0.497139, 0, 0, 0.50023,-99) , 
5, -0.809532, 1, 0, 0.501992,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.020275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493852,-99) , 
5, -0.863927, 0, 0, 0.506974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480604,-99) , 
5, 0.20185, 0, 0, 0.495795,-99) , 
5, -0.523793, 1, 0, 0.499007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462758,-99) , 
1, -0.0104756, 0, 0, 0.497788,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0186287);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529769,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491429, 1, 1, 0.507111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486871,-99) , 
2, 0.0221633, 0, 0, 0.491826,-99) , 
2, -0.0357646, 1, 0, 0.495795,-99) , 
2, 0.207611, 0, 0, 0.49721,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0127743);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.936517, 1, 1, 0.520475,-99) , 
NN(
NN(
0, 
0, 
-1, -0.909286, 1, 1, 0.502804,-99) , 
NN(
0, 
0, 
-1, -0.0726335, 0, -1, 0.488179,-99) , 
3, 3.38288, 1, 0, 0.498445,-99) , 
5, 0.904762, 0, 0, 0.499761,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0205778);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484948,-99) , 
0, 0.499994, 1, 0, 0.507559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488134,-99) , 
2, -0.00607898, 1, 0, 0.496007,-99) , 
2, 0.0683943, 0, 0, 0.497783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464418,-99) , 
1, -0.0104756, 0, 0, 0.496752,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0163377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.35326, 0, 1, 0.536304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496443,-99) , 
5, -0.727874, 1, 0, 0.49941,-99) , 
5, 0.904725, 0, 0, 0.501581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446731,-99) , 
3, 8.80212, 1, 0, 0.499838,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0187816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904671, 0, 1, 0.505582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47866,-99) , 
0, 0.503531, 1, 0, 0.488721,-99) , 
0, 0.501898, 1, 0, 0.502367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487481,-99) , 
5, 0.142571, 1, 0, 0.499078,-99) , 
NN(
0, 
0, 
-1, 0.499044, 0, -1, 0.467503,-99) , 
2, -0.138833, 1, 0, 0.483351,-99) , 
2, -0.0708144, 0, 0, 0.499311,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00860118);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468072,-99) , 
3, 8.80985, 1, 0, 0.502332,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.027589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491308,-99) , 
0, 0.505709, 1, 0, 0.512025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484659,-99) , 
5, 0.714291, 0, 0, 0.48889,-99) , 
0, 0.490063, 1, 0, 0.490276,-99) , 
0, 0.504756, 0, 0, 0.49171,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.025534);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49653,-99) , 
1, 0.000160057, 1, 0, 0.511409,-99) , 
NN(
0, 
0, 
-1, 0.497409, 1, -1, 0.491822,-99) , 
0, 0.499042, 0, 0, 0.500134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481727,-99) , 
5, 0.863856, 1, 0, 0.490839,-99) , 
NN(
0, 
0, 
-1, 0.891053, 0, -1, 0.462714,-99) , 
0, 0.499044, 1, 0, 0.480421,-99) , 
5, 0.809437, 1, 0, 0.497413,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0275326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497141, 1, 1, 0.516196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468692,-99) , 
0, 0.497138, 0, 0, 0.49203,-99) , 
5, 0.863802, 1, 0, 0.511945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48755,-99) , 
3, 3.30648, 1, 0, 0.519719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489896,-99) , 
3, 2.01388, 0, 0, 0.496582,-99) , 
2, 0.0725932, 0, 0, 0.499859,-99) , 
5, 0.0475386, 0, 0, 0.506338,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0171365);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506117, 0, 1, 0.522894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49476,-99) , 
0, 0.501335, 1, 0, 0.504563,-99) , 
NN(
0, 
0, 
-1, 0.497215, 1, -1, 0.493438,-99) , 
0, 0.498226, 0, 0, 0.498558,-99) , 
0, 0.504757, 0, 0, 0.5002,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0214909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 1, 1, 0.523378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493734,-99) , 
5, 0.904263, 0, 0, 0.495285,-99) , 
0, 0.492376, 1, 0, 0.498051,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.453795,-99) , 
4, 0.999524, 0, 0, 0.495748,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0141178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0567318, 1, 1, 0.50566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475658,-99) , 
2, 0.0364981, 1, 0, 0.496797,-99) , 
5, -0.523793, 0, 0, 0.50303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478632,-99) , 
0, 0.490473, 0, 0, 0.501833,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0217785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.848183, 1, 1, 0.510046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490088,-99) , 
1, 0.0017859, 0, 0, 0.494656,-99) , 
5, 0.238099, 1, 0, 0.502662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44275,-99) , 
1, 0.0121806, 1, 0, 0.501109,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0211867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489493,-99) , 
3, 4.66107, 0, 0, 0.499283,-99) , 
5, -0.333327, 1, 0, 0.51214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496326,-99) , 
5, 0.0476191, 0, 0, 0.50316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470722,-99) , 
0, 0.495322, 1, 0, 0.489865,-99) , 
0, 0.497136, 0, 0, 0.497783,-99) , 
2, 0.0732142, 0, 0, 0.499876,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0181477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499748,-99) , 
2, -0.069346, 1, 0, 0.505992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489509,-99) , 
0, 0.501719, 0, 0, 0.493077,-99) , 
0, 0.495233, 1, 0, 0.496287,-99) , 
NN(
0, 
0, 
-1, 0.497135, 1, -1, 0.468696,-99) , 
4, 0.999524, 0, 0, 0.494782,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0247249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00370824, 1, 1, 0.5081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47874,-99) , 
3, 1.33408, 0, 0, 0.493569,-99) , 
5, -0.619024, 0, 0, 0.504211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477249,-99) , 
3, 2.68321, 1, 0, 0.509425,-99) , 
NN(
0, 
0, 
-1, 0.499978, 1, -1, 0.470555,-99) , 
5, 0.142723, 1, 0, 0.489237,-99) , 
2, -0.07273, 0, 0, 0.501842,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0381755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485473,-99) , 
0, 0.49809, 0, 0, 0.524672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486932,-99) , 
4, 0.999998, 0, 0, 0.501193,-99) , 
NN(
0, 
0, 
-1, 0.333209, 0, -1, 0.480168,-99) , 
4, 0.999955, 0, 0, 0.497288,-99) , 
4, 0.999524, 1, 0, 0.498896,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0196132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496895,-99) , 
3, 1.89736, 1, 0, 0.518957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494219,-99) , 
3, 4.54421, 0, 0, 0.497892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466466,-99) , 
2, -0.212385, 0, 0, 0.496575,-99) , 
5, -0.904769, 1, 0, 0.498731,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.014454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.86797, 0, 1, 0.55461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47049,-99) , 
5, -0.238368, 1, 0, 0.52721,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0720052, 0, 1, 0.515288,-99) , 
NN(
0, 
0, 
-1, 0.494009, 0, -1, 0.498127,-99) , 
0, 0.493328, 1, 0, 0.500598,-99) , 
1, 0.00628942, 0, 0, 0.502734,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0277172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.397659, 1, 1, 0.512183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472227,-99) , 
3, 6.59497, 1, 0, 0.509813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471195,-99) , 
0, 0.500943, 1, 0, 0.498634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4595,-99) , 
2, -0.0692773, 0, 0, 0.492184,-99) , 
5, 0.619047, 1, 0, 0.504871,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.00932862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49902,-99) , 
3, 0.428795, 1, 0, 0.500381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454478,-99) , 
3, 7.24911, 1, 0, 0.499104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453463,-99) , 
3, 8.93425, 1, 0, 0.497816,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0241562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492057,-99) , 
5, 0.79286, 1, 0, 0.505835,-99) , 
5, 0.936475, 0, 0, 0.508223,-99) , 
NN(
NN(
0, 
0, 
-1, -0.238112, 0, 1, 0.518056,-99) , 
NN(
0, 
0, 
-1, 0.0793271, 1, -1, 0.489849,-99) , 
3, 0.833562, 1, 0, 0.495257,-99) , 
5, 0.333307, 0, 0, 0.500876,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0300261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493332, 1, 1, 0.521581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480952,-99) , 
3, 7.84268, 1, 0, 0.513807,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0106193, 0, 1, 0.518335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482589,-99) , 
2, -0.0182767, 1, 0, 0.488886,-99) , 
3, 0.88198, 1, 0, 0.495926,-99) , 
3, 4.07999, 0, 0, 0.49995,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0187024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493026,-99) , 
2, -0.0830258, 1, 0, 0.49527,-99) , 
3, 8.3147, 0, 0, 0.496701,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.47649,-99) , 
4, 0.999524, 0, 0, 0.495603,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0311757);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49593,-99) , 
0, 0.503169, 1, 0, 0.525679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494503,-99) , 
2, -0.0390587, 1, 0, 0.502197,-99) , 
3, 4.45845, 0, 0, 0.507587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486291,-99) , 
3, 1.56219, 1, 0, 0.49634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457646,-99) , 
0, 0.499045, 0, 0, 0.47186,-99) , 
3, 4.51103, 1, 0, 0.491942,-99) , 
0, 0.500948, 0, 0, 0.495991,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0279556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.05575, 0, 1, 0.511007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472706,-99) , 
0, 0.49999, 0, 0, 0.486592,-99) , 
4, 0.999955, 0, 0, 0.506078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468502,-99) , 
4, 0.999048, 0, 0, 0.5049,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0184027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000933004, 1, 1, 0.524034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489746,-99) , 
5, -0.777766, 1, 0, 0.50285,-99) , 
5, -0.333328, 0, 0, 0.514732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495007,-99) , 
0, 0.501489, 0, 0, 0.498254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463715,-99) , 
0, 0.505571, 1, 0, 0.496459,-99) , 
0, 0.493328, 1, 0, 0.499043,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0165667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496878,-99) , 
0, 0.506117, 1, 0, 0.525215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498125,-99) , 
5, 0.523812, 0, 0, 0.503466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465696,-99) , 
1, 0.0103564, 1, 0, 0.502137,-99) , 
0, 0.504756, 0, 0, 0.50369,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0256205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.56818, 1, 1, 0.535378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476353,-99) , 
0, 0.498099, 0, 0, 0.493153,-99) , 
5, 0.523499, 1, 0, 0.519711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49272,-99) , 
3, 1.52494, 0, 0, 0.502507,-99) , 
NN(
0, 
0, 
-1, 0.501899, 1, -1, 0.487384,-99) , 
3, 4.39959, 1, 0, 0.49989,-99) , 
2, 0.071981, 0, 0, 0.502823,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.022495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333277, 1, 1, 0.511584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450497,-99) , 
0, 0.491812, 1, 0, 0.489732,-99) , 
0, 0.492512, 0, 0, 0.507366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49607,-99) , 
1, 0.00120036, 0, 0, 0.506187,-99) , 
NN(
0, 
0, 
-1, 0.0882146, 1, -1, 0.489924,-99) , 
5, 0.523622, 0, 0, 0.495238,-99) , 
0, 0.499042, 1, 0, 0.502195,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0170264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485467,-99) , 
0, 0.502536, 1, 0, 0.5004,-99) , 
NN(
0, 
0, 
-1, -0.61912, 0, -1, 0.478597,-99) , 
0, 0.492379, 0, 0, 0.498218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450855,-99) , 
4, 0.999048, 0, 0, 0.496765,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0233414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498657,-99) , 
5, 0.522951, 1, 0, 0.529049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48692,-99) , 
5, 0.523271, 0, 0, 0.500686,-99) , 
3, 4.57291, 1, 0, 0.519417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497138,-99) , 
3, 4.23097, 1, 0, 0.517069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495584,-99) , 
2, 0.0204167, 0, 0, 0.50028,-99) , 
2, -0.0792046, 1, 0, 0.503244,-99) , 
2, 0.0702327, 0, 0, 0.505701,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0241566);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495202,-99) , 
5, 0.061154, 1, 0, 0.512525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481212,-99) , 
3, 6.17086, 1, 0, 0.51054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486104,-99) , 
3, 3.32166, 1, 0, 0.498336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457354,-99) , 
0, 0.499042, 0, 0, 0.474986,-99) , 
5, 0.891073, 1, 0, 0.494977,-99) , 
5, 0.238044, 1, 0, 0.503209,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0251443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.700834, 1, 1, 0.521246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471781,-99) , 
5, -0.546402, 1, 0, 0.501544,-99) , 
5, -0.04754, 0, 0, 0.510956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48924,-99) , 
0, 0.493454, 1, 0, 0.491361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471759,-99) , 
0, 0.490516, 0, 0, 0.490275,-99) , 
0, 0.502851, 0, 0, 0.493262,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0244588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0469521, 1, 1, 0.526529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456496,-99) , 
2, -0.152581, 0, 0, 0.503802,-99) , 
2, 0.0717919, 0, 0, 0.507276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49509,-99) , 
5, 0.714071, 0, 0, 0.499737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442289,-99) , 
5, 0.0475775, 1, 0, 0.473056,-99) , 
2, 0.073068, 1, 0, 0.495979,-99) , 
0, 0.499042, 0, 0, 0.500709,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0108378);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533485,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498087, 0, 1, 0.54629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499358,-99) , 
0, 0.490471, 1, 0, 0.500956,-99) , 
4, 0.999524, 1, 0, 0.503421,-99) , 
3, 8.93425, 0, 0, 0.504291,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.013945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498044,-99) , 
5, 0.0884, 1, 0, 0.502754,-99) , 
0, 0.490471, 1, 0, 0.504121,-99) , 
NN(
0, 
0, 
-1, 0.941004, 1, -1, 0.476267,-99) , 
5, 0.904724, 1, 0, 0.50257,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0229332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0748461, 1, 1, 0.509591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463347,-99) , 
0, 0.502893, 1, 0, 0.497624,-99) , 
5, -0.619027, 0, 0, 0.506495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488032,-99) , 
0, 0.492278, 0, 0, 0.495133,-99) , 
NN(
0, 
0, 
-1, 0.141826, 0, -1, 0.47489,-99) , 
0, 0.494143, 1, 0, 0.489623,-99) , 
0, 0.495232, 0, 0, 0.502233,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0221567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.709898, 0, 1, 0.527228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495824,-99) , 
5, 0.523349, 1, 0, 0.518611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490144,-99) , 
2, -0.0477095, 1, 0, 0.492867,-99) , 
2, -0.210605, 1, 0, 0.494201,-99) , 
0, 0.492377, 1, 0, 0.49673,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0243123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904724, 0, 1, 0.514107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48127,-99) , 
0, 0.490109, 0, 0, 0.511427,-99) , 
NN(
NN(
0, 
0, 
-1, 0.238011, 1, 1, 0.517021,-99) , 
NN(
0, 
0, 
-1, 0.498955, 0, -1, 0.493154,-99) , 
0, 0.502626, 0, 0, 0.50039,-99) , 
0, 0.498091, 1, 0, 0.505778,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0241367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479206,-99) , 
5, 0.913323, 1, 0, 0.510474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473791,-99) , 
5, -0.954678, 0, 0, 0.494016,-99) , 
5, -0.809565, 0, 0, 0.507791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492401,-99) , 
2, 0.0189574, 0, 0, 0.501615,-99) , 
NN(
0, 
0, 
-1, 0.0568257, 0, -1, 0.489386,-99) , 
5, -0.238078, 1, 0, 0.49437,-99) , 
0, 0.499995, 1, 0, 0.503154,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.00839829);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49944,-99) , 
3, 8.19668, 0, 0, 0.500584,-99) , 
4, 0.999051, 1, 0, 0.501814,-99) , 
2, -0.21361, 1, 0, 0.503187,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0159423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487868,-99) , 
0, 0.497636, 1, 0, 0.508197,-99) , 
0, 0.499994, 0, 0, 0.520364,-99) , 
NN(
0, 
0, 
-1, -0.215968, 0, -1, 0.494988,-99) , 
5, 0.809489, 0, 0, 0.498621,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0212733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.509769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469134,-99) , 
0, 0.494144, 1, 0, 0.493671,-99) , 
0, 0.495233, 0, 0, 0.505747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46869,-99) , 
1, -0.0104756, 0, 0, 0.504542,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0184856);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714328, 0, 1, 0.526061,-99) , 
NN(
NN(
0, 
0, 
-1, -0.959219, 0, 1, 0.521269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491374,-99) , 
5, -0.451237, 0, 0, 0.502545,-99) , 
5, -0.904766, 1, 0, 0.504201,-99) , 
1, -0.00621516, 1, 0, 0.505839,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0205379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.02674, 0, 1, 0.506487,-99) , 
NN(
0, 
0, 
-1, -0.0532947, 0, -1, 0.476209,-99) , 
4, 0.999932, 0, 0, 0.502381,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.464607,-99) , 
4, 0.999524, 0, 0, 0.500342,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0161373);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494176,-99) , 
5, 0.333278, 1, 0, 0.499964,-99) , 
NN(
0, 
0, 
-1, 0.492511, 1, -1, 0.480387,-99) , 
0, 0.493328, 0, 0, 0.497162,-99) , 
2, 0.214436, 0, 0, 0.498444,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0101949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499305,-99) , 
5, 0.904763, 0, 0, 0.500683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45984,-99) , 
2, 0.214856, 1, 0, 0.499244,-99) , 
NN(
0, 
0, 
-1, -0.333549, 1, -1, 0.471389,-99) , 
0, 0.504755, 1, 0, 0.497304,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0217515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503123, 1, 1, 0.511866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493959,-99) , 
5, 0.713828, 0, 0, 0.4987,-99) , 
0, 0.499042, 0, 0, 0.504202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45689,-99) , 
2, 0.212613, 1, 0, 0.50247,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0183355);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.206318, 0, 1, 0.505444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479449,-99) , 
0, 0.499043, 1, 0, 0.492974,-99) , 
NN(
0, 
0, 
-1, 0.56465, 1, -1, 0.476577,-99) , 
5, 0.61907, 0, 0, 0.487215,-99) , 
5, 0.33334, 1, 0, 0.497527,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0152455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44161,-99) , 
6, 0.0114677, 1, 0, 0.498744,-99) , 
5, -0.632603, 1, 0, 0.500377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472003,-99) , 
5, -0.9339, 0, 0, 0.493831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449999,-99) , 
5, -0.768703, 1, 0, 0.48762,-99) , 
5, -0.714281, 0, 0, 0.49753,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0150004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497806,-99) , 
5, 0.523786, 1, 0, 0.517028,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.500317,-99) , 
0, 0.500947, 1, 0, 0.511782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493182,-99) , 
5, 0.591733, 1, 0, 0.499409,-99) , 
NN(
0, 
0, 
-1, 0.0111039, 1, -1, 0.486991,-99) , 
5, -0.714277, 0, 0, 0.496586,-99) , 
2, 0.0735345, 0, 0, 0.498814,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0159022);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524689,-99) , 
NN(
0, 
0, 
-1, 0.073224, 1, -1, 0.493708,-99) , 
3, 8.02402, 0, 0, 0.494916,-99) , 
4, 0.999048, 1, 0, 0.49629,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0248999);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463265,-99) , 
3, 0.536765, 0, 0, 0.51024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493709,-99) , 
1, -0.00318799, 1, 0, 0.497879,-99) , 
5, -0.428614, 1, 0, 0.502003,-99) , 
2, 0.215886, 0, 0, 0.503183,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0241618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.35859, 0, 1, 0.519396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493017,-99) , 
2, 0.0717919, 0, 0, 0.496898,-99) , 
5, 0.591824, 1, 0, 0.506672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498673,-99) , 
1, -0.00808413, 1, 0, 0.50231,-99) , 
NN(
0, 
0, 
-1, 2.65443, 1, -1, 0.474701,-99) , 
0, 0.500946, 1, 0, 0.494377,-99) , 
5, 0.047608, 0, 0, 0.500929,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0203224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468963,-99) , 
2, -0.117785, 0, 0, 0.501822,-99) , 
4, 0.999525, 1, 0, 0.50385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485868,-99) , 
0, 0.497636, 0, 0, 0.496781,-99) , 
NN(
0, 
0, 
-1, 0.501809, 0, -1, 0.47178,-99) , 
0, 0.499994, 1, 0, 0.487472,-99) , 
3, 4.30389, 1, 0, 0.500478,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0117808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497437,-99) , 
5, -0.714313, 0, 0, 0.520493,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502146,-99) , 
2, 0.0759324, 0, 0, 0.504658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465203,-99) , 
3, 8.28318, 1, 0, 0.50324,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0100443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530804,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.49696,-99) , 
4, 0.999048, 1, 0, 0.49803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460148,-99) , 
3, 8.6893, 1, 0, 0.496866,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0136137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493195, 1, 1, 0.50451,-99) , 
NN(
0, 
0, 
-1, -0.142999, 1, -1, 0.483016,-99) , 
0, 0.490699, 0, 0, 0.503245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503125,-99) , 
NN(
0, 
0, 
-1, -0.333346, 0, -1, 0.469811,-99) , 
0, 0.505799, 0, 0, 0.481949,-99) , 
0, 0.503804, 1, 0, 0.501039,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0182725);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479953,-99) , 
2, -0.0780367, 0, 0, 0.497798,-99) , 
NN(
0, 
0, 
-1, -0.523803, 0, -1, 0.474711,-99) , 
2, 0.0715145, 1, 0, 0.494345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444517,-99) , 
1, -0.0117597, 0, 0, 0.493054,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0231306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496593, 0, 1, 0.521282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459963,-99) , 
5, -0.941045, 0, 0, 0.499098,-99) , 
0, 0.498089, 1, 0, 0.509893,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0057457, 1, -1, 0.496871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423556,-99) , 
2, 0.142203, 0, 0, 0.46755,-99) , 
2, 0.0742849, 1, 0, 0.492323,-99) , 
5, 0.238095, 1, 0, 0.501597,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.018391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494238,-99) , 
4, 0.999955, 0, 0, 0.517529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485096,-99) , 
5, -0.809531, 0, 0, 0.500019,-99) , 
2, -0.0720622, 1, 0, 0.502658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447351,-99) , 
4, 0.999048, 0, 0, 0.500913,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0286565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477319,-99) , 
3, 1.74068, 1, 0, 0.49385,-99) , 
3, 3.94524, 0, 0, 0.499469,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.49627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472079,-99) , 
2, 0.0884398, 0, 0, 0.476504,-99) , 
5, 0.346958, 0, 0, 0.487193,-99) , 
5, -0.714262, 1, 0, 0.489895,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0290168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468486,-99) , 
6, 0.00574596, 1, 0, 0.509367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464131,-99) , 
4, 0.999048, 0, 0, 0.506628,-99) , 
NN(
0, 
0, 
-1, 0.766141, 0, -1, 0.48654,-99) , 
5, 0.142866, 0, 0, 0.496622,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0262063);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488739,-99) , 
0, 0.490471, 1, 0, 0.490077,-99) , 
2, -0.191558, 1, 0, 0.492212,-99) , 
2, 0.215968, 0, 0, 0.493428,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0212718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.26522, 1, 1, 0.511567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495159,-99) , 
1, 0.0103564, 0, 0, 0.498613,-99) , 
5, 0.142769, 0, 0, 0.50506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461937,-99) , 
2, 0.214776, 1, 0, 0.503575,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0180627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493954,-99) , 
0, 0.495227, 0, 0, 0.522509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493401,-99) , 
3, 1.19607, 0, 0, 0.512685,-99) , 
NN(
0, 
0, 
-1, 0.913834, 1, -1, 0.493061,-99) , 
5, -0.809523, 1, 0, 0.496339,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0273387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428462,-99) , 
6, 0.00574585, 1, 0, 0.513579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486592,-99) , 
5, 0.0203805, 1, 0, 0.499155,-99) , 
5, 0.428543, 0, 0, 0.504836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459245,-99) , 
0, 0.489519, 0, 0, 0.503579,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0217804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.918363, 1, 1, 0.521205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493378,-99) , 
5, -0.972784, 0, 0, 0.516252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498036,-99) , 
6, 0.00874063, 0, 0, 0.502283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387747,-99) , 
6, 0.0141237, 1, 0, 0.498778,-99) , 
5, -0.809514, 1, 0, 0.501766,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0133875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499856,-99) , 
5, 0.0929894, 1, 0, 0.504499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465776,-99) , 
5, -0.959162, 0, 0, 0.487319,-99) , 
5, -0.904736, 0, 0, 0.502882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475622,-99) , 
0, 0.505708, 1, 0, 0.501842,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0276767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.944811, 1, 1, 0.517636,-99) , 
NN(
0, 
0, 
-1, -0.92742, 0, -1, 0.493529,-99) , 
3, 2.04113, 1, 0, 0.505682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48352,-99) , 
0, 0.503805, 1, 0, 0.500733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480792,-99) , 
5, 0.90926, 0, 0, 0.485421,-99) , 
0, 0.5019, 0, 0, 0.487962,-99) , 
5, 0.523784, 1, 0, 0.499635,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0151327);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46543,-99) , 
2, 0.208504, 1, 0, 0.505022,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0178367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502896, 1, 1, 0.539554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471792,-99) , 
2, -0.0697417, 0, 0, 0.509569,-99) , 
0, 0.499994, 0, 0, 0.521528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499459,-99) , 
4, 0.999524, 1, 0, 0.500967,-99) , 
NN(
0, 
0, 
-1, 0.505975, 0, -1, 0.470629,-99) , 
0, 0.504751, 1, 0, 0.499006,-99) , 
3, 4.51103, 0, 0, 0.503173,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0194149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000675423, 1, 1, 0.508078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48774,-99) , 
5, -0.292237, 0, 0, 0.506905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463993,-99) , 
3, 4.83768, 1, 0, 0.495807,-99) , 
NN(
0, 
0, 
-1, -0.782303, 1, -1, 0.473311,-99) , 
3, 1.05796, 0, 0, 0.489553,-99) , 
5, -0.428568, 0, 0, 0.501201,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0117519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0997854, 0, 1, 0.502604,-99) , 
NN(
0, 
0, 
-1, 0.999854, 1, -1, 0.485485,-99) , 
4, 0.999932, 0, 0, 0.500334,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.464258,-99) , 
4, 0.999524, 0, 0, 0.498399,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0244316);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478528,-99) , 
5, 0.918367, 1, 0, 0.508921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492627,-99) , 
0, 0.496184, 1, 0, 0.496946,-99) , 
5, 0.714287, 0, 0, 0.499761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457551,-99) , 
5, 0.346467, 1, 0, 0.495537,-99) , 
NN(
0, 
0, 
-1, 2.04478, 0, -1, 0.472707,-99) , 
5, -0.523908, 0, 0, 0.48366,-99) , 
1, 0.00458981, 1, 0, 0.497707,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0193382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.617501, 0, 1, 0.516947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495779,-99) , 
3, 4.76309, 0, 0, 0.499901,-99) , 
3, 0.953035, 1, 0, 0.50353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466258,-99) , 
3, 8.95508, 1, 0, 0.502452,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0238847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498673, 0, 1, 0.511787,-99) , 
NN(
0, 
0, 
-1, 0.428371, 1, -1, 0.490792,-99) , 
0, 0.500539, 1, 0, 0.502702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498801,-99) , 
0, 0.493329, 1, 0, 0.513067,-99) , 
NN(
0, 
0, 
-1, 0.714253, 1, -1, 0.485351,-99) , 
3, 4.48201, 0, 0, 0.490329,-99) , 
0, 0.496185, 0, 0, 0.498704,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.025792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0755191, 1, 1, 0.509265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488162,-99) , 
1, 0.00805734, 0, 0, 0.494088,-99) , 
5, -0.183691, 0, 0, 0.502735,-99) , 
NN(
0, 
0, 
-1, 0.941007, 0, -1, 0.470656,-99) , 
5, 0.904723, 1, 0, 0.500965,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0187169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494656, 1, 1, 0.505652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479189,-99) , 
0, 0.494009, 0, 0, 0.504597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480206,-99) , 
2, 0.0283104, 0, 0, 0.494794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443805,-99) , 
5, 0.714204, 1, 0, 0.485752,-99) , 
0, 0.493328, 0, 0, 0.501899,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0219981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494782,-99) , 
5, -0.333536, 1, 0, 0.518397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492224,-99) , 
3, 0.477995, 1, 0, 0.494612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46709,-99) , 
3, 8.28318, 1, 0, 0.49364,-99) , 
0, 0.504757, 0, 0, 0.495341,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0247913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496004, 1, 1, 0.507631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462709,-99) , 
5, -0.61912, 1, 0, 0.480274,-99) , 
0, 0.492376, 0, 0, 0.504789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485517,-99) , 
5, -0.632659, 0, 0, 0.499619,-99) , 
NN(
0, 
0, 
-1, 0.510236, 0, -1, 0.473409,-99) , 
5, -0.14284, 1, 0, 0.482002,-99) , 
3, 4.51103, 1, 0, 0.500493,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0259205);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478811,-99) , 
0, 0.497637, 0, 0, 0.504789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473873,-99) , 
5, -0.238319, 1, 0, 0.485286,-99) , 
2, 0.0675826, 1, 0, 0.501846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478755,-99) , 
0, 0.49306, 1, 0, 0.506122,-99) , 
NN(
0, 
0, 
-1, 0.491696, 0, -1, 0.485152,-99) , 
2, -0.0697417, 1, 0, 0.488587,-99) , 
0, 0.497138, 0, 0, 0.496395,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.00882321);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504412,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0172283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492988,-99) , 
5, 0.0476289, 1, 0, 0.499085,-99) , 
4, 0.999048, 1, 0, 0.500999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466167,-99) , 
3, 8.93425, 1, 0, 0.500013,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0192019);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490498,-99) , 
4, 0.999932, 0, 0, 0.514719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497621,-99) , 
0, 0.505981, 0, 0, 0.499388,-99) , 
0, 0.496185, 1, 0, 0.504264,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.466618,-99) , 
4, 0.999524, 0, 0, 0.502261,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0265884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00116401, 0, 1, 0.516172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469592,-99) , 
6, 0.00489029, 1, 0, 0.511535,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504754, 1, -1, 0.496739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460499,-99) , 
5, -0.183732, 0, 0, 0.475436,-99) , 
3, 1.07063, 0, 0, 0.491059,-99) , 
5, 0.428574, 0, 0, 0.499085,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0235586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.947649, 1, 1, 0.532767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498865,-99) , 
1, -0.00351372, 1, 0, 0.502809,-99) , 
5, 0.900138, 0, 0, 0.506379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477297,-99) , 
3, 2.8686, 1, 0, 0.493446,-99) , 
NN(
0, 
0, 
-1, -0.637114, 1, -1, 0.457628,-99) , 
3, 0.66594, 0, 0, 0.488263,-99) , 
5, -0.0476512, 0, 0, 0.498492,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.014264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491082,-99) , 
0, 0.489557, 1, 0, 0.504,-99) , 
0, 0.491015, 0, 0, 0.50863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496266,-99) , 
5, 0.809088, 0, 0, 0.498081,-99) , 
NN(
0, 
0, 
-1, 0.0476512, 1, -1, 0.470121,-99) , 
0, 0.493827, 0, 0, 0.496087,-99) , 
0, 0.492376, 1, 0, 0.497362,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0343157);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489428, 1, 1, 0.521051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468278,-99) , 
4, 0.999524, 0, 0, 0.5078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462995,-99) , 
3, 2.00376, 0, 0, 0.484314,-99) , 
5, -0.333351, 0, 0, 0.499547,-99) , 
0, 0.495233, 1, 0, 0.504897,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0277293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333316, 1, 1, 0.525235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496496,-99) , 
0, 0.4936, 0, 0, 0.506613,-99) , 
2, 0.0700413, 0, 0, 0.509466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484268,-99) , 
2, -0.00327236, 1, 0, 0.500496,-99) , 
NN(
0, 
0, 
-1, 4.53913, 1, -1, 0.475844,-99) , 
2, 0.0715145, 1, 0, 0.496823,-99) , 
0, 0.49809, 1, 0, 0.502994,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0257133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.659814, 1, 1, 0.520587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485382,-99) , 
0, 0.501899, 1, 0, 0.496355,-99) , 
0, 0.499042, 1, 0, 0.51089,-99) , 
NN(
NN(
0, 
0, 
-1, -0.201955, 0, 1, 0.51653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489269,-99) , 
3, 3.47397, 0, 0, 0.49487,-99) , 
1, 0.00458981, 0, 0, 0.498436,-99) , 
5, 0.523743, 0, 0, 0.502678,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0145164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494601,-99) , 
0, 0.503533, 1, 0, 0.500675,-99) , 
2, -0.0680901, 1, 0, 0.508331,-99) , 
NN(
0, 
0, 
-1, -0.809504, 0, -1, 0.493994,-99) , 
0, 0.502853, 0, 0, 0.496063,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0154539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0474277, 0, 1, 0.52543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495307,-99) , 
0, 0.499133, 0, 0, 0.500095,-99) , 
0, 0.491423, 1, 0, 0.50194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462228,-99) , 
4, 0.999048, 0, 0, 0.50069,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0159208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.346603, 1, 1, 0.53518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492709,-99) , 
5, -0.714307, 0, 0, 0.522929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497389,-99) , 
0, 0.505126, 1, 0, 0.509335,-99) , 
NN(
0, 
0, 
-1, 0.500669, 1, -1, 0.495187,-99) , 
0, 0.50326, 0, 0, 0.497129,-99) , 
0, 0.492376, 1, 0, 0.499773,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00805734, 0, 1, 0.509377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472296,-99) , 
0, 0.504753, 1, 0, 0.506456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497807,-99) , 
5, 0.750709, 1, 0, 0.511567,-99) , 
NN(
0, 
0, 
-1, 0.495869, 1, -1, 0.48889,-99) , 
0, 0.500947, 0, 0, 0.494229,-99) , 
5, 0.523809, 1, 0, 0.50226,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0132636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809524, 0, 1, 0.502098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465651,-99) , 
2, -0.0158516, 1, 0, 0.489017,-99) , 
1, 0.00458981, 1, 0, 0.500334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475854,-99) , 
4, 0.999048, 0, 0, 0.499524,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0142355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999526, 1, 1, 0.504243,-99) , 
NN(
0, 
0, 
-1, 0.618952, 1, -1, 0.488427,-99) , 
2, -0.0490605, 0, 0, 0.501422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451801,-99) , 
2, -0.21213, 0, 0, 0.499599,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0238009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.04087, 0, 1, 0.504986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467753,-99) , 
4, 0.999524, 0, 0, 0.502895,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483589,-99) , 
2, 0.0778646, 0, 0, 0.491206,-99) , 
NN(
0, 
0, 
-1, 0.0182793, 1, -1, 0.465339,-99) , 
5, -0.619024, 0, 0, 0.482522,-99) , 
1, -0.00178541, 0, 0, 0.496809,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0253052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499786,-99) , 
5, -0.0204362, 0, 0, 0.506119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485522,-99) , 
3, 1.20331, 0, 0, 0.491333,-99) , 
3, 1.38923, 0, 0, 0.500975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477737,-99) , 
0, 0.498404, 0, 0, 0.486827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456098,-99) , 
0, 0.500947, 1, 0, 0.48032,-99) , 
5, 0.714251, 1, 0, 0.496562,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0249723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475804,-99) , 
0, 0.505434, 1, 0, 0.500592,-99) , 
2, 0.071747, 0, 0, 0.506972,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.524966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489763,-99) , 
0, 0.491016, 1, 0, 0.491741,-99) , 
5, 0.904671, 0, 0, 0.493859,-99) , 
0, 0.501898, 0, 0, 0.496445,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0218213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480452,-99) , 
3, 1.0952, 0, 0, 0.523596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48858,-99) , 
5, 0.236311, 0, 0, 0.500175,-99) , 
5, -0.233566, 1, 0, 0.503973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494816,-99) , 
5, -0.963722, 1, 0, 0.498572,-99) , 
NN(
0, 
0, 
-1, -0.891167, 0, -1, 0.474609,-99) , 
0, 0.495229, 0, 0, 0.491915,-99) , 
5, -0.619076, 0, 0, 0.500776,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0250572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494479,-99) , 
0, 0.499451, 1, 0, 0.508403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478261,-99) , 
0, 0.490063, 1, 0, 0.486852,-99) , 
0, 0.493328, 0, 0, 0.504964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492672,-99) , 
0, 0.499995, 0, 0, 0.497719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473475,-99) , 
5, 0.510218, 0, 0, 0.495032,-99) , 
5, 0.42855, 1, 0, 0.501086,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0227877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495097, 0, 1, 0.523069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493489,-99) , 
3, 1.56412, 1, 0, 0.501917,-99) , 
3, 4.47075, 0, 0, 0.505658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49061,-99) , 
0, 0.498997, 1, 0, 0.493015,-99) , 
NN(
0, 
0, 
-1, 0.900021, 0, -1, 0.47133,-99) , 
5, 0.809304, 1, 0, 0.490201,-99) , 
0, 0.49809, 1, 0, 0.49775,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0239796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143201, 0, 1, 0.528628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473244,-99) , 
5, 0.3312, 1, 0, 0.495423,-99) , 
0, 0.499995, 1, 0, 0.516299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492798,-99) , 
3, 4.60456, 1, 0, 0.517212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492015,-99) , 
2, -0.0126908, 1, 0, 0.49576,-99) , 
2, 0.0798299, 0, 0, 0.499168,-99) , 
2, -0.0696296, 1, 0, 0.501974,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0133242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498218,-99) , 
3, 2.3417, 0, 0, 0.511496,-99) , 
0, 0.494279, 1, 0, 0.515435,-99) , 
NN(
NN(
0, 
0, 
-1, 6.50584, 0, 1, 0.503228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474641,-99) , 
5, 0.913795, 1, 0, 0.501467,-99) , 
5, -0.809503, 1, 0, 0.503796,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0309027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478897,-99) , 
0, 0.501894, 1, 0, 0.511601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486528,-99) , 
3, 1.03707, 1, 0, 0.499304,-99) , 
3, 2.30297, 0, 0, 0.504839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516421,-99) , 
NN(
0, 
0, 
-1, 0.72013, 0, -1, 0.490432,-99) , 
5, 0.67348, 1, 0, 0.493749,-99) , 
5, 0.619049, 1, 0, 0.501713,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0276307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.919817, 0, 1, 0.532538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469294,-99) , 
5, 0.492318, 0, 0, 0.50587,-99) , 
5, 0.238046, 1, 0, 0.520833,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495626, 1, 1, 0.50286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48489,-99) , 
2, -0.0703899, 1, 0, 0.490026,-99) , 
0, 0.49936, 1, 0, 0.496151,-99) , 
0, 0.495233, 1, 0, 0.502382,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0212067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.110133, 0, 1, 0.508467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468462,-99) , 
0, 0.499053, 0, 0, 0.486909,-99) , 
3, 5.1828, 1, 0, 0.505966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465005,-99) , 
3, 8.97269, 1, 0, 0.504824,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0240309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501084, 1, 1, 0.520919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488748,-99) , 
3, 1.58306, 1, 0, 0.499246,-99) , 
3, 4.48651, 0, 0, 0.503664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534439,-99) , 
NN(
0, 
0, 
-1, 4.51103, 1, -1, 0.490479,-99) , 
1, 0.00751948, 0, 0, 0.492942,-99) , 
0, 0.499042, 0, 0, 0.497454,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0191641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497011,-99) , 
3, 1.08367, 0, 0, 0.513278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470316,-99) , 
3, 4.4665, 0, 0, 0.490562,-99) , 
3, 3.44346, 1, 0, 0.507598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527216,-99) , 
NN(
0, 
0, 
-1, -0.310651, 0, -1, 0.493549,-99) , 
0, 0.505707, 0, 0, 0.494788,-99) , 
5, -0.619032, 1, 0, 0.498152,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0170602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.191436, 1, 1, 0.506785,-99) , 
NN(
0, 
0, 
-1, -0.0279862, 0, -1, 0.489351,-99) , 
0, 0.501899, 1, 0, 0.503383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463993,-99) , 
2, 0.215915, 1, 0, 0.502013,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0270123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237318, 1, 1, 0.520111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472658,-99) , 
3, 4.47947, 1, 0, 0.497638,-99) , 
0, 0.501084, 1, 0, 0.503166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492545,-99) , 
2, -0.0737098, 1, 0, 0.496629,-99) , 
NN(
0, 
0, 
-1, -0.238369, 0, -1, 0.480144,-99) , 
0, 0.496458, 1, 0, 0.488752,-99) , 
0, 0.499995, 0, 0, 0.493602,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0198013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49686,-99) , 
5, -0.619141, 0, 0, 0.521836,-99) , 
NN(
NN(
0, 
0, 
-1, 0.496188, 1, 1, 0.513473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489706,-99) , 
0, 0.500946, 0, 0, 0.493177,-99) , 
5, 0.809437, 0, 0, 0.496198,-99) , 
1, -0.00721094, 1, 0, 0.497683,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0217256);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496365,-99) , 
5, 0.550967, 1, 0, 0.506421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467818,-99) , 
2, -0.0139846, 1, 0, 0.488802,-99) , 
0, 0.491424, 0, 0, 0.505071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461775,-99) , 
3, 1.49061, 1, 0, 0.476517,-99) , 
3, 4.59856, 0, 0, 0.482377,-99) , 
5, 0.809489, 1, 0, 0.501915,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0232477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498943,-99) , 
5, -0.619345, 0, 0, 0.533596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49657,-99) , 
0, 0.503803, 0, 0, 0.499308,-99) , 
1, -0.00621516, 1, 0, 0.501913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46482,-99) , 
3, 2.69494, 1, 0, 0.49386,-99) , 
NN(
0, 
0, 
-1, -0.13811, 0, -1, 0.469003,-99) , 
5, 0.237948, 1, 0, 0.481974,-99) , 
2, -0.0702045, 0, 0, 0.498668,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0237026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490924,-99) , 
1, 0.00418771, 1, 0, 0.504437,-99) , 
NN(
0, 
0, 
-1, 0.490516, 0, -1, 0.479741,-99) , 
0, 0.492693, 0, 0, 0.501082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474212,-99) , 
5, -0.410731, 0, 0, 0.492447,-99) , 
NN(
0, 
0, 
-1, 0.504667, 0, -1, 0.465469,-99) , 
5, 0.237883, 1, 0, 0.481976,-99) , 
0, 0.502852, 1, 0, 0.498347,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0263191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475905,-99) , 
4, 0.999524, 0, 0, 0.50768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480033,-99) , 
0, 0.494296, 1, 0, 0.488553,-99) , 
1, 0.00458981, 1, 0, 0.505085,-99) , 
NN(
0, 
0, 
-1, 0.498083, 1, -1, 0.451734,-99) , 
5, 0.904724, 1, 0, 0.502179,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0230116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00302463, 0, 1, 0.517895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478788,-99) , 
2, 0.0729019, 1, 0, 0.511059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493901,-99) , 
5, -0.238134, 1, 0, 0.498653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484596,-99) , 
0, 0.502308, 0, 0, 0.489511,-99) , 
1, -0.000651124, 0, 0, 0.494838,-99) , 
0, 0.495233, 1, 0, 0.498887,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0141698);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714453, 0, 1, 0.522689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525578,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.495088,-99) , 
0, 0.490472, 1, 0, 0.496472,-99) , 
1, -0.00621516, 1, 0, 0.498394,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0197759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492333,-99) , 
0, 0.498081, 0, 0, 0.512172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49731,-99) , 
5, 0.782319, 1, 0, 0.508926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49288,-99) , 
5, -0.922893, 1, 0, 0.494894,-99) , 
5, 0.619049, 0, 0, 0.499138,-99) , 
1, 0.00592662, 0, 0, 0.500257,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0130581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499535,-99) , 
5, -0.809514, 1, 0, 0.503058,-99) , 
2, 0.214517, 0, 0, 0.504466,-99) , 
NN(
0, 
0, 
-1, 0.489609, 1, -1, 0.476755,-99) , 
0, 0.491423, 0, 0, 0.502444,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0179487);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.213979, 0, 1, 0.506107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486579,-99) , 
3, 1.46385, 0, 0, 0.497835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439674,-99) , 
3, 5.86919, 1, 0, 0.493831,-99) , 
5, -0.0477398, 0, 0, 0.500678,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.027581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.220414, 1, 1, 0.518165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495429,-99) , 
3, 3.64194, 0, 0, 0.500366,-99) , 
5, -0.410472, 0, 0, 0.504385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48135,-99) , 
0, 0.498092, 0, 0, 0.517762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475857,-99) , 
4, 0.999977, 1, 0, 0.486359,-99) , 
4, 0.999524, 1, 0, 0.489361,-99) , 
5, -0.0476587, 1, 0, 0.495912,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0303016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484797,-99) , 
0, 0.498679, 1, 0, 0.51777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490857,-99) , 
0, 0.492693, 1, 0, 0.501653,-99) , 
0, 0.495233, 0, 0, 0.51081,-99) , 
NN(
NN(
0, 
0, 
-1, 4.22923, 0, 1, 0.518585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486804,-99) , 
5, -0.618978, 1, 0, 0.492513,-99) , 
2, -0.0724037, 1, 0, 0.496744,-99) , 
0, 0.499042, 1, 0, 0.504836,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0144543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49528, 1, 1, 0.505949,-99) , 
NN(
0, 
0, 
-1, 0.495279, 0, -1, 0.494755,-99) , 
1, 0.000160057, 0, 0, 0.500256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455765,-99) , 
0, 0.48961, 1, 0, 0.47435,-99) , 
0, 0.491424, 0, 0, 0.498371,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0196331);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486476,-99) , 
5, -0.904771, 0, 0, 0.509625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479107,-99) , 
2, -0.0578482, 0, 0, 0.497965,-99) , 
0, 0.498089, 1, 0, 0.503657,-99) , 
4, 0.999048, 1, 0, 0.504789,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0196517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499457,-99) , 
2, -0.191552, 1, 0, 0.501357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467699,-99) , 
2, 0.215915, 1, 0, 0.49985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482208,-99) , 
5, -0.494704, 0, 0, 0.487304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455229,-99) , 
5, -0.183663, 1, 0, 0.484322,-99) , 
5, -0.0476052, 0, 0, 0.493115,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0328321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487367,-99) , 
4, 0.999998, 0, 0, 0.49937,-99) , 
NN(
0, 
0, 
-1, 0.238261, 0, -1, 0.483238,-99) , 
4, 0.999955, 0, 0, 0.496191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449664,-99) , 
4, 0.999048, 0, 0, 0.494788,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0353129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00658429, 1, 1, 0.515191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443438,-99) , 
6, 0.0125763, 1, 0, 0.51244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478838,-99) , 
5, -0.879505, 0, 0, 0.488194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445484,-99) , 
5, -0.972776, 0, 0, 0.480761,-99) , 
5, -0.809519, 0, 0, 0.507201,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.020242);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497928,-99) , 
2, 0.00236794, 1, 0, 0.52005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495146,-99) , 
5, -0.269815, 0, 0, 0.505151,-99) , 
5, -0.904761, 1, 0, 0.506601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469585,-99) , 
0, 0.489519, 0, 0, 0.505515,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0232968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523812, 1, 1, 0.510684,-99) , 
NN(
0, 
0, 
-1, 2.84191, 1, -1, 0.491429,-99) , 
0, 0.501897, 1, 0, 0.507037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465267,-99) , 
5, -0.619044, 0, 0, 0.496826,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.469777,-99) , 
2, -0.0710983, 0, 0, 0.488941,-99) , 
3, 4.51103, 1, 0, 0.503632,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0235387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.775, 1, 1, 0.523002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492807,-99) , 
2, -0.0258871, 1, 0, 0.497427,-99) , 
2, 0.0466494, 0, 0, 0.501745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491846,-99) , 
0, 0.498088, 0, 0, 0.508663,-99) , 
NN(
0, 
0, 
-1, 0.156049, 1, -1, 0.479625,-99) , 
5, 0.61863, 0, 0, 0.489292,-99) , 
3, 4.44883, 1, 0, 0.499327,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0253557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0546682, 1, 1, 0.512652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479489,-99) , 
2, 0.0567679, 1, 0, 0.498205,-99) , 
3, 2.19605, 1, 0, 0.505693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525082,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.476153,-99) , 
5, 0.845573, 1, 0, 0.487013,-99) , 
5, 0.809295, 1, 0, 0.503136,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0146251);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490154,-99) , 
0, 0.498637, 0, 0, 0.520075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483453,-99) , 
4, 0.999955, 0, 0, 0.498832,-99) , 
4, 0.999524, 1, 0, 0.499977,-99) , 
0, 0.490472, 1, 0, 0.501535,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0307639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465697,-99) , 
1, -0.00096437, 1, 0, 0.48562,-99) , 
0, 0.494282, 0, 0, 0.505247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484353,-99) , 
3, 1.20938, 0, 0, 0.499633,-99) , 
NN(
0, 
0, 
-1, 0.0340281, 1, -1, 0.458244,-99) , 
3, 4.01377, 1, 0, 0.490877,-99) , 
5, -0.0476271, 0, 0, 0.498981,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0274685);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.809272, 0, 1, 0.510361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476906,-99) , 
2, 0.0713608, 1, 0, 0.509073,-99) , 
NN(
0, 
0, 
-1, 0.500341, 1, -1, 0.486315,-99) , 
0, 0.494597, 1, 0, 0.492871,-99) , 
0, 0.500946, 0, 0, 0.49747,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0240719);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482992,-99) , 
3, 3.1128, 1, 0, 0.504089,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.491329,-99) , 
2, -0.0689231, 1, 0, 0.493463,-99) , 
NN(
0, 
0, 
-1, 0.945542, 1, -1, 0.470324,-99) , 
5, 0.904725, 1, 0, 0.492134,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0272588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.26459, 1, 1, 0.521542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474918,-99) , 
0, 0.495234, 0, 0, 0.499267,-99) , 
5, 0.795905, 1, 0, 0.505993,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48875,-99) , 
3, 3.0871, 0, 0, 0.495344,-99) , 
NN(
0, 
0, 
-1, 2.90913, 1, -1, 0.474749,-99) , 
2, -0.0743747, 0, 0, 0.492128,-99) , 
5, 0.714253, 0, 0, 0.495136,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.023563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469845,-99) , 
4, 0.999932, 0, 0, 0.502217,-99) , 
4, 0.999524, 1, 0, 0.504924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4938,-99) , 
0, 0.496819, 1, 0, 0.499004,-99) , 
NN(
0, 
0, 
-1, -0.333351, 1, -1, 0.478498,-99) , 
0, 0.49428, 0, 0, 0.495037,-99) , 
1, -9.45486e-05, 1, 0, 0.499808,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0222886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714446, 0, 1, 0.527347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475954,-99) , 
2, -0.0918156, 0, 0, 0.50606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485001,-99) , 
0, 0.499042, 0, 0, 0.491438,-99) , 
5, -0.52379, 1, 0, 0.495485,-99) , 
1, -0.00621516, 1, 0, 0.497904,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.019976);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489961,-99) , 
4, 0.999955, 0, 0, 0.516014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491532,-99) , 
5, -0.619085, 0, 0, 0.501607,-99) , 
2, 0.065499, 0, 0, 0.503818,-99) , 
4, 0.999048, 1, 0, 0.505076,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0238991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57257, 1, 1, 0.520674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475766,-99) , 
5, -0.371171, 1, 0, 0.499941,-99) , 
5, -0.0567031, 0, 0, 0.503426,-99) , 
NN(
0, 
0, 
-1, -0.0709862, 0, -1, 0.487649,-99) , 
5, 0.238095, 1, 0, 0.496056,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0215695);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493357,-99) , 
0, 0.500629, 1, 0, 0.505281,-99) , 
NN(
0, 
0, 
-1, -0.746024, 1, -1, 0.493038,-99) , 
5, -0.333346, 0, 0, 0.50102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453878,-99) , 
3, 3.02859, 1, 0, 0.495705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456236,-99) , 
3, 4.48201, 1, 0, 0.488449,-99) , 
0, 0.49428, 0, 0, 0.498598,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0173934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495828,-99) , 
3, 4.22648, 0, 0, 0.498497,-99) , 
4, 0.999525, 1, 0, 0.499888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510271,-99) , 
NN(
0, 
0, 
-1, 0.0206644, 0, -1, 0.476883,-99) , 
5, -0.7142, 1, 0, 0.484084,-99) , 
2, -0.0709862, 0, 0, 0.497346,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0323562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493012, 0, 1, 0.532328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488438,-99) , 
5, 0.809535, 1, 0, 0.503367,-99) , 
0, 0.494282, 1, 0, 0.50838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485093,-99) , 
5, -0.174766, 0, 0, 0.489957,-99) , 
NN(
0, 
0, 
-1, -0.174622, 1, -1, 0.465294,-99) , 
3, 3.68771, 1, 0, 0.483702,-99) , 
5, 0.333337, 0, 0, 0.494327,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0152481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495124,-99) , 
3, 8.56258, 0, 0, 0.496298,-99) , 
4, 0.999524, 1, 0, 0.497379,-99) , 
NN(
0, 
0, 
-1, 0.237959, 1, -1, 0.475324,-99) , 
0, 0.491424, 0, 0, 0.495842,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.015722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499448,-99) , 
5, -0.632619, 1, 0, 0.502415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461603,-99) , 
5, -0.950095, 1, 0, 0.486408,-99) , 
5, -0.904742, 0, 0, 0.5009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452178,-99) , 
3, 2.36176, 1, 0, 0.469183,-99) , 
5, 0.618969, 0, 0, 0.479603,-99) , 
2, 0.0735345, 1, 0, 0.497791,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0359963);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492478,-99) , 
0, 0.492375, 0, 0, 0.523007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474886,-99) , 
5, -0.863918, 0, 0, 0.498538,-99) , 
3, 2.97849, 1, 0, 0.514759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491689,-99) , 
5, 0.66029, 1, 0, 0.502028,-99) , 
NN(
0, 
0, 
-1, 0.0474019, 0, -1, 0.4731,-99) , 
5, 0.351463, 0, 0, 0.494777,-99) , 
5, -0.0476324, 1, 0, 0.503432,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.025392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496178,-99) , 
3, 3.68771, 1, 0, 0.508673,-99) , 
0, 0.490474, 1, 0, 0.510812,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477685,-99) , 
6, 0.00450878, 1, 0, 0.504673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454456,-99) , 
5, 0.442177, 1, 0, 0.48135,-99) , 
5, 0.523832, 0, 0, 0.499823,-99) , 
5, 0.33334, 1, 0, 0.506029,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0193603);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.963707, 0, 1, 0.518693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491588,-99) , 
5, 0.274317, 0, 0, 0.49735,-99) , 
NN(
0, 
0, 
-1, -0.204628, 1, -1, 0.476209,-99) , 
2, -0.0688005, 0, 0, 0.493877,-99) , 
5, -0.904747, 1, 0, 0.496209,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0247351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48562,-99) , 
5, 0.618825, 1, 0, 0.503223,-99) , 
4, 0.999524, 1, 0, 0.505027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486113,-99) , 
0, 0.500008, 0, 0, 0.493222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463021,-99) , 
5, 0.808999, 1, 0, 0.488447,-99) , 
3, 4.44496, 1, 0, 0.501814,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0244458);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.936521, 0, 1, 0.521854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483877,-99) , 
2, 0.00198682, 1, 0, 0.507224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49024,-99) , 
3, 6.67795, 0, 0, 0.492027,-99) , 
1, 0.00458981, 0, 0, 0.494053,-99) , 
5, 0.904762, 0, 0, 0.495704,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0184556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490172,-99) , 
4, 0.999977, 0, 0, 0.521035,-99) , 
NN(
0, 
0, 
-1, 0.999977, 1, 1, 0.504759,-99) , 
2, 0.0888371, 0, 0, 0.506554,-99) , 
NN(
0, 
0, 
-1, 0.498087, 0, -1, 0.464397,-99) , 
4, 0.999524, 0, 0, 0.504354,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0185709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495462,-99) , 
2, 0.133123, 0, 0, 0.496828,-99) , 
2, 0.214776, 0, 0, 0.498185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475859,-99) , 
5, -0.618903, 1, 0, 0.485987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461909,-99) , 
0, 0.503986, 0, 0, 0.477738,-99) , 
0, 0.502851, 1, 0, 0.495189,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0209477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483648,-99) , 
0, 0.504348, 1, 0, 0.504014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471889,-99) , 
2, -0.138997, 0, 0, 0.488767,-99) , 
2, -0.0709862, 0, 0, 0.501731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495784,-99) , 
2, -0.138082, 0, 0, 0.514412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48682,-99) , 
0, 0.495777, 0, 0, 0.488818,-99) , 
2, -0.0702045, 1, 0, 0.49332,-99) , 
0, 0.496185, 0, 0, 0.498987,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0250445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49032,-99) , 
2, 0.00524243, 0, 0, 0.497543,-99) , 
5, 0.904762, 0, 0, 0.499481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480848,-99) , 
5, 0.428187, 1, 0, 0.501362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450776,-99) , 
3, 1.77596, 1, 0, 0.467862,-99) , 
3, 4.38495, 0, 0, 0.47934,-99) , 
2, -0.0694578, 0, 0, 0.496201,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0230146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0461927, 1, 1, 0.524723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473144,-99) , 
1, 0.000998809, 0, 0, 0.489638,-99) , 
5, 0.428504, 1, 0, 0.508743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518805,-99) , 
NN(
0, 
0, 
-1, 3.91248, 1, -1, 0.491823,-99) , 
2, -0.1554, 1, 0, 0.493168,-99) , 
3, 4.54421, 0, 0, 0.495996,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0203467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496734,-99) , 
5, -0.238188, 1, 0, 0.503151,-99) , 
4, 0.999524, 1, 0, 0.504733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504813,-99) , 
NN(
0, 
0, 
-1, 4.40351, 0, -1, 0.476178,-99) , 
5, -0.619147, 1, 0, 0.483209,-99) , 
2, -0.0708144, 0, 0, 0.501304,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0298239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523788, 0, 1, 0.512073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483112,-99) , 
1, 0.00218767, 0, 0, 0.492791,-99) , 
3, 4.54421, 1, 0, 0.508553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484033,-99) , 
1, 0.000160057, 0, 0, 0.502512,-99) , 
NN(
0, 
0, 
-1, -0.619056, 0, -1, 0.47586,-99) , 
0, 0.504619, 0, 0, 0.485725,-99) , 
0, 0.501899, 1, 0, 0.503947,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0368662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498036,-99) , 
2, -0.0456976, 0, 0, 0.517904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469581,-99) , 
4, 0.999524, 1, 0, 0.492903,-99) , 
5, 0.873019, 1, 0, 0.510575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478213,-99) , 
4, 0.999995, 0, 0, 0.497403,-99) , 
4, 0.999905, 1, 0, 0.498893,-99) , 
5, 0.619049, 0, 0, 0.5022,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0216417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00587028, 1, 1, 0.512347,-99) , 
NN(
0, 
0, 
-1, 0.502853, 1, -1, 0.49394,-99) , 
5, 0.138343, 1, 0, 0.501142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478726,-99) , 
3, 2.33522, 1, 0, 0.496101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460905,-99) , 
0, 0.496182, 0, 0, 0.48418,-99) , 
5, -0.809527, 0, 0, 0.498338,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0105212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460483,-99) , 
4, 0.999728, 0, 0, 0.499368,-99) , 
2, -0.201247, 1, 0, 0.50101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456228,-99) , 
4, 0.999048, 0, 0, 0.499621,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0296275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486516,-99) , 
4, 0.999524, 0, 0, 0.509885,-99) , 
0, 0.493328, 1, 0, 0.514011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490362,-99) , 
1, -0.00721094, 1, 0, 0.494575,-99) , 
NN(
0, 
0, 
-1, 1.49384, 0, -1, 0.475236,-99) , 
5, -0.922908, 0, 0, 0.492479,-99) , 
5, 0.618923, 0, 0, 0.498609,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0255766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.511102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487459,-99) , 
2, -0.0688005, 1, 0, 0.494451,-99) , 
3, 4.54421, 1, 0, 0.507585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481489,-99) , 
0, 0.495229, 1, 0, 0.488213,-99) , 
2, 0.0777876, 0, 0, 0.492065,-99) , 
5, -0.428607, 0, 0, 0.502431,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0148977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493957,-99) , 
3, 1.74693, 0, 0, 0.499422,-99) , 
4, 0.999048, 1, 0, 0.50117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451893,-99) , 
3, 8.80212, 1, 0, 0.499707,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0183591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489852,-99) , 
0, 0.491107, 0, 0, 0.510072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488013,-99) , 
5, 0.61882, 1, 0, 0.497583,-99) , 
0, 0.494281, 1, 0, 0.499889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488492,-99) , 
5, 0.509616, 1, 0, 0.49547,-99) , 
NN(
0, 
0, 
-1, 2.55935, 1, -1, 0.459227,-99) , 
5, -0.143202, 0, 0, 0.480858,-99) , 
2, -0.0708144, 0, 0, 0.496783,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0169149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00281661, 0, 1, 0.515477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482076,-99) , 
2, -0.0705569, 0, 0, 0.509283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474095,-99) , 
0, 0.506014, 1, 0, 0.500593,-99) , 
NN(
0, 
0, 
-1, 0.00140088, 0, -1, 0.472638,-99) , 
0, 0.496413, 0, 0, 0.497229,-99) , 
0, 0.495234, 1, 0, 0.500276,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0269396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504347, 0, 1, 0.526387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483702,-99) , 
5, -0.523866, 0, 0, 0.497895,-99) , 
1, 0.000160057, 0, 0, 0.51182,-99) , 
NN(
NN(
0, 
0, 
-1, 0.496035, 0, 1, 0.505551,-99) , 
NN(
0, 
0, 
-1, 4.22641, 1, -1, 0.482409,-99) , 
0, 0.496456, 1, 0, 0.492297,-99) , 
0, 0.501898, 0, 0, 0.496201,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0153847);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999525, 1, 1, 0.505264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492506,-99) , 
0, 0.491423, 1, 0, 0.49505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459479,-99) , 
3, 5.86919, 1, 0, 0.492779,-99) , 
5, -0.0476505, 0, 0, 0.499782,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0217912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481289,-99) , 
5, -0.243928, 0, 0, 0.498758,-99) , 
5, -0.632628, 1, 0, 0.5011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494488,-99) , 
5, -0.974098, 0, 0, 0.518455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465543,-99) , 
3, 1.35518, 1, 0, 0.479213,-99) , 
5, -0.945584, 1, 0, 0.489209,-99) , 
5, -0.714298, 0, 0, 0.498401,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0306571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.20616, 0, 1, 0.509478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457969,-99) , 
3, 2.20433, 1, 0, 0.482448,-99) , 
2, 0.0466494, 1, 0, 0.503834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486741,-99) , 
2, -0.0750664, 1, 0, 0.489636,-99) , 
NN(
0, 
0, 
-1, 0.504893, 0, -1, 0.459262,-99) , 
0, 0.502852, 1, 0, 0.485811,-99) , 
5, -0.142902, 1, 0, 0.493256,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.019555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.842754, 1, 1, 0.550995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473125,-99) , 
5, 0.90934, 0, 0, 0.493388,-99) , 
5, 0.873018, 1, 0, 0.516695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484363,-99) , 
5, 0.653598, 1, 0, 0.500191,-99) , 
NN(
0, 
0, 
-1, -0.89332, 1, -1, 0.487232,-99) , 
5, -0.827664, 0, 0, 0.497836,-99) , 
5, 0.809523, 0, 0, 0.500483,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0192788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.659994, 1, 1, 0.508479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491359,-99) , 
3, 0.919757, 1, 0, 0.495612,-99) , 
5, 0.523812, 0, 0, 0.499839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468704,-99) , 
4, 0.999048, 0, 0, 0.498894,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0149129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498136, 0, 1, 0.516807,-99) , 
NN(
0, 
0, 
-1, -0.227367, 0, -1, 0.495496,-99) , 
2, 0.0717919, 0, 0, 0.498579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451286,-99) , 
0, 0.489521, 0, 0, 0.497274,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0244674);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488742,-99) , 
2, -0.100354, 1, 0, 0.490682,-99) , 
2, 0.132742, 0, 0, 0.49266,-99) , 
2, 0.214436, 0, 0, 0.494112,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0196083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.33408, 1, 1, 0.514427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468388,-99) , 
0, 0.503803, 1, 0, 0.497208,-99) , 
5, -0.619093, 1, 0, 0.501599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476096,-99) , 
5, -0.61906, 0, 0, 0.496165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451199,-99) , 
0, 0.493328, 1, 0, 0.484463,-99) , 
0, 0.49428, 0, 0, 0.498269,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0242981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494278, 1, 1, 0.521274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484004,-99) , 
2, -0.0638239, 0, 0, 0.514915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498408,-99) , 
5, 0.26519, 0, 0, 0.524035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49287,-99) , 
5, 0.918269, 0, 0, 0.494822,-99) , 
0, 0.503803, 0, 0, 0.497525,-99) , 
5, -0.714279, 1, 0, 0.501429,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.027743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489597,-99) , 
0, 0.502852, 1, 0, 0.508556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48257,-99) , 
5, -0.96371, 1, 0, 0.486385,-99) , 
5, -0.619077, 0, 0, 0.502508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45068,-99) , 
2, 0.213979, 1, 0, 0.500602,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0149718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469597,-99) , 
4, 0.999841, 0, 0, 0.500783,-99) , 
4, 0.999524, 1, 0, 0.502315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495173,-99) , 
5, 0.809384, 0, 0, 0.497895,-99) , 
NN(
0, 
0, 
-1, -0.142685, 0, -1, 0.466288,-99) , 
2, -0.0748489, 0, 0, 0.492844,-99) , 
0, 0.499994, 1, 0, 0.499087,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0195046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528432,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.492282,-99) , 
3, 8.13787, 0, 0, 0.493665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451554,-99) , 
4, 0.999048, 0, 0, 0.492357,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0250149);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481941,-99) , 
3, 0.795181, 0, 0, 0.507661,-99) , 
NN(
0, 
0, 
-1, -0.0697417, 0, -1, 0.488779,-99) , 
5, -0.809501, 1, 0, 0.491885,-99) , 
0, 0.505709, 0, 0, 0.493308,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0211674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497487,-99) , 
5, 0.178997, 1, 0, 0.50676,-99) , 
5, 0.904521, 0, 0, 0.508834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493744,-99) , 
0, 0.491107, 1, 0, 0.4972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454192,-99) , 
4, 0.999524, 0, 0, 0.494859,-99) , 
0, 0.498091, 0, 0, 0.502002,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0168429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492259,-99) , 
3, 2.05358, 1, 0, 0.504232,-99) , 
3, 4.54299, 0, 0, 0.515256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497318,-99) , 
2, 0.0176942, 0, 0, 0.501216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478225,-99) , 
2, -0.224018, 0, 0, 0.500238,-99) , 
2, 0.0745611, 0, 0, 0.502386,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0209124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498047,-99) , 
5, -0.274375, 0, 0, 0.506492,-99) , 
0, 0.505706, 0, 0, 0.50809,-99) , 
NN(
0, 
0, 
-1, 0.941004, 1, -1, 0.474552,-99) , 
5, 0.904723, 1, 0, 0.506203,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0250974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501444, 1, 1, 0.514089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493891,-99) , 
2, -0.00119432, 1, 0, 0.500649,-99) , 
0, 0.499992, 0, 0, 0.50516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45779,-99) , 
3, 3.25579, 1, 0, 0.49839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468088,-99) , 
5, 0.523542, 1, 0, 0.487451,-99) , 
2, 0.0735345, 1, 0, 0.502578,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0288013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491051,-99) , 
5, -0.709777, 0, 0, 0.50353,-99) , 
1, 0.0103564, 0, 0, 0.507866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480649,-99) , 
5, 0.587239, 0, 0, 0.491364,-99) , 
0, 0.504757, 0, 0, 0.493862,-99) , 
5, -0.238154, 1, 0, 0.499194,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0216703);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486352,-99) , 
3, 6.38764, 1, 0, 0.511652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476863,-99) , 
5, 0.936511, 1, 0, 0.502463,-99) , 
5, 0.33334, 1, 0, 0.507615,-99) , 
0, 0.489519, 1, 0, 0.508507,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0212895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503684, 0, 1, 0.526619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486184,-99) , 
0, 0.506254, 0, 0, 0.497148,-99) , 
0, 0.50444, 1, 0, 0.510474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491675,-99) , 
2, -0.0677529, 1, 0, 0.494173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466378,-99) , 
1, 0.0103564, 1, 0, 0.493226,-99) , 
0, 0.502852, 0, 0, 0.495717,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0184081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619, 0, 1, 0.517203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489669,-99) , 
5, 0.61902, 1, 0, 0.500142,-99) , 
0, 0.502716, 0, 0, 0.502846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46851,-99) , 
0, 0.490472, 0, 0, 0.501214,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0248295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493072, 1, 1, 0.528887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488035,-99) , 
0, 0.490169, 1, 0, 0.498667,-99) , 
0, 0.491741, 0, 0, 0.516041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496042,-99) , 
5, -0.523821, 1, 0, 0.507503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489101,-99) , 
2, -0.0305255, 1, 0, 0.492818,-99) , 
3, 4.43901, 0, 0, 0.495704,-99) , 
0, 0.494281, 1, 0, 0.49953,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0288087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00563643, 0, 1, 0.510749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471561,-99) , 
0, 0.498094, 0, 0, 0.491485,-99) , 
2, -0.0691054, 0, 0, 0.507477,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495232, 1, 1, 0.512628,-99) , 
NN(
0, 
0, 
-1, -0.0638239, 0, -1, 0.475452,-99) , 
3, 1.95243, 1, 0, 0.493682,-99) , 
5, -0.428562, 0, 0, 0.502925,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0146364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714288, 0, 1, 0.505664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478989,-99) , 
4, 0.999524, 0, 0, 0.504284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462974,-99) , 
0, 0.489519, 0, 0, 0.503122,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0220696);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478507,-99) , 
5, -0.963725, 0, 0, 0.513823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454153,-99) , 
6, 0.010283, 1, 0, 0.499473,-99) , 
5, -0.619055, 1, 0, 0.50327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478321,-99) , 
0, 0.500357, 1, 0, 0.49459,-99) , 
NN(
0, 
0, 
-1, -0.333327, 1, -1, 0.470141,-99) , 
0, 0.498089, 0, 0, 0.482415,-99) , 
2, -0.0694578, 0, 0, 0.499848,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0301411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5, 0, 1, 0.535869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483637,-99) , 
5, 0.673542, 1, 0, 0.495783,-99) , 
5, 0.142869, 1, 0, 0.512975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493502,-99) , 
5, 0.904536, 0, 0, 0.495261,-99) , 
NN(
0, 
0, 
-1, -0.0598175, 0, -1, 0.476465,-99) , 
3, 2.19382, 1, 0, 0.488452,-99) , 
3, 4.47219, 0, 0, 0.493067,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0221809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496975,-99) , 
0, 0.502848, 0, 0, 0.500782,-99) , 
1, 0.0103564, 0, 0, 0.502851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494439,-99) , 
0, 0.499982, 0, 0, 0.50609,-99) , 
NN(
0, 
0, 
-1, 0.735678, 1, -1, 0.48465,-99) , 
5, 0.818618, 0, 0, 0.490673,-99) , 
5, 0.238106, 1, 0, 0.497087,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0251268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618967, 0, 1, 0.524133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482733,-99) , 
2, 0.107407, 0, 0, 0.504727,-99) , 
2, 0.139786, 0, 0, 0.514128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493023,-99) , 
5, -0.827639, 1, 0, 0.496094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44874,-99) , 
2, -0.00311595, 0, 0, 0.474654,-99) , 
5, 0.809526, 1, 0, 0.493297,-99) , 
2, 0.0717919, 0, 0, 0.496373,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0210924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487398,-99) , 
5, 0.809039, 1, 0, 0.511871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490627,-99) , 
0, 0.502483, 1, 0, 0.499156,-99) , 
0, 0.497819, 1, 0, 0.504779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471597,-99) , 
0, 0.490471, 0, 0, 0.503173,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.025026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497281,-99) , 
4, 0.999998, 0, 0, 0.507154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43733,-99) , 
5, 0.238369, 0, 0, 0.490109,-99) , 
4, 0.999955, 0, 0, 0.503741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465384,-99) , 
4, 0.999048, 0, 0, 0.502572,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0238607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.116293, 0, 1, 0.507944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461701,-99) , 
3, 3.08463, 1, 0, 0.481503,-99) , 
2, -0.10001, 0, 0, 0.505007,-99) , 
NN(
0, 
0, 
-1, 0.909302, 1, -1, 0.48333,-99) , 
5, 0.523809, 1, 0, 0.497567,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.025764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.160955, 1, 1, 0.510373,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.481488,-99) , 
2, -0.0708144, 0, 0, 0.505643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484402,-99) , 
5, -0.773463, 1, 0, 0.507403,-99) , 
NN(
0, 
0, 
-1, 0.499949, 0, -1, 0.485576,-99) , 
0, 0.495232, 1, 0, 0.491689,-99) , 
5, -0.523788, 0, 0, 0.501438,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.011886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528872,-99) , 
NN(
0, 
0, 
-1, 4.51103, 1, -1, 0.495003,-99) , 
2, -0.212284, 1, 0, 0.496344,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0191903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999976, 1, 1, 0.50654,-99) , 
NN(
0, 
0, 
-1, 0.238153, 0, -1, 0.48289,-99) , 
4, 0.999955, 0, 0, 0.501807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460213,-99) , 
4, 0.999048, 0, 0, 0.500553,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0138842);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541387,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999526, 1, 1, 0.504314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470594,-99) , 
2, 0.195493, 1, 0, 0.502798,-99) , 
2, -0.212001, 1, 0, 0.504407,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.018388);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.203932, 1, 1, 0.517051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484131,-99) , 
3, 4.00995, 1, 0, 0.499695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45444,-99) , 
0, 0.490471, 0, 0, 0.497877,-99) , 
2, -0.0682022, 1, 0, 0.501133,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0314872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485459,-99) , 
0, 0.493057, 0, 0, 0.513601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484755,-99) , 
0, 0.503123, 0, 0, 0.492868,-99) , 
0, 0.497138, 1, 0, 0.501201,-99) , 
NN(
0, 
0, 
-1, 0.491423, 0, -1, 0.486081,-99) , 
5, 0.523814, 0, 0, 0.491215,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0275053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497863,-99) , 
5, -0.873089, 0, 0, 0.53302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490223,-99) , 
5, 0.332423, 1, 0, 0.522915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496783,-99) , 
5, 0.873038, 0, 0, 0.517623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489763,-99) , 
5, -0.7415, 1, 0, 0.493528,-99) , 
5, 0.809523, 0, 0, 0.497263,-99) , 
1, -0.00394721, 1, 0, 0.500998,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487157,-99) , 
2, 0.0715145, 1, 0, 0.517883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464948,-99) , 
0, 0.491424, 0, 0, 0.499272,-99) , 
3, 4.43942, 0, 0, 0.503072,-99) , 
NN(
0, 
0, 
-1, -0.972768, 0, -1, 0.481681,-99) , 
5, -0.809505, 0, 0, 0.499539,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0162094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499703,-99) , 
1, -0.00621516, 1, 0, 0.502444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48122,-99) , 
4, 0.999524, 1, 0, 0.48517,-99) , 
5, 0.619051, 1, 0, 0.49767,-99) , 
2, 0.215886, 0, 0, 0.499089,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0227263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473525,-99) , 
5, -0.510267, 1, 0, 0.509356,-99) , 
5, -0.428572, 0, 0, 0.51245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497372,-99) , 
0, 0.49333, 1, 0, 0.501069,-99) , 
NN(
0, 
0, 
-1, -0.0792821, 1, -1, 0.478008,-99) , 
5, 0.0477623, 0, 0, 0.497132,-99) , 
5, -0.333333, 1, 0, 0.50257,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0226459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.29854, 0, 1, 0.530979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474548,-99) , 
2, -0.205088, 0, 0, 0.507088,-99) , 
5, 0.814029, 0, 0, 0.509072,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.479134,-99) , 
5, 0.904763, 1, 0, 0.507359,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0240271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488734,-99) , 
5, 0.882, 1, 0, 0.50955,-99) , 
4, 0.999524, 1, 0, 0.517985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520302,-99) , 
NN(
0, 
0, 
-1, 0.0847955, 1, -1, 0.490846,-99) , 
0, 0.505709, 0, 0, 0.492067,-99) , 
5, 0.809489, 0, 0, 0.495726,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.036504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473268,-99) , 
2, 0.0917558, 1, 0, 0.507993,-99) , 
NN(
0, 
0, 
-1, 0.896311, 1, -1, 0.475819,-99) , 
5, 0.863913, 1, 0, 0.502547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487223,-99) , 
0, 0.496596, 0, 0, 0.4962,-99) , 
NN(
0, 
0, 
-1, -0.700687, 1, -1, 0.475455,-99) , 
0, 0.498092, 1, 0, 0.485479,-99) , 
5, 0.0475983, 0, 0, 0.494557,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0261166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490599,-99) , 
2, 0.0847955, 1, 0, 0.516697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494322,-99) , 
2, 0.0362575, 0, 0, 0.499745,-99) , 
3, 2.30297, 0, 0, 0.507361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518929,-99) , 
NN(
0, 
0, 
-1, 0.500945, 1, -1, 0.49175,-99) , 
2, 0.0707719, 0, 0, 0.496181,-99) , 
5, 0.618928, 1, 0, 0.504187,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0275573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.34423, 1, 1, 0.524269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484734,-99) , 
0, 0.499994, 0, 0, 0.496013,-99) , 
5, -0.7551, 0, 0, 0.510194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49589,-99) , 
5, 0.31072, 1, 0, 0.498658,-99) , 
NN(
0, 
0, 
-1, 0.499994, 1, -1, 0.478298,-99) , 
5, 0.238114, 0, 0, 0.494498,-99) , 
5, -0.142886, 1, 0, 0.500861,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.012943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49301, 0, 1, 0.518101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499824,-99) , 
5, 0.809524, 0, 0, 0.502181,-99) , 
0, 0.49428, 1, 0, 0.505177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46061,-99) , 
4, 0.999048, 0, 0, 0.503809,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0255426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495109,-99) , 
4, 0.999977, 1, 0, 0.509821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478071,-99) , 
4, 0.999524, 0, 0, 0.507088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484207,-99) , 
3, 1.0828, 0, 0, 0.496419,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.469019,-99) , 
5, -0.229127, 1, 0, 0.493093,-99) , 
5, -0.0477238, 0, 0, 0.50091,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0169863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480917,-99) , 
5, 0.904763, 1, 0, 0.504517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472812,-99) , 
0, 0.505708, 1, 0, 0.503209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466247,-99) , 
1, -0.0104756, 0, 0, 0.502009,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0107381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.504863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481919,-99) , 
2, -0.211717, 0, 0, 0.503985,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0175557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498797,-99) , 
0, 0.493523, 0, 0, 0.527039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489218,-99) , 
5, 0.0463488, 0, 0, 0.503874,-99) , 
0, 0.500001, 1, 0, 0.518578,-99) , 
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.506122,-99) , 
2, -0.0724037, 1, 0, 0.508101,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0257926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.511648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478762,-99) , 
3, 8.84719, 1, 0, 0.510138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493926,-99) , 
0, 0.495226, 1, 0, 0.503544,-99) , 
NN(
0, 
0, 
-1, 0.495236, 0, -1, 0.483216,-99) , 
3, 2.45993, 1, 0, 0.495252,-99) , 
5, -0.238088, 0, 0, 0.504432,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0242523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 1, 1, 0.526427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472073,-99) , 
3, 4.64765, 1, 0, 0.497127,-99) , 
5, 0.237883, 1, 0, 0.512241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48918,-99) , 
2, -0.00171588, 1, 0, 0.498697,-99) , 
NN(
0, 
0, 
-1, -0.0476921, 1, -1, 0.487131,-99) , 
0, 0.499043, 1, 0, 0.493855,-99) , 
2, 0.0730252, 0, 0, 0.496482,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0143365);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.909297, 1, -1, 0.495544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442702,-99) , 
3, 1.883, 1, 0, 0.476104,-99) , 
5, -0.904761, 0, 0, 0.493681,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0204659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.909215, 1, 1, 0.522768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4902,-99) , 
5, 0.756976, 1, 0, 0.498986,-99) , 
5, 0.863865, 0, 0, 0.509426,-99) , 
NN(
0, 
0, 
-1, 0.999886, 0, -1, 0.491761,-99) , 
5, 0.714207, 0, 0, 0.495597,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0155664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4932,-99) , 
0, 0.499042, 0, 0, 0.497881,-99) , 
2, -0.271547, 1, 0, 0.499055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462411,-99) , 
2, 0.217146, 1, 0, 0.497805,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0184843);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49555, 1, 1, 0.507684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4899,-99) , 
0, 0.489791, 1, 0, 0.495512,-99) , 
NN(
0, 
0, 
-1, -0.000455414, 1, -1, 0.476024,-99) , 
0, 0.492693, 1, 0, 0.487477,-99) , 
0, 0.49428, 0, 0, 0.503814,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0232662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.08948, 1, 1, 0.530442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47789,-99) , 
0, 0.492376, 0, 0, 0.491232,-99) , 
5, 0.428504, 1, 0, 0.51683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499541,-99) , 
5, -0.428571, 0, 0, 0.520675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486386,-99) , 
3, 4.13183, 1, 0, 0.501404,-99) , 
0, 0.504439, 0, 0, 0.503255,-99) , 
0, 0.494281, 1, 0, 0.505798,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0239868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493716,-99) , 
0, 0.493328, 0, 0, 0.508053,-99) , 
2, -0.217146, 1, 0, 0.509126,-99) , 
NN(
0, 
0, 
-1, 0.498093, 1, -1, 0.468085,-99) , 
5, 0.904616, 1, 0, 0.506852,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0257026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481824,-99) , 
5, -0.396861, 0, 0, 0.49688,-99) , 
5, 0.809431, 0, 0, 0.503995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486458,-99) , 
3, 2.42702, 1, 0, 0.503487,-99) , 
NN(
0, 
0, 
-1, 1.38817, 1, -1, 0.487009,-99) , 
5, -0.523832, 1, 0, 0.492257,-99) , 
3, 4.53295, 0, 0, 0.494455,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0226834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505012, 0, 1, 0.532933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49003,-99) , 
0, 0.506343, 1, 0, 0.522202,-99) , 
NN(
NN(
0, 
0, 
-1, 0.945483, 0, 1, 0.52953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49336,-99) , 
0, 0.493011, 1, 0, 0.496783,-99) , 
5, 0.904662, 0, 0, 0.498839,-99) , 
0, 0.503803, 0, 0, 0.501229,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.025479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619104, 0, 1, 0.52628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493944,-99) , 
0, 0.489791, 0, 0, 0.521754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491646,-99) , 
5, 0.782319, 1, 0, 0.508889,-99) , 
NN(
0, 
0, 
-1, 5.3902, 1, -1, 0.494439,-99) , 
5, 0.619049, 0, 0, 0.498617,-99) , 
0, 0.495233, 1, 0, 0.50432,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0167216);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.845716, 1, 1, 0.525812,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0709224, 1, 1, 0.508324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483874,-99) , 
3, 5.13548, 1, 0, 0.499248,-99) , 
5, -0.0522053, 0, 0, 0.50371,-99) , 
5, 0.809428, 0, 0, 0.506884,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0248796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488158,-99) , 
3, 0.640862, 1, 0, 0.523883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499825,-99) , 
2, 0.00966788, 0, 0, 0.504854,-99) , 
3, 0.761153, 1, 0, 0.508306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486198,-99) , 
3, 5.47393, 1, 0, 0.505295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469087,-99) , 
1, 0.00166404, 0, 0, 0.482177,-99) , 
5, -0.143019, 1, 0, 0.489674,-99) , 
3, 4.55086, 1, 0, 0.504861,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0240397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.95183, 1, 1, 0.529546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458909,-99) , 
2, 0.071981, 1, 0, 0.493717,-99) , 
5, 0.428579, 1, 0, 0.513725,-99) , 
NN(
NN(
0, 
0, 
-1, 0.328739, 0, 1, 0.526401,-99) , 
NN(
0, 
0, 
-1, 3.91127, 1, -1, 0.494457,-99) , 
3, 0.710223, 1, 0, 0.499616,-99) , 
3, 4.44496, 0, 0, 0.502241,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0101417);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0708144, 1, 1, 0.504174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462238,-99) , 
1, 0.0121806, 1, 0, 0.503055,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0203119);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497784,-99) , 
0, 0.50039, 1, 0, 0.504591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48909,-99) , 
2, 0.0732142, 0, 0, 0.493044,-99) , 
0, 0.498134, 0, 0, 0.499072,-99) , 
0, 0.489518, 1, 0, 0.500056,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0228486);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00445068, 1, 1, 0.508623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457417,-99) , 
2, 0.0527355, 1, 0, 0.491269,-99) , 
NN(
0, 
0, 
-1, -0.92744, 0, -1, 0.458061,-99) , 
2, -0.0137512, 0, 0, 0.479192,-99) , 
5, -0.809514, 0, 0, 0.503719,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00920141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499045,-99) , 
3, 8.55516, 0, 0, 0.500444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454546,-99) , 
4, 0.999751, 0, 0, 0.499064,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.477527,-99) , 
4, 0.999524, 0, 0, 0.497914,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0216235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507775,-99) , 
NN(
0, 
0, 
-1, 0.494553, 0, -1, 0.48758,-99) , 
0, 0.496186, 0, 0, 0.501616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497453,-99) , 
3, 4.81698, 0, 0, 0.50043,-99) , 
NN(
0, 
0, 
-1, -0.295084, 0, -1, 0.477865,-99) , 
5, -0.564635, 1, 0, 0.490615,-99) , 
5, 0.142834, 0, 0, 0.496128,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0130295);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0575635, 1, 1, 0.5046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468631,-99) , 
5, -0.619041, 0, 0, 0.495173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452831,-99) , 
0, 0.502852, 1, 0, 0.487473,-99) , 
3, 4.44883, 1, 0, 0.501338,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0221577);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499589,-99) , 
0, 0.495243, 0, 0, 0.516183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487707,-99) , 
2, -0.0117347, 1, 0, 0.494898,-99) , 
2, 0.112594, 0, 0, 0.497043,-99) , 
2, -0.213764, 1, 0, 0.498061,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0158495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483345,-99) , 
2, 0.155306, 1, 0, 0.504012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479498,-99) , 
5, 0.332987, 0, 0, 0.490205,-99) , 
2, -0.0688005, 0, 0, 0.501823,-99) , 
NN(
0, 
0, 
-1, 0.489609, 1, -1, 0.483327,-99) , 
0, 0.491423, 0, 0, 0.500494,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0196916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479801,-99) , 
0, 0.489427, 1, 0, 0.502722,-99) , 
0, 0.490788, 0, 0, 0.519879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497198,-99) , 
5, 0.428322, 1, 0, 0.511578,-99) , 
NN(
0, 
0, 
-1, 0.493827, 0, -1, 0.493789,-99) , 
0, 0.502534, 0, 0, 0.496933,-99) , 
0, 0.492376, 1, 0, 0.499269,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0264396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.393196, 1, 1, 0.524689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466993,-99) , 
2, 0.0466494, 1, 0, 0.497751,-99) , 
5, -0.501177, 0, 0, 0.505406,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495962,-99) , 
2, 0.0732223, 0, 0, 0.500286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482034,-99) , 
0, 0.497818, 1, 0, 0.486654,-99) , 
0, 0.496185, 1, 0, 0.490883,-99) , 
5, -0.0476324, 1, 0, 0.497128,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.00955042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529336,-99) , 
NN(
0, 
0, 
-1, 4.44883, 1, -1, 0.497508,-99) , 
2, -0.217832, 1, 0, 0.498693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464187,-99) , 
0, 0.505708, 1, 0, 0.497323,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0222778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00751948, 0, 1, 0.50807,-99) , 
NN(
0, 
0, 
-1, -0.959191, 0, -1, 0.482186,-99) , 
5, -0.904769, 0, 0, 0.50577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487244,-99) , 
0, 0.490788, 0, 0, 0.503457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463352,-99) , 
5, 0.333272, 0, 0, 0.479879,-99) , 
0, 0.492376, 1, 0, 0.492468,-99) , 
0, 0.494281, 0, 0, 0.503201,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0213754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489765,-99) , 
0, 0.494281, 0, 0, 0.503819,-99) , 
5, 0.904671, 0, 0, 0.505001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498716,-99) , 
0, 0.492519, 1, 0, 0.511795,-99) , 
NN(
0, 
0, 
-1, 0.498369, 0, -1, 0.472723,-99) , 
0, 0.496189, 1, 0, 0.486928,-99) , 
2, -0.0710983, 0, 0, 0.502092,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0176723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.40357, 0, 1, 0.535586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495923,-99) , 
5, 0.179089, 0, 0, 0.501595,-99) , 
5, 0.904672, 0, 0, 0.503552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455943,-99) , 
3, 8.93425, 1, 0, 0.502232,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0180097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0479192, 0, 1, 0.525998,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.493701,-99) , 
0, 0.491424, 1, 0, 0.495963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448482,-99) , 
4, 0.999048, 0, 0, 0.494528,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0180857);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498488,-99) , 
0, 0.497002, 1, 0, 0.504966,-99) , 
NN(
0, 
0, 
-1, 5.18869, 1, -1, 0.491482,-99) , 
5, -0.333319, 0, 0, 0.500202,-99) , 
0, 0.490471, 1, 0, 0.502105,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0357698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.45125, 0, 1, 0.521563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458807,-99) , 
0, 0.505437, 0, 0, 0.482963,-99) , 
0, 0.503803, 1, 0, 0.516488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494456,-99) , 
5, 0.596194, 1, 0, 0.499558,-99) , 
NN(
0, 
0, 
-1, 3.00652, 0, -1, 0.475981,-99) , 
5, 0.501106, 0, 0, 0.491462,-99) , 
5, 0.0475983, 1, 0, 0.503061,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0183586);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483584,-99) , 
4, 0.999955, 0, 0, 0.51796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498683,-99) , 
2, -0.0158516, 1, 0, 0.502294,-99) , 
3, 4.18549, 0, 0, 0.505656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469177,-99) , 
4, 0.999048, 0, 0, 0.504553,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0238792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490782,-99) , 
3, 3.89686, 1, 0, 0.520343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473347,-99) , 
0, 0.491425, 0, 0, 0.502491,-99) , 
5, 0.0566559, 1, 0, 0.506682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461726,-99) , 
5, -0.659884, 1, 0, 0.500546,-99) , 
NN(
0, 
0, 
-1, -0.886729, 0, -1, 0.47894,-99) , 
3, 2.62894, 1, 0, 0.492486,-99) , 
5, -0.523826, 0, 0, 0.502369,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00968238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00971883, 0, 1, 0.512246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467978,-99) , 
3, 6.93654, 1, 0, 0.499182,-99) , 
3, 0.93937, 1, 0, 0.501876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472896,-99) , 
3, 8.81105, 1, 0, 0.501009,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0242505);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498095, 1, 1, 0.52632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461451,-99) , 
0, 0.506163, 1, 0, 0.502477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487437,-99) , 
0, 0.490562, 1, 0, 0.489181,-99) , 
0, 0.499995, 0, 0, 0.493747,-99) , 
5, 0.904723, 0, 0, 0.495703,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0227819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0202101, 0, 1, 0.525701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474063,-99) , 
3, 0.588626, 0, 0, 0.502184,-99) , 
3, 3.31983, 0, 0, 0.508905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516154,-99) , 
NN(
0, 
0, 
-1, 0.50226, 1, -1, 0.494543,-99) , 
0, 0.503803, 0, 0, 0.496221,-99) , 
5, 0.428543, 1, 0, 0.503873,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0222514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480446,-99) , 
5, -0.904763, 0, 0, 0.508582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488078,-99) , 
0, 0.50081, 0, 0, 0.497009,-99) , 
0, 0.498089, 1, 0, 0.502606,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.473445,-99) , 
4, 0.999524, 0, 0, 0.501036,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0249433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499228, 0, 1, 0.513211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485142,-99) , 
0, 0.502854, 1, 0, 0.508294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514339,-99) , 
NN(
0, 
0, 
-1, -0.546558, 0, -1, 0.487889,-99) , 
5, 0.904494, 0, 0, 0.489329,-99) , 
3, 4.48496, 0, 0, 0.492873,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0161368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0016022, 0, 1, 0.51457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483289,-99) , 
2, 0.0730759, 1, 0, 0.508353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489096,-99) , 
5, -0.523862, 0, 0, 0.498127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477509,-99) , 
5, 0.619047, 0, 0, 0.482931,-99) , 
0, 0.50317, 1, 0, 0.495692,-99) , 
0, 0.494281, 1, 0, 0.498089,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_8_12_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_8_12_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_8_12_noNsigma *ReadBDT_maker_LHC19c2b_8_12_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_8_12_noNsigma(theInpVar);
  }
}
