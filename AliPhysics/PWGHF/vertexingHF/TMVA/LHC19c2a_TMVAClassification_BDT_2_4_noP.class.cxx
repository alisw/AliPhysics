#include "LHC19c2a_TMVAClassification_BDT_2_4_noP.class.h"

double ReadBDT_LHC19c2a_2_4_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_2_4_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.560659282008614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999864, 0, 1, 0.79095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329638,-99) , 
4, 0.999048, 0, 0, 0.74352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.769326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358319,-99) , 
5, -0.287086, 1, 0, 0.697462,-99) , 
NN(
0, 
0, 
-1, -1.57145, 0, -1, 0.260189,-99) , 
10, 3.22498, 0, 0, 0.373062,-99) , 
7, -948.705, 0, 0, 0.499265,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.405002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.103066, 1, 1, 0.751077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441591,-99) , 
4, 0.999524, 0, 0, 0.702979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.737383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495653,-99) , 
5, -0.413644, 1, 0, 0.676439,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.323219,-99) , 
10, 3.37285, 0, 0, 0.409867,-99) , 
7, -948.705, 0, 0, 0.509191,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.325265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.459272, 1, 1, 0.623642,-99) , 
NN(
0, 
0, 
-1, -2.1837, 0, -1, 0.257015,-99) , 
8, -1.57145, 0, 0, 0.576014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472645,-99) , 
9, -1.19047, 1, 0, 0.49743,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.179318,-99) , 
7, -949.113, 0, 0, 0.271954,-99) , 
4, 0.999524, 0, 0, 0.518925,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.306574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.192625, 1, 1, 0.671327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371688,-99) , 
4, 0.998571, 0, 0, 0.647041,-99) , 
NN(
NN(
0, 
0, 
-1, -0.666365, 1, 1, 0.636185,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.360117,-99) , 
10, 3.52462, 0, 0, 0.424491,-99) , 
7, -949.113, 0, 0, 0.498917,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.256091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.126202,-99) , 
6, 0.0475659, 1, 0, 0.566974,-99) , 
NN(
0, 
0, 
-1, -2.40136, 0, -1, 0.225877,-99) , 
8, -1.85714, 0, 0, 0.536979,-99) , 
NN(
0, 
0, 
-1, -951.227, 0, -1, 0.261657,-99) , 
4, 0.999048, 0, 0, 0.502228,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.177176);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.192971, 1, 1, 0.59657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.212206,-99) , 
4, 0.999048, 0, 0, 0.468834,-99) , 
NN(
0, 
0, 
-1, -2.18368, 0, -1, 0.208751,-99) , 
8, -1.57143, 0, 0, 0.428481,-99) , 
7, -948.91, 0, 0, 0.484687,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.260119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00679775, 0, 1, 0.632874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43278,-99) , 
6, 0.0237927, 1, 0, 0.602747,-99) , 
NN(
NN(
0, 
0, 
-1, -2.94692, 1, 1, 0.582259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312427,-99) , 
7, -948.705, 0, 0, 0.374539,-99) , 
9, -1.76789, 1, 0, 0.421637,-99) , 
9, 1.98359, 0, 0, 0.469178,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.152149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487987,-99) , 
5, -0.550614, 1, 0, 0.516953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.199001,-99) , 
8, -2.14284, 0, 0, 0.499621,-99) , 
NN(
0, 
0, 
-1, -951.236, 0, -1, 0.312661,-99) , 
4, 0.999524, 0, 0, 0.46586,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.136269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.139508,-99) , 
6, 0.047618, 1, 0, 0.514447,-99) , 
NN(
0, 
0, 
-1, 0.99508, 0, -1, 0.206315,-99) , 
4, 0.997619, 0, 0, 0.496217,-99) , 
NN(
0, 
0, 
-1, -2.5102, 0, -1, 0.186266,-99) , 
8, -2.14285, 0, 0, 0.479719,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.142389);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.157394,-99) , 
6, 0.0476072, 1, 0, 0.5126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.227124,-99) , 
8, -2.14286, 0, 0, 0.497521,-99) , 
NN(
0, 
0, 
-1, -949.113, 0, -1, 0.324361,-99) , 
4, 0.999524, 0, 0, 0.466753,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0850338);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.996667, 0, -1, 0.457585,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0984636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.163824,-99) , 
6, 0.047608, 1, 0, 0.498813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.214438,-99) , 
4, 0.997143, 0, 0, 0.484793,-99) , 
NN(
0, 
0, 
-1, -2.45578, 0, -1, 0.268301,-99) , 
8, -1.85714, 0, 0, 0.467745,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.159797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.356576, 1, 1, 0.602117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445981,-99) , 
9, -2.36289, 1, 0, 0.476687,-99) , 
5, -0.0992574, 1, 0, 0.536474,-99) , 
NN(
0, 
0, 
-1, -1.2857, 0, -1, 0.421596,-99) , 
7, -949.113, 0, 0, 0.460396,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.176537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809935, 1, 1, 0.628375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479515,-99) , 
0, 0.500946, 1, 0, 0.529517,-99) , 
5, -0.692979, 1, 0, 0.563512,-99) , 
NN(
NN(
0, 
0, 
-1, -2.9558, 1, 1, 0.644647,-99) , 
NN(
0, 
0, 
-1, -1.28573, 0, -1, 0.412832,-99) , 
9, -2.47374, 1, 0, 0.437607,-99) , 
9, 2.0255, 0, 0, 0.470124,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.185509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361448,-99) , 
8, -1.85715, 0, 0, 0.560802,-99) , 
NN(
0, 
0, 
-1, -1.28571, 0, -1, 0.412971,-99) , 
6, 0.004534, 0, 0, 0.491457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.165224,-99) , 
6, 0.0476072, 1, 0, 0.481677,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.173232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442065,-99) , 
4, 0.999524, 0, 0, 0.565641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419625,-99) , 
9, -1.86049, 1, 0, 0.446143,-99) , 
6, 0.00680252, 0, 0, 0.48966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.180032,-99) , 
6, 0.0476179, 1, 0, 0.480541,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.125551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261652,-99) , 
8, 1.97952, 1, 0, 0.518034,-99) , 
NN(
0, 
0, 
-1, -2.42858, 0, -1, 0.371025,-99) , 
8, -1.28574, 0, 0, 0.494363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.184402,-99) , 
6, 0.0476072, 1, 0, 0.485389,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0620026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.204954,-99) , 
8, -2.42855, 0, 0, 0.495214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.203359,-99) , 
6, 0.0476072, 1, 0, 0.486803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.217085,-99) , 
4, 0.996667, 0, 0, 0.475896,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0609606);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.996667, 0, -1, 0.469557,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.113358);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313574,-99) , 
8, -2.14285, 0, 0, 0.514287,-99) , 
NN(
0, 
0, 
-1, -951.218, 0, -1, 0.408191,-99) , 
4, 0.999841, 0, 0, 0.486211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.229339,-99) , 
4, 0.996667, 0, 0, 0.476056,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0570979);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.996667, 0, -1, 0.471482,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0540645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.218903,-99) , 
8, -2.42855, 0, 0, 0.494913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216549,-99) , 
6, 0.047618, 1, 0, 0.487135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25159,-99) , 
4, 0.996667, 0, 0, 0.47789,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0951805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403241,-99) , 
8, -1.00002, 0, 0, 0.489059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216442,-99) , 
6, 0.0476179, 1, 0, 0.48137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.248577,-99) , 
4, 0.996667, 0, 0, 0.472353,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0663105);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.996667, 0, -1, 0.466893,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0496123);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.24185,-99) , 
6, 0.0476079, 1, 0, 0.492826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26304,-99) , 
8, -2.30613, 0, 0, 0.484785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289724,-99) , 
8, 1.85707, 1, 0, 0.47526,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.140638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.86818, 1, 1, 0.554556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424919,-99) , 
9, 3.35512, 0, 0, 0.457287,-99) , 
9, -1.25472, 1, 0, 0.481433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258337,-99) , 
4, 0.996667, 0, 0, 0.472979,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.111543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48673,-99) , 
5, 0.0808131, 1, 0, 0.538642,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.450413,-99) , 
7, -948.705, 0, 0, 0.48055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.229047,-99) , 
6, 0.0476039, 1, 0, 0.473704,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.108525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422488,-99) , 
6, 0.0262326, 1, 0, 0.544386,-99) , 
NN(
0, 
0, 
-1, 1.57135, 1, -1, 0.456575,-99) , 
6, 0.00680104, 0, 0, 0.488501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245111,-99) , 
6, 0.0476072, 1, 0, 0.481874,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0512333);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303292,-99) , 
8, -2.26531, 0, 0, 0.499031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269457,-99) , 
8, 2.14276, 1, 0, 0.492542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25697,-99) , 
6, 0.0475853, 1, 0, 0.486216,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0444448);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322269,-99) , 
8, -2.14285, 0, 0, 0.494113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266672,-99) , 
6, 0.0476072, 1, 0, 0.488078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258593,-99) , 
4, 0.995714, 0, 0, 0.481481,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0903873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.84869, 1, 1, 0.576768,-99) , 
NN(
0, 
0, 
-1, -1.28573, 0, -1, 0.467116,-99) , 
9, -1.91133, 1, 0, 0.483013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254393,-99) , 
4, 0.995714, 0, 0, 0.47656,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0920115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427573,-99) , 
8, -0.918403, 0, 0, 0.498179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327935,-99) , 
8, 1.85706, 1, 0, 0.490228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26184,-99) , 
6, 0.0476072, 1, 0, 0.484238,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.105154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477188,-99) , 
4, 0.999985, 0, 0, 0.507823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405569,-99) , 
9, -2.0421, 1, 0, 0.429169,-99) , 
4, 0.999841, 0, 0, 0.487013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296167,-99) , 
4, 0.996667, 0, 0, 0.479911,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0382075);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322376,-99) , 
8, -2.26529, 0, 0, 0.495226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292574,-99) , 
8, 2.14286, 1, 0, 0.48994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27184,-99) , 
4, 0.995714, 0, 0, 0.483843,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0656489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434537,-99) , 
6, 0.00226734, 0, 0, 0.489848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279531,-99) , 
6, 0.0476179, 1, 0, 0.48431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280918,-99) , 
4, 0.995714, 0, 0, 0.478591,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0831541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.99999, 1, 1, 0.525253,-99) , 
NN(
0, 
0, 
-1, -1.28571, 0, -1, 0.457539,-99) , 
7, -948.705, 0, 0, 0.480849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271031,-99) , 
6, 0.047608, 1, 0, 0.475458,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0681099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495259,-99) , 
5, -0.7308, 1, 0, 0.504767,-99) , 
NN(
0, 
0, 
-1, -0.0115344, 0, -1, 0.431085,-99) , 
4, 0.999841, 0, 0, 0.48532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307984,-99) , 
4, 0.996667, 0, 0, 0.478891,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0380223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322955,-99) , 
4, 0.996191, 0, 0, 0.496735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324975,-99) , 
8, -2.26529, 0, 0, 0.490871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286219,-99) , 
8, 2.14286, 1, 0, 0.485375,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0437505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312153,-99) , 
8, -2.34694, 0, 0, 0.496966,-99) , 
NN(
0, 
0, 
-1, -0.0130175, 1, -1, 0.380942,-99) , 
8, 1.57143, 1, 0, 0.488151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283813,-99) , 
6, 0.0476079, 1, 0, 0.482942,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.105972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.697189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389651,-99) , 
10, -0.425581, 0, 0, 0.494605,-99) , 
9, -2.91611, 1, 0, 0.556746,-99) , 
NN(
NN(
0, 
0, 
-1, 0.997143, 0, -1, 0.480201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284006,-99) , 
9, 1.13116, 0, 0, 0.363475,-99) , 
8, -1.28573, 0, 0, 0.465708,-99) , 
9, -1.99983, 1, 0, 0.478284,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0904972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.13846, 1, 1, 0.524372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432796,-99) , 
9, -1.79236, 1, 0, 0.451142,-99) , 
4, 0.999932, 0, 0, 0.497942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296991,-99) , 
7, -949.113, 0, 0, 0.380788,-99) , 
4, 0.998571, 0, 0, 0.488548,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.07033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.87714, 1, 1, 0.534593,-99) , 
NN(
0, 
0, 
-1, -1.28572, 0, -1, 0.475387,-99) , 
9, -1.02031, 1, 0, 0.49222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313281,-99) , 
7, -951.286, 0, 0, 0.38239,-99) , 
4, 0.998571, 0, 0, 0.483479,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0653989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383596,-99) , 
6, 0.0238036, 1, 0, 0.503925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371178,-99) , 
9, -1.21134, 1, 0, 0.427446,-99) , 
8, -1.28571, 0, 0, 0.492184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307794,-99) , 
4, 0.995714, 0, 0, 0.487232,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0665691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496794,-99) , 
5, -0.640987, 1, 0, 0.508158,-99) , 
NN(
0, 
0, 
-1, -0.71428, 0, -1, 0.446391,-99) , 
4, 0.999909, 0, 0, 0.487911,-99) , 
NN(
0, 
0, 
-1, 0.434675, 0, -1, 0.360123,-99) , 
4, 0.998095, 0, 0, 0.480563,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0945753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383134,-99) , 
8, 1.76183, 1, 0, 0.511706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413551,-99) , 
7, -949.96, 0, 0, 0.452762,-99) , 
8, -0.714316, 0, 0, 0.494545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338296,-99) , 
4, 0.996667, 0, 0, 0.489055,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0781927);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435315,-99) , 
6, 0.0255901, 1, 0, 0.538302,-99) , 
NN(
0, 
0, 
-1, -2.14288, 0, -1, 0.471574,-99) , 
6, 0.00906993, 0, 0, 0.488298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307426,-99) , 
6, 0.047618, 1, 0, 0.483728,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0786862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480697,-99) , 
0, 0.499995, 1, 0, 0.518384,-99) , 
NN(
0, 
0, 
-1, -0.71428, 0, -1, 0.460429,-99) , 
4, 0.999932, 0, 0, 0.497549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341009,-99) , 
7, -949.113, 0, 0, 0.399073,-99) , 
4, 0.998571, 0, 0, 0.489834,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0746951);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471234,-99) , 
6, 0.00340122, 0, 0, 0.505492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291898,-99) , 
5, -0.466559, 1, 0, 0.415569,-99) , 
6, 0.023809, 1, 0, 0.499697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341271,-99) , 
7, -949.113, 0, 0, 0.401359,-99) , 
4, 0.998571, 0, 0, 0.492014,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0379961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402524,-99) , 
6, 0.0238019, 1, 0, 0.498897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364337,-99) , 
8, -2.26531, 0, 0, 0.494398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344509,-99) , 
8, 2.14279, 1, 0, 0.490456,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0559396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498294,-99) , 
9, -2.77176, 1, 0, 0.538488,-99) , 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.48254,-99) , 
9, -1.56618, 1, 0, 0.493221,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.401504,-99) , 
4, 0.998571, 0, 0, 0.48606,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0601747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.670897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389232,-99) , 
10, -0.498422, 0, 0, 0.496928,-99) , 
9, -2.89858, 1, 0, 0.560303,-99) , 
NN(
0, 
0, 
-1, -0.128104, 0, -1, 0.484282,-99) , 
9, -2.14647, 1, 0, 0.493153,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0470625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.730799, 1, 1, 0.514457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422431,-99) , 
5, 0.0759778, 0, 0, 0.463688,-99) , 
4, 0.999796, 0, 0, 0.502579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341438,-99) , 
4, 0.995714, 0, 0, 0.4984,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0362133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391418,-99) , 
4, 0.997143, 0, 0, 0.502189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373966,-99) , 
8, -2.2653, 0, 0, 0.49796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347184,-99) , 
8, 2.14286, 1, 0, 0.494127,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0456517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446748,-99) , 
8, -1.28573, 0, 0, 0.498953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389961,-99) , 
3, 9.37525, 1, 0, 0.494148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332508,-99) , 
6, 0.0476039, 1, 0, 0.490076,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0498584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.730874, 1, 1, 0.507331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452463,-99) , 
9, -2.16798, 1, 0, 0.464305,-99) , 
4, 0.999909, 0, 0, 0.493247,-99) , 
NN(
0, 
0, 
-1, 0.444801, 0, -1, 0.394104,-99) , 
4, 0.998095, 0, 0, 0.487629,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0291002);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14278, 1, -1, 0.485454,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0911603);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415966,-99) , 
6, 0.023783, 1, 0, 0.514836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436665,-99) , 
9, -2.81676, 1, 0, 0.461734,-99) , 
8, -0.605506, 0, 0, 0.49647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350244,-99) , 
5, -0.0148667, 1, 0, 0.413671,-99) , 
8, 1.57131, 1, 0, 0.49038,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0427602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487825,-99) , 
5, -0.820415, 1, 0, 0.491365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37491,-99) , 
4, 0.996191, 0, 0, 0.487991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350054,-99) , 
8, 2.14286, 1, 0, 0.48449,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0495575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49088,-99) , 
9, -1.06369, 1, 0, 0.503152,-99) , 
NN(
0, 
0, 
-1, -0.460824, 1, -1, 0.454418,-99) , 
0, 0.5019, 1, 0, 0.494328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349794,-99) , 
4, 0.995714, 0, 0, 0.49064,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0384791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398869,-99) , 
8, -2.26531, 0, 0, 0.504976,-99) , 
NN(
0, 
0, 
-1, 0.850623, 0, -1, 0.436969,-99) , 
0, 0.503804, 1, 0, 0.498745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366159,-99) , 
8, 2.14279, 1, 0, 0.495315,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0323831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588635,-99) , 
NN(
0, 
0, 
-1, 0.023809, 1, -1, 0.489843,-99) , 
5, -0.819901, 1, 0, 0.493378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359718,-99) , 
8, 2.14286, 1, 0, 0.489998,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.031142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383215,-99) , 
8, -2.34693, 0, 0, 0.501629,-99) , 
NN(
0, 
0, 
-1, -0.0108875, 1, -1, 0.439007,-99) , 
8, 1.57136, 1, 0, 0.497052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3593,-99) , 
4, 0.995714, 0, 0, 0.493543,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0757293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396809,-99) , 
10, -0.563193, 0, 0, 0.488494,-99) , 
9, -2.93406, 1, 0, 0.548588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462182,-99) , 
5, -0.101517, 1, 0, 0.48897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338969,-99) , 
8, -2.14286, 0, 0, 0.483962,-99) , 
9, -2.1903, 1, 0, 0.491161,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.073234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480245,-99) , 
10, 5.30833, 1, 0, 0.542391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477576,-99) , 
9, -2.7185, 1, 0, 0.4866,-99) , 
6, 0.0101966, 0, 0, 0.49652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315457,-99) , 
5, -0.465347, 1, 0, 0.416895,-99) , 
6, 0.0237926, 1, 0, 0.491621,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0532656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46708,-99) , 
0, 0.502852, 1, 0, 0.51195,-99) , 
NN(
0, 
0, 
-1, -0.999973, 0, -1, 0.470912,-99) , 
6, 0.00226702, 0, 0, 0.501375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316862,-99) , 
5, -0.465399, 1, 0, 0.418286,-99) , 
6, 0.023804, 1, 0, 0.496238,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0361164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496606,-99) , 
6, 0.0113371, 0, 0, 0.503284,-99) , 
NN(
0, 
0, 
-1, -0.46655, 1, -1, 0.434414,-99) , 
6, 0.023809, 1, 0, 0.498854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377467,-99) , 
7, -951.286, 0, 0, 0.428586,-99) , 
4, 0.998571, 0, 0, 0.493466,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0381253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475349,-99) , 
7, -12.1436, 1, 0, 0.552217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340781,-99) , 
10, -0.128104, 0, 0, 0.494694,-99) , 
9, -2.14647, 1, 0, 0.501354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411901,-99) , 
3, 9.36329, 1, 0, 0.497448,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0344182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496535,-99) , 
9, -1.86588, 1, 0, 0.503518,-99) , 
NN(
0, 
0, 
-1, -0.467438, 1, -1, 0.43031,-99) , 
6, 0.023809, 1, 0, 0.498911,-99) , 
NN(
0, 
0, 
-1, 0.435924, 0, -1, 0.415862,-99) , 
4, 0.998095, 0, 0, 0.494212,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0426896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46986,-99) , 
8, -1.00003, 0, 0, 0.502158,-99) , 
NN(
0, 
0, 
-1, -0.468215, 1, -1, 0.430739,-99) , 
6, 0.023804, 1, 0, 0.497622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380819,-99) , 
4, 0.99619, 0, 0, 0.494252,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0397673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49284,-99) , 
10, -0.0501144, 0, 0, 0.531582,-99) , 
NN(
0, 
0, 
-1, 0.257872, 0, -1, 0.491921,-99) , 
9, -1.56618, 1, 0, 0.499479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375574,-99) , 
7, -949.113, 0, 0, 0.43082,-99) , 
4, 0.998572, 0, 0, 0.494246,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0348955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439941,-99) , 
6, 0.0238019, 1, 0, 0.505184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409327,-99) , 
8, -2.26531, 0, 0, 0.502222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392018,-99) , 
8, 2.14286, 1, 0, 0.49943,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.021168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.820301, 1, 1, 0.503345,-99) , 
NN(
0, 
0, 
-1, 1.68839, 0, -1, 0.462411,-99) , 
0, 0.502852, 1, 0, 0.498038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382236,-99) , 
4, 0.995714, 0, 0, 0.495092,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0260473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575193,-99) , 
NN(
0, 
0, 
-1, 0.023809, 1, -1, 0.495204,-99) , 
5, -0.819552, 1, 0, 0.49827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380373,-99) , 
7, -951.286, 0, 0, 0.42992,-99) , 
4, 0.998571, 0, 0, 0.493035,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0438727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455447,-99) , 
8, 1.57074, 1, 0, 0.511377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473808,-99) , 
9, -0.595499, 1, 0, 0.483735,-99) , 
0, 0.499043, 1, 0, 0.500085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377127,-99) , 
5, 0.438853, 0, 0, 0.430304,-99) , 
4, 0.998571, 0, 0, 0.494729,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0665187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485937,-99) , 
10, 0.366296, 0, 0, 0.519164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468653,-99) , 
7, -949.024, 0, 0, 0.485823,-99) , 
9, -1.06369, 1, 0, 0.495347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389448,-99) , 
4, 0.995714, 0, 0, 0.492664,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0465636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4678,-99) , 
5, 0.255261, 1, 0, 0.512373,-99) , 
NN(
0, 
0, 
-1, -0.428549, 0, -1, 0.483509,-99) , 
4, 0.999932, 0, 0, 0.502013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394687,-99) , 
5, 0.434654, 0, 0, 0.443379,-99) , 
4, 0.998571, 0, 0, 0.497484,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0381101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492107,-99) , 
6, 0.00566761, 0, 0, 0.502727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35785,-99) , 
5, -0.467023, 1, 0, 0.445592,-99) , 
6, 0.023804, 1, 0, 0.499067,-99) , 
NN(
0, 
0, 
-1, 0.447677, 0, -1, 0.421621,-99) , 
4, 0.998095, 0, 0, 0.494794,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0500632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.85904, 1, 1, 0.530444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464952,-99) , 
10, 2.22476, 0, 0, 0.489873,-99) , 
9, -1.01958, 1, 0, 0.501988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412956,-99) , 
3, 9.32771, 1, 0, 0.498132,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0340354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497469,-99) , 
9, -2.13846, 1, 0, 0.504154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349814,-99) , 
5, -0.468412, 1, 0, 0.441109,-99) , 
6, 0.023809, 1, 0, 0.500206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389943,-99) , 
7, -949.113, 0, 0, 0.433109,-99) , 
4, 0.998572, 0, 0, 0.495138,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0422387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48712,-99) , 
8, -0.428616, 0, 0, 0.505437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380053,-99) , 
5, 0.439791, 0, 0, 0.440554,-99) , 
4, 0.998095, 0, 0, 0.501709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3504,-99) , 
5, -0.465447, 1, 0, 0.433923,-99) , 
6, 0.0238036, 1, 0, 0.497555,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0309107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497861,-99) , 
9, -2.18149, 1, 0, 0.505596,-99) , 
NN(
0, 
0, 
-1, -0.465499, 1, -1, 0.438203,-99) , 
6, 0.0238019, 1, 0, 0.501461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421179,-99) , 
3, 9.36329, 1, 0, 0.497999,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.033054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430376,-99) , 
6, 0.0237926, 1, 0, 0.502658,-99) , 
5, -0.820004, 1, 0, 0.505177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403456,-99) , 
7, -951.286, 0, 0, 0.442697,-99) , 
4, 0.998571, 0, 0, 0.500435,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0316065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459456,-99) , 
7, -951.286, 1, 0, 0.542008,-99) , 
NN(
0, 
0, 
-1, -2.14286, 0, -1, 0.491635,-99) , 
9, -2.22697, 1, 0, 0.49695,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0499327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486701,-99) , 
10, 0.498343, 0, 0, 0.519342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463921,-99) , 
5, -0.194722, 1, 0, 0.491934,-99) , 
9, -0.40303, 1, 0, 0.502873,-99) , 
NN(
0, 
0, 
-1, 0.448685, 0, -1, 0.440198,-99) , 
4, 0.998095, 0, 0, 0.49941,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0501824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.84247, 1, 1, 0.522353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475713,-99) , 
7, -1.58995, 0, 0, 0.489504,-99) , 
9, -0.40303, 1, 0, 0.503714,-99) , 
NN(
0, 
0, 
-1, -0.46765, 1, -1, 0.440098,-99) , 
6, 0.0238036, 1, 0, 0.499861,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0295786);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498735,-99) , 
9, -1.21134, 1, 0, 0.507632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437133,-99) , 
3, 9.36329, 1, 0, 0.504566,-99) , 
NN(
0, 
0, 
-1, -0.465321, 1, -1, 0.438317,-99) , 
6, 0.023804, 1, 0, 0.500591,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0280758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0113351, 0, 1, 0.508729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394883,-99) , 
5, -0.46765, 1, 0, 0.459619,-99) , 
6, 0.023804, 1, 0, 0.505644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388808,-99) , 
5, 0.44023, 0, 0, 0.444393,-99) , 
4, 0.998095, 0, 0, 0.502237,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0392076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469532,-99) , 
5, 0.345156, 1, 0, 0.509211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446525,-99) , 
5, -0.189073, 0, 0, 0.483091,-99) , 
4, 0.999864, 0, 0, 0.502766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413911,-99) , 
7, -949.113, 0, 0, 0.44628,-99) , 
4, 0.998571, 0, 0, 0.498464,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0177773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427569,-99) , 
6, 0.0238036, 1, 0, 0.496943,-99) , 
5, -0.820194, 1, 0, 0.499319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415379,-99) , 
4, 0.995714, 0, 0, 0.497185,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0333099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488615,-99) , 
8, -0.142848, 0, 0, 0.500963,-99) , 
NN(
0, 
0, 
-1, -0.466694, 1, -1, 0.450459,-99) , 
6, 0.023804, 1, 0, 0.497827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427835,-99) , 
3, 9.32771, 1, 0, 0.494752,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0366433);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477553,-99) , 
10, 0.399642, 0, 0, 0.501759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436906,-99) , 
8, -2.18368, 0, 0, 0.499166,-99) , 
NN(
0, 
0, 
-1, 0.0815853, 1, -1, 0.456137,-99) , 
8, 1.28566, 1, 0, 0.494268,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0439741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389483,-99) , 
10, -0.690255, 0, 0, 0.481734,-99) , 
9, -2.92694, 1, 0, 0.539085,-99) , 
NN(
0, 
0, 
-1, -2.14286, 0, -1, 0.487596,-99) , 
9, -2.18149, 1, 0, 0.493376,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0188819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436611,-99) , 
6, 0.0238036, 1, 0, 0.498322,-99) , 
5, -0.820643, 1, 0, 0.500416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417807,-99) , 
4, 0.996667, 0, 0, 0.497749,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0202159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55377,-99) , 
NN(
0, 
0, 
-1, 0.023809, 1, -1, 0.495419,-99) , 
5, -0.820348, 1, 0, 0.497647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412814,-99) , 
7, -951.286, 0, 0, 0.447296,-99) , 
4, 0.998571, 0, 0, 0.493876,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0271993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.84248, 1, 1, 0.51457,-99) , 
NN(
0, 
0, 
-1, -0.0146197, 1, -1, 0.491616,-99) , 
9, -0.40303, 1, 0, 0.501128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42716,-99) , 
3, 9.37657, 1, 0, 0.497962,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.036228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454202,-99) , 
0, 0.489972, 0, 0, 0.509065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476949,-99) , 
2, 0.0699928, 0, 0, 0.483458,-99) , 
0, 0.499995, 1, 0, 0.500954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428168,-99) , 
3, 9.31837, 1, 0, 0.497821,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0315593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456593,-99) , 
8, -2.14287, 0, 0, 0.505388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410799,-99) , 
7, -951.218, 1, 0, 0.464876,-99) , 
5, 0.441077, 1, 0, 0.501233,-99) , 
NN(
0, 
0, 
-1, 0.437802, 0, -1, 0.447193,-99) , 
4, 0.998572, 0, 0, 0.497137,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0168247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453259,-99) , 
6, 0.023809, 1, 0, 0.498395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423341,-99) , 
8, -2.26531, 0, 0, 0.496137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410678,-99) , 
8, 2.14278, 1, 0, 0.493988,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0430368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367274,-99) , 
10, -0.765496, 0, 0, 0.474661,-99) , 
9, -2.97023, 1, 0, 0.530444,-99) , 
NN(
0, 
0, 
-1, -0.332988, 0, -1, 0.487218,-99) , 
9, -2.23497, 1, 0, 0.491728,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0471948);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451035,-99) , 
8, -1.85714, 0, 0, 0.503822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42413,-99) , 
9, -2.87371, 1, 0, 0.473834,-99) , 
10, 0.0835444, 0, 0, 0.49882,-99) , 
NN(
0, 
0, 
-1, 0.437514, 0, -1, 0.440207,-99) , 
4, 0.998095, 0, 0, 0.495634,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0210819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473927,-99) , 
10, 0.04107, 0, 0, 0.49663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445679,-99) , 
3, 8.98995, 1, 0, 0.494193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437787,-99) , 
8, 1.85714, 1, 0, 0.491744,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0577791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45114,-99) , 
9, -2.83924, 1, 0, 0.485268,-99) , 
10, 0.3567, 0, 0, 0.510159,-99) , 
NN(
0, 
0, 
-1, 0.52254, 0, -1, 0.485607,-99) , 
9, -1.21134, 1, 0, 0.492087,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0345848);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.145623, 1, 1, 0.539754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491205,-99) , 
6, 0.0101966, 0, 0, 0.497519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419693,-99) , 
6, 0.0237927, 1, 0, 0.493869,-99) , 
5, -0.729401, 1, 0, 0.497327,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0332372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.84247, 1, 1, 0.513926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480502,-99) , 
5, -0.373628, 1, 0, 0.495698,-99) , 
9, -0.40303, 1, 0, 0.503257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450738,-99) , 
3, 9.37264, 1, 0, 0.501008,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0379736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498247,-99) , 
10, 0.0702604, 0, 0, 0.527607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477592,-99) , 
10, 1.76087, 0, 0, 0.496903,-99) , 
9, -1.66992, 1, 0, 0.50257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442852,-99) , 
3, 9.37648, 1, 0, 0.500042,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0243157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497512,-99) , 
10, 0.571625, 0, 0, 0.5172,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.4944,-99) , 
9, -0.974128, 1, 0, 0.501221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421317,-99) , 
4, 0.996191, 0, 0, 0.499001,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0354552);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482094,-99) , 
5, 0.16583, 1, 0, 0.508513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438913,-99) , 
5, -0.280984, 0, 0, 0.487324,-99) , 
4, 0.999819, 0, 0, 0.50334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433727,-99) , 
4, 0.99619, 0, 0, 0.501396,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.045135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464499,-99) , 
9, -2.97369, 1, 0, 0.49923,-99) , 
10, 0.195879, 0, 0, 0.523561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469837,-99) , 
8, 1.28572, 1, 0, 0.497059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386112,-99) , 
10, 0.298619, 0, 0, 0.492318,-99) , 
9, -1.56717, 1, 0, 0.498623,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0340075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.51818, 1, 1, 0.581729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465651,-99) , 
7, -19.8222, 1, 0, 0.530326,-99) , 
NN(
0, 
0, 
-1, -0.00494605, 0, -1, 0.490218,-99) , 
9, -1.95544, 1, 0, 0.495896,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0567855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430167,-99) , 
10, -0.115341, 0, 0, 0.502413,-99) , 
9, -2.83429, 1, 0, 0.512529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488826,-99) , 
5, -0.731535, 1, 0, 0.494425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425231,-99) , 
4, 0.998572, 0, 0, 0.491409,-99) , 
9, -0.395026, 1, 0, 0.500196,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0273651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481242,-99) , 
10, 5.10714, 1, 0, 0.504508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42286,-99) , 
5, -0.465499, 1, 0, 0.470115,-99) , 
6, 0.0237926, 1, 0, 0.502351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435892,-99) , 
4, 0.996191, 0, 0, 0.500502,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0362823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.66586, 1, 1, 0.570653,-99) , 
NN(
0, 
0, 
-1, -0.647072, 1, -1, 0.463707,-99) , 
7, -16.7767, 1, 0, 0.52384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481958,-99) , 
10, 1.5877, 0, 0, 0.495517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40111,-99) , 
10, 0.0172024, 0, 0, 0.492229,-99) , 
9, -1.86095, 1, 0, 0.497128,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0401981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.87713, 1, 1, 0.520686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483136,-99) , 
7, -1.58995, 0, 0, 0.494187,-99) , 
9, -1.02031, 1, 0, 0.50237,-99) , 
NN(
0, 
0, 
-1, -0.465186, 1, -1, 0.456122,-99) , 
6, 0.023804, 1, 0, 0.499555,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0257191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474175,-99) , 
6, 0.00113351, 0, 0, 0.502945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417078,-99) , 
5, -0.465347, 1, 0, 0.465618,-99) , 
6, 0.0238036, 1, 0, 0.500631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457708,-99) , 
3, 9.22081, 1, 0, 0.498722,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0319908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495977,-99) , 
9, -1.6434, 1, 0, 0.502852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405672,-99) , 
7, -950.041, 1, 0, 0.465115,-99) , 
5, 0.436705, 1, 0, 0.498897,-99) , 
NN(
0, 
0, 
-1, 0.259911, 0, -1, 0.459381,-99) , 
4, 0.998572, 0, 0, 0.495948,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0563685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498452,-99) , 
9, -1.27395, 1, 0, 0.507543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462771,-99) , 
8, -0.427045, 1, 0, 0.487786,-99) , 
10, 4.73326, 1, 0, 0.503068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578651,-99) , 
NN(
0, 
0, 
-1, -0.578309, 0, -1, 0.416625,-99) , 
9, -2.67016, 1, 0, 0.475783,-99) , 
10, 0.00331226, 0, 0, 0.498691,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0471539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487419,-99) , 
10, 5.66312, 1, 0, 0.510311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444598,-99) , 
4, 0.998572, 0, 0, 0.507478,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434503,-99) , 
8, 1.00291, 1, 0, 0.507513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39574,-99) , 
4, 0.999524, 1, 0, 0.440233,-99) , 
7, -949.113, 1, 0, 0.477886,-99) , 
5, 0.351136, 1, 0, 0.502333,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0418905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456357,-99) , 
8, -1.85716, 0, 0, 0.507807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430223,-99) , 
9, -2.89276, 1, 0, 0.47975,-99) , 
10, -0.204955, 0, 0, 0.504121,-99) , 
NN(
0, 
0, 
-1, -0.112764, 1, -1, 0.46265,-99) , 
0, 0.504757, 1, 0, 0.501676,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0433439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.104051, 0, 1, 0.55519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384701,-99) , 
10, 0.408751, 0, 0, 0.497657,-99) , 
9, -1.43543, 1, 0, 0.504486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432016,-99) , 
9, -0.776863, 1, 0, 0.504017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409874,-99) , 
4, 0.999524, 1, 0, 0.443967,-99) , 
7, -949.113, 1, 0, 0.478418,-99) , 
5, 0.260984, 1, 0, 0.498526,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0647043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46705,-99) , 
10, 2.68214, 0, 0, 0.553698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467595,-99) , 
10, 4.3983, 1, 0, 0.494189,-99) , 
8, -0.999703, 1, 0, 0.500888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479242,-99) , 
10, 0.711715, 0, 0, 0.497728,-99) , 
NN(
0, 
0, 
-1, -1.30373, 0, -1, 0.422611,-99) , 
9, -0.73526, 1, 0, 0.481724,-99) , 
10, 1.44907, 0, 0, 0.492457,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0487515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456693,-99) , 
9, -2.98706, 1, 0, 0.491976,-99) , 
10, 0.024856, 0, 0, 0.518298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472683,-99) , 
5, -0.0117455, 1, 0, 0.492931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400503,-99) , 
10, 0.311584, 0, 0, 0.488763,-99) , 
9, -1.58036, 1, 0, 0.49464,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0516454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.53615, 1, 1, 0.540974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428681,-99) , 
5, 0.227623, 1, 0, 0.469161,-99) , 
7, -948.91, 1, 0, 0.511232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486601,-99) , 
5, -0.820299, 1, 0, 0.488779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41543,-99) , 
10, 0.507837, 0, 0, 0.485986,-99) , 
9, -1.21134, 1, 0, 0.492632,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0201906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495315,-99) , 
9, -0.40303, 1, 0, 0.501568,-99) , 
NN(
0, 
0, 
-1, 0.505644, 1, -1, 0.470644,-99) , 
0, 0.504167, 1, 0, 0.499116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441427,-99) , 
0, 0.489519, 0, 0, 0.497639,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0248485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472466,-99) , 
6, 0.0238036, 1, 0, 0.50656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488376,-99) , 
2, 0.213037, 0, 0, 0.491013,-99) , 
0, 0.498136, 1, 0, 0.498674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443895,-99) , 
0, 0.489519, 0, 0, 0.497244,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0260881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496095,-99) , 
9, -0.66187, 1, 0, 0.503285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429035,-99) , 
7, -951.286, 1, 0, 0.47111,-99) , 
5, 0.43749, 1, 0, 0.499624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446244,-99) , 
4, 0.996667, 0, 0, 0.497925,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0271729);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485702,-99) , 
4, 0.999887, 0, 0, 0.50225,-99) , 
NN(
0, 
0, 
-1, 0.346712, 0, -1, 0.460928,-99) , 
5, 0.531143, 1, 0, 0.499337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456558,-99) , 
4, 0.997619, 0, 0, 0.497478,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0452463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487533,-99) , 
10, 3.03051, 1, 0, 0.500184,-99) , 
8, -1.28559, 1, 0, 0.506309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573757,-99) , 
NN(
0, 
0, 
-1, -1.13079, 0, -1, 0.478341,-99) , 
9, -2.8973, 1, 0, 0.487,-99) , 
10, 1.53214, 0, 0, 0.49753,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0215702);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440901,-99) , 
10, -0.165185, 0, 0, 0.494355,-99) , 
9, -2.86227, 1, 0, 0.497687,-99) , 
10, 10.2037, 0, 0, 0.499839,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0351377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480949,-99) , 
10, 10.276, 0, 0, 0.493619,-99) , 
8, -0.714157, 1, 0, 0.520594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489278,-99) , 
6, 0.00793072, 0, 0, 0.496622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420223,-99) , 
6, 0.0237926, 1, 0, 0.493474,-99) , 
5, -0.640619, 1, 0, 0.496713,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0375942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428837,-99) , 
9, -2.89858, 1, 0, 0.493075,-99) , 
10, -0.538764, 0, 0, 0.528151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486024,-99) , 
10, 1.41675, 0, 0, 0.499085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402791,-99) , 
10, -0.218697, 0, 0, 0.495958,-99) , 
9, -2.14647, 1, 0, 0.499631,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0298473);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493285,-99) , 
10, 0.92793, 0, 0, 0.509912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480475,-99) , 
10, 2.60982, 0, 0, 0.493608,-99) , 
9, -0.395026, 1, 0, 0.500494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441321,-99) , 
8, 2.14279, 1, 0, 0.499007,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0390562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464768,-99) , 
9, -2.40718, 1, 0, 0.499247,-99) , 
10, 0.378317, 0, 0, 0.515505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485641,-99) , 
10, 3.58284, 1, 0, 0.497249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439603,-99) , 
10, 0.486558, 0, 0, 0.495026,-99) , 
9, -1.25472, 1, 0, 0.500219,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0538535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.734304, 1, 1, 0.569147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461879,-99) , 
9, -1.48722, 1, 0, 0.496823,-99) , 
10, 1.09983, 0, 0, 0.508569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437268,-99) , 
4, 0.999714, 0, 0, 0.50383,-99) , 
NN(
0, 
0, 
-1, -0.999956, 0, -1, 0.473167,-99) , 
5, -0.37289, 1, 0, 0.487838,-99) , 
9, -0.40303, 1, 0, 0.49642,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0148067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.31577, 1, 1, 0.536976,-99) , 
NN(
0, 
0, 
-1, 0.0237926, 1, -1, 0.49642,-99) , 
2, 0.213942, 0, 0, 0.498832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451263,-99) , 
3, 9.31837, 1, 0, 0.496808,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0346485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485774,-99) , 
10, 4.60319, 1, 0, 0.503207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46735,-99) , 
8, -1.85715, 0, 0, 0.501697,-99) , 
NN(
NN(
0, 
0, 
-1, -1.19234, 0, 1, 0.53909,-99) , 
NN(
0, 
0, 
-1, -0.571457, 0, -1, 0.418669,-99) , 
9, -2.57175, 1, 0, 0.477837,-99) , 
10, -0.184395, 0, 0, 0.498548,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0476313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484011,-99) , 
9, -3.02808, 1, 0, 0.497464,-99) , 
10, 0.663321, 0, 0, 0.512888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474359,-99) , 
10, 2.25509, 0, 0, 0.495707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448974,-99) , 
7, -951.223, 0, 0, 0.470269,-99) , 
5, -0.0146197, 1, 0, 0.489427,-99) , 
9, -0.959952, 1, 0, 0.496649,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0415219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.59857, 1, 1, 0.539419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4394,-99) , 
5, 0.227293, 1, 0, 0.47607,-99) , 
7, -949.159, 1, 0, 0.512996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491219,-99) , 
5, -0.641687, 1, 0, 0.494497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433396,-99) , 
10, 0.552539, 0, 0, 0.491906,-99) , 
9, -1.20333, 1, 0, 0.497446,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0172386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488971,-99) , 
10, -0.498096, 0, 0, 0.524414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414577,-99) , 
10, -0.209508, 0, 0, 0.497794,-99) , 
9, -2.13846, 1, 0, 0.500818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448292,-99) , 
0, 0.489519, 0, 0, 0.499455,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0439257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.84971, 0, 1, 0.562586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492081,-99) , 
9, -2.73173, 1, 0, 0.496771,-99) , 
9, 1.42352, 0, 0, 0.50229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568675,-99) , 
NN(
0, 
0, 
-1, -43.9394, 1, -1, 0.465509,-99) , 
8, -0.71362, 1, 0, 0.481189,-99) , 
10, 3.52964, 1, 0, 0.496781,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0251075);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499252,-99) , 
10, 0.761023, 0, 0, 0.514291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484736,-99) , 
6, 0.00680103, 1, 0, 0.494795,-99) , 
9, -0.40303, 1, 0, 0.503123,-99) , 
NN(
0, 
0, 
-1, -0.467106, 1, -1, 0.458229,-99) , 
6, 0.023804, 1, 0, 0.500423,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0281372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473126,-99) , 
9, -2.3661, 1, 0, 0.499902,-99) , 
10, 0.464875, 0, 0, 0.515667,-99) , 
NN(
0, 
0, 
-1, 0.507837, 0, -1, 0.4959,-99) , 
9, -1.20333, 1, 0, 0.501085,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.034564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.748257, 1, 1, 0.564437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471886,-99) , 
9, -1.48722, 1, 0, 0.502658,-99) , 
10, 1.04746, 0, 0, 0.514004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496104,-99) , 
4, 0.999524, 1, 0, 0.498586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453034,-99) , 
4, 0.998572, 0, 0, 0.49662,-99) , 
9, -0.40303, 1, 0, 0.50381,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.061882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457596,-99) , 
8, -1.28571, 0, 0, 0.517218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486109,-99) , 
8, -0.713421, 1, 0, 0.4996,-99) , 
10, 3.18176, 1, 0, 0.511221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458716,-99) , 
7, -951.286, 1, 0, 0.522236,-99) , 
NN(
0, 
0, 
-1, -0.379021, 0, -1, 0.443694,-99) , 
9, -2.4817, 1, 0, 0.482839,-99) , 
10, -0.0754814, 0, 0, 0.507026,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0334741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.155836, 0, 1, 0.532099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457891,-99) , 
10, 0.472429, 0, 0, 0.504289,-99) , 
9, -1.2681, 1, 0, 0.50937,-99) , 
NN(
NN(
0, 
0, 
-1, 0.605503, 0, 1, 0.534565,-99) , 
NN(
0, 
0, 
-1, 0.584157, 1, -1, 0.442115,-99) , 
4, 0.999524, 1, 0, 0.479154,-99) , 
5, 0.43471, 1, 0, 0.505415,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0178868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418456,-99) , 
5, -0.467263, 1, 0, 0.469714,-99) , 
6, 0.023809, 1, 0, 0.5032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462034,-99) , 
3, 9.37264, 1, 0, 0.50146,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0281346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495244,-99) , 
9, -0.708267, 1, 0, 0.5029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459193,-99) , 
4, 0.999547, 1, 0, 0.478576,-99) , 
5, 0.441202, 1, 0, 0.500295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458647,-99) , 
4, 0.997619, 0, 0, 0.498475,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0335369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.233212, 0, 1, 0.560387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446523,-99) , 
4, 0.999049, 0, 0, 0.503232,-99) , 
9, -1.31446, 1, 0, 0.508323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472763,-99) , 
7, -949.159, 1, 0, 0.49503,-99) , 
NN(
0, 
0, 
-1, 1.77553, 1, -1, 0.441891,-99) , 
8, 1.28577, 1, 0, 0.486884,-99) , 
5, 0.0808131, 1, 0, 0.500831,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0201143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.16316, 0, 1, 0.510141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478988,-99) , 
5, -0.194883, 1, 0, 0.494841,-99) , 
9, -0.212002, 1, 0, 0.501698,-99) , 
NN(
0, 
0, 
-1, 0.0727595, 1, -1, 0.473823,-99) , 
0, 0.491424, 0, 0, 0.499792,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0336058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.05914, 1, 1, 0.519831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49312,-99) , 
8, 1.28563, 0, 0, 0.497057,-99) , 
9, -0.234637, 1, 0, 0.50344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49079,-99) , 
4, 0.99771, 0, 0, 0.518462,-99) , 
NN(
0, 
0, 
-1, -951.243, 1, -1, 0.470772,-99) , 
4, 0.999524, 1, 0, 0.485639,-99) , 
5, 0.167327, 1, 0, 0.498307,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.030383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.92464, 1, 1, 0.526148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474383,-99) , 
9, -1.65234, 1, 0, 0.496827,-99) , 
10, 1.16092, 0, 0, 0.514712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462168,-99) , 
4, 0.999574, 0, 0, 0.501745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476823,-99) , 
9, -2.36702, 1, 0, 0.484025,-99) , 
5, -0.00925295, 1, 0, 0.494516,-99) , 
2, 0.0714574, 0, 0, 0.498221,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0320506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -948.705, 0, 1, 0.516769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49516,-99) , 
2, -0.0781013, 1, 0, 0.499938,-99) , 
2, 0.0715463, 0, 0, 0.502967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464413,-99) , 
7, -12.1436, 1, 0, 0.518996,-99) , 
NN(
0, 
0, 
-1, -0.409662, 0, -1, 0.440101,-99) , 
9, -2.5138, 1, 0, 0.478846,-99) , 
10, -0.108509, 0, 0, 0.499499,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0151093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499954,-99) , 
4, 0.999524, 1, 0, 0.50381,-99) , 
NN(
0, 
0, 
-1, 0.0753544, 1, -1, 0.471357,-99) , 
0, 0.491469, 0, 0, 0.501364,-99) , 
NN(
0, 
0, 
-1, 1.90305, 0, -1, 0.474263,-99) , 
0, 0.503804, 1, 0, 0.498924,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0257307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495836,-99) , 
10, 1.38162, 0, 0, 0.504113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471067,-99) , 
4, 0.997143, 0, 0, 0.503081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545593,-99) , 
NN(
0, 
0, 
-1, -0.780546, 0, -1, 0.449627,-99) , 
9, -2.92483, 1, 0, 0.47787,-99) , 
10, -0.204955, 0, 0, 0.499843,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0316157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481403,-99) , 
7, -951.236, 0, 0, 0.518308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450581,-99) , 
4, 0.999683, 0, 0, 0.501506,-99) , 
4, 0.999524, 1, 0, 0.504055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544182,-99) , 
NN(
0, 
0, 
-1, -0.827964, 0, -1, 0.45045,-99) , 
9, -2.95645, 1, 0, 0.478607,-99) , 
10, -0.271317, 0, 0, 0.501039,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0267242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463174,-99) , 
9, -2.43008, 1, 0, 0.494531,-99) , 
10, 0.132555, 0, 0, 0.515464,-99) , 
NN(
0, 
0, 
-1, 0.334832, 0, -1, 0.494144,-99) , 
9, -1.62581, 1, 0, 0.498187,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0175479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492668,-99) , 
7, -951.286, 0, 0, 0.524706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46842,-99) , 
5, 0.441105, 1, 0, 0.498346,-99) , 
4, 0.999048, 1, 0, 0.50111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463973,-99) , 
3, 9.23016, 1, 0, 0.499458,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0298032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464984,-99) , 
10, -0.507681, 0, 0, 0.495608,-99) , 
10, 0.66834, 0, 0, 0.508774,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.491552,-99) , 
9, -0.930745, 1, 0, 0.496933,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0204339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493097,-99) , 
10, -0.312264, 0, 0, 0.524591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497416,-99) , 
4, 0.999524, 1, 0, 0.500475,-99) , 
9, -1.95544, 1, 0, 0.503841,-99) , 
NN(
0, 
0, 
-1, -0.0145067, 1, -1, 0.478328,-99) , 
0, 0.503804, 1, 0, 0.501529,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0213179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471725,-99) , 
9, 0.921101, 0, 0, 0.486091,-99) , 
0, 0.502217, 1, 0, 0.503293,-99) , 
NN(
0, 
0, 
-1, 1.26128, 0, -1, 0.471418,-99) , 
0, 0.491424, 0, 0, 0.50112,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0236257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477084,-99) , 
8, -1.84354, 0, 0, 0.505075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478474,-99) , 
8, 1.85714, 1, 0, 0.503739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528087,-99) , 
NN(
0, 
0, 
-1, 0.144547, 1, -1, 0.452659,-99) , 
9, -2.76786, 1, 0, 0.482258,-99) , 
10, -0.23829, 0, 0, 0.50107,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0426299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478405,-99) , 
7, -43.3991, 1, 0, 0.505794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482007,-99) , 
10, 2.3644, 0, 0, 0.492856,-99) , 
8, -0.142839, 0, 0, 0.499703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458579,-99) , 
4, 0.99619, 0, 0, 0.498558,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0322908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48787,-99) , 
10, -0.567642, 0, 0, 0.528324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490647,-99) , 
7, -949.024, 0, 0, 0.498063,-99) , 
9, -2.18149, 1, 0, 0.501469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424753,-99) , 
9, 4.49361, 0, 0, 0.471974,-99) , 
6, 0.023809, 1, 0, 0.499667,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0248913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497317,-99) , 
10, 0.905398, 0, 0, 0.511077,-99) , 
NN(
0, 
0, 
-1, 16.1809, 1, -1, 0.492775,-99) , 
9, -0.0285409, 1, 0, 0.501881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417833,-99) , 
9, 3.25744, 0, 0, 0.465791,-99) , 
6, 0.023804, 1, 0, 0.499684,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0379476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48652,-99) , 
10, 3.52964, 1, 0, 0.510061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482123,-99) , 
5, -0.460565, 1, 0, 0.490212,-99) , 
6, 0.00226748, 0, 0, 0.504993,-99) , 
NN(
0, 
0, 
-1, 3.25744, 0, -1, 0.467491,-99) , 
6, 0.023809, 1, 0, 0.502714,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0181843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493522,-99) , 
10, -0.315051, 0, 0, 0.522524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497661,-99) , 
10, 9.90522, 0, 0, 0.499328,-99) , 
9, -1.86095, 1, 0, 0.50288,-99) , 
NN(
0, 
0, 
-1, -0.0144101, 1, -1, 0.478696,-99) , 
0, 0.503804, 1, 0, 0.500731,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0238886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.290193, 1, 1, 0.507902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465135,-99) , 
4, 0.998572, 0, 0, 0.505828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522568,-99) , 
NN(
0, 
0, 
-1, -951.218, 1, -1, 0.465944,-99) , 
4, 0.999048, 1, 0, 0.482957,-99) , 
5, 0.437524, 1, 0, 0.502907,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0252211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477152,-99) , 
10, -0.824557, 0, 0, 0.530814,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57129, 1, 1, 0.503845,-99) , 
NN(
0, 
0, 
-1, -1.7787, 0, -1, 0.482727,-99) , 
10, 1.14384, 0, 0, 0.497366,-99) , 
9, -2.28409, 1, 0, 0.500543,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0173315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.464875, 0, 1, 0.513634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490711,-99) , 
5, -0.191232, 1, 0, 0.497893,-99) , 
9, -1.20333, 1, 0, 0.502008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462066,-99) , 
0, 0.489519, 0, 0, 0.500979,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0234766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499118,-99) , 
5, 0.0834198, 1, 0, 0.514207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488499,-99) , 
8, 0.142826, 0, 0, 0.497298,-99) , 
9, -1.21134, 1, 0, 0.501834,-99) , 
NN(
0, 
0, 
-1, -0.465447, 1, -1, 0.470854,-99) , 
6, 0.0238019, 1, 0, 0.499956,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0172255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.75857, 1, 1, 0.530504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496114,-99) , 
2, -0.112207, 1, 0, 0.499147,-99) , 
2, 0.214298, 0, 0, 0.501007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46351,-99) , 
3, 9.37264, 1, 0, 0.499414,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0354988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.05399, 1, 1, 0.522775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463021,-99) , 
7, -949.113, 1, 0, 0.492376,-99) , 
5, 0.3112, 1, 0, 0.510145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459999,-99) , 
4, 0.999772, 0, 0, 0.498295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472637,-99) , 
7, -949.024, 0, 0, 0.48467,-99) , 
5, -0.194883, 1, 0, 0.493763,-99) , 
9, -0.40303, 1, 0, 0.500496,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0341866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.793587, 1, 1, 0.527668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468709,-99) , 
9, -1.64949, 1, 0, 0.496748,-99) , 
10, 0.903215, 0, 0, 0.506982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522549,-99) , 
NN(
0, 
0, 
-1, 0.525285, 1, -1, 0.491028,-99) , 
8, -1.57144, 1, 0, 0.493168,-99) , 
9, -0.0285409, 1, 0, 0.499788,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0225801);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492972,-99) , 
10, -0.372311, 0, 0, 0.520855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494584,-99) , 
4, 0.999524, 1, 0, 0.497529,-99) , 
9, -1.9412, 1, 0, 0.500935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437826,-99) , 
5, -0.465321, 1, 0, 0.472825,-99) , 
6, 0.0238036, 1, 0, 0.499237,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0218659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436483,-99) , 
8, -1.44435, 1, 0, 0.47848,-99) , 
10, -0.737732, 0, 0, 0.523323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470485,-99) , 
3, 9.22081, 1, 0, 0.500303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447419,-99) , 
10, -0.209508, 0, 0, 0.498571,-99) , 
9, -2.14647, 1, 0, 0.501359,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0213982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465103,-99) , 
9, 13.4398, 1, 0, 0.504337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466685,-99) , 
5, -0.0122995, 1, 0, 0.484659,-99) , 
6, 0.00113343, 0, 0, 0.501815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44064,-99) , 
5, -0.465422, 1, 0, 0.474057,-99) , 
6, 0.0238036, 1, 0, 0.500128,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0220562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487623,-99) , 
10, -0.77087, 0, 0, 0.528156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447087,-99) , 
10, -0.128104, 0, 0, 0.498796,-99) , 
9, -2.18149, 1, 0, 0.502041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492302,-99) , 
3, 4.82382, 1, 0, 0.508432,-99) , 
NN(
0, 
0, 
-1, 0.0814109, 1, -1, 0.481313,-99) , 
2, -0.0723867, 1, 0, 0.486949,-99) , 
0, 0.499995, 1, 0, 0.497198,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0184342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491605,-99) , 
10, -0.703683, 0, 0, 0.527315,-99) , 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.495689,-99) , 
9, -2.18149, 1, 0, 0.499248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443109,-99) , 
9, 4.4699, 0, 0, 0.472683,-99) , 
6, 0.0238036, 1, 0, 0.49763,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0147248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.87278, 1, 1, 0.50624,-99) , 
NN(
0, 
0, 
-1, 0.164515, 1, -1, 0.494293,-99) , 
9, -0.167888, 1, 0, 0.499908,-99) , 
NN(
0, 
0, 
-1, 3.46254, 0, -1, 0.471108,-99) , 
6, 0.0238019, 1, 0, 0.498145,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.012047);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471658,-99) , 
0, 0.505709, 1, 0, 0.501888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467384,-99) , 
2, -0.357084, 0, 0, 0.500939,-99) , 
NN(
0, 
0, 
-1, -0.465321, 1, -1, 0.471533,-99) , 
6, 0.023804, 1, 0, 0.499149,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0270105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450574,-99) , 
9, -2.73409, 1, 0, 0.494613,-99) , 
10, -0.318879, 0, 0, 0.518115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482108,-99) , 
5, 0.0781444, 1, 0, 0.495624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444118,-99) , 
8, -2.14284, 0, 0, 0.494116,-99) , 
9, -1.99046, 1, 0, 0.497333,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0250227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440554,-99) , 
8, -1.42934, 1, 0, 0.476593,-99) , 
10, -0.755816, 0, 0, 0.519074,-99) , 
NN(
0, 
0, 
-1, -0.115726, 0, -1, 0.492672,-99) , 
9, -2.14647, 1, 0, 0.49565,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0151896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486244,-99) , 
10, -0.703683, 0, 0, 0.52369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456253,-99) , 
8, -2.14284, 0, 0, 0.499566,-99) , 
9, -2.23497, 1, 0, 0.502088,-99) , 
NN(
0, 
0, 
-1, 3.25744, 0, -1, 0.471384,-99) , 
6, 0.023809, 1, 0, 0.500248,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0139766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499193,-99) , 
9, -2.96497, 1, 0, 0.502003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454953,-99) , 
7, -43.6462, 1, 0, 0.48555,-99) , 
10, 5.29686, 1, 0, 0.499131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458934,-99) , 
4, 0.99619, 0, 0, 0.498027,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0126971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476628,-99) , 
9, 10.981, 1, 0, 0.500947,-99) , 
NN(
0, 
0, 
-1, 4.4699, 0, -1, 0.476593,-99) , 
6, 0.0238036, 1, 0, 0.499469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453999,-99) , 
0, 0.489519, 0, 0, 0.498287,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0157591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495283,-99) , 
6, 0.00793607, 0, 0, 0.498965,-99) , 
NN(
0, 
0, 
-1, -0.465499, 1, -1, 0.476785,-99) , 
6, 0.023809, 1, 0, 0.49762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45402,-99) , 
4, 0.99619, 0, 0, 0.496441,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0129134);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498446,-99) , 
9, -2.36606, 1, 0, 0.501394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477549,-99) , 
9, 13.4466, 1, 0, 0.50013,-99) , 
NN(
0, 
0, 
-1, 5.16136, 0, -1, 0.473711,-99) , 
6, 0.023804, 1, 0, 0.498528,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0332293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456222,-99) , 
8, 1.14944, 1, 0, 0.534259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487162,-99) , 
9, -2.56326, 1, 0, 0.497019,-99) , 
10, 0.788205, 0, 0, 0.507671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495272,-99) , 
9, 18.3112, 1, 0, 0.512293,-99) , 
NN(
0, 
0, 
-1, 1.26736, 0, -1, 0.492352,-99) , 
10, 9.3046, 0, 0, 0.494877,-99) , 
9, -0.395026, 1, 0, 0.500171,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0209738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.361233, 0, 1, 0.516244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496445,-99) , 
7, -1.69972, 0, 0, 0.502045,-99) , 
9, -1.21134, 1, 0, 0.505872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450214,-99) , 
9, 5.01371, 0, 0, 0.476994,-99) , 
6, 0.0237829, 1, 0, 0.504127,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0360535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488429,-99) , 
7, -951.286, 1, 0, 0.526816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486988,-99) , 
9, -0.612257, 1, 0, 0.499338,-99) , 
9, 1.57753, 0, 0, 0.503912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489771,-99) , 
8, -0.142542, 1, 0, 0.505874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449924,-99) , 
7, -43.5495, 1, 0, 0.485702,-99) , 
10, 5.32467, 1, 0, 0.500827,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0306871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.55027, 1, 1, 0.509483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472469,-99) , 
10, 9.53301, 0, 0, 0.495732,-99) , 
9, 6.56117, 1, 0, 0.507251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545515,-99) , 
NN(
0, 
0, 
-1, -0.729124, 0, -1, 0.468385,-99) , 
9, -2.96363, 1, 0, 0.485423,-99) , 
10, 0.0238724, 0, 0, 0.503705,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0342896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.50664, 1, 1, 0.510422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478462,-99) , 
8, -0.428391, 1, 0, 0.494058,-99) , 
10, 5.59164, 1, 0, 0.506776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485321,-99) , 
9, -2.09096, 1, 0, 0.496316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460425,-99) , 
10, -0.60863, 0, 0, 0.489067,-99) , 
5, 0.167933, 1, 0, 0.501703,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0378843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484367,-99) , 
7, -951.286, 0, 0, 0.516794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490185,-99) , 
4, 0.999977, 0, 0, 0.50139,-99) , 
4, 0.999524, 1, 0, 0.503692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468484,-99) , 
10, -1.19261, 0, 0, 0.51002,-99) , 
NN(
0, 
0, 
-1, 0.148479, 1, -1, 0.451221,-99) , 
9, -2.57175, 1, 0, 0.480243,-99) , 
10, -0.184395, 0, 0, 0.50062,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0237158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487729,-99) , 
7, -951.227, 0, 0, 0.51734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451726,-99) , 
4, 0.999683, 0, 0, 0.499747,-99) , 
4, 0.999524, 1, 0, 0.502368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524662,-99) , 
NN(
0, 
0, 
-1, -0.702893, 0, -1, 0.463356,-99) , 
9, -2.81688, 1, 0, 0.482982,-99) , 
10, -0.108509, 0, 0, 0.499621,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0180051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476793,-99) , 
9, 5.48517, 1, 0, 0.508733,-99) , 
NN(
0, 
0, 
-1, 0.04107, 0, -1, 0.49569,-99) , 
1, 0.00340147, 0, 0, 0.499771,-99) , 
NN(
0, 
0, 
-1, 4.49361, 0, -1, 0.476923,-99) , 
6, 0.023809, 1, 0, 0.49838,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0188553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497544,-99) , 
3, 4.80993, 1, 0, 0.512299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496231,-99) , 
2, -0.152925, 1, 0, 0.498435,-99) , 
2, 0.0715463, 0, 0, 0.500923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517106,-99) , 
NN(
0, 
0, 
-1, -0.727284, 0, -1, 0.460765,-99) , 
9, -2.8164, 1, 0, 0.483194,-99) , 
10, -0.312195, 0, 0, 0.498903,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0148775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498281,-99) , 
9, -0.666076, 1, 0, 0.503792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475101,-99) , 
9, 16.6798, 1, 0, 0.502725,-99) , 
NN(
0, 
0, 
-1, -0.465287, 1, -1, 0.479664,-99) , 
6, 0.023809, 1, 0, 0.501317,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0173878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496564,-99) , 
10, 3.49507, 1, 0, 0.504685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471215,-99) , 
5, 0.621256, 1, 0, 0.503328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460391,-99) , 
4, 0.997143, 0, 0, 0.501793,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0391471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484951,-99) , 
7, -44.0978, 1, 0, 0.503113,-99) , 
8, -1.28517, 1, 0, 0.507658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491143,-99) , 
10, 0.329081, 0, 0, 0.508111,-99) , 
NN(
0, 
0, 
-1, -1.63637, 0, -1, 0.479332,-99) , 
9, -1.41655, 1, 0, 0.492752,-99) , 
10, 1.66267, 0, 0, 0.50056,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0152424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497231,-99) , 
10, 0.132555, 0, 0, 0.514705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45336,-99) , 
10, 0.298619, 0, 0, 0.499597,-99) , 
9, -1.62581, 1, 0, 0.502436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464807,-99) , 
0, 0.489519, 0, 0, 0.501446,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0445128);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49186,-99) , 
10, 3.51065, 1, 0, 0.50902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471873,-99) , 
7, -951.404, 0, 0, 0.490104,-99) , 
8, -0.714319, 0, 0, 0.503571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531707,-99) , 
NN(
0, 
0, 
-1, 0.712235, 0, -1, 0.460194,-99) , 
8, -0.429815, 1, 0, 0.48321,-99) , 
7, 0.525285, 1, 0, 0.500869,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0318237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496411,-99) , 
4, 0.999988, 0, 0, 0.513285,-99) , 
NN(
0, 
0, 
-1, -0.460618, 0, -1, 0.469107,-99) , 
4, 0.99975, 0, 0, 0.507581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494593,-99) , 
7, -951.286, 0, 0, 0.512576,-99) , 
NN(
0, 
0, 
-1, 0.475349, 1, -1, 0.488096,-99) , 
4, 0.999524, 1, 0, 0.493587,-99) , 
5, -0.191424, 1, 0, 0.499743,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0194234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492832,-99) , 
10, -0.580941, 0, 0, 0.523517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470672,-99) , 
10, -0.120224, 0, 0, 0.502231,-99) , 
9, -2.1823, 1, 0, 0.504511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484327,-99) , 
5, -0.200429, 1, 0, 0.499634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446204,-99) , 
4, 0.999524, 0, 0, 0.483799,-99) , 
0, 0.492376, 0, 0, 0.502497,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0261172);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486027,-99) , 
7, -948.705, 1, 0, 0.513762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492222,-99) , 
8, 0.142814, 0, 0, 0.500422,-99) , 
9, -1.25472, 1, 0, 0.503794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468476,-99) , 
5, -0.193503, 1, 0, 0.484716,-99) , 
0, 0.503804, 1, 0, 0.502074,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0167927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25075, 0, 1, 0.508234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492221,-99) , 
5, -0.462457, 1, 0, 0.498151,-99) , 
9, -0.108262, 1, 0, 0.502861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472203,-99) , 
0, 0.505709, 1, 0, 0.501815,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0118438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47735,-99) , 
0, 0.490199, 0, 0, 0.503394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473988,-99) , 
0, 0.505709, 1, 0, 0.502385,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0223143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.833104, 0, 1, 0.516703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491162,-99) , 
8, 0.428446, 0, 0, 0.49562,-99) , 
9, -0.708267, 1, 0, 0.501565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503892,-99) , 
NN(
0, 
0, 
-1, 0.143111, 1, -1, 0.462387,-99) , 
4, 0.999524, 1, 0, 0.47879,-99) , 
5, 0.441077, 1, 0, 0.498742,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.017956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497126,-99) , 
4, 0.999524, 1, 0, 0.502336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474151,-99) , 
3, 9.20815, 1, 0, 0.501075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443198,-99) , 
5, -0.466772, 1, 0, 0.475841,-99) , 
6, 0.0237926, 1, 0, 0.49957,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0135272);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49918,-99) , 
9, -0.751651, 1, 0, 0.503361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461039,-99) , 
10, 0.296878, 0, 0, 0.477081,-99) , 
5, 0.52437, 1, 0, 0.501466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473496,-99) , 
4, 0.997619, 0, 0, 0.500243,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0252613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497482,-99) , 
4, 0.999958, 0, 0, 0.508085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451984,-99) , 
4, 0.999109, 0, 0, 0.505462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544138,-99) , 
NN(
0, 
0, 
-1, -0.389391, 0, -1, 0.488642,-99) , 
9, -2.97724, 1, 0, 0.493153,-99) , 
5, -0.0117154, 1, 0, 0.500352,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0254386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.422709, 1, 1, 0.508262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46572,-99) , 
4, 0.999064, 0, 0, 0.50618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490461,-99) , 
4, 0.999524, 1, 0, 0.501405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458071,-99) , 
10, -0.825453, 0, 0, 0.495451,-99) , 
5, 0.0809843, 1, 0, 0.502449,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0277144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472825,-99) , 
8, -1.6205, 1, 0, 0.494414,-99) , 
10, -0.388509, 0, 0, 0.520867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496951,-99) , 
8, -1.2854, 1, 0, 0.501881,-99) , 
NN(
0, 
0, 
-1, -1.93047, 0, -1, 0.489613,-99) , 
10, 1.59206, 0, 0, 0.497173,-99) , 
9, -1.99927, 1, 0, 0.500301,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0109699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499296,-99) , 
7, -951.286, 0, 0, 0.528128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499767,-99) , 
8, -1.85714, 1, 0, 0.501693,-99) , 
4, 0.999048, 1, 0, 0.504456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482159,-99) , 
3, 9.37264, 1, 0, 0.503511,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0135261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.53597, 0, 1, 0.519781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499469,-99) , 
2, -0.153559, 1, 0, 0.502094,-99) , 
2, 0.0707963, 0, 0, 0.50521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465919,-99) , 
4, 0.996191, 0, 0, 0.504127,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0251433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28571, 1, 1, 0.51062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475591,-99) , 
9, -0.942452, 1, 0, 0.499167,-99) , 
10, 1.44907, 0, 0, 0.505739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467105,-99) , 
4, 0.996191, 0, 0, 0.504688,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0149216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.25599, 1, 1, 0.527374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473334,-99) , 
0, 0.505709, 1, 0, 0.504045,-99) , 
2, -0.180236, 1, 0, 0.505299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471355,-99) , 
2, -0.357105, 0, 0, 0.504392,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0149215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.452167, 1, 1, 0.504857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475656,-99) , 
7, -950.041, 1, 0, 0.493942,-99) , 
5, 0.257773, 1, 0, 0.502539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473531,-99) , 
4, 0.996191, 0, 0, 0.501739,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.027208);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489498,-99) , 
4, 0.999796, 0, 0, 0.505396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448772,-99) , 
5, 0.342523, 0, 0, 0.478635,-99) , 
4, 0.998571, 0, 0, 0.503455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528195,-99) , 
NN(
0, 
0, 
-1, 2.68785, 1, -1, 0.46446,-99) , 
8, -0.430578, 1, 0, 0.485052,-99) , 
7, 0.525285, 1, 0, 0.501016,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0162054);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48081,-99) , 
10, -0.703683, 0, 0, 0.520645,-99) , 
NN(
0, 
0, 
-1, -0.19156, 0, -1, 0.497693,-99) , 
9, -2.14647, 1, 0, 0.500371,-99) , 
NN(
0, 
0, 
-1, 4.4699, 0, -1, 0.475485,-99) , 
6, 0.023804, 1, 0, 0.498847,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0174158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499676,-99) , 
7, -951.286, 0, 0, 0.526008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496129,-99) , 
8, -1.85714, 1, 0, 0.498368,-99) , 
4, 0.999048, 1, 0, 0.501241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470179,-99) , 
3, 9.37264, 1, 0, 0.49994,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0260586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425641,-99) , 
9, -2.9341, 1, 0, 0.478258,-99) , 
10, -0.703683, 0, 0, 0.51728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494732,-99) , 
2, 0.0707698, 0, 0, 0.497996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449102,-99) , 
8, -2.14285, 0, 0, 0.496588,-99) , 
9, -2.1903, 1, 0, 0.498789,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0194354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139215, 1, 1, 0.525513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475982,-99) , 
2, -0.275459, 0, 0, 0.500779,-99) , 
3, 4.60399, 1, 0, 0.515603,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0782606, 0, 1, 0.504343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474279,-99) , 
10, 0.267642, 0, 0, 0.491447,-99) , 
5, 0.257782, 1, 0, 0.501461,-99) , 
2, -0.0713878, 1, 0, 0.503994,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0105083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.310124, 0, 1, 0.531451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499488,-99) , 
2, -0.214067, 1, 0, 0.501399,-99) , 
3, 0.551427, 1, 0, 0.503265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472492,-99) , 
3, 8.9993, 1, 0, 0.501833,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0155953);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498371,-99) , 
7, -949.113, 0, 0, 0.519796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497846,-99) , 
8, -1.85714, 1, 0, 0.500105,-99) , 
4, 0.999524, 1, 0, 0.503277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473819,-99) , 
3, 9.37264, 1, 0, 0.502035,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0106845);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214071, 0, 1, 0.504635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479385,-99) , 
3, 9.20554, 1, 0, 0.503518,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0229837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49931,-99) , 
10, 3.51304, 1, 0, 0.512018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463266,-99) , 
4, 0.999524, 0, 0, 0.494955,-99) , 
0, 0.492603, 0, 0, 0.507629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498,-99) , 
7, -951.227, 0, 0, 0.51678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493107,-99) , 
3, 8.17652, 0, 0, 0.495737,-99) , 
4, 0.999524, 1, 0, 0.498827,-99) , 
0, 0.497138, 1, 0, 0.502433,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0103188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497285,-99) , 
3, 4.87762, 1, 0, 0.522667,-99) , 
NN(
0, 
0, 
-1, -0.112381, 1, 1, 0.503115,-99) , 
2, 0.21404, 0, 0, 0.504287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469896,-99) , 
4, 0.996191, 0, 0, 0.503355,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0211231);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469406,-99) , 
8, -1.00001, 0, 0, 0.523754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471686,-99) , 
4, 0.999751, 0, 0, 0.500491,-99) , 
4, 0.999524, 1, 0, 0.504303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473257,-99) , 
3, 9.37525, 1, 0, 0.503001,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0152569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.68755, 1, 1, 0.533828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496833,-99) , 
2, -0.112495, 1, 0, 0.499744,-99) , 
2, 0.21379, 0, 0, 0.50177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477846,-99) , 
3, 9.22081, 1, 0, 0.50073,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0127982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487082,-99) , 
5, -0.0108545, 0, 0, 0.52422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460203,-99) , 
5, 0.621256, 1, 0, 0.500441,-99) , 
4, 0.999048, 1, 0, 0.502111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466768,-99) , 
4, 0.997143, 0, 0, 0.500831,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0125196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999047, 1, 1, 0.518716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497986,-99) , 
2, 0.135652, 0, 0, 0.500322,-99) , 
2, -0.0917407, 1, 0, 0.502673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474084,-99) , 
2, -0.357049, 0, 0, 0.501909,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0142891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.27688, 0, 1, 0.505452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475304,-99) , 
9, 13.4398, 1, 0, 0.503869,-99) , 
NN(
0, 
0, 
-1, 5.07974, 0, -1, 0.482376,-99) , 
6, 0.023809, 1, 0, 0.502556,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0148692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499315,-99) , 
5, -0.102053, 0, 0, 0.511185,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.497639,-99) , 
2, -0.0716288, 1, 0, 0.50006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522052,-99) , 
NN(
0, 
0, 
-1, -0.657558, 0, -1, 0.462804,-99) , 
9, -2.77839, 1, 0, 0.485859,-99) , 
10, -0.23829, 0, 0, 0.498307,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0176905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492943,-99) , 
7, -948.91, 1, 0, 0.501757,-99) , 
4, 0.999048, 1, 0, 0.502977,-99) , 
NN(
0, 
0, 
-1, 0.257035, 0, -1, 0.477879,-99) , 
4, 0.998571, 0, 0, 0.501148,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0181905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496491,-99) , 
2, -0.139131, 1, 0, 0.51665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483058,-99) , 
2, -0.207347, 0, 0, 0.49545,-99) , 
3, 4.82303, 1, 0, 0.508656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479274,-99) , 
3, 4.85269, 1, 0, 0.510208,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.495666,-99) , 
2, 0.153173, 0, 0, 0.497425,-99) , 
2, -0.0713008, 1, 0, 0.499441,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0176619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480557,-99) , 
9, 16.9115, 1, 0, 0.506672,-99) , 
NN(
0, 
0, 
-1, -0.467295, 1, -1, 0.487803,-99) , 
6, 0.0238019, 1, 0, 0.505523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474547,-99) , 
2, 0.357166, 1, 0, 0.504664,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0201962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999547, 1, 1, 0.504449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474678,-99) , 
4, 0.997619, 0, 0, 0.503442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488344,-99) , 
5, 0.448967, 1, 0, 0.526569,-99) , 
NN(
0, 
0, 
-1, -0.532272, 1, -1, 0.466594,-99) , 
9, -2.60102, 1, 0, 0.489538,-99) , 
10, 0.0387796, 0, 0, 0.501159,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0174855);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497241,-99) , 
9, -2.177, 1, 0, 0.501195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464908,-99) , 
10, -0.878295, 0, 0, 0.499113,-99) , 
10, 10.7611, 0, 0, 0.500338,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.015001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467836,-99) , 
5, 0.617147, 1, 0, 0.503352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461076,-99) , 
7, -951.286, 0, 0, 0.482387,-99) , 
4, 0.998571, 0, 0, 0.501832,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.02462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459097,-99) , 
8, -1.00002, 0, 0, 0.518477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494784,-99) , 
9, -2.14647, 1, 0, 0.497665,-99) , 
4, 0.999524, 1, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465485,-99) , 
3, 9.37657, 1, 0, 0.499564,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.00861935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497253,-99) , 
7, -949.113, 0, 0, 0.51935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465411,-99) , 
4, 0.99932, 0, 0, 0.499248,-99) , 
4, 0.999048, 1, 0, 0.501339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478358,-99) , 
3, 9.31837, 1, 0, 0.500369,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0152849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49434,-99) , 
10, 0.0455896, 0, 0, 0.507607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493326,-99) , 
5, -0.191117, 1, 0, 0.497505,-99) , 
2, -0.00336421, 1, 0, 0.501992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466453,-99) , 
2, -0.35708, 0, 0, 0.501042,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0129203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.113, 0, 1, 0.522056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496732,-99) , 
2, -0.185168, 1, 0, 0.497853,-99) , 
4, 0.999048, 1, 0, 0.500383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482304,-99) , 
3, 9.19619, 1, 0, 0.499583,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.020002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459622,-99) , 
8, -2.14286, 0, 0, 0.503805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471116,-99) , 
8, -0.429815, 1, 0, 0.487299,-99) , 
7, 0.525285, 1, 0, 0.501629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478248,-99) , 
0, 0.490471, 0, 0, 0.500591,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0139559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999546, 1, 1, 0.502392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473147,-99) , 
9, -2.6158, 1, 0, 0.491288,-99) , 
10, 0.0455896, 0, 0, 0.50067,-99) , 
NN(
0, 
0, 
-1, 0.444208, 0, -1, 0.474774,-99) , 
4, 0.998095, 0, 0, 0.499304,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0107983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464859,-99) , 
9, 16.673, 1, 0, 0.499656,-99) , 
NN(
0, 
0, 
-1, 1.01324, 0, -1, 0.482888,-99) , 
6, 0.00113352, 0, 0, 0.497522,-99) , 
NN(
0, 
0, 
-1, 5.19658, 0, -1, 0.47817,-99) , 
6, 0.023804, 1, 0, 0.496347,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0218797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489189,-99) , 
5, -0.255338, 0, 0, 0.495113,-99) , 
8, -0.999899, 1, 0, 0.505839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449726,-99) , 
10, -0.805145, 0, 0, 0.496703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445259,-99) , 
8, -2.14287, 0, 0, 0.494513,-99) , 
9, 1.7142, 0, 0, 0.497866,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0226006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494882,-99) , 
10, 0.17817, 0, 0, 0.510887,-99) , 
NN(
0, 
0, 
-1, 0.853248, 0, -1, 0.491269,-99) , 
9, -1.54604, 1, 0, 0.495438,-99) , 
10, 10.3987, 0, 0, 0.496679,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0141172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464204,-99) , 
4, 0.999524, 0, 0, 0.491173,-99) , 
0, 0.492693, 0, 0, 0.502195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490016,-99) , 
2, 0.0715234, 0, 0, 0.49453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467539,-99) , 
5, 0.437665, 1, 0, 0.491466,-99) , 
0, 0.500947, 1, 0, 0.499554,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.00931364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492184,-99) , 
3, 4.80118, 1, 0, 0.51485,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.497299,-99) , 
2, 0.213603, 0, 0, 0.498355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469794,-99) , 
4, 0.99619, 0, 0, 0.497589,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0283267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498854,-99) , 
5, 0.0785276, 0, 0, 0.529582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494352,-99) , 
3, 0.779118, 1, 0, 0.498147,-99) , 
4, 0.999048, 1, 0, 0.501621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484364,-99) , 
4, 0.999977, 0, 0, 0.502879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410142,-99) , 
4, 0.999524, 0, 0, 0.490721,-99) , 
3, 4.6796, 1, 0, 0.499463,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0293407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464996,-99) , 
9, -2.91999, 1, 0, 0.491991,-99) , 
10, -0.318879, 0, 0, 0.514143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498648,-99) , 
8, -1.00005, 1, 0, 0.508883,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.490825,-99) , 
9, 1.72765, 0, 0, 0.497001,-99) , 
9, -1.99046, 1, 0, 0.499272,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0138831);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479694,-99) , 
3, 9.32771, 1, 0, 0.505223,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0139599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494081,-99) , 
7, -951.286, 0, 0, 0.51723,-99) , 
NN(
0, 
0, 
-1, -1.85713, 1, 1, 0.502375,-99) , 
4, 0.999048, 1, 0, 0.503732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485331,-99) , 
4, 0.999887, 0, 0, 0.50584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450503,-99) , 
4, 0.999524, 0, 0, 0.491046,-99) , 
0, 0.493328, 0, 0, 0.502034,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0147505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499439,-99) , 
7, -1.69972, 0, 0, 0.502803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466034,-99) , 
9, -2.86552, 1, 0, 0.487394,-99) , 
10, -0.312195, 0, 0, 0.501122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461205,-99) , 
4, 0.996191, 0, 0, 0.500055,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0139526);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499815,-99) , 
3, 4.19413, 1, 0, 0.514507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498248,-99) , 
9, -1.25472, 1, 0, 0.500752,-99) , 
0, 0.495279, 1, 0, 0.503114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487132,-99) , 
0, 0.490789, 1, 0, 0.502461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460379,-99) , 
4, 0.999524, 0, 0, 0.489826,-99) , 
0, 0.492376, 0, 0, 0.501832,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0289689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492083,-99) , 
10, 3.23768, 1, 0, 0.501957,-99) , 
8, -1.2854, 1, 0, 0.5066,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45338,-99) , 
10, -0.82326, 0, 0, 0.501685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454681,-99) , 
8, -1.92668, 0, 0, 0.497551,-99) , 
10, 1.69328, 0, 0, 0.50223,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0101577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.708696, 1, 1, 0.502884,-99) , 
NN(
0, 
0, 
-1, -1.94703, 0, -1, 0.47952,-99) , 
5, 0.527387, 1, 0, 0.501236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473534,-99) , 
4, 0.997619, 0, 0, 0.500053,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0233339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488654,-99) , 
7, -43.7211, 1, 0, 0.500334,-99) , 
8, -1.28556, 1, 0, 0.503997,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454602,-99) , 
8, 0.818153, 1, 0, 0.499807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440157,-99) , 
9, 0.12988, 1, 0, 0.496523,-99) , 
10, 1.69328, 0, 0, 0.500377,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0453967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491997,-99) , 
5, -0.357486, 0, 0, 0.500785,-99) , 
8, -0.714176, 1, 0, 0.511902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467577,-99) , 
10, 0.405496, 0, 0, 0.500927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457248,-99) , 
7, -948.91, 0, 0, 0.480106,-99) , 
8, -0.42857, 0, 0, 0.492486,-99) , 
9, 2.37315, 0, 0, 0.497426,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0244006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
0, 0.49809, 0, 1, 0.521535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493258,-99) , 
9, -2.40127, 1, 0, 0.49717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454685,-99) , 
10, -1.05673, 0, 0, 0.495299,-99) , 
10, 10.0736, 0, 0, 0.496975,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.02144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496843,-99) , 
5, -0.357647, 0, 0, 0.504739,-99) , 
8, -0.714176, 1, 0, 0.513188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481945,-99) , 
9, 0.356904, 1, 0, 0.497429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451607,-99) , 
8, 1.85708, 1, 0, 0.495591,-99) , 
9, 2.37315, 0, 0, 0.500071,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0344457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496812,-99) , 
4, 0.999984, 0, 0, 0.513006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465308,-99) , 
4, 0.99966, 0, 0, 0.508257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483803,-99) , 
9, -2.11168, 1, 0, 0.489114,-99) , 
9, 1.50957, 0, 0, 0.492937,-99) , 
5, -0.279451, 1, 0, 0.498564,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0279315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495133,-99) , 
10, 6.201, 1, 0, 0.507222,-99) , 
8, -0.714176, 1, 0, 0.514114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492952,-99) , 
9, -2.32847, 1, 0, 0.496852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45266,-99) , 
10, -0.944026, 0, 0, 0.494061,-99) , 
9, 3.67237, 0, 0, 0.498116,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0362374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479071,-99) , 
7, -951.232, 1, 0, 0.506037,-99) , 
8, -1.0001, 1, 0, 0.514668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499801,-99) , 
9, -0.715277, 1, 0, 0.507919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468189,-99) , 
9, -1.6724, 1, 0, 0.49037,-99) , 
10, 0.941801, 0, 0, 0.499674,-99) , 
9, 1.72205, 0, 0, 0.504125,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0267938);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.74696, 0, 1, 0.508891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457224,-99) , 
10, -0.977107, 0, 0, 0.499276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458508,-99) , 
8, -0.677028, 1, 0, 0.485486,-99) , 
10, 0.0182195, 0, 0, 0.505128,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0282651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00003, 1, 1, 0.509615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493846,-99) , 
9, -1.66491, 1, 0, 0.500197,-99) , 
9, 1.71882, 0, 0, 0.503423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470885,-99) , 
10, -1.19258, 0, 0, 0.510536,-99) , 
NN(
0, 
0, 
-1, -1.01905, 1, -1, 0.464702,-99) , 
9, -2.60165, 1, 0, 0.48647,-99) , 
10, -0.184395, 0, 0, 0.501199,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0229764);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489994,-99) , 
9, 11.4338, 1, 0, 0.506451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479393,-99) , 
4, 0.998572, 0, 0, 0.505148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481712,-99) , 
8, 0.429138, 1, 0, 0.505692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461837,-99) , 
7, -950.041, 1, 0, 0.486057,-99) , 
5, 0.441172, 1, 0, 0.502759,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0140922);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49823,-99) , 
9, -2.3909, 1, 0, 0.501212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461382,-99) , 
10, -1.00232, 0, 0, 0.499317,-99) , 
10, 10.1099, 0, 0, 0.500586,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0290869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28573, 1, 1, 0.506215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486241,-99) , 
9, -1.75703, 1, 0, 0.496584,-99) , 
10, 1.41147, 0, 0, 0.50294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455136,-99) , 
8, -0.636518, 1, 0, 0.504294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458208,-99) , 
10, -1.02433, 0, 0, 0.488985,-99) , 
10, -0.184395, 0, 0, 0.501123,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0295305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.420636, 0, 1, 0.506845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465903,-99) , 
10, 1.7214, 0, 0, 0.496181,-99) , 
8, 0.714289, 1, 0, 0.503681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469316,-99) , 
10, -0.753028, 0, 0, 0.507151,-99) , 
NN(
0, 
0, 
-1, -0.682791, 1, -1, 0.457439,-99) , 
9, -2.33079, 1, 0, 0.482796,-99) , 
10, 0.0997583, 0, 0, 0.500064,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0230382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499543,-99) , 
9, -1.65019, 1, 0, 0.503918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486117,-99) , 
8, -0.71354, 1, 0, 0.491637,-99) , 
10, 3.18462, 1, 0, 0.49963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519309,-99) , 
NN(
0, 
0, 
-1, -0.653451, 1, -1, 0.467739,-99) , 
9, -2.62565, 1, 0, 0.486792,-99) , 
10, 0.0342846, 0, 0, 0.497551,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0222715);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498993,-99) , 
10, 0.622842, 0, 0, 0.511683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478886,-99) , 
8, -0.71432, 0, 0, 0.498592,-99) , 
9, -1.06369, 1, 0, 0.502245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512578,-99) , 
NN(
0, 
0, 
-1, 0.712293, 0, -1, 0.475996,-99) , 
8, -0.429486, 1, 0, 0.487814,-99) , 
7, 0.525285, 1, 0, 0.500345,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0233282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.17135, 1, 1, 0.505719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436079,-99) , 
9, -2.91919, 1, 0, 0.471931,-99) , 
10, -0.68836, 0, 0, 0.502412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479775,-99) , 
8, 1.58532, 0, 0, 0.485604,-99) , 
8, -0.713421, 1, 0, 0.490582,-99) , 
10, 3.3433, 1, 0, 0.499134,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0136131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479971,-99) , 
3, 4.97864, 1, 0, 0.514992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496632,-99) , 
3, 9.33107, 0, 0, 0.49761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468735,-99) , 
4, 0.997143, 0, 0, 0.49683,-99) , 
2, 0.214312, 0, 0, 0.498035,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0213253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83324, 1, 1, 0.50406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489474,-99) , 
8, 1.57171, 0, 0, 0.494368,-99) , 
10, 3.03724, 1, 0, 0.500597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477494,-99) , 
10, -0.822667, 0, 0, 0.502387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453142,-99) , 
8, -0.666859, 1, 0, 0.487975,-99) , 
10, -0.151367, 0, 0, 0.498896,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0144297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.227, 0, 1, 0.525041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496628,-99) , 
8, -1.57144, 1, 0, 0.498471,-99) , 
4, 0.999048, 1, 0, 0.501245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481063,-99) , 
3, 9.37264, 1, 0, 0.500405,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0201056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488699,-99) , 
4, 0.999819, 0, 0, 0.511406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471963,-99) , 
0, 0.49292, 0, 0, 0.488221,-99) , 
4, 0.999524, 0, 0, 0.506826,-99) , 
NN(
NN(
0, 
0, 
-1, 0.501628, 1, 1, 0.521798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495161,-99) , 
8, -1.85716, 1, 0, 0.497038,-99) , 
4, 0.999048, 1, 0, 0.499292,-99) , 
0, 0.496185, 1, 0, 0.501733,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.00850326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.0179, 1, 1, 0.502748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484932,-99) , 
9, 13.6783, 1, 0, 0.501709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468422,-99) , 
1, 0.0245856, 1, 0, 0.500779,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0148123);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497083,-99) , 
9, -2.35622, 1, 0, 0.499829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471091,-99) , 
10, -0.960145, 0, 0, 0.498334,-99) , 
10, 10.3314, 0, 0, 0.499619,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0223285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486175,-99) , 
7, -43.9206, 1, 0, 0.505477,-99) , 
10, 4.48659, 1, 0, 0.513056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461349,-99) , 
8, 1.57137, 1, 0, 0.501448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442685,-99) , 
10, 3.44773, 1, 0, 0.49908,-99) , 
9, 2.55463, 0, 0, 0.502483,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0102824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.508368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497103,-99) , 
10, 9.83755, 0, 0, 0.498197,-99) , 
2, -0.0722391, 1, 0, 0.499879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462782,-99) , 
5, 0.440744, 0, 0, 0.481774,-99) , 
4, 0.998095, 0, 0, 0.498911,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.029988);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494181,-99) , 
7, -43.3991, 1, 0, 0.504402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470076,-99) , 
10, 2.4386, 0, 0, 0.490729,-99) , 
8, -0.999994, 0, 0, 0.502347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536057,-99) , 
NN(
0, 
0, 
-1, -0.761165, 0, -1, 0.469007,-99) , 
9, -2.99739, 1, 0, 0.486266,-99) , 
10, -0.182906, 0, 0, 0.50025,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0232679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496402,-99) , 
7, -951.286, 0, 0, 0.521044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496997,-99) , 
8, -1.57144, 1, 0, 0.498795,-99) , 
4, 0.999048, 1, 0, 0.501204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472522,-99) , 
4, 0.999955, 0, 0, 0.501479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413286,-99) , 
4, 0.999524, 0, 0, 0.489992,-99) , 
3, 4.75084, 1, 0, 0.499022,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0299458);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499889,-99) , 
8, -0.71414, 1, 0, 0.512831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44411,-99) , 
8, -1.28571, 0, 0, 0.498598,-99) , 
7, -948.705, 0, 0, 0.50351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449214,-99) , 
10, -0.473402, 0, 0, 0.468542,-99) , 
9, -2.92083, 1, 0, 0.484989,-99) , 
10, -0.249031, 0, 0, 0.501258,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0422532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463121,-99) , 
10, 0.847591, 0, 0, 0.497973,-99) , 
8, -1.28561, 1, 0, 0.51036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49141,-99) , 
9, -0.887002, 1, 0, 0.500067,-99) , 
NN(
0, 
0, 
-1, -2.04762, 0, -1, 0.457936,-99) , 
8, -1.57143, 0, 0, 0.495291,-99) , 
7, -949.024, 0, 0, 0.500645,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0153096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478797,-99) , 
10, -0.715198, 0, 0, 0.503248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46938,-99) , 
10, 13.4837, 0, 0, 0.4847,-99) , 
9, 13.4287, 1, 0, 0.501941,-99) , 
NN(
0, 
0, 
-1, 0.445708, 0, -1, 0.478405,-99) , 
4, 0.998095, 0, 0, 0.5007,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0179987);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498458,-99) , 
9, -0.658502, 1, 0, 0.526024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486069,-99) , 
10, 0.647691, 0, 0, 0.499566,-99) , 
8, -1.8571, 1, 0, 0.501195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460937,-99) , 
7, -951.286, 0, 0, 0.481323,-99) , 
4, 0.998571, 0, 0, 0.499755,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.011029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.31598, 1, 1, 0.52748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497796,-99) , 
3, 0.556771, 1, 0, 0.499048,-99) , 
2, 0.21426, 0, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474323,-99) , 
3, 9.31837, 1, 0, 0.499645,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0253704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46722,-99) , 
8, 0.999914, 1, 0, 0.507423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488369,-99) , 
8, 0.714233, 0, 0, 0.494745,-99) , 
9, -0.167888, 1, 0, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477706,-99) , 
3, 9.20554, 1, 0, 0.499481,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0182817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498971,-99) , 
10, 4.24945, 1, 0, 0.509286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468378,-99) , 
4, 0.999637, 0, 0, 0.505435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495829,-99) , 
9, -2.9851, 1, 0, 0.498111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46633,-99) , 
3, 9.24377, 1, 0, 0.496686,-99) , 
5, -0.279378, 1, 0, 0.499903,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0132977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2854, 1, 1, 0.507472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454782,-99) , 
8, -2.17944, 0, 0, 0.499413,-99) , 
10, 1.72457, 0, 0, 0.503611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470658,-99) , 
4, 0.996191, 0, 0, 0.502724,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0130665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483615,-99) , 
9, 1.57361, 0, 0, 0.492827,-99) , 
0, 0.50326, 1, 0, 0.50271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493592,-99) , 
0, 0.490789, 1, 0, 0.502107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463873,-99) , 
4, 0.999524, 0, 0, 0.490856,-99) , 
0, 0.492376, 0, 0, 0.501556,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0350157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486155,-99) , 
8, 1.28533, 0, 0, 0.492847,-99) , 
8, -0.999388, 1, 0, 0.506685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49113,-99) , 
9, -0.501103, 1, 0, 0.498891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426659,-99) , 
8, -2.14285, 0, 0, 0.495795,-99) , 
7, -1.58995, 0, 0, 0.49941,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0275334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0358381, 1, 1, 0.528902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493463,-99) , 
9, 2.28806, 0, 0, 0.500137,-99) , 
9, -1.43879, 1, 0, 0.503391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483157,-99) , 
8, 0.140712, 1, 0, 0.498588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456568,-99) , 
10, -0.70626, 0, 0, 0.490356,-99) , 
5, 0.257811, 1, 0, 0.500429,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.028119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.713759, 1, 1, 0.513311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468682,-99) , 
8, -1.00003, 0, 0, 0.500358,-99) , 
7, -949.469, 0, 0, 0.504809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459768,-99) , 
10, -0.336974, 0, 0, 0.476528,-99) , 
9, -2.82695, 1, 0, 0.489102,-99) , 
10, -0.0983186, 0, 0, 0.502578,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.00946921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498696,-99) , 
3, 4.56116, 1, 0, 0.510139,-99) , 
NN(
0, 
0, 
-1, 0.99873, 0, -1, 0.497686,-99) , 
2, 0.0715463, 0, 0, 0.499859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463483,-99) , 
4, 0.99619, 0, 0, 0.498898,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0204093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714503, 1, 1, 0.511028,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.495662,-99) , 
7, -949.024, 0, 0, 0.500985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46149,-99) , 
10, -0.990468, 0, 0, 0.495008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452981,-99) , 
8, -0.554024, 1, 0, 0.484933,-99) , 
10, -0.151367, 0, 0, 0.498828,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0127423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496863,-99) , 
8, -2.29252, 0, 0, 0.519076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498561,-99) , 
4, 0.999524, 1, 0, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454486,-99) , 
10, -0.822165, 0, 0, 0.499024,-99) , 
8, -1.85715, 1, 0, 0.500234,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.023065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.61271, 1, 1, 0.508876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493844,-99) , 
8, -0.71406, 1, 0, 0.498639,-99) , 
10, 3.35107, 1, 0, 0.505433,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.520693,-99) , 
NN(
0, 
0, 
-1, -0.472712, 1, -1, 0.47461,-99) , 
9, -2.58745, 1, 0, 0.491255,-99) , 
10, 0.111659, 0, 0, 0.502955,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0211332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.9796, 0, 1, 0.521673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478699,-99) , 
9, 16.1703, 1, 0, 0.502868,-99) , 
8, -1.57144, 1, 0, 0.504037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466648,-99) , 
10, -0.737743, 0, 0, 0.494367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450999,-99) , 
8, -0.272014, 1, 0, 0.486233,-99) , 
10, 0.114666, 0, 0, 0.500929,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0190009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498531,-99) , 
8, -0.140349, 1, 0, 0.505803,-99) , 
10, 5.39267, 1, 0, 0.512605,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495676,-99) , 
9, 1.35393, 0, 0, 0.498961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469907,-99) , 
10, 3.6323, 1, 0, 0.497002,-99) , 
9, 3.67998, 0, 0, 0.5001,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0217406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455497,-99) , 
9, -1.19508, 1, 0, 0.503234,-99) , 
5, -0.462564, 1, 0, 0.515849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493747,-99) , 
10, 2.66491, 1, 0, 0.500737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457377,-99) , 
10, -0.646778, 0, 0, 0.49853,-99) , 
8, -1.57142, 1, 0, 0.50018,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0104191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4306, 1, 1, 0.519369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476647,-99) , 
6, 0.0237733, 1, 0, 0.500701,-99) , 
10, 8.78829, 0, 0, 0.502305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473516,-99) , 
4, 0.997619, 0, 0, 0.501076,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0251016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498362,-99) , 
4, 0.999977, 0, 0, 0.50603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457205,-99) , 
9, 1.2203, 0, 0, 0.484135,-99) , 
4, 0.999525, 0, 0, 0.503996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488339,-99) , 
10, 0.721388, 0, 0, 0.498067,-99) , 
NN(
0, 
0, 
-1, 1.1819, 0, -1, 0.47511,-99) , 
8, 0.714446, 1, 0, 0.491143,-99) , 
5, 0.0781268, 1, 0, 0.499494,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0162391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.99006, 0, 1, 0.525311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485962,-99) , 
3, 4.49711, 1, 0, 0.50269,-99) , 
0, 0.499995, 0, 0, 0.511056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487601,-99) , 
10, 0.745374, 0, 0, 0.498086,-99) , 
8, -1.85713, 1, 0, 0.499681,-99) , 
2, -0.0712524, 1, 0, 0.501731,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.022477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486455,-99) , 
7, -43.5495, 1, 0, 0.504897,-99) , 
10, 4.48659, 1, 0, 0.511345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494559,-99) , 
9, -2.98706, 1, 0, 0.496285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450426,-99) , 
10, 3.47037, 1, 0, 0.494334,-99) , 
9, 2.63971, 0, 0, 0.498428,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0207506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49714,-99) , 
2, 0.105016, 0, 0, 0.500177,-99) , 
2, -0.219197, 1, 0, 0.501864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489148,-99) , 
4, 0.999977, 0, 0, 0.503586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415428,-99) , 
4, 0.999524, 0, 0, 0.492115,-99) , 
3, 4.741, 1, 0, 0.499965,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.00982521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.516195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471048,-99) , 
9, 9.30232, 1, 0, 0.501247,-99) , 
10, 10.051, 0, 0, 0.502219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474979,-99) , 
4, 0.996191, 0, 0, 0.501494,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0161689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85716, 1, 1, 0.508105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493647,-99) , 
2, 0.139764, 0, 0, 0.497141,-99) , 
2, -0.00341049, 1, 0, 0.501971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476575,-99) , 
2, -0.357136, 0, 0, 0.501304,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0161643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496169,-99) , 
8, -2.29252, 0, 0, 0.517871,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497603,-99) , 
10, 2.25493, 1, 0, 0.503495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435616,-99) , 
8, 0.274946, 1, 0, 0.49265,-99) , 
10, 0.701237, 0, 0, 0.500667,-99) , 
8, -1.85714, 1, 0, 0.501699,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0288513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.708878, 1, 1, 0.510171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475601,-99) , 
8, -0.714315, 0, 0, 0.497922,-99) , 
7, -2.17862, 0, 0, 0.502007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472509,-99) , 
10, -0.74157, 0, 0, 0.508825,-99) , 
NN(
0, 
0, 
-1, -0.689642, 1, -1, 0.470655,-99) , 
9, -2.29629, 1, 0, 0.490622,-99) , 
10, 0.111659, 0, 0, 0.500043,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.00752833);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498514,-99) , 
8, 0.430576, 1, 0, 0.513161,-99) , 
NN(
0, 
0, 
-1, 7.17986, 1, -1, 0.498074,-99) , 
10, 8.79706, 0, 0, 0.499341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46776,-99) , 
4, 0.996191, 0, 0, 0.498498,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0107044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.110708, 0, 1, 0.51813,-99) , 
NN(
0, 
0, 
-1, -0.71111, 0, -1, 0.49781,-99) , 
8, -1.57144, 1, 0, 0.499742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463137,-99) , 
7, -951.286, 0, 0, 0.481624,-99) , 
4, 0.998571, 0, 0, 0.498435,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0257115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469326,-99) , 
8, -0.653449, 1, 0, 0.499436,-99) , 
10, 0.0351834, 0, 0, 0.513286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464653,-99) , 
4, 0.999674, 0, 0, 0.50713,-99) , 
NN(
0, 
0, 
-1, 0.812195, 0, -1, 0.493726,-99) , 
5, -0.372702, 1, 0, 0.498516,-99) , 
9, -1.66992, 1, 0, 0.501159,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0135144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.20935, 0, 1, 0.50524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493128,-99) , 
8, 1.57129, 0, 0, 0.497479,-99) , 
10, 3.30218, 1, 0, 0.503043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482524,-99) , 
2, 0.357109, 1, 0, 0.502473,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.00920504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.461691, 1, 1, 0.513921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463173,-99) , 
10, -0.71111, 0, 0, 0.499681,-99) , 
8, -1.57142, 1, 0, 0.501037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471569,-99) , 
4, 0.996191, 0, 0, 0.500255,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0118148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497487,-99) , 
8, -1.57144, 1, 0, 0.499626,-99) , 
4, 0.999048, 1, 0, 0.500764,-99) , 
NN(
0, 
0, 
-1, 0.262767, 0, -1, 0.484517,-99) , 
4, 0.998571, 0, 0, 0.499589,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0204893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496701,-99) , 
7, -951.236, 0, 0, 0.514307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490255,-99) , 
5, -0.0142439, 1, 0, 0.49808,-99) , 
4, 0.999524, 1, 0, 0.500787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488998,-99) , 
0, 0.5019, 0, 0, 0.496309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420736,-99) , 
4, 0.999524, 0, 0, 0.486536,-99) , 
3, 4.741, 1, 0, 0.498017,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0435009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14827, 1, 1, 0.511048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461211,-99) , 
10, 0.549401, 0, 0, 0.50563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483807,-99) , 
8, -1.23074, 1, 0, 0.51537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478459,-99) , 
9, -2.18242, 1, 0, 0.489862,-99) , 
7, -951.21, 0, 0, 0.498286,-99) , 
8, -0.142866, 0, 0, 0.502207,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0322367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566709,-99) , 
NN(
0, 
0, 
-1, -2.04763, 0, -1, 0.485192,-99) , 
7, -949.657, 0, 0, 0.507379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458635,-99) , 
8, 1.66659, 1, 0, 0.502416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482109,-99) , 
4, 0.999524, 1, 0, 0.488789,-99) , 
7, -949.024, 1, 0, 0.49728,-99) , 
8, -1.00003, 1, 0, 0.499333,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0269067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464987,-99) , 
9, -2.66747, 1, 0, 0.487763,-99) , 
10, -0.315051, 0, 0, 0.508091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494595,-99) , 
8, -0.713759, 1, 0, 0.505724,-99) , 
NN(
0, 
0, 
-1, -1.57145, 0, -1, 0.491696,-99) , 
7, -948.91, 0, 0, 0.496465,-99) , 
9, -1.86095, 1, 0, 0.498217,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0218834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498728,-99) , 
10, 0.323998, 0, 0, 0.511808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497377,-99) , 
10, 6.98875, 0, 0, 0.500481,-99) , 
9, -1.24672, 1, 0, 0.503948,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491741,-99) , 
7, -951.232, 0, 0, 0.503567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444611,-99) , 
10, 1.39319, 0, 0, 0.494083,-99) , 
8, 0.714236, 1, 0, 0.501526,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0273029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.154395, 0, 1, 0.512608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465938,-99) , 
7, -12.1436, 1, 0, 0.491215,-99) , 
10, -0.521206, 0, 0, 0.509294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49515,-99) , 
10, 2.23864, 1, 0, 0.502949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444626,-99) , 
10, 0.644296, 0, 0, 0.497566,-99) , 
8, 0.142862, 1, 0, 0.504261,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.014115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498746,-99) , 
9, -0.88571, 1, 0, 0.515592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455813,-99) , 
10, -0.953246, 0, 0, 0.502979,-99) , 
8, -1.85715, 1, 0, 0.503734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478097,-99) , 
0, 0.489519, 0, 0, 0.503081,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0171732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496875,-99) , 
5, 0.0929149, 1, 0, 0.50858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49456,-99) , 
7, -1.58995, 0, 0, 0.4988,-99) , 
9, -1.25472, 1, 0, 0.501098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460547,-99) , 
5, 0.440304, 0, 0, 0.482537,-99) , 
4, 0.998095, 0, 0, 0.500119,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0227191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495625,-99) , 
7, -949.657, 0, 0, 0.516578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490583,-99) , 
7, -43.3991, 1, 0, 0.500279,-99) , 
8, -0.999995, 1, 0, 0.503608,-99) , 
NN(
0, 
0, 
-1, 0.428461, 1, -1, 0.477842,-99) , 
4, 0.998571, 0, 0, 0.501759,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0112854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4924,-99) , 
4, 0.999796, 0, 0, 0.501385,-99) , 
2, -0.214594, 1, 0, 0.502495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459678,-99) , 
0, 0.495233, 0, 0, 0.485743,-99) , 
4, 0.998571, 0, 0, 0.501272,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0164774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.26137, 0, 1, 0.519388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49797,-99) , 
8, -1.57144, 1, 0, 0.499471,-99) , 
4, 0.999048, 1, 0, 0.501631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491266,-99) , 
4, 0.999977, 0, 0, 0.501507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421027,-99) , 
4, 0.999524, 0, 0, 0.491119,-99) , 
3, 4.46079, 1, 0, 0.499367,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.00987838);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85715, 1, 1, 0.504248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463613,-99) , 
0, 0.495233, 0, 0, 0.487885,-99) , 
4, 0.998572, 0, 0, 0.50306,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0250798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445503,-99) , 
8, -0.000756025, 1, 0, 0.500371,-99) , 
10, 0.442223, 0, 0, 0.509481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499883,-99) , 
4, 0.999524, 1, 0, 0.507351,-99) , 
NN(
0, 
0, 
-1, -1.28571, 0, -1, 0.491195,-99) , 
7, -1.69972, 0, 0, 0.496307,-99) , 
9, -1.21134, 1, 0, 0.499699,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0114599);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.148294, 1, 1, 0.516006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499454,-99) , 
6, 0.0113374, 0, 0, 0.502636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468663,-99) , 
6, 0.023809, 1, 0, 0.501105,-99) , 
10, 8.92477, 0, 0, 0.502292,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.00733839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490731,-99) , 
3, 5.0914, 1, 0, 0.517732,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481954,-99) , 
4, 0.997143, 0, 0, 0.501082,-99) , 
2, -0.214144, 1, 0, 0.502149,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.00869853);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214092, 1, 1, 0.503755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483721,-99) , 
3, 8.9993, 1, 0, 0.502804,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0135991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28498, 1, 1, 0.505344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459666,-99) , 
8, 0.947355, 1, 0, 0.498989,-99) , 
10, 1.90688, 0, 0, 0.502138,-99) , 
NN(
0, 
0, 
-1, 0.262317, 0, -1, 0.477401,-99) , 
4, 0.998572, 0, 0, 0.500366,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0118598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49588,-99) , 
8, -0.999977, 1, 0, 0.49796,-99) , 
2, -0.214645, 1, 0, 0.499061,-99) , 
NN(
0, 
0, 
-1, 0.437001, 0, -1, 0.482158,-99) , 
4, 0.998095, 0, 0, 0.498175,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.017317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.898714, 1, 1, 0.507478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448833,-99) , 
8, 0.249326, 1, 0, 0.495629,-99) , 
10, 0.717167, 0, 0, 0.5038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471718,-99) , 
10, 12.0112, 0, 0, 0.490758,-99) , 
9, 11.2454, 1, 0, 0.502735,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0104102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49772,-99) , 
9, -0.878107, 1, 0, 0.515362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489784,-99) , 
10, 0.701237, 0, 0, 0.498381,-99) , 
8, -1.85713, 1, 0, 0.499417,-99) , 
NN(
0, 
0, 
-1, 0.44023, 0, -1, 0.478443,-99) , 
4, 0.998095, 0, 0, 0.49833,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0264999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455654,-99) , 
7, -951.286, 1, 0, 0.487881,-99) , 
10, -0.478367, 0, 0, 0.511208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497126,-99) , 
8, -1.28562, 1, 0, 0.499532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475507,-99) , 
7, -948.91, 0, 0, 0.487296,-99) , 
10, 1.39123, 0, 0, 0.495372,-99) , 
9, -2.04395, 1, 0, 0.497331,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0206966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.36534, 1, 1, 0.504568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483964,-99) , 
9, 13.6778, 1, 0, 0.503006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4711,-99) , 
9, -2.53986, 1, 0, 0.498496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455272,-99) , 
10, -1.10365, 0, 0, 0.486928,-99) , 
10, -0.0983186, 0, 0, 0.500738,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0105749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489236,-99) , 
9, 8.55608, 1, 0, 0.500233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478831,-99) , 
5, -0.371375, 1, 0, 0.489103,-99) , 
7, 0.525285, 1, 0, 0.498767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475073,-99) , 
0, 0.489519, 0, 0, 0.498152,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0139282);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496126,-99) , 
5, -0.111436, 0, 0, 0.51424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495243,-99) , 
3, 8.75421, 0, 0, 0.496296,-99) , 
2, -0.214144, 1, 0, 0.497286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473455,-99) , 
4, 0.997619, 0, 0, 0.496273,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0122683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497363,-99) , 
4, 0.999524, 1, 0, 0.500735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485768,-99) , 
3, 9.20815, 1, 0, 0.500096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477334,-99) , 
0, 0.505709, 1, 0, 0.499339,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0206472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493586,-99) , 
7, -949.96, 0, 0, 0.51071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490918,-99) , 
7, -948.91, 1, 0, 0.500209,-99) , 
8, -0.999983, 1, 0, 0.502375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458496,-99) , 
5, 0.257085, 0, 0, 0.4877,-99) , 
4, 0.998571, 0, 0, 0.501311,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0130194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496905,-99) , 
9, -1.54604, 1, 0, 0.499924,-99) , 
10, 10.3987, 0, 0, 0.501086,-99) , 
NN(
0, 
0, 
-1, 0.34941, 0, -1, 0.483392,-99) , 
4, 0.998571, 0, 0, 0.499807,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0215657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480168,-99) , 
9, 1.04184, 0, 0, 0.494922,-99) , 
7, -951.286, 0, 0, 0.509334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478932,-99) , 
9, 13.2974, 1, 0, 0.500564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471384,-99) , 
10, -0.255222, 0, 0, 0.498699,-99) , 
8, -1.00002, 1, 0, 0.500872,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.018211);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46247,-99) , 
0, 0.493328, 0, 0, 0.511422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495599,-99) , 
2, -0.213891, 1, 0, 0.497076,-99) , 
3, 0.999136, 1, 0, 0.499937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477402,-99) , 
3, 9.36329, 1, 0, 0.498984,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0166515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.425594, 1, 1, 0.509562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465078,-99) , 
4, 0.999504, 0, 0, 0.506297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525728,-99) , 
NN(
0, 
0, 
-1, -1.0211, 0, -1, 0.494869,-99) , 
9, 1.70931, 0, 0, 0.496956,-99) , 
5, -0.281062, 1, 0, 0.500389,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0172658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446125,-99) , 
8, -2.04761, 0, 0, 0.490746,-99) , 
7, -949.657, 0, 0, 0.509133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479623,-99) , 
9, 12.0692, 1, 0, 0.49907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474102,-99) , 
10, -0.336626, 0, 0, 0.4977,-99) , 
8, -0.999994, 1, 0, 0.500015,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0174074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468434,-99) , 
3, 1.44982, 0, 0, 0.490482,-99) , 
0, 0.501899, 1, 0, 0.501881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470638,-99) , 
4, 0.999864, 0, 0, 0.502677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417416,-99) , 
4, 0.999524, 0, 0, 0.491636,-99) , 
3, 4.741, 1, 0, 0.499897,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0173218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491827,-99) , 
7, -949.657, 0, 0, 0.507406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492529,-99) , 
5, -0.191333, 1, 0, 0.496575,-99) , 
8, -0.999999, 1, 0, 0.498774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470343,-99) , 
2, -0.35707, 0, 0, 0.498031,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0252852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457555,-99) , 
7, -949.657, 1, 0, 0.489045,-99) , 
10, -0.525278, 0, 0, 0.514049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495457,-99) , 
8, -0.999982, 1, 0, 0.504695,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.4927,-99) , 
7, -949.024, 0, 0, 0.496809,-99) , 
9, -2.14647, 1, 0, 0.498706,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0208203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.39286, 1, 1, 0.517471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468766,-99) , 
10, -0.899934, 0, 0, 0.507286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499942,-99) , 
4, 0.999524, 1, 0, 0.507092,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.492961,-99) , 
7, -949.024, 0, 0, 0.49769,-99) , 
9, -1.25472, 1, 0, 0.500091,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0247133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478009,-99) , 
10, 1.79305, 0, 0, 0.494279,-99) , 
7, -949.96, 0, 0, 0.509819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48548,-99) , 
10, 6.39518, 1, 0, 0.50157,-99) , 
NN(
0, 
0, 
-1, 1.1305, 0, -1, 0.487762,-99) , 
7, 0.525285, 1, 0, 0.499631,-99) , 
8, -1.00002, 1, 0, 0.501692,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0164151);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.430576, 1, 1, 0.518127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491915,-99) , 
10, 0.907455, 0, 0, 0.500246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474757,-99) , 
9, 6.78969, 1, 0, 0.498864,-99) , 
10, 8.65917, 0, 0, 0.500501,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0119232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49521,-99) , 
9, 16.946, 1, 0, 0.514382,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466274,-99) , 
10, -1.21873, 0, 0, 0.501059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465911,-99) , 
9, 7.45368, 1, 0, 0.49976,-99) , 
10, 8.34449, 0, 0, 0.501077,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0166899);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49625,-99) , 
9, -2.42814, 1, 0, 0.499397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468375,-99) , 
10, -1.01456, 0, 0, 0.49795,-99) , 
10, 10.2951, 0, 0, 0.499136,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.00917525);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.29253, 0, 1, 0.525639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499334,-99) , 
9, -2.40002, 1, 0, 0.501167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484299,-99) , 
9, 14.1924, 1, 0, 0.500085,-99) , 
8, -1.85716, 1, 0, 0.50161,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0172552);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.925063, 1, 1, 0.521856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493628,-99) , 
10, 3.97878, 1, 0, 0.503566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468423,-99) , 
10, -0.876906, 0, 0, 0.502142,-99) , 
8, -1.85714, 1, 0, 0.503311,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0123665);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 16.9315, 1, 1, 0.517581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467701,-99) , 
10, -1.20308, 0, 0, 0.501557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466493,-99) , 
9, 7.45368, 1, 0, 0.500166,-99) , 
10, 8.48407, 0, 0, 0.50168,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0191923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47109,-99) , 
8, -1.66668, 0, 0, 0.494777,-99) , 
7, -949.657, 0, 0, 0.508726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49674,-99) , 
2, 0.213969, 0, 0, 0.497977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475686,-99) , 
10, -0.336626, 0, 0, 0.496726,-99) , 
8, -0.999999, 1, 0, 0.499149,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.00748321);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.572077, 1, 1, 0.503075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481106,-99) , 
3, 9.37525, 1, 0, 0.50215,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0180138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496696,-99) , 
9, 17.0341, 1, 0, 0.512375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494957,-99) , 
6, 0.0113342, 0, 0, 0.4984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467593,-99) , 
6, 0.0238019, 1, 0, 0.497041,-99) , 
10, 8.35494, 0, 0, 0.498419,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0144387);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 20.1008, 1, 1, 0.520188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472145,-99) , 
10, -1.10057, 0, 0, 0.502693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469547,-99) , 
9, 7.84101, 1, 0, 0.501447,-99) , 
10, 8.7603, 0, 0, 0.502987,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.010661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85715, 1, 1, 0.503863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458485,-99) , 
10, -0.350392, 0, 0, 0.496193,-99) , 
4, 0.999819, 0, 0, 0.502161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464691,-99) , 
5, 0.443371, 0, 0, 0.482502,-99) , 
4, 0.998095, 0, 0, 0.50113,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0080287);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52991,-99) , 
NN(
0, 
0, 
-1, -0.700072, 0, -1, 0.498175,-99) , 
9, -2.84244, 1, 0, 0.499596,-99) , 
10, 10.7248, 0, 0, 0.500722,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.00934051);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526308,-99) , 
NN(
0, 
0, 
-1, -0.559082, 0, -1, 0.49737,-99) , 
9, -2.78329, 1, 0, 0.498831,-99) , 
10, 10.5493, 0, 0, 0.499965,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0160024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49906,-99) , 
8, -2.29254, 0, 0, 0.51952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495337,-99) , 
10, 2.36515, 1, 0, 0.501857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453346,-99) , 
10, -0.978053, 0, 0, 0.50023,-99) , 
8, -1.85717, 1, 0, 0.501371,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0111006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496354,-99) , 
7, -951.286, 0, 0, 0.511538,-99) , 
NN(
0, 
0, 
-1, -0.255222, 0, -1, 0.498646,-99) , 
8, -0.999995, 1, 0, 0.501289,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.481414,-99) , 
4, 0.998571, 0, 0, 0.499862,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0126211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.52348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474712,-99) , 
10, -1.0567, 0, 0, 0.502236,-99) , 
10, 10.0736, 0, 0, 0.503625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467948,-99) , 
4, 0.99619, 0, 0, 0.502691,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.00940509);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498856,-99) , 
10, 8.03577, 0, 0, 0.500614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480647,-99) , 
9, 13.9024, 1, 0, 0.499305,-99) , 
8, -2.14287, 1, 0, 0.500265,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0101167);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517076,-99) , 
NN(
NN(
0, 
0, 
-1, -2.5192, 1, 1, 0.503427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477917,-99) , 
10, -1.04004, 0, 0, 0.502262,-99) , 
10, 10.3164, 0, 0, 0.503165,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0214409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499365,-99) , 
9, 17.8351, 1, 0, 0.516803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477849,-99) , 
10, -0.945565, 0, 0, 0.521367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484796,-99) , 
10, 1.04424, 0, 0, 0.49694,-99) , 
9, -2.42599, 1, 0, 0.499022,-99) , 
10, 8.90044, 0, 0, 0.500466,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0156959);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492821,-99) , 
7, -948.705, 0, 0, 0.496975,-99) , 
9, -2.81909, 1, 0, 0.498301,-99) , 
10, 10.5412, 0, 0, 0.499546,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0171679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496039,-99) , 
9, 17.8068, 1, 0, 0.514202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496125,-99) , 
9, -1.40002, 1, 0, 0.500879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470896,-99) , 
6, 0.023809, 1, 0, 0.499519,-99) , 
10, 8.96386, 0, 0, 0.500681,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0159065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496362,-99) , 
9, 15.552, 1, 0, 0.514009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474851,-99) , 
10, -0.959888, 0, 0, 0.514352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49694,-99) , 
5, 0.622989, 0, 0, 0.497743,-99) , 
9, -2.44111, 1, 0, 0.499142,-99) , 
10, 8.52445, 0, 0, 0.500423,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0197152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480838,-99) , 
8, -1.38097, 0, 0, 0.499511,-99) , 
7, -951.236, 0, 0, 0.511931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48382,-99) , 
3, 9.36329, 1, 0, 0.502339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478222,-99) , 
10, -0.235998, 0, 0, 0.500757,-99) , 
8, -1.00002, 1, 0, 0.503014,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0111799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485199,-99) , 
10, 3.5678, 1, 0, 0.512626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498426,-99) , 
9, 5.55555, 0, 0, 0.499748,-99) , 
1, 0.0102011, 0, 0, 0.500904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451326,-99) , 
10, 4.12778, 0, 0, 0.480987,-99) , 
6, 0.023804, 1, 0, 0.499707,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0114859);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.88571, 1, 1, 0.515775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487033,-99) , 
9, 10.5517, 1, 0, 0.501139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470635,-99) , 
10, -0.767448, 0, 0, 0.499891,-99) , 
8, -1.57141, 1, 0, 0.501362,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.00813413);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.91746, 1, 1, 0.521836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499221,-99) , 
2, 0.21439, 0, 0, 0.50042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468515,-99) , 
10, -0.946618, 0, 0, 0.499269,-99) , 
8, -1.85712, 1, 0, 0.500608,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0145111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480311,-99) , 
10, 1.3942, 0, 0, 0.510612,-99) , 
5, -0.104155, 0, 0, 0.519804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487882,-99) , 
9, 12.849, 1, 0, 0.501473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472352,-99) , 
10, -0.764823, 0, 0, 0.500297,-99) , 
8, -1.57142, 1, 0, 0.502122,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0112675);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.29249, 0, 1, 0.520954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497672,-99) , 
4, 0.999048, 1, 0, 0.499771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480914,-99) , 
3, 8.93457, 1, 0, 0.498861,-99) , 
8, -1.85711, 1, 0, 0.500165,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.00885186);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.88571, 1, 1, 0.520483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485467,-99) , 
9, 13.1217, 1, 0, 0.500393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477966,-99) , 
10, -0.828683, 0, 0, 0.499407,-99) , 
8, -1.85714, 1, 0, 0.500655,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0117272);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498087, 1, 1, 0.519915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498285,-99) , 
6, 0.0113132, 0, 0, 0.500723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471302,-99) , 
6, 0.0237579, 1, 0, 0.499315,-99) , 
10, 10.008, 0, 0, 0.500638,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0161854);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519369,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497693,-99) , 
10, 0.123864, 0, 0, 0.511176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479341,-99) , 
10, 0.928236, 0, 0, 0.498209,-99) , 
9, -1.54604, 1, 0, 0.500951,-99) , 
10, 10.3987, 0, 0, 0.502052,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0164267);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49908,-99) , 
10, 0.17817, 0, 0, 0.511356,-99) , 
NN(
0, 
0, 
-1, 0.928263, 0, -1, 0.494239,-99) , 
9, -1.54604, 1, 0, 0.497848,-99) , 
10, 10.3987, 0, 0, 0.499363,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0144425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.96, 0, 1, 0.519582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466385,-99) , 
4, 0.999524, 0, 0, 0.512071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516648,-99) , 
NN(
0, 
0, 
-1, 5.56236, 1, -1, 0.497428,-99) , 
10, 10.1325, 0, 0, 0.498806,-99) , 
8, -1.00002, 1, 0, 0.501491,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0134136);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.291905, 1, 1, 0.524377,-99) , 
NN(
NN(
0, 
0, 
-1, -2.58285, 1, 1, 0.503538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468026,-99) , 
10, 13.2701, 0, 0, 0.48491,-99) , 
9, 11.9197, 1, 0, 0.502023,-99) , 
8, -1.57142, 1, 0, 0.504128,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0103766);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.999974, 1, 1, 0.504497,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.485841,-99) , 
4, 0.998571, 0, 0, 0.503163,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0283842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475315,-99) , 
5, -0.013152, 0, 0, 0.491483,-99) , 
7, -951.286, 0, 0, 0.510442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481664,-99) , 
8, 1.36729, 1, 0, 0.502739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486293,-99) , 
4, 0.999524, 1, 0, 0.492222,-99) , 
7, -948.91, 1, 0, 0.498806,-99) , 
8, -1.28574, 1, 0, 0.500436,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0123783);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.783046, 1, 1, 0.515917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496623,-99) , 
10, 10.9535, 0, 0, 0.497696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474161,-99) , 
10, -0.632598, 0, 0, 0.496458,-99) , 
8, -1.57145, 1, 0, 0.49828,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.00744421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.291585, 0, 1, 0.515702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482351,-99) , 
9, 14.241, 1, 0, 0.499719,-99) , 
8, -1.85714, 1, 0, 0.500667,-99) , 
NN(
0, 
0, 
-1, 0.261974, 0, -1, 0.486156,-99) , 
4, 0.998572, 0, 0, 0.499612,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0249989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.74917, 1, 1, 0.542266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480172,-99) , 
7, -948.705, 1, 0, 0.499917,-99) , 
5, 0.0349161, 1, 0, 0.508833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49264,-99) , 
9, 1.2488, 1, 0, 0.506907,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.493735,-99) , 
7, -951.223, 0, 0, 0.498125,-99) , 
9, -1.20333, 1, 0, 0.500883,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.00781876);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.503021,-99) , 
NN(
0, 
0, 
-1, 0.259527, 0, -1, 0.484543,-99) , 
4, 0.998571, 0, 0, 0.501702,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.020599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467016,-99) , 
8, -1.76192, 0, 0, 0.498464,-99) , 
7, -949.96, 0, 0, 0.510745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492753,-99) , 
3, 4.741, 1, 0, 0.501496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474746,-99) , 
10, -0.222929, 0, 0, 0.499686,-99) , 
8, -1.00003, 1, 0, 0.501918,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.00660414);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.29252, 0, 1, 0.522193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47365,-99) , 
1, -0.0254463, 0, 0, 0.49978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470781,-99) , 
1, 0.0243659, 1, 0, 0.498934,-99) , 
8, -1.85714, 1, 0, 0.500318,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0211167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.668964, 1, 1, 0.531974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49657,-99) , 
8, 1.28562, 0, 0, 0.499756,-99) , 
9, -0.124483, 1, 0, 0.504096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490368,-99) , 
9, -2.72135, 1, 0, 0.49287,-99) , 
9, 1.44778, 0, 0, 0.495085,-99) , 
5, -0.1914, 1, 0, 0.49908,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0112891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499145,-99) , 
9, -0.717637, 1, 0, 0.514027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484909,-99) , 
9, 13.1294, 1, 0, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467087,-99) , 
10, -0.792514, 0, 0, 0.499919,-99) , 
8, -1.57143, 1, 0, 0.501242,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0162838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474526,-99) , 
10, 1.661, 0, 0, 0.491095,-99) , 
7, -949.657, 0, 0, 0.510756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475453,-99) , 
6, 0.0238019, 1, 0, 0.499648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482312,-99) , 
9, 14.5848, 1, 0, 0.498523,-99) , 
8, -1.28574, 1, 0, 0.500238,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0319659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491518,-99) , 
10, -0.517889, 0, 0, 0.513377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442507,-99) , 
10, 0.449249, 0, 0, 0.479585,-99) , 
8, -0.0832851, 1, 0, 0.503313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496735,-99) , 
8, -1.28553, 1, 0, 0.49983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4769,-99) , 
7, -949.024, 0, 0, 0.489132,-99) , 
10, 1.99749, 0, 0, 0.495722,-99) , 
9, -1.25472, 1, 0, 0.497615,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0186587);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.4282, 1, 1, 0.518561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490922,-99) , 
10, -0.514848, 0, 0, 0.510766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483667,-99) , 
10, 1.24096, 0, 0, 0.495174,-99) , 
9, -2.15384, 1, 0, 0.497023,-99) , 
10, 8.92477, 0, 0, 0.498752,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0100796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499295,-99) , 
8, -1.85716, 1, 0, 0.501392,-99) , 
NN(
0, 
0, 
-1, -0.189531, 0, -1, 0.486187,-99) , 
4, 0.99966, 0, 0, 0.499465,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.483163,-99) , 
4, 0.998572, 0, 0, 0.498291,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0159764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498816,-99) , 
10, 0.159675, 0, 0, 0.510325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480574,-99) , 
10, 0.977159, 0, 0, 0.498649,-99) , 
9, -1.54604, 1, 0, 0.501077,-99) , 
10, 10.7022, 0, 0, 0.502218,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0171165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48108,-99) , 
5, -0.445526, 1, 0, 0.502641,-99) , 
5, -0.104703, 0, 0, 0.514048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490532,-99) , 
7, -43.3991, 1, 0, 0.498968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471891,-99) , 
8, 2.12914, 1, 0, 0.498212,-99) , 
8, -1.57146, 1, 0, 0.499684,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0155145);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521406,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497893,-99) , 
10, 0.200822, 0, 0, 0.509845,-99) , 
NN(
0, 
0, 
-1, 10.1555, 1, -1, 0.494758,-99) , 
9, -1.53883, 1, 0, 0.497942,-99) , 
10, 10.7611, 0, 0, 0.499254,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0247265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492173,-99) , 
5, 0.0674855, 0, 0, 0.50277,-99) , 
7, -951.265, 0, 0, 0.511003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494303,-99) , 
10, 0.994191, 0, 0, 0.505182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486301,-99) , 
8, 0.333337, 0, 0, 0.495466,-99) , 
9, -0.741868, 1, 0, 0.498421,-99) , 
8, -0.999995, 1, 0, 0.500969,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0314014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.775502, 1, 1, 0.533255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489878,-99) , 
9, -0.653081, 1, 0, 0.503318,-99) , 
10, 6.87099, 0, 0, 0.506284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494736,-99) , 
7, -1.58995, 0, 0, 0.502544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439175,-99) , 
10, 0.987319, 0, 0, 0.495061,-99) , 
8, 0.428575, 1, 0, 0.502539,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0107428);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.710033, 1, 1, 0.51629,-99) , 
NN(
NN(
0, 
0, 
-1, 7.72544, 0, 1, 0.503672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487441,-99) , 
9, 14.13, 1, 0, 0.502606,-99) , 
8, -1.57145, 1, 0, 0.503874,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0234343);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455329,-99) , 
8, 1.28527, 1, 0, 0.504436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491252,-99) , 
8, 1.53061, 0, 0, 0.49543,-99) , 
9, 0.141193, 1, 0, 0.499943,-99) , 
8, -2.14286, 1, 0, 0.500889,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0158762);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.43328, 1, 1, 0.515717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491,-99) , 
10, -0.374218, 0, 0, 0.509821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481137,-99) , 
10, 0.732316, 0, 0, 0.497237,-99) , 
9, -1.98912, 1, 0, 0.499036,-99) , 
10, 8.92477, 0, 0, 0.500361,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.020238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499891,-99) , 
9, 17.8097, 1, 0, 0.516291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482467,-99) , 
10, -0.872977, 0, 0, 0.516313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490579,-99) , 
7, -1.69972, 0, 0, 0.494208,-99) , 
9, -2.34409, 1, 0, 0.496284,-99) , 
10, 8.96386, 0, 0, 0.497873,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0175335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464505,-99) , 
9, -2.92622, 1, 0, 0.49699,-99) , 
10, -0.67197, 0, 0, 0.518523,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57134, 1, 1, 0.502231,-99) , 
NN(
0, 
0, 
-1, 0.583796, 1, -1, 0.488397,-99) , 
10, 1.2934, 0, 0, 0.49767,-99) , 
9, -2.18242, 1, 0, 0.499873,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0208593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494243,-99) , 
9, -0.849714, 1, 0, 0.500204,-99) , 
10, 8.63483, 0, 0, 0.501992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480881,-99) , 
10, 5.84787, 1, 0, 0.499923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437449,-99) , 
10, 1.30371, 0, 0, 0.490957,-99) , 
8, 0.714289, 1, 0, 0.49928,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0137374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49837,-99) , 
9, -1.80757, 1, 0, 0.508666,-99) , 
5, -0.464803, 1, 0, 0.514775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489703,-99) , 
7, -43.3991, 1, 0, 0.49756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470546,-99) , 
8, 2.12926, 1, 0, 0.496805,-99) , 
8, -1.57143, 1, 0, 0.498475,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0226712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488299,-99) , 
9, -1.33738, 1, 0, 0.509685,-99) , 
5, -0.46179, 1, 0, 0.518012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453682,-99) , 
8, 1.91157, 1, 0, 0.503349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488316,-99) , 
8, 1.25783, 0, 0, 0.493125,-99) , 
7, -43.3991, 1, 0, 0.499593,-99) , 
8, -1.57143, 1, 0, 0.501312,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.019688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.471786, 1, 1, 0.524227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49155,-99) , 
10, -0.802508, 0, 0, 0.515297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482655,-99) , 
9, 10.6059, 1, 0, 0.500185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488267,-99) , 
9, -2.70308, 1, 0, 0.491508,-99) , 
5, -0.00919695, 1, 0, 0.496481,-99) , 
8, -1.57144, 1, 0, 0.498223,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0198649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487635,-99) , 
5, -0.607232, 1, 0, 0.500429,-99) , 
5, -0.365609, 0, 0, 0.506163,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494488,-99) , 
9, 1.34755, 0, 0, 0.496604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449566,-99) , 
10, 3.46451, 1, 0, 0.494718,-99) , 
9, 2.55463, 0, 0, 0.497526,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0146597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496821,-99) , 
8, 1.28439, 0, 0, 0.500513,-99) , 
8, -1.00032, 1, 0, 0.504469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454555,-99) , 
8, -2.1837, 0, 0, 0.499505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450693,-99) , 
9, 1.12115, 0, 0, 0.476105,-99) , 
8, 1.28558, 1, 0, 0.496763,-99) , 
7, -1.58995, 0, 0, 0.499327,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0100559);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471413,-99) , 
10, -0.81219, 0, 0, 0.499708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468251,-99) , 
10, 12.7888, 0, 0, 0.484095,-99) , 
9, 11.6, 1, 0, 0.498449,-99) , 
8, -2.14285, 1, 0, 0.499641,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.015393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483587,-99) , 
9, -1.11312, 1, 0, 0.511854,-99) , 
5, -0.462575, 1, 0, 0.518861,-99) , 
NN(
0, 
0, 
-1, 7.4838, 1, -1, 0.49442,-99) , 
8, -1.57145, 1, 0, 0.496724,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.011555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496868,-99) , 
4, 0.999048, 1, 0, 0.498775,-99) , 
3, 9.22081, 0, 0, 0.499631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468825,-99) , 
2, 0.357109, 1, 0, 0.498807,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0266017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490878,-99) , 
7, 0.19492, 1, 0, 0.50163,-99) , 
8, -1.28447, 1, 0, 0.507381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494205,-99) , 
10, 0.663321, 0, 0, 0.50507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489197,-99) , 
6, 0.0237837, 0, 0, 0.491079,-99) , 
9, -0.960944, 1, 0, 0.494951,-99) , 
7, -2.17862, 0, 0, 0.499238,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0235364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.198423, 1, 1, 0.51165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491362,-99) , 
10, 7.07308, 0, 0, 0.498398,-99) , 
9, -0.0285409, 1, 0, 0.505574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495162,-99) , 
10, 2.50644, 1, 0, 0.500656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450886,-99) , 
10, 0.98183, 0, 0, 0.494842,-99) , 
8, 0.428575, 1, 0, 0.501999,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0136681);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.279727, 0, 1, 0.525359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471104,-99) , 
6, 0.0238036, 1, 0, 0.501607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461366,-99) , 
10, 11.5609, 0, 0, 0.484442,-99) , 
9, 10.1629, 1, 0, 0.499992,-99) , 
8, -1.85715, 1, 0, 0.501481,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.010039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498046,-99) , 
2, -0.21866, 1, 0, 0.499098,-99) , 
3, 9.31837, 0, 0, 0.500195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452283,-99) , 
8, 0.428529, 1, 0, 0.486544,-99) , 
4, 0.998571, 0, 0, 0.499208,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0132832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.644917, 1, 1, 0.51782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488153,-99) , 
5, -0.818299, 1, 0, 0.497801,-99) , 
9, 12.3513, 1, 0, 0.510638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498566,-99) , 
3, 0.578471, 1, 0, 0.500574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469881,-99) , 
3, 9.33809, 1, 0, 0.499276,-99) , 
9, 3.59321, 0, 0, 0.501604,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0201573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495858,-99) , 
9, 0.172874, 1, 0, 0.50352,-99) , 
10, 8.67791, 0, 0, 0.504894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485602,-99) , 
10, 6.02311, 1, 0, 0.50342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448259,-99) , 
10, 1.33936, 0, 0, 0.495036,-99) , 
8, 0.714288, 1, 0, 0.502469,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0218025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499364,-99) , 
0, 0.500948, 0, 0, 0.504365,-99) , 
10, 3.89101, 1, 0, 0.510823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490329,-99) , 
9, -0.123734, 1, 0, 0.502743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450471,-99) , 
10, 1.92639, 0, 0, 0.481042,-99) , 
8, 1.00001, 1, 0, 0.499507,-99) , 
9, 1.73968, 0, 0, 0.502878,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0203517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487836,-99) , 
9, 14.5332, 1, 0, 0.5072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477489,-99) , 
4, 0.999049, 0, 0, 0.505791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487773,-99) , 
8, 0.428685, 1, 0, 0.498758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473093,-99) , 
0, 0.492376, 0, 0, 0.496137,-99) , 
5, 0.0777052, 1, 0, 0.50241,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0196142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49278,-99) , 
9, 15.5757, 1, 0, 0.51044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47189,-99) , 
4, 0.999625, 0, 0, 0.507053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534536,-99) , 
NN(
0, 
0, 
-1, -0.773272, 0, -1, 0.493546,-99) , 
9, -2.98622, 1, 0, 0.495555,-99) , 
5, -0.369439, 1, 0, 0.498982,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.00983984);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49865,-99) , 
10, 0.0836802, 0, 0, 0.516295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464223,-99) , 
10, -0.898395, 0, 0, 0.50057,-99) , 
8, -1.85714, 1, 0, 0.501489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468345,-99) , 
10, 1.90305, 0, 0, 0.484872,-99) , 
0, 0.504757, 1, 0, 0.500516,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.00949505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492041,-99) , 
10, 0.695392, 0, 0, 0.499111,-99) , 
8, -2.14285, 1, 0, 0.500047,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.485022,-99) , 
4, 0.998571, 0, 0, 0.498972,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0145338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4749,-99) , 
5, -0.223174, 0, 0, 0.499758,-99) , 
10, 1.37494, 0, 0, 0.511455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494759,-99) , 
5, -0.10199, 1, 0, 0.499068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470484,-99) , 
8, -1.35376, 0, 0, 0.497975,-99) , 
8, -1.57145, 1, 0, 0.499227,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.00871576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497283,-99) , 
0, 0.49809, 1, 0, 0.512712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487197,-99) , 
9, 7.41596, 1, 0, 0.499166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463543,-99) , 
10, -0.978053, 0, 0, 0.497987,-99) , 
8, -1.85715, 1, 0, 0.498841,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0187174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.243059, 0, 1, 0.503826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465605,-99) , 
9, -2.99534, 1, 0, 0.485672,-99) , 
10, -0.368908, 0, 0, 0.500965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478087,-99) , 
10, 6.94228, 1, 0, 0.498176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450453,-99) , 
10, 0.974971, 0, 0, 0.492605,-99) , 
8, 0.428574, 1, 0, 0.498178,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.00811996);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522167,-99) , 
NN(
0, 
0, 
-1, -1.08708, 0, -1, 0.496587,-99) , 
8, -2.14287, 1, 0, 0.49747,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0148004);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495337,-99) , 
10, 0.135357, 0, 0, 0.508088,-99) , 
NN(
0, 
0, 
-1, 0.911065, 0, -1, 0.495801,-99) , 
9, -1.54604, 1, 0, 0.498376,-99) , 
10, 10.7022, 0, 0, 0.499652,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0119118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49681,-99) , 
3, 4.63954, 1, 0, 0.515823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49717,-99) , 
8, -1.57145, 1, 0, 0.498825,-99) , 
NN(
0, 
0, 
-1, 0.922577, 0, -1, 0.477332,-99) , 
4, 0.998572, 0, 0, 0.497604,-99) , 
2, 0.21435, 0, 0, 0.498806,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0116525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.503607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469803,-99) , 
10, 1.12136, 0, 0, 0.489334,-99) , 
4, 0.99966, 0, 0, 0.501775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463812,-99) , 
5, 0.254999, 0, 0, 0.489463,-99) , 
4, 0.998571, 0, 0, 0.500893,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0117516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481811,-99) , 
9, -1.14179, 1, 0, 0.505982,-99) , 
5, -0.460163, 1, 0, 0.512211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499001,-99) , 
8, 0.387785, 0, 0, 0.509871,-99) , 
NN(
0, 
0, 
-1, 0.0238036, 1, -1, 0.496424,-99) , 
10, 9.36388, 0, 0, 0.497472,-99) , 
8, -1.57145, 1, 0, 0.498863,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.015243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496806,-99) , 
10, 9.01577, 0, 0, 0.503694,-99) , 
5, -0.408335, 0, 0, 0.509132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473942,-99) , 
10, -0.965061, 0, 0, 0.500604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44816,-99) , 
10, 3.4396, 1, 0, 0.498296,-99) , 
9, 2.59654, 0, 0, 0.500929,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0135473);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495937,-99) , 
0, 0.494281, 0, 0, 0.51851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496465,-99) , 
8, -2.14286, 1, 0, 0.49773,-99) , 
4, 0.999048, 1, 0, 0.499874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480523,-99) , 
3, 9.37264, 1, 0, 0.499081,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0115102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497598,-99) , 
5, -0.372303, 1, 0, 0.502957,-99) , 
8, -0.99989, 1, 0, 0.506957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499219,-99) , 
6, 0.0237705, 0, 0, 0.500562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458135,-99) , 
8, -2.14285, 0, 0, 0.498766,-99) , 
7, -1.58995, 0, 0, 0.501476,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0060788);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.21404, 0, 1, 0.502566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481987,-99) , 
4, 0.996667, 0, 0, 0.501936,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0108227);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.38671, 0, 1, 0.504318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476521,-99) , 
7, -951.286, 0, 0, 0.491384,-99) , 
4, 0.998571, 0, 0, 0.503386,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0149098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481122,-99) , 
5, -0.543561, 1, 0, 0.500479,-99) , 
5, -0.436154, 0, 0, 0.506928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498134,-99) , 
9, -2.46592, 1, 0, 0.50068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463062,-99) , 
10, 3.27021, 1, 0, 0.498793,-99) , 
9, 2.37315, 0, 0, 0.500866,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.00888404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0117208, 0, 1, 0.503283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474971,-99) , 
1, 0.0259557, 1, 0, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477382,-99) , 
1, -0.0238672, 0, 0, 0.501752,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0119874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496628,-99) , 
8, 1.36697, 0, 0, 0.499852,-99) , 
8, -1.28494, 1, 0, 0.504418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476953,-99) , 
8, -1.65296, 0, 0, 0.499339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452775,-99) , 
8, -2.14285, 0, 0, 0.497366,-99) , 
7, -949.024, 0, 0, 0.499863,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.007137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495866,-99) , 
4, 0.999932, 0, 0, 0.513058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480724,-99) , 
9, 14.427, 1, 0, 0.498703,-99) , 
8, -1.57142, 1, 0, 0.500053,-99) , 
NN(
0, 
0, 
-1, 0.259861, 0, -1, 0.485493,-99) , 
4, 0.998571, 0, 0, 0.499004,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0147906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492968,-99) , 
5, 0.0781268, 0, 0, 0.499858,-99) , 
8, -1.28489, 1, 0, 0.504179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470411,-99) , 
8, 1.77552, 1, 0, 0.500145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461932,-99) , 
8, -2.14285, 0, 0, 0.498499,-99) , 
7, -948.91, 0, 0, 0.50051,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0149391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492293,-99) , 
3, 2.29811, 1, 0, 0.518329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495799,-99) , 
8, -2.14285, 1, 0, 0.496728,-99) , 
4, 0.999048, 1, 0, 0.498965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477973,-99) , 
3, 9.23016, 1, 0, 0.498052,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.021549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494729,-99) , 
9, -2.44056, 1, 0, 0.497338,-99) , 
9, 1.5794, 0, 0, 0.499613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47956,-99) , 
10, 8.95847, 0, 0, 0.487054,-99) , 
8, 1.57167, 0, 0, 0.491002,-99) , 
10, 3.30218, 1, 0, 0.497175,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0119964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.58251, 1, 1, 0.503692,-99) , 
NN(
0, 
0, 
-1, -1.12247, 0, -1, 0.481923,-99) , 
10, -0.513127, 0, 0, 0.501642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478192,-99) , 
9, 15.0754, 1, 0, 0.500312,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0137464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.76417, 1, 1, 0.516427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485446,-99) , 
0, 0.499994, 0, 0, 0.494527,-99) , 
3, 4.82711, 1, 0, 0.508181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494069,-99) , 
3, 5.04296, 1, 0, 0.508446,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.49603,-99) , 
2, 0.15313, 0, 0, 0.497512,-99) , 
2, -0.0713494, 1, 0, 0.499434,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0139567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714503, 1, 1, 0.512767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482864,-99) , 
10, -0.295603, 0, 0, 0.508623,-99) , 
NN(
0, 
0, 
-1, 1.85705, 1, -1, 0.496261,-99) , 
7, -1.69972, 0, 0, 0.500418,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0147773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.34934, 1, 1, 0.522806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494651,-99) , 
8, -0.14216, 1, 0, 0.50294,-99) , 
5, -0.371276, 1, 0, 0.508588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479075,-99) , 
9, 14.0409, 1, 0, 0.499787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455881,-99) , 
8, -2.14287, 0, 0, 0.49797,-99) , 
7, -1.58995, 0, 0, 0.501484,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0213314);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472007,-99) , 
10, -1.02433, 0, 0, 0.503031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484036,-99) , 
10, 7.62694, 0, 0, 0.494078,-99) , 
10, 3.3433, 1, 0, 0.500809,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489124,-99) , 
7, -951.286, 0, 0, 0.499634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449462,-99) , 
10, 1.64643, 0, 0, 0.490839,-99) , 
8, 1, 1, 0, 0.499097,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0151528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.521993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482033,-99) , 
9, 11.8576, 1, 0, 0.499545,-99) , 
8, -1.57145, 1, 0, 0.501675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468191,-99) , 
7, -951.286, 0, 0, 0.483607,-99) , 
5, 0.527387, 0, 0, 0.49179,-99) , 
4, 0.999524, 0, 0, 0.50011,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0172495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48352,-99) , 
4, 0.999864, 0, 0, 0.506608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492925,-99) , 
2, -0.0145517, 1, 0, 0.49609,-99) , 
3, 4.46078, 0, 0, 0.498392,-99) , 
NN(
0, 
0, 
-1, 0.428543, 1, -1, 0.480937,-99) , 
4, 0.998571, 0, 0, 0.497144,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0143969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498758,-99) , 
8, -1.28573, 1, 0, 0.499974,-99) , 
5, 0.617143, 0, 0, 0.500741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466264,-99) , 
7, -950.041, 1, 0, 0.507034,-99) , 
NN(
0, 
0, 
-1, -1.9667, 0, -1, 0.476061,-99) , 
9, -2.4817, 1, 0, 0.490703,-99) , 
10, -0.0224326, 0, 0, 0.499205,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0205586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.713922, 1, 1, 0.511778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46914,-99) , 
10, -0.491079, 0, 0, 0.507013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494834,-99) , 
9, -1.45868, 1, 0, 0.498073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441669,-99) , 
8, -2.14286, 0, 0, 0.495794,-99) , 
7, -1.26137, 0, 0, 0.499355,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0085117);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518507,-99) , 
NN(
NN(
0, 
0, 
-1, 4.4458, 1, 1, 0.509794,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.497779,-99) , 
2, 0.0715446, 0, 0, 0.499953,-99) , 
8, 1.85714, 0, 0, 0.500779,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.00923411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49966,-99) , 
9, -2.4165, 1, 0, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470789,-99) , 
10, -1.01455, 0, 0, 0.500438,-99) , 
10, 10.2951, 0, 0, 0.501438,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0120239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0141196, 0, 1, 0.52214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496917,-99) , 
3, 1.87957, 1, 0, 0.501252,-99) , 
2, -0.214492, 1, 0, 0.502451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48364,-99) , 
3, 9.36329, 1, 0, 0.501672,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.012882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494563,-99) , 
4, 0.999819, 0, 0, 0.509456,-99) , 
NN(
0, 
0, 
-1, 1.57143, 0, 1, 0.501829,-99) , 
0, 0.497138, 1, 0, 0.504914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471132,-99) , 
5, 0.440744, 0, 0, 0.486286,-99) , 
4, 0.998095, 0, 0, 0.503952,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.00650332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477441,-99) , 
6, 0.023809, 1, 0, 0.499616,-99) , 
10, 7.73572, 0, 0, 0.500747,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.487901,-99) , 
9, 13.6022, 1, 0, 0.499897,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0103135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497431,-99) , 
5, 0.165705, 0, 0, 0.499942,-99) , 
NN(
0, 
0, 
-1, 1.21647, 0, -1, 0.491914,-99) , 
8, 0.70062, 1, 0, 0.498227,-99) , 
8, 1.85707, 0, 0, 0.499026,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.020123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49112,-99) , 
6, 0.00680061, 1, 0, 0.50458,-99) , 
6, 0.0238036, 0, 0, 0.506075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46316,-99) , 
10, -1.23221, 0, 0, 0.499094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469045,-99) , 
8, 0.792363, 1, 0, 0.496041,-99) , 
10, 1.6551, 0, 0, 0.501324,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.00796001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214009, 0, 1, 0.502446,-99) , 
NN(
0, 
0, 
-1, -0.372522, 0, -1, 0.487088,-99) , 
3, 5.85115, 1, 0, 0.500979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483714,-99) , 
3, 9.37264, 1, 0, 0.50026,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0153212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491481,-99) , 
8, -0.265333, 0, 0, 0.499745,-99) , 
8, -1.57144, 1, 0, 0.50079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474592,-99) , 
10, -1.08183, 0, 0, 0.49724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452622,-99) , 
8, -0.220638, 1, 0, 0.489613,-99) , 
10, 0.111659, 0, 0, 0.498841,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0114337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493561,-99) , 
3, 4.1793, 1, 0, 0.506947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496394,-99) , 
2, 0.135598, 0, 0, 0.497834,-99) , 
2, -0.0918027, 1, 0, 0.498996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474187,-99) , 
2, -0.357105, 0, 0, 0.498348,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0196194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.309505, 1, 1, 0.508529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494635,-99) , 
8, 1.57145, 0, 0, 0.498721,-99) , 
10, 3.23768, 1, 0, 0.50308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48907,-99) , 
10, 0.406273, 0, 0, 0.497472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463752,-99) , 
8, 0.818148, 1, 0, 0.494142,-99) , 
10, 1.69328, 0, 0, 0.498789,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0158694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496028,-99) , 
10, 10.829, 0, 0, 0.50275,-99) , 
10, 5.34741, 1, 0, 0.508439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496884,-99) , 
9, 1.2802, 0, 0, 0.499514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473706,-99) , 
10, 3.53562, 1, 0, 0.497612,-99) , 
9, 3.58561, 0, 0, 0.499824,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0154174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.637763, 1, 1, 0.506183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473847,-99) , 
10, 12.9418, 0, 0, 0.489047,-99) , 
9, 12.8179, 1, 0, 0.503743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47373,-99) , 
10, -0.945874, 0, 0, 0.499906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443908,-99) , 
8, 1.13571, 1, 0, 0.496818,-99) , 
10, 1.8061, 0, 0, 0.500271,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.010698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.33764, 0, 1, 0.502781,-99) , 
NN(
0, 
0, 
-1, -0.305927, 0, -1, 0.486539,-99) , 
4, 0.999683, 0, 0, 0.5,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470777,-99) , 
4, 0.996667, 0, 0, 0.499123,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0147631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496422,-99) , 
10, -0.315051, 0, 0, 0.510468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496517,-99) , 
5, 0.531166, 0, 0, 0.498044,-99) , 
9, -1.86095, 1, 0, 0.499927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481865,-99) , 
10, 3.52964, 0, 0, 0.487806,-99) , 
2, 0.0703811, 0, 0, 0.492488,-99) , 
0, 0.5019, 1, 0, 0.498584,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.00910542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.33685, 0, 1, 0.517935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497735,-99) , 
4, 0.999524, 1, 0, 0.499184,-99) , 
2, 0.214408, 0, 0, 0.500278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481588,-99) , 
3, 9.37599, 1, 0, 0.499514,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00966062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482779,-99) , 
4, 0.999274, 0, 0, 0.500665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469959,-99) , 
4, 0.998095, 0, 0, 0.499398,-99) , 
5, 0.621209, 0, 0, 0.500293,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.00752691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499756,-99) , 
5, -0.281276, 0, 0, 0.517065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486998,-99) , 
9, 11.6202, 1, 0, 0.499471,-99) , 
8, -1.85713, 1, 0, 0.500519,-99) , 
NN(
0, 
0, 
-1, 0.261289, 0, -1, 0.481744,-99) , 
4, 0.998571, 0, 0, 0.499185,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0149573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486694,-99) , 
9, 12.5096, 1, 0, 0.507835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496463,-99) , 
9, 2.74209, 0, 0, 0.497711,-99) , 
9, 3.67237, 0, 0, 0.499635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471297,-99) , 
1, 0.0242247, 1, 0, 0.498821,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.00779352);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49971,-99) , 
9, -2.3363, 1, 0, 0.501354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478194,-99) , 
9, 8.90188, 1, 0, 0.500173,-99) , 
10, 10.7248, 0, 0, 0.501328,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0090862);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499749,-99) , 
10, 4.93387, 1, 0, 0.506658,-99) , 
NN(
0, 
0, 
-1, 3.52995, 1, -1, 0.497059,-99) , 
9, 2.65224, 0, 0, 0.499497,-99) , 
5, 0.616686, 0, 0, 0.500284,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.010078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498182,-99) , 
10, 3.57208, 1, 0, 0.503533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485433,-99) , 
2, -0.35699, 0, 0, 0.503064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482994,-99) , 
8, 2.14279, 1, 0, 0.502559,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0111915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 15.822, 1, 1, 0.514026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498807,-99) , 
6, 0.00793383, 0, 0, 0.502379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480939,-99) , 
6, 0.0238019, 1, 0, 0.501404,-99) , 
10, 8.65917, 0, 0, 0.502456,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0151414);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.29252, 0, 1, 0.516295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497666,-99) , 
8, 0.224497, 0, 0, 0.50437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451321,-99) , 
8, 0.253958, 1, 0, 0.493283,-99) , 
10, 0.777123, 0, 0, 0.50132,-99) , 
8, -1.85714, 1, 0, 0.502199,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0174522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491892,-99) , 
5, -0.563892, 1, 0, 0.506479,-99) , 
5, -0.38945, 0, 0, 0.511715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480255,-99) , 
10, -0.597353, 0, 0, 0.500471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450785,-99) , 
10, 3.50699, 1, 0, 0.498343,-99) , 
9, 2.73091, 0, 0, 0.501496,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0110599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492094,-99) , 
3, 4.71854, 1, 0, 0.500217,-99) , 
8, -1.85714, 1, 0, 0.501431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483859,-99) , 
4, 0.999977, 1, 0, 0.493968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470028,-99) , 
4, 0.999524, 0, 0, 0.489232,-99) , 
0, 0.5019, 1, 0, 0.499228,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.013782);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 17.707, 1, 1, 0.515875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496769,-99) , 
9, 3.03427, 0, 0, 0.499589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476889,-99) , 
9, 7.47574, 1, 0, 0.498583,-99) , 
10, 8.79928, 0, 0, 0.499986,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0103921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483128,-99) , 
4, 0.998413, 0, 0, 0.501661,-99) , 
4, 0.996667, 1, 0, 0.502273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509353,-99) , 
NN(
0, 
0, 
-1, 1.69388, 1, -1, 0.471741,-99) , 
9, 1.16953, 0, 0, 0.489586,-99) , 
8, 1.28571, 1, 0, 0.500816,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0173933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491302,-99) , 
10, 1.26249, 0, 0, 0.499578,-99) , 
9, -2.83437, 1, 0, 0.50102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469223,-99) , 
5, -0.799387, 1, 0, 0.487932,-99) , 
9, 10.9882, 1, 0, 0.499921,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0145223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494895,-99) , 
10, 0.17817, 0, 0, 0.509339,-99) , 
NN(
0, 
0, 
-1, 0.922085, 0, -1, 0.496399,-99) , 
9, -1.58095, 1, 0, 0.49904,-99) , 
10, 10.7022, 0, 0, 0.500219,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0093115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483342,-99) , 
10, -0.344769, 0, 0, 0.500167,-99) , 
9, -2.83225, 1, 0, 0.501487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480674,-99) , 
9, 15.2636, 1, 0, 0.500324,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0110417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497327,-99) , 
9, -2.54304, 1, 0, 0.499037,-99) , 
10, 6.95839, 0, 0, 0.500282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477039,-99) , 
10, 12.181, 0, 0, 0.489122,-99) , 
9, 11.2463, 1, 0, 0.499377,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00646125);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478501,-99) , 
10, -0.804003, 0, 0, 0.499101,-99) , 
NN(
0, 
0, 
-1, 11.7554, 0, -1, 0.483382,-99) , 
9, 11.6, 1, 0, 0.497823,-99) , 
8, -2.14284, 1, 0, 0.49849,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0270933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461992,-99) , 
9, -2.9341, 1, 0, 0.493326,-99) , 
10, -0.703683, 0, 0, 0.511833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497716,-99) , 
8, -0.999973, 1, 0, 0.503379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484933,-99) , 
9, 1.52862, 0, 0, 0.493403,-99) , 
7, -948.705, 0, 0, 0.496839,-99) , 
9, -2.1903, 1, 0, 0.498406,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.00883468);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.287003, 0, 1, 0.520089,-99) , 
NN(
NN(
0, 
0, 
-1, -2.6037, 1, 1, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481715,-99) , 
9, 13.87, 1, 0, 0.501021,-99) , 
8, -1.85714, 1, 0, 0.502138,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0110421);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517133,-99) , 
NN(
NN(
0, 
0, 
-1, -0.332851, 1, 1, 0.503792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470849,-99) , 
9, 2.83797, 0, 0, 0.492549,-99) , 
10, 3.18163, 1, 0, 0.500986,-99) , 
10, 10.7248, 0, 0, 0.501884,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.00894911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.95543, 1, 1, 0.511096,-99) , 
NN(
0, 
0, 
-1, 3.56711, 1, -1, 0.498217,-99) , 
9, 2.8573, 0, 0, 0.500288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474392,-99) , 
5, -0.828186, 1, 0, 0.484847,-99) , 
9, 10.9882, 1, 0, 0.49898,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0142428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.44039, 1, 1, 0.50374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474462,-99) , 
10, -1.02433, 0, 0, 0.502009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482464,-99) , 
10, 7.62694, 0, 0, 0.490451,-99) , 
8, 1.57125, 0, 0, 0.493435,-99) , 
10, 3.3433, 1, 0, 0.499615,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0108721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476645,-99) , 
10, -1.07871, 0, 0, 0.500834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484942,-99) , 
8, 0.143484, 1, 0, 0.492125,-99) , 
10, 3.69475, 1, 0, 0.498655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47818,-99) , 
0, 0.505709, 1, 0, 0.497957,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0217203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714503, 1, 1, 0.505775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469688,-99) , 
10, -0.563543, 0, 0, 0.502045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489822,-99) , 
9, -2.65938, 1, 0, 0.50948,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.489435,-99) , 
9, -1.85294, 1, 0, 0.492062,-99) , 
7, -1.69972, 0, 0, 0.495408,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0110811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48656,-99) , 
3, 5.21792, 1, 0, 0.512453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497174,-99) , 
9, -0.619149, 1, 0, 0.513312,-99) , 
NN(
0, 
0, 
-1, 9.06514, 1, -1, 0.496485,-99) , 
8, -1.85712, 1, 0, 0.497468,-99) , 
2, -0.214567, 1, 0, 0.49842,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.011381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.63708, 0, 1, 0.504619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481988,-99) , 
9, 13.3581, 1, 0, 0.503456,-99) , 
NN(
0, 
0, 
-1, 3.02663, 0, -1, 0.488357,-99) , 
6, 0.023804, 1, 0, 0.502544,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0180458);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481707,-99) , 
5, -0.194697, 0, 0, 0.512039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497742,-99) , 
3, 8.7547, 0, 0, 0.499427,-99) , 
4, 0.999524, 1, 0, 0.501244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474676,-99) , 
10, -1.12225, 0, 0, 0.50222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457658,-99) , 
8, -0.419163, 1, 0, 0.491829,-99) , 
10, 0.0455896, 0, 0, 0.499715,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0126283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0109719, 0, 1, 0.516591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495849,-99) , 
2, -0.193445, 1, 0, 0.497256,-99) , 
2, 0.214597, 0, 0, 0.498387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478558,-99) , 
3, 9.31837, 1, 0, 0.49756,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0073848);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519366,-99) , 
NN(
NN(
0, 
0, 
-1, 0.527303, 0, 1, 0.501661,-99) , 
NN(
0, 
0, 
-1, 0.199867, 1, -1, 0.492307,-99) , 
10, 0.57977, 0, 0, 0.499362,-99) , 
8, -2.14284, 1, 0, 0.500038,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00872844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499116,-99) , 
3, 8.7415, 0, 0, 0.500362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44784,-99) , 
5, -0.0997558, 0, 0, 0.489638,-99) , 
4, 0.999274, 0, 0, 0.499306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473941,-99) , 
4, 0.99619, 0, 0, 0.498642,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.00836695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0702587, 0, 1, 0.503232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485877,-99) , 
3, 7.57535, 1, 0, 0.502657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482329,-99) , 
3, 9.32771, 1, 0, 0.501803,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.00565537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.437496, 0, 1, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488455,-99) , 
0, 0.505709, 1, 0, 0.501224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465479,-99) , 
2, -0.35707, 0, 0, 0.500291,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0109774);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494008,-99) , 
3, 5.07042, 1, 0, 0.511028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496133,-99) , 
2, -0.00340785, 1, 0, 0.50003,-99) , 
2, 0.173456, 0, 0, 0.501004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480627,-99) , 
2, -0.357136, 0, 0, 0.500473,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0133736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472893,-99) , 
4, 0.999683, 0, 0, 0.499293,-99) , 
3, 9.31837, 0, 0, 0.500908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477831,-99) , 
10, 0.465998, 0, 0, 0.501567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46447,-99) , 
5, -0.101325, 0, 0, 0.491908,-99) , 
4, 0.999524, 0, 0, 0.499483,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0138017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496075,-99) , 
9, 17.707, 1, 0, 0.50983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497494,-99) , 
9, -0.268476, 1, 0, 0.500547,-99) , 
NN(
0, 
0, 
-1, -0.00424703, 1, -1, 0.487746,-99) , 
10, 0.492082, 0, 0, 0.497197,-99) , 
10, 8.90044, 0, 0, 0.498208,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.019878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475068,-99) , 
9, -2.97667, 1, 0, 0.49325,-99) , 
10, -0.245525, 0, 0, 0.509438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492566,-99) , 
5, -0.272441, 1, 0, 0.497094,-99) , 
5, 0.527374, 0, 0, 0.497986,-99) , 
9, -1.85269, 1, 0, 0.499699,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0139519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455832,-99) , 
10, -0.773795, 0, 0, 0.499471,-99) , 
9, -3.02777, 1, 0, 0.501309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468504,-99) , 
10, 10.2243, 0, 0, 0.481417,-99) , 
8, -0.141377, 1, 0, 0.489624,-99) , 
10, 5.10714, 1, 0, 0.499218,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0116008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499661,-99) , 
9, 1.34122, 0, 0, 0.501712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48688,-99) , 
5, -0.668372, 1, 0, 0.49448,-99) , 
10, 3.49507, 1, 0, 0.499816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505419,-99) , 
NN(
0, 
0, 
-1, -951.236, 1, -1, 0.486572,-99) , 
2, -0.0720242, 1, 0, 0.491022,-99) , 
0, 0.5019, 1, 0, 0.498219,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.00834769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498259,-99) , 
1, 0.0125223, 0, 0, 0.499689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4689,-99) , 
1, 0.026755, 1, 0, 0.498881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481628,-99) , 
1, -0.0230598, 0, 0, 0.49832,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0144103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467651,-99) , 
9, -2.9341, 1, 0, 0.496494,-99) , 
10, -0.597848, 0, 0, 0.51582,-99) , 
NN(
NN(
0, 
0, 
-1, -1.00006, 1, 1, 0.508549,-99) , 
NN(
0, 
0, 
-1, -0.714399, 0, -1, 0.49734,-99) , 
2, 0.0715463, 0, 0, 0.499361,-99) , 
9, -2.1903, 1, 0, 0.501077,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.00929614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482454,-99) , 
0, 0.493782, 0, 0, 0.513173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499665,-99) , 
3, 8.25216, 0, 0, 0.500748,-99) , 
4, 0.999048, 1, 0, 0.501953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493682,-99) , 
8, 0.427494, 0, 0, 0.49994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468046,-99) , 
10, 1.1584, 0, 0, 0.48878,-99) , 
0, 0.503804, 1, 0, 0.500789,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.00796429);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997143, 1, 1, 0.503529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485457,-99) , 
3, 9.36329, 1, 0, 0.502785,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0190668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454424,-99) , 
8, -0.427226, 1, 0, 0.496294,-99) , 
10, 0.132555, 0, 0, 0.508989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479983,-99) , 
9, 14.4593, 1, 0, 0.500997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475691,-99) , 
8, -1.85715, 0, 0, 0.499911,-99) , 
9, -1.62581, 1, 0, 0.501587,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0106614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486237,-99) , 
4, 0.999048, 0, 0, 0.498771,-99) , 
9, -2.14647, 1, 0, 0.500997,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493293,-99) , 
9, 3.21386, 0, 0, 0.495285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481,-99) , 
9, 13.4466, 1, 0, 0.494317,-99) , 
0, 0.49809, 1, 0, 0.497654,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.00637164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499579,-99) , 
3, 8.27871, 0, 0, 0.500975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466898,-99) , 
4, 0.999009, 1, 0, 0.489913,-99) , 
4, 0.99932, 0, 0, 0.499917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482405,-99) , 
4, 0.997143, 0, 0, 0.499289,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0165954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465334,-99) , 
0, 0.491424, 0, 0, 0.504522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494465,-99) , 
0, 0.491424, 1, 0, 0.496652,-99) , 
3, 1.88398, 1, 0, 0.500166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482079,-99) , 
3, 9.33032, 1, 0, 0.499405,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00653839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0150274, 0, 1, 0.502128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472357,-99) , 
1, 0.0268847, 1, 0, 0.501354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48249,-99) , 
1, -0.022916, 0, 0, 0.500741,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0160898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474123,-99) , 
8, -2.02046, 0, 0, 0.503137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485082,-99) , 
10, 9.32944, 0, 0, 0.490908,-99) , 
10, 3.49507, 1, 0, 0.499941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47691,-99) , 
8, 2.14278, 1, 0, 0.499366,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0104037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498313,-99) , 
8, -1.57144, 1, 0, 0.499956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445932,-99) , 
5, -0.0985386, 0, 0, 0.48342,-99) , 
4, 0.999274, 0, 0, 0.498724,-99) , 
NN(
0, 
0, 
-1, 0.44438, 0, -1, 0.482823,-99) , 
4, 0.998095, 0, 0, 0.497896,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0123991);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.12713, 1, 1, 0.51465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492783,-99) , 
10, 4.09153, 1, 0, 0.49982,-99) , 
NN(
0, 
0, 
-1, 0.189171, 1, -1, 0.492109,-99) , 
10, 0.930042, 0, 0, 0.497468,-99) , 
8, -1.85714, 1, 0, 0.498477,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0182066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495081,-99) , 
5, -0.602303, 1, 0, 0.502829,-99) , 
5, -0.357647, 0, 0, 0.508032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486547,-99) , 
10, -0.933822, 0, 0, 0.519195,-99) , 
NN(
0, 
0, 
-1, 0.201233, 0, -1, 0.494615,-99) , 
9, -2.4578, 1, 0, 0.497052,-99) , 
9, 2.38075, 0, 0, 0.499852,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.00931988);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49882,-99) , 
9, -2.59495, 1, 0, 0.529266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48281,-99) , 
10, -1.13345, 0, 0, 0.513805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477994,-99) , 
1, 0.0257493, 1, 0, 0.50032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481188,-99) , 
1, -0.0240946, 0, 0, 0.499716,-99) , 
9, -2.18149, 1, 0, 0.501196,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0175414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498637,-99) , 
9, -1.42106, 1, 0, 0.504633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47818,-99) , 
4, 0.999758, 0, 0, 0.49782,-99) , 
5, -0.189385, 0, 0, 0.501116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484444,-99) , 
10, -0.753019, 0, 0, 0.505279,-99) , 
NN(
0, 
0, 
-1, 0.307248, 0, -1, 0.472282,-99) , 
9, -2.28411, 1, 0, 0.489919,-99) , 
10, 0.0997583, 0, 0, 0.499202,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0158649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480341,-99) , 
7, -950.041, 1, 0, 0.515832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487572,-99) , 
10, 0.618058, 0, 0, 0.49919,-99) , 
9, -2.36606, 1, 0, 0.500694,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.480761,-99) , 
9, 13.4466, 1, 0, 0.499351,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.00920707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49111,-99) , 
9, -0.925063, 1, 0, 0.517993,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499081,-99) , 
9, -2.74492, 1, 0, 0.500184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468098,-99) , 
10, 13.0013, 0, 0, 0.483784,-99) , 
9, 11.7779, 1, 0, 0.498865,-99) , 
8, -1.85714, 1, 0, 0.499984,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0255704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452626,-99) , 
8, 0.123629, 1, 0, 0.499878,-99) , 
10, 0.625974, 0, 0, 0.50868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48706,-99) , 
10, 6.12796, 1, 0, 0.499177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480589,-99) , 
10, 6.32073, 0, 0, 0.48665,-99) , 
8, -0.428561, 0, 0, 0.495454,-99) , 
9, -0.974128, 1, 0, 0.499421,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0140421);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.29252, 0, 1, 0.513377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447943,-99) , 
8, 1.38014, 1, 0, 0.500014,-99) , 
NN(
0, 
0, 
-1, -0.700646, 0, -1, 0.492005,-99) , 
10, 2.28809, 1, 0, 0.496577,-99) , 
8, -1.85714, 1, 0, 0.497558,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.00919548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498439,-99) , 
10, 9.27362, 0, 0, 0.499484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461533,-99) , 
4, 0.999864, 0, 0, 0.48867,-99) , 
10, -0.215934, 0, 0, 0.498199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480088,-99) , 
4, 0.997143, 0, 0, 0.497558,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.00818092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.458603, 0, 1, 0.51259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456154,-99) , 
10, 3.61663, 1, 0, 0.498306,-99) , 
9, 2.84936, 0, 0, 0.50061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472635,-99) , 
5, -0.767795, 1, 0, 0.489115,-99) , 
9, 10.981, 1, 0, 0.499646,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.016641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.623106, 0, 1, 0.52908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474767,-99) , 
8, 1.00001, 1, 0, 0.497751,-99) , 
5, -0.184736, 1, 0, 0.50173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498137,-99) , 
10, 11.6625, 0, 0, 0.500794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481037,-99) , 
10, 6.82022, 0, 0, 0.487566,-99) , 
8, -0.142852, 0, 0, 0.495763,-99) , 
9, -0.212002, 1, 0, 0.498401,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0210404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493369,-99) , 
10, 9.45965, 0, 0, 0.501034,-99) , 
10, 5.34864, 1, 0, 0.506401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489086,-99) , 
10, 0.244231, 0, 0, 0.503959,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.494404,-99) , 
9, -1.44391, 1, 0, 0.496995,-99) , 
9, 3.67237, 0, 0, 0.498892,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0159057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489252,-99) , 
6, 0.00113331, 0, 0, 0.504241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481009,-99) , 
6, 0.0238019, 1, 0, 0.503156,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.487326,-99) , 
9, 13.4466, 1, 0, 0.5021,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0057897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474771,-99) , 
9, 7.60276, 1, 0, 0.49924,-99) , 
10, 8.74787, 0, 0, 0.500171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480981,-99) , 
9, 18.4763, 1, 0, 0.499358,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.011139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496619,-99) , 
7, -949.13, 1, 0, 0.505106,-99) , 
NN(
0, 
0, 
-1, 1.21162, 1, -1, 0.497596,-99) , 
10, 1.89059, 0, 0, 0.501221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477702,-99) , 
3, 9.31837, 1, 0, 0.500245,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0108226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491935,-99) , 
10, 0.701238, 0, 0, 0.500171,-99) , 
8, -2.14287, 1, 0, 0.50089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478553,-99) , 
4, 0.996667, 0, 0, 0.500212,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.00859866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488477,-99) , 
5, 0.0748675, 0, 0, 0.517136,-99) , 
NN(
0, 
0, 
-1, 0.99932, 0, -1, 0.498441,-99) , 
4, 0.999048, 1, 0, 0.500374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486518,-99) , 
3, 9.19619, 1, 0, 0.499766,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.00959381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497837,-99) , 
9, -2.38901, 1, 0, 0.499267,-99) , 
10, 7.62666, 0, 0, 0.50043,-99) , 
NN(
0, 
0, 
-1, 13.3421, 0, -1, 0.486829,-99) , 
9, 13.4398, 1, 0, 0.499528,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0101135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.263819, 0, 1, 0.519112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488021,-99) , 
9, 11.6202, 1, 0, 0.501452,-99) , 
8, -1.85716, 1, 0, 0.502504,-99) , 
NN(
0, 
0, 
-1, 0.142818, 1, -1, 0.484058,-99) , 
4, 0.998095, 0, 0, 0.501546,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0115867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.88571, 1, 1, 0.521823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49714,-99) , 
3, 4.73587, 0, 0, 0.499266,-99) , 
8, -1.85716, 1, 0, 0.500604,-99) , 
NN(
0, 
0, 
-1, 0.428553, 1, -1, 0.482886,-99) , 
4, 0.998571, 0, 0, 0.499343,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.00802888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499496,-99) , 
7, -1.58995, 0, 0, 0.501761,-99) , 
NN(
0, 
0, 
-1, -0.571863, 1, -1, 0.490409,-99) , 
10, -0.0754814, 0, 0, 0.500143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47576,-99) , 
2, 0.356744, 1, 0, 0.499498,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.00850129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.95691, 1, 1, 0.502937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473559,-99) , 
10, -1.17265, 0, 0, 0.501879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486672,-99) , 
9, 16.673, 1, 0, 0.501134,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0260142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459278,-99) , 
8, -0.0623476, 1, 0, 0.496981,-99) , 
10, 0.714631, 0, 0, 0.504735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490348,-99) , 
10, 6.03279, 1, 0, 0.501899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487413,-99) , 
10, 6.44965, 0, 0, 0.491898,-99) , 
8, 0.142811, 0, 0, 0.496955,-99) , 
9, -0.880231, 1, 0, 0.499408,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.00542328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.95388, 0, 1, 0.501226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478627,-99) , 
10, 12.1882, 0, 0, 0.491503,-99) , 
9, 11.1529, 1, 0, 0.500385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482327,-99) , 
4, 0.997143, 0, 0, 0.499744,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0124728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497351,-99) , 
9, 20.285, 1, 0, 0.513542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497555,-99) , 
9, -2.30339, 1, 0, 0.499692,-99) , 
NN(
0, 
0, 
-1, -1.13811, 0, -1, 0.482179,-99) , 
10, -0.709109, 0, 0, 0.498389,-99) , 
10, 8.90044, 0, 0, 0.499587,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0247222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.441231, 0, 1, 0.513576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485251,-99) , 
0, 0.499043, 0, 0, 0.495078,-99) , 
7, -43.5495, 1, 0, 0.506455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497337,-99) , 
10, 0.944755, 0, 0, 0.504002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484248,-99) , 
7, -949.13, 0, 0, 0.492602,-99) , 
9, -0.852836, 1, 0, 0.49753,-99) , 
9, 2.37315, 0, 0, 0.499812,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0104394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46595,-99) , 
7, -951.203, 1, 0, 0.489697,-99) , 
10, -0.538764, 0, 0, 0.511888,-99) , 
NN(
NN(
0, 
0, 
-1, 0.42931, 0, 1, 0.501199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477912,-99) , 
4, 0.997143, 0, 0, 0.50052,-99) , 
9, -2.14647, 1, 0, 0.501766,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0128072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48568,-99) , 
10, -1.10876, 0, 0, 0.518031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483738,-99) , 
5, -0.577183, 0, 0, 0.495385,-99) , 
5, -0.193215, 0, 0, 0.506405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486788,-99) , 
9, 11.273, 1, 0, 0.499218,-99) , 
NN(
0, 
0, 
-1, -0.290624, 1, -1, 0.484113,-99) , 
10, 0.0712926, 0, 0, 0.497906,-99) , 
8, -0.714311, 1, 0, 0.500272,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.00754169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532064,-99) , 
NN(
0, 
0, 
-1, 7.61532, 1, -1, 0.497732,-99) , 
4, 0.996667, 1, 0, 0.498806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482792,-99) , 
3, 9.37599, 1, 0, 0.498153,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0179027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498248,-99) , 
10, 0.593526, 0, 0, 0.506266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493443,-99) , 
10, 7.59704, 0, 0, 0.496871,-99) , 
9, -0.212002, 1, 0, 0.501397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474864,-99) , 
8, 2.04755, 1, 0, 0.497501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456474,-99) , 
10, 1.55965, 0, 0, 0.49108,-99) , 
8, 0.999938, 1, 0, 0.499614,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0201079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457313,-99) , 
8, -0.419165, 1, 0, 0.498705,-99) , 
10, 0.0736436, 0, 0, 0.510218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496116,-99) , 
10, 3.46993, 1, 0, 0.502298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460157,-99) , 
8, 0.975915, 1, 0, 0.495952,-99) , 
10, 1.93713, 0, 0, 0.49961,-99) , 
9, -1.66992, 1, 0, 0.501505,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0100742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497447,-99) , 
8, 1.28499, 0, 0, 0.501075,-99) , 
10, 4.4608, 1, 0, 0.506405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480559,-99) , 
8, 1.57136, 1, 0, 0.500076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469202,-99) , 
10, 3.34393, 1, 0, 0.49876,-99) , 
9, 2.37315, 0, 0, 0.500712,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00976789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.7492, 1, 1, 0.517243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498939,-99) , 
9, -2.23166, 1, 0, 0.500571,-99) , 
5, -0.730086, 1, 0, 0.50181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490546,-99) , 
3, 4.16204, 0, 0, 0.496515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468226,-99) , 
4, 0.999524, 0, 0, 0.490334,-99) , 
0, 0.502852, 1, 0, 0.500328,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0183947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469387,-99) , 
9, -2.69669, 1, 0, 0.489571,-99) , 
10, -0.310579, 0, 0, 0.511013,-99) , 
NN(
NN(
0, 
0, 
-1, -0.268038, 0, 1, 0.505625,-99) , 
NN(
0, 
0, 
-1, -1.85712, 0, -1, 0.494366,-99) , 
9, 1.75246, 0, 0, 0.498217,-99) , 
9, -1.95516, 1, 0, 0.49994,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00974338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.502898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457117,-99) , 
5, -0.0997558, 0, 0, 0.489613,-99) , 
4, 0.999274, 0, 0, 0.501902,-99) , 
NN(
0, 
0, 
-1, 0.44023, 0, -1, 0.484621,-99) , 
4, 0.998095, 0, 0, 0.501014,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0125733);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499247,-99) , 
9, 8.54615, 1, 0, 0.506671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495165,-99) , 
9, -1.40241, 1, 0, 0.498078,-99) , 
9, 4.15029, 0, 0, 0.49978,-99) , 
5, 0.61718, 0, 0, 0.500542,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0113311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491825,-99) , 
10, -0.691515, 0, 0, 0.512055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499204,-99) , 
5, 0.351045, 0, 0, 0.500675,-99) , 
9, -2.17348, 1, 0, 0.50188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494914,-99) , 
0, 0.490608, 1, 0, 0.501123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464966,-99) , 
4, 0.999524, 0, 0, 0.491596,-99) , 
0, 0.493328, 0, 0, 0.500494,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0139981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478861,-99) , 
0, 0.489655, 0, 0, 0.504443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490759,-99) , 
3, 3.75572, 0, 0, 0.49766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475452,-99) , 
4, 0.999524, 0, 0, 0.49323,-99) , 
0, 0.501899, 1, 0, 0.502438,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0124384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142334, 1, 1, 0.511518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498768,-99) , 
4, 0.999524, 1, 0, 0.500287,-99) , 
0, 0.492376, 1, 0, 0.501391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460874,-99) , 
7, -948.91, 0, 0, 0.47937,-99) , 
9, -2.6477, 1, 0, 0.491338,-99) , 
10, 0.0152124, 0, 0, 0.4998,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0134642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499104,-99) , 
8, -0.714256, 1, 0, 0.503067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476733,-99) , 
10, -1.09497, 0, 0, 0.501842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495052,-99) , 
5, -0.807193, 0, 0, 0.506162,-99) , 
NN(
0, 
0, 
-1, 8.47057, 1, -1, 0.484877,-99) , 
10, 9.81715, 0, 0, 0.493094,-99) , 
5, -0.550533, 0, 0, 0.500333,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0164291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14285, 1, 1, 0.504869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471242,-99) , 
4, 0.999365, 0, 0, 0.503701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474732,-99) , 
0, 0.50063, 1, 0, 0.503619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455188,-99) , 
0, 0.494281, 0, 0, 0.48975,-99) , 
4, 0.999048, 0, 0, 0.502304,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0108239);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495122,-99) , 
7, -43.3991, 1, 0, 0.500729,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.483245,-99) , 
8, 1.3945, 1, 0, 0.499748,-99) , 
8, 1.85714, 0, 0, 0.50049,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0138623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494267,-99) , 
9, 0.861823, 0, 0, 0.504583,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.487092,-99) , 
9, 12.812, 1, 0, 0.502164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467962,-99) , 
8, -2.06394, 0, 0, 0.498276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468353,-99) , 
8, 0.931383, 1, 0, 0.495881,-99) , 
10, 1.72457, 0, 0, 0.499119,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0182451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45192,-99) , 
8, -2.0204, 0, 0, 0.491153,-99) , 
7, -949.657, 0, 0, 0.505407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486632,-99) , 
9, 9.34117, 1, 0, 0.499434,-99) , 
NN(
0, 
0, 
-1, 0.45783, 1, -1, 0.490569,-99) , 
10, 1.33764, 0, 0, 0.496235,-99) , 
8, -1.2857, 1, 0, 0.497516,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0120014);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.070475, 0, 1, 0.517692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497996,-99) , 
4, 0.998095, 1, 0, 0.499937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481171,-99) , 
0, 0.499995, 0, 0, 0.488593,-99) , 
3, 4.75358, 1, 0, 0.497745,-99) , 
8, -1.85715, 1, 0, 0.498908,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.012255);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496259,-99) , 
9, 2.78415, 0, 0, 0.498415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476498,-99) , 
9, 9.22264, 1, 0, 0.497465,-99) , 
10, 10.4671, 0, 0, 0.498484,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0134555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.35578, 1, 1, 0.503099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488971,-99) , 
9, 13.6861, 1, 0, 0.502035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480135,-99) , 
9, -2.50477, 1, 0, 0.49841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472636,-99) , 
10, -1.1381, 0, 0, 0.491832,-99) , 
10, -0.108509, 0, 0, 0.500605,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0106668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499263,-99) , 
3, 0.779006, 1, 0, 0.502478,-99) , 
NN(
0, 
0, 
-1, 0.252096, 1, -1, 0.493894,-99) , 
3, 4.741, 1, 0, 0.500898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509211,-99) , 
NN(
0, 
0, 
-1, 0.428582, 1, -1, 0.484959,-99) , 
9, 1.79029, 0, 0, 0.492373,-99) , 
0, 0.502852, 1, 0, 0.499796,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.00679642);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498822,-99) , 
3, 0.490585, 1, 0, 0.499827,-99) , 
NN(
0, 
0, 
-1, -0.0739679, 1, -1, 0.484994,-99) , 
3, 7.92817, 1, 0, 0.498871,-99) , 
5, 0.6172, 0, 0, 0.499573,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0184972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495553,-99) , 
10, 2.72009, 1, 0, 0.502634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477453,-99) , 
9, -2.9567, 1, 0, 0.490716,-99) , 
10, -0.335194, 0, 0, 0.501156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449696,-99) , 
9, 0.0882237, 0, 0, 0.4751,-99) , 
9, 1.16905, 0, 0, 0.489626,-99) , 
8, 1.28566, 1, 0, 0.499819,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00796296);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.809791, 0, 1, 0.522344,-99) , 
NN(
0, 
0, 
-1, 8.97524, 1, -1, 0.4973,-99) , 
10, 9.90405, 0, 0, 0.498933,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0123154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498549,-99) , 
9, 20.8862, 1, 0, 0.515247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499367,-99) , 
9, -1.90936, 1, 0, 0.501624,-99) , 
10, 9.39077, 0, 0, 0.502755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475213,-99) , 
8, -0.854976, 1, 0, 0.49814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462118,-99) , 
4, 0.999524, 0, 0, 0.489554,-99) , 
10, -0.184395, 0, 0, 0.501064,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0125852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.23813, 0, 1, 0.525652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496767,-99) , 
7, -43.3991, 1, 0, 0.502192,-99) , 
8, -1.85716, 1, 0, 0.503591,-99) , 
NN(
0, 
0, 
-1, 0.428477, 1, -1, 0.487213,-99) , 
4, 0.998571, 0, 0, 0.502434,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0112599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493823,-99) , 
0, 0.494281, 0, 0, 0.518791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477319,-99) , 
4, 0.99932, 0, 0, 0.502074,-99) , 
4, 0.999048, 1, 0, 0.503796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488791,-99) , 
3, 9.22081, 1, 0, 0.503131,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0120611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57847, 1, 1, 0.503032,-99) , 
NN(
0, 
0, 
-1, 12.5779, 0, -1, 0.486301,-99) , 
9, 11.2684, 1, 0, 0.501437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510242,-99) , 
NN(
0, 
0, 
-1, -2.75842, 1, -1, 0.477996,-99) , 
10, -0.451745, 0, 0, 0.488314,-99) , 
10, -0.108509, 0, 0, 0.499605,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0105169);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 21.2669, 1, 1, 0.514191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498678,-99) , 
10, 6.77397, 0, 0, 0.50011,-99) , 
NN(
0, 
0, 
-1, 0.905313, 0, -1, 0.491155,-99) , 
8, 0.428522, 1, 0, 0.497187,-99) , 
10, 10.051, 0, 0, 0.498271,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.00968901);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478515,-99) , 
10, -1.09814, 0, 0, 0.501585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483241,-99) , 
9, 9.07272, 1, 0, 0.500707,-99) , 
10, 10.7248, 0, 0, 0.501684,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0133693);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496781,-99) , 
10, 0.149397, 0, 0, 0.507896,-99) , 
NN(
0, 
0, 
-1, 0.914835, 0, -1, 0.495576,-99) , 
9, -1.53883, 1, 0, 0.498197,-99) , 
10, 10.3753, 0, 0, 0.4991,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0101831);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.517339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49846,-99) , 
9, 2.56435, 0, 0, 0.500762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474399,-99) , 
9, 9.05902, 1, 0, 0.499679,-99) , 
10, 10.051, 0, 0, 0.500797,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0111703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474522,-99) , 
3, 7.57541, 1, 0, 0.50345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484713,-99) , 
3, 9.32771, 1, 0, 0.502675,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.00698583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.606623, 1, 1, 0.517294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499543,-99) , 
4, 0.999048, 1, 0, 0.501291,-99) , 
8, -1.85715, 1, 0, 0.502234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48591,-99) , 
0, 0.490471, 0, 0, 0.501524,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.00890283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495199,-99) , 
10, -0.567642, 0, 0, 0.515299,-99) , 
NN(
0, 
0, 
-1, 0.43754, 0, 1, 0.501556,-99) , 
9, -2.1903, 1, 0, 0.502995,-99) , 
NN(
0, 
0, 
-1, 1.37644, 0, -1, 0.484931,-99) , 
0, 0.491424, 0, 0, 0.501797,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0110856);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495694,-99) , 
3, 4.75084, 1, 0, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468826,-99) , 
10, -1.10038, 0, 0, 0.501448,-99) , 
8, -2.14286, 1, 0, 0.502113,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0189459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478277,-99) , 
9, -2.99006, 1, 0, 0.494504,-99) , 
10, -0.284054, 0, 0, 0.508899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495839,-99) , 
10, 3.36015, 1, 0, 0.500761,-99) , 
NN(
0, 
0, 
-1, 0.934069, 1, -1, 0.493243,-99) , 
10, 1.82186, 0, 0, 0.497603,-99) , 
9, -1.86588, 1, 0, 0.499262,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.00853391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478059,-99) , 
9, 7.58715, 1, 0, 0.501263,-99) , 
10, 8.7357, 0, 0, 0.502192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488195,-99) , 
9, 18.3235, 1, 0, 0.501596,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0053053);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499477,-99) , 
2, -0.214092, 1, 0, 0.500337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474573,-99) , 
10, -1.10038, 0, 0, 0.49952,-99) , 
8, -2.14286, 1, 0, 0.500179,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0145512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714355, 1, 1, 0.513507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484938,-99) , 
5, -0.550352, 0, 0, 0.508777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496744,-99) , 
3, 8.08223, 0, 0, 0.498004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474499,-99) , 
7, -951.286, 0, 0, 0.48643,-99) , 
4, 0.999524, 0, 0, 0.496662,-99) , 
2, 0.0710713, 0, 0, 0.498883,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.00756002);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.281146, 0, 1, 0.514249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47339,-99) , 
8, 2.07475, 1, 0, 0.500285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471353,-99) , 
10, 13.2425, 0, 0, 0.485481,-99) , 
9, 11.7779, 1, 0, 0.499088,-99) , 
8, -1.85716, 1, 0, 0.499983,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0129033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.958308, 0, 1, 0.518921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48672,-99) , 
9, 3.12441, 0, 0, 0.494588,-99) , 
5, -0.286188, 0, 0, 0.508734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519846,-99) , 
NN(
0, 
0, 
-1, 6.91216, 1, -1, 0.498562,-99) , 
10, 10.3139, 0, 0, 0.500089,-99) , 
8, -0.714284, 1, 0, 0.502508,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.00834631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85715, 1, 1, 0.502517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460106,-99) , 
5, -0.0992306, 0, 0, 0.490851,-99) , 
4, 0.999274, 0, 0, 0.501367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478019,-99) , 
4, 0.99619, 0, 0, 0.500759,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0112101);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513906,-99) , 
NN(
NN(
0, 
0, 
-1, 8.19439, 0, 1, 0.502806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480563,-99) , 
7, -951.227, 0, 0, 0.490409,-99) , 
4, 0.999773, 0, 0, 0.500318,-99) , 
4, 0.997619, 1, 0, 0.500914,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00675738);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476382,-99) , 
10, -1.10409, 0, 0, 0.499841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478593,-99) , 
9, 9.30232, 1, 0, 0.49898,-99) , 
10, 10.2725, 0, 0, 0.499959,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0177109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.579584, 0, 1, 0.517031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489124,-99) , 
8, -0.713535, 1, 0, 0.497486,-99) , 
5, -0.369439, 1, 0, 0.503119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496735,-99) , 
5, 0.61594, 0, 0, 0.497859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456712,-99) , 
8, -2.14287, 0, 0, 0.49615,-99) , 
7, -1.69972, 0, 0, 0.498483,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00625265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499182,-99) , 
8, -2.23811, 0, 0, 0.510044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485571,-99) , 
9, 15.3289, 1, 0, 0.500226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477656,-99) , 
10, -0.991189, 0, 0, 0.49948,-99) , 
8, -1.85715, 1, 0, 0.500093,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.00924262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497057,-99) , 
9, 17.4693, 1, 0, 0.51219,-99) , 
NN(
NN(
0, 
0, 
-1, 3.03905, 0, 1, 0.502039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475264,-99) , 
5, -0.625213, 1, 0, 0.486819,-99) , 
10, 5.10705, 1, 0, 0.500473,-99) , 
10, 8.63483, 0, 0, 0.501442,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0201189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471942,-99) , 
9, -2.91613, 1, 0, 0.489225,-99) , 
10, -0.40218, 0, 0, 0.507639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492669,-99) , 
9, 21.198, 1, 0, 0.508433,-99) , 
NN(
0, 
0, 
-1, 0.398641, 0, -1, 0.493634,-99) , 
10, 9.49604, 0, 0, 0.494854,-99) , 
9, -1.99983, 1, 0, 0.496495,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0107921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471618,-99) , 
8, -2.07484, 0, 0, 0.501127,-99) , 
NN(
0, 
0, 
-1, 1.16321, 1, -1, 0.492052,-99) , 
10, 3.37285, 1, 0, 0.498702,-99) , 
8, 1.85708, 0, 0, 0.49936,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.00585046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498464,-99) , 
0, 0.496866, 0, 0, 0.515101,-99) , 
NN(
0, 
0, 
-1, -2.14286, 1, 1, 0.500657,-99) , 
4, 0.998572, 1, 0, 0.50166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471751,-99) , 
10, 1.9824, 0, 0, 0.485635,-99) , 
0, 0.503804, 1, 0, 0.500245,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.00773237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50016, 1, 1, 0.512025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493956,-99) , 
0, 0.499993, 0, 0, 0.498959,-99) , 
3, 4.66455, 1, 0, 0.506852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488787,-99) , 
0, 0.492512, 0, 0, 0.499394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478977,-99) , 
0, 0.504757, 1, 0, 0.498367,-99) , 
2, 0.0714574, 0, 0, 0.499914,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0124207);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.433447, 1, 1, 0.510433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496728,-99) , 
9, -1.67948, 1, 0, 0.499477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473299,-99) , 
10, -1.14472, 0, 0, 0.498454,-99) , 
10, 8.78829, 0, 0, 0.499441,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0168574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.55093, 0, 1, 0.513134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477958,-99) , 
10, 12.4419, 0, 0, 0.49292,-99) , 
9, 12.3512, 1, 0, 0.505846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487395,-99) , 
10, -0.836199, 0, 0, 0.514511,-99) , 
NN(
0, 
0, 
-1, 0.152045, 0, -1, 0.495326,-99) , 
9, -2.39915, 1, 0, 0.497249,-99) , 
9, 3.59321, 0, 0, 0.49901,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0181418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.85275, 0, 1, 0.506989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473649,-99) , 
10, 1.52193, 0, 0, 0.499524,-99) , 
8, 0.714221, 1, 0, 0.504863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484745,-99) , 
8, -0.554057, 1, 0, 0.503287,-99) , 
NN(
0, 
0, 
-1, -1.21167, 0, -1, 0.48048,-99) , 
10, -0.794907, 0, 0, 0.493409,-99) , 
10, -0.108509, 0, 0, 0.503266,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00743984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484829,-99) , 
5, -0.54161, 0, 0, 0.499346,-99) , 
10, 7.62666, 0, 0, 0.500422,-99) , 
NN(
0, 
0, 
-1, 13.2673, 0, -1, 0.48653,-99) , 
9, 13.2663, 1, 0, 0.499484,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0156291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.8779, 0, 1, 0.504173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479603,-99) , 
10, 1.55319, 0, 0, 0.496996,-99) , 
8, 0.42852, 1, 0, 0.501394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533054,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.478717,-99) , 
9, -3.02204, 1, 0, 0.490901,-99) , 
10, -0.0754814, 0, 0, 0.499874,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.00774364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516404,-99) , 
NN(
0, 
0, 
-1, -0.54016, 0, -1, 0.497636,-99) , 
10, 7.52625, 0, 0, 0.498442,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.483514,-99) , 
9, 13.4398, 1, 0, 0.497444,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.00659584);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522062,-99) , 
NN(
0, 
0, 
-1, -1.08708, 0, -1, 0.497376,-99) , 
8, -2.14287, 1, 0, 0.498232,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.014636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499597,-99) , 
8, 0.142549, 1, 0, 0.511798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496914,-99) , 
5, 0.441105, 0, 0, 0.498129,-99) , 
0, 0.491424, 1, 0, 0.499049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474174,-99) , 
8, -0.617712, 1, 0, 0.501366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463934,-99) , 
10, -1.10365, 0, 0, 0.491213,-99) , 
10, -0.0983186, 0, 0, 0.497936,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0139901);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490079,-99) , 
9, 14.1246, 1, 0, 0.502829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451193,-99) , 
8, -0.0648358, 1, 0, 0.494044,-99) , 
10, 0.455809, 0, 0, 0.500877,-99) , 
8, -2.14286, 1, 0, 0.501581,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0164292);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491632,-99) , 
10, 0.325571, 0, 0, 0.505527,-99) , 
NN(
0, 
0, 
-1, 1.03699, 0, -1, 0.495288,-99) , 
9, -1.37411, 1, 0, 0.497747,-99) , 
10, 10.4268, 0, 0, 0.498371,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0164713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.20781, 1, 1, 0.507373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498353,-99) , 
6, 0.0238036, 0, 0, 0.499958,-99) , 
5, -0.00919695, 0, 0, 0.502504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474477,-99) , 
10, -1.04944, 0, 0, 0.50654,-99) , 
NN(
0, 
0, 
-1, 0.313627, 0, -1, 0.474443,-99) , 
9, -2.49364, 1, 0, 0.489262,-99) , 
10, -0.0224326, 0, 0, 0.50051,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0106137);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494049,-99) , 
10, 0.204019, 0, 0, 0.50144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484138,-99) , 
9, 8.95633, 1, 0, 0.500649,-99) , 
10, 10.3753, 0, 0, 0.501713,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00852516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.401468, 0, 1, 0.511205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46144,-99) , 
10, 3.54485, 1, 0, 0.498547,-99) , 
9, 2.8493, 0, 0, 0.500591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474625,-99) , 
10, 11.7861, 0, 0, 0.490088,-99) , 
9, 10.981, 1, 0, 0.499712,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.017982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494548,-99) , 
9, -0.890446, 1, 0, 0.501678,-99) , 
10, 7.65837, 0, 0, 0.503294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479311,-99) , 
4, 0.999048, 0, 0, 0.501066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462093,-99) , 
10, 0.987319, 0, 0, 0.496485,-99) , 
8, 0.428532, 1, 0, 0.501025,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0162473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495688,-99) , 
9, -0.859085, 1, 0, 0.502109,-99) , 
10, 7.57163, 0, 0, 0.503601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483001,-99) , 
10, 6.94531, 1, 0, 0.498741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464856,-99) , 
10, 0.788245, 0, 0, 0.494783,-99) , 
8, 0.142807, 1, 0, 0.499816,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0156998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.518435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494902,-99) , 
9, -0.615722, 1, 0, 0.500365,-99) , 
10, 6.87099, 0, 0, 0.502165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482764,-99) , 
10, 5.7627, 1, 0, 0.496932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458964,-99) , 
10, 1.03554, 0, 0, 0.492126,-99) , 
8, 0.42852, 1, 0, 0.498841,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.012238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484079,-99) , 
5, -0.54233, 0, 0, 0.499616,-99) , 
10, 8.54879, 0, 0, 0.500969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482876,-99) , 
10, 7.35243, 1, 0, 0.500022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456194,-99) , 
10, 1.29114, 0, 0, 0.494004,-99) , 
8, 0.714239, 1, 0, 0.499254,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0108908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498762,-99) , 
10, 7.60108, 0, 0, 0.501084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479128,-99) , 
9, 16.6798, 1, 0, 0.500071,-99) , 
NN(
0, 
0, 
-1, 1.27084, 0, -1, 0.490899,-99) , 
8, 0.714286, 1, 0, 0.497808,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0160233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.332991, 0, 1, 0.504291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472523,-99) , 
9, -2.98273, 1, 0, 0.489488,-99) , 
10, -0.368908, 0, 0, 0.501955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494042,-99) , 
5, -0.552386, 1, 0, 0.496414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474106,-99) , 
10, 0.987319, 0, 0, 0.493787,-99) , 
8, 0.428522, 1, 0, 0.499238,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0118562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499278,-99) , 
4, 0.998095, 1, 0, 0.500254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477945,-99) , 
9, -2.99934, 1, 0, 0.489058,-99) , 
10, -0.335194, 0, 0, 0.498868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510718,-99) , 
NN(
0, 
0, 
-1, 1.77552, 1, -1, 0.468196,-99) , 
9, 1.12115, 0, 0, 0.488603,-99) , 
8, 1.28572, 1, 0, 0.497672,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.00957118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.518241,-99) , 
NN(
0, 
0, 
-1, 13.6732, 1, -1, 0.498233,-99) , 
8, -1.57142, 1, 0, 0.499511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47095,-99) , 
10, -1.19232, 0, 0, 0.493817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467193,-99) , 
8, -0.554071, 1, 0, 0.48749,-99) , 
10, -0.184395, 0, 0, 0.497961,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0139125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.34578, 0, 1, 0.503181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487904,-99) , 
9, 15.9868, 1, 0, 0.502234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470761,-99) , 
10, -1.10437, 0, 0, 0.500442,-99) , 
NN(
0, 
0, 
-1, 0.311237, 0, -1, 0.47806,-99) , 
9, -2.52056, 1, 0, 0.488594,-99) , 
10, -0.0754814, 0, 0, 0.500267,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0124619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499025,-99) , 
3, 9.33156, 0, 0, 0.499975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466729,-99) , 
8, 0.428543, 1, 0, 0.485662,-99) , 
4, 0.998571, 0, 0, 0.499096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477517,-99) , 
9, -2.53046, 1, 0, 0.496448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471824,-99) , 
10, -1.13813, 0, 0, 0.490102,-99) , 
10, -0.108509, 0, 0, 0.49785,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0109107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490189,-99) , 
9, 11.1932, 1, 0, 0.502229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466556,-99) , 
8, -0.590391, 1, 0, 0.493075,-99) , 
10, -0.151367, 0, 0, 0.501047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4754,-99) , 
4, 0.996191, 0, 0, 0.500381,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00815813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493518,-99) , 
7, -948.91, 1, 0, 0.498364,-99) , 
8, -2.14287, 1, 0, 0.498984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474636,-99) , 
2, 0.357116, 1, 0, 0.498336,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0109498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.336402, 0, 1, 0.519336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496723,-99) , 
3, 0.572076, 1, 0, 0.497893,-99) , 
2, 0.213961, 0, 0, 0.49917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480823,-99) , 
3, 9.37525, 1, 0, 0.498418,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0134277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480269,-99) , 
4, 0.999819, 0, 0, 0.510261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496778,-99) , 
9, 1.71021, 0, 0, 0.49942,-99) , 
9, -1.99939, 1, 0, 0.500758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470089,-99) , 
4, 0.996191, 0, 0, 0.499967,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.00528998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499501,-99) , 
8, -2.14287, 1, 0, 0.500147,-99) , 
4, 0.997143, 1, 0, 0.501115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485798,-99) , 
3, 8.75421, 1, 0, 0.500356,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.00938927);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49154,-99) , 
3, 2.33078, 1, 0, 0.518667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486089,-99) , 
4, 0.999388, 0, 0, 0.500409,-99) , 
4, 0.998571, 1, 0, 0.50174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478074,-99) , 
3, 9.36329, 1, 0, 0.50077,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0127584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.06141, 1, 1, 0.505089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466527,-99) , 
8, 0.032704, 1, 0, 0.496814,-99) , 
10, 0.539603, 0, 0, 0.50283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475485,-99) , 
10, 11.4726, 0, 0, 0.491757,-99) , 
9, 10.9882, 1, 0, 0.501903,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0147011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497693,-99) , 
3, 8.30921, 0, 0, 0.499224,-99) , 
8, -1.85714, 1, 0, 0.500785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493,-99) , 
7, -949.113, 0, 0, 0.504094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439309,-99) , 
3, 4.56417, 1, 0, 0.493336,-99) , 
4, 0.999524, 0, 0, 0.499616,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0124336);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496919,-99) , 
9, -2.28243, 1, 0, 0.499317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48348,-99) , 
10, -0.932675, 0, 0, 0.49848,-99) , 
10, 10.7248, 0, 0, 0.499342,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.013226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.567413, 1, 1, 0.505871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464906,-99) , 
8, 0.25845, 1, 0, 0.496485,-99) , 
10, 0.891365, 0, 0, 0.502698,-99) , 
NN(
0, 
0, 
-1, 13.2237, 0, -1, 0.487827,-99) , 
9, 13.2731, 1, 0, 0.501694,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00856643);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23809, 0, 1, 0.508227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495286,-99) , 
0, 0.499995, 1, 0, 0.510669,-99) , 
NN(
0, 
0, 
-1, 0.999365, 0, -1, 0.497094,-99) , 
4, 0.999048, 1, 0, 0.4985,-99) , 
8, -1.85713, 1, 0, 0.499065,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0113974);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 17.8068, 1, 1, 0.511451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497995,-99) , 
9, -0.376872, 1, 0, 0.501074,-99) , 
NN(
0, 
0, 
-1, 0.0563927, 1, -1, 0.491764,-99) , 
10, 0.524455, 0, 0, 0.498573,-99) , 
10, 8.92477, 0, 0, 0.499591,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0142305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.280722, 0, 1, 0.514122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493733,-99) , 
10, 4.43764, 1, 0, 0.501304,-99) , 
8, -1.28573, 1, 0, 0.502581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492633,-99) , 
9, -2.76984, 1, 0, 0.502581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461668,-99) , 
4, 0.999524, 0, 0, 0.493,-99) , 
10, -0.151367, 0, 0, 0.501322,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0100775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49648,-99) , 
3, 1.8834, 1, 0, 0.503258,-99) , 
5, -0.365676, 0, 0, 0.506618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473951,-99) , 
3, 9.33164, 1, 0, 0.499873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470128,-99) , 
10, 3.29083, 1, 0, 0.498473,-99) , 
9, 2.38075, 0, 0, 0.500544,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0140008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.72091, 0, 1, 0.512193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492152,-99) , 
9, 17.2348, 1, 0, 0.507309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496477,-99) , 
9, 1.71254, 0, 0, 0.498366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474996,-99) , 
10, 3.89834, 1, 0, 0.497007,-99) , 
9, 4.03013, 0, 0, 0.49898,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0174978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42898, 1, 1, 0.507835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47056,-99) , 
4, 0.999182, 0, 0, 0.505947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494361,-99) , 
10, 1.206, 0, 0, 0.499476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472496,-99) , 
8, 1.85741, 1, 0, 0.497803,-99) , 
5, -0.0114935, 1, 0, 0.502572,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00997482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.975496, 1, 1, 0.514828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49328,-99) , 
3, 1.38602, 0, 0, 0.499081,-99) , 
4, 0.999048, 1, 0, 0.5007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481923,-99) , 
3, 8.98995, 1, 0, 0.49984,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.00492461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486433,-99) , 
9, 19.3095, 1, 0, 0.500223,-99) , 
0, 0.505709, 0, 0, 0.500818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484547,-99) , 
4, 0.997619, 0, 0, 0.500134,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0108131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.508557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498234,-99) , 
3, 8.976, 0, 0, 0.499215,-99) , 
5, 0.260984, 0, 0, 0.501292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496286,-99) , 
7, -1.58995, 0, 0, 0.501919,-99) , 
NN(
0, 
0, 
-1, 0.492058, 0, -1, 0.476698,-99) , 
5, 0.164254, 1, 0, 0.494231,-99) , 
0, 0.494281, 0, 0, 0.499987,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0130107);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513369,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496244,-99) , 
9, 2.79059, 0, 0, 0.498975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476085,-99) , 
9, 9.45494, 1, 0, 0.49809,-99) , 
10, 10.2725, 0, 0, 0.499011,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00920035);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497802,-99) , 
3, 1.71112, 1, 0, 0.509445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488518,-99) , 
5, -0.195622, 0, 0, 0.499054,-99) , 
3, 4.66455, 1, 0, 0.505335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498235,-99) , 
5, 0.346602, 0, 0, 0.499595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486571,-99) , 
0, 0.491424, 0, 0, 0.498821,-99) , 
2, 0.0714574, 0, 0, 0.500002,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0159925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486764,-99) , 
10, -0.822822, 0, 0, 0.503263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474709,-99) , 
10, 6.58451, 0, 0, 0.493728,-99) , 
5, -0.550906, 0, 0, 0.501589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482873,-99) , 
10, 7.3644, 1, 0, 0.500171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464198,-99) , 
10, 1.30591, 0, 0, 0.495181,-99) , 
8, 0.714294, 1, 0, 0.500017,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00678103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.487324, 1, 1, 0.502272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478609,-99) , 
3, 7.57891, 1, 0, 0.501474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485571,-99) , 
3, 9.33107, 1, 0, 0.50082,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0134604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489117,-99) , 
10, -0.867911, 0, 0, 0.511984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499965,-99) , 
8, -0.999356, 1, 0, 0.504639,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.494646,-99) , 
7, -1.58995, 0, 0, 0.497856,-99) , 
9, -2.40254, 1, 0, 0.498974,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0117149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.319705, 0, 1, 0.509459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474072,-99) , 
10, 2.4806, 1, 0, 0.499375,-99) , 
9, 1.25736, 0, 0, 0.502324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478228,-99) , 
0, 0.49809, 1, 0, 0.491231,-99) , 
9, 13.2053, 1, 0, 0.501568,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.00960397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520413,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483299,-99) , 
9, 13.7288, 1, 0, 0.501888,-99) , 
NN(
0, 
0, 
-1, 1.11369, 0, -1, 0.494995,-99) , 
8, 0.551032, 1, 0, 0.499801,-99) , 
8, -2.14284, 1, 0, 0.500504,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00678501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.15466, 0, 1, 0.509496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498135,-99) , 
4, 0.999048, 1, 0, 0.49882,-99) , 
0, 0.503804, 0, 0, 0.499754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484303,-99) , 
4, 0.997143, 0, 0, 0.499203,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.00890951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499405,-99) , 
0, 0.492376, 1, 0, 0.500356,-99) , 
5, 0.617177, 0, 0, 0.500833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474137,-99) , 
10, -1.09873, 0, 0, 0.498245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466846,-99) , 
8, -0.687069, 1, 0, 0.489814,-99) , 
10, -0.282059, 0, 0, 0.499558,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0073568);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.5024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48692,-99) , 
0, 0.490335, 1, 0, 0.495659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473953,-99) , 
4, 0.999524, 0, 0, 0.489351,-99) , 
0, 0.492376, 0, 0, 0.501137,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0165058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489289,-99) , 
8, -1.57143, 0, 0, 0.503385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477889,-99) , 
8, 0.142927, 1, 0, 0.491126,-99) , 
10, 3.83793, 1, 0, 0.500991,-99) , 
10, 10.7022, 0, 0, 0.501773,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0128448);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483056,-99) , 
9, 18.4805, 1, 0, 0.509465,-99) , 
NN(
0, 
0, 
-1, 4.51919, 1, -1, 0.497008,-99) , 
10, 8.63483, 0, 0, 0.497999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506794,-99) , 
NN(
0, 
0, 
-1, 1.77552, 1, -1, 0.470807,-99) , 
9, 1.03142, 0, 0, 0.488516,-99) , 
8, 1.28571, 1, 0, 0.496906,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0137461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487955,-99) , 
9, 13.6579, 1, 0, 0.5013,-99) , 
8, -1.85715, 1, 0, 0.501872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46332,-99) , 
10, -0.439334, 0, 0, 0.482134,-99) , 
9, -3.01425, 1, 0, 0.493416,-99) , 
10, -0.0754814, 0, 0, 0.500653,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0110733);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519842,-99) , 
NN(
0, 
0, 
-1, 1.85708, 1, -1, 0.495734,-99) , 
9, -2.81909, 1, 0, 0.496879,-99) , 
10, 10.5412, 0, 0, 0.497883,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.00922398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495241,-99) , 
8, 0.714014, 1, 0, 0.505659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487529,-99) , 
9, 12.2465, 1, 0, 0.499004,-99) , 
0, 0.495233, 1, 0, 0.50064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474767,-99) , 
4, 0.999524, 0, 0, 0.497372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472212,-99) , 
8, -0.419163, 1, 0, 0.49147,-99) , 
10, 0.0342846, 0, 0, 0.499165,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.010638);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498201,-99) , 
9, 3.04265, 0, 0, 0.499955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47618,-99) , 
10, 7.7577, 0, 0, 0.491182,-99) , 
10, 5.10078, 1, 0, 0.49841,-99) , 
8, 1.85708, 0, 0, 0.499181,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.00741491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499075,-99) , 
9, 3.10089, 0, 0, 0.500568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480093,-99) , 
8, 0.714348, 1, 0, 0.494494,-99) , 
10, 5.29701, 1, 0, 0.499523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482447,-99) , 
2, 0.357116, 1, 0, 0.499059,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0131954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139347, 1, 1, 0.520076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494199,-99) , 
0, 0.495278, 1, 0, 0.504753,-99) , 
0, 0.499995, 0, 0, 0.510496,-99) , 
NN(
NN(
0, 
0, 
-1, -2.14647, 1, 1, 0.505429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490502,-99) , 
2, 0.00338966, 0, 0, 0.496025,-99) , 
0, 0.49809, 1, 0, 0.500748,-99) , 
2, -0.0713443, 1, 0, 0.502486,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0162657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498656,-99) , 
9, 17.3969, 1, 0, 0.510498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485778,-99) , 
10, -0.935579, 0, 0, 0.51481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494578,-99) , 
9, -1.37767, 1, 0, 0.496685,-99) , 
9, -2.42599, 1, 0, 0.498211,-99) , 
10, 8.63483, 0, 0, 0.499244,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.00706103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489881,-99) , 
3, 5.15248, 1, 0, 0.514892,-99) , 
NN(
NN(
0, 
0, 
-1, 9.23016, 0, 1, 0.500977,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490264,-99) , 
0, 0.493328, 0, 0, 0.499584,-99) , 
2, -0.214543, 1, 0, 0.500556,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.00495769);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488451,-99) , 
3, 9.00266, 1, 0, 0.501409,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.00859464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493379,-99) , 
10, 0.678815, 0, 0, 0.499738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478494,-99) , 
4, 0.996667, 0, 0, 0.499092,-99) , 
8, -2.14287, 1, 0, 0.499872,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.00753445);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499047,-99) , 
9, -2.98229, 1, 0, 0.500246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478613,-99) , 
9, 9.19765, 1, 0, 0.499193,-99) , 
10, 10.8447, 0, 0, 0.500151,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0109452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496135,-99) , 
5, -0.331458, 0, 0, 0.510788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484137,-99) , 
9, 11.3002, 1, 0, 0.499006,-99) , 
8, -1.28573, 1, 0, 0.500112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472058,-99) , 
4, 0.999524, 0, 0, 0.497233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459494,-99) , 
8, -0.220638, 1, 0, 0.490682,-99) , 
10, 0.121476, 0, 0, 0.498472,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0136364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.10112, 0, 1, 0.502918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488238,-99) , 
9, 14.1252, 1, 0, 0.501626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48607,-99) , 
10, 0.465789, 0, 0, 0.496361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461842,-99) , 
8, 1.57161, 1, 0, 0.492755,-99) , 
5, 0.167987, 1, 0, 0.499108,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0179894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484496,-99) , 
8, -1.47512, 1, 0, 0.492784,-99) , 
10, -0.763146, 0, 0, 0.512456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49587,-99) , 
8, -0.99949, 1, 0, 0.50099,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.49291,-99) , 
7, -948.705, 0, 0, 0.495679,-99) , 
9, -2.22697, 1, 0, 0.497339,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0082642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999045, 1, 1, 0.517104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482137,-99) , 
2, -0.207462, 0, 0, 0.492897,-99) , 
3, 4.80412, 1, 0, 0.508062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499657,-99) , 
3, 9.22081, 0, 0, 0.500425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478142,-99) , 
4, 0.998095, 0, 0, 0.499622,-99) , 
2, -0.0713968, 1, 0, 0.501131,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.00989606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.57396, 1, 1, 0.502247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490689,-99) , 
8, 1.57163, 0, 0, 0.493527,-99) , 
10, 3.49507, 1, 0, 0.499917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479288,-99) , 
3, 9.37525, 1, 0, 0.499081,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0111817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.502187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471991,-99) , 
4, 0.99932, 0, 0, 0.5013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458446,-99) , 
7, -951.286, 0, 0, 0.478421,-99) , 
5, 0.525032, 0, 0, 0.491172,-99) , 
4, 0.999048, 0, 0, 0.500283,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.00855324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499012,-99) , 
9, 17.4379, 1, 0, 0.510078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484558,-99) , 
6, 0.00113375, 0, 0, 0.498475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473497,-99) , 
6, 0.023809, 1, 0, 0.497354,-99) , 
10, 8.65917, 0, 0, 0.498428,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0227911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.50853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483106,-99) , 
10, 12.6355, 0, 0, 0.495487,-99) , 
9, 12.5165, 1, 0, 0.503842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489307,-99) , 
10, 0.252922, 0, 0, 0.502307,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.491009,-99) , 
9, -1.43589, 1, 0, 0.494053,-99) , 
9, 3.67998, 0, 0, 0.496028,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.00766528);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491666,-99) , 
10, 4.54098, 1, 0, 0.498679,-99) , 
NN(
0, 
0, 
-1, -1.58311, 1, -1, 0.487367,-99) , 
8, -1.40818, 0, 0, 0.497708,-99) , 
8, -2.14287, 1, 0, 0.49852,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0056574);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499575,-99) , 
10, 6.89506, 0, 0, 0.500504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476921,-99) , 
9, 11.0861, 1, 0, 0.499505,-99) , 
10, 12.2015, 0, 0, 0.500209,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.00774334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499212,-99) , 
9, -2.02121, 1, 0, 0.500941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473363,-99) , 
10, 12.1368, 0, 0, 0.490024,-99) , 
9, 10.9882, 1, 0, 0.50003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483041,-99) , 
0, 0.505709, 1, 0, 0.499454,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0116467);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495262,-99) , 
10, 4.9792, 1, 0, 0.502962,-99) , 
NN(
0, 
0, 
-1, 0.975915, 1, -1, 0.496149,-99) , 
10, 1.91116, 0, 0, 0.499528,-99) , 
NN(
0, 
0, 
-1, 0.996168, 0, -1, 0.483637,-99) , 
4, 0.998095, 0, 0, 0.498716,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0126046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493473,-99) , 
10, 3.35586, 1, 0, 0.502389,-99) , 
10, 10.8565, 0, 0, 0.503309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496102,-99) , 
10, 8.09281, 0, 0, 0.497894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48189,-99) , 
8, 1.28571, 1, 0, 0.496063,-99) , 
0, 0.499043, 1, 0, 0.500364,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.00867516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215811, 0, 1, 0.507495,-99) , 
NN(
0, 
0, 
-1, 1.57143, 1, -1, 0.498168,-99) , 
9, 1.23083, 0, 0, 0.50081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473729,-99) , 
10, 11.7836, 0, 0, 0.490557,-99) , 
9, 10.9882, 1, 0, 0.499949,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0109193);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50842, 0, 1, 0.510864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499483,-99) , 
6, 0.023809, 0, 0, 0.501016,-99) , 
5, 0.347391, 0, 0, 0.502643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490899,-99) , 
8, 1.77553, 0, 0, 0.504377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459211,-99) , 
5, 0.347803, 1, 0, 0.493523,-99) , 
8, 1.28572, 1, 0, 0.501594,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0107475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499673,-99) , 
5, -0.281146, 0, 0, 0.517777,-99) , 
NN(
NN(
0, 
0, 
-1, -0.356481, 1, 1, 0.503776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46774,-99) , 
10, 11.9373, 0, 0, 0.486368,-99) , 
9, 11.6202, 1, 0, 0.502361,-99) , 
8, -1.85715, 1, 0, 0.503259,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0099472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.24763, 0, 1, 0.502581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484026,-99) , 
9, 18.1066, 1, 0, 0.501789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510815,-99) , 
NN(
0, 
0, 
-1, 1.77545, 1, -1, 0.473365,-99) , 
9, 1.12115, 0, 0, 0.491456,-99) , 
8, 1.28566, 1, 0, 0.500601,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.00892216);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499773,-99) , 
10, 6.58317, 0, 0, 0.501931,-99) , 
NN(
0, 
0, 
-1, 6.79115, 1, -1, 0.493889,-99) , 
8, 0.142822, 1, 0, 0.498541,-99) , 
10, 10.7022, 0, 0, 0.499368,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.00918578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499077,-99) , 
9, 20.1904, 1, 0, 0.512036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498763,-99) , 
9, 2.24475, 0, 0, 0.50016,-99) , 
NN(
0, 
0, 
-1, 4.32317, 0, -1, 0.488887,-99) , 
10, 4.09565, 1, 0, 0.498377,-99) , 
10, 8.90044, 0, 0, 0.499473,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0150552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.522695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472859,-99) , 
8, -2.14287, 0, 0, 0.502006,-99) , 
9, 1.45135, 0, 0, 0.50371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49301,-99) , 
9, 9.65632, 1, 0, 0.502594,-99) , 
NN(
0, 
0, 
-1, 2.92877, 0, -1, 0.48438,-99) , 
9, 5.31598, 0, 0, 0.495579,-99) , 
10, 3.54503, 1, 0, 0.501579,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.010964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.810024, 0, 1, 0.514826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493074,-99) , 
10, -0.384648, 0, 0, 0.5103,-99) , 
NN(
0, 
0, 
-1, 0.528987, 0, -1, 0.497627,-99) , 
9, -1.98427, 1, 0, 0.499393,-99) , 
10, 10.051, 0, 0, 0.500387,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0108232);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521226,-99) , 
NN(
NN(
0, 
0, 
-1, 9.33973, 0, 1, 0.503868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461138,-99) , 
8, -0.999928, 0, 0, 0.494725,-99) , 
4, 0.999728, 0, 0, 0.502181,-99) , 
4, 0.997143, 1, 0, 0.50289,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00850866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491697,-99) , 
8, -2.04761, 0, 0, 0.504226,-99) , 
5, -0.192016, 0, 0, 0.510963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492021,-99) , 
3, 4.741, 1, 0, 0.499405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477427,-99) , 
1, -0.0241129, 0, 0, 0.49873,-99) , 
8, -1.57143, 1, 0, 0.499849,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00993361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483001,-99) , 
9, 13.6478, 1, 0, 0.502162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470847,-99) , 
1, -0.0263777, 0, 0, 0.501314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483875,-99) , 
1, 0.023467, 1, 0, 0.500788,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0125356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.236, 0, 1, 0.51594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484612,-99) , 
8, -1.57145, 1, 0, 0.496536,-99) , 
9, 0.429784, 1, 0, 0.509833,-99) , 
NN(
0, 
0, 
-1, -0.153843, 0, -1, 0.496046,-99) , 
8, -0.999995, 1, 0, 0.498842,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.00613489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.16557, 0, 1, 0.501667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484548,-99) , 
9, 16.6798, 1, 0, 0.501022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469883,-99) , 
10, 5.30541, 0, 0, 0.487096,-99) , 
6, 0.023809, 1, 0, 0.500173,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.011879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497616,-99) , 
9, 16.932, 1, 0, 0.510723,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498447,-99) , 
9, -0.593808, 1, 0, 0.50215,-99) , 
NN(
0, 
0, 
-1, -0.134751, 1, -1, 0.492386,-99) , 
10, 0.302138, 0, 0, 0.499941,-99) , 
10, 8.33061, 0, 0, 0.500902,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0123143);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499703,-99) , 
10, 0.123864, 0, 0, 0.508723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482195,-99) , 
10, 0.986029, 0, 0, 0.497853,-99) , 
9, -1.54604, 1, 0, 0.500125,-99) , 
10, 10.7022, 0, 0, 0.501071,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.00706518);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512462,-99) , 
NN(
NN(
0, 
0, 
-1, 9.36041, 0, 1, 0.5012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478895,-99) , 
8, 0.143296, 1, 0, 0.491982,-99) , 
5, 0.309145, 1, 0, 0.499796,-99) , 
5, 0.61718, 0, 0, 0.500441,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0107454);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496329,-99) , 
9, -2.18149, 1, 0, 0.497799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471964,-99) , 
1, 0.0261869, 1, 0, 0.497116,-99) , 
1, -0.0236316, 1, 0, 0.497765,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00554971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485304,-99) , 
6, 0.023809, 1, 0, 0.499847,-99) , 
10, 7.86399, 0, 0, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487167,-99) , 
9, 13.8007, 1, 0, 0.499966,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0117661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490504,-99) , 
9, 18.6619, 1, 0, 0.514282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48743,-99) , 
10, 4.51911, 1, 0, 0.500011,-99) , 
10, 8.63483, 0, 0, 0.501146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507282,-99) , 
NN(
0, 
0, 
-1, 1.77544, 1, -1, 0.477781,-99) , 
9, 1.07732, 0, 0, 0.492097,-99) , 
8, 1.28565, 1, 0, 0.500102,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0119747);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495022,-99) , 
9, 0.969416, 0, 0, 0.497953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471882,-99) , 
9, 10.3786, 1, 0, 0.497034,-99) , 
10, 10.7611, 0, 0, 0.497892,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.00965302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497429,-99) , 
2, 0.208554, 0, 0, 0.498262,-99) , 
3, 9.33107, 0, 0, 0.499319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468955,-99) , 
0, 0.497138, 0, 0, 0.486671,-99) , 
4, 0.998571, 0, 0, 0.498424,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0150223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495683,-99) , 
10, 3.52891, 1, 0, 0.502071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472099,-99) , 
8, -0.367853, 1, 0, 0.494222,-99) , 
10, 0.499995, 0, 0, 0.500268,-99) , 
8, -2.14285, 1, 0, 0.501106,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00892061);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 17.8101, 1, 1, 0.514373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498453,-99) , 
9, 4.02378, 0, 0, 0.500089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484846,-99) , 
9, 7.12335, 1, 0, 0.49925,-99) , 
10, 9.06657, 0, 0, 0.500419,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.00959838);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498181,-99) , 
9, 4.13696, 0, 0, 0.499952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482802,-99) , 
9, 9.10625, 1, 0, 0.499161,-99) , 
10, 10.5493, 0, 0, 0.500349,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.00724454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498791,-99) , 
8, -1.85716, 1, 0, 0.499715,-99) , 
3, 9.23456, 0, 0, 0.500633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465982,-99) , 
5, 0.259911, 0, 0, 0.48971,-99) , 
4, 0.998571, 0, 0, 0.499857,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.00864547);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.81458, 0, 1, 0.517958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498681,-99) , 
9, -1.7561, 1, 0, 0.50042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481788,-99) , 
9, 8.10852, 1, 0, 0.499516,-99) , 
10, 9.73265, 0, 0, 0.500766,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0104121);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518395,-99) , 
NN(
NN(
0, 
0, 
-1, 0.43748, 0, 1, 0.50422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462231,-99) , 
8, 0.139651, 1, 0, 0.495413,-99) , 
10, 0.553492, 0, 0, 0.502116,-99) , 
8, -2.14287, 1, 0, 0.502669,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.01959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.978458, 0, 1, 0.535988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467322,-99) , 
8, 0.249348, 1, 0, 0.499061,-99) , 
10, 0.716984, 0, 0, 0.505947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493026,-99) , 
5, -0.0198739, 1, 0, 0.501986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484151,-99) , 
5, -0.229488, 0, 0, 0.490921,-99) , 
8, -0.71428, 0, 0, 0.499579,-99) , 
9, -0.836847, 1, 0, 0.501654,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0114905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.274258, 0, 1, 0.513313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475647,-99) , 
8, -1.08165, 0, 0, 0.500405,-99) , 
8, -1.28573, 1, 0, 0.501691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473978,-99) , 
8, -0.636514, 1, 0, 0.499125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472234,-99) , 
10, -1.02433, 0, 0, 0.490152,-99) , 
10, -0.184395, 0, 0, 0.500209,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.00947155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.27636, 0, 1, 0.506825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496459,-99) , 
0, 0.503804, 0, 0, 0.497461,-99) , 
5, 0.346912, 0, 0, 0.499076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482141,-99) , 
8, 2.14277, 1, 0, 0.498651,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0131635);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482211,-99) , 
10, -0.537179, 0, 0, 0.5019,-99) , 
NN(
0, 
0, 
-1, -951.246, 1, -1, 0.491764,-99) , 
10, 4.0099, 1, 0, 0.499503,-99) , 
8, -2.14285, 1, 0, 0.500181,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.00859251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497815,-99) , 
2, -0.213512, 1, 0, 0.498587,-99) , 
3, 9.32771, 0, 0, 0.499454,-99) , 
NN(
0, 
0, 
-1, -0.0714351, 1, -1, 0.484646,-99) , 
4, 0.998571, 0, 0, 0.498413,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0101726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495271,-99) , 
10, 4.00662, 1, 0, 0.501451,-99) , 
8, -2.14287, 1, 0, 0.502111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478374,-99) , 
2, -0.0714351, 1, 0, 0.489005,-99) , 
4, 0.998572, 0, 0, 0.50118,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.00630558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491581,-99) , 
10, 0.436832, 0, 0, 0.498676,-99) , 
8, -2.14285, 1, 0, 0.499312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485854,-99) , 
4, 0.997619, 0, 0, 0.498751,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0149751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495792,-99) , 
9, 17.8737, 1, 0, 0.510811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489825,-99) , 
10, -0.461615, 0, 0, 0.507026,-99) , 
NN(
0, 
0, 
-1, 0.741539, 0, -1, 0.49539,-99) , 
9, -2.05253, 1, 0, 0.496926,-99) , 
10, 8.96386, 0, 0, 0.498025,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0144934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.95233, 1, 1, 0.516339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474501,-99) , 
9, 4.81504, 0, 0, 0.495585,-99) , 
7, -43.5495, 1, 0, 0.508435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472979,-99) , 
8, 1.57131, 1, 0, 0.500688,-99) , 
NN(
0, 
0, 
-1, -0.145329, 0, -1, 0.482397,-99) , 
10, 2.98913, 1, 0, 0.498963,-99) , 
9, 2.55463, 0, 0, 0.501296,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0142773);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483487,-99) , 
9, 11.7806, 1, 0, 0.50003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484505,-99) , 
9, -1.20873, 0, 0, 0.489525,-99) , 
10, 0.57977, 0, 0, 0.497471,-99) , 
8, -2.14286, 1, 0, 0.498134,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0123208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493945,-99) , 
9, 17.482, 1, 0, 0.510391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496949,-99) , 
4, 0.999048, 1, 0, 0.499085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480157,-99) , 
3, 9.33032, 1, 0, 0.498303,-99) , 
10, 8.72732, 0, 0, 0.499312,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0102104);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496993,-99) , 
9, 2.47754, 0, 0, 0.499046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480509,-99) , 
9, 10.2633, 1, 0, 0.498387,-99) , 
10, 10.7611, 0, 0, 0.499279,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0099901);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496986,-99) , 
9, -0.819358, 1, 0, 0.499993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476848,-99) , 
9, 9.73222, 1, 0, 0.499158,-99) , 
10, 10.3164, 0, 0, 0.499945,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00976319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75525, 0, 1, 0.502611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470484,-99) , 
10, 1.26461, 0, 0, 0.489339,-99) , 
4, 0.99932, 0, 0, 0.501354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472595,-99) , 
4, 0.997143, 0, 0, 0.500358,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0137078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496304,-99) , 
10, -0.886945, 0, 0, 0.51723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495656,-99) , 
7, -948.91, 0, 0, 0.498985,-99) , 
9, -2.3365, 1, 0, 0.500461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474212,-99) , 
4, 0.997619, 0, 0, 0.499384,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0110588);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496627,-99) , 
9, 2.82368, 0, 0, 0.498619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477646,-99) , 
9, 10.9318, 1, 0, 0.497728,-99) , 
10, 12.0206, 0, 0, 0.498535,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.00781889);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516989,-99) , 
NN(
NN(
0, 
0, 
-1, 0.473331, 1, 1, 0.502381,-99) , 
NN(
0, 
0, 
-1, -0.071299, 0, -1, 0.487335,-99) , 
3, 7.27418, 1, 0, 0.501163,-99) , 
5, 0.617147, 0, 0, 0.501963,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.00930236);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497709,-99) , 
9, -1.71779, 1, 0, 0.49981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478746,-99) , 
9, 9.20446, 1, 0, 0.49888,-99) , 
10, 10.4213, 0, 0, 0.499542,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.00829969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499577,-99) , 
9, 2.51663, 0, 0, 0.501513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484292,-99) , 
9, -2.73339, 1, 0, 0.493098,-99) , 
10, -0.171927, 0, 0, 0.500412,-99) , 
NN(
0, 
0, 
-1, 2.00123, 0, -1, 0.484628,-99) , 
0, 0.504757, 1, 0, 0.499494,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0177);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490431,-99) , 
10, -1.10757, 0, 0, 0.519646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497475,-99) , 
9, 0.881145, 0, 0, 0.500213,-99) , 
8, -0.999711, 1, 0, 0.503326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489522,-99) , 
4, 0.999967, 0, 0, 0.499962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467008,-99) , 
4, 0.999308, 0, 0, 0.49808,-99) , 
5, -0.0992574, 0, 0, 0.500636,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.00991035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.996168, 0, 1, 0.523258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476871,-99) , 
4, 0.998821, 0, 0, 0.501777,-99) , 
4, 0.998095, 1, 0, 0.502918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482865,-99) , 
3, 9.2089, 1, 0, 0.502052,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0107496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490188,-99) , 
10, 4.31423, 1, 0, 0.501332,-99) , 
5, -0.719784, 1, 0, 0.502089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484703,-99) , 
9, 15.0754, 1, 0, 0.50109,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0137463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490064,-99) , 
10, -0.389998, 0, 0, 0.501289,-99) , 
9, 1.04592, 0, 0, 0.503599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491703,-99) , 
7, -949.13, 1, 0, 0.499083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463425,-99) , 
4, 0.999308, 0, 0, 0.497041,-99) , 
5, -0.099319, 0, 0, 0.50023,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0164931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497037,-99) , 
4, 0.999522, 0, 0, 0.50928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487976,-99) , 
10, 0.210457, 0, 0, 0.503782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491938,-99) , 
9, -1.67842, 1, 0, 0.494366,-99) , 
2, 0.0306126, 0, 0, 0.497107,-99) , 
2, -0.214286, 1, 0, 0.497879,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.00768741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494735,-99) , 
4, 0.999524, 1, 0, 0.510498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482125,-99) , 
4, 0.998095, 0, 0, 0.499959,-99) , 
5, 0.52613, 0, 0, 0.500886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488736,-99) , 
0, 0.504666, 0, 0, 0.496702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4706,-99) , 
5, 0.25492, 1, 0, 0.491224,-99) , 
0, 0.502852, 1, 0, 0.499634,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0100612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496221,-99) , 
10, 0.070475, 0, 0, 0.512381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489891,-99) , 
3, 5.18637, 1, 0, 0.512561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492874,-99) , 
10, 2.42252, 1, 0, 0.497331,-99) , 
2, -0.214186, 1, 0, 0.498292,-99) , 
8, -1.85714, 1, 0, 0.499113,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0075716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499384,-99) , 
8, -1.28573, 1, 0, 0.500685,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.490647,-99) , 
10, -0.0224326, 0, 0, 0.499258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457299,-99) , 
5, 0.261974, 0, 0, 0.485323,-99) , 
4, 0.998571, 0, 0, 0.498274,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.00944461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 20.4419, 1, 1, 0.509199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49325,-99) , 
10, 1.09265, 0, 0, 0.498417,-99) , 
10, 8.90044, 0, 0, 0.499277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477013,-99) , 
0, 0.505709, 1, 0, 0.498537,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0083155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.512712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498312,-99) , 
4, 0.999048, 1, 0, 0.49912,-99) , 
8, -1.57142, 1, 0, 0.500394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479122,-99) , 
2, -0.0717215, 1, 0, 0.490459,-99) , 
4, 0.998572, 0, 0, 0.499684,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0162133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49984,-99) , 
10, 2.82864, 1, 0, 0.505615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479897,-99) , 
4, 0.999637, 0, 0, 0.503199,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0812197, 0, 1, 0.521878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489817,-99) , 
9, -1.49523, 1, 0, 0.493812,-99) , 
9, 1.15414, 0, 0, 0.497021,-99) , 
5, -0.28126, 1, 0, 0.499295,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0134512);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498807,-99) , 
9, 1.03648, 0, 0, 0.502446,-99) , 
NN(
0, 
0, 
-1, 0.331766, 0, -1, 0.485785,-99) , 
9, 12.2767, 1, 0, 0.501086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515294,-99) , 
NN(
0, 
0, 
-1, -1.95238, 0, -1, 0.486051,-99) , 
7, -949.96, 0, 0, 0.493975,-99) , 
8, -1.00001, 0, 0, 0.499675,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0137309);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.15248, 1, 1, 0.516177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480215,-99) , 
10, 1.07495, 0, 0, 0.505406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496851,-99) , 
10, 7.14731, 0, 0, 0.498344,-99) , 
8, 0.428522, 0, 0, 0.500698,-99) , 
2, -0.214225, 1, 0, 0.501677,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0150731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.51725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483531,-99) , 
9, 15.8702, 1, 0, 0.501555,-99) , 
8, -1.57144, 1, 0, 0.502532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482829,-99) , 
9, -2.56711, 1, 0, 0.499046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472831,-99) , 
10, -1.22061, 0, 0, 0.493565,-99) , 
10, -0.0224326, 0, 0, 0.501171,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.00720504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495497,-99) , 
10, 3.28022, 1, 0, 0.500339,-99) , 
8, 1.85714, 0, 0, 0.500875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485076,-99) , 
4, 0.996191, 0, 0, 0.50046,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.00863867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498038,-99) , 
8, -0.142475, 1, 0, 0.507597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497582,-99) , 
0, 0.495369, 1, 0, 0.49954,-99) , 
5, 0.437496, 0, 0, 0.500567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486208,-99) , 
0, 0.505709, 1, 0, 0.500081,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00632677);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499335,-99) , 
10, 8.63483, 0, 0, 0.500177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472325,-99) , 
4, 0.998095, 0, 0, 0.499049,-99) , 
5, 0.617197, 0, 0, 0.499934,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.00819403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497303,-99) , 
4, 0.999048, 1, 0, 0.498315,-99) , 
3, 9.33032, 0, 0, 0.498942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479694,-99) , 
2, 0.356443, 1, 0, 0.498436,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0123434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997143, 1, 1, 0.504971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484533,-99) , 
5, -0.11159, 1, 0, 0.495745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471676,-99) , 
4, 0.999524, 0, 0, 0.489404,-99) , 
0, 0.493328, 0, 0, 0.502878,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0132145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40258, 0, 1, 0.504489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497446,-99) , 
6, 0.023804, 0, 0, 0.499616,-99) , 
5, -0.191351, 0, 0, 0.502031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469533,-99) , 
7, -951.21, 0, 0, 0.484878,-99) , 
9, -2.78373, 1, 0, 0.493759,-99) , 
10, -0.0224326, 0, 0, 0.500779,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0125436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495441,-99) , 
7, -948.91, 1, 0, 0.500402,-99) , 
8, -2.14285, 1, 0, 0.501119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460972,-99) , 
7, -951.227, 0, 0, 0.480571,-99) , 
5, 0.525077, 0, 0, 0.488383,-99) , 
4, 0.999048, 0, 0, 0.499849,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0118957);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 16.6744, 1, 1, 0.512575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497272,-99) , 
6, 0.00565996, 0, 0, 0.501424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480489,-99) , 
6, 0.023772, 1, 0, 0.500491,-99) , 
10, 8.58721, 0, 0, 0.501515,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0104967);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497201,-99) , 
10, 0.0594804, 0, 0, 0.50668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497473,-99) , 
5, 0.43748, 0, 0, 0.498487,-99) , 
9, -1.66992, 1, 0, 0.499943,-99) , 
NN(
0, 
0, 
-1, 1.77676, 0, -1, 0.488387,-99) , 
0, 0.503804, 1, 0, 0.498918,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.00873201);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49359,-99) , 
10, 4.59903, 1, 0, 0.501306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483401,-99) , 
4, 0.996667, 0, 0, 0.500736,-99) , 
10, 10.7611, 0, 0, 0.501526,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.00865632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494378,-99) , 
10, 0.553608, 0, 0, 0.499675,-99) , 
10, 7.48547, 0, 0, 0.500736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476516,-99) , 
10, 13.3421, 0, 0, 0.488837,-99) , 
9, 13.4398, 1, 0, 0.499942,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0097614);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499635,-99) , 
10, 5.92456, 0, 0, 0.502096,-99) , 
NN(
0, 
0, 
-1, 6.80608, 1, -1, 0.493742,-99) , 
8, 0.14286, 1, 0, 0.498549,-99) , 
10, 10.7248, 0, 0, 0.499494,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0122882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496676,-99) , 
9, 5.5797, 0, 0, 0.50034,-99) , 
8, -1.28573, 1, 0, 0.503619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498825,-99) , 
6, 0.023809, 0, 0, 0.500305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442761,-99) , 
8, -2.14286, 0, 0, 0.497955,-99) , 
7, -949.024, 0, 0, 0.499963,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00923188);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516851,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00340273, 0, 1, 0.503476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484641,-99) , 
6, 0.0238036, 1, 0, 0.502523,-99) , 
10, 12.1625, 0, 0, 0.503128,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00776423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485551,-99) , 
3, 7.60234, 1, 0, 0.501559,-99) , 
4, 0.996667, 1, 0, 0.502592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488458,-99) , 
3, 9.36329, 1, 0, 0.502018,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0140756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495599,-99) , 
5, -0.370321, 1, 0, 0.500565,-99) , 
8, -1.28563, 1, 0, 0.503798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477487,-99) , 
8, 1.53052, 1, 0, 0.50001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450806,-99) , 
8, -2.14287, 0, 0, 0.497985,-99) , 
7, -948.705, 0, 0, 0.500044,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00898264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493626,-99) , 
10, 3.52462, 1, 0, 0.500004,-99) , 
8, 1.85714, 0, 0, 0.500754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474237,-99) , 
4, 0.996191, 0, 0, 0.500077,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0105641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499659,-99) , 
9, 18.1008, 1, 0, 0.511923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497383,-99) , 
9, 2.43953, 0, 0, 0.499617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483364,-99) , 
9, 7.51034, 1, 0, 0.498824,-99) , 
10, 9.06266, 0, 0, 0.499836,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0115347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46201, 1, 1, 0.506224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475956,-99) , 
4, 0.999159, 0, 0, 0.49924,-99) , 
5, -0.0115827, 0, 0, 0.501593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488638,-99) , 
10, -0.582469, 0, 0, 0.501906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463928,-99) , 
8, -0.262294, 1, 0, 0.494997,-99) , 
10, 0.0997583, 0, 0, 0.500469,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0114509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468723,-99) , 
7, -951.286, 1, 0, 0.492407,-99) , 
10, -0.538764, 0, 0, 0.50887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498926,-99) , 
8, 0.15095, 0, 0, 0.510831,-99) , 
NN(
0, 
0, 
-1, 8.0653, 1, -1, 0.497709,-99) , 
10, 9.49317, 0, 0, 0.498743,-99) , 
9, -2.18149, 1, 0, 0.499793,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0106144);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49741,-99) , 
7, -1.58995, 0, 0, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470483,-99) , 
1, -0.0263763, 0, 0, 0.499775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477227,-99) , 
1, 0.023467, 1, 0, 0.499089,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0135692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49797,-99) , 
4, 0.999969, 0, 0, 0.504369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471214,-99) , 
4, 0.999344, 0, 0, 0.502372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528191,-99) , 
NN(
0, 
0, 
-1, -0.690632, 0, -1, 0.495308,-99) , 
9, -3.01091, 1, 0, 0.497448,-99) , 
5, -0.101414, 1, 0, 0.49998,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.00547638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999658, 0, 1, 0.516011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499771,-99) , 
3, 9.31837, 0, 0, 0.500847,-99) , 
2, 0.213724, 0, 0, 0.501705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482932,-99) , 
4, 0.997619, 0, 0, 0.50093,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.00721342);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516374,-99) , 
NN(
NN(
0, 
0, 
-1, 5.13407, 0, 1, 0.502241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470723,-99) , 
10, 11.9115, 0, 0, 0.488502,-99) , 
9, 11.6, 1, 0, 0.501125,-99) , 
8, -2.14286, 1, 0, 0.501637,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0158997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49905,-99) , 
10, 12.1838, 1, 0, 0.516723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493213,-99) , 
10, 2.19807, 1, 0, 0.501337,-99) , 
10, 8.65917, 0, 0, 0.502542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487666,-99) , 
8, 1.85707, 0, 0, 0.498351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475009,-99) , 
5, 0.351614, 1, 0, 0.492722,-99) , 
8, 1.28566, 1, 0, 0.501416,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0139058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -43.9394, 1, 1, 0.515232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485479,-99) , 
5, -0.80287, 1, 0, 0.496549,-99) , 
9, 12.5096, 1, 0, 0.508535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474904,-99) , 
8, 1.57136, 1, 0, 0.501112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474087,-99) , 
9, 2.59028, 0, 0, 0.487499,-99) , 
10, 3.16792, 1, 0, 0.499517,-99) , 
9, 3.67237, 0, 0, 0.501341,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0110387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492243,-99) , 
8, 0.435838, 1, 0, 0.507753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495396,-99) , 
9, -1.20297, 1, 0, 0.497486,-99) , 
10, 8.52445, 0, 0, 0.498368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483462,-99) , 
0, 0.490471, 0, 0, 0.497722,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.00989349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488127,-99) , 
5, -0.541623, 0, 0, 0.501178,-99) , 
10, 7.73029, 0, 0, 0.502401,-99) , 
NN(
0, 
0, 
-1, 13.3994, 0, -1, 0.488341,-99) , 
9, 13.6022, 1, 0, 0.501475,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.00708382);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.84547, 1, 1, 0.511461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511312,-99) , 
NN(
0, 
0, 
-1, -1.02433, 0, -1, 0.497528,-99) , 
10, 10.3987, 0, 0, 0.49836,-99) , 
2, -0.214146, 1, 0, 0.49919,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0135093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495615,-99) , 
10, 4.97336, 1, 0, 0.512481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489954,-99) , 
5, -0.353024, 1, 0, 0.499382,-99) , 
8, 1.00003, 0, 0, 0.502968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527586,-99) , 
NN(
0, 
0, 
-1, 0.999365, 0, -1, 0.496626,-99) , 
4, 0.996667, 1, 0, 0.498184,-99) , 
10, 1.90471, 0, 0, 0.500474,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0109243);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494731,-99) , 
10, 0.839972, 0, 0, 0.500305,-99) , 
NN(
0, 
0, 
-1, 1.16333, 1, -1, 0.494481,-99) , 
10, 3.0685, 1, 0, 0.498588,-99) , 
8, 1.85707, 0, 0, 0.499122,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00792978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.25255, 1, 1, 0.503073,-99) , 
NN(
0, 
0, 
-1, 0.498083, 1, -1, 0.489069,-99) , 
10, -0.874518, 0, 0, 0.502257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480014,-99) , 
5, -0.771067, 1, 0, 0.492141,-99) , 
9, 10.9882, 1, 0, 0.501406,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0166939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496276,-99) , 
8, -0.714343, 1, 0, 0.500507,-99) , 
9, 0.913352, 0, 0, 0.50325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485111,-99) , 
6, 0.00680246, 1, 0, 0.494772,-99) , 
6, 0.023809, 0, 0, 0.496719,-99) , 
5, -0.0992574, 0, 0, 0.499891,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0094248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487594,-99) , 
5, -0.535222, 0, 0, 0.501018,-99) , 
10, 7.48256, 0, 0, 0.502063,-99) , 
NN(
0, 
0, 
-1, 21.347, 0, -1, 0.488202,-99) , 
9, 13.4398, 1, 0, 0.501137,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.012997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499562,-99) , 
8, -0.429657, 1, 0, 0.510953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484214,-99) , 
10, 7.36558, 0, 0, 0.492091,-99) , 
7, -43.5495, 1, 0, 0.50387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490642,-99) , 
0, 0.497138, 0, 0, 0.496269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474454,-99) , 
10, 3.65382, 1, 0, 0.494877,-99) , 
9, 3.59321, 0, 0, 0.496736,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00823962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497046,-99) , 
0, 0.499995, 0, 0, 0.49872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466537,-99) , 
10, -1.10038, 0, 0, 0.497712,-99) , 
8, -2.14285, 1, 0, 0.498339,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0125454);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497354,-99) , 
3, 2.56166, 1, 0, 0.510752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495914,-99) , 
3, 9.32771, 0, 0, 0.496709,-99) , 
10, 8.56605, 0, 0, 0.497972,-99) , 
NN(
0, 
0, 
-1, 0.435766, 0, -1, 0.480893,-99) , 
4, 0.998571, 0, 0, 0.496777,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00825887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498626,-99) , 
4, 0.999524, 1, 0, 0.500858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484827,-99) , 
3, 9.36329, 1, 0, 0.500196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480573,-99) , 
1, -0.0243381, 0, 0, 0.499612,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.00963384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.33156, 0, 1, 0.503766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479325,-99) , 
5, -0.191856, 0, 0, 0.494134,-99) , 
4, 0.99966, 0, 0, 0.502276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480178,-99) , 
4, 0.997619, 0, 0, 0.501377,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00705851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491441,-99) , 
10, -0.282059, 0, 0, 0.50032,-99) , 
4, 0.997619, 1, 0, 0.501242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486188,-99) , 
3, 8.9993, 1, 0, 0.500553,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00930616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498457,-99) , 
3, 1.00938, 1, 0, 0.501049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482628,-99) , 
3, 9.37264, 1, 0, 0.500316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478012,-99) , 
0, 0.505709, 1, 0, 0.499573,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00653593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499361,-99) , 
3, 8.75085, 0, 0, 0.500506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47748,-99) , 
10, 0.948722, 0, 0, 0.492385,-99) , 
4, 0.999274, 0, 0, 0.499711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476025,-99) , 
4, 0.996191, 0, 0, 0.499109,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0100835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.257906, 0, 1, 0.506464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496239,-99) , 
5, 0.0808635, 0, 0, 0.498516,-99) , 
0, 0.496412, 1, 0, 0.501113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472551,-99) , 
0, 0.489519, 0, 0, 0.500393,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00903821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01764, 0, 1, 0.514744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498576,-99) , 
0, 0.490471, 1, 0, 0.499333,-99) , 
4, 0.999524, 1, 0, 0.501814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486243,-99) , 
3, 9.37264, 1, 0, 0.501174,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.00486764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528752,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.501074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489373,-99) , 
3, 9.23016, 1, 0, 0.500571,-99) , 
8, -2.14285, 1, 0, 0.501553,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00617886);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499148,-99) , 
3, 8.28806, 0, 0, 0.499985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483576,-99) , 
4, 0.999252, 0, 0, 0.499135,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.487235,-99) , 
4, 0.998571, 0, 0, 0.498295,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0183223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491575,-99) , 
10, 5.21147, 1, 0, 0.50246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475466,-99) , 
8, 2.11556, 1, 0, 0.501496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491809,-99) , 
7, -949.657, 0, 0, 0.501698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45308,-99) , 
10, 2.82827, 0, 0, 0.483347,-99) , 
9, 0.564495, 1, 0, 0.496022,-99) , 
8, -0.714319, 0, 0, 0.499983,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00887048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.58561, 0, 1, 0.50329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475925,-99) , 
5, -0.107046, 0, 0, 0.488434,-99) , 
3, 6.73506, 1, 0, 0.502417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482114,-99) , 
3, 9.37599, 1, 0, 0.501587,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0154515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.654513, 1, 1, 0.513717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488386,-99) , 
5, -0.818517, 1, 0, 0.496139,-99) , 
9, 12.5096, 1, 0, 0.507345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513827,-99) , 
NN(
0, 
0, 
-1, -0.624432, 1, -1, 0.493681,-99) , 
9, 2.74211, 0, 0, 0.494575,-99) , 
9, 3.67237, 0, 0, 0.497151,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.00622042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.996191, 1, 1, 0.502658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486452,-99) , 
3, 9.37525, 1, 0, 0.501984,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00786104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.29602, 0, 1, 0.502602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472181,-99) , 
10, 1.30299, 0, 0, 0.490753,-99) , 
4, 0.999388, 0, 0, 0.501784,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.491537,-99) , 
4, 0.998571, 0, 0, 0.50105,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0166706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471861,-99) , 
8, -0.677042, 1, 0, 0.495545,-99) , 
10, 0.0351834, 0, 0, 0.504473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49506,-99) , 
4, 0.999864, 1, 0, 0.497101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478823,-99) , 
4, 0.998571, 0, 0, 0.496075,-99) , 
9, -1.66992, 1, 0, 0.497551,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00931112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.62129, 1, 1, 0.512546,-99) , 
NN(
0, 
0, 
-1, -1.18798, 0, -1, 0.497813,-99) , 
9, 2.5785, 0, 0, 0.500819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488683,-99) , 
9, 16.673, 1, 0, 0.500205,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0116362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498457,-99) , 
9, 15.8213, 1, 0, 0.510645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485462,-99) , 
10, -0.935579, 0, 0, 0.510675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491465,-99) , 
10, 0.920779, 0, 0, 0.498151,-99) , 
9, -2.42599, 1, 0, 0.499209,-99) , 
10, 8.63483, 0, 0, 0.500171,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00805077);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499008,-99) , 
9, 2.79025, 0, 0, 0.500708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47321,-99) , 
9, 9.45494, 1, 0, 0.499605,-99) , 
10, 10.3987, 0, 0, 0.500483,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.00575384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499036,-99) , 
9, -2.14647, 1, 0, 0.499993,-99) , 
4, 0.997143, 1, 0, 0.500687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485023,-99) , 
3, 9.33032, 1, 0, 0.500039,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.00826711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.507561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498379,-99) , 
2, 0.0202406, 0, 0, 0.500946,-99) , 
2, -0.0850365, 1, 0, 0.502043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483217,-99) , 
2, 0.357166, 1, 0, 0.50154,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0106749);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517548,-99) , 
NN(
NN(
0, 
0, 
-1, 6.80245, 0, 1, 0.503298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460393,-99) , 
10, 1.26743, 0, 0, 0.497404,-99) , 
8, 0.700635, 1, 0, 0.502029,-99) , 
8, 1.85708, 0, 0, 0.502725,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0109072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499499,-99) , 
4, 0.999994, 0, 0, 0.503365,-99) , 
NN(
0, 
0, 
-1, -0.254148, 0, -1, 0.492081,-99) , 
4, 0.999864, 0, 0, 0.500588,-99) , 
NN(
0, 
0, 
-1, 0.428543, 1, -1, 0.488837,-99) , 
4, 0.998572, 0, 0, 0.499754,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0132817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479739,-99) , 
4, 0.999274, 0, 0, 0.502201,-99) , 
4, 0.998095, 1, 0, 0.50323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474949,-99) , 
4, 0.999048, 0, 0, 0.499874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469228,-99) , 
10, 1.05286, 0, 0, 0.49587,-99) , 
8, 0.42852, 1, 0, 0.500784,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.00950582);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.289876, 0, 1, 0.510831,-99) , 
NN(
NN(
0, 
0, 
-1, -0.234013, 1, 1, 0.502788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489478,-99) , 
10, 11.4886, 0, 0, 0.494019,-99) , 
10, 4.41444, 1, 0, 0.500888,-99) , 
8, -1.85717, 1, 0, 0.501464,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0120677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492406,-99) , 
9, 15.8213, 1, 0, 0.50653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497389,-99) , 
9, -1.40518, 1, 0, 0.500206,-99) , 
NN(
0, 
0, 
-1, -1.19234, 0, -1, 0.486237,-99) , 
10, -0.772374, 0, 0, 0.499248,-99) , 
10, 8.63483, 0, 0, 0.499864,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00790543);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514058,-99) , 
NN(
NN(
0, 
0, 
-1, 2.76013, 0, 1, 0.502345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469762,-99) , 
9, 10.8104, 1, 0, 0.501054,-99) , 
10, 11.5806, 0, 0, 0.50167,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00435997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.501204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485155,-99) , 
5, 0.617197, 1, 0, 0.500551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488168,-99) , 
4, 0.997619, 0, 0, 0.500033,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0133138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.682182, 1, 1, 0.508317,-99) , 
NN(
0, 
0, 
-1, 20.5053, 1, -1, 0.49317,-99) , 
9, 12.5096, 1, 0, 0.502852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495499,-99) , 
9, 1.81179, 0, 0, 0.496605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477128,-99) , 
10, 3.62361, 1, 0, 0.49525,-99) , 
9, 3.67237, 0, 0, 0.496782,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0048555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513542,-99) , 
NN(
0, 
0, 
-1, 9.06832, 1, -1, 0.499157,-99) , 
10, 10.3987, 0, 0, 0.500052,-99) , 
NN(
0, 
0, 
-1, 0.440744, 0, -1, 0.482779,-99) , 
4, 0.998095, 0, 0, 0.499172,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0222355);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493722,-99) , 
10, 5.03204, 1, 0, 0.506613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480612,-99) , 
10, 0.467997, 0, 0, 0.504167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482132,-99) , 
9, -0.550368, 1, 0, 0.494469,-99) , 
10, 6.62794, 0, 0, 0.496647,-99) , 
8, -0.142899, 0, 0, 0.500666,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0101369);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496423,-99) , 
9, -0.741633, 1, 0, 0.499436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482106,-99) , 
9, 9.56408, 1, 0, 0.498677,-99) , 
10, 10.8529, 0, 0, 0.499571,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.00834005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499646,-99) , 
4, 0.999909, 0, 0, 0.509634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497331,-99) , 
3, 9.31837, 0, 0, 0.498036,-99) , 
0, 0.491424, 1, 0, 0.498762,-99) , 
NN(
0, 
0, 
-1, 0.437514, 1, -1, 0.484852,-99) , 
4, 0.998095, 0, 0, 0.498055,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.00430613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480463,-99) , 
4, 0.998095, 0, 0, 0.499382,-99) , 
5, 0.621209, 0, 0, 0.500062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480112,-99) , 
0, 0.505709, 1, 0, 0.499397,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00899956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493994,-99) , 
9, 11.1584, 1, 0, 0.502583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481423,-99) , 
8, -0.742218, 1, 0, 0.494285,-99) , 
10, -0.184395, 0, 0, 0.501522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482448,-99) , 
0, 0.505709, 1, 0, 0.500876,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0141751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477643,-99) , 
5, -0.612966, 0, 0, 0.502083,-99) , 
10, 6.82379, 0, 0, 0.504166,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49632,-99) , 
10, 10.0171, 0, 0, 0.498385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470334,-99) , 
10, 0.778848, 0, 0, 0.495174,-99) , 
8, 0.142862, 1, 0, 0.500285,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0144484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49586,-99) , 
4, 0.999995, 0, 0, 0.512507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486868,-99) , 
4, 0.999905, 0, 0, 0.507341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496721,-99) , 
9, -2.02686, 1, 0, 0.498469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468571,-99) , 
10, -1.26503, 0, 0, 0.497411,-99) , 
5, -0.549318, 1, 0, 0.499108,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.013561);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.503983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482922,-99) , 
9, -2.55201, 1, 0, 0.498373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47114,-99) , 
10, -1.1381, 0, 0, 0.491341,-99) , 
10, -0.108509, 0, 0, 0.502221,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.00786005);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51527,-99) , 
NN(
0, 
0, 
-1, 0.341857, 0, -1, 0.497177,-99) , 
9, -2.71395, 1, 0, 0.498158,-99) , 
10, 12.1625, 0, 0, 0.498816,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.015572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499542,-99) , 
9, 20.9167, 1, 0, 0.509687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496466,-99) , 
9, -1.7756, 1, 0, 0.498605,-99) , 
10, 9.45226, 0, 0, 0.499529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466991,-99) , 
9, -3.00295, 1, 0, 0.484789,-99) , 
10, -0.433428, 0, 0, 0.490525,-99) , 
10, -0.0983186, 0, 0, 0.498269,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0104432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.52712, 0, 1, 0.502217,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.490275,-99) , 
9, 13.6181, 1, 0, 0.501307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486924,-99) , 
9, -2.59039, 1, 0, 0.500914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473863,-99) , 
10, -1.15829, 0, 0, 0.493839,-99) , 
10, -0.151367, 0, 0, 0.500314,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00938777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.57, 0, 1, 0.50244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466906,-99) , 
5, 0.351526, 1, 0, 0.493048,-99) , 
8, 1.28564, 1, 0, 0.501156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475664,-99) , 
4, 0.999864, 0, 0, 0.498021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476946,-99) , 
4, 0.999524, 0, 0, 0.49302,-99) , 
10, 0.0152124, 0, 0, 0.499869,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.00793294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512623,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.498639,-99) , 
5, 0.621209, 0, 0, 0.499337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504731,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.482273,-99) , 
10, 2.87611, 0, 0, 0.489996,-99) , 
0, 0.501899, 1, 0, 0.497653,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.00767314);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521194,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999047, 1, 1, 0.507894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490665,-99) , 
10, 0.492848, 0, 0, 0.497977,-99) , 
2, -0.0713807, 1, 0, 0.499757,-99) , 
8, -2.14284, 1, 0, 0.500486,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.00599079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497252,-99) , 
5, -0.282735, 0, 0, 0.509928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484878,-99) , 
9, 15.2486, 1, 0, 0.499746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478713,-99) , 
10, -0.870376, 0, 0, 0.498892,-99) , 
8, -1.85714, 1, 0, 0.499523,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0116566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.628545, 1, 1, 0.510733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474113,-99) , 
10, 10.7675, 0, 0, 0.493797,-99) , 
9, 10.2882, 1, 0, 0.504425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484305,-99) , 
8, -1.57145, 0, 0, 0.49918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461905,-99) , 
10, 3.50699, 1, 0, 0.497721,-99) , 
9, 2.65318, 0, 0, 0.499331,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0146077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494737,-99) , 
9, -1.51339, 1, 0, 0.496411,-99) , 
10, 11.3248, 0, 0, 0.497126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480234,-99) , 
10, -1.10408, 0, 0, 0.494905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472541,-99) , 
8, -0.554369, 1, 0, 0.488959,-99) , 
10, -0.0754814, 0, 0, 0.495953,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0109044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48889,-99) , 
10, 0.678815, 0, 0, 0.498684,-99) , 
8, -2.14286, 1, 0, 0.499459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47687,-99) , 
4, 0.996667, 0, 0, 0.498794,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.00778114);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498737,-99) , 
4, 0.999048, 1, 0, 0.500448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483608,-99) , 
3, 8.77463, 1, 0, 0.499605,-99) , 
8, -2.14287, 1, 0, 0.500224,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00933898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496206,-99) , 
7, -948.705, 1, 0, 0.500343,-99) , 
8, -1.85715, 1, 0, 0.500997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509698,-99) , 
NN(
0, 
0, 
-1, -0.0786297, 1, -1, 0.487848,-99) , 
2, 0.0709649, 0, 0, 0.493126,-99) , 
0, 0.493328, 0, 0, 0.499933,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00696145);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493522,-99) , 
3, 4.87744, 1, 0, 0.511325,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.497929,-99) , 
2, -0.21416, 1, 0, 0.498781,-99) , 
8, -2.14286, 1, 0, 0.499331,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.00628884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526517,-99) , 
NN(
0, 
0, 
-1, -0.54538, 0, -1, 0.498771,-99) , 
10, 7.85131, 0, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483867,-99) , 
9, 15.3105, 1, 0, 0.499108,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0134135);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494244,-99) , 
10, 3.22498, 1, 0, 0.502219,-99) , 
NN(
0, 
0, 
-1, 4.46431, 1, -1, 0.492924,-99) , 
4, 0.999819, 0, 0, 0.500164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484177,-99) , 
4, 0.998095, 0, 0, 0.499353,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00522461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0122252, 0, 1, 0.501644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475556,-99) , 
1, 0.026467, 1, 0, 0.500958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48615,-99) , 
1, -0.0233781, 0, 0, 0.500488,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0111731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.85629, 0, 1, 0.517249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4867,-99) , 
10, 11.8021, 0, 0, 0.500174,-99) , 
9, 10.4462, 1, 0, 0.507912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499298,-99) , 
9, 2.58548, 0, 0, 0.501363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474871,-99) , 
10, 4.53622, 1, 0, 0.500027,-99) , 
9, 5.29659, 0, 0, 0.50129,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0158896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142835, 1, 1, 0.514473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494129,-99) , 
6, 0.00680103, 1, 0, 0.502054,-99) , 
6, 0.0238036, 0, 0, 0.502884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468287,-99) , 
7, -948.91, 0, 0, 0.482832,-99) , 
9, -2.92528, 1, 0, 0.490737,-99) , 
10, -0.271317, 0, 0, 0.501466,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.00697122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.1837, 0, 1, 0.512379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492488,-99) , 
9, 9.06514, 1, 0, 0.500849,-99) , 
8, -1.85717, 1, 0, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479449,-99) , 
4, 0.99619, 0, 0, 0.500957,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.00925593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499412,-99) , 
5, -0.0194413, 0, 0, 0.512197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497084,-99) , 
2, 0.276021, 0, 0, 0.498065,-99) , 
2, -0.213537, 1, 0, 0.498872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484667,-99) , 
3, 9.377, 1, 0, 0.498296,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0113808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.66828, 1, 1, 0.510872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487895,-99) , 
2, -0.20768, 0, 0, 0.499077,-99) , 
3, 4.54799, 1, 0, 0.506042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495128,-99) , 
5, -0.370866, 1, 0, 0.497123,-99) , 
8, -2.14286, 1, 0, 0.497904,-99) , 
2, -0.071662, 1, 0, 0.499367,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.00840041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499154,-99) , 
10, 8.30548, 0, 0, 0.50996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493066,-99) , 
8, 1.00152, 1, 0, 0.506303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479663,-99) , 
3, 9.37657, 1, 0, 0.500159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483962,-99) , 
10, 3.72946, 1, 0, 0.499071,-99) , 
9, 3.89576, 0, 0, 0.50048,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0169454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492684,-99) , 
9, 14.0942, 1, 0, 0.502094,-99) , 
5, -0.410028, 0, 0, 0.506502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492326,-99) , 
7, -948.705, 0, 0, 0.497158,-99) , 
9, -2.98705, 1, 0, 0.498176,-99) , 
9, 2.63971, 0, 0, 0.500194,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0117223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476662,-99) , 
10, -1.03463, 0, 0, 0.50228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485121,-99) , 
7, -951.227, 1, 0, 0.495133,-99) , 
10, 3.1617, 1, 0, 0.500244,-99) , 
8, 1.85714, 0, 0, 0.50077,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0130579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.796296, 0, 1, 0.511996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49705,-99) , 
9, -1.837, 1, 0, 0.499116,-99) , 
10, 9.39077, 0, 0, 0.500174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471807,-99) , 
7, -948.91, 0, 0, 0.484787,-99) , 
9, -2.90455, 1, 0, 0.491092,-99) , 
10, -0.184395, 0, 0, 0.499002,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.00860645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.277069, 0, 1, 0.511327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486744,-99) , 
9, 15.5481, 1, 0, 0.501362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48431,-99) , 
10, -0.684721, 0, 0, 0.500548,-99) , 
8, -1.57143, 1, 0, 0.501539,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.00901866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494134,-99) , 
10, 3.09668, 1, 0, 0.499583,-99) , 
8, 1.85714, 0, 0, 0.500263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505949,-99) , 
NN(
0, 
0, 
-1, 1.9824, 0, -1, 0.480874,-99) , 
3, 4.18626, 0, 0, 0.48928,-99) , 
0, 0.503804, 1, 0, 0.499289,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0105415);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492475,-99) , 
9, -1.88215, 0, 0, 0.506716,-99) , 
NN(
0, 
0, 
-1, -2.07484, 0, -1, 0.496678,-99) , 
5, 0.437496, 0, 0, 0.497914,-99) , 
8, 1.85714, 0, 0, 0.498768,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0126259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.1106, 0, 1, 0.506294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483197,-99) , 
8, -1.36661, 1, 0, 0.492027,-99) , 
8, -0.71365, 0, 0, 0.504062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480372,-99) , 
8, -1.86035, 0, 0, 0.499763,-99) , 
NN(
0, 
0, 
-1, 0.684528, 0, -1, 0.480854,-99) , 
0, 0.502852, 1, 0, 0.497409,-99) , 
10, 1.90471, 0, 0, 0.500604,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0117313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493129,-99) , 
9, 15.5888, 1, 0, 0.511074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491946,-99) , 
8, 1.00039, 1, 0, 0.507007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498166,-99) , 
9, -2.15953, 1, 0, 0.499697,-99) , 
NN(
0, 
0, 
-1, -18.1946, 1, -1, 0.484355,-99) , 
10, -0.638702, 0, 0, 0.498336,-99) , 
9, 5.28899, 0, 0, 0.499722,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.00977326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.33204, 0, 1, 0.50372,-99) , 
NN(
0, 
0, 
-1, 0.123622, 0, -1, 0.493146,-99) , 
4, 0.999796, 0, 0, 0.501732,-99) , 
NN(
0, 
0, 
-1, 0.350964, 0, -1, 0.487516,-99) , 
4, 0.998571, 0, 0, 0.500728,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0107674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497665,-99) , 
9, 18.0611, 1, 0, 0.507555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495234,-99) , 
6, 0.00566478, 0, 0, 0.498734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483201,-99) , 
6, 0.0237926, 1, 0, 0.498024,-99) , 
10, 9.0539, 0, 0, 0.498762,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.00783918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497391,-99) , 
4, 0.999047, 1, 0, 0.502177,-99) , 
0, 0.493328, 1, 0, 0.50621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498258,-99) , 
5, -0.730073, 1, 0, 0.498978,-99) , 
10, 12.0206, 0, 0, 0.499475,-99) , 
2, -0.0709387, 1, 0, 0.500692,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0123464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.815197, 0, 1, 0.513144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499312,-99) , 
9, -1.32021, 1, 0, 0.501507,-99) , 
10, 9.85849, 0, 0, 0.502445,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.510276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474135,-99) , 
9, -1.72716, 0, 0, 0.484737,-99) , 
9, -2.57688, 1, 0, 0.493701,-99) , 
10, 0.151697, 0, 0, 0.500876,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_2_4_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_2_4_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_2_4_noP *ReadBDT_maker_LHC19c2a_2_4_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_2_4_noP(theInpVar);
  }
}
