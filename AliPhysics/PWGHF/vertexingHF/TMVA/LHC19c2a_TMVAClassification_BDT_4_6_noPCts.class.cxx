#include "LHC19c2a_TMVAClassification_BDT_4_6_noPCts.class.h"

double ReadBDT_LHC19c2a_4_6_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_4_6_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.410869466280946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.727885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266814,-99) , 
4, 0.999524, 0, 0, 0.674094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375586,-99) , 
8, -2.74869, 1, 0, 0.422109,-99) , 
NN(
0, 
0, 
-1, 0.545478, 1, -1, 0.108193,-99) , 
4, 0.999524, 0, 0, 0.37829,-99) , 
6, -948.956, 0, 0, 0.499265,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.322793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.687625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.794077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423295,-99) , 
9, 4.60449, 0, 0, 0.458263,-99) , 
6, -948.87, 0, 0, 0.552819,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.193634,-99) , 
4, 0.999524, 0, 0, 0.507821,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.275955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281397,-99) , 
7, 1.84355, 1, 0, 0.576253,-99) , 
NN(
0, 
0, 
-1, -2.2925, 0, -1, 0.258181,-99) , 
7, -1.8571, 0, 0, 0.555791,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.223091,-99) , 
4, 0.999524, 0, 0, 0.514843,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.24468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.624784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.749477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432407,-99) , 
8, 2.91335, 0, 0, 0.465647,-99) , 
6, -949.754, 0, 0, 0.530565,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.250802,-99) , 
4, 0.999524, 0, 0, 0.496794,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.184143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.7076, 1, 1, 0.71497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.211497,-99) , 
7, -1.57143, 0, 0, 0.507437,-99) , 
8, -3.10801, 1, 0, 0.533495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257923,-99) , 
8, -2.84559, 1, 0, 0.372439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.150915,-99) , 
9, 0.372144, 1, 0, 0.275364,-99) , 
4, 0.999524, 0, 0, 0.50307,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.209361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.77902, 1, 1, 0.649364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441203,-99) , 
9, 3.95106, 0, 0, 0.471588,-99) , 
8, -2.74869, 1, 0, 0.505454,-99) , 
NN(
0, 
0, 
-1, 0.504745, 1, -1, 0.213678,-99) , 
4, 0.999048, 0, 0, 0.484003,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.199599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324142,-99) , 
7, -1.85714, 0, 0, 0.563355,-99) , 
NN(
0, 
0, 
-1, -0.788194, 1, -1, 0.413155,-99) , 
4, 0.999955, 0, 0, 0.517752,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.232895,-99) , 
4, 0.999048, 0, 0, 0.497249,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.134426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267525,-99) , 
7, -2.02041, 0, 0, 0.521729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215248,-99) , 
7, 2.14284, 1, 0, 0.50987,-99) , 
NN(
0, 
0, 
-1, -0.00480202, 1, -1, 0.249952,-99) , 
4, 0.999048, 0, 0, 0.491699,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.109467);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.78675, 1, 1, 0.680299,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.458734,-99) , 
8, -3.33543, 1, 0, 0.479849,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.115751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.65266, 1, 1, 0.665272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292177,-99) , 
7, -1.28567, 0, 0, 0.486845,-99) , 
8, -3.20228, 1, 0, 0.506268,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.269589,-99) , 
4, 0.999048, 0, 0, 0.489902,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.111306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.84983, 1, 1, 0.651324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260997,-99) , 
7, -1.47619, 0, 0, 0.482645,-99) , 
8, -3.28872, 1, 0, 0.501383,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.29895,-99) , 
7, 1.57143, 1, 0, 0.481423,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.180219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.728196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466774,-99) , 
7, -0.875439, 0, 0, 0.561743,-99) , 
8, -3.79711, 1, 0, 0.626534,-99) , 
NN(
NN(
0, 
0, 
-1, 0.142823, 1, 1, 0.634791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380887,-99) , 
6, -950.098, 0, 0, 0.429475,-99) , 
8, 2.80755, 0, 0, 0.451446,-99) , 
8, -3.19669, 1, 0, 0.471173,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.108945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493292,-99) , 
8, 2.79563, 0, 0, 0.510372,-99) , 
NN(
0, 
0, 
-1, -1.14058, 1, -1, 0.385069,-99) , 
4, 0.999909, 0, 0, 0.484744,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.268593,-99) , 
4, 0.999048, 0, 0, 0.469953,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.112519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370361,-99) , 
4, 0.999909, 0, 0, 0.481755,-99) , 
8, -3.39785, 1, 0, 0.497279,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.279082,-99) , 
4, 0.999048, 0, 0, 0.482635,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0969515);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.71932, 0, 1, 0.649103,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.460951,-99) , 
8, -3.39785, 1, 0, 0.476809,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.21056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426907,-99) , 
5, 0.00453374, 0, 0, 0.507492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26573,-99) , 
5, 0.0238025, 1, 0, 0.49671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230208,-99) , 
7, 2.14282, 1, 0, 0.486222,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.165366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459334,-99) , 
5, 0.00566589, 0, 0, 0.514807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295313,-99) , 
5, 0.0237968, 1, 0, 0.505085,-99) , 
NN(
0, 
0, 
-1, 0.274257, 1, -1, 0.313275,-99) , 
4, 0.999048, 0, 0, 0.492271,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0915595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.724995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429074,-99) , 
8, -3.79714, 1, 0, 0.58202,-99) , 
9, -1.47446, 0, 0, 0.638646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280335,-99) , 
4, 0.999048, 0, 0, 0.493609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.154571,-99) , 
7, -2.14282, 0, 0, 0.48376,-99) , 
8, -3.19669, 1, 0, 0.501429,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.102873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.708243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.704713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448844,-99) , 
8, -3.74203, 1, 0, 0.552046,-99) , 
9, -1.0903, 0, 0, 0.599994,-99) , 
NN(
0, 
0, 
-1, -1.57139, 0, -1, 0.467468,-99) , 
8, -2.88184, 1, 0, 0.490073,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0992388);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48678,-99) , 
8, -2.29681, 1, 0, 0.517723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.243362,-99) , 
7, -2.26527, 0, 0, 0.510201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.259668,-99) , 
7, 2.14282, 1, 0, 0.5007,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.100464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.323239,-99) , 
5, 0.0238076, 1, 0, 0.521867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251865,-99) , 
7, -2.26519, 0, 0, 0.514467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272145,-99) , 
7, 2.14286, 1, 0, 0.505332,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.109088);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341673,-99) , 
5, 0.0238076, 1, 0, 0.525016,-99) , 
NN(
0, 
0, 
-1, -0.845233, 1, -1, 0.411277,-99) , 
4, 0.999864, 0, 0, 0.507552,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.334059,-99) , 
4, 0.999048, 0, 0, 0.496393,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.124873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338362,-99) , 
5, 0.0238076, 1, 0, 0.522482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305531,-99) , 
6, -951.286, 0, 0, 0.390574,-99) , 
7, -1.25851, 0, 0, 0.503379,-99) , 
NN(
0, 
0, 
-1, 2.31972, 1, -1, 0.361573,-99) , 
7, 1.57142, 1, 0, 0.489869,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.140998);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461125,-99) , 
4, 0.999955, 0, 0, 0.577977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390743,-99) , 
8, -1.28208, 1, 0, 0.473181,-99) , 
9, 2.84699, 0, 0, 0.489314,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.334227,-99) , 
4, 0.999048, 0, 0, 0.479324,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0861908);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57453, 0, 1, 0.590734,-99) , 
NN(
0, 
0, 
-1, -0.999998, 0, -1, 0.462211,-99) , 
8, -3.29181, 1, 0, 0.474833,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.120087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500946, 1, 1, 0.583984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422055,-99) , 
8, -1.67504, 1, 0, 0.475679,-99) , 
8, 1.39179, 0, 0, 0.491553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283593,-99) , 
7, -2.14279, 0, 0, 0.484984,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0877342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351433,-99) , 
5, 0.0238025, 1, 0, 0.50926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330725,-99) , 
7, 2.04759, 1, 0, 0.499846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521015,-99) , 
NN(
0, 
0, 
-1, -1.13448, 1, -1, 0.348522,-99) , 
6, -951.286, 0, 0, 0.40853,-99) , 
7, -1.00001, 0, 0, 0.483282,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.10477);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.143538, 1, 1, 0.581895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654778,-99) , 
NN(
0, 
0, 
-1, -0.999977, 0, -1, 0.455688,-99) , 
8, -3.84085, 1, 0, 0.464265,-99) , 
8, 2.79351, 0, 0, 0.475457,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.101091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479076,-99) , 
4, 0.999994, 0, 0, 0.513401,-99) , 
NN(
0, 
0, 
-1, -0.839521, 1, -1, 0.431633,-99) , 
4, 0.999932, 0, 0, 0.492322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312935,-99) , 
4, 0.998571, 0, 0, 0.484921,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0506638);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308538,-99) , 
7, 2.2653, 1, 0, 0.503157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313576,-99) , 
7, -2.14285, 0, 0, 0.497354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327541,-99) , 
4, 0.998571, 0, 0, 0.490356,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0915885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371506,-99) , 
5, 0.0238076, 1, 0, 0.51422,-99) , 
NN(
0, 
0, 
-1, -948.87, 0, -1, 0.418478,-99) , 
7, 1.28571, 1, 0, 0.497992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515845,-99) , 
NN(
0, 
0, 
-1, -1.0133, 1, -1, 0.362529,-99) , 
6, -951.286, 0, 0, 0.416599,-99) , 
7, -0.999998, 0, 0, 0.483282,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0740925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491249,-99) , 
9, 2.95828, 0, 0, 0.50372,-99) , 
NN(
0, 
0, 
-1, -1.07241, 1, -1, 0.431455,-99) , 
4, 0.999932, 0, 0, 0.485096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330122,-99) , 
4, 0.998572, 0, 0, 0.478732,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0794854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494495,-99) , 
4, 0.999997, 0, 0, 0.512779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421824,-99) , 
8, -3.18834, 1, 0, 0.441747,-99) , 
4, 0.999932, 0, 0, 0.494501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335147,-99) , 
4, 0.998571, 0, 0, 0.48801,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0872587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386864,-99) , 
7, 2.11564, 1, 0, 0.516123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417491,-99) , 
8, -3.26541, 1, 0, 0.450006,-99) , 
7, -0.714256, 0, 0, 0.499434,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.371978,-99) , 
4, 0.999048, 0, 0, 0.491515,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0558186);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.5406, 0, 1, 0.559788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374535,-99) , 
9, -0.668521, 0, 0, 0.487198,-99) , 
NN(
0, 
0, 
-1, -2.04763, 0, -1, 0.340107,-99) , 
7, -1.57143, 0, 0, 0.478297,-99) , 
8, -3.20228, 1, 0, 0.487391,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0672046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391737,-99) , 
5, 0.0238024, 1, 0, 0.505118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423055,-99) , 
8, -3.18834, 1, 0, 0.438982,-99) , 
4, 0.999932, 0, 0, 0.488102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355435,-99) , 
4, 0.998571, 0, 0, 0.482702,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.127935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00825796, 0, 1, 0.538839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408532,-99) , 
8, -3.42585, 1, 0, 0.420152,-99) , 
5, 0.00340034, 0, 0, 0.484129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358438,-99) , 
5, 0.0238024, 1, 0, 0.478929,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0485899);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.475724,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0694647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475587,-99) , 
8, -2.29681, 1, 0, 0.491414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341683,-99) , 
7, -2.1428, 0, 0, 0.486944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350357,-99) , 
4, 0.998571, 0, 0, 0.481579,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0497299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395698,-99) , 
5, 0.0238024, 1, 0, 0.501826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375813,-99) , 
4, 0.998571, 0, 0, 0.49673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517934,-99) , 
NN(
0, 
0, 
-1, -0.971401, 1, -1, 0.369077,-99) , 
6, -951.286, 0, 0, 0.418442,-99) , 
7, -1.28568, 0, 0, 0.487183,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0685422);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471633,-99) , 
0, 0.499043, 1, 0, 0.498256,-99) , 
NN(
0, 
0, 
-1, -0.755104, 1, -1, 0.431691,-99) , 
4, 0.999864, 0, 0, 0.486868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362875,-99) , 
4, 0.998571, 0, 0, 0.482023,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0470828);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460759,-99) , 
7, -0.463548, 0, 0, 0.490855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338315,-99) , 
7, 2.26528, 1, 0, 0.486643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346169,-99) , 
7, -2.14282, 0, 0, 0.482481,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.03544);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14282, 0, -1, 0.482287,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0603418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428846, 1, 1, 0.546975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429756,-99) , 
8, -0.998496, 1, 0, 0.48012,-99) , 
8, 1.38699, 0, 0, 0.489922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349462,-99) , 
7, -2.1428, 0, 0, 0.485856,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0728722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.14289, 1, 1, 0.546997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612786,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.468427,-99) , 
8, -3.82182, 1, 0, 0.47481,-99) , 
8, 2.5107, 0, 0, 0.482179,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0245773);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396915,-99) , 
5, 0.0237968, 1, 0, 0.496074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358757,-99) , 
7, 2.2653, 1, 0, 0.492328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353686,-99) , 
7, -2.14285, 0, 0, 0.488357,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0268716);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14282, 0, -1, 0.486567,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0372705);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450067,-99) , 
4, 0.999796, 0, 0, 0.497805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384156,-99) , 
4, 0.998571, 0, 0, 0.493321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360085,-99) , 
7, -2.1428, 0, 0, 0.489555,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0425525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400683,-99) , 
5, 0.0237891, 1, 0, 0.499999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378362,-99) , 
7, 2.23806, 1, 0, 0.495735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355954,-99) , 
9, -0.978085, 1, 0, 0.407297,-99) , 
6, -951.286, 0, 0, 0.442265,-99) , 
7, -0.999983, 0, 0, 0.486226,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0367744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465006,-99) , 
7, -0.46351, 0, 0, 0.48985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373134,-99) , 
7, 2.2653, 1, 0, 0.486651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363149,-99) , 
7, -2.14279, 0, 0, 0.483147,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0601529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4829,-99) , 
9, -1.66176, 0, 0, 0.544881,-99) , 
NN(
0, 
0, 
-1, -1.85711, 0, -1, 0.473414,-99) , 
8, -3.33543, 1, 0, 0.479964,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0623741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475019,-99) , 
4, 0.999987, 0, 0, 0.503609,-99) , 
NN(
0, 
0, 
-1, -0.804391, 1, -1, 0.456627,-99) , 
4, 0.999932, 0, 0, 0.491628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387535,-99) , 
4, 0.998571, 0, 0, 0.487536,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0446984);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.560026,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.481079,-99) , 
8, -3.39962, 1, 0, 0.487635,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0433268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470047,-99) , 
0, 0.500947, 1, 0, 0.500187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405703,-99) , 
4, 0.998571, 0, 0, 0.496443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37691,-99) , 
7, -2.14286, 0, 0, 0.493104,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0362214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494266,-99) , 
9, -1.57823, 0, 0, 0.545694,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.489789,-99) , 
8, -3.2647, 1, 0, 0.495465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409518,-99) , 
3, 8.71744, 1, 0, 0.491386,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0564104);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492713,-99) , 
8, -1.94221, 1, 0, 0.509094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436988,-99) , 
8, -3.60433, 1, 0, 0.461671,-99) , 
7, -0.999964, 0, 0, 0.500713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403998,-99) , 
3, 9.39852, 1, 0, 0.497122,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0506931);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473717,-99) , 
9, -0.296759, 0, 0, 0.504612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386927,-99) , 
7, 2.2653, 1, 0, 0.50148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391279,-99) , 
7, -2.14281, 0, 0, 0.498417,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0248809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498389,-99) , 
8, -3.84025, 1, 0, 0.555777,-99) , 
NN(
0, 
0, 
-1, -1.8571, 0, -1, 0.495195,-99) , 
8, -3.39785, 1, 0, 0.500203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40184,-99) , 
3, 9.41378, 1, 0, 0.496579,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.028277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498258,-99) , 
8, 1.42726, 0, 0, 0.505136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395671,-99) , 
7, -2.14285, 0, 0, 0.5021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421673,-99) , 
3, 8.5394, 1, 0, 0.498109,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0539248);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47494,-99) , 
9, -0.764065, 0, 0, 0.51294,-99) , 
NN(
0, 
0, 
-1, -0.719975, 1, -1, 0.458738,-99) , 
4, 0.999796, 0, 0, 0.505971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407339,-99) , 
4, 0.998571, 0, 0, 0.502127,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0280582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.560136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375518,-99) , 
7, -1.8571, 0, 0, 0.496928,-99) , 
8, -3.33543, 1, 0, 0.502719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409056,-99) , 
3, 9.39629, 1, 0, 0.499214,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.057914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418573,-99) , 
8, -3.74203, 1, 0, 0.487688,-99) , 
9, -1.11137, 0, 0, 0.53508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398297,-99) , 
9, -0.610498, 0, 0, 0.492416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346152,-99) , 
7, -1.85714, 0, 0, 0.487188,-99) , 
8, -2.88184, 1, 0, 0.495367,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0938494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387009,-99) , 
8, -3.75347, 1, 0, 0.492003,-99) , 
9, -1.47809, 0, 0, 0.545283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437761,-99) , 
9, -0.142384, 0, 0, 0.510219,-99) , 
NN(
0, 
0, 
-1, -1.57137, 0, -1, 0.465958,-99) , 
6, -951.286, 0, 0, 0.483773,-99) , 
8, -3.15344, 1, 0, 0.491115,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.100534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0872842, 1, 1, 0.58839,-99) , 
NN(
0, 
0, 
-1, 0.00226637, 0, -1, 0.465452,-99) , 
5, 0.00679905, 0, 0, 0.496941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408763,-99) , 
5, 0.0237968, 1, 0, 0.493325,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0523363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437896,-99) , 
8, -3.74203, 1, 0, 0.498733,-99) , 
9, -1.0903, 0, 0, 0.543366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422671,-99) , 
9, -0.612782, 0, 0, 0.495844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381332,-99) , 
7, -1.85715, 0, 0, 0.491693,-99) , 
8, -2.88184, 1, 0, 0.500416,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0504943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440084,-99) , 
8, -3.74206, 1, 0, 0.498247,-99) , 
9, -1.12997, 0, 0, 0.543073,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.488301,-99) , 
8, -2.88184, 1, 0, 0.497551,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0272601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496769,-99) , 
9, -1.67206, 0, 0, 0.551934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43018,-99) , 
7, -1.85715, 0, 0, 0.500831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396879,-99) , 
4, 0.998571, 0, 0, 0.497236,-99) , 
8, -3.33543, 1, 0, 0.502251,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0246892);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.58846, 0, 1, 0.553942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421604,-99) , 
7, -1.85708, 0, 0, 0.498542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39265,-99) , 
4, 0.998571, 0, 0, 0.495024,-99) , 
8, -3.26541, 1, 0, 0.500967,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0407014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416743,-99) , 
8, -3.79714, 1, 0, 0.503697,-99) , 
9, -1.46326, 0, 0, 0.5481,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.489094,-99) , 
8, -3.19669, 1, 0, 0.49571,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0516917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448682,-99) , 
8, -3.60163, 1, 0, 0.497018,-99) , 
9, -0.914555, 0, 0, 0.536554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42957,-99) , 
4, 0.999728, 0, 0, 0.496374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395037,-99) , 
4, 0.999048, 0, 0, 0.491437,-99) , 
8, -2.7431, 1, 0, 0.500382,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0870988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439129,-99) , 
8, -3.60734, 1, 0, 0.492214,-99) , 
9, -0.9973, 0, 0, 0.534193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446397,-99) , 
9, 0.198169, 0, 0, 0.50867,-99) , 
NN(
0, 
0, 
-1, -1.57137, 0, -1, 0.472479,-99) , 
6, -949.754, 0, 0, 0.486644,-99) , 
8, -2.74869, 1, 0, 0.495887,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0649902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488519,-99) , 
5, 0.00792934, 0, 0, 0.510021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432621,-99) , 
5, 0.0237891, 1, 0, 0.506783,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.451692,-99) , 
7, 1.2857, 1, 0, 0.499231,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0482895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.11099, 1, 1, 0.61631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423789,-99) , 
8, -3.74203, 1, 0, 0.489806,-99) , 
9, -1.28774, 0, 0, 0.545594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42828,-99) , 
3, 8.5394, 1, 0, 0.500781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40863,-99) , 
7, -1.85709, 0, 0, 0.497534,-99) , 
8, -2.88184, 1, 0, 0.505606,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.082571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00841974, 0, 1, 0.532321,-99) , 
NN(
0, 
0, 
-1, 0.00107948, 0, -1, 0.444178,-99) , 
5, 0.00226687, 0, 0, 0.504296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425759,-99) , 
5, 0.0238024, 1, 0, 0.501106,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0457638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451882,-99) , 
6, -951.286, 1, 0, 0.498287,-99) , 
9, -0.949922, 0, 0, 0.532921,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.488946,-99) , 
8, -2.74869, 1, 0, 0.497521,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0294059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43055, 1, 1, 0.510072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441388,-99) , 
3, 8.71113, 1, 0, 0.50687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415907,-99) , 
7, 2.14285, 1, 0, 0.503873,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0493673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496119,-99) , 
8, -2.00037, 1, 0, 0.513479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405932,-99) , 
8, -1.50164, 1, 0, 0.471584,-99) , 
7, -1.09523, 0, 0, 0.505432,-99) , 
NN(
0, 
0, 
-1, 2.238, 1, -1, 0.469136,-99) , 
7, 0.999942, 1, 0, 0.498199,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.04654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495698,-99) , 
5, 0.00790472, 0, 0, 0.512918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43527,-99) , 
5, 0.0237169, 1, 0, 0.509829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508639,-99) , 
NN(
0, 
0, 
-1, -951.275, 0, -1, 0.466748,-99) , 
8, -2.6004, 1, 0, 0.475762,-99) , 
0, 0.500947, 1, 0, 0.501018,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0321895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.46978, 1, 1, 0.512862,-99) , 
NN(
0, 
0, 
-1, 1.28575, 1, -1, 0.480498,-99) , 
0, 0.5019, 1, 0, 0.506605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431825,-99) , 
3, 9.39629, 1, 0, 0.503915,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0574793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.111668, 1, 1, 0.57429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447159,-99) , 
5, 0.00151127, 0, 0, 0.487323,-99) , 
5, 0.0079341, 0, 0, 0.504741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43986,-99) , 
5, 0.0238024, 1, 0, 0.502088,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.042546);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49738,-99) , 
8, -2.08895, 1, 0, 0.510554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403931,-99) , 
8, -1.20048, 1, 0, 0.468895,-99) , 
7, -1.16327, 0, 0, 0.503721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509992,-99) , 
NN(
0, 
0, 
-1, 1.93877, 1, -1, 0.435536,-99) , 
6, -951.286, 0, 0, 0.464458,-99) , 
7, 1.2857, 1, 0, 0.498281,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0548044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49631,-99) , 
6, -951.256, 1, 0, 0.521626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479308,-99) , 
9, 3.2101, 0, 0, 0.48899,-99) , 
7, -0.142844, 0, 0, 0.505436,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.463059,-99) , 
7, 1.28572, 1, 0, 0.499614,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0358735);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492703,-99) , 
8, -0.411609, 1, 0, 0.512353,-99) , 
NN(
0, 
0, 
-1, 0.99999, 1, -1, 0.485776,-99) , 
0, 0.499995, 1, 0, 0.503556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442519,-99) , 
3, 8.7279, 1, 0, 0.500699,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0862582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.43508, 1, 1, 0.52618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452094,-99) , 
6, -951.256, 0, 0, 0.487332,-99) , 
8, -0.604509, 1, 0, 0.509264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464484,-99) , 
9, -1.58226, 0, 0, 0.526918,-99) , 
NN(
0, 
0, 
-1, -2.585, 1, -1, 0.437432,-99) , 
8, -3.25474, 1, 0, 0.479321,-99) , 
9, -0.658322, 0, 0, 0.502866,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0295799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605759,-99) , 
NN(
0, 
0, 
-1, 0.498095, 1, -1, 0.483491,-99) , 
9, -1.51572, 0, 0, 0.535178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462025,-99) , 
4, 0.999796, 0, 0, 0.497766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41079,-99) , 
4, 0.998571, 0, 0, 0.494889,-99) , 
8, -3.17114, 1, 0, 0.499516,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0412923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469931,-99) , 
9, -1.74828, 0, 0, 0.537333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489971,-99) , 
8, 2.66538, 0, 0, 0.495195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410557,-99) , 
4, 0.998572, 0, 0, 0.492398,-99) , 
8, -3.21586, 1, 0, 0.497229,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0300846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999997, 0, 1, 0.512393,-99) , 
NN(
0, 
0, 
-1, -0.99989, 0, -1, 0.485798,-99) , 
4, 0.999932, 0, 0, 0.505639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428607,-99) , 
4, 0.998571, 0, 0, 0.502763,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0431217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447845,-99) , 
8, -3.5579, 1, 0, 0.492476,-99) , 
9, -0.935232, 0, 0, 0.528921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421843,-99) , 
7, -1.57143, 0, 0, 0.497677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386339,-99) , 
9, -0.755273, 0, 0, 0.494118,-99) , 
8, -2.69985, 1, 0, 0.501277,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0328333);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47802,-99) , 
9, -1.74724, 0, 0, 0.535366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491677,-99) , 
8, 2.41729, 0, 0, 0.495449,-99) , 
8, -3.33104, 1, 0, 0.499068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443185,-99) , 
3, 8.72069, 1, 0, 0.496483,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0267546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0705764, 1, 1, 0.50817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45074,-99) , 
3, 9.41691, 1, 0, 0.506094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477035,-99) , 
2, -0.0712006, 1, 0, 0.484944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434525,-99) , 
7, 2.23809, 1, 0, 0.478043,-99) , 
7, 1.00001, 1, 0, 0.500481,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0365742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463724,-99) , 
8, -3.60164, 1, 0, 0.495563,-99) , 
9, -0.798169, 0, 0, 0.522249,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.491745,-99) , 
8, -2.7431, 1, 0, 0.497678,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0492696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12055, 1, 1, 0.585496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422687,-99) , 
8, -3.74203, 1, 0, 0.476208,-99) , 
9, -1.34293, 0, 0, 0.527048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489203,-99) , 
9, 2.28894, 0, 0, 0.49698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410942,-99) , 
4, 0.998571, 0, 0, 0.494328,-99) , 
8, -2.88184, 1, 0, 0.499804,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0604412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0872842, 1, 1, 0.570287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471272,-99) , 
5, 0.00301785, 0, 0, 0.489584,-99) , 
5, 0.00792187, 0, 0, 0.505663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44811,-99) , 
5, 0.0237659, 1, 0, 0.503314,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0360072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485078,-99) , 
8, -0.414467, 1, 0, 0.527027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490989,-99) , 
2, -0.0779686, 1, 0, 0.497783,-99) , 
2, 0.0716563, 0, 0, 0.50286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453221,-99) , 
3, 8.55045, 1, 0, 0.500445,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0356642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490662,-99) , 
9, -0.791829, 0, 0, 0.510833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464068,-99) , 
6, -948.87, 0, 0, 0.484793,-99) , 
7, 1.28571, 1, 0, 0.507252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454222,-99) , 
3, 9.39629, 1, 0, 0.505336,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0424863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492517,-99) , 
5, 0.0079341, 0, 0, 0.507102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456572,-99) , 
5, 0.0238024, 1, 0, 0.505007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449612,-99) , 
4, 0.998572, 0, 0, 0.502891,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0284069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49678,-99) , 
8, -0.414467, 1, 0, 0.532992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455909,-99) , 
0, 0.504757, 1, 0, 0.503176,-99) , 
2, 0.0719564, 0, 0, 0.508362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449964,-99) , 
3, 9.39629, 1, 0, 0.506263,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0415269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12421, 1, 1, 0.589575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434986,-99) , 
8, -3.74203, 1, 0, 0.487134,-99) , 
9, -1.31975, 0, 0, 0.533807,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465225,-99) , 
4, 0.999796, 0, 0, 0.500329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409491,-99) , 
4, 0.998571, 0, 0, 0.497586,-99) , 
8, -2.88184, 1, 0, 0.503608,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0348475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12424, 1, 1, 0.585545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429493,-99) , 
6, -951.286, 1, 0, 0.481943,-99) , 
9, -1.31975, 0, 0, 0.529063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470003,-99) , 
4, 0.999796, 0, 0, 0.497561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428383,-99) , 
4, 0.998571, 0, 0, 0.49544,-99) , 
8, -2.88184, 1, 0, 0.501019,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0620437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476851,-99) , 
9, -1.85519, 0, 0, 0.541265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480161,-99) , 
8, -2.13487, 1, 0, 0.50078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456001,-99) , 
6, -951.256, 0, 0, 0.478909,-99) , 
8, -0.44995, 1, 0, 0.49318,-99) , 
8, -3.39856, 1, 0, 0.49705,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0328364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466006,-99) , 
9, -1.88153, 0, 0, 0.535924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491295,-99) , 
2, 0.0721226, 0, 0, 0.495643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432967,-99) , 
4, 0.998571, 0, 0, 0.493549,-99) , 
8, -3.39785, 1, 0, 0.496991,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0248379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466608,-99) , 
7, 1.85691, 1, 0, 0.506396,-99) , 
8, -3.33104, 1, 0, 0.509829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516566,-99) , 
NN(
0, 
0, 
-1, -0.0242896, 0, -1, 0.489383,-99) , 
8, -3.1099, 1, 0, 0.492681,-99) , 
0, 0.49809, 1, 0, 0.501162,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0476975);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454744,-99) , 
6, -951.286, 0, 0, 0.540758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478071,-99) , 
4, 0.999977, 0, 0, 0.501013,-99) , 
4, 0.999524, 1, 0, 0.503577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453535,-99) , 
4, 0.998571, 0, 0, 0.501704,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0391768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.10883, 1, 1, 0.576564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431047,-99) , 
8, -3.74203, 1, 0, 0.4821,-99) , 
9, -1.28774, 0, 0, 0.523169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492151,-99) , 
2, -0.0706161, 1, 0, 0.496243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445743,-99) , 
4, 0.998572, 0, 0, 0.49469,-99) , 
8, -2.88184, 1, 0, 0.499445,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.031896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484589,-99) , 
9, -0.0242896, 0, 0, 0.502299,-99) , 
8, -3.53278, 1, 0, 0.505442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501877,-99) , 
NN(
0, 
0, 
-1, 1.36276, 0, -1, 0.462699,-99) , 
8, -2.16928, 1, 0, 0.474407,-99) , 
0, 0.503805, 1, 0, 0.50236,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0363011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491343,-99) , 
9, -0.372895, 0, 0, 0.523583,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.492705,-99) , 
8, -2.19123, 1, 0, 0.502663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435712,-99) , 
7, -2.14282, 0, 0, 0.500944,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.039206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443001,-99) , 
6, -951.286, 1, 0, 0.492345,-99) , 
9, -1.45205, 0, 0, 0.536991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488986,-99) , 
9, 0.192596, 0, 0, 0.502438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429808,-99) , 
4, 0.998571, 0, 0, 0.500177,-99) , 
8, -3.11711, 1, 0, 0.50476,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.037363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0858735, 1, 1, 0.567485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46547,-99) , 
5, 0.00129559, 0, 0, 0.493118,-99) , 
5, 0.00906916, 0, 0, 0.504607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448128,-99) , 
5, 0.0238076, 1, 0, 0.502313,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0436621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486235,-99) , 
8, -1.55408, 1, 0, 0.504379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445007,-99) , 
9, -1.73997, 0, 0, 0.501811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444786,-99) , 
7, -2.14285, 0, 0, 0.500306,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.048993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493881,-99) , 
8, -1.65019, 1, 0, 0.546444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451047,-99) , 
3, 4.33803, 1, 0, 0.481496,-99) , 
8, -0.905295, 1, 0, 0.520628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482222,-99) , 
8, -0.864875, 1, 0, 0.501205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438668,-99) , 
8, -3.66297, 1, 0, 0.473999,-99) , 
9, -1.05857, 0, 0, 0.497483,-99) , 
2, 0.0716563, 0, 0, 0.50168,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0366303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.86379, 1, 1, 0.538286,-99) , 
NN(
0, 
0, 
-1, 4.08103, 1, -1, 0.481529,-99) , 
8, -0.57362, 1, 0, 0.518909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43896,-99) , 
7, -1.57139, 0, 0, 0.503239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448289,-99) , 
6, -951.286, 1, 0, 0.481149,-99) , 
9, -0.563576, 0, 0, 0.498018,-99) , 
2, 0.0715747, 0, 0, 0.50179,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0619622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.11102, 1, 1, 0.561497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449013,-99) , 
8, -3.74203, 1, 0, 0.491641,-99) , 
9, -1.28774, 0, 0, 0.521803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438934,-99) , 
4, 0.999524, 0, 0, 0.505397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439877,-99) , 
8, -2.10321, 1, 0, 0.484421,-99) , 
9, 0.631483, 0, 0, 0.496377,-99) , 
8, -2.88184, 1, 0, 0.500582,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0293492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463738,-99) , 
9, -1.84205, 0, 0, 0.518337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420086,-99) , 
7, -1.5714, 0, 0, 0.497646,-99) , 
NN(
0, 
0, 
-1, -2.38817, 1, -1, 0.46962,-99) , 
9, -0.220748, 0, 0, 0.490644,-99) , 
8, -3.33543, 1, 0, 0.49309,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0447944);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461917,-99) , 
9, -0.576683, 0, 0, 0.497696,-99) , 
NN(
0, 
0, 
-1, 2.05149, 0, -1, 0.475842,-99) , 
8, -0.711994, 1, 0, 0.48926,-99) , 
8, -3.53278, 1, 0, 0.492298,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0523037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468471,-99) , 
8, -3.85576, 1, 0, 0.488722,-99) , 
9, -0.857075, 0, 0, 0.518244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404057,-99) , 
4, 0.999524, 0, 0, 0.496759,-99) , 
NN(
0, 
0, 
-1, -1.49515, 1, -1, 0.470282,-99) , 
9, 0.898608, 0, 0, 0.48433,-99) , 
8, -2.65528, 1, 0, 0.49161,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0290424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44965,-99) , 
9, -1.86329, 0, 0, 0.521262,-99) , 
NN(
0, 
0, 
-1, 0.264447, 0, -1, 0.492574,-99) , 
8, -3.19669, 1, 0, 0.495827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441316,-99) , 
7, 2.14286, 1, 0, 0.494056,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0287689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46463,-99) , 
6, -951.286, 1, 0, 0.493881,-99) , 
9, -1.12459, 0, 0, 0.52243,-99) , 
NN(
0, 
0, 
-1, -1.8571, 0, -1, 0.492701,-99) , 
8, -2.88184, 1, 0, 0.497618,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0339653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.111, 1, 1, 0.56795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46085,-99) , 
6, -951.286, 1, 0, 0.490435,-99) , 
9, -1.28774, 0, 0, 0.52372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493158,-99) , 
2, 0.0715176, 0, 0, 0.497746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455506,-99) , 
3, 8.70229, 1, 0, 0.495859,-99) , 
8, -2.88184, 1, 0, 0.500455,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.017212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454775,-99) , 
3, 9.39629, 1, 0, 0.503968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448609,-99) , 
7, 2.14285, 1, 0, 0.502187,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0140203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462103,-99) , 
3, 9.39629, 1, 0, 0.502969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453895,-99) , 
7, 2.14285, 1, 0, 0.501383,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.106523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467363,-99) , 
8, -1.67264, 1, 0, 0.524019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467256,-99) , 
4, 0.999524, 1, 0, 0.484365,-99) , 
6, -14.0823, 1, 0, 0.505305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44393,-99) , 
9, 3.17357, 1, 0, 0.521384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427411,-99) , 
8, 2.10879, 0, 0, 0.466545,-99) , 
6, -948.956, 0, 0, 0.484787,-99) , 
8, -0.570958, 1, 0, 0.498354,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.026126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.545227, 1, 1, 0.534313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495295,-99) , 
2, 0.0788969, 0, 0, 0.500424,-99) , 
2, -0.0706297, 1, 0, 0.505368,-99) , 
NN(
0, 
0, 
-1, -0.214508, 0, -1, 0.483111,-99) , 
3, 4.74401, 1, 0, 0.501147,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0433991);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467163,-99) , 
6, -951.286, 0, 0, 0.542032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481734,-99) , 
4, 0.999977, 0, 0, 0.502585,-99) , 
4, 0.999524, 1, 0, 0.50511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457579,-99) , 
4, 0.998571, 0, 0, 0.503307,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0424773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476396,-99) , 
9, -1.62022, 0, 0, 0.528078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489855,-99) , 
7, 0.71433, 1, 0, 0.505686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419238,-99) , 
8, -2.10444, 1, 0, 0.480579,-99) , 
9, 0.140006, 0, 0, 0.497647,-99) , 
8, -3.10886, 1, 0, 0.501377,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.021417);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460336,-99) , 
6, -951.286, 0, 0, 0.533401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425233,-99) , 
4, 0.999705, 0, 0, 0.499494,-99) , 
4, 0.999524, 1, 0, 0.50162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453983,-99) , 
4, 0.998571, 0, 0, 0.49986,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0302758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.532002,-99) , 
NN(
0, 
0, 
-1, 0.207688, 1, -1, 0.486428,-99) , 
3, 4.36657, 1, 0, 0.51378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475411,-99) , 
8, -0.504385, 1, 0, 0.513345,-99) , 
NN(
0, 
0, 
-1, -0.60248, 0, -1, 0.491284,-99) , 
2, -0.0779778, 1, 0, 0.495852,-99) , 
2, 0.0716532, 0, 0, 0.499073,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0541009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.36585, 1, 1, 0.51938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470763,-99) , 
6, -948.87, 0, 0, 0.487027,-99) , 
8, -0.537354, 1, 0, 0.505627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454631,-99) , 
7, -1.42131, 1, 0, 0.468391,-99) , 
8, -3.82786, 1, 0, 0.482679,-99) , 
9, -0.658322, 0, 0, 0.500736,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.030014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469408,-99) , 
7, -1.57143, 0, 0, 0.505328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465609,-99) , 
8, -3.52511, 1, 0, 0.483311,-99) , 
9, -0.563576, 0, 0, 0.500332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45513,-99) , 
4, 0.998571, 0, 0, 0.498641,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0617632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494099,-99) , 
8, -1.35807, 1, 0, 0.535032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452819,-99) , 
8, -2.27087, 1, 0, 0.491578,-99) , 
9, 0.529442, 0, 0, 0.501713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490007,-99) , 
7, -0.714081, 1, 0, 0.500615,-99) , 
NN(
0, 
0, 
-1, -1.00005, 0, -1, 0.444174,-99) , 
9, 1.91342, 0, 0, 0.482902,-99) , 
8, -0.676408, 1, 0, 0.495014,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0295979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.275, 0, 1, 0.533743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491855,-99) , 
2, 0.0783643, 0, 0, 0.49728,-99) , 
2, -0.071108, 1, 0, 0.502591,-99) , 
NN(
0, 
0, 
-1, -0.214303, 0, -1, 0.4832,-99) , 
3, 4.74401, 1, 0, 0.498888,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.025199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492645,-99) , 
4, 0.999932, 0, 0, 0.511549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49322,-99) , 
4, 0.999524, 1, 0, 0.495549,-99) , 
0, 0.497138, 1, 0, 0.502013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453128,-99) , 
4, 0.998572, 0, 0, 0.500207,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0497646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460784,-99) , 
9, -1.78832, 0, 0, 0.493451,-99) , 
9, -1.2641, 0, 0, 0.525868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467556,-99) , 
4, 0.999524, 0, 0, 0.509712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446724,-99) , 
8, -2.38911, 1, 0, 0.479873,-99) , 
9, 0.191085, 0, 0, 0.499905,-99) , 
8, -3.05398, 1, 0, 0.503358,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0360753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0858735, 1, 1, 0.560634,-99) , 
NN(
0, 
0, 
-1, 0.000863747, 0, -1, 0.490772,-99) , 
5, 0.00906916, 0, 0, 0.501624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463221,-99) , 
5, 0.0238076, 1, 0, 0.500021,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0463217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474986,-99) , 
9, 4.1123, 1, 0, 0.507882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465388,-99) , 
7, -1.57139, 0, 0, 0.505944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468165,-99) , 
9, -1.71216, 0, 0, 0.514865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447167,-99) , 
7, -1.22415, 1, 0, 0.467661,-99) , 
8, -3.2327, 1, 0, 0.488272,-99) , 
9, -0.563576, 0, 0, 0.501771,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0164188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.65528, 1, 1, 0.51608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477121,-99) , 
9, -0.913042, 0, 0, 0.496441,-99) , 
3, 0.976055, 1, 0, 0.50067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448866,-99) , 
3, 9.39852, 1, 0, 0.498809,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0330868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486877,-99) , 
8, -1.95292, 1, 0, 0.49869,-99) , 
9, 7.09138, 0, 0, 0.500173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45806,-99) , 
4, 0.998571, 0, 0, 0.498594,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0283281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450123,-99) , 
4, 0.999796, 0, 0, 0.509363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414235,-99) , 
8, -1.0133, 1, 0, 0.494062,-99) , 
9, 1.12226, 0, 0, 0.499925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46344,-99) , 
4, 0.998572, 0, 0, 0.498576,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0461387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.974069, 0, 1, 0.5117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465516,-99) , 
6, -951.256, 0, 0, 0.484885,-99) , 
8, -1.01826, 1, 0, 0.498623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512874,-99) , 
NN(
0, 
0, 
-1, -1.15914, 1, -1, 0.445842,-99) , 
8, -3.50325, 1, 0, 0.475488,-99) , 
9, -0.982305, 0, 0, 0.495177,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0520966);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496402,-99) , 
7, -0.428127, 1, 0, 0.510203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48098,-99) , 
8, -2.32003, 1, 0, 0.494385,-99) , 
9, 2.16615, 0, 0, 0.498614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430027,-99) , 
7, -0.967516, 1, 0, 0.457282,-99) , 
8, -3.64052, 1, 0, 0.47581,-99) , 
9, -0.770318, 0, 0, 0.494289,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0508005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494643,-99) , 
6, -948.87, 0, 0, 0.514787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425857,-99) , 
6, -951.286, 1, 0, 0.494679,-99) , 
9, 4.10694, 1, 0, 0.509553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489397,-99) , 
9, 0.66087, 0, 0, 0.496721,-99) , 
NN(
0, 
0, 
-1, -0.902171, 0, -1, 0.427974,-99) , 
8, -1.10475, 1, 0, 0.488809,-99) , 
9, 1.15319, 0, 0, 0.49647,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0375116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0743936, 1, 1, 0.511115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47234,-99) , 
2, -0.0713324, 0, 0, 0.492473,-99) , 
3, 4.35425, 1, 0, 0.507082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468165,-99) , 
9, -1.58808, 0, 0, 0.50836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430877,-99) , 
7, -1.08048, 1, 0, 0.45528,-99) , 
8, -3.03589, 1, 0, 0.48641,-99) , 
9, -0.60248, 0, 0, 0.502409,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.047326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470835,-99) , 
8, -3.85489, 1, 0, 0.490466,-99) , 
9, -0.893453, 0, 0, 0.514567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457956,-99) , 
4, 0.999524, 0, 0, 0.509129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447571,-99) , 
9, -0.064394, 0, 0, 0.480033,-99) , 
9, 0.876697, 0, 0, 0.495714,-99) , 
8, -2.65442, 1, 0, 0.499714,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0375086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.454903, 1, 1, 0.525229,-99) , 
NN(
0, 
0, 
-1, -0.207474, 0, -1, 0.483399,-99) , 
3, 4.80921, 1, 0, 0.510749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443245,-99) , 
4, 0.999524, 0, 0, 0.499939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472598,-99) , 
4, 0.999524, 1, 0, 0.481862,-99) , 
6, -948.956, 1, 0, 0.492219,-99) , 
2, -0.0714243, 1, 0, 0.495557,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0370323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.67269, 1, 1, 0.546757,-99) , 
NN(
0, 
0, 
-1, 0.00215926, 0, -1, 0.487915,-99) , 
5, 0.00906884, 0, 0, 0.497047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457564,-99) , 
5, 0.0238076, 1, 0, 0.495401,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0418691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481061,-99) , 
9, 2.81256, 1, 0, 0.538691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48848,-99) , 
8, 2.29604, 0, 0, 0.492057,-99) , 
5, 0.00793223, 0, 0, 0.501214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465922,-99) , 
5, 0.0237968, 1, 0, 0.499766,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0407188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12421, 1, 1, 0.562122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463972,-99) , 
8, -3.7421, 1, 0, 0.489135,-99) , 
9, -1.31975, 0, 0, 0.521947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48619,-99) , 
7, 1.00001, 1, 0, 0.503016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434103,-99) , 
8, -1.84278, 1, 0, 0.485828,-99) , 
9, 0.466447, 0, 0, 0.496433,-99) , 
8, -2.88184, 1, 0, 0.500638,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0328513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12421, 1, 1, 0.552878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460639,-99) , 
8, -3.74205, 1, 0, 0.485132,-99) , 
9, -1.31975, 0, 0, 0.51566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49059,-99) , 
6, -948.87, 0, 0, 0.499696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441428,-99) , 
8, -1.62162, 1, 0, 0.487583,-99) , 
9, 0.646793, 0, 0, 0.494451,-99) , 
8, -2.88184, 1, 0, 0.497922,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0401174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417957,-99) , 
7, 0.142866, 0, 0, 0.465528,-99) , 
6, -951.286, 0, 0, 0.521845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497012,-99) , 
4, 0.999999, 0, 0, 0.506374,-99) , 
NN(
0, 
0, 
-1, 4.34032, 1, -1, 0.478684,-99) , 
4, 0.999977, 0, 0, 0.495459,-99) , 
4, 0.999524, 1, 0, 0.498057,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0389437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.35734, 0, 1, 0.564915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472191,-99) , 
9, -1.79403, 0, 0, 0.528653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49623,-99) , 
8, 0.0953204, 1, 0, 0.508133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452126,-99) , 
8, -2.50938, 1, 0, 0.478583,-99) , 
9, 0.00269967, 0, 0, 0.499565,-99) , 
8, -3.16769, 1, 0, 0.502874,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0387945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488103,-99) , 
9, -1.63675, 0, 0, 0.526573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479748,-99) , 
7, -0.714197, 0, 0, 0.50521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455994,-99) , 
8, -2.51034, 1, 0, 0.481919,-99) , 
9, 0.13094, 0, 0, 0.497497,-99) , 
8, -3.19669, 1, 0, 0.500671,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0375261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.3825, 0, 1, 0.552692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472577,-99) , 
9, -1.81475, 0, 0, 0.523246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495466,-99) , 
7, 0.714333, 1, 0, 0.505912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458071,-99) , 
9, -0.408193, 0, 0, 0.483226,-99) , 
9, 0.175604, 0, 0, 0.49827,-99) , 
8, -3.1507, 1, 0, 0.501144,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0252946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492657,-99) , 
8, -3.08028, 1, 0, 0.541422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462665,-99) , 
8, -3.74203, 1, 0, 0.486738,-99) , 
9, -1.50345, 0, 0, 0.518034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494899,-99) , 
7, -0.42853, 1, 0, 0.498691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438658,-99) , 
9, -0.889732, 0, 0, 0.496704,-99) , 
8, -2.88184, 1, 0, 0.50021,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0284642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.500407, 1, 1, 0.531263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477108,-99) , 
9, 0.577778, 1, 0, 0.493848,-99) , 
3, 4.44347, 1, 0, 0.516767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491255,-99) , 
7, 1.00001, 1, 0, 0.504655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445909,-99) , 
8, -1.86785, 1, 0, 0.489787,-99) , 
9, 0.555952, 0, 0, 0.49714,-99) , 
2, -0.070596, 1, 0, 0.500713,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0404414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.668368, 1, 1, 0.51458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425324,-99) , 
6, -951.275, 1, 0, 0.485796,-99) , 
9, 4.07894, 1, 0, 0.507202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495229,-99) , 
9, 0.629445, 0, 0, 0.502065,-99) , 
NN(
0, 
0, 
-1, -0.942205, 0, -1, 0.427305,-99) , 
8, -1.17184, 1, 0, 0.492588,-99) , 
9, 1.12226, 0, 0, 0.498076,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.020983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.4136, 0, 1, 0.559926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471853,-99) , 
9, -1.87289, 0, 0, 0.528677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497086,-99) , 
4, 0.999524, 1, 0, 0.499243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459061,-99) , 
4, 0.998571, 0, 0, 0.497972,-99) , 
8, -3.20228, 1, 0, 0.50129,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0288284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0872842, 1, 1, 0.545743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466479,-99) , 
5, 0.00097153, 0, 0, 0.498799,-99) , 
5, 0.010201, 0, 0, 0.504528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467467,-99) , 
5, 0.0238024, 1, 0, 0.503006,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0250798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213483, 1, 1, 0.528848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480452,-99) , 
2, -0.207227, 0, 0, 0.498838,-99) , 
3, 4.46584, 1, 0, 0.517279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479524,-99) , 
9, -0.135039, 0, 0, 0.495843,-99) , 
7, -1.85711, 1, 0, 0.497436,-99) , 
2, -0.0712254, 1, 0, 0.501043,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0300517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482789,-99) , 
8, -3.38629, 1, 0, 0.503889,-99) , 
9, -0.745526, 0, 0, 0.518295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444629,-99) , 
4, 0.999524, 0, 0, 0.500617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428515,-99) , 
8, -1.36569, 1, 0, 0.487621,-99) , 
9, 0.8396, 0, 0, 0.494643,-99) , 
8, -2.69985, 1, 0, 0.499455,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0313714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.01989, 1, 1, 0.549834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462206,-99) , 
8, -3.74394, 1, 0, 0.486497,-99) , 
9, -1.16809, 0, 0, 0.514134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491772,-99) , 
2, 0.072551, 0, 0, 0.494285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45526,-99) , 
4, 0.999048, 0, 0, 0.492484,-99) , 
8, -2.71411, 1, 0, 0.496772,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0285899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469994,-99) , 
0, 0.492376, 0, 0, 0.510795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487794,-99) , 
2, -0.0713945, 1, 0, 0.492587,-99) , 
3, 1.43584, 1, 0, 0.49896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460791,-99) , 
3, 9.41367, 1, 0, 0.49759,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.026797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477465,-99) , 
8, -3.74211, 1, 0, 0.495181,-99) , 
9, -1.14943, 0, 0, 0.516794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491198,-99) , 
7, 0.143102, 0, 0, 0.50731,-99) , 
NN(
0, 
0, 
-1, 0.466447, 0, -1, 0.492135,-99) , 
2, -0.0713945, 1, 0, 0.494907,-99) , 
8, -2.88184, 1, 0, 0.498492,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0190526);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498249,-99) , 
5, 0.0102008, 0, 0, 0.504712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474163,-99) , 
5, 0.0238024, 1, 0, 0.503452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465623,-99) , 
0, 0.505709, 1, 0, 0.501998,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0362684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.37774, 0, 1, 0.54999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471939,-99) , 
9, -1.8293, 0, 0, 0.521222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48263,-99) , 
9, 4.21437, 1, 0, 0.503003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46956,-99) , 
7, -0.605219, 1, 0, 0.487158,-99) , 
9, 0.140006, 0, 0, 0.497797,-99) , 
8, -3.17114, 1, 0, 0.500442,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0418332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484297,-99) , 
9, -0.386796, 0, 0, 0.504193,-99) , 
7, -1.85715, 1, 0, 0.507137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494562,-99) , 
7, -0.42843, 1, 0, 0.505157,-99) , 
NN(
0, 
0, 
-1, -1.00008, 0, -1, 0.452312,-99) , 
9, 2.27366, 0, 0, 0.486328,-99) , 
8, -0.411609, 1, 0, 0.500536,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.027056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.03419, 1, 1, 0.549685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473829,-99) , 
8, -3.74394, 1, 0, 0.492682,-99) , 
9, -1.20038, 0, 0, 0.518675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495448,-99) , 
9, 2.3164, 0, 0, 0.499635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457443,-99) , 
4, 0.999048, 0, 0, 0.497689,-99) , 
8, -2.71411, 1, 0, 0.501856,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0274376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463732,-99) , 
9, 2.36115, 0, 0, 0.494656,-99) , 
8, -0.31848, 1, 0, 0.504759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461681,-99) , 
4, 0.998571, 0, 0, 0.503178,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0212559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.97799, 1, 1, 0.546056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475147,-99) , 
8, -3.60164, 1, 0, 0.496242,-99) , 
9, -1.11306, 0, 0, 0.515355,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.494425,-99) , 
8, -2.7431, 1, 0, 0.498481,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0321924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481756,-99) , 
8, -1.1859, 1, 0, 0.507225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482718,-99) , 
7, 1.00004, 0, 0, 0.492466,-99) , 
8, -0.301114, 1, 0, 0.502857,-99) , 
NN(
0, 
0, 
-1, 1.3881, 0, -1, 0.47965,-99) , 
0, 0.503804, 1, 0, 0.50055,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0338073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479094,-99) , 
6, -951.286, 0, 0, 0.540267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483812,-99) , 
4, 0.999977, 0, 0, 0.50044,-99) , 
4, 0.999524, 1, 0, 0.503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469344,-99) , 
4, 0.998571, 0, 0, 0.501768,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0240093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12138, 1, 1, 0.544451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465652,-99) , 
6, -951.286, 1, 0, 0.486021,-99) , 
9, -1.35172, 0, 0, 0.513546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469029,-99) , 
9, -0.319508, 0, 0, 0.496821,-99) , 
9, 7.2687, 0, 0, 0.49822,-99) , 
8, -2.88184, 1, 0, 0.500721,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0446308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496245, 0, 1, 0.511603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459704,-99) , 
9, 1.30656, 0, 0, 0.480027,-99) , 
8, -1.48198, 1, 0, 0.50227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469868,-99) , 
6, -951.256, 1, 0, 0.501558,-99) , 
NN(
0, 
0, 
-1, -0.999961, 0, -1, 0.462779,-99) , 
9, 2.36115, 0, 0, 0.487933,-99) , 
8, -0.302525, 1, 0, 0.497948,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0380435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458113,-99) , 
8, 2.41202, 1, 0, 0.523646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487794,-99) , 
4, 0.999524, 1, 0, 0.491061,-99) , 
5, 0.00793521, 0, 0, 0.497494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469328,-99) , 
5, 0.0238076, 1, 0, 0.496325,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0203926);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49397,-99) , 
9, 2.54717, 1, 0, 0.535996,-99) , 
NN(
0, 
0, 
-1, 0.000971257, 0, -1, 0.495008,-99) , 
5, 0.010198, 0, 0, 0.49997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46725,-99) , 
5, 0.0237968, 1, 0, 0.498643,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0324326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142998, 0, 1, 0.526581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479653,-99) , 
2, -0.207534, 0, 0, 0.495916,-99) , 
3, 4.79158, 1, 0, 0.515943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483233,-99) , 
9, 4.3128, 1, 0, 0.506322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469541,-99) , 
8, -2.36586, 1, 0, 0.492684,-99) , 
9, 0.452122, 0, 0, 0.499755,-99) , 
2, -0.0714805, 1, 0, 0.502676,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0383129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.29244, 1, 1, 0.527604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451079,-99) , 
7, 0.142934, 0, 0, 0.48482,-99) , 
8, -0.874361, 1, 0, 0.510614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482159,-99) , 
6, -951.286, 0, 0, 0.513033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476974,-99) , 
6, -948.87, 1, 0, 0.493604,-99) , 
7, -1, 1, 0, 0.496962,-99) , 
2, 0.0714273, 0, 0, 0.499435,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0247071);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483985,-99) , 
6, -951.275, 0, 0, 0.509264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459483,-99) , 
9, -0.614879, 0, 0, 0.495711,-99) , 
7, -0.71427, 1, 0, 0.499044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460029,-99) , 
4, 0.998572, 0, 0, 0.497614,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0621587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49371,-99) , 
9, -1.06558, 0, 0, 0.529522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423535,-99) , 
8, 0.949795, 0, 0, 0.467004,-99) , 
8, -1.32542, 1, 0, 0.507412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485034,-99) , 
8, -1.08097, 1, 0, 0.504483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469315,-99) , 
4, 0.999524, 1, 0, 0.479431,-99) , 
6, -948.87, 1, 0, 0.493561,-99) , 
7, -0.714256, 1, 0, 0.496919,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0412157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455367,-99) , 
4, 0.999796, 0, 0, 0.511838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467028,-99) , 
8, -1.82699, 1, 0, 0.496508,-99) , 
9, 1.12226, 0, 0, 0.502416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452886,-99) , 
4, 0.998571, 0, 0, 0.50064,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0331635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.924931, 1, 1, 0.524282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462026,-99) , 
9, -1.90522, 0, 0, 0.510237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493957,-99) , 
6, -948.956, 0, 0, 0.502069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465972,-99) , 
8, -2.10321, 1, 0, 0.48691,-99) , 
9, 0.62902, 0, 0, 0.495607,-99) , 
8, -2.88184, 1, 0, 0.498016,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0365898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495316,-99) , 
7, 0.714296, 1, 0, 0.506807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462476,-99) , 
4, 0.999524, 0, 0, 0.503843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494188,-99) , 
9, -0.43776, 0, 0, 0.509068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449486,-99) , 
7, -0.306633, 1, 0, 0.469803,-99) , 
8, -2.40703, 1, 0, 0.492234,-99) , 
9, 0.415443, 0, 0, 0.498368,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0357624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479217,-99) , 
9, -1.87924, 0, 0, 0.525333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490802,-99) , 
3, 4.2884, 1, 0, 0.504334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45549,-99) , 
7, -0.554033, 1, 0, 0.479321,-99) , 
9, -0.0844341, 0, 0, 0.496961,-99) , 
8, -3.43055, 1, 0, 0.49911,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0209743);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498479,-99) , 
3, 4.37029, 1, 0, 0.514298,-99) , 
NN(
0, 
0, 
-1, 0.0859329, 0, -1, 0.492046,-99) , 
2, 0.0712551, 0, 0, 0.496084,-99) , 
7, -1.85714, 1, 0, 0.497855,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0192644);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496463,-99) , 
5, 0.0101985, 0, 0, 0.501493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473148,-99) , 
5, 0.0237968, 1, 0, 0.500325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461904,-99) , 
0, 0.505709, 1, 0, 0.498853,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0211133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479962,-99) , 
9, -1.85519, 0, 0, 0.519521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488063,-99) , 
9, -0.0242896, 0, 0, 0.499843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460036,-99) , 
4, 0.998571, 0, 0, 0.498561,-99) , 
8, -3.39856, 1, 0, 0.500234,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0284066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.07272, 1, 1, 0.525247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474562,-99) , 
7, 0.42878, 0, 0, 0.488757,-99) , 
8, -0.422146, 1, 0, 0.513513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487502,-99) , 
8, -0.435972, 1, 0, 0.508101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490009,-99) , 
2, 0.0497255, 0, 0, 0.492998,-99) , 
2, 0.078231, 0, 0, 0.496115,-99) , 
2, -0.0714243, 1, 0, 0.499256,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0244462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.10994, 1, 1, 0.544831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468448,-99) , 
6, -951.286, 1, 0, 0.491414,-99) , 
9, -1.28774, 0, 0, 0.514091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490709,-99) , 
9, 0.670571, 0, 0, 0.498513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465043,-99) , 
4, 0.999048, 0, 0, 0.496923,-99) , 
8, -2.88184, 1, 0, 0.499749,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0396589);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486102,-99) , 
8, -0.301114, 1, 0, 0.509985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478724,-99) , 
9, 1.63684, 0, 0, 0.487042,-99) , 
5, 0.0022672, 0, 0, 0.502741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474225,-99) , 
5, 0.0238077, 1, 0, 0.501567,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0229615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49741,-99) , 
9, -1.75185, 0, 0, 0.528346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489761,-99) , 
9, -0.0844341, 0, 0, 0.502696,-99) , 
8, -3.26541, 1, 0, 0.505258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509809,-99) , 
NN(
0, 
0, 
-1, 1.02623, 0, -1, 0.485169,-99) , 
8, -2.6004, 1, 0, 0.490449,-99) , 
0, 0.500947, 1, 0, 0.50146,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0291111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.10995, 1, 1, 0.541808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486529,-99) , 
7, -1.52438, 1, 0, 0.500496,-99) , 
9, -1.28774, 0, 0, 0.518169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487015,-99) , 
8, -1.42304, 1, 0, 0.496225,-99) , 
9, 7.14035, 0, 0, 0.497625,-99) , 
8, -2.88184, 1, 0, 0.501009,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0281133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476121,-99) , 
7, -1.57133, 0, 0, 0.506146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46782,-99) , 
8, -3.0806, 1, 0, 0.493575,-99) , 
9, -0.412204, 0, 0, 0.502737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464315,-99) , 
0, 0.489519, 0, 0, 0.501651,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0260269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478405,-99) , 
9, -1.90125, 0, 0, 0.520235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46826,-99) , 
8, -0.880478, 1, 0, 0.513742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467129,-99) , 
9, -0.475881, 0, 0, 0.495716,-99) , 
7, -0.999998, 1, 0, 0.498058,-99) , 
8, -3.31001, 1, 0, 0.500103,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0346178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424165,-99) , 
8, -1.69934, 1, 0, 0.482325,-99) , 
6, -951.286, 0, 0, 0.512356,-99) , 
NN(
NN(
0, 
0, 
-1, 4.01821, 1, -1, 0.495396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44616,-99) , 
8, -3.17036, 1, 0, 0.469677,-99) , 
9, -0.673333, 0, 0, 0.49169,-99) , 
7, -0.999977, 1, 0, 0.495226,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.040162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420852,-99) , 
8, -1.20579, 1, 0, 0.478736,-99) , 
6, -951.286, 0, 0, 0.513887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486044,-99) , 
9, -0.311058, 0, 0, 0.506847,-99) , 
NN(
0, 
0, 
-1, -0.161032, 0, -1, 0.491296,-99) , 
8, -2.13852, 1, 0, 0.496116,-99) , 
7, -1.28572, 1, 0, 0.498178,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.036758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498989,-99) , 
8, -2.44689, 1, 0, 0.513758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483728,-99) , 
6, -951.275, 0, 0, 0.494795,-99) , 
8, -0.753306, 1, 0, 0.505305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458131,-99) , 
8, -3.46184, 1, 0, 0.478692,-99) , 
7, -1.68646, 1, 0, 0.488392,-99) , 
9, -0.876331, 0, 0, 0.502428,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0275705);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496225,-99) , 
4, 0.99999, 0, 0, 0.508308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441293,-99) , 
7, -0.713944, 0, 0, 0.491118,-99) , 
4, 0.999796, 0, 0, 0.506157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466224,-99) , 
4, 0.998572, 0, 0, 0.504706,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.018732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.58142, 1, 1, 0.524359,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0666213, 0, 1, 0.515779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494666,-99) , 
2, 0.022755, 0, 0, 0.500429,-99) , 
2, -0.0510775, 1, 0, 0.503053,-99) , 
2, -0.214291, 1, 0, 0.50428,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0251602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536335,-99) , 
NN(
NN(
0, 
0, 
-1, 0.794592, 0, 1, 0.509912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452543,-99) , 
9, 1.35398, 0, 0, 0.492748,-99) , 
8, -1.00591, 1, 0, 0.503206,-99) , 
9, 7.31948, 0, 0, 0.504485,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0173441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499232,-99) , 
7, -0.142827, 1, 0, 0.503419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47433,-99) , 
7, -0.792945, 1, 0, 0.492871,-99) , 
9, -0.563576, 0, 0, 0.50094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469173,-99) , 
0, 0.505709, 1, 0, 0.499721,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0419231);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488506,-99) , 
6, -951.286, 0, 0, 0.516034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485656,-99) , 
6, -948.87, 1, 0, 0.502464,-99) , 
7, -0.142844, 1, 0, 0.506472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473443,-99) , 
7, -1.34464, 1, 0, 0.48399,-99) , 
8, -3.51653, 1, 0, 0.493395,-99) , 
9, -0.563576, 0, 0, 0.503417,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0351828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.45205, 1, 1, 0.515285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476217,-99) , 
9, 2.15249, 0, 0, 0.49527,-99) , 
8, -0.721501, 1, 0, 0.5065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48106,-99) , 
7, -1.1608, 1, 0, 0.499351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456496,-99) , 
9, -1.93488, 0, 0, 0.490435,-99) , 
9, -0.876331, 0, 0, 0.503766,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.012887);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527807,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49988,-99) , 
7, -0.931909, 1, 0, 0.503072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461378,-99) , 
9, -1.49177, 0, 0, 0.500575,-99) , 
7, -1.85709, 1, 0, 0.50184,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0228468);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498424,-99) , 
4, 0.999997, 0, 0, 0.508683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435961,-99) , 
3, 4.76435, 1, 0, 0.491322,-99) , 
4, 0.999932, 0, 0, 0.504339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46614,-99) , 
4, 0.998571, 0, 0, 0.502951,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0454349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468205,-99) , 
4, 0.999841, 0, 0, 0.51614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45502,-99) , 
4, 0.999524, 0, 0, 0.512385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493112,-99) , 
9, -0.719121, 0, 0, 0.516996,-99) , 
NN(
0, 
0, 
-1, -0.222132, 0, -1, 0.479866,-99) , 
8, -2.36713, 1, 0, 0.498827,-99) , 
9, 0.742411, 0, 0, 0.504988,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0241797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482009,-99) , 
0, 0.492376, 0, 0, 0.516281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494859,-99) , 
2, -0.214086, 1, 0, 0.49751,-99) , 
3, 1.41693, 1, 0, 0.50396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470192,-99) , 
3, 9.39629, 1, 0, 0.502757,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0431153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459956,-99) , 
9, -1.53301, 0, 0, 0.542323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481305,-99) , 
8, -3.10886, 1, 0, 0.49673,-99) , 
6, -951.286, 0, 0, 0.51451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483811,-99) , 
9, -0.175601, 0, 0, 0.504078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470723,-99) , 
9, 4.4781, 1, 0, 0.500852,-99) , 
7, -0.714253, 1, 0, 0.504166,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0364137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496847,-99) , 
9, -0.702278, 0, 0, 0.531898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487187,-99) , 
8, -2.90554, 1, 0, 0.501277,-99) , 
6, -951.203, 0, 0, 0.513811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494368,-99) , 
7, 0.387798, 1, 0, 0.503096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42647,-99) , 
8, -2.50417, 1, 0, 0.475069,-99) , 
9, -0.118359, 0, 0, 0.497037,-99) , 
7, -0.428545, 1, 0, 0.502565,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0224895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475903,-99) , 
8, -3.83682, 1, 0, 0.497657,-99) , 
9, -1.26386, 0, 0, 0.521301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482592,-99) , 
4, 0.999728, 0, 0, 0.502568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461374,-99) , 
4, 0.998572, 0, 0, 0.501344,-99) , 
8, -3.08757, 1, 0, 0.503853,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.036414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.730534, 0, 1, 0.52105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478958,-99) , 
9, 0.348397, 0, 0, 0.498496,-99) , 
8, -2.45171, 1, 0, 0.506482,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.522964,-99) , 
NN(
0, 
0, 
-1, 2.43892, 0, -1, 0.482258,-99) , 
7, 1.00001, 0, 0, 0.492896,-99) , 
8, -0.0497727, 1, 0, 0.502798,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0331171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.573258, 0, 1, 0.534444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485429,-99) , 
9, 1.81139, 0, 0, 0.495839,-99) , 
6, -951.203, 0, 0, 0.511632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497429,-99) , 
7, 0.22452, 1, 0, 0.503068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454021,-99) , 
8, -2.89859, 1, 0, 0.473191,-99) , 
9, -0.215862, 0, 0, 0.497421,-99) , 
7, -0.428545, 1, 0, 0.502085,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0360939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479452,-99) , 
8, -1.53382, 1, 0, 0.5041,-99) , 
9, 1.34763, 0, 0, 0.506951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492968,-99) , 
7, 1.77552, 1, 0, 0.513458,-99) , 
NN(
0, 
0, 
-1, 2.12216, 0, -1, 0.475597,-99) , 
7, 0.42859, 0, 0, 0.49286,-99) , 
8, -0.366509, 1, 0, 0.50257,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0154201);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488305,-99) , 
8, -1.1676, 1, 0, 0.521075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488901,-99) , 
8, 0.00569371, 1, 0, 0.512568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525885,-99) , 
NN(
0, 
0, 
-1, -1.46362, 0, -1, 0.496605,-99) , 
7, -1.85708, 1, 0, 0.497912,-99) , 
2, -0.0714329, 1, 0, 0.50057,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.032315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.52506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490268,-99) , 
6, -948.87, 1, 0, 0.500875,-99) , 
7, -0.428571, 1, 0, 0.506238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482259,-99) , 
7, -0.944144, 1, 0, 0.505745,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.467496,-99) , 
9, -1.57654, 0, 0, 0.49206,-99) , 
9, -0.802969, 0, 0, 0.50363,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0283383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.703508, 0, 1, 0.532374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483387,-99) , 
9, 1.82861, 0, 0, 0.494133,-99) , 
6, -951.286, 0, 0, 0.509873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499103,-99) , 
2, 0.0718038, 0, 0, 0.503137,-99) , 
NN(
0, 
0, 
-1, -2.86155, 1, -1, 0.471262,-99) , 
9, -0.335706, 0, 0, 0.498123,-99) , 
7, -0.428529, 1, 0, 0.501981,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0179771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531729,-99) , 
NN(
NN(
0, 
0, 
-1, -0.931927, 1, 1, 0.506131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461002,-99) , 
9, -1.55853, 0, 0, 0.503734,-99) , 
7, -1.85715, 1, 0, 0.505038,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0364077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488477,-99) , 
9, -1.19594, 0, 0, 0.515116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443921,-99) , 
9, 2.1864, 0, 0, 0.483556,-99) , 
8, -0.143176, 1, 0, 0.507787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498163,-99) , 
7, 0.605485, 1, 0, 0.504317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451385,-99) , 
8, -2.69284, 1, 0, 0.473357,-99) , 
9, 0.0524468, 0, 0, 0.497489,-99) , 
7, -0.142804, 1, 0, 0.501867,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0240707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.10229, 1, 1, 0.507809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458882,-99) , 
6, -951.286, 1, 0, 0.478722,-99) , 
9, -1.49189, 0, 0, 0.50473,-99) , 
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.515418,-99) , 
NN(
0, 
0, 
-1, 2.1572, 0, -1, 0.480562,-99) , 
7, 0.714338, 0, 0, 0.492893,-99) , 
8, -0.176269, 1, 0, 0.501356,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0191158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477777,-99) , 
8, -3.04949, 1, 0, 0.525949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468233,-99) , 
9, -1.89553, 0, 0, 0.51253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472843,-99) , 
4, 0.999728, 0, 0, 0.499223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473736,-99) , 
4, 0.999048, 0, 0, 0.498023,-99) , 
8, -2.88184, 1, 0, 0.500416,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0453404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474497,-99) , 
8, -1.84761, 1, 0, 0.498361,-99) , 
9, 1.00121, 0, 0, 0.50397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492073,-99) , 
7, -0.713286, 1, 0, 0.497596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43084,-99) , 
6, -948.956, 0, 0, 0.468404,-99) , 
9, 1.98998, 0, 0, 0.486917,-99) , 
8, -0.787084, 1, 0, 0.497559,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0206698);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526948,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495468,-99) , 
9, -0.718052, 0, 0, 0.509662,-99) , 
NN(
0, 
0, 
-1, -0.0555875, 0, -1, 0.492488,-99) , 
8, -2.62335, 1, 0, 0.496414,-99) , 
9, 7.31948, 0, 0, 0.497568,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0336774);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492285,-99) , 
4, 0.999977, 0, 0, 0.50849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478762,-99) , 
4, 0.999524, 0, 0, 0.506551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495978,-99) , 
9, -0.406622, 0, 0, 0.508342,-99) , 
NN(
0, 
0, 
-1, -0.00078845, 1, -1, 0.474301,-99) , 
8, -2.38818, 1, 0, 0.493825,-99) , 
9, 0.452122, 0, 0, 0.500461,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0268098);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486858,-99) , 
9, 3.86385, 1, 0, 0.505027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473451,-99) , 
8, -2.92228, 1, 0, 0.488777,-99) , 
9, -0.084851, 0, 0, 0.49959,-99) , 
7, -1.8571, 1, 0, 0.501079,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0224699);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526212,-99) , 
NN(
NN(
0, 
0, 
-1, 0.751337, 0, 1, 0.506849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459943,-99) , 
9, 1.58934, 0, 0, 0.488438,-99) , 
8, -1.09148, 1, 0, 0.499409,-99) , 
9, 7.06272, 0, 0, 0.500511,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0374747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449478,-99) , 
8, -1.14076, 1, 0, 0.498115,-99) , 
6, -951.286, 0, 0, 0.516403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460789,-99) , 
6, -951.286, 0, 0, 0.525563,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.491972,-99) , 
4, 0.999524, 1, 0, 0.495292,-99) , 
7, -1, 1, 0, 0.498913,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0419297);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484171,-99) , 
8, -0.589397, 1, 0, 0.514928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483129,-99) , 
9, 0.666854, 0, 0, 0.500332,-99) , 
7, -0.142833, 1, 0, 0.504865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466823,-99) , 
9, -1.88615, 0, 0, 0.50724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464873,-99) , 
7, -1.20108, 1, 0, 0.473851,-99) , 
8, -3.42499, 1, 0, 0.487722,-99) , 
9, -0.802969, 0, 0, 0.501736,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0152089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.194984, 0, 1, 0.520325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484305,-99) , 
7, 0.42878, 0, 0, 0.498134,-99) , 
8, -0.747103, 1, 0, 0.512079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460104,-99) , 
9, -1.39153, 0, 0, 0.498535,-99) , 
7, -1.85711, 1, 0, 0.499792,-99) , 
2, -0.0713324, 1, 0, 0.502003,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0319714);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495832,-99) , 
9, 0.398065, 0, 0, 0.505334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477872,-99) , 
6, -951.286, 0, 0, 0.489226,-99) , 
8, -1.54901, 1, 0, 0.497173,-99) , 
9, 7.34354, 0, 0, 0.498455,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0212869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498825,-99) , 
8, -0.857765, 1, 0, 0.509805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478889,-99) , 
0, 0.489655, 0, 0, 0.506878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472547,-99) , 
6, -951.286, 0, 0, 0.51563,-99) , 
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.49307,-99) , 
4, 0.999524, 1, 0, 0.494997,-99) , 
0, 0.496186, 1, 0, 0.498899,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0413532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498041,-99) , 
6, -951.286, 0, 0, 0.52793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456445,-99) , 
8, -3.4719, 1, 0, 0.488592,-99) , 
9, -1.25886, 0, 0, 0.513366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494176,-99) , 
8, -1.05489, 1, 0, 0.5084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479981,-99) , 
4, 0.999524, 1, 0, 0.488808,-99) , 
6, -14.0823, 1, 0, 0.49987,-99) , 
7, -0.714256, 1, 0, 0.503127,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.026215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.275, 0, 1, 0.522234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492854,-99) , 
9, 0.560266, 0, 0, 0.501245,-99) , 
7, -0.428541, 1, 0, 0.505963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483223,-99) , 
7, -0.677562, 1, 0, 0.508454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457856,-99) , 
8, -3.78757, 1, 0, 0.478412,-99) , 
9, -1.33, 0, 0, 0.491601,-99) , 
9, -0.876331, 0, 0, 0.503526,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.00993492);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.530328, 1, 1, 0.504098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47107,-99) , 
3, 9.39629, 1, 0, 0.502942,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0191928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.52622, 1, 1, 0.532021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497445,-99) , 
8, 2.1762, 0, 0, 0.50019,-99) , 
5, 0.00906534, 0, 0, 0.505109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478374,-99) , 
5, 0.0237968, 1, 0, 0.503998,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0205426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480122,-99) , 
0, 0.492376, 0, 0, 0.514336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495809,-99) , 
2, -0.214211, 1, 0, 0.497498,-99) , 
3, 1.41693, 1, 0, 0.503299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475949,-99) , 
3, 9.39629, 1, 0, 0.502318,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0249869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486495,-99) , 
9, -1.87924, 0, 0, 0.523307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496459,-99) , 
6, -951.286, 0, 0, 0.515172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477759,-99) , 
9, -0.303103, 0, 0, 0.499833,-99) , 
7, -0.714241, 1, 0, 0.502839,-99) , 
8, -3.43055, 1, 0, 0.504405,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.025973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.197413, 0, 1, 0.514725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464499,-99) , 
6, -951.286, 1, 0, 0.492776,-99) , 
8, -0.0497727, 1, 0, 0.509475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523638,-99) , 
NN(
0, 
0, 
-1, 0.417055, 0, -1, 0.49228,-99) , 
4, 0.999524, 1, 0, 0.495493,-99) , 
7, 0.428555, 1, 0, 0.504298,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.00989059);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532079,-99) , 
NN(
NN(
0, 
0, 
-1, -1.3945, 1, 1, 0.502022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471141,-99) , 
9, -1.49177, 0, 0, 0.500156,-99) , 
7, -1.8571, 1, 0, 0.501617,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0170773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472222,-99) , 
9, -1.52845, 0, 0, 0.5032,-99) , 
7, -1.8571, 1, 0, 0.50446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483074,-99) , 
8, -0.357122, 1, 0, 0.494256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471247,-99) , 
9, 0.105076, 0, 0, 0.485846,-99) , 
0, 0.503804, 1, 0, 0.502622,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0150129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.13076, 1, 1, 0.523509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495547,-99) , 
2, 0.0722727, 0, 0, 0.498239,-99) , 
3, 0.519869, 1, 0, 0.500107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479359,-99) , 
3, 8.72069, 1, 0, 0.499145,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0239529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.143601, 0, 1, 0.522675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485679,-99) , 
7, -0.1429, 1, 0, 0.494927,-99) , 
3, 4.4218, 1, 0, 0.511796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480054,-99) , 
9, -1.13025, 0, 0, 0.506899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488502,-99) , 
9, 0.8396, 0, 0, 0.49524,-99) , 
8, -2.65528, 1, 0, 0.497699,-99) , 
2, -0.0711356, 1, 0, 0.500267,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0183807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.467808, 1, 1, 0.536292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464999,-99) , 
6, -951.286, 1, 0, 0.480435,-99) , 
9, -1.50345, 0, 0, 0.512041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478413,-99) , 
4, 0.999819, 0, 0, 0.499908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480386,-99) , 
4, 0.999048, 0, 0, 0.498965,-99) , 
8, -2.88184, 1, 0, 0.501105,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0276868);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488295,-99) , 
8, -1.28176, 1, 0, 0.499712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465485,-99) , 
9, -1.46362, 0, 0, 0.497583,-99) , 
7, -1.8571, 1, 0, 0.499206,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0304505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45007,-99) , 
4, 0.999887, 0, 0, 0.510251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457402,-99) , 
4, 0.999524, 0, 0, 0.505419,-99) , 
NN(
NN(
0, 
0, 
-1, 2.18362, 1, -1, 0.496294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456544,-99) , 
8, -2.99962, 1, 0, 0.47718,-99) , 
9, -0.229712, 0, 0, 0.492712,-99) , 
7, -0.428571, 1, 0, 0.496876,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0158053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496488,-99) , 
4, 0.999932, 0, 0, 0.514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496778,-99) , 
2, 0.153112, 0, 0, 0.499113,-99) , 
2, -0.0711521, 1, 0, 0.501656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468714,-99) , 
4, 0.998571, 0, 0, 0.50048,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.00958679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.53279, 1, 1, 0.50333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476314,-99) , 
3, 9.39852, 1, 0, 0.50238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468931,-99) , 
0, 0.489519, 0, 0, 0.501454,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0170178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215059, 1, 1, 0.504478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468505,-99) , 
4, 0.999048, 0, 0, 0.502875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469993,-99) , 
6, -951.203, 1, 0, 0.485165,-99) , 
4, 0.999524, 1, 0, 0.490748,-99) , 
9, -0.563576, 0, 0, 0.500039,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.012777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139347, 1, 1, 0.520404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487135,-99) , 
9, 0.733188, 1, 0, 0.49926,-99) , 
3, 4.80141, 1, 0, 0.51311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520008,-99) , 
NN(
0, 
0, 
-1, -1.59619, 0, -1, 0.496683,-99) , 
7, -1.8571, 1, 0, 0.497728,-99) , 
2, -0.0714243, 1, 0, 0.500523,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0204426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497164,-99) , 
4, 0.999997, 0, 0, 0.505196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444418,-99) , 
3, 4.31445, 1, 0, 0.491439,-99) , 
4, 0.999932, 0, 0, 0.50173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473372,-99) , 
4, 0.998571, 0, 0, 0.500702,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0324317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.1209, 1, 1, 0.538487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478571,-99) , 
6, -951.286, 1, 0, 0.491946,-99) , 
9, -1.34352, 0, 0, 0.513507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487508,-99) , 
6, -951.286, 1, 0, 0.506478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486254,-99) , 
8, -2.03435, 1, 0, 0.495067,-99) , 
9, 2.13492, 0, 0, 0.498104,-99) , 
8, -2.88184, 1, 0, 0.500628,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0175395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49552,-99) , 
2, 0.0305662, 0, 0, 0.500365,-99) , 
2, -0.214024, 1, 0, 0.501664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464346,-99) , 
4, 0.998571, 0, 0, 0.50033,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0204662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.010851, 0, 1, 0.507842,-99) , 
NN(
0, 
0, 
-1, -0.85345, 0, -1, 0.481259,-99) , 
5, 0.00113372, 0, 0, 0.503589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474747,-99) , 
5, 0.0238076, 1, 0, 0.502401,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0237597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499244,-99) , 
8, -2.47277, 1, 0, 0.508828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474559,-99) , 
9, 2.00018, 0, 0, 0.49142,-99) , 
8, -0.741635, 1, 0, 0.50123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522039,-99) , 
NN(
0, 
0, 
-1, -2.98733, 1, -1, 0.476558,-99) , 
8, -3.82603, 1, 0, 0.487613,-99) , 
9, -0.936476, 0, 0, 0.499087,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.023027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487757,-99) , 
9, 2.3007, 1, 0, 0.52416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492061,-99) , 
6, -948.956, 0, 0, 0.498678,-99) , 
5, 0.0102024, 0, 0, 0.501791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47306,-99) , 
5, 0.0238076, 1, 0, 0.500626,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0314551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497919,-99) , 
8, -1.81743, 1, 0, 0.509429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475894,-99) , 
8, -3.11286, 1, 0, 0.49162,-99) , 
9, -0.327767, 0, 0, 0.503768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460331,-99) , 
8, 7.19187, 0, 0, 0.483773,-99) , 
9, 4.27683, 1, 0, 0.501959,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.031419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.0837, 0, 1, 0.5142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471626,-99) , 
9, 1.72824, 0, 0, 0.497521,-99) , 
8, -0.850213, 1, 0, 0.506636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471219,-99) , 
9, -1.86812, 0, 0, 0.498914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444683,-99) , 
8, -3.01548, 1, 0, 0.488884,-99) , 
9, -1.00902, 0, 0, 0.504045,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0250424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.06477, 0, 1, 0.509603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490349,-99) , 
5, 0.0237399, 0, 0, 0.494222,-99) , 
8, -0.850213, 1, 0, 0.502656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505752,-99) , 
NN(
0, 
0, 
-1, -0.810841, 1, -1, 0.469156,-99) , 
8, -3.75941, 1, 0, 0.480251,-99) , 
9, -1.02592, 0, 0, 0.499487,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0153769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49927,-99) , 
9, 2.3007, 1, 0, 0.52193,-99) , 
NN(
0, 
0, 
-1, 0.000430478, 0, -1, 0.496006,-99) , 
5, 0.00903897, 0, 0, 0.500024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472833,-99) , 
5, 0.0237273, 1, 0, 0.498908,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0263886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.86779, 1, 1, 0.510192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473674,-99) , 
8, -2.61693, 1, 0, 0.492414,-99) , 
9, 0.054508, 0, 0, 0.502762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459579,-99) , 
9, 7.19993, 0, 0, 0.482514,-99) , 
9, 4.57173, 1, 0, 0.501078,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0240827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499665,-99) , 
8, -2.46679, 1, 0, 0.508435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486331,-99) , 
7, 0.428631, 0, 0, 0.496087,-99) , 
8, -0.595909, 1, 0, 0.503176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533059,-99) , 
NN(
0, 
0, 
-1, -1.38532, 0, -1, 0.480862,-99) , 
8, -3.85866, 1, 0, 0.490797,-99) , 
9, -0.770318, 0, 0, 0.500815,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0286894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486928,-99) , 
8, -2.98089, 1, 0, 0.502079,-99) , 
6, -951.286, 0, 0, 0.514979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487384,-99) , 
9, -0.0467887, 0, 0, 0.501782,-99) , 
NN(
0, 
0, 
-1, 0.523433, 0, -1, 0.473885,-99) , 
9, 4.3213, 1, 0, 0.499024,-99) , 
7, -1.00001, 1, 0, 0.501764,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0138236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.66921, 1, 1, 0.525187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496925,-99) , 
4, 0.999524, 1, 0, 0.49916,-99) , 
3, 0.53033, 1, 0, 0.501165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477182,-99) , 
3, 9.39629, 1, 0, 0.500314,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0274279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485515,-99) , 
8, -0.401697, 1, 0, 0.515698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493065,-99) , 
6, -948.956, 1, 0, 0.502041,-99) , 
7, -0.428571, 1, 0, 0.504993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463124,-99) , 
9, -1.23564, 0, 0, 0.484519,-99) , 
8, -3.84109, 1, 0, 0.491536,-99) , 
9, -0.737347, 0, 0, 0.502349,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0371132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490795,-99) , 
8, -0.231931, 1, 0, 0.513871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487689,-99) , 
9, 1.0575, 0, 0, 0.500858,-99) , 
7, 0.142857, 1, 0, 0.505922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48314,-99) , 
9, -1.15308, 0, 0, 0.499764,-99) , 
NN(
0, 
0, 
-1, -2.88132, 0, -1, 0.463692,-99) , 
7, -0.402143, 1, 0, 0.488849,-99) , 
9, -0.498082, 0, 0, 0.501668,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0234051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.6049, 1, 1, 0.539773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473907,-99) , 
9, -1.56003, 0, 0, 0.515523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482225,-99) , 
5, 0.00113372, 0, 0, 0.5022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472799,-99) , 
5, 0.0238076, 1, 0, 0.500983,-99) , 
7, -1.28567, 1, 0, 0.502661,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0252694);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.86865, 1, 1, 0.525458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486069,-99) , 
9, -0.21095, 0, 0, 0.500443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442343,-99) , 
6, -951.256, 1, 0, 0.480923,-99) , 
9, 3.90564, 1, 0, 0.498334,-99) , 
7, -1.57139, 1, 0, 0.500369,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0213145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49078,-99) , 
8, -0.69834, 1, 0, 0.513064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491918,-99) , 
7, -0.428547, 1, 0, 0.495889,-99) , 
3, 0.992763, 1, 0, 0.499678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465123,-99) , 
3, 9.41378, 1, 0, 0.498446,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0133826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28562, 1, 1, 0.504386,-99) , 
NN(
0, 
0, 
-1, -1.28565, 0, -1, 0.489139,-99) , 
4, 0.999932, 0, 0, 0.500533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475711,-99) , 
4, 0.998571, 0, 0, 0.499624,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0267601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477596,-99) , 
9, -1.7385, 0, 0, 0.490117,-99) , 
9, -1.3823, 0, 0, 0.518215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491091,-99) , 
7, 1.00002, 1, 0, 0.500125,-99) , 
NN(
0, 
0, 
-1, -2.05019, 1, -1, 0.481762,-99) , 
9, 0.191085, 0, 0, 0.494153,-99) , 
8, -3.05398, 1, 0, 0.497332,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0140163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.00708, 1, 1, 0.532592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469766,-99) , 
9, -1.97191, 0, 0, 0.49224,-99) , 
9, -1.15432, 0, 0, 0.509084,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.496013,-99) , 
8, -2.71411, 1, 0, 0.498605,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0177888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4939,-99) , 
8, 0.131034, 1, 0, 0.501753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48069,-99) , 
8, -3.11999, 1, 0, 0.493352,-99) , 
9, -0.403351, 0, 0, 0.499468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477779,-99) , 
0, 0.505709, 1, 0, 0.498627,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.688648, 1, 1, 0.523722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479812,-99) , 
9, -1.69949, 0, 0, 0.509372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493312,-99) , 
5, 0.0113343, 0, 0, 0.496413,-99) , 
5, 0.0238025, 0, 0, 0.497183,-99) , 
8, -2.88184, 1, 0, 0.499152,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.025206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.56504, 1, 1, 0.512488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49002,-99) , 
6, -948.87, 0, 0, 0.496189,-99) , 
8, -0.730989, 1, 0, 0.505198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487773,-99) , 
9, -1.29586, 0, 0, 0.501876,-99) , 
NN(
0, 
0, 
-1, -1.00037, 1, -1, 0.471192,-99) , 
0, 0.499995, 1, 0, 0.492196,-99) , 
9, -0.84368, 0, 0, 0.502924,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0250002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.839704, 1, 1, 0.534242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483662,-99) , 
9, -1.85527, 0, 0, 0.517645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497262,-99) , 
7, 0.714172, 1, 0, 0.504064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47773,-99) , 
8, -2.43025, 1, 0, 0.492628,-99) , 
9, 0.264447, 0, 0, 0.500013,-99) , 
8, -3.10801, 1, 0, 0.502174,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0236472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497845,-99) , 
8, -1.51641, 1, 0, 0.526929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466021,-99) , 
6, -951.286, 1, 0, 0.488489,-99) , 
9, -1.42485, 0, 0, 0.512693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488064,-99) , 
9, 4.08267, 1, 0, 0.50202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470669,-99) , 
8, -3.3695, 1, 0, 0.481431,-99) , 
9, -0.598181, 0, 0, 0.498693,-99) , 
7, -0.999972, 1, 0, 0.501064,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0151491);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496383,-99) , 
7, -0.931915, 1, 0, 0.49916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472634,-99) , 
9, -1.50974, 0, 0, 0.497628,-99) , 
7, -1.85708, 1, 0, 0.498741,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.024953);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497408,-99) , 
9, 0.201577, 0, 0, 0.508287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46824,-99) , 
9, 1.018, 0, 0, 0.489932,-99) , 
8, -1.76177, 1, 0, 0.498028,-99) , 
9, 7.31948, 0, 0, 0.499142,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0203907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492848,-99) , 
8, -0.301114, 1, 0, 0.503723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480788,-99) , 
9, 1.93655, 0, 0, 0.486302,-99) , 
5, 0.00113372, 0, 0, 0.500963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477854,-99) , 
5, 0.0238076, 1, 0, 0.500017,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0220896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461795,-99) , 
7, -1.66668, 0, 0, 0.495145,-99) , 
6, -951.286, 0, 0, 0.508917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484759,-99) , 
6, -951.286, 0, 0, 0.517879,-99) , 
NN(
0, 
0, 
-1, -0.698426, 0, -1, 0.49514,-99) , 
4, 0.999524, 1, 0, 0.497358,-99) , 
7, -1, 1, 0, 0.499316,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0109764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499288,-99) , 
7, -0.700626, 1, 0, 0.501968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463395,-99) , 
6, -951.286, 1, 0, 0.479201,-99) , 
9, -1.39153, 0, 0, 0.500322,-99) , 
7, -1.8571, 1, 0, 0.501549,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0208376);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499536,-99) , 
9, 0.390649, 0, 0, 0.50802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465402,-99) , 
9, 1.02682, 0, 0, 0.49196,-99) , 
8, -1.54454, 1, 0, 0.499901,-99) , 
9, 7.08678, 0, 0, 0.500994,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0254411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499519,-99) , 
9, 0.11631, 0, 0, 0.511576,-99) , 
NN(
0, 
0, 
-1, 0.676163, 0, -1, 0.488359,-99) , 
8, -1.65525, 1, 0, 0.499234,-99) , 
9, 7.34815, 0, 0, 0.500447,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.032631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.165645, 0, 1, 0.519534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484792,-99) , 
9, 0.776401, 0, 0, 0.500451,-99) , 
8, -1.95326, 1, 0, 0.510592,-99) , 
NN(
NN(
0, 
0, 
-1, 3.30334, 0, 1, 0.517622,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.489807,-99) , 
7, 1.00001, 0, 0, 0.497305,-99) , 
8, -0.207159, 1, 0, 0.506725,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0173383);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497959,-99) , 
8, -0.652956, 1, 0, 0.5048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464114,-99) , 
0, 0.497139, 1, 0, 0.479931,-99) , 
9, -1.34229, 0, 0, 0.502866,-99) , 
7, -1.85714, 1, 0, 0.504118,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0208793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.13934, 1, 1, 0.527704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491747,-99) , 
7, 0.428784, 0, 0, 0.498824,-99) , 
3, 4.40418, 1, 0, 0.516431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489442,-99) , 
9, -1.38594, 0, 0, 0.510533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496343,-99) , 
4, 0.999524, 1, 0, 0.498476,-99) , 
7, -0.71426, 1, 0, 0.501398,-99) , 
2, -0.071407, 1, 0, 0.504114,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0247949);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496393,-99) , 
9, -0.164368, 0, 0, 0.511945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490538,-99) , 
9, 1.43162, 0, 0, 0.499543,-99) , 
8, -2.0345, 1, 0, 0.503915,-99) , 
7, -1.8571, 1, 0, 0.504657,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.015054);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497337,-99) , 
8, -0.0858735, 1, 0, 0.516812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49993,-99) , 
2, -0.070962, 1, 0, 0.503515,-99) , 
3, 0.976076, 1, 0, 0.506374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472893,-99) , 
3, 9.39852, 1, 0, 0.505193,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0301699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494079,-99) , 
9, -1.16747, 0, 0, 0.509605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486626,-99) , 
9, 4.60196, 1, 0, 0.507898,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57144, 0, 1, 0.52402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47082,-99) , 
8, -1.73985, 1, 0, 0.484808,-99) , 
8, 0.235513, 0, 0, 0.496738,-99) , 
7, 1.00001, 1, 0, 0.505634,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.027269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495432,-99) , 
9, -1.67263, 0, 0, 0.518757,-99) , 
NN(
NN(
0, 
0, 
-1, -0.999488, 1, 1, 0.510858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472603,-99) , 
8, -1.15269, 1, 0, 0.500054,-99) , 
9, 1.61525, 0, 0, 0.503541,-99) , 
8, -3.33543, 1, 0, 0.504883,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0138125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.85388, 1, 1, 0.520182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497492,-99) , 
5, 0.0101741, 0, 0, 0.500133,-99) , 
8, -3.26541, 1, 0, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473644,-99) , 
5, 0.0237399, 1, 0, 0.500985,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0165009);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498509,-99) , 
6, -951.286, 0, 0, 0.512621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494929,-99) , 
8, -1.45797, 1, 0, 0.501228,-99) , 
7, -1.00001, 1, 0, 0.503152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473629,-99) , 
9, 0.619303, 0, 0, 0.48775,-99) , 
0, 0.504757, 1, 0, 0.502139,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0290419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13423, 1, 1, 0.522288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481706,-99) , 
8, -1.84576, 1, 0, 0.503073,-99) , 
9, 0.867375, 0, 0, 0.507315,-99) , 
NN(
NN(
0, 
0, 
-1, 3.3074, 0, 1, 0.51169,-99) , 
NN(
0, 
0, 
-1, -951.256, 1, -1, 0.488422,-99) , 
7, 0.71416, 0, 0, 0.496552,-99) , 
8, -0.0444653, 1, 0, 0.504419,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0127819);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498996,-99) , 
9, 1.26641, 0, 0, 0.502668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465035,-99) , 
7, 2.14285, 1, 0, 0.501423,-99) , 
8, 4.34365, 0, 0, 0.502952,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0266311);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461135,-99) , 
4, 0.999048, 0, 0, 0.508014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473677,-99) , 
7, -0.390703, 1, 0, 0.490491,-99) , 
9, -0.177132, 0, 0, 0.50312,-99) , 
8, -3.53278, 1, 0, 0.504552,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0264711);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515568,-99) , 
NN(
NN(
0, 
0, 
-1, 0.108586, 0, 1, 0.509439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481991,-99) , 
6, -948.956, 0, 0, 0.492782,-99) , 
8, -1.8497, 1, 0, 0.500042,-99) , 
8, 4.34365, 0, 0, 0.501197,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0213573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472302,-99) , 
4, 0.999683, 0, 0, 0.504362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467774,-99) , 
4, 0.999048, 0, 0, 0.502747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519855,-99) , 
NN(
0, 
0, 
-1, -0.608759, 1, -1, 0.484016,-99) , 
8, -3.80035, 1, 0, 0.490307,-99) , 
9, -0.563576, 0, 0, 0.499827,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0172251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480617,-99) , 
9, -1.85519, 0, 0, 0.512925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474031,-99) , 
4, 0.999524, 0, 0, 0.498956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472843,-99) , 
7, -0.278536, 1, 0, 0.488594,-99) , 
9, 0.0348551, 0, 0, 0.495613,-99) , 
8, -3.39785, 1, 0, 0.496998,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0147765);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493763,-99) , 
9, 0.911451, 1, 0, 0.516958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495691,-99) , 
4, 0.999524, 1, 0, 0.497543,-99) , 
3, 0.497178, 1, 0, 0.498833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475254,-99) , 
3, 8.70006, 1, 0, 0.497749,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0262148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470771,-99) , 
8, -3.55794, 1, 0, 0.489916,-99) , 
9, -0.999275, 0, 0, 0.506138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485693,-99) , 
8, 0.215492, 1, 0, 0.498936,-99) , 
NN(
0, 
0, 
-1, 1.06259, 0, -1, 0.487217,-99) , 
7, 0.714297, 1, 0, 0.494852,-99) , 
8, -2.69985, 1, 0, 0.497126,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0156926);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495082,-99) , 
5, 0.0067815, 0, 0, 0.4988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474554,-99) , 
5, 0.0237353, 1, 0, 0.49782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46883,-99) , 
0, 0.505709, 1, 0, 0.496712,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.018088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69385, 0, 1, 0.532399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487382,-99) , 
9, -1.44803, 0, 0, 0.514852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483713,-99) , 
6, -951.286, 0, 0, 0.517973,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.496063,-99) , 
4, 0.999524, 1, 0, 0.498236,-99) , 
7, -1.28568, 1, 0, 0.500153,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0312495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28561, 1, 1, 0.508738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470031,-99) , 
4, 0.999524, 0, 0, 0.506418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493311,-99) , 
9, -0.0706077, 0, 0, 0.504991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460002,-99) , 
6, -951.286, 0, 0, 0.479478,-99) , 
8, -1.92054, 1, 0, 0.496773,-99) , 
9, 0.858378, 0, 0, 0.500956,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0199538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.467668, 1, 1, 0.527963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477564,-99) , 
6, -951.286, 1, 0, 0.493715,-99) , 
9, -1.50345, 0, 0, 0.512954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493915,-99) , 
2, 0.0310245, 0, 0, 0.498042,-99) , 
2, -0.213742, 1, 0, 0.499099,-99) , 
8, -2.88184, 1, 0, 0.501354,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0135129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487286,-99) , 
9, -1.90727, 0, 0, 0.500794,-99) , 
9, -1.45439, 0, 0, 0.517067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475879,-99) , 
4, 0.999683, 0, 0, 0.500614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482175,-99) , 
4, 0.999048, 0, 0, 0.499708,-99) , 
8, -3.17128, 1, 0, 0.50165,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0173574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472179,-99) , 
0, 0.493328, 0, 0, 0.511936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496173,-99) , 
2, -0.213742, 1, 0, 0.49777,-99) , 
3, 0.973624, 1, 0, 0.500803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47625,-99) , 
3, 9.39629, 1, 0, 0.499928,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0219535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493173,-99) , 
8, -3.81075, 1, 0, 0.509107,-99) , 
9, -1.2641, 0, 0, 0.521562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495689,-99) , 
8, 0.0785189, 1, 0, 0.502998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488135,-99) , 
4, 0.999524, 1, 0, 0.492752,-99) , 
9, 0.0490725, 0, 0, 0.500025,-99) , 
8, -3.0772, 1, 0, 0.50278,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0301606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466467,-99) , 
4, 0.999524, 0, 0, 0.50773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422726,-99) , 
6, -1.26642, 0, 0, 0.497517,-99) , 
6, -951.286, 1, 0, 0.503362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473695,-99) , 
7, 2.14286, 1, 0, 0.502391,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0344658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458884,-99) , 
7, -1.95239, 0, 0, 0.502975,-99) , 
6, -951.286, 0, 0, 0.51438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487451,-99) , 
9, 0.294056, 0, 0, 0.50057,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.489799,-99) , 
8, -1.45797, 1, 0, 0.494827,-99) , 
7, -1, 1, 0, 0.498153,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0224177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.905194, 1, 1, 0.523763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479366,-99) , 
9, -1.89553, 0, 0, 0.513561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492611,-99) , 
8, -2.08605, 1, 0, 0.496789,-99) , 
9, 7.14035, 0, 0, 0.498061,-99) , 
8, -2.88184, 1, 0, 0.500587,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0442987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428592, 1, 1, 0.534889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480911,-99) , 
8, -1.54782, 1, 0, 0.502008,-99) , 
9, 2.98979, 0, 0, 0.507142,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.510374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369047,-99) , 
6, -1.62804, 0, 0, 0.499258,-99) , 
6, -948.956, 1, 0, 0.503789,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0286288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495269,-99) , 
9, 2.63572, 1, 0, 0.504894,-99) , 
7, -0.999971, 1, 0, 0.507288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494462,-99) , 
9, -0.0713927, 0, 0, 0.503632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466066,-99) , 
8, -2.15497, 1, 0, 0.479042,-99) , 
7, 0.441606, 1, 0, 0.497033,-99) , 
9, 1.15911, 0, 0, 0.500843,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0196064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498224,-99) , 
8, 0.8574, 0, 0, 0.504878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461534,-99) , 
6, -0.858501, 0, 0, 0.496345,-99) , 
6, -948.87, 1, 0, 0.501231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47502,-99) , 
0, 0.489519, 0, 0, 0.500495,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0355716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.879383, 0, 1, 0.531802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493286,-99) , 
8, 0.973107, 0, 0, 0.502101,-99) , 
8, -2.44693, 1, 0, 0.508148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483608,-99) , 
7, -0.99963, 1, 0, 0.489794,-99) , 
4, 0.999524, 1, 0, 0.49497,-99) , 
6, -951.203, 1, 0, 0.502576,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0138684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237968, 0, 1, 0.502623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484822,-99) , 
8, -3.44908, 1, 0, 0.495942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469332,-99) , 
9, -1.91656, 0, 0, 0.491661,-99) , 
9, -0.60248, 0, 0, 0.500157,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0268321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.750639, 0, 1, 0.528558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444645,-99) , 
4, 0.999524, 0, 0, 0.498542,-99) , 
8, -2.47891, 1, 0, 0.504575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494347,-99) , 
4, 0.999524, 1, 0, 0.501247,-99) , 
NN(
0, 
0, 
-1, 0.432758, 1, -1, 0.455551,-99) , 
6, -1.05045, 0, 0, 0.493939,-99) , 
6, -951.286, 1, 0, 0.500053,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0253099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47236,-99) , 
4, 0.999773, 0, 0, 0.507669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450217,-99) , 
7, 0.142838, 0, 0, 0.477957,-99) , 
4, 0.999524, 0, 0, 0.505057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496628,-99) , 
4, 0.999524, 1, 0, 0.502643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449907,-99) , 
9, 3.4315, 1, 0, 0.496546,-99) , 
6, -20.9575, 1, 0, 0.501439,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0250762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01362, 0, 1, 0.50916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473931,-99) , 
9, 1.72067, 0, 0, 0.495847,-99) , 
8, -0.913341, 1, 0, 0.50295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477792,-99) , 
9, -1.73074, 0, 0, 0.501118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451809,-99) , 
8, -3.01548, 1, 0, 0.492147,-99) , 
9, -1.01658, 0, 0, 0.501386,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0168669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491323,-99) , 
8, -1.20579, 1, 0, 0.500724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471048,-99) , 
6, -951.286, 1, 0, 0.490686,-99) , 
9, 2.41058, 1, 0, 0.498737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471216,-99) , 
4, 0.998571, 0, 0, 0.497747,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0375744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
8, -1.16265, 1, 0, 0.511664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484176,-99) , 
7, 1.28575, 0, 0, 0.490571,-99) , 
8, 0.805455, 1, 0, 0.502426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487396,-99) , 
9, -0.302441, 0, 0, 0.500818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460045,-99) , 
6, -949.754, 0, 0, 0.47639,-99) , 
8, -1.98264, 1, 0, 0.492369,-99) , 
9, 0.858378, 0, 0, 0.49671,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0134784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497552,-99) , 
9, 1.13076, 1, 0, 0.520567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496242,-99) , 
8, -3.6536, 1, 0, 0.497499,-99) , 
3, 0.532778, 1, 0, 0.499281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473218,-99) , 
3, 9.39852, 1, 0, 0.498363,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0296964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49288,-99) , 
8, -0.820086, 1, 0, 0.511596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481396,-99) , 
8, -3.78781, 1, 0, 0.493068,-99) , 
9, -1.10503, 0, 0, 0.50602,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.521878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483483,-99) , 
9, 1.25445, 0, 0, 0.493993,-99) , 
4, 0.999524, 1, 0, 0.496794,-99) , 
7, -0.142862, 1, 0, 0.500708,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0359418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496242,-99) , 
8, 0.563611, 1, 0, 0.513889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481628,-99) , 
9, 1.69289, 0, 0, 0.50033,-99) , 
7, 1.00001, 1, 0, 0.50908,-99) , 
NN(
NN(
0, 
0, 
-1, -0.648109, 0, 1, 0.5143,-99) , 
NN(
0, 
0, 
-1, 0.196298, 1, -1, 0.476206,-99) , 
8, -2.41122, 1, 0, 0.497844,-99) , 
9, 0.416216, 0, 0, 0.503816,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.035972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486477,-99) , 
9, 4.3682, 1, 0, 0.513784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486974,-99) , 
9, 1.80521, 0, 0, 0.498272,-99) , 
7, 1.00004, 1, 0, 0.508254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490253,-99) , 
9, -0.364303, 0, 0, 0.502135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45174,-99) , 
6, -949.754, 0, 0, 0.471923,-99) , 
8, -2.01133, 1, 0, 0.49424,-99) , 
9, 0.503541, 0, 0, 0.501419,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0265753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.44755, 1, 1, 0.509598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490331,-99) , 
5, 0.0238077, 0, 0, 0.493545,-99) , 
8, -0.577243, 1, 0, 0.502789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477002,-99) , 
4, 0.999524, 1, 0, 0.486037,-99) , 
7, -1.78454, 1, 0, 0.492224,-99) , 
9, -0.770318, 0, 0, 0.500771,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0236018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499048,-99) , 
6, -948.956, 0, 0, 0.506415,-99) , 
5, 0.0238077, 0, 0, 0.508464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499967,-99) , 
9, -0.629811, 0, 0, 0.512197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469135,-99) , 
7, 0.149495, 1, 0, 0.485573,-99) , 
8, -2.49896, 1, 0, 0.49779,-99) , 
9, 0.711478, 0, 0, 0.502745,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0233564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.25836, 1, 1, 0.524536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447946,-99) , 
7, -1.91157, 0, 0, 0.497048,-99) , 
6, -951.275, 0, 0, 0.507971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496757,-99) , 
7, 0.170068, 1, 0, 0.501271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468013,-99) , 
8, -2.99335, 1, 0, 0.483694,-99) , 
9, -0.367606, 0, 0, 0.497976,-99) , 
7, -0.714288, 1, 0, 0.500381,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0304648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499861,-99) , 
8, 0.593916, 1, 0, 0.51212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485173,-99) , 
8, 0.194817, 0, 0, 0.496747,-99) , 
7, 1.28575, 1, 0, 0.507994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497694,-99) , 
9, -0.92642, 0, 0, 0.514433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47249,-99) , 
9, 0.0650977, 0, 0, 0.486085,-99) , 
8, -2.62661, 1, 0, 0.497946,-99) , 
9, 0.621262, 0, 0, 0.502802,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.011597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492267,-99) , 
9, -1.93524, 0, 0, 0.519933,-99) , 
NN(
0, 
0, 
-1, 0.0102004, 0, 1, 0.502665,-99) , 
8, -3.2647, 1, 0, 0.504388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473945,-99) , 
5, 0.0238024, 1, 0, 0.50314,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0284038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.15574, 1, 1, 0.530219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488119,-99) , 
8, -3.74394, 1, 0, 0.497604,-99) , 
9, -1.15761, 0, 0, 0.511343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473324,-99) , 
4, 0.999524, 0, 0, 0.505113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475245,-99) , 
8, -2.15409, 1, 0, 0.489595,-99) , 
9, 0.658001, 0, 0, 0.498791,-99) , 
8, -2.71411, 1, 0, 0.501266,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0201969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483624,-99) , 
8, -3.85749, 1, 0, 0.505712,-99) , 
9, -1.28651, 0, 0, 0.519622,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499564,-99) , 
7, -0.999779, 1, 0, 0.503615,-99) , 
NN(
0, 
0, 
-1, -1.37608, 1, -1, 0.491787,-99) , 
9, 1.42846, 0, 0, 0.496166,-99) , 
8, -3.10801, 1, 0, 0.49902,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0152827);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496907,-99) , 
9, -0.226851, 0, 0, 0.507701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478525,-99) , 
7, -0.700621, 0, 0, 0.497684,-99) , 
8, -2.09756, 1, 0, 0.501047,-99) , 
7, -1.85708, 1, 0, 0.502177,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.019812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466475,-99) , 
4, 0.999887, 0, 0, 0.510575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473021,-99) , 
4, 0.999524, 0, 0, 0.507124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483136,-99) , 
9, -0.285357, 0, 0, 0.4974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454065,-99) , 
5, 0.0237968, 1, 0, 0.495665,-99) , 
7, -0.428561, 1, 0, 0.499404,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0283618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498744,-99) , 
9, -0.694653, 0, 0, 0.510953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448126,-99) , 
9, 1.55406, 0, 0, 0.490846,-99) , 
8, -0.857765, 1, 0, 0.504721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484463,-99) , 
9, 2.92186, 1, 0, 0.499896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455539,-99) , 
8, -2.54803, 1, 0, 0.47817,-99) , 
9, 0.064957, 0, 0, 0.495049,-99) , 
7, -0.142851, 1, 0, 0.499138,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0270573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498893,-99) , 
9, -1.52951, 0, 0, 0.520666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471447,-99) , 
8, -2.92041, 1, 0, 0.51176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489913,-99) , 
7, 1.28572, 1, 0, 0.501062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484523,-99) , 
8, -2.56036, 1, 0, 0.491312,-99) , 
9, 0.631483, 0, 0, 0.497096,-99) , 
8, -2.74869, 1, 0, 0.499854,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0227897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499499,-99) , 
9, -1.89156, 0, 0, 0.529086,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496628,-99) , 
9, 1.19855, 0, 0, 0.501045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479505,-99) , 
8, 1.84734, 0, 0, 0.487315,-99) , 
8, -0.738195, 1, 0, 0.495582,-99) , 
8, -3.45298, 1, 0, 0.498068,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0183412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.47331, 1, 1, 0.531579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485685,-99) , 
9, -1.89781, 0, 0, 0.515898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481203,-99) , 
8, -0.766399, 1, 0, 0.501044,-99) , 
NN(
0, 
0, 
-1, -0.714197, 0, -1, 0.490927,-99) , 
8, -0.194564, 1, 0, 0.497755,-99) , 
8, -3.19669, 1, 0, 0.499703,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0229445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.533903, 1, 1, 0.532111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483365,-99) , 
6, -951.286, 1, 0, 0.496801,-99) , 
9, -1.51491, 0, 0, 0.516891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492629,-99) , 
8, 0.0421643, 1, 0, 0.502995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473731,-99) , 
9, 0.752857, 0, 0, 0.493186,-99) , 
7, 0.428583, 1, 0, 0.498684,-99) , 
8, -2.88184, 1, 0, 0.501645,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0123863);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.86436, 0, 1, 0.5229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51957,-99) , 
NN(
0, 
0, 
-1, -0.448571, 1, -1, 0.495761,-99) , 
7, -1.8571, 1, 0, 0.496529,-99) , 
8, -3.39785, 1, 0, 0.498646,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.017844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497832,-99) , 
7, -0.67593, 1, 0, 0.524825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496496,-99) , 
9, -1.68263, 0, 0, 0.515438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496128,-99) , 
9, 0.0272578, 0, 0, 0.50203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475084,-99) , 
9, 0.817195, 0, 0, 0.491887,-99) , 
7, 0.428586, 1, 0, 0.497565,-99) , 
8, -2.88184, 1, 0, 0.500479,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0209315);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496647,-99) , 
9, -1.10369, 0, 0, 0.518434,-99) , 
NN(
0, 
0, 
-1, 0.918394, 1, -1, 0.493995,-99) , 
8, -2.61428, 1, 0, 0.499155,-99) , 
7, -1.8571, 1, 0, 0.500714,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0150289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49369,-99) , 
8, -3.08652, 1, 0, 0.514762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497689,-99) , 
5, 0.0124604, 0, 0, 0.499616,-99) , 
8, -2.7431, 1, 0, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476053,-99) , 
5, 0.0237891, 1, 0, 0.501493,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0194446);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499941,-99) , 
9, -0.150072, 0, 0, 0.511938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491403,-99) , 
9, 1.43162, 0, 0, 0.498042,-99) , 
8, -1.99428, 1, 0, 0.503033,-99) , 
7, -1.85708, 1, 0, 0.504625,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0129141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497189,-99) , 
9, -1.90874, 0, 0, 0.521349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486774,-99) , 
8, -2.92045, 1, 0, 0.51515,-99) , 
NN(
NN(
0, 
0, 
-1, 0.214769, 0, 1, 0.502512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485114,-99) , 
3, 8.70006, 1, 0, 0.501742,-99) , 
8, -2.74869, 1, 0, 0.504281,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0143247);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499711,-99) , 
9, -0.192084, 0, 0, 0.511179,-99) , 
NN(
0, 
0, 
-1, 4.60536, 1, -1, 0.496939,-99) , 
8, -2.04995, 1, 0, 0.501879,-99) , 
7, -1.8571, 1, 0, 0.503187,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0213825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491608,-99) , 
9, -1.94284, 0, 0, 0.524642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498672,-99) , 
6, -951.203, 0, 0, 0.507075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482547,-99) , 
9, 0.171612, 0, 0, 0.499681,-99) , 
7, -0.142875, 1, 0, 0.502392,-99) , 
8, -3.2647, 1, 0, 0.504564,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0248218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2583, 1, 1, 0.528816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471349,-99) , 
7, -1.69384, 0, 0, 0.509371,-99) , 
6, -951.286, 0, 0, 0.517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470601,-99) , 
7, 2.11562, 1, 0, 0.50453,-99) , 
NN(
0, 
0, 
-1, 3.39269, 0, -1, 0.487444,-99) , 
9, 2.84931, 1, 0, 0.501477,-99) , 
7, -0.714253, 1, 0, 0.505223,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0282114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.441478, 0, 1, 0.520618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49199,-99) , 
9, 1.57683, 0, 0, 0.495317,-99) , 
8, -2.28239, 1, 0, 0.5059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488148,-99) , 
9, 3.10036, 1, 0, 0.496177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446656,-99) , 
9, 2.15677, 0, 0, 0.48055,-99) , 
7, -0.42849, 0, 0, 0.492075,-99) , 
8, -0.176269, 1, 0, 0.50194,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0126639);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.8293, 0, 1, 0.51836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497568,-99) , 
4, 0.999524, 1, 0, 0.499639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477591,-99) , 
3, 8.70229, 1, 0, 0.498661,-99) , 
8, -3.19669, 1, 0, 0.500782,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0231277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.55796, 0, 1, 0.523312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483902,-99) , 
8, -3.01877, 1, 0, 0.498426,-99) , 
7, -0.646493, 1, 0, 0.512371,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498088, 0, 1, 0.51202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491742,-99) , 
8, -1.44037, 1, 0, 0.500039,-99) , 
8, 4.12006, 0, 0, 0.50118,-99) , 
8, -2.74869, 1, 0, 0.503316,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0113846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498339,-99) , 
9, -1.44803, 0, 0, 0.51797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498595,-99) , 
8, -2.45109, 1, 0, 0.501899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481291,-99) , 
5, 0.0237659, 1, 0, 0.501044,-99) , 
7, -1.57143, 1, 0, 0.502272,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0264736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468971,-99) , 
8, -1.29786, 1, 0, 0.500424,-99) , 
6, -951.286, 0, 0, 0.518546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46813,-99) , 
7, 1.97959, 1, 0, 0.506614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457543,-99) , 
6, -0.922932, 0, 0, 0.494097,-99) , 
6, -948.956, 1, 0, 0.501166,-99) , 
7, -1.28568, 1, 0, 0.503145,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0224836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498155,-99) , 
7, -1.36719, 1, 0, 0.520492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446945,-99) , 
7, -1.91151, 0, 0, 0.499301,-99) , 
6, -951.275, 0, 0, 0.50759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495562,-99) , 
2, -0.139202, 1, 0, 0.507608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49255,-99) , 
2, 0.153241, 0, 0, 0.494449,-99) , 
2, -0.0711918, 1, 0, 0.496828,-99) , 
7, -0.714243, 1, 0, 0.499408,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0103144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499866,-99) , 
7, -2.11561, 0, 0, 0.514605,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498083,-99) , 
8, -2.31236, 1, 0, 0.500694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473153,-99) , 
5, 0.0238076, 1, 0, 0.499567,-99) , 
7, -1.57139, 1, 0, 0.500656,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0118825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497571,-99) , 
6, -14.0823, 1, 0, 0.502739,-99) , 
7, -1.85714, 1, 0, 0.503561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484922,-99) , 
0, 0.505709, 1, 0, 0.502831,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0183239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57132, 1, 1, 0.508275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452953,-99) , 
7, -1.00004, 0, 0, 0.494319,-99) , 
4, 0.999932, 0, 0, 0.504765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47299,-99) , 
4, 0.998571, 0, 0, 0.50362,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0194888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496904,-99) , 
4, 0.999997, 0, 0, 0.504725,-99) , 
NN(
0, 
0, 
-1, 4.7739, 1, -1, 0.490945,-99) , 
4, 0.999932, 0, 0, 0.501258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471573,-99) , 
4, 0.998572, 0, 0, 0.500194,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.00861549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.85576, 1, 1, 0.512477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499564,-99) , 
7, 2.14285, 0, 0, 0.500514,-99) , 
8, -2.65528, 1, 0, 0.503095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482859,-99) , 
5, 0.0237968, 1, 0, 0.50225,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0128704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.360461, 1, 1, 0.523583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497918,-99) , 
0, 0.495233, 1, 0, 0.50118,-99) , 
3, 0.497179, 1, 0, 0.502708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47612,-99) , 
3, 8.70006, 1, 0, 0.501496,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0191846);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499619,-99) , 
8, -0.272739, 1, 0, 0.505835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48805,-99) , 
4, 0.999524, 1, 0, 0.493854,-99) , 
9, -0.0914231, 0, 0, 0.501834,-99) , 
7, -1.85714, 1, 0, 0.502846,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0155114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493302,-99) , 
6, -951.286, 0, 0, 0.516889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448797,-99) , 
4, 0.999705, 0, 0, 0.502077,-99) , 
4, 0.999524, 1, 0, 0.503429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480767,-99) , 
0, 0.490471, 0, 0, 0.502348,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0152814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4936, 1, 1, 0.506912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487489,-99) , 
4, 0.999048, 0, 0, 0.50573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491571,-99) , 
7, -0.428561, 0, 0, 0.50301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481441,-99) , 
8, -2.40869, 1, 0, 0.493653,-99) , 
9, 0.438117, 0, 0, 0.498595,-99) , 
0, 0.49809, 1, 0, 0.502144,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0261421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498596,-99) , 
8, -0.975621, 1, 0, 0.508213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480058,-99) , 
8, -3.86956, 1, 0, 0.495653,-99) , 
9, -1.12758, 0, 0, 0.505716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490947,-99) , 
7, 1.16328, 1, 0, 0.500998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457386,-99) , 
6, -951.286, 1, 0, 0.478507,-99) , 
9, 0.573991, 0, 0, 0.494859,-99) , 
7, 0.428565, 1, 0, 0.501679,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0167414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487674,-99) , 
7, -0.142556, 0, 0, 0.520561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445129,-99) , 
4, 0.999705, 0, 0, 0.501801,-99) , 
4, 0.999524, 1, 0, 0.503633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483723,-99) , 
3, 9.39629, 1, 0, 0.502916,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0287395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468701,-99) , 
4, 0.999841, 0, 0, 0.506288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480469,-99) , 
4, 0.999524, 0, 0, 0.50476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493693,-99) , 
9, -0.107085, 0, 0, 0.502434,-99) , 
NN(
0, 
0, 
-1, 0.483297, 1, -1, 0.476549,-99) , 
8, -2.04256, 1, 0, 0.493043,-99) , 
9, 0.821521, 0, 0, 0.498214,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0164402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.5053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492122,-99) , 
9, 3.42908, 0, 0, 0.495633,-99) , 
6, -948.87, 0, 0, 0.499753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480699,-99) , 
5, 0.0237273, 1, 0, 0.498961,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0157847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.456482, 1, 1, 0.505652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486076,-99) , 
0, 0.504756, 1, 0, 0.504357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52373,-99) , 
NN(
0, 
0, 
-1, 0.40148, 0, -1, 0.491801,-99) , 
4, 0.999524, 1, 0, 0.495045,-99) , 
7, 0.142878, 1, 0, 0.499952,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0175941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.164626, 1, 1, 0.527261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481476,-99) , 
0, 0.499994, 1, 0, 0.495531,-99) , 
9, -1.13969, 0, 0, 0.508541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458627,-99) , 
4, 0.999524, 0, 0, 0.500365,-99) , 
NN(
0, 
0, 
-1, 2.45621, 1, -1, 0.492029,-99) , 
6, -948.87, 1, 0, 0.49709,-99) , 
8, -2.71411, 1, 0, 0.499353,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0138755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466123,-99) , 
8, -1.10486, 1, 0, 0.495006,-99) , 
6, -951.286, 0, 0, 0.511825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499406,-99) , 
4, 0.999524, 1, 0, 0.501128,-99) , 
NN(
0, 
0, 
-1, -951.275, 1, -1, 0.481894,-99) , 
9, 4.03957, 1, 0, 0.499102,-99) , 
7, -1.28571, 1, 0, 0.500551,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0121259);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498355,-99) , 
5, 0.0101852, 0, 0, 0.501447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484,-99) , 
9, 4.57173, 1, 0, 0.500153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474864,-99) , 
5, 0.0237659, 1, 0, 0.499122,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0249451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492111,-99) , 
3, 4.53352, 1, 0, 0.517509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483101,-99) , 
4, 0.999048, 0, 0, 0.514312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487523,-99) , 
2, 0.0163012, 0, 0, 0.494912,-99) , 
2, -0.0303359, 1, 0, 0.500616,-99) , 
2, 0.214515, 0, 0, 0.501579,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0215575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499427,-99) , 
8, -2.47133, 1, 0, 0.506972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493703,-99) , 
5, 0.0238077, 0, 0, 0.496469,-99) , 
8, -0.639666, 1, 0, 0.502351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491543,-99) , 
9, -1.38854, 0, 0, 0.506626,-99) , 
NN(
0, 
0, 
-1, -1.06176, 1, -1, 0.470792,-99) , 
7, -0.742827, 1, 0, 0.492518,-99) , 
9, -0.770318, 0, 0, 0.50047,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0134501);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.332111, 0, 1, 0.518833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480963,-99) , 
9, 5.92297, 1, 0, 0.502924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474296,-99) , 
5, 0.0237968, 1, 0, 0.501742,-99) , 
7, -1.57138, 1, 0, 0.502994,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0181257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488873,-99) , 
3, 4.53422, 1, 0, 0.516085,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.525729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492239,-99) , 
2, -0.0228386, 1, 0, 0.496736,-99) , 
2, 0.132647, 0, 0, 0.498334,-99) , 
2, 0.214279, 0, 0, 0.499341,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0208532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49741,-99) , 
5, 0.00453379, 1, 0, 0.504813,-99) , 
5, 0.0238025, 0, 0, 0.506189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496624,-99) , 
9, -0.385781, 0, 0, 0.505112,-99) , 
NN(
0, 
0, 
-1, 0.427755, 1, -1, 0.484516,-99) , 
8, -2.2497, 1, 0, 0.497543,-99) , 
9, 0.46905, 0, 0, 0.502037,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0105242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0744951, 0, 1, 0.512683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498173,-99) , 
7, -1.5714, 1, 0, 0.499617,-99) , 
2, -0.0511747, 1, 0, 0.501853,-99) , 
NN(
0, 
0, 
-1, 4.61805, 1, -1, 0.48459,-99) , 
2, -0.214417, 0, 0, 0.500894,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0195757);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0238025, 0, 1, 0.508039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499397,-99) , 
9, 0.289134, 0, 0, 0.505817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461348,-99) , 
6, -951.286, 0, 0, 0.481263,-99) , 
8, -1.67208, 1, 0, 0.501119,-99) , 
9, 0.742411, 0, 0, 0.504292,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0140916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499628,-99) , 
7, 0.42857, 1, 0, 0.505602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478346,-99) , 
4, 0.99932, 0, 0, 0.504538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478133,-99) , 
4, 0.998571, 0, 0, 0.503592,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0194988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499305,-99) , 
9, -1.59335, 0, 0, 0.51572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486696,-99) , 
9, -0.489582, 0, 0, 0.50337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492708,-99) , 
0, 0.493328, 1, 0, 0.495837,-99) , 
8, -0.110087, 1, 0, 0.500972,-99) , 
8, -3.10801, 1, 0, 0.502773,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0116268);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525142,-99) , 
NN(
NN(
0, 
0, 
-1, -2.0345, 1, 1, 0.504337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481611,-99) , 
5, 0.0238024, 1, 0, 0.503416,-99) , 
7, -1.85711, 1, 0, 0.50439,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0160498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497218,-99) , 
9, 0.958556, 0, 0, 0.502255,-99) , 
4, 0.999048, 1, 0, 0.503787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488496,-99) , 
2, 0.0306186, 1, 0, 0.498114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467281,-99) , 
2, -0.214276, 0, 0, 0.494093,-99) , 
3, 4.3121, 1, 0, 0.501642,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0174235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477291,-99) , 
9, -1.23907, 0, 0, 0.499595,-99) , 
8, -3.86827, 1, 0, 0.501772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488859,-99) , 
7, 0.714304, 0, 0, 0.496379,-99) , 
NN(
0, 
0, 
-1, 3.50242, 1, -1, 0.474694,-99) , 
2, -0.0708115, 0, 0, 0.492457,-99) , 
8, -0.366509, 1, 0, 0.498857,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0139336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493925,-99) , 
8, -1.38767, 1, 0, 0.515745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496909,-99) , 
8, -2.28031, 1, 0, 0.500701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475489,-99) , 
5, 0.0237659, 1, 0, 0.499657,-99) , 
7, -1.57139, 1, 0, 0.50083,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.00834463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498827,-99) , 
4, 0.999524, 1, 0, 0.500403,-99) , 
7, -1.8571, 1, 0, 0.501374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477246,-99) , 
4, 0.998572, 0, 0, 0.5005,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0108098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504457,-99) , 
NN(
0, 
0, 
-1, 0.50626, 1, -1, 0.487765,-99) , 
0, 0.505029, 1, 0, 0.503484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477431,-99) , 
0, 0.489519, 0, 0, 0.502755,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0218468);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44664,-99) , 
4, 0.999796, 0, 0, 0.507137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478531,-99) , 
4, 0.999524, 0, 0, 0.504524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49012,-99) , 
9, 3.85953, 1, 0, 0.501787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471872,-99) , 
8, -2.35913, 0, 0, 0.48103,-99) , 
9, -0.0766608, 0, 0, 0.497984,-99) , 
7, -0.142837, 1, 0, 0.500746,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.00990303);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498646,-99) , 
4, 0.999524, 1, 0, 0.500674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486701,-99) , 
2, 0.0717729, 0, 0, 0.490503,-99) , 
0, 0.502444, 1, 0, 0.49897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477729,-99) , 
0, 0.489519, 0, 0, 0.498379,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0219073);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498978,-99) , 
9, 0.712666, 0, 0, 0.504723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481617,-99) , 
6, -948.87, 0, 0, 0.492104,-99) , 
8, -1.19797, 1, 0, 0.499529,-99) , 
8, 4.46852, 0, 0, 0.500569,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0253669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.386526, 0, 1, 0.510833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468371,-99) , 
9, 1.51716, 0, 0, 0.493792,-99) , 
8, -0.857765, 1, 0, 0.505389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49483,-99) , 
7, 0.823127, 1, 0, 0.502766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474723,-99) , 
8, -2.53534, 1, 0, 0.485827,-99) , 
9, 0.407574, 0, 0, 0.498055,-99) , 
7, 0.142857, 1, 0, 0.501917,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0168896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.367442, 1, 1, 0.517504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493851,-99) , 
3, 1.93465, 1, 0, 0.49855,-99) , 
3, 0.715711, 1, 0, 0.501657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485051,-99) , 
2, 0.0781982, 1, 0, 0.498238,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.481708,-99) , 
2, -0.0714547, 0, 0, 0.492854,-99) , 
3, 4.37255, 1, 0, 0.499735,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0155872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460823,-99) , 
4, 0.999932, 0, 0, 0.517567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472822,-99) , 
5, 0.0238024, 1, 0, 0.501292,-99) , 
7, -1.28571, 1, 0, 0.50316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478371,-99) , 
4, 0.998572, 0, 0, 0.502268,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.014971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497564,-99) , 
2, -0.0298638, 1, 0, 0.50169,-99) , 
2, 0.214825, 0, 0, 0.502908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487766,-99) , 
2, -0.0782828, 0, 0, 0.496656,-99) , 
NN(
0, 
0, 
-1, -1.16943, 1, -1, 0.482859,-99) , 
2, 0.0713655, 1, 0, 0.492157,-99) , 
3, 4.31763, 1, 0, 0.500523,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0139729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57143, 1, 1, 0.504738,-99) , 
NN(
0, 
0, 
-1, -0.999984, 0, -1, 0.487626,-99) , 
4, 0.999932, 0, 0, 0.500462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484061,-99) , 
4, 0.998571, 0, 0, 0.499863,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0258555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485353,-99) , 
2, 0.100546, 0, 0, 0.512251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486764,-99) , 
2, 0.275463, 1, 0, 0.507254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482817,-99) , 
4, 0.999524, 0, 0, 0.501269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479745,-99) , 
2, 0.0250731, 0, 0, 0.49243,-99) , 
2, -0.00343191, 1, 0, 0.497315,-99) , 
2, 0.0713938, 0, 0, 0.499117,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0158199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498473,-99) , 
8, -0.781777, 1, 0, 0.504662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492379,-99) , 
2, 0.0712986, 0, 0, 0.495762,-99) , 
1, 0.00113319, 0, 0, 0.49955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475088,-99) , 
5, 0.0238076, 1, 0, 0.498551,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0207592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489925,-99) , 
0, 0.500947, 1, 0, 0.516926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494647,-99) , 
4, 0.999524, 1, 0, 0.496922,-99) , 
3, 0.714406, 1, 0, 0.500191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488017,-99) , 
9, 2.04947, 0, 0, 0.494677,-99) , 
NN(
0, 
0, 
-1, 0.298454, 1, -1, 0.479757,-99) , 
2, -0.071232, 0, 0, 0.489764,-99) , 
3, 4.4052, 1, 0, 0.497957,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0223039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472801,-99) , 
8, -0.903377, 1, 0, 0.499483,-99) , 
9, 2.70877, 0, 0, 0.512596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438617,-99) , 
7, -1.91156, 0, 0, 0.503794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449636,-99) , 
9, 3.00058, 1, 0, 0.494563,-99) , 
6, -948.87, 1, 0, 0.499821,-99) , 
7, 1.57143, 0, 0, 0.501019,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.00899116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142676, 0, 1, 0.518728,-99) , 
NN(
0, 
0, 
-1, 0.00113335, 0, -1, 0.497216,-99) , 
2, 0.214405, 0, 0, 0.498415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475916,-99) , 
5, 0.0238024, 1, 0, 0.497508,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0151917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494516,-99) , 
9, -1.43265, 0, 0, 0.516154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48056,-99) , 
7, -0.514449, 1, 0, 0.504787,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.495315,-99) , 
8, -2.88184, 1, 0, 0.496868,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0147711);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497294,-99) , 
2, -0.00240351, 1, 0, 0.513839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497214,-99) , 
2, 0.214869, 0, 0, 0.498523,-99) , 
3, 0.751969, 1, 0, 0.50116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490666,-99) , 
2, 0.00340403, 1, 0, 0.495407,-99) , 
NN(
0, 
0, 
-1, -0.14309, 1, -1, 0.479824,-99) , 
2, -0.0714243, 0, 0, 0.490275,-99) , 
3, 4.74166, 1, 0, 0.499091,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.00863536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496492,-99) , 
9, -1.69118, 0, 0, 0.513491,-99) , 
NN(
0, 
0, 
-1, 0.0079352, 0, 1, 0.502314,-99) , 
8, -3.19669, 1, 0, 0.503543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486188,-99) , 
5, 0.0238076, 1, 0, 0.502837,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0173048);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498692,-99) , 
9, 0.217037, 0, 0, 0.507104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4824,-99) , 
9, 1.01985, 0, 0, 0.495327,-99) , 
8, -1.7812, 1, 0, 0.500441,-99) , 
9, 7.34815, 0, 0, 0.501235,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0102092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.72133, 1, 1, 0.503901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481806,-99) , 
8, -0.539889, 1, 0, 0.495464,-99) , 
3, 4.41184, 1, 0, 0.502103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480307,-99) , 
0, 0.489519, 0, 0, 0.501488,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0114945);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.532788, 1, 1, 0.503518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485002,-99) , 
8, -1.75582, 1, 0, 0.499535,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.474567,-99) , 
8, -0.381304, 1, 0, 0.491831,-99) , 
3, 4.74401, 1, 0, 0.501291,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.017074);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.51701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498227,-99) , 
9, 1.48152, 0, 0, 0.501018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487566,-99) , 
5, 0.0237273, 0, 0, 0.491092,-99) , 
8, -0.448547, 1, 0, 0.497512,-99) , 
8, -3.39785, 1, 0, 0.499066,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0269671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30183, 0, 1, 0.511802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489968,-99) , 
5, 0.0238077, 0, 0, 0.492747,-99) , 
8, -0.642873, 1, 0, 0.503531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471613,-99) , 
7, -1.00202, 1, 0, 0.485883,-99) , 
8, -3.84716, 1, 0, 0.493865,-99) , 
9, -0.812095, 0, 0, 0.501783,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0198598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480831,-99) , 
6, -951.286, 0, 0, 0.509889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489692,-99) , 
4, 0.999977, 0, 0, 0.499756,-99) , 
4, 0.999524, 1, 0, 0.5007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484747,-99) , 
0, 0.489519, 0, 0, 0.500255,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0153321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494817,-99) , 
6, -948.956, 0, 0, 0.49977,-99) , 
8, -3.53278, 1, 0, 0.501296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476022,-99) , 
5, 0.0238024, 1, 0, 0.500265,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0205718);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.37439, 1, 1, 0.51645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491238,-99) , 
3, 4.32156, 1, 0, 0.506405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489725,-99) , 
2, -0.0157949, 1, 0, 0.497182,-99) , 
2, 0.0308451, 0, 0, 0.499852,-99) , 
2, -0.214005, 1, 0, 0.500792,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0205219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465548,-99) , 
7, -1.93874, 0, 0, 0.49815,-99) , 
6, -951.286, 0, 0, 0.512582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473254,-99) , 
7, 1.97959, 1, 0, 0.506297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470482,-99) , 
6, -0.858501, 0, 0, 0.494226,-99) , 
6, -948.87, 1, 0, 0.501054,-99) , 
7, -1.28568, 1, 0, 0.502356,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0143884);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499015,-99) , 
8, -2.47891, 1, 0, 0.503832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493447,-99) , 
4, 0.999524, 1, 0, 0.496905,-99) , 
6, -14.0823, 1, 0, 0.500884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478301,-99) , 
0, 0.489519, 0, 0, 0.500253,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0164944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0193925, 1, 1, 0.508176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489407,-99) , 
7, -0.142823, 1, 0, 0.495226,-99) , 
3, 1.6506, 1, 0, 0.501472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488482,-99) , 
6, -951.286, 1, 0, 0.496927,-99) , 
NN(
0, 
0, 
-1, -0.207706, 0, -1, 0.482841,-99) , 
2, -0.0716814, 0, 0, 0.492298,-99) , 
3, 4.75332, 1, 0, 0.499733,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.015144);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496972,-99) , 
8, -2.00046, 1, 0, 0.515161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489911,-99) , 
6, -14.0823, 1, 0, 0.497046,-99) , 
7, -1.53058, 1, 0, 0.498511,-99) , 
7, 2.14285, 0, 0, 0.499543,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0353968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477635,-99) , 
6, -951.275, 1, 0, 0.502182,-99) , 
7, 1.28569, 0, 0, 0.508484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497089,-99) , 
9, 0.712666, 0, 0, 0.503134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464842,-99) , 
6, -948.87, 0, 0, 0.485978,-99) , 
8, -1.19777, 1, 0, 0.49752,-99) , 
8, 0.862707, 0, 0, 0.499565,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0221348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481266,-99) , 
7, -0.556566, 1, 0, 0.498204,-99) , 
9, -0.666947, 0, 0, 0.508897,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0238025, 0, 1, 0.504432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481092,-99) , 
8, -1.78733, 1, 0, 0.494616,-99) , 
9, 0.99446, 0, 0, 0.499792,-99) , 
8, -2.5574, 1, 0, 0.501911,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0170298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496279,-99) , 
4, 0.999984, 0, 0, 0.502932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464346,-99) , 
6, -951.286, 0, 0, 0.485579,-99) , 
4, 0.99966, 0, 0, 0.501472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470168,-99) , 
4, 0.998571, 0, 0, 0.500358,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0181401);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493411,-99) , 
8, -1.25713, 1, 0, 0.501576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483047,-99) , 
9, -1.47306, 0, 0, 0.500419,-99) , 
7, -1.85708, 1, 0, 0.501135,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0112797);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.363857, 1, 1, 0.516237,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.51256,-99) , 
NN(
0, 
0, 
-1, 0.142846, 1, -1, 0.495433,-99) , 
2, 0.132646, 0, 0, 0.496374,-99) , 
2, 0.214279, 0, 0, 0.497495,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0209063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.13982, 0, 1, 0.507477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493632,-99) , 
5, 0.0237272, 0, 0, 0.496544,-99) , 
8, -0.785298, 1, 0, 0.502496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483356,-99) , 
7, -1.1608, 1, 0, 0.495626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466646,-99) , 
9, -1.93487, 0, 0, 0.489535,-99) , 
9, -0.876331, 0, 0, 0.500303,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0227235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459304,-99) , 
9, 4.28385, 1, 0, 0.50705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494991,-99) , 
9, 3.47375, 0, 0, 0.498068,-99) , 
5, 0.00566847, 0, 0, 0.501029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480133,-99) , 
5, 0.0238076, 1, 0, 0.500179,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0168734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491396,-99) , 
8, -2.98412, 1, 0, 0.517787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476103,-99) , 
9, -1.95332, 0, 0, 0.510723,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473389,-99) , 
4, 0.999637, 0, 0, 0.500912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476167,-99) , 
4, 0.999048, 0, 0, 0.4998,-99) , 
8, -2.69985, 1, 0, 0.50199,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0089875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498854,-99) , 
9, -1.35871, 0, 0, 0.512049,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.498445,-99) , 
8, -2.74869, 1, 0, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47944,-99) , 
5, 0.0237891, 1, 0, 0.500219,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0115916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497633,-99) , 
2, -0.0300398, 1, 0, 0.500805,-99) , 
2, 0.214749, 0, 0, 0.501996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481792,-99) , 
3, 8.71113, 1, 0, 0.501086,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0155002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487173,-99) , 
9, -1.86644, 0, 0, 0.512322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491267,-99) , 
6, -948.956, 1, 0, 0.4979,-99) , 
7, -1.57144, 1, 0, 0.499323,-99) , 
8, -3.39856, 1, 0, 0.500358,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0204523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485185,-99) , 
9, -1.06059, 0, 0, 0.505406,-99) , 
8, -3.85576, 1, 0, 0.511716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498201,-99) , 
7, -1.57143, 1, 0, 0.499822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44224,-99) , 
6, -951.286, 0, 0, 0.478747,-99) , 
4, 0.999524, 0, 0, 0.498189,-99) , 
8, -2.65528, 1, 0, 0.501034,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0116437);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516869,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.518168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496471,-99) , 
6, -948.956, 1, 0, 0.501508,-99) , 
2, 0.214242, 0, 0, 0.502448,-99) , 
7, -1.85711, 1, 0, 0.50309,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0191752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.163067, 1, 1, 0.529262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490647,-99) , 
8, -3.55789, 1, 0, 0.499289,-99) , 
9, -1.16809, 0, 0, 0.512262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466353,-99) , 
4, 0.999728, 0, 0, 0.502999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454164,-99) , 
6, -951.286, 0, 0, 0.480824,-99) , 
4, 0.999524, 0, 0, 0.50124,-99) , 
8, -2.69985, 1, 0, 0.503471,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0195716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497094,-99) , 
3, 4.39836, 1, 0, 0.512273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498356,-99) , 
8, -1.00227, 1, 0, 0.507824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489606,-99) , 
2, -0.0160899, 1, 0, 0.497688,-99) , 
2, 0.0305538, 0, 0, 0.500632,-99) , 
2, -0.214326, 1, 0, 0.501282,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.024709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497208,-99) , 
6, -948.87, 0, 0, 0.50292,-99) , 
5, 0.0238076, 0, 0, 0.504287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495239,-99) , 
9, 0.13554, 0, 0, 0.503763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479411,-99) , 
9, 0.0527535, 1, 0, 0.485273,-99) , 
8, -1.82904, 1, 0, 0.497393,-99) , 
9, 1.12226, 0, 0, 0.500008,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0141336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.6049, 1, 1, 0.525339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48766,-99) , 
9, -1.56003, 0, 0, 0.51127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497384,-99) , 
8, -1.6834, 1, 0, 0.50151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47475,-99) , 
5, 0.0236639, 1, 0, 0.500406,-99) , 
7, -1.28571, 1, 0, 0.501643,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.027471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.485292, 1, 1, 0.512563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479258,-99) , 
6, -951.286, 1, 0, 0.497626,-99) , 
9, 4.21576, 1, 0, 0.508612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4973,-99) , 
9, 0.289409, 0, 0, 0.506329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46883,-99) , 
6, -951.286, 0, 0, 0.482834,-99) , 
8, -1.52557, 1, 0, 0.500112,-99) , 
9, 1.27346, 0, 0, 0.503093,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0174457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.40889, 0, 1, 0.521074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488955,-99) , 
7, -0.326991, 1, 0, 0.513876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478079,-99) , 
4, 0.999637, 0, 0, 0.503414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473046,-99) , 
4, 0.999048, 0, 0, 0.502043,-99) , 
8, -2.88184, 1, 0, 0.503981,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0144043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.382432, 1, 1, 0.526421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48261,-99) , 
9, -1.97222, 0, 0, 0.495268,-99) , 
9, -1.35835, 0, 0, 0.512388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489298,-99) , 
4, 0.999909, 0, 0, 0.499392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465918,-99) , 
4, 0.999048, 0, 0, 0.497932,-99) , 
8, -2.71411, 1, 0, 0.500802,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0132357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490019,-99) , 
7, -0.628732, 1, 0, 0.50664,-99) , 
9, -0.767335, 0, 0, 0.512854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497774,-99) , 
2, 0.21397, 0, 0, 0.498667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480553,-99) , 
4, 0.999048, 0, 0, 0.497867,-99) , 
8, -2.69985, 1, 0, 0.500884,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0109936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49464,-99) , 
8, -3.62713, 0, 0, 0.501109,-99) , 
9, -1.41525, 0, 0, 0.518674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523675,-99) , 
NN(
0, 
0, 
-1, -1.13604, 0, -1, 0.498337,-99) , 
7, -1.57143, 1, 0, 0.49965,-99) , 
8, -3.04061, 1, 0, 0.502217,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0114757);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49816,-99) , 
8, -1.33229, 1, 0, 0.516411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499925,-99) , 
4, 0.999524, 1, 0, 0.501854,-99) , 
7, -1.28568, 1, 0, 0.503505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490067,-99) , 
7, -0.142602, 0, 0, 0.503736,-99) , 
NN(
0, 
0, 
-1, -0.646204, 1, -1, 0.481657,-99) , 
2, -0.139295, 1, 0, 0.494131,-99) , 
2, -0.0712816, 0, 0, 0.501835,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0204623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.43877, 1, 1, 0.509216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483237,-99) , 
7, -0.428541, 0, 0, 0.499089,-99) , 
8, -0.608086, 1, 0, 0.504751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476273,-99) , 
7, -0.742814, 1, 0, 0.492187,-99) , 
8, -3.81741, 1, 0, 0.497755,-99) , 
9, -0.698571, 0, 0, 0.503319,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.014595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493683,-99) , 
8, -0.906519, 1, 0, 0.505444,-99) , 
7, 1.28571, 0, 0, 0.510078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497404,-99) , 
7, -0.142833, 1, 0, 0.502031,-99) , 
NN(
0, 
0, 
-1, -0.00309187, 0, -1, 0.489177,-99) , 
0, 0.502852, 1, 0, 0.500338,-99) , 
2, 0.0716081, 0, 0, 0.502102,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0116457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481007,-99) , 
7, -0.428545, 0, 0, 0.517643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467108,-99) , 
4, 0.999683, 0, 0, 0.500486,-99) , 
4, 0.999524, 1, 0, 0.502197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477297,-99) , 
5, 0.0237968, 1, 0, 0.501198,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0161887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0186738, 0, 1, 0.515467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49694,-99) , 
7, 1.85712, 0, 0, 0.498331,-99) , 
3, 1.32947, 1, 0, 0.503888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485198,-99) , 
3, 8.71113, 1, 0, 0.503053,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.014998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.100696, 0, 1, 0.508233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495042,-99) , 
0, 0.491424, 1, 0, 0.496857,-99) , 
3, 2.32225, 1, 0, 0.503185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485088,-99) , 
3, 9.41367, 1, 0, 0.502552,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0135023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497394,-99) , 
7, -0.351684, 1, 0, 0.527954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487825,-99) , 
8, -3.57002, 0, 0, 0.497601,-99) , 
9, -1.32477, 0, 0, 0.511105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499031,-99) , 
2, 0.0707248, 0, 0, 0.501011,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.491263,-99) , 
3, 4.2884, 1, 0, 0.498848,-99) , 
8, -2.88184, 1, 0, 0.500848,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0111209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49914,-99) , 
2, 0.0308519, 0, 0, 0.502619,-99) , 
2, -0.213988, 1, 0, 0.503893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483921,-99) , 
3, 8.70229, 1, 0, 0.502998,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0213258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483497,-99) , 
9, -1.63741, 0, 0, 0.514688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49121,-99) , 
9, 1.75213, 0, 0, 0.498985,-99) , 
6, -951.275, 0, 0, 0.505592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498401,-99) , 
7, 0.455817, 1, 0, 0.501918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483174,-99) , 
8, -2.27613, 0, 0, 0.489789,-99) , 
9, 0.0157658, 0, 0, 0.499353,-99) , 
7, -0.142833, 1, 0, 0.502001,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.020306);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.83752, 0, 1, 0.518381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498371,-99) , 
7, 0.714434, 0, 0, 0.505203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476222,-99) , 
8, -1.52236, 1, 0, 0.496974,-99) , 
9, 1.23185, 0, 0, 0.500213,-99) , 
8, -3.33543, 1, 0, 0.501809,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0202147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.16474, 0, 1, 0.510194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495846,-99) , 
6, -948.87, 0, 0, 0.502309,-99) , 
8, -0.792567, 1, 0, 0.506542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49469,-99) , 
8, -3.64711, 1, 0, 0.502465,-99) , 
NN(
0, 
0, 
-1, -1.00909, 1, -1, 0.474145,-99) , 
0, 0.499995, 1, 0, 0.493515,-99) , 
9, -0.84368, 0, 0, 0.504262,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0180699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496236,-99) , 
4, 0.999984, 0, 0, 0.504302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471098,-99) , 
7, 0.42857, 0, 0, 0.485838,-99) , 
4, 0.99966, 0, 0, 0.502762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484586,-99) , 
4, 0.998572, 0, 0, 0.502099,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0150766);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.476482, 1, 1, 0.517525,-99) , 
NN(
NN(
0, 
0, 
-1, 0.142863, 0, 1, 0.508426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494762,-99) , 
2, -0.121038, 1, 0, 0.496821,-99) , 
2, 0.0305535, 0, 0, 0.500187,-99) , 
2, -0.214326, 1, 0, 0.501173,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0213161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497265,-99) , 
8, -3.56954, 1, 0, 0.505046,-99) , 
9, -0.624035, 0, 0, 0.514222,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0237968, 0, 1, 0.506552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484448,-99) , 
9, 0.296184, 0, 0, 0.492596,-99) , 
9, 0.922649, 0, 0, 0.500255,-99) , 
8, -2.54214, 1, 0, 0.50354,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0144406);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.68632, 0, 1, 0.517262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499898,-99) , 
6, -951.275, 0, 0, 0.506623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484461,-99) , 
9, 0.171612, 0, 0, 0.498083,-99) , 
7, -0.142861, 1, 0, 0.501269,-99) , 
8, -3.33543, 1, 0, 0.502676,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0183515);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461817,-99) , 
7, -1.85714, 0, 0, 0.505626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495118,-99) , 
7, -1.28543, 1, 0, 0.499052,-99) , 
6, -948.956, 1, 0, 0.50285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481805,-99) , 
4, 0.998571, 0, 0, 0.502097,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.013362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2327, 1, 1, 0.517875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482688,-99) , 
3, 3.63394, 1, 0, 0.501549,-99) , 
3, 0.702755, 1, 0, 0.50417,-99) , 
NN(
0, 
0, 
-1, 1.2857, 1, -1, 0.494007,-99) , 
3, 4.32376, 1, 0, 0.501916,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00577613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499684,-99) , 
5, 0.0101985, 0, 0, 0.501047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477116,-99) , 
0, 0.489519, 0, 0, 0.50038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480997,-99) , 
5, 0.0237968, 1, 0, 0.49958,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0119853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.02763, 0, 1, 0.504792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483776,-99) , 
9, 1.88615, 0, 0, 0.496054,-99) , 
8, -0.765152, 1, 0, 0.50157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481503,-99) , 
0, 0.502716, 0, 0, 0.497834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485109,-99) , 
9, -0.412204, 0, 0, 0.494638,-99) , 
0, 0.5019, 1, 0, 0.500228,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0165051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.44159, 1, 1, 0.524709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48839,-99) , 
8, -3.74203, 0, 0, 0.49431,-99) , 
9, -1.48519, 0, 0, 0.511086,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474365,-99) , 
4, 0.999524, 0, 0, 0.502437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483193,-99) , 
9, 0.752857, 0, 0, 0.496301,-99) , 
7, 0.428583, 1, 0, 0.499728,-99) , 
8, -2.88184, 1, 0, 0.501581,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0119408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490797,-99) , 
9, -1.65786, 0, 0, 0.510171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496609,-99) , 
0, 0.505619, 1, 0, 0.506386,-99) , 
NN(
0, 
0, 
-1, -0.354525, 1, -1, 0.49627,-99) , 
0, 0.503804, 0, 0, 0.497309,-99) , 
8, -3.15344, 1, 0, 0.498784,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0088257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142954, 0, 1, 0.515077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497839,-99) , 
7, -1.85714, 1, 0, 0.498809,-99) , 
2, -0.132429, 1, 0, 0.499859,-99) , 
2, -0.214059, 1, 0, 0.500722,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0148939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.112245, 1, 1, 0.507069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490892,-99) , 
2, 0.214279, 1, 0, 0.506189,-99) , 
NN(
NN(
0, 
0, 
-1, 1.0952, 0, 1, 0.509411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493233,-99) , 
4, 0.999524, 1, 0, 0.494975,-99) , 
0, 0.494281, 1, 0, 0.497786,-99) , 
7, 0.142857, 1, 0, 0.502216,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0215262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.249323, 0, 1, 0.507946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49007,-99) , 
9, 1.3145, 0, 0, 0.49656,-99) , 
8, -1.68064, 1, 0, 0.503623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492115,-99) , 
6, -948.87, 0, 0, 0.508373,-99) , 
NN(
0, 
0, 
-1, -0.877518, 0, -1, 0.487821,-99) , 
7, 0.714305, 0, 0, 0.495133,-99) , 
8, -0.176269, 1, 0, 0.501188,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0140465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492027,-99) , 
8, -1.03786, 1, 0, 0.500327,-99) , 
8, 1.69059, 0, 0, 0.501592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477855,-99) , 
9, 7.19993, 0, 0, 0.48902,-99) , 
9, 4.57173, 1, 0, 0.50055,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.011808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237969, 0, 1, 0.504192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486709,-99) , 
8, -2.06454, 1, 0, 0.496911,-99) , 
9, 0.711478, 0, 0, 0.500156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475176,-99) , 
7, 2.14285, 1, 0, 0.499354,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0143478);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499338,-99) , 
6, -951.275, 0, 0, 0.507688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490606,-99) , 
9, 0.957998, 0, 0, 0.496805,-99) , 
7, -0.142861, 1, 0, 0.500005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506487,-99) , 
NN(
0, 
0, 
-1, -1.25952, 0, -1, 0.488843,-99) , 
2, 0.0721107, 0, 0, 0.492005,-99) , 
9, -0.60248, 0, 0, 0.498197,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0177598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.263199, 1, 1, 0.51375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486696,-99) , 
9, 4.24207, 1, 0, 0.500434,-99) , 
7, -0.142857, 1, 0, 0.504216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493399,-99) , 
9, -1.39283, 0, 0, 0.505083,-99) , 
NN(
0, 
0, 
-1, -2.70136, 0, -1, 0.483744,-99) , 
8, -3.11541, 1, 0, 0.493312,-99) , 
9, -0.412204, 0, 0, 0.501289,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0164123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498495,-99) , 
9, 0.473039, 1, 0, 0.515386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493173,-99) , 
7, -1.85711, 1, 0, 0.49419,-99) , 
2, -0.132433, 1, 0, 0.495348,-99) , 
2, -0.214059, 1, 0, 0.496491,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0163077);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.519635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496955,-99) , 
7, 0.142872, 0, 0, 0.505325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492298,-99) , 
7, -0.428571, 1, 0, 0.496609,-99) , 
2, 0.0307885, 0, 0, 0.499153,-99) , 
2, -0.214055, 1, 0, 0.500342,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0116789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491038,-99) , 
9, -1.6943, 0, 0, 0.50805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494299,-99) , 
9, 0.118929, 0, 0, 0.499883,-99) , 
NN(
0, 
0, 
-1, -0.139272, 1, -1, 0.491139,-99) , 
2, -0.0712558, 0, 0, 0.498319,-99) , 
8, -3.15344, 1, 0, 0.499437,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0125021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496131,-99) , 
2, 0.213922, 0, 0, 0.497042,-99) , 
4, 0.999048, 1, 0, 0.498237,-99) , 
NN(
0, 
0, 
-1, 0.142935, 0, -1, 0.48524,-99) , 
0, 0.492376, 0, 0, 0.496891,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0158202);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499634,-99) , 
9, 0.513266, 0, 0, 0.510427,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497198,-99) , 
8, -1.24702, 1, 0, 0.503301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458193,-99) , 
8, -3.29521, 0, 0, 0.485598,-99) , 
8, -3.66297, 1, 0, 0.493768,-99) , 
9, -1.05857, 0, 0, 0.501986,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0145802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499875,-99) , 
8, -0.571408, 1, 0, 0.505414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48866,-99) , 
8, -3.82212, 1, 0, 0.493884,-99) , 
9, -0.770318, 0, 0, 0.503235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473248,-99) , 
0, 0.489519, 0, 0, 0.502411,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0164397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.883697, 1, 1, 0.511924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485394,-99) , 
8, -3.42428, 0, 0, 0.495569,-99) , 
9, -1.16023, 0, 0, 0.507304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498129,-99) , 
7, 1.05439, 0, 0, 0.514139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469905,-99) , 
7, 1.95238, 1, 0, 0.497807,-99) , 
8, 1.28863, 0, 0, 0.500731,-99) , 
7, -0.142836, 1, 0, 0.503532,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0150168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.589397, 1, 1, 0.510122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497064,-99) , 
8, 1.962, 0, 0, 0.499287,-99) , 
7, -0.142836, 1, 0, 0.502682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509742,-99) , 
NN(
0, 
0, 
-1, -2.98674, 1, -1, 0.485346,-99) , 
9, -0.979922, 0, 0, 0.489203,-99) , 
9, -0.832078, 0, 0, 0.500282,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0123624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492522,-99) , 
5, 0.000755624, 0, 0, 0.503689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486169,-99) , 
5, 0.0158682, 1, 0, 0.503032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480927,-99) , 
5, 0.0238024, 1, 0, 0.50214,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0264025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -948.956, 0, 1, 0.507995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483068,-99) , 
7, -0.156459, 1, 0, 0.496508,-99) , 
7, 0.142874, 0, 0, 0.503865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492064,-99) , 
9, -0.182232, 0, 0, 0.503266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478765,-99) , 
9, -0.0576908, 1, 0, 0.483764,-99) , 
8, -1.9406, 1, 0, 0.496329,-99) , 
9, 0.972721, 0, 0, 0.499413,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.00807698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503188,-99) , 
NN(
0, 
0, 
-1, 0.805265, 0, -1, 0.491542,-99) , 
0, 0.491922, 0, 0, 0.502129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486771,-99) , 
0, 0.505709, 1, 0, 0.501533,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0131303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.624056, 1, 1, 0.525852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499469,-99) , 
9, -1.67522, 0, 0, 0.514015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476565,-99) , 
2, -0.213628, 0, 0, 0.499801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483899,-99) , 
8, -2.43242, 1, 0, 0.493522,-99) , 
9, 0.273512, 0, 0, 0.497557,-99) , 
8, -3.1164, 1, 0, 0.499546,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0110388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.8571, 1, 1, 0.503033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468885,-99) , 
4, 0.999705, 0, 0, 0.501822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46819,-99) , 
6, -951.286, 0, 0, 0.48703,-99) , 
4, 0.999524, 0, 0, 0.500432,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0156711);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486365,-99) , 
9, -1.63741, 0, 0, 0.517983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486924,-99) , 
8, -2.95555, 1, 0, 0.497909,-99) , 
6, -951.275, 0, 0, 0.505768,-99) , 
NN(
0, 
0, 
-1, 0.0236688, 1, -1, 0.496384,-99) , 
7, -0.714299, 1, 0, 0.498641,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0160283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494228,-99) , 
7, -0.428468, 0, 0, 0.505068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486739,-99) , 
8, -2.36586, 1, 0, 0.497276,-99) , 
9, 0.452122, 0, 0, 0.501329,-99) , 
NN(
0, 
0, 
-1, 1.00001, 1, -1, 0.490849,-99) , 
0, 0.502852, 1, 0, 0.499856,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0180766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44248, 0, 1, 0.50662,-99) , 
NN(
0, 
0, 
-1, -0.986928, 1, -1, 0.471056,-99) , 
7, 1.57139, 1, 0, 0.503983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511138,-99) , 
NN(
0, 
0, 
-1, 5.45045, 1, -1, 0.489038,-99) , 
7, 1.5714, 0, 0, 0.49203,-99) , 
8, -0.129631, 1, 0, 0.500623,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0146174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428543, 0, 1, 0.510167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494612,-99) , 
8, 4.46349, 0, 0, 0.495971,-99) , 
5, 0.0101985, 0, 0, 0.497711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478899,-99) , 
5, 0.0237968, 1, 0, 0.496935,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00922609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496665,-99) , 
9, -1.42041, 0, 0, 0.512393,-99) , 
NN(
0, 
0, 
-1, 0.99932, 0, -1, 0.497815,-99) , 
8, -3.1164, 1, 0, 0.499482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473977,-99) , 
4, 0.998572, 0, 0, 0.498586,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0102244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237968, 0, 1, 0.503532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493137,-99) , 
2, -0.0697906, 1, 0, 0.496498,-99) , 
7, 0.714304, 1, 0, 0.501545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481273,-99) , 
0, 0.489519, 0, 0, 0.500981,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0126929);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495386,-99) , 
8, -1.77819, 1, 0, 0.500004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475759,-99) , 
5, 0.0238077, 1, 0, 0.499158,-99) , 
9, 7.13964, 0, 0, 0.499955,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.00683696);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499609,-99) , 
0, 0.49809, 0, 0, 0.51373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498544,-99) , 
4, 0.999048, 1, 0, 0.499496,-99) , 
2, -0.214059, 1, 0, 0.500304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485454,-99) , 
5, 0.0238076, 1, 0, 0.499692,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.00969924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4913,-99) , 
4, 0.999909, 0, 0, 0.500501,-99) , 
4, 0.999048, 1, 0, 0.501395,-99) , 
NN(
0, 
0, 
-1, 0.143014, 0, -1, 0.491346,-99) , 
0, 0.492376, 0, 0, 0.500365,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0165822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.176401, 1, 1, 0.52179,-99) , 
NN(
0, 
0, 
-1, -1.95672, 0, -1, 0.494216,-99) , 
9, -1.17359, 0, 0, 0.505657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494559,-99) , 
7, 0.877587, 1, 0, 0.500541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481216,-99) , 
6, -951.286, 0, 0, 0.489881,-99) , 
7, -0.428541, 0, 0, 0.497974,-99) , 
8, -2.7431, 1, 0, 0.499455,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0140534);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497558,-99) , 
8, -0.79754, 1, 0, 0.506265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490637,-99) , 
9, 0.34036, 0, 0, 0.497341,-99) , 
7, -0.142857, 1, 0, 0.500284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48655,-99) , 
8, -3.33555, 0, 0, 0.494612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453288,-99) , 
8, -3.01771, 1, 0, 0.486974,-99) , 
9, -1.01658, 0, 0, 0.498373,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.00461644);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489519, 1, 1, 0.50133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471026,-99) , 
4, 0.998572, 0, 0, 0.500258,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0174484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47597,-99) , 
7, 1.84351, 1, 0, 0.501887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382898,-99) , 
6, -1.62804, 0, 0, 0.494492,-99) , 
6, -948.956, 1, 0, 0.498698,-99) , 
7, -1.85714, 1, 0, 0.499469,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0123307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482552,-99) , 
8, -0.64211, 1, 0, 0.515161,-99) , 
NN(
0, 
0, 
-1, 5.57739, 1, -1, 0.495937,-99) , 
3, 0.49963, 1, 0, 0.497231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486563,-99) , 
3, 8.70229, 1, 0, 0.496742,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0102339);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.515493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491431,-99) , 
6, -948.87, 1, 0, 0.496573,-99) , 
7, -1.85708, 1, 0, 0.497434,-99) , 
2, 0.214279, 0, 0, 0.49847,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0158775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49771,-99) , 
8, -0.842442, 1, 0, 0.50782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479819,-99) , 
9, -1.97038, 0, 0, 0.495323,-99) , 
9, -1.13768, 0, 0, 0.503347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49601,-99) , 
2, 0.0718277, 0, 0, 0.498532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470798,-99) , 
8, -2.61414, 0, 0, 0.482076,-99) , 
9, -0.229712, 0, 0, 0.495471,-99) , 
7, -0.428602, 1, 0, 0.498055,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0116981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496432,-99) , 
8, -0.111007, 0, 0, 0.513083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497672,-99) , 
9, 1.39195, 0, 0, 0.501143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486825,-99) , 
9, 5.47491, 1, 0, 0.500227,-99) , 
7, 1.85711, 0, 0, 0.50097,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0152688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.61699, 1, 1, 0.520845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489608,-99) , 
9, -1.56003, 0, 0, 0.509073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496144,-99) , 
9, 0.25765, 0, 0, 0.501369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474649,-99) , 
7, 0.755074, 0, 0, 0.489249,-99) , 
9, 4.03957, 1, 0, 0.500098,-99) , 
7, -1.28568, 1, 0, 0.501113,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0114962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.84025, 1, 1, 0.515219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496852,-99) , 
9, 1.62872, 0, 0, 0.499714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476504,-99) , 
4, 0.999048, 0, 0, 0.498551,-99) , 
8, -3.39785, 1, 0, 0.499884,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0139415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497288,-99) , 
9, -0.150047, 0, 0, 0.502739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492026,-99) , 
7, 1.5714, 0, 0, 0.49518,-99) , 
8, -0.0497727, 1, 0, 0.50063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473273,-99) , 
4, 0.998572, 0, 0, 0.49966,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0120253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498332,-99) , 
7, -0.142834, 1, 0, 0.5018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477776,-99) , 
4, 0.999048, 0, 0, 0.500693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518332,-99) , 
NN(
0, 
0, 
-1, -0.826398, 1, -1, 0.490526,-99) , 
4, 0.999524, 1, 0, 0.494788,-99) , 
9, -0.802969, 0, 0, 0.499602,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0116438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2398, 0, 1, 0.516373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48333,-99) , 
8, -3.05391, 1, 0, 0.509925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473359,-99) , 
4, 0.999683, 0, 0, 0.4993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47154,-99) , 
4, 0.999048, 0, 0, 0.498045,-99) , 
8, -2.88184, 1, 0, 0.500004,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0127091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.26342, 0, 1, 0.52362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498016,-99) , 
8, -3.50253, 1, 0, 0.514195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4885,-99) , 
6, -951.286, 0, 0, 0.508217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49713,-99) , 
7, -1.5714, 1, 0, 0.498296,-99) , 
4, 0.999524, 1, 0, 0.499171,-99) , 
8, -3.20228, 1, 0, 0.500779,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.00834314);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.33543, 1, 1, 0.503368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47651,-99) , 
5, 0.0238076, 1, 0, 0.502296,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.024881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481062,-99) , 
6, -948.87, 1, 0, 0.501359,-99) , 
7, 1.5716, 0, 0, 0.506088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498477,-99) , 
9, 0.208847, 0, 0, 0.505459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481954,-99) , 
6, -948.956, 0, 0, 0.491063,-99) , 
8, -1.80071, 1, 0, 0.498552,-99) , 
9, 2.29929, 0, 0, 0.500111,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0266293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483894,-99) , 
8, -1.571, 1, 0, 0.503144,-99) , 
9, 1.30905, 0, 0, 0.505146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478302,-99) , 
5, 0.00453446, 1, 0, 0.489878,-99) , 
5, 0.0238077, 0, 0, 0.492115,-99) , 
8, -0.446762, 1, 0, 0.500915,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0103553);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495881,-99) , 
9, -1.16073, 0, 0, 0.507717,-99) , 
NN(
0, 
0, 
-1, 0.0721846, 1, -1, 0.497259,-99) , 
8, -2.69985, 1, 0, 0.499365,-99) , 
0, 0.490471, 1, 0, 0.500119,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0152558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49892,-99) , 
9, -0.538702, 0, 0, 0.513561,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497715,-99) , 
8, -2.33433, 1, 0, 0.501778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518933,-99) , 
NN(
0, 
0, 
-1, -1.69385, 0, -1, 0.472843,-99) , 
6, -951.286, 0, 0, 0.489408,-99) , 
7, -1.28569, 0, 0, 0.500416,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0119045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497925,-99) , 
8, -0.415299, 1, 0, 0.52228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488746,-99) , 
3, 6.01873, 1, 0, 0.502135,-99) , 
3, 0.53033, 1, 0, 0.503673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48951,-99) , 
3, 9.39629, 1, 0, 0.503173,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0177583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491322,-99) , 
9, -1.14249, 0, 0, 0.505571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487866,-99) , 
7, 1.4762, 0, 0, 0.494781,-99) , 
9, 2.61075, 1, 0, 0.503492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455382,-99) , 
7, -1.8571, 0, 0, 0.489578,-99) , 
6, -951.286, 0, 0, 0.496546,-99) , 
7, -0.999964, 0, 0, 0.502339,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0150919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496571,-99) , 
8, -3.85331, 1, 0, 0.509003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491755,-99) , 
8, -1.58303, 1, 0, 0.497256,-99) , 
8, 5.56411, 0, 0, 0.498262,-99) , 
8, -3.2647, 1, 0, 0.499307,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00903156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524737,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480211,-99) , 
9, 5.60178, 1, 0, 0.500786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482606,-99) , 
5, 0.0237169, 1, 0, 0.500032,-99) , 
7, -1.85714, 1, 0, 0.501131,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0113488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482354,-99) , 
7, -0.14284, 0, 0, 0.514396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474208,-99) , 
4, 0.999819, 0, 0, 0.499068,-99) , 
4, 0.999524, 1, 0, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486397,-99) , 
0, 0.490471, 0, 0, 0.499796,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0162702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485735,-99) , 
9, -1.48519, 0, 0, 0.501515,-99) , 
4, 0.999524, 1, 0, 0.506032,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.508637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493708,-99) , 
8, -2.22651, 1, 0, 0.496115,-99) , 
8, 3.99958, 0, 0, 0.497311,-99) , 
8, -2.88184, 1, 0, 0.498727,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0140429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486545,-99) , 
8, -0.619602, 1, 0, 0.521171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496247,-99) , 
2, -0.213988, 1, 0, 0.497336,-99) , 
3, 0.516303, 1, 0, 0.499092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482001,-99) , 
3, 8.71744, 1, 0, 0.498323,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0126493);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49695,-99) , 
9, -1.60476, 0, 0, 0.520204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482842,-99) , 
7, -1.69386, 0, 0, 0.500238,-99) , 
6, -951.275, 0, 0, 0.508099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483893,-99) , 
9, 6.10689, 1, 0, 0.501076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475777,-99) , 
5, 0.0238024, 1, 0, 0.500049,-99) , 
7, -0.714257, 1, 0, 0.501973,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0155852);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494434,-99) , 
9, -0.0129426, 0, 0, 0.500978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477713,-99) , 
9, 2.59972, 0, 0, 0.488088,-99) , 
7, 1.38092, 1, 0, 0.499339,-99) , 
7, -1.85715, 1, 0, 0.500205,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00763243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48932,-99) , 
9, -1.83248, 0, 0, 0.508806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51364,-99) , 
NN(
0, 
0, 
-1, 0.501582, 1, -1, 0.497953,-99) , 
0, 0.489519, 1, 0, 0.498408,-99) , 
8, -3.33543, 1, 0, 0.499316,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0113262);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469101,-99) , 
4, 0.998186, 0, 0, 0.512916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497798,-99) , 
2, 0.214273, 0, 0, 0.498808,-99) , 
4, 0.999048, 1, 0, 0.499628,-99) , 
7, -1.85711, 1, 0, 0.500333,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.00971476);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142954, 0, 1, 0.520579,-99) , 
NN(
NN(
0, 
0, 
-1, -1.23579, 0, 1, 0.518393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498774,-99) , 
8, -2.65442, 1, 0, 0.501133,-99) , 
2, -0.132641, 1, 0, 0.50207,-99) , 
2, -0.214276, 1, 0, 0.50313,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00760555);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499224, 0, 1, 0.503215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486982,-99) , 
0, 0.5035, 1, 0, 0.490992,-99) , 
0, 0.505573, 0, 0, 0.494737,-99) , 
0, 0.502852, 1, 0, 0.502016,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0154246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.3673, 1, 1, 0.50446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48565,-99) , 
8, -3.46397, 1, 0, 0.495401,-99) , 
9, -0.976052, 0, 0, 0.502862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472617,-99) , 
8, -1.35417, 1, 0, 0.487275,-99) , 
8, 0.45099, 0, 0, 0.493449,-99) , 
7, 1.28573, 1, 0, 0.501546,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.00655018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.37366, 1, 1, 0.518558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499447,-99) , 
0, 0.504757, 0, 0, 0.500317,-99) , 
3, 0.542515, 1, 0, 0.50178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481841,-99) , 
3, 9.40736, 1, 0, 0.501075,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0207083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.36746, 1, 1, 0.511728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479559,-99) , 
6, -951.275, 1, 0, 0.497967,-99) , 
7, 0.714435, 0, 0, 0.504079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495271,-99) , 
9, 0.258262, 0, 0, 0.499721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457512,-99) , 
6, -951.286, 1, 0, 0.480632,-99) , 
7, 0.817867, 1, 0, 0.496601,-99) , 
9, 1.24009, 0, 0, 0.499286,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0118872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493837,-99) , 
9, -0.455826, 0, 0, 0.506839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497746,-99) , 
8, -2.60271, 1, 0, 0.514091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496818,-99) , 
3, 9.41784, 0, 0, 0.497917,-99) , 
4, 0.999524, 1, 0, 0.499498,-99) , 
7, -1.57139, 1, 0, 0.500034,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.00782053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496897,-99) , 
8, -3.84765, 1, 0, 0.511256,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57143, 1, 1, 0.501578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475607,-99) , 
4, 0.999048, 0, 0, 0.500317,-99) , 
8, -3.25911, 1, 0, 0.501397,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0108761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.47722, 1, 1, 0.528695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487403,-99) , 
9, -1.87398, 0, 0, 0.513713,-99) , 
NN(
NN(
0, 
0, 
-1, 0.501582, 1, 1, 0.506204,-99) , 
NN(
0, 
0, 
-1, -0.999928, 0, -1, 0.497659,-99) , 
0, 0.500947, 0, 0, 0.499902,-99) , 
8, -3.20313, 1, 0, 0.501377,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.00874034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496151,-99) , 
8, -0.512408, 1, 0, 0.500379,-99) , 
8, -3.43055, 1, 0, 0.501216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481523,-99) , 
4, 0.998572, 0, 0, 0.500515,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.00637279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485582,-99) , 
3, 8.70229, 1, 0, 0.501331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477149,-99) , 
0, 0.489519, 0, 0, 0.500663,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0153409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490789, 0, 1, 0.519176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488775,-99) , 
0, 0.490562, 1, 0, 0.498832,-99) , 
9, 0.615241, 0, 0, 0.509253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49362,-99) , 
7, -0.722853, 1, 0, 0.504878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494265,-99) , 
8, 3.99959, 0, 0, 0.495699,-99) , 
8, -2.88184, 1, 0, 0.497214,-99) , 
0, 0.492376, 1, 0, 0.498494,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00451219);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.83778, 1, 1, 0.512951,-99) , 
NN(
NN(
0, 
0, 
-1, 8.5394, 0, 1, 0.500881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484178,-99) , 
4, 0.998572, 0, 0, 0.500347,-99) , 
8, -3.42432, 1, 0, 0.501323,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.00583654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515507,-99) , 
NN(
0, 
0, 
-1, 0.999388, 0, -1, 0.498957,-99) , 
4, 0.998572, 1, 0, 0.499533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501917,-99) , 
NN(
0, 
0, 
-1, 1.00016, 1, -1, 0.489367,-99) , 
2, 0.0721846, 0, 0, 0.492218,-99) , 
0, 0.501899, 1, 0, 0.498121,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0150304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494904,-99) , 
4, 0.999984, 0, 0, 0.50177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467122,-99) , 
7, -0.142823, 0, 0, 0.487129,-99) , 
4, 0.99966, 0, 0, 0.500574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476636,-99) , 
4, 0.998572, 0, 0, 0.499717,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0107176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468895,-99) , 
9, 2.72759, 1, 0, 0.501158,-99) , 
8, 1.76607, 0, 0, 0.502736,-99) , 
NN(
0, 
0, 
-1, 7.2248, 0, -1, 0.491083,-99) , 
9, 4.59922, 1, 0, 0.501769,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.00747141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490629,-99) , 
7, -0.479292, 1, 0, 0.505577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498994,-99) , 
5, 0.0238024, 0, 0, 0.500019,-99) , 
8, -2.88184, 1, 0, 0.500929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489368,-99) , 
0, 0.505709, 1, 0, 0.500478,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0162922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499834,-99) , 
8, -0.711597, 1, 0, 0.506426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48539,-99) , 
9, 0.782287, 0, 0, 0.499793,-99) , 
7, 0.714294, 1, 0, 0.504098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494519,-99) , 
7, -1.30639, 1, 0, 0.501921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479558,-99) , 
9, -1.95674, 0, 0, 0.498036,-99) , 
9, -0.751951, 0, 0, 0.502924,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0119934);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.519842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497647,-99) , 
9, -1.18095, 0, 0, 0.507183,-99) , 
NN(
0, 
0, 
-1, 0.428585, 1, -1, 0.495965,-99) , 
8, -2.7431, 1, 0, 0.498097,-99) , 
2, -0.214032, 1, 0, 0.499348,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0106675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486623,-99) , 
0, 0.495097, 0, 0, 0.516148,-99) , 
NN(
0, 
0, 
-1, -1.85716, 1, 1, 0.501477,-99) , 
4, 0.999524, 1, 0, 0.502824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486214,-99) , 
0, 0.50326, 0, 0, 0.499155,-99) , 
NN(
0, 
0, 
-1, -1.79938, 1, -1, 0.487236,-99) , 
9, 1.15319, 0, 0, 0.492029,-99) , 
0, 0.5019, 1, 0, 0.500742,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0133727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490039,-99) , 
0, 0.499995, 1, 0, 0.51533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497073,-99) , 
0, 0.502852, 0, 0, 0.49947,-99) , 
3, 0.725914, 1, 0, 0.502155,-99) , 
NN(
0, 
0, 
-1, 0.214242, 1, -1, 0.495563,-99) , 
3, 4.41624, 1, 0, 0.500748,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.00770629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499909,-99) , 
9, -1.86436, 0, 0, 0.51633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489783,-99) , 
9, 4.77604, 1, 0, 0.500423,-99) , 
7, 2.14284, 0, 0, 0.501094,-99) , 
8, -3.39785, 1, 0, 0.502304,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0172102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497479,-99) , 
9, 4.79445, 1, 0, 0.522456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485671,-99) , 
6, -951.256, 1, 0, 0.507564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496123,-99) , 
9, -0.84754, 0, 0, 0.507449,-99) , 
NN(
0, 
0, 
-1, 0.340479, 0, -1, 0.495533,-99) , 
8, -2.51275, 1, 0, 0.498831,-99) , 
8, 1.8673, 0, 0, 0.499966,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0162507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.050908, 0, 1, 0.507237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488316,-99) , 
0, 0.497137, 1, 0, 0.493266,-99) , 
3, 2.90739, 1, 0, 0.504567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491357,-99) , 
2, -0.0774063, 0, 0, 0.501707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474025,-99) , 
9, 0.61527, 1, 0, 0.489754,-99) , 
2, 0.0721803, 1, 0, 0.497755,-99) , 
3, 4.31763, 1, 0, 0.503063,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0128765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.204451, 1, 1, 0.503768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473563,-99) , 
4, 0.999705, 0, 0, 0.502719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468806,-99) , 
6, -951.286, 0, 0, 0.492656,-99) , 
4, 0.999524, 0, 0, 0.501769,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0164986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498021,-99) , 
9, -1.61476, 0, 0, 0.515863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487594,-99) , 
8, -3.05389, 1, 0, 0.510385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499296,-99) , 
7, -1.28566, 1, 0, 0.5009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485214,-99) , 
8, -2.53618, 1, 0, 0.491197,-99) , 
9, 0.466447, 0, 0, 0.497225,-99) , 
8, -2.88184, 1, 0, 0.499368,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0258694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488382,-99) , 
6, -951.286, 1, 0, 0.511016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494194,-99) , 
9, 0.440106, 0, 0, 0.501459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487206,-99) , 
6, -948.956, 0, 0, 0.49526,-99) , 
8, -1.53022, 1, 0, 0.498521,-99) , 
8, 2.98289, 0, 0, 0.499743,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.00806126);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.84145, 0, 1, 0.516271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492949,-99) , 
6, -951.275, 1, 0, 0.51052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499954,-99) , 
8, -3.13157, 1, 0, 0.500948,-99) , 
8, 2.22927, 0, 0, 0.502168,-99) , 
8, -3.39962, 1, 0, 0.503286,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0139075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.80092, 1, 1, 0.512826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495677,-99) , 
2, -0.274649, 0, 0, 0.509443,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0041204, 1, 1, 0.508812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496145,-99) , 
3, 0.685358, 1, 0, 0.498989,-99) , 
3, 4.26051, 0, 0, 0.500817,-99) , 
2, -0.0706726, 1, 0, 0.502383,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0154396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495781,-99) , 
0, 0.495868, 0, 0, 0.526381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48441,-99) , 
0, 0.500947, 1, 0, 0.514462,-99) , 
NN(
NN(
0, 
0, 
-1, 0.211571, 0, 1, 0.504789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463127,-99) , 
4, 0.999683, 0, 0, 0.50361,-99) , 
4, 0.999524, 1, 0, 0.504663,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0116107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498257,-99) , 
3, 1.4327, 1, 0, 0.521701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497057,-99) , 
9, 1.24009, 0, 0, 0.500713,-99) , 
4, 0.999048, 1, 0, 0.501913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485632,-99) , 
3, 9.39852, 1, 0, 0.501337,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0131497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498993,-99) , 
9, 0.995047, 1, 0, 0.503617,-99) , 
5, 0.0238076, 0, 0, 0.504454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491565,-99) , 
4, 0.999524, 1, 0, 0.495429,-99) , 
7, -1.72839, 1, 0, 0.497846,-99) , 
9, -0.563576, 0, 0, 0.502908,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0147798);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.85329, 1, 1, 0.513519,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0238076, 0, 1, 0.504837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491839,-99) , 
8, -1.6687, 0, 0, 0.495365,-99) , 
9, 0.223205, 0, 0, 0.501446,-99) , 
8, -3.2647, 1, 0, 0.502619,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.00859323);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.66785, 0, 1, 0.514272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491553,-99) , 
0, 0.505573, 1, 0, 0.50334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491296,-99) , 
2, -0.0705111, 0, 0, 0.498802,-99) , 
0, 0.499043, 0, 0, 0.500702,-99) , 
8, -3.23082, 1, 0, 0.502088,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0177547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493671,-99) , 
8, -0.129631, 1, 0, 0.505122,-99) , 
5, 0.0238076, 0, 0, 0.505985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494545,-99) , 
9, 0.467508, 0, 0, 0.503686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488888,-99) , 
2, 0.0713542, 0, 0, 0.491869,-99) , 
0, 0.496186, 1, 0, 0.495754,-99) , 
7, 0.428611, 1, 0, 0.502179,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0074664);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85519, 0, 1, 0.51646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515512,-99) , 
NN(
0, 
0, 
-1, 3.86252, 1, -1, 0.498089,-99) , 
7, -1.57143, 1, 0, 0.499002,-99) , 
8, -3.39785, 1, 0, 0.500402,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0131672);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.419652, 1, 1, 0.518301,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00002, 0, 1, 0.507775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49616,-99) , 
2, 0.0124198, 0, 0, 0.500827,-99) , 
2, -0.111945, 1, 0, 0.501762,-99) , 
2, 0.214515, 0, 0, 0.502688,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0156929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.964456, 1, 1, 0.52256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494903,-99) , 
6, 0.119073, 1, 0, 0.504636,-99) , 
6, -951.286, 1, 0, 0.512608,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57149, 0, 1, 0.505416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493727,-99) , 
8, -1.97263, 1, 0, 0.498319,-99) , 
9, 2.29127, 0, 0, 0.500084,-99) , 
8, -2.88184, 1, 0, 0.502126,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0143906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0898197, 1, 1, 0.50975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496113,-99) , 
0, 0.5019, 0, 0, 0.498679,-99) , 
3, 1.76104, 1, 0, 0.503533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487884,-99) , 
3, 8.73087, 1, 0, 0.502839,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.00731638);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.304174, 0, 1, 0.515232,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00006, 0, 1, 0.508013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491312,-99) , 
0, 0.501491, 1, 0, 0.498971,-99) , 
2, -0.0712558, 1, 0, 0.500552,-99) , 
0, 0.504757, 0, 0, 0.501533,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0117392);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497034,-99) , 
3, 4.45329, 1, 0, 0.50922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492422,-99) , 
9, -0.949466, 0, 0, 0.506662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488798,-99) , 
9, 3.42776, 1, 0, 0.500308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482145,-99) , 
8, 0.45099, 0, 0, 0.490875,-99) , 
7, 1.28569, 1, 0, 0.498992,-99) , 
2, -0.0714547, 1, 0, 0.500366,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0260537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238077, 0, 1, 0.505658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484892,-99) , 
8, 0.0667016, 0, 0, 0.49424,-99) , 
7, 1.28572, 1, 0, 0.502647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489675,-99) , 
9, -0.580245, 0, 0, 0.501875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477982,-99) , 
8, -1.39672, 0, 0, 0.484933,-99) , 
8, -2.27169, 1, 0, 0.495355,-99) , 
9, 0.494405, 0, 0, 0.499104,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0108529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28774, 0, 1, 0.514117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483622,-99) , 
7, -0.999968, 0, 0, 0.49897,-99) , 
8, -2.88184, 1, 0, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47747,-99) , 
5, 0.0238076, 1, 0, 0.500539,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0132597);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493958,-99) , 
8, -1.40359, 1, 0, 0.499651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465892,-99) , 
7, 0.429142, 1, 0, 0.485665,-99) , 
9, 3.91986, 1, 0, 0.498244,-99) , 
7, 2.14285, 0, 0, 0.499175,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0140843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496902,-99) , 
7, -0.738884, 1, 0, 0.513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485761,-99) , 
9, -1.69949, 0, 0, 0.504047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491516,-99) , 
9, -0.00568692, 0, 0, 0.498639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480423,-99) , 
6, -951.275, 0, 0, 0.492016,-99) , 
7, -0.71426, 0, 0, 0.497487,-99) , 
8, -2.88184, 1, 0, 0.49855,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0124169);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498697,-99) , 
9, -0.430763, 0, 0, 0.504156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481675,-99) , 
9, 1.8, 0, 0, 0.49539,-99) , 
8, -0.775355, 1, 0, 0.501488,-99) , 
NN(
0, 
0, 
-1, 2.2517, 1, -1, 0.494776,-99) , 
7, -0.142822, 1, 0, 0.497624,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0233326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.615348, 0, 1, 0.507837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477909,-99) , 
9, 1.31678, 0, 0, 0.495357,-99) , 
8, -1.29515, 1, 0, 0.503062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480636,-99) , 
7, 0.428654, 1, 0, 0.499438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474505,-99) , 
6, -951.286, 1, 0, 0.489705,-99) , 
9, 2.95828, 1, 0, 0.501067,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0118965);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490212,-99) , 
6, -951.286, 0, 0, 0.507629,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.495819,-99) , 
4, 0.999524, 1, 0, 0.496958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481322,-99) , 
3, 9.39852, 1, 0, 0.496414,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.00866001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498396,-99) , 
2, 0.214809, 0, 0, 0.499341,-99) , 
4, 0.999048, 1, 0, 0.500345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491954,-99) , 
9, 0.426924, 1, 0, 0.496271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475436,-99) , 
7, -1.2856, 0, 0, 0.493975,-99) , 
0, 0.495233, 0, 0, 0.498727,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00617254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476227,-99) , 
5, 0.0238024, 1, 0, 0.500116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485479,-99) , 
9, 5.72571, 1, 0, 0.499236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48063,-99) , 
0, 0.505709, 1, 0, 0.498529,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00889509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49372,-99) , 
7, 2.23809, 1, 0, 0.515108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499094,-99) , 
8, 1.59598, 0, 0, 0.500438,-99) , 
NN(
0, 
0, 
-1, 0.470554, 1, -1, 0.48466,-99) , 
9, 4.098, 1, 0, 0.498931,-99) , 
7, 1.85714, 0, 0, 0.499878,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.00874773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.55872, 0, 1, 0.502856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469695,-99) , 
4, 0.99941, 0, 0, 0.501935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471017,-99) , 
6, -951.286, 0, 0, 0.488278,-99) , 
4, 0.999048, 0, 0, 0.50118,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0153736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498917,-99) , 
7, 2.23811, 1, 0, 0.519139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472231,-99) , 
7, -1.84345, 0, 0, 0.504255,-99) , 
NN(
0, 
0, 
-1, 3.0005, 1, -1, 0.493797,-99) , 
6, -948.87, 1, 0, 0.499771,-99) , 
7, 1.85716, 0, 0, 0.500905,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.00570806);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499393,-99) , 
4, 0.999048, 1, 0, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482395,-99) , 
5, 0.0238076, 1, 0, 0.499853,-99) , 
7, -1.85709, 1, 0, 0.500429,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.00664844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499166,-99) , 
8, -3.33543, 1, 0, 0.500359,-99) , 
7, 2.14284, 0, 0, 0.501147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482211,-99) , 
0, 0.490471, 0, 0, 0.500258,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.013909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28577, 0, 1, 0.505688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444878,-99) , 
7, 0.143556, 1, 0, 0.483954,-99) , 
6, -0.895976, 0, 0, 0.50161,-99) , 
NN(
0, 
0, 
-1, 1.85713, 1, -1, 0.49665,-99) , 
6, -949.754, 0, 0, 0.498766,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.00519349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499348,-99) , 
5, 0.0120898, 0, 0, 0.500197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486574,-99) , 
5, 0.015868, 1, 0, 0.499686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480654,-99) , 
5, 0.0238024, 1, 0, 0.498915,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00672561);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519327,-99) , 
NN(
NN(
0, 
0, 
-1, -1.39451, 1, 1, 0.501643,-99) , 
NN(
0, 
0, 
-1, -1.71114, 1, -1, 0.484696,-99) , 
9, -1.39153, 0, 0, 0.500432,-99) , 
7, -1.8571, 1, 0, 0.501273,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0159596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.157299, 1, 1, 0.527966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48012,-99) , 
8, -3.85492, 1, 0, 0.494414,-99) , 
9, -1.13491, 0, 0, 0.509043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478256,-99) , 
4, 0.999637, 0, 0, 0.500293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474396,-99) , 
4, 0.999048, 0, 0, 0.499162,-99) , 
8, -2.65442, 1, 0, 0.501233,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0112899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496809,-99) , 
9, -1.42728, 0, 0, 0.510104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488417,-99) , 
8, -3.05388, 1, 0, 0.505843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499477,-99) , 
4, 0.999524, 1, 0, 0.500874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485242,-99) , 
6, -951.286, 0, 0, 0.491418,-99) , 
7, -0.428558, 0, 0, 0.498547,-99) , 
8, -2.88184, 1, 0, 0.499727,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0206011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496204,-99) , 
6, -14.0823, 1, 0, 0.501921,-99) , 
9, 1.75435, 0, 0, 0.503243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48454,-99) , 
9, 3.47656, 1, 0, 0.508955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476466,-99) , 
8, 2.80251, 0, 0, 0.486564,-99) , 
6, -951.286, 0, 0, 0.494389,-99) , 
8, -0.0497727, 1, 0, 0.500832,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0168036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479997,-99) , 
9, -1.25211, 0, 0, 0.502233,-99) , 
8, -3.85576, 1, 0, 0.507247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496301,-99) , 
7, 0.428585, 1, 0, 0.501035,-99) , 
NN(
0, 
0, 
-1, -0.428565, 0, -1, 0.493682,-99) , 
0, 0.49809, 0, 0, 0.497424,-99) , 
8, -2.65528, 1, 0, 0.499489,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0108002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48697,-99) , 
7, 1.91156, 1, 0, 0.502047,-99) , 
6, -951.286, 0, 0, 0.512949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482881,-99) , 
9, 4.60503, 1, 0, 0.500205,-99) , 
NN(
0, 
0, 
-1, -2.00486, 1, -1, 0.487787,-99) , 
7, -1.69387, 0, 0, 0.499415,-99) , 
7, 1.57143, 0, 0, 0.50069,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.00940581);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498321,-99) , 
8, 1.71044, 0, 0, 0.499451,-99) , 
NN(
0, 
0, 
-1, -951.275, 1, -1, 0.484151,-99) , 
9, 3.87114, 1, 0, 0.497865,-99) , 
7, 2.14286, 0, 0, 0.498733,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0225218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406684,-99) , 
6, -1.62804, 0, 0, 0.506114,-99) , 
NN(
0, 
0, 
-1, -1.5714, 0, -1, 0.496585,-99) , 
6, -948.956, 0, 0, 0.500634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48028,-99) , 
5, 0.0238024, 1, 0, 0.499802,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00771837);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5019, 1, 1, 0.510156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499646,-99) , 
7, -0.714256, 1, 0, 0.501331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487834,-99) , 
0, 0.504757, 1, 0, 0.500556,-99) , 
2, -0.0706264, 1, 0, 0.502298,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0133752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494515,-99) , 
7, 2.23809, 1, 0, 0.514295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487255,-99) , 
9, -1.89618, 0, 0, 0.510083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494374,-99) , 
9, 0.0490725, 0, 0, 0.500557,-99) , 
8, -3.20228, 1, 0, 0.501636,-99) , 
7, 1.85713, 0, 0, 0.502363,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0182567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490146,-99) , 
7, 0.143013, 0, 0, 0.500917,-99) , 
5, 0.0238024, 0, 0, 0.502845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495461,-99) , 
9, -1.65199, 0, 0, 0.509201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482424,-99) , 
9, -0.285624, 0, 0, 0.493135,-99) , 
8, -3.09216, 1, 0, 0.496785,-99) , 
9, 0.748335, 0, 0, 0.499554,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0150779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39611, 1, 1, 0.527253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494,-99) , 
9, -1.42485, 0, 0, 0.514037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495551,-99) , 
9, -0.160725, 0, 0, 0.504307,-99) , 
NN(
0, 
0, 
-1, -0.469339, 0, -1, 0.49648,-99) , 
8, -2.13699, 1, 0, 0.498881,-99) , 
7, -1.28571, 1, 0, 0.500602,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0149667);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497231,-99) , 
9, -0.193655, 0, 0, 0.507314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489552,-99) , 
7, 1.14968, 1, 0, 0.49903,-99) , 
8, -2.04995, 1, 0, 0.501899,-99) , 
7, -1.8571, 1, 0, 0.502631,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0151815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487038,-99) , 
8, -1.98153, 1, 0, 0.509691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487334,-99) , 
0, 0.499043, 0, 0, 0.493095,-99) , 
8, -0.176269, 1, 0, 0.505847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497243,-99) , 
4, 0.999524, 1, 0, 0.498349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478628,-99) , 
0, 0.505709, 1, 0, 0.497599,-99) , 
7, -0.428533, 1, 0, 0.500294,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0169615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48073,-99) , 
8, -0.903377, 1, 0, 0.503091,-99) , 
9, 2.59885, 0, 0, 0.514683,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57904, 1, 1, 0.504736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469084,-99) , 
6, -951.286, 1, 0, 0.493743,-99) , 
9, 3.42776, 1, 0, 0.503461,-99) , 
7, 1.57143, 0, 0, 0.504504,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.00810795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214293, 0, 1, 0.501927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465999,-99) , 
4, 0.99941, 0, 0, 0.500939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457883,-99) , 
6, -951.286, 0, 0, 0.483405,-99) , 
4, 0.999048, 0, 0, 0.499964,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.00768664);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.62155, 1, 1, 0.51857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486426,-99) , 
4, 0.99966, 0, 0, 0.500315,-99) , 
4, 0.998571, 1, 0, 0.501027,-99) , 
2, -0.214109, 1, 0, 0.502029,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0156175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497089,-99) , 
7, -0.164626, 1, 0, 0.520692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488723,-99) , 
8, -3.3863, 0, 0, 0.495294,-99) , 
9, -1.16003, 0, 0, 0.506134,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28561, 1, 1, 0.501828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491504,-99) , 
8, -0.922986, 0, 0, 0.494531,-99) , 
9, 0.906082, 0, 0, 0.498391,-99) , 
8, -2.69985, 1, 0, 0.499937,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0126688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492134,-99) , 
8, -1.19847, 1, 0, 0.498659,-99) , 
NN(
0, 
0, 
-1, 7.22477, 0, -1, 0.486372,-99) , 
9, 4.59922, 1, 0, 0.497641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478018,-99) , 
3, 9.40736, 1, 0, 0.496959,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0121821);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499813,-99) , 
9, 1.68412, 0, 0, 0.514753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496531,-99) , 
7, 2.25167, 1, 0, 0.509464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495879,-99) , 
8, -2.13576, 1, 0, 0.499753,-99) , 
NN(
0, 
0, 
-1, 0.266526, 1, -1, 0.486241,-99) , 
9, 4.0705, 1, 0, 0.49849,-99) , 
7, 1.57141, 0, 0, 0.499503,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0117757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493572,-99) , 
6, -948.956, 1, 0, 0.498645,-99) , 
7, -1.85709, 1, 0, 0.499729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460781,-99) , 
6, -951.286, 0, 0, 0.482913,-99) , 
4, 0.999048, 0, 0, 0.498802,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.011143);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497191,-99) , 
8, -2.97758, 1, 0, 0.499476,-99) , 
NN(
0, 
0, 
-1, 7.22477, 0, -1, 0.484669,-99) , 
9, 4.59922, 1, 0, 0.498256,-99) , 
7, 2.14286, 0, 0, 0.498962,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0151475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.10449, 0, 1, 0.504618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489356,-99) , 
7, 0.428631, 0, 0, 0.496315,-99) , 
8, -0.78579, 1, 0, 0.500912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446214,-99) , 
7, -0.891665, 1, 0, 0.482665,-99) , 
8, -3.20116, 0, 0, 0.490747,-99) , 
9, -0.982305, 0, 0, 0.499387,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0108677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00339919, 0, 1, 0.509964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493912,-99) , 
6, -949.754, 0, 0, 0.497265,-99) , 
8, -3.33543, 1, 0, 0.4984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483001,-99) , 
5, 0.0238076, 1, 0, 0.497777,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0164671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49329,-99) , 
4, 0.999977, 0, 0, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484582,-99) , 
4, 0.999524, 0, 0, 0.502506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496232,-99) , 
9, 0.388804, 0, 0, 0.499629,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.485119,-99) , 
7, 0.536033, 1, 0, 0.496637,-99) , 
9, 0.852454, 0, 0, 0.499181,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0116895);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49827,-99) , 
9, 0.399382, 0, 0, 0.50475,-99) , 
NN(
0, 
0, 
-1, 2.14285, 1, -1, 0.496808,-99) , 
8, -1.54901, 1, 0, 0.500702,-99) , 
9, 7.34815, 0, 0, 0.501232,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.00974893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495538,-99) , 
0, 0.495233, 0, 0, 0.515559,-99) , 
NN(
0, 
0, 
-1, 8.34753, 0, 1, 0.502001,-99) , 
4, 0.999524, 1, 0, 0.503322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505697,-99) , 
NN(
0, 
0, 
-1, -1.47611, 0, -1, 0.485474,-99) , 
6, -951.286, 0, 0, 0.493119,-99) , 
7, -0.99993, 0, 0, 0.501633,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0175442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49584,-99) , 
3, 4.53477, 1, 0, 0.510342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492897,-99) , 
0, 0.494281, 0, 0, 0.505207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491862,-99) , 
2, -0.00728843, 1, 0, 0.495572,-99) , 
2, -0.0306119, 1, 0, 0.498367,-99) , 
2, 0.214279, 0, 0, 0.499041,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.00827293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498266,-99) , 
7, -1.57137, 1, 0, 0.499728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480059,-99) , 
4, 0.99932, 0, 0, 0.498962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481574,-99) , 
4, 0.998571, 0, 0, 0.498341,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0201661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499511,-99) , 
7, 1.47619, 1, 0, 0.507344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491559,-99) , 
0, 0.497138, 1, 0, 0.499369,-99) , 
7, 0.71431, 0, 0, 0.502954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476807,-99) , 
8, -1.90544, 1, 0, 0.495874,-99) , 
8, -0.870569, 0, 0, 0.497904,-99) , 
9, 0.920425, 0, 0, 0.500029,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0129742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470714,-99) , 
7, 2.18366, 1, 0, 0.502032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480475,-99) , 
9, 5.69415, 1, 0, 0.50062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512751,-99) , 
NN(
0, 
0, 
-1, -1.93878, 0, -1, 0.478026,-99) , 
6, -951.286, 0, 0, 0.490354,-99) , 
7, -1.28572, 0, 0, 0.499488,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00778624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491252,-99) , 
5, 0.00453303, 0, 0, 0.508728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481662,-99) , 
9, 5.72571, 1, 0, 0.499911,-99) , 
7, 1.5714, 0, 0, 0.50073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484284,-99) , 
5, 0.0238076, 1, 0, 0.500057,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.01443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.374797, 1, 1, 0.524956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495712,-99) , 
9, 0.447149, 0, 0, 0.500968,-99) , 
3, 0.488918, 1, 0, 0.502881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489779,-99) , 
6, -951.286, 1, 0, 0.496724,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.483026,-99) , 
8, -0.129631, 1, 0, 0.492936,-99) , 
3, 4.28338, 1, 0, 0.50067,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0144468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495097, 0, 1, 0.519967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495142,-99) , 
8, -0.140957, 0, 0, 0.499483,-99) , 
8, -3.07412, 1, 0, 0.502133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480664,-99) , 
2, 0.0714743, 1, 0, 0.497179,-99) , 
NN(
0, 
0, 
-1, -1.09519, 1, -1, 0.483005,-99) , 
9, -0.716731, 0, 0, 0.494354,-99) , 
0, 0.49809, 1, 0, 0.498215,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.010455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479983,-99) , 
7, 2.04761, 1, 0, 0.498389,-99) , 
6, -951.286, 0, 0, 0.507038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493663,-99) , 
9, -1.0133, 0, 0, 0.499828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47865,-99) , 
9, 0.818968, 0, 0, 0.491843,-99) , 
7, 0.700693, 1, 0, 0.49812,-99) , 
7, 1.57144, 0, 0, 0.498941,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0120076);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51714,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.494935,-99) , 
7, 2.14286, 0, 0, 0.495745,-99) , 
8, -3.53658, 1, 0, 0.496871,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0128284);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48294,-99) , 
4, 0.999048, 0, 0, 0.50301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484749,-99) , 
0, 0.497591, 1, 0, 0.501327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495414,-99) , 
0, 0.499062, 0, 0, 0.500325,-99) , 
NN(
0, 
0, 
-1, -2.6004, 1, -1, 0.493294,-99) , 
0, 0.499451, 1, 0, 0.495043,-99) , 
0, 0.49809, 1, 0, 0.498152,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0108419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497027,-99) , 
2, -0.214044, 1, 0, 0.498037,-99) , 
3, 8.5394, 0, 0, 0.499057,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.478122,-99) , 
4, 0.999048, 0, 0, 0.497915,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.012363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.99428, 1, 1, 0.505283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468067,-99) , 
7, -1.85715, 0, 0, 0.503412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516467,-99) , 
NN(
0, 
0, 
-1, 2.76817, 1, -1, 0.495379,-99) , 
7, 1.57156, 0, 0, 0.497093,-99) , 
6, -948.87, 1, 0, 0.500726,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.00720077);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48316,-99) , 
4, 0.999388, 0, 0, 0.49992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476968,-99) , 
4, 0.998572, 0, 0, 0.499122,-99) , 
7, 2.14286, 0, 0, 0.500639,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00678832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495624,-99) , 
7, 2.23808, 1, 0, 0.513265,-99) , 
NN(
0, 
0, 
-1, 0.931956, 1, -1, 0.497477,-99) , 
7, 1.85712, 0, 0, 0.498402,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.00718001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493393,-99) , 
4, 0.998617, 0, 0, 0.51327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499221,-99) , 
3, 8.16961, 0, 0, 0.499999,-99) , 
4, 0.999524, 1, 0, 0.501235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477219,-99) , 
0, 0.489519, 0, 0, 0.500574,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0144329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493255,-99) , 
9, -0.403351, 0, 0, 0.501979,-99) , 
4, 0.999048, 1, 0, 0.503075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496574,-99) , 
9, 0.437221, 0, 0, 0.50139,-99) , 
NN(
0, 
0, 
-1, 1.76858, 0, -1, 0.485664,-99) , 
8, -0.759845, 1, 0, 0.495362,-99) , 
0, 0.495233, 0, 0, 0.501132,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.012674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.378241, 1, 1, 0.524442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49098,-99) , 
7, -1.18725, 0, 0, 0.498455,-99) , 
9, -1.34352, 0, 0, 0.510232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496175,-99) , 
2, 0.0306815, 0, 0, 0.498776,-99) , 
2, -0.214146, 1, 0, 0.499371,-99) , 
8, -2.88184, 1, 0, 0.501137,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0192496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.391966, 0, 1, 0.509569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491373,-99) , 
9, 0.36521, 1, 0, 0.496329,-99) , 
8, -1.55097, 1, 0, 0.5049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488908,-99) , 
9, 2.36044, 1, 0, 0.492307,-99) , 
7, 1.5714, 0, 0, 0.494609,-99) , 
8, -0.0497727, 1, 0, 0.502096,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0107563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499289,-99) , 
7, 2.18367, 1, 0, 0.512915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471758,-99) , 
4, 0.999524, 0, 0, 0.503754,-99) , 
NN(
0, 
0, 
-1, -0.349062, 0, -1, 0.497103,-99) , 
7, -0.455782, 1, 0, 0.499351,-99) , 
7, 1.85714, 0, 0, 0.500141,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0119262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499748,-99) , 
9, -0.454788, 0, 0, 0.509989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497953,-99) , 
0, 0.496185, 0, 0, 0.502425,-99) , 
8, -2.3202, 1, 0, 0.504464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46946,-99) , 
8, -1.38237, 1, 0, 0.488677,-99) , 
7, -1.57134, 0, 0, 0.503374,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.00762306);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498495,-99) , 
8, -2.51016, 1, 0, 0.500427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482149,-99) , 
5, 0.0238076, 1, 0, 0.499785,-99) , 
9, 7.34815, 0, 0, 0.500524,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0197289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498152,-99) , 
9, 3.69587, 1, 0, 0.510555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479087,-99) , 
3, 2.08436, 0, 0, 0.490501,-99) , 
7, -0.428388, 0, 0, 0.506676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4969,-99) , 
9, -0.236003, 0, 0, 0.50245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475102,-99) , 
6, -951.286, 1, 0, 0.488155,-99) , 
7, 0.303615, 1, 0, 0.498259,-99) , 
9, 0.920425, 0, 0, 0.501801,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00841254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499943,-99) , 
9, 0.821521, 0, 0, 0.503006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4799,-99) , 
3, 6.90733, 1, 0, 0.502078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486943,-99) , 
3, 8.50662, 1, 0, 0.501341,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0157603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492607,-99) , 
8, -3.83411, 1, 0, 0.49931,-99) , 
9, -0.874507, 0, 0, 0.509033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495268,-99) , 
6, -948.87, 0, 0, 0.499009,-99) , 
5, 0.0237968, 0, 0, 0.499879,-99) , 
8, -2.63399, 1, 0, 0.501828,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.00740619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00566642, 0, 1, 0.512299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486944,-99) , 
9, 5.69499, 1, 0, 0.501002,-99) , 
7, 1.57142, 0, 0, 0.502063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486758,-99) , 
5, 0.0238024, 1, 0, 0.501438,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0161138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497425,-99) , 
8, -0.176269, 1, 0, 0.505138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479435,-99) , 
9, 0.623293, 0, 0, 0.497604,-99) , 
7, 0.428601, 1, 0, 0.502338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473627,-99) , 
4, 0.998571, 0, 0, 0.501331,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0151588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499349,-99) , 
3, 2.57039, 1, 0, 0.5084,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497106,-99) , 
9, 0.387069, 0, 0, 0.503309,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.493794,-99) , 
8, -1.53037, 1, 0, 0.498795,-99) , 
8, 2.98289, 0, 0, 0.499731,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0106473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69485, 1, 1, 0.513513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486985,-99) , 
8, -3.60555, 0, 0, 0.49566,-99) , 
9, -1.38284, 0, 0, 0.507552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499627,-99) , 
0, 0.494281, 1, 0, 0.501604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479718,-99) , 
5, 0.0238024, 1, 0, 0.500729,-99) , 
7, -0.714284, 1, 0, 0.502375,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.00855929);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.42928, 0, 1, 0.504373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499186,-99) , 
8, -0.171502, 0, 0, 0.50041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476793,-99) , 
8, 1.84882, 0, 0, 0.492633,-99) , 
9, 2.09803, 1, 0, 0.498667,-99) , 
0, 0.49809, 0, 0, 0.501563,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0145921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497484,-99) , 
8, -1.9183, 1, 0, 0.510936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490891,-99) , 
2, 0.0713245, 1, 0, 0.501468,-99) , 
9, 0.540398, 1, 0, 0.506254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494941,-99) , 
2, 0.139418, 0, 0, 0.509384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496069,-99) , 
9, 1.15319, 0, 0, 0.498958,-99) , 
2, 0.0713938, 0, 0, 0.500948,-99) , 
0, 0.499043, 1, 0, 0.504047,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0120196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505744,-99) , 
NN(
0, 
0, 
-1, 0.0721463, 1, -1, 0.496371,-99) , 
8, -0.439155, 1, 0, 0.502754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487227,-99) , 
7, -0.428518, 0, 0, 0.499924,-99) , 
NN(
0, 
0, 
-1, 0.147538, 1, -1, 0.488327,-99) , 
6, -948.956, 1, 0, 0.495064,-99) , 
0, 0.5019, 1, 0, 0.501261,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00806009);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477793,-99) , 
5, 0.0158682, 1, 0, 0.501152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484008,-99) , 
5, 0.0238024, 1, 0, 0.500457,-99) , 
NN(
0, 
0, 
-1, -0.143832, 0, -1, 0.485689,-99) , 
0, 0.504757, 1, 0, 0.49951,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00712309);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499185,-99) , 
8, 1.78101, 0, 0, 0.500374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481721,-99) , 
7, 0.184417, 1, 0, 0.491058,-99) , 
9, 4.15842, 1, 0, 0.4995,-99) , 
7, 2.14285, 0, 0, 0.500343,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0163993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47617, 1, 1, 0.5064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49332,-99) , 
8, -3.01854, 1, 0, 0.499875,-99) , 
9, 0.350381, 0, 0, 0.502806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486579,-99) , 
7, 2.25166, 1, 0, 0.502632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477716,-99) , 
9, 0.900346, 0, 0, 0.491719,-99) , 
7, 1.5714, 0, 0, 0.496665,-99) , 
7, 0.999981, 1, 0, 0.501554,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0114118);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.419652, 1, 1, 0.512308,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0668279, 1, 1, 0.507145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493981,-99) , 
2, -0.0225602, 1, 0, 0.497626,-99) , 
2, 0.051282, 0, 0, 0.499258,-99) , 
2, 0.214515, 0, 0, 0.499991,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0113361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492607,-99) , 
9, -1.04025, 0, 0, 0.504248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487667,-99) , 
2, -0.0701486, 0, 0, 0.501536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490246,-99) , 
0, 0.500131, 0, 0, 0.495559,-99) , 
7, 0.142903, 1, 0, 0.498708,-99) , 
0, 0.497138, 1, 0, 0.500971,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0134453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489537,-99) , 
8, -1.15558, 1, 0, 0.497893,-99) , 
8, 4.50745, 0, 0, 0.498585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481984,-99) , 
0, 0.489519, 0, 0, 0.498122,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0100111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488937,-99) , 
7, 1.13604, 1, 0, 0.503236,-99) , 
7, 1.57141, 0, 0, 0.504367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497334,-99) , 
3, 8.3007, 0, 0, 0.49848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482709,-99) , 
2, 0.21459, 1, 0, 0.497663,-99) , 
0, 0.497138, 1, 0, 0.500403,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0076985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493244,-99) , 
9, 0.549567, 1, 0, 0.510679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498016,-99) , 
2, -0.178353, 1, 0, 0.498854,-99) , 
2, 0.13261, 0, 0, 0.499627,-99) , 
2, 0.214242, 0, 0, 0.500253,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.00820425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497686,-99) , 
4, 0.999048, 1, 0, 0.498638,-99) , 
7, -1.8571, 1, 0, 0.499368,-99) , 
NN(
0, 
0, 
-1, 0.504999, 1, -1, 0.486862,-99) , 
2, 0.214749, 1, 0, 0.498694,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.00833748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 0, 1, 0.513745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496058,-99) , 
0, 0.498362, 0, 0, 0.498985,-99) , 
0, 0.491424, 1, 0, 0.500024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478888,-99) , 
4, 0.998571, 0, 0, 0.499273,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0131123);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493143,-99) , 
9, 3.76423, 1, 0, 0.50483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486684,-99) , 
0, 0.499632, 1, 0, 0.497241,-99) , 
7, 1.28574, 1, 0, 0.503769,-99) , 
NN(
0, 
0, 
-1, -0.428462, 1, -1, 0.492071,-99) , 
0, 0.492376, 0, 0, 0.502571,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00835731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498874,-99) , 
8, -0.247894, 0, 0, 0.516799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49536,-99) , 
9, 2.11476, 1, 0, 0.506255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490712,-99) , 
2, 0.0713655, 1, 0, 0.498488,-99) , 
0, 0.495233, 1, 0, 0.500474,-99) , 
7, 1.85716, 0, 0, 0.501435,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00785923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490643,-99) , 
3, 3.7807, 1, 0, 0.498502,-99) , 
2, 0.214749, 0, 0, 0.499269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479121,-99) , 
3, 8.70229, 1, 0, 0.498361,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0156359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30183, 0, 1, 0.506184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495412,-99) , 
5, 0.0238077, 0, 0, 0.497623,-99) , 
8, -0.630369, 1, 0, 0.502479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486703,-99) , 
7, -1.28676, 0, 0, 0.502241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467073,-99) , 
8, -3.03815, 0, 0, 0.485208,-99) , 
8, -3.4152, 1, 0, 0.492503,-99) , 
9, -0.812095, 0, 0, 0.500672,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0119373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48213,-99) , 
6, -951.286, 0, 0, 0.496238,-99) , 
7, 0.42861, 0, 0, 0.512681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497935,-99) , 
0, 0.492376, 1, 0, 0.499412,-99) , 
7, -1.85708, 1, 0, 0.500504,-99) , 
4, 0.999524, 1, 0, 0.501688,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.00566887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481287,-99) , 
4, 0.99932, 0, 0, 0.500201,-99) , 
4, 0.998572, 1, 0, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481833,-99) , 
3, 9.41378, 1, 0, 0.500223,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0124767);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495285,-99) , 
8, -2.48392, 1, 0, 0.498209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477046,-99) , 
9, -1.98389, 0, 0, 0.49747,-99) , 
8, 4.60237, 0, 0, 0.498335,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0223382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.551022, 0, 1, 0.511144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497524,-99) , 
8, 1.48402, 0, 0, 0.501574,-99) , 
7, -0.142863, 1, 0, 0.504212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492669,-99) , 
9, 0.382994, 0, 0, 0.498455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469146,-99) , 
8, -0.845311, 0, 0, 0.481709,-99) , 
8, -1.43803, 1, 0, 0.495019,-99) , 
9, 1.12226, 0, 0, 0.498524,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00864513);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499242,-99) , 
9, 1.40114, 0, 0, 0.502292,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.492233,-99) , 
9, 3.56803, 1, 0, 0.501145,-99) , 
7, 2.14285, 0, 0, 0.501598,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.00955412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498652,-99) , 
8, -2.24994, 1, 0, 0.501727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482869,-99) , 
5, 0.0237968, 1, 0, 0.500961,-99) , 
NN(
0, 
0, 
-1, -1.89846, 1, -1, 0.487263,-99) , 
7, -1.57143, 0, 0, 0.500001,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0117474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28571, 1, 1, 0.503845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479693,-99) , 
4, 0.99941, 0, 0, 0.503183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445786,-99) , 
6, -951.286, 0, 0, 0.481045,-99) , 
4, 0.999048, 0, 0, 0.501974,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.010195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498654,-99) , 
6, -948.87, 1, 0, 0.50231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487241,-99) , 
7, 1.85714, 1, 0, 0.501485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508382,-99) , 
NN(
0, 
0, 
-1, -0.139244, 1, -1, 0.48922,-99) , 
7, 1.00001, 0, 0, 0.493194,-99) , 
2, -0.0712254, 0, 0, 0.500009,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0192843);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496343,-99) , 
9, 0.598029, 0, 0, 0.501729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490366,-99) , 
9, 0.523259, 1, 0, 0.493324,-99) , 
8, -1.33354, 1, 0, 0.498034,-99) , 
8, 4.34365, 0, 0, 0.498889,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0164201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28561, 1, 1, 0.506622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484421,-99) , 
2, 0.214281, 1, 0, 0.505504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499411,-99) , 
9, -0.406622, 0, 0, 0.505164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48601,-99) , 
8, -1.48111, 0, 0, 0.490944,-99) , 
8, -2.36586, 1, 0, 0.499171,-99) , 
9, 0.452122, 0, 0, 0.502489,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00791847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.720293, 1, 1, 0.502888,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.486293,-99) , 
3, 6.73644, 1, 0, 0.501884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484645,-99) , 
3, 9.39629, 1, 0, 0.501276,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0178797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497623,-99) , 
9, -0.247127, 0, 0, 0.507557,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.495451,-99) , 
8, -2.08515, 1, 0, 0.500671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492867,-99) , 
9, 4.90214, 1, 0, 0.501811,-99) , 
NN(
0, 
0, 
-1, 2.79961, 1, -1, 0.47969,-99) , 
8, 2.08813, 0, 0, 0.493081,-99) , 
9, 2.3341, 1, 0, 0.499146,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0127009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.50164, 1, 1, 0.515781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485348,-99) , 
9, 3.90564, 1, 0, 0.501423,-99) , 
7, -1.57143, 1, 0, 0.502462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467352,-99) , 
6, -951.286, 0, 0, 0.488311,-99) , 
4, 0.999048, 0, 0, 0.501683,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0203637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493287,-99) , 
8, -1.64174, 1, 0, 0.50452,-99) , 
9, 1.45643, 0, 0, 0.506467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49577,-99) , 
9, 2.80874, 1, 0, 0.502004,-99) , 
NN(
0, 
0, 
-1, 1.89745, 1, -1, 0.480209,-99) , 
7, -0.714205, 0, 0, 0.49795,-99) , 
8, -0.170722, 1, 0, 0.504023,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.016144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498757,-99) , 
5, 0.0124674, 0, 0, 0.502391,-99) , 
5, 0.0238025, 0, 0, 0.504253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498511,-99) , 
9, 0.483741, 0, 0, 0.502426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478319,-99) , 
9, 0.366622, 1, 0, 0.485633,-99) , 
8, -1.51885, 1, 0, 0.498203,-99) , 
9, 1.22116, 0, 0, 0.50039,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0137535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.935586, 0, 1, 0.504173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480933,-99) , 
5, 0.00453314, 1, 0, 0.495631,-99) , 
9, 2.48082, 1, 0, 0.502676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486543,-99) , 
5, 0.0238076, 1, 0, 0.502027,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0140668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494685,-99) , 
3, 4.29944, 1, 0, 0.506592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492497,-99) , 
2, -0.004232, 1, 0, 0.499119,-99) , 
2, 0.030747, 0, 0, 0.501284,-99) , 
NN(
0, 
0, 
-1, 4.66084, 1, -1, 0.489381,-99) , 
2, -0.214109, 0, 0, 0.500629,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00692691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489832,-99) , 
8, -0.900989, 1, 0, 0.507207,-99) , 
9, 2.7522, 0, 0, 0.51266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499494,-99) , 
0, 0.492966, 1, 0, 0.500116,-99) , 
NN(
0, 
0, 
-1, 0.600506, 0, -1, 0.490681,-99) , 
0, 0.491424, 0, 0, 0.49942,-99) , 
7, 1.57139, 0, 0, 0.500667,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0114972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487969,-99) , 
9, -1.80294, 0, 0, 0.504921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486835,-99) , 
7, -2.10204, 0, 0, 0.504036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498854,-99) , 
7, 0.959039, 0, 0, 0.509385,-99) , 
NN(
0, 
0, 
-1, 2.7759, 1, -1, 0.496844,-99) , 
8, 1.70757, 0, 0, 0.49883,-99) , 
7, 0.142857, 1, 0, 0.501569,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.00857391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482386,-99) , 
5, 0.0237659, 1, 0, 0.502715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486231,-99) , 
8, -1.82756, 1, 0, 0.494206,-99) , 
7, -1.57143, 0, 0, 0.502118,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.00978479);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.510834,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0237891, 0, 1, 0.502728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483293,-99) , 
8, -3.2719, 0, 0, 0.491313,-99) , 
9, -1.00902, 0, 0, 0.500891,-99) , 
7, 1.57145, 0, 0, 0.501821,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0217292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.830569, 0, 1, 0.506836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484319,-99) , 
9, 0.942429, 1, 0, 0.494216,-99) , 
8, -1.00295, 1, 0, 0.504481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486922,-99) , 
9, 3.5496, 1, 0, 0.506386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481281,-99) , 
8, 2.62998, 0, 0, 0.489706,-99) , 
6, -951.275, 0, 0, 0.495439,-99) , 
8, -0.131043, 1, 0, 0.501938,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0167158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.509399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467403,-99) , 
4, 0.999905, 0, 0, 0.497095,-99) , 
7, 0.714296, 0, 0, 0.502617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494955,-99) , 
9, -0.0714093, 0, 0, 0.500045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468161,-99) , 
8, -1.79383, 1, 0, 0.483309,-99) , 
7, 0.734546, 1, 0, 0.497056,-99) , 
9, 1.15911, 0, 0, 0.499123,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.00461391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215402, 1, 1, 0.500831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481144,-99) , 
3, 6.64933, 1, 0, 0.499771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487034,-99) , 
3, 8.70006, 1, 0, 0.499194,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0124686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491256,-99) , 
8, -3.4639, 0, 0, 0.496026,-99) , 
9, -1.23865, 0, 0, 0.507401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497235,-99) , 
3, 8.55455, 0, 0, 0.498231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470937,-99) , 
4, 0.999048, 0, 0, 0.496964,-99) , 
8, -3.01478, 1, 0, 0.498402,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0159245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0612553, 1, 1, 0.503233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481876,-99) , 
8, -2.5115, 0, 0, 0.490688,-99) , 
9, -0.229712, 0, 0, 0.500901,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492944,-99) , 
9, -0.841951, 0, 0, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0.496186, 1, -1, 0.477959,-99) , 
8, -0.302525, 1, 0, 0.495823,-99) , 
7, -0.428534, 0, 0, 0.499261,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.00862201);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498278,-99) , 
0, 0.495233, 1, 0, 0.500398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482874,-99) , 
4, 0.99932, 0, 0, 0.499706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474788,-99) , 
4, 0.998571, 0, 0, 0.498825,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.010543);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23809, 1, 1, 0.514154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48951,-99) , 
9, -1.66467, 0, 0, 0.509193,-99) , 
NN(
0, 
0, 
-1, 2.89977, 1, -1, 0.49665,-99) , 
7, -1.3809, 1, 0, 0.497933,-99) , 
7, 1.85714, 0, 0, 0.498877,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0145114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498641,-99) , 
7, -0.876095, 1, 0, 0.511352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488884,-99) , 
7, -0.428429, 0, 0, 0.501331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488508,-99) , 
8, -1.86975, 1, 0, 0.49527,-99) , 
9, 1.61783, 0, 0, 0.497274,-99) , 
8, -3.20228, 1, 0, 0.498772,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0061979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57143, 1, 1, 0.501763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479654,-99) , 
4, 0.99932, 0, 0, 0.500904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480211,-99) , 
4, 0.998571, 0, 0, 0.500169,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00979872);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517859,-99) , 
NN(
0, 
0, 
-1, 0.0238076, 1, -1, 0.495699,-99) , 
7, -1.8571, 1, 0, 0.496676,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.014319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494513,-99) , 
8, -3.47092, 1, 0, 0.514872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493756,-99) , 
9, -1.89322, 0, 0, 0.507404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49255,-99) , 
2, -0.0714833, 0, 0, 0.501232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489839,-99) , 
8, -1.8667, 0, 0, 0.493538,-99) , 
9, 0.0490725, 0, 0, 0.498897,-99) , 
8, -3.20228, 1, 0, 0.499811,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0102994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496085,-99) , 
9, -1.93524, 0, 0, 0.511933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499284,-99) , 
9, 1.51633, 0, 0, 0.501215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49381,-99) , 
5, 0.0236916, 0, 0, 0.495744,-99) , 
8, -0.385594, 1, 0, 0.499308,-99) , 
8, -3.2974, 1, 0, 0.500465,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0143946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495824,-99) , 
0, 0.501129, 1, 0, 0.520635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49113,-99) , 
0, 0.495233, 0, 0, 0.510388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495371,-99) , 
4, 0.999986, 0, 0, 0.50102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47779,-99) , 
4, 0.999705, 0, 0, 0.500197,-99) , 
4, 0.999524, 1, 0, 0.501179,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.00866872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492845,-99) , 
8, -3.86833, 1, 0, 0.512772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481826,-99) , 
4, 0.999456, 0, 0, 0.501167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482615,-99) , 
4, 0.999048, 0, 0, 0.500253,-99) , 
8, -3.43055, 1, 0, 0.501193,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.011833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493162,-99) , 
9, -1.2079, 0, 0, 0.501982,-99) , 
4, 0.999524, 1, 0, 0.507173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492453,-99) , 
0, 0.5019, 1, 0, 0.500483,-99) , 
NN(
0, 
0, 
-1, -0.428456, 0, -1, 0.491939,-99) , 
2, 0.0721846, 1, 0, 0.498975,-99) , 
8, -2.74869, 1, 0, 0.500525,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.00807456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496499,-99) , 
9, -1.71867, 0, 0, 0.507708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490855,-99) , 
9, -0.474728, 0, 0, 0.499011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478278,-99) , 
7, -1.5714, 1, 0, 0.488995,-99) , 
7, -0.999971, 0, 0, 0.497788,-99) , 
8, -3.20228, 1, 0, 0.498852,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0107797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496558,-99) , 
4, 0.999524, 1, 0, 0.497713,-99) , 
7, -1.85704, 1, 0, 0.498617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478099,-99) , 
4, 0.998572, 0, 0, 0.497903,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.017225);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480818,-99) , 
8, -1.26465, 1, 0, 0.509034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490695,-99) , 
3, 2.11505, 1, 0, 0.497325,-99) , 
8, -0.714066, 1, 0, 0.50549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519569,-99) , 
NN(
0, 
0, 
-1, 5.16638, 1, -1, 0.494894,-99) , 
0, 0.504757, 0, 0, 0.496529,-99) , 
7, 0.142872, 1, 0, 0.501238,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0121254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496837,-99) , 
8, -3.50253, 1, 0, 0.509348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477158,-99) , 
4, 0.999524, 0, 0, 0.501389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49375,-99) , 
4, 0.999524, 1, 0, 0.496205,-99) , 
9, 0.273512, 0, 0, 0.49949,-99) , 
8, -3.20228, 1, 0, 0.500539,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0129215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42857, 0, 1, 0.514169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494825,-99) , 
7, 0.42859, 1, 0, 0.501557,-99) , 
4, 0.999524, 1, 0, 0.502723,-99) , 
NN(
0, 
0, 
-1, 0.505845, 0, -1, 0.489984,-99) , 
0, 0.504757, 1, 0, 0.501901,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.00749521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488566,-99) , 
9, 6.14798, 1, 0, 0.500655,-99) , 
4, 0.998572, 1, 0, 0.501663,-99) , 
NN(
0, 
0, 
-1, -0.432358, 0, -1, 0.490944,-99) , 
0, 0.493328, 0, 0, 0.500148,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.01112);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495505,-99) , 
8, -2.02169, 1, 0, 0.499928,-99) , 
NN(
0, 
0, 
-1, 2.05591, 0, -1, 0.492945,-99) , 
8, 0.730904, 1, 0, 0.498583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483571,-99) , 
7, 2.14286, 1, 0, 0.498103,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0074822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49946,-99) , 
7, -1.57143, 1, 0, 0.50043,-99) , 
4, 0.999048, 1, 0, 0.501784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495884,-99) , 
7, 0.143008, 0, 0, 0.501565,-99) , 
NN(
0, 
0, 
-1, -0.469167, 0, -1, 0.484958,-99) , 
9, 0.600506, 0, 0, 0.493305,-99) , 
0, 0.493328, 0, 0, 0.500579,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0215148);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494831,-99) , 
9, 4.65343, 1, 0, 0.507906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495444,-99) , 
0, 0.500947, 0, 0, 0.498519,-99) , 
7, 0.428631, 0, 0, 0.503671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492132,-99) , 
9, -0.237513, 0, 0, 0.499302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474372,-99) , 
6, -950.098, 0, 0, 0.487224,-99) , 
8, -2.03183, 1, 0, 0.495452,-99) , 
9, 0.652195, 0, 0, 0.499383,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0116805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497851,-99) , 
8, -3.8533, 1, 0, 0.512437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483219,-99) , 
7, 2.18367, 1, 0, 0.503588,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496103,-99) , 
7, 0.142857, 0, 0, 0.500053,-99) , 
8, -3.2647, 1, 0, 0.501257,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0133714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494132,-99) , 
3, 4.20086, 1, 0, 0.502697,-99) , 
7, 1.28557, 0, 0, 0.506348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490777,-99) , 
7, -0.514235, 1, 0, 0.503582,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494895,-99) , 
8, -2.88184, 1, 0, 0.496307,-99) , 
2, 0.0714273, 0, 0, 0.498123,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0109893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497591,-99) , 
8, -1.04651, 1, 0, 0.514749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490344,-99) , 
0, 0.499042, 0, 0, 0.496452,-99) , 
9, -1.25886, 0, 0, 0.507913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499519,-99) , 
4, 0.999524, 1, 0, 0.500978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471626,-99) , 
5, 0.0237168, 1, 0, 0.499806,-99) , 
7, -0.714256, 1, 0, 0.501749,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0130069);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213912, 1, 1, 0.505685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46718,-99) , 
4, 0.999841, 0, 0, 0.501025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476361,-99) , 
4, 0.999524, 0, 0, 0.498814,-99) , 
7, -0.428575, 0, 0, 0.503462,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00977685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494715,-99) , 
9, -1.29235, 0, 0, 0.506301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498465,-99) , 
5, 0.013604, 0, 0, 0.49955,-99) , 
8, -2.71411, 1, 0, 0.500904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479338,-99) , 
5, 0.0238077, 1, 0, 0.500042,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.013182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.215084, 0, 1, 0.504221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482413,-99) , 
5, 0.0237353, 1, 0, 0.503351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487011,-99) , 
9, -1.40424, 0, 0, 0.500372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474928,-99) , 
8, -0.176029, 1, 0, 0.494747,-99) , 
7, -0.999968, 0, 0, 0.501921,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.00676062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496361,-99) , 
0, 0.49809, 0, 0, 0.516973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474576,-99) , 
7, -2.07483, 0, 0, 0.499425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478909,-99) , 
9, 5.32519, 1, 0, 0.498049,-99) , 
7, 1.85713, 0, 0, 0.499161,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0192921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47232,-99) , 
4, 0.999773, 0, 0, 0.503701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477312,-99) , 
7, -0.38762, 0, 0, 0.488848,-99) , 
4, 0.999524, 0, 0, 0.502348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456576,-99) , 
7, 2.0204, 1, 0, 0.5007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413811,-99) , 
6, -1.02915, 0, 0, 0.487329,-99) , 
6, -951.286, 1, 0, 0.495046,-99) , 
7, 0.428565, 1, 0, 0.499617,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0151142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428605, 1, 1, 0.505953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48247,-99) , 
6, 0.43626, 1, 0, 0.496237,-99) , 
6, -948.87, 1, 0, 0.502505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537555,-99) , 
NN(
0, 
0, 
-1, -1.48269, 1, -1, 0.493754,-99) , 
8, -0.955109, 0, 0, 0.495742,-99) , 
9, 0.821521, 0, 0, 0.498727,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0150909);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482782,-99) , 
7, -1.66668, 0, 0, 0.502531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479574,-99) , 
6, -951.275, 1, 0, 0.496563,-99) , 
9, 2.179, 1, 0, 0.501428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493358,-99) , 
9, 2.5048, 0, 0, 0.499957,-99) , 
NN(
0, 
0, 
-1, 0.900346, 0, -1, 0.484232,-99) , 
7, 1.28572, 0, 0, 0.495126,-99) , 
7, 0.999998, 1, 0, 0.500149,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0255615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497957,-99) , 
0, 0.495868, 0, 0, 0.516958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480311,-99) , 
0, 0.500947, 1, 0, 0.50651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473166,-99) , 
4, 0.999977, 0, 0, 0.505655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486801,-99) , 
4, 0.999977, 1, 0, 0.492311,-99) , 
3, 4.33479, 0, 0, 0.49539,-99) , 
4, 0.999524, 1, 0, 0.496468,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.012274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49422,-99) , 
8, -2.6789, 1, 0, 0.497114,-99) , 
7, -1.28459, 1, 0, 0.499158,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.494734,-99) , 
6, -948.87, 0, 0, 0.496626,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0108842);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.08597, 1, 1, 0.509001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496824,-99) , 
8, -2.19427, 1, 0, 0.500084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47668,-99) , 
9, 3.09004, 1, 0, 0.498899,-99) , 
8, 3.08551, 0, 0, 0.499866,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0127722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494542,-99) , 
8, -0.701091, 1, 0, 0.508229,-99) , 
NN(
0, 
0, 
-1, -3.23894, 1, -1, 0.495717,-99) , 
9, -1.06292, 0, 0, 0.50343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497082,-99) , 
1, -0.00792962, 1, 0, 0.498194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464557,-99) , 
5, 0.0237968, 1, 0, 0.496877,-99) , 
7, -0.428571, 1, 0, 0.499015,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0123819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.879155, 0, 1, 0.503684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457851,-99) , 
8, -2.13877, 1, 0, 0.487063,-99) , 
7, -1.57144, 0, 0, 0.502338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495762,-99) , 
9, 4.89686, 1, 0, 0.501357,-99) , 
NN(
0, 
0, 
-1, 0.944828, 0, -1, 0.485654,-99) , 
8, 2.18056, 0, 0, 0.49489,-99) , 
9, 2.3285, 1, 0, 0.500828,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00882341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494414,-99) , 
7, 0.170344, 0, 0, 0.503884,-99) , 
7, -0.71396, 1, 0, 0.509244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4964,-99) , 
6, -951.203, 0, 0, 0.498473,-99) , 
8, -3.53658, 1, 0, 0.499575,-99) , 
0, 0.503804, 0, 0, 0.500552,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0170641);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49754,-99) , 
9, 0.0382665, 0, 0, 0.50608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486107,-99) , 
9, 1.20576, 0, 0, 0.494771,-99) , 
8, -1.71306, 1, 0, 0.50006,-99) , 
8, 4.46852, 0, 0, 0.501143,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00807711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498337,-99) , 
2, 0.214325, 0, 0, 0.499178,-99) , 
4, 0.998571, 1, 0, 0.500342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478216,-99) , 
3, 9.39852, 1, 0, 0.499571,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.00468069);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515714,-99) , 
NN(
NN(
0, 
0, 
-1, -3.81896, 1, 1, 0.508959,-99) , 
NN(
0, 
0, 
-1, 4.63561, 1, -1, 0.498965,-99) , 
8, -3.23082, 1, 0, 0.500021,-99) , 
7, 2.14286, 0, 0, 0.500552,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0164648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493988,-99) , 
8, -1.37985, 1, 0, 0.509967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48926,-99) , 
7, -0.687071, 0, 0, 0.497384,-99) , 
8, -0.176269, 1, 0, 0.506978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498288,-99) , 
9, 4.74636, 1, 0, 0.509327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49046,-99) , 
8, -0.906136, 1, 0, 0.497937,-99) , 
8, 1.53403, 0, 0, 0.499819,-99) , 
7, -0.142862, 1, 0, 0.502854,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00595983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.8571, 1, 1, 0.501589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47925,-99) , 
6, -951.286, 0, 0, 0.489884,-99) , 
4, 0.99966, 0, 0, 0.500622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482575,-99) , 
4, 0.998571, 0, 0, 0.499977,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.00743598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482422,-99) , 
0, 0.501083, 1, 0, 0.50842,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.498334,-99) , 
4, 0.999524, 1, 0, 0.499241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486805,-99) , 
0, 0.490471, 0, 0, 0.498656,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0182243);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428266, 1, 1, 0.511408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496502,-99) , 
9, 0.874515, 0, 0, 0.501315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490671,-99) , 
9, 0.849389, 1, 0, 0.493964,-99) , 
8, -0.945192, 1, 0, 0.498785,-99) , 
8, 3.10776, 0, 0, 0.499988,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0134329);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.49649, 1, 1, 0.516055,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999868, 0, 1, 0.513309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495444,-99) , 
2, -0.0119511, 1, 0, 0.499428,-99) , 
2, 0.112421, 0, 0, 0.501306,-99) , 
2, -0.214059, 1, 0, 0.502148,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0120986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499127,-99) , 
9, -1.42485, 0, 0, 0.513729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496004,-99) , 
7, -1.38095, 0, 0, 0.500418,-99) , 
0, 0.497138, 0, 0, 0.508347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486697,-99) , 
9, 3.37441, 1, 0, 0.500646,-99) , 
NN(
0, 
0, 
-1, 1.05017, 0, -1, 0.49157,-99) , 
7, 0.90476, 1, 0, 0.498179,-99) , 
7, -0.999998, 1, 0, 0.499899,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.00905597);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498977,-99) , 
9, 1.14042, 0, 0, 0.501306,-99) , 
NN(
0, 
0, 
-1, -951.256, 1, -1, 0.486572,-99) , 
9, 3.73674, 1, 0, 0.499697,-99) , 
7, 2.14285, 0, 0, 0.500423,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0169408);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495749,-99) , 
9, -0.405744, 0, 0, 0.505306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490994,-99) , 
9, 1.24809, 0, 0, 0.49649,-99) , 
8, -2.19922, 1, 0, 0.499502,-99) , 
8, 4.49462, 0, 0, 0.500488,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0141406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.961165, 0, 1, 0.505354,-99) , 
NN(
0, 
0, 
-1, 2.3109, 0, -1, 0.491952,-99) , 
8, -0.234705, 1, 0, 0.501727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491912,-99) , 
3, 4.41624, 0, 0, 0.495603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472602,-99) , 
0, 0.502852, 1, 0, 0.492477,-99) , 
7, 0.999995, 1, 0, 0.49986,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0152238);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497869,-99) , 
4, 0.999985, 0, 0, 0.503929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467853,-99) , 
4, 0.999683, 0, 0, 0.5029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475354,-99) , 
6, -951.286, 0, 0, 0.492213,-99) , 
4, 0.999524, 0, 0, 0.501908,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.00730319);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486503,-99) , 
7, -1.7754, 0, 0, 0.501153,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.492397,-99) , 
9, 3.5785, 1, 0, 0.50015,-99) , 
7, 2.14286, 0, 0, 0.500692,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.00936202);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214116, 0, 1, 0.504408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487794,-99) , 
3, 9.39629, 1, 0, 0.503826,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0142864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.352551, 1, 1, 0.511693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496001,-99) , 
0, 0.493328, 1, 0, 0.498172,-99) , 
3, 0.985755, 1, 0, 0.501136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474279,-99) , 
3, 9.40736, 1, 0, 0.500211,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.011138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498102,-99) , 
3, 1.67597, 1, 0, 0.502299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492624,-99) , 
7, 1, 0, 0, 0.49554,-99) , 
3, 4.25816, 1, 0, 0.501048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490811,-99) , 
6, -951.275, 1, 0, 0.499206,-99) , 
NN(
0, 
0, 
-1, -0.139304, 1, -1, 0.485761,-99) , 
0, 0.497138, 0, 0, 0.49354,-99) , 
2, -0.0712921, 0, 0, 0.499716,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0125072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498066,-99) , 
7, -0.428456, 0, 0, 0.51128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484885,-99) , 
4, 0.999524, 0, 0, 0.502129,-99) , 
0, 0.500675, 1, 0, 0.505186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494807,-99) , 
2, 0.0698649, 1, 0, 0.501148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488975,-99) , 
7, 1.53062, 0, 0, 0.492876,-99) , 
7, 0.428587, 1, 0, 0.498055,-99) , 
0, 0.499043, 0, 0, 0.501039,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0125618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493763,-99) , 
8, -0.714066, 1, 0, 0.504471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474552,-99) , 
0, 0.504893, 1, 0, 0.497817,-99) , 
7, 0.142874, 1, 0, 0.501316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494647,-99) , 
0, 0.493736, 1, 0, 0.501121,-99) , 
NN(
0, 
0, 
-1, -2.35396, 1, -1, 0.48972,-99) , 
9, 0.4523, 0, 0, 0.495759,-99) , 
0, 0.496185, 0, 0, 0.499506,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.00907719);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485116,-99) , 
0, 0.501083, 1, 0, 0.513947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498911,-99) , 
2, 0.216582, 0, 0, 0.499879,-99) , 
4, 0.999524, 1, 0, 0.501105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489343,-99) , 
7, -0.550717, 0, 0, 0.495307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481027,-99) , 
7, 0.428687, 1, 0, 0.49011,-99) , 
0, 0.492376, 0, 0, 0.49998,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0146092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493003,-99) , 
8, -0.652621, 1, 0, 0.503727,-99) , 
7, 0.999894, 0, 0, 0.50713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482295,-99) , 
0, 0.491424, 0, 0, 0.500289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475433,-99) , 
2, -0.00700847, 1, 0, 0.49305,-99) , 
2, 0.00367916, 0, 0, 0.497002,-99) , 
2, -0.0711356, 1, 0, 0.498833,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.00629612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499177,-99) , 
4, 0.999524, 1, 0, 0.500473,-99) , 
7, 2.14286, 0, 0, 0.501177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481637,-99) , 
3, 9.41378, 1, 0, 0.500516,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00737123);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.515632,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491447,-99) , 
2, 0.0517623, 0, 0, 0.494001,-99) , 
0, 0.500947, 1, 0, 0.499492,-99) , 
2, 0.214749, 0, 0, 0.500399,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.00859869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0.143093, 0, -1, 0.476135,-99) , 
4, 0.999773, 0, 0, 0.499969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484821,-99) , 
7, 0.142959, 0, 0, 0.498912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469324,-99) , 
0, 0.499995, 1, 0, 0.488858,-99) , 
4, 0.999524, 0, 0, 0.498918,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0138268);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.63631, 1, 1, 0.513817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495707,-99) , 
8, 1.70217, 0, 0, 0.501086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494154,-99) , 
8, -3.05297, 1, 0, 0.495709,-99) , 
9, 1.69143, 0, 0, 0.497386,-99) , 
8, -3.33543, 1, 0, 0.498841,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0275903);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494978,-99) , 
9, 0.253944, 0, 0, 0.504755,-99) , 
NN(
0, 
0, 
-1, 2.52237, 0, -1, 0.490157,-99) , 
8, 0.0583624, 1, 0, 0.500489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494124,-99) , 
6, -0.492082, 1, 0, 0.50318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386423,-99) , 
6, -1.72499, 0, 0, 0.495192,-99) , 
6, -951.203, 1, 0, 0.498235,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.00697581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493988,-99) , 
7, -0.714261, 0, 0, 0.51093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492379,-99) , 
7, 0.428892, 1, 0, 0.500729,-99) , 
6, -951.286, 1, 0, 0.506687,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57143, 1, 1, 0.501192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489329,-99) , 
0, 0.501219, 1, 0, 0.50056,-99) , 
0, 0.5019, 0, 0, 0.501762,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.00872887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.275, 1, 1, 0.51572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493033,-99) , 
0, 0.503532, 1, 0, 0.49648,-99) , 
7, 0.428572, 1, 0, 0.50869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488526,-99) , 
2, 0.0722077, 1, 0, 0.498228,-99) , 
8, -3.39856, 1, 0, 0.499151,-99) , 
0, 0.5019, 0, 0, 0.501022,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0143178);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496356,-99) , 
7, 1.00005, 1, 0, 0.512874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496898,-99) , 
9, -0.569829, 0, 0, 0.509443,-99) , 
NN(
NN(
0, 
0, 
-1, -1.4683, 0, 1, 0.508867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49474,-99) , 
4, 0.999524, 1, 0, 0.496428,-99) , 
7, -1.28571, 1, 0, 0.497809,-99) , 
0, 0.502852, 0, 0, 0.49949,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0114477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.418969, 0, 1, 0.524324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48633,-99) , 
9, -1.21867, 0, 0, 0.501486,-99) , 
7, -1.5714, 1, 0, 0.503152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480098,-99) , 
6, -951.286, 0, 0, 0.49092,-99) , 
4, 0.999524, 0, 0, 0.502002,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0139844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495951,-99) , 
7, -0.10145, 1, 0, 0.518375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489116,-99) , 
0, 0.496184, 1, 0, 0.493278,-99) , 
9, -1.14775, 0, 0, 0.503578,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496224,-99) , 
5, 0.0238025, 0, 0, 0.49721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474652,-99) , 
4, 0.999048, 0, 0, 0.496224,-99) , 
8, -2.71411, 1, 0, 0.497679,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0090145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.363908, 1, 1, 0.515542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498381,-99) , 
0, 0.503804, 0, 0, 0.499849,-99) , 
3, 0.53279, 1, 0, 0.501068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474426,-99) , 
3, 9.39852, 1, 0, 0.500145,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0132674);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.501582, 1, 1, 0.509076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497884,-99) , 
8, -0.176029, 1, 0, 0.503507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490469,-99) , 
2, -0.0709636, 1, 0, 0.494612,-99) , 
7, 0.999989, 1, 0, 0.501706,-99) , 
0, 0.500947, 0, 0, 0.503621,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.00704713);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.516881,-99) , 
NN(
NN(
0, 
0, 
-1, -0.999968, 1, 1, 0.502156,-99) , 
NN(
0, 
0, 
-1, -0.0305577, 0, -1, 0.489511,-99) , 
0, 0.491423, 0, 0, 0.501288,-99) , 
2, 0.214279, 0, 0, 0.502163,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.00645127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47605,-99) , 
4, 0.999388, 0, 0, 0.499258,-99) , 
2, -0.213559, 1, 0, 0.500596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473862,-99) , 
4, 0.998572, 0, 0, 0.499644,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0113084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494121,-99) , 
7, -0.928397, 1, 0, 0.505336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496554,-99) , 
8, 3.99959, 0, 0, 0.497533,-99) , 
8, -2.88184, 1, 0, 0.49883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482316,-99) , 
5, 0.0237659, 1, 0, 0.498175,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.00672367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.132835, 0, 1, 0.502216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491495,-99) , 
2, 0.214448, 1, 0, 0.501674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50317,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.484484,-99) , 
9, 1.36289, 0, 0, 0.491427,-99) , 
0, 0.503804, 1, 0, 0.500663,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00797633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499514,-99) , 
4, 0.999048, 1, 0, 0.500119,-99) , 
0, 0.490471, 1, 0, 0.500872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486591,-99) , 
3, 4.89832, 1, 0, 0.500525,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.481534,-99) , 
2, -0.139243, 1, 0, 0.492258,-99) , 
2, -0.0712254, 0, 0, 0.49934,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0114776);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.48077, 1, 1, 0.518491,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.514763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495071,-99) , 
2, 0.0229112, 0, 0, 0.497872,-99) , 
2, -0.132531, 1, 0, 0.49879,-99) , 
2, -0.214146, 1, 0, 0.499932,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.00971324);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49635,-99) , 
7, -0.405509, 1, 0, 0.51319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485149,-99) , 
8, -3.74207, 0, 0, 0.496944,-99) , 
9, -1.48519, 0, 0, 0.505862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491761,-99) , 
7, -0.428571, 0, 0, 0.498338,-99) , 
5, 0.0238076, 0, 0, 0.498949,-99) , 
8, -2.88184, 1, 0, 0.500078,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.00672602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487667,-99) , 
7, -1.57138, 0, 0, 0.500675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485198,-99) , 
5, 0.0158679, 1, 0, 0.500088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484547,-99) , 
5, 0.0238024, 1, 0, 0.499456,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00977018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.71327, 1, 1, 0.51136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488864,-99) , 
8, -3.34312, 1, 0, 0.499658,-99) , 
9, -1.13466, 0, 0, 0.506543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497684,-99) , 
2, 0.275663, 0, 0, 0.498529,-99) , 
2, -0.214012, 1, 0, 0.499231,-99) , 
7, -0.714256, 1, 0, 0.50098,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0113891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495637,-99) , 
0, 0.502344, 1, 0, 0.501461,-99) , 
0, 0.506162, 0, 0, 0.502692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487272,-99) , 
7, -0.714173, 0, 0, 0.502649,-99) , 
NN(
0, 
0, 
-1, -1.05334, 1, -1, 0.495422,-99) , 
8, -0.170722, 0, 0, 0.497461,-99) , 
0, 0.499995, 0, 0, 0.499218,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0113314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488085,-99) , 
8, -1.36984, 1, 0, 0.510989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488733,-99) , 
9, 3.50466, 1, 0, 0.501436,-99) , 
NN(
0, 
0, 
-1, 2.27437, 1, -1, 0.488242,-99) , 
7, 1.91156, 1, 0, 0.500714,-99) , 
7, -1.57143, 1, 0, 0.501444,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00708472);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49887,-99) , 
9, -1.67206, 0, 0, 0.505509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497542,-99) , 
7, 1.85705, 0, 0, 0.498151,-99) , 
8, -3.33543, 1, 0, 0.498807,-99) , 
0, 0.490471, 1, 0, 0.499438,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0215916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494062,-99) , 
5, 0.00226688, 0, 0, 0.503989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477606,-99) , 
5, 0.0045332, 1, 0, 0.495859,-99) , 
8, 0.730904, 1, 0, 0.502492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486032,-99) , 
5, 0.0238024, 1, 0, 0.501832,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0124895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.23957, 0, 1, 0.503874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495641,-99) , 
7, -0.71301, 1, 0, 0.498923,-99) , 
6, -14.0823, 1, 0, 0.501767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492083,-99) , 
7, -1.00001, 1, 0, 0.494777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476133,-99) , 
4, 0.999524, 0, 0, 0.492982,-99) , 
0, 0.499995, 1, 0, 0.498851,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0090792);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497501,-99) , 
3, 8.4942, 0, 0, 0.498681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467998,-99) , 
4, 0.999184, 0, 0, 0.497799,-99) , 
4, 0.998572, 1, 0, 0.498331,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0100037);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498179,-99) , 
2, 0.0711287, 0, 0, 0.500398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47639,-99) , 
5, 0.0238076, 1, 0, 0.499435,-99) , 
7, -1.85714, 1, 0, 0.500458,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00786397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520931,-99) , 
NN(
NN(
0, 
0, 
-1, 1.53286, 0, 1, 0.502339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483179,-99) , 
8, 3.53032, 0, 0, 0.494459,-99) , 
9, 2.84699, 1, 0, 0.501132,-99) , 
7, 2.14286, 0, 0, 0.501805,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0087566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0638733, 0, 1, 0.503093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495664,-99) , 
0, 0.490471, 1, 0, 0.496813,-99) , 
3, 1.86265, 1, 0, 0.499703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489237,-99) , 
3, 9.39852, 1, 0, 0.499331,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0194981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494517,-99) , 
9, 0.0193859, 0, 0, 0.503977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486929,-99) , 
9, 1.19003, 0, 0, 0.496203,-99) , 
8, -1.71307, 1, 0, 0.499829,-99) , 
8, 4.46852, 0, 0, 0.500665,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.00763068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214293, 0, 1, 0.502725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475642,-99) , 
4, 0.999411, 0, 0, 0.501967,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.487948,-99) , 
4, 0.999048, 0, 0, 0.501188,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.00711409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69383, 1, 1, 0.519239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49629,-99) , 
9, -1.38594, 0, 0, 0.509803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499269,-99) , 
4, 0.999048, 1, 0, 0.500151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484605,-99) , 
7, -0.0612091, 1, 0, 0.491316,-99) , 
0, 0.503804, 1, 0, 0.499292,-99) , 
7, -1.28566, 1, 0, 0.500481,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0068282);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497153,-99) , 
0, 0.49809, 1, 0, 0.499746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488057,-99) , 
7, 1.65303, 1, 0, 0.499173,-99) , 
7, 2.14284, 0, 0, 0.499637,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0087851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48323,-99) , 
4, 0.999864, 0, 0, 0.509435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499559,-99) , 
8, -3.46978, 1, 0, 0.500332,-99) , 
0, 0.5019, 0, 0, 0.502101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485438,-99) , 
4, 0.998571, 0, 0, 0.501503,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0112728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.69152, 0, 1, 0.504524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490028,-99) , 
3, 6.53357, 1, 0, 0.503726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477993,-99) , 
3, 8.54822, 1, 0, 0.50251,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.00499399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499773,-99) , 
2, 0.215036, 0, 0, 0.500721,-99) , 
7, -1.85711, 1, 0, 0.501479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481257,-99) , 
4, 0.998572, 0, 0, 0.500754,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0147865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493671,-99) , 
8, -1.37978, 1, 0, 0.503075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491162,-99) , 
6, -948.87, 0, 0, 0.496192,-99) , 
8, -0.176269, 1, 0, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484988,-99) , 
0, 0.490471, 0, 0, 0.500325,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0103633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.32226, 0, 1, 0.503971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478194,-99) , 
4, 0.99932, 0, 0, 0.502973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480745,-99) , 
4, 0.998572, 0, 0, 0.50218,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0147867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495785,-99) , 
9, 2.3285, 1, 0, 0.503063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480038,-99) , 
2, 0.00725754, 0, 0, 0.495295,-99) , 
2, -0.00343191, 1, 0, 0.499616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503269,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.48949,-99) , 
0, 0.501899, 0, 0, 0.492959,-99) , 
2, 0.0713938, 1, 0, 0.498431,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00888271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493328, 0, 1, 0.512298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495064,-99) , 
9, -0.830771, 0, 0, 0.50937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49492,-99) , 
9, -0.414261, 0, 0, 0.499573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486779,-99) , 
0, 0.505709, 1, 0, 0.498961,-99) , 
0, 0.494281, 1, 0, 0.50099,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0143833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.5,-99) , 
9, -0.363044, 0, 0, 0.507959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49562,-99) , 
8, -1.67627, 1, 0, 0.499685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490466,-99) , 
7, 1.4762, 0, 0, 0.492523,-99) , 
6, -948.87, 1, 0, 0.496593,-99) , 
7, -1.57143, 1, 0, 0.497412,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0245042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48795,-99) , 
9, 4.75796, 1, 0, 0.502607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457842,-99) , 
7, -1.8571, 0, 0, 0.500377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490076,-99) , 
6, -0.0525768, 1, 0, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427158,-99) , 
6, -1.45253, 0, 0, 0.494966,-99) , 
6, -20.9575, 1, 0, 0.49808,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.00694358);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498385,-99) , 
4, 0.999524, 1, 0, 0.499711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485245,-99) , 
3, 9.41704, 1, 0, 0.499211,-99) , 
7, -1.8571, 1, 0, 0.4998,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.00849894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49545,-99) , 
0, 0.500131, 1, 0, 0.518151,-99) , 
NN(
0, 
0, 
-1, 0.223856, 0, 1, 0.501512,-99) , 
4, 0.999524, 1, 0, 0.502941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50513,-99) , 
NN(
0, 
0, 
-1, -949.754, 0, -1, 0.488311,-99) , 
2, 0.0713704, 0, 0, 0.492383,-99) , 
0, 0.493328, 0, 0, 0.501446,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0223855);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495435,-99) , 
9, 0.528617, 0, 0, 0.500852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484645,-99) , 
6, -948.87, 0, 0, 0.49325,-99) , 
8, -1.33354, 1, 0, 0.497515,-99) , 
8, 4.34365, 0, 0, 0.498715,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.00964724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49798, 0, 1, 0.504988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492075,-99) , 
0, 0.498498, 1, 0, 0.503894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47166,-99) , 
4, 0.999819, 0, 0, 0.497986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477026,-99) , 
4, 0.999524, 0, 0, 0.496077,-99) , 
0, 0.499043, 1, 0, 0.500657,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0092591);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481024,-99) , 
7, -2.10192, 0, 0, 0.501512,-99) , 
NN(
0, 
0, 
-1, 0.490471, 0, -1, 0.495736,-99) , 
7, -0.306061, 1, 0, 0.497932,-99) , 
7, 2.14284, 0, 0, 0.498553,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.00666899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.41799, 1, 1, 0.519619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497992,-99) , 
9, -1.42485, 0, 0, 0.511034,-99) , 
NN(
0, 
0, 
-1, 0.0237353, 1, -1, 0.497853,-99) , 
7, -1.2857, 1, 0, 0.499345,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0104669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498486,-99) , 
3, 0.501872, 1, 0, 0.499749,-99) , 
3, 8.32226, 0, 0, 0.501004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486402,-99) , 
0, 0.496186, 0, 0, 0.500602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4602,-99) , 
7, -0.428694, 0, 0, 0.488395,-99) , 
4, 0.999524, 0, 0, 0.499815,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.00959742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.56972, 1, 1, 0.510007,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0667951, 1, 1, 0.511651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494635,-99) , 
9, -0.770318, 0, 0, 0.500975,-99) , 
2, 0.0512486, 0, 0, 0.50281,-99) , 
2, 0.214482, 0, 0, 0.503211,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00410784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.4271, 0, 1, 0.501041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483732,-99) , 
4, 0.99932, 0, 0, 0.500356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486884,-99) , 
4, 0.998572, 0, 0, 0.499873,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0090923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498928,-99) , 
9, 0.472047, 1, 0, 0.512793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497513,-99) , 
4, 0.999524, 1, 0, 0.49869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480841,-99) , 
0, 0.490471, 0, 0, 0.497896,-99) , 
2, 0.214482, 0, 0, 0.498737,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00703758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494883,-99) , 
8, -0.0823997, 0, 0, 0.512095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479801,-99) , 
4, 0.99932, 0, 0, 0.500601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484372,-99) , 
4, 0.998572, 0, 0, 0.500033,-99) , 
7, 1.85715, 0, 0, 0.500738,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0106482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498403,-99) , 
7, 2.23811, 1, 0, 0.515485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497943,-99) , 
9, -1.02267, 0, 0, 0.506738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49163,-99) , 
3, 4.35275, 1, 0, 0.499554,-99) , 
7, -0.687042, 1, 0, 0.501442,-99) , 
7, 1.85715, 0, 0, 0.502261,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0107142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489188,-99) , 
7, 0.673471, 1, 0, 0.505423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496257,-99) , 
9, 0.534474, 0, 0, 0.499079,-99) , 
2, 0.0715747, 0, 0, 0.500217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475405,-99) , 
9, 1.3946, 1, 0, 0.485013,-99) , 
6, -948.87, 0, 0, 0.491077,-99) , 
7, 1.28572, 1, 0, 0.498937,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0202061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.508513, 0, 1, 0.506958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485523,-99) , 
9, 1.56468, 0, 0, 0.491642,-99) , 
8, -1.37977, 1, 0, 0.50255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492999,-99) , 
9, 2.22563, 1, 0, 0.500843,-99) , 
NN(
0, 
0, 
-1, 1.00001, 0, -1, 0.487628,-99) , 
0, 0.496186, 1, 0, 0.492025,-99) , 
8, -0.176269, 1, 0, 0.499514,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.00734228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499472,-99) , 
0, 0.494281, 1, 0, 0.501128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472893,-99) , 
4, 0.99941, 0, 0, 0.50036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463072,-99) , 
6, -951.286, 0, 0, 0.484808,-99) , 
4, 0.999048, 0, 0, 0.499501,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00812642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0714273, 0, 1, 0.507727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479804,-99) , 
7, -0.999952, 0, 0, 0.498092,-99) , 
8, -2.88184, 1, 0, 0.49969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484576,-99) , 
5, 0.0238076, 1, 0, 0.49909,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0217886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495086,-99) , 
7, 0.42859, 0, 0, 0.500946,-99) , 
5, 0.0238077, 0, 0, 0.502978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490517,-99) , 
9, -0.339672, 0, 0, 0.499427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479232,-99) , 
6, -949.754, 0, 0, 0.489445,-99) , 
8, -2.03905, 1, 0, 0.495776,-99) , 
9, 0.821521, 0, 0, 0.498959,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0138574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487106,-99) , 
8, -0.362517, 1, 0, 0.498563,-99) , 
5, 0.0238077, 0, 0, 0.499724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485951,-99) , 
0, 0.499043, 1, 0, 0.494312,-99) , 
NN(
0, 
0, 
-1, 2.23028, 1, -1, 0.482803,-99) , 
7, 1.65303, 1, 0, 0.491854,-99) , 
7, 0.428561, 1, 0, 0.496789,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00921548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49808,-99) , 
2, 0.211802, 0, 0, 0.499123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474964,-99) , 
4, 0.999388, 0, 0, 0.498047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473037,-99) , 
4, 0.998572, 0, 0, 0.49716,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00920369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237968, 0, 1, 0.503687,-99) , 
NN(
0, 
0, 
-1, 0.640935, 0, -1, 0.495482,-99) , 
7, 0.428565, 1, 0, 0.500638,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.484768,-99) , 
2, 0.214482, 1, 0, 0.499782,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0048217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512444,-99) , 
NN(
0, 
0, 
-1, 0.714256, 1, -1, 0.498368,-99) , 
0, 0.505891, 0, 0, 0.498873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483918,-99) , 
0, 0.489519, 0, 0, 0.498458,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00712177);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498583,-99) , 
6, -948.87, 1, 0, 0.50126,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.49125,-99) , 
0, 0.491424, 0, 0, 0.500535,-99) , 
7, 2.14284, 0, 0, 0.501253,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.00765358);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.141912, 1, 1, 0.511134,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0237968, 0, 1, 0.502042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494465,-99) , 
3, 4.4052, 0, 0, 0.496751,-99) , 
7, 0.428585, 1, 0, 0.500074,-99) , 
0, 0.504757, 0, 0, 0.500805,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0109965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491175,-99) , 
7, 2.18368, 1, 0, 0.503118,-99) , 
9, 1.63841, 1, 0, 0.509597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493908,-99) , 
8, -1.38767, 1, 0, 0.503651,-99) , 
NN(
0, 
0, 
-1, 3.72623, 1, -1, 0.496886,-99) , 
7, -0.605444, 1, 0, 0.498896,-99) , 
7, 1.57143, 0, 0, 0.499897,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.00793726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489972,-99) , 
3, 5.85222, 1, 0, 0.500619,-99) , 
4, 0.998572, 1, 0, 0.501516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480031,-99) , 
3, 9.39852, 1, 0, 0.50077,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0101083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495266,-99) , 
7, 0.428773, 1, 0, 0.506566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499125,-99) , 
8, 2.1762, 0, 0, 0.500193,-99) , 
2, -0.0710441, 1, 0, 0.50127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491553,-99) , 
3, 4.18487, 0, 0, 0.495579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473577,-99) , 
4, 0.999524, 0, 0, 0.492708,-99) , 
0, 0.495233, 0, 0, 0.499117,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00921248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499101,-99) , 
0, 0.490471, 1, 0, 0.499848,-99) , 
7, -1.85694, 1, 0, 0.501016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488965,-99) , 
7, -0.255294, 0, 0, 0.505275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466509,-99) , 
9, 0.178407, 1, 0, 0.489388,-99) , 
4, 0.999524, 0, 0, 0.499926,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.00986853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.536889, 0, 1, 0.517374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496574,-99) , 
7, -0.428545, 0, 0, 0.501377,-99) , 
0, 0.504757, 0, 0, 0.502415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483245,-99) , 
4, 0.998572, 0, 0, 0.501736,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00632876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85705, 1, 1, 0.501182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464972,-99) , 
4, 0.99941, 0, 0, 0.5002,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.478299,-99) , 
4, 0.999048, 0, 0, 0.49901,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.00843783);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.417949, 1, 1, 0.512072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499459,-99) , 
5, 0.0238077, 0, 0, 0.500676,-99) , 
NN(
0, 
0, 
-1, -2.07113, 1, -1, 0.494624,-99) , 
9, 0.821521, 0, 0, 0.497311,-99) , 
2, -0.213912, 1, 0, 0.498159,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0117388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484403,-99) , 
7, -0.495914, 1, 0, 0.501617,-99) , 
8, -2.72947, 0, 0, 0.507987,-99) , 
NN(
NN(
0, 
0, 
-1, 8.30293, 0, 1, 0.50226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481343,-99) , 
4, 0.999048, 0, 0, 0.501337,-99) , 
9, -0.60248, 1, 0, 0.502853,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.017006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496984,-99) , 
8, -3.86827, 1, 0, 0.510837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423877,-99) , 
6, -1.62804, 0, 0, 0.501406,-99) , 
NN(
0, 
0, 
-1, -1.5714, 0, -1, 0.495888,-99) , 
6, -948.956, 0, 0, 0.498171,-99) , 
8, -3.43055, 1, 0, 0.499125,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0124667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493541,-99) , 
2, 0.0727853, 1, 0, 0.511306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490646,-99) , 
9, 1.94341, 0, 0, 0.498737,-99) , 
7, 0.42851, 1, 0, 0.506698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495195,-99) , 
3, 1.80148, 0, 0, 0.507518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493164,-99) , 
8, -1.41728, 1, 0, 0.497095,-99) , 
8, 2.39086, 0, 0, 0.498231,-99) , 
0, 0.500947, 0, 0, 0.500423,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0103392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85711, 1, 1, 0.503904,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.49398,-99) , 
2, -0.0714547, 0, 0, 0.502246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489115,-99) , 
8, -0.176041, 1, 0, 0.496776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48046,-99) , 
9, 0.328646, 0, 0, 0.489938,-99) , 
0, 0.492376, 0, 0, 0.500987,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0100028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499647,-99) , 
7, 0.14291, 0, 0, 0.517178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495469,-99) , 
9, 0.417012, 0, 0, 0.499533,-99) , 
4, 0.999048, 1, 0, 0.500543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47954,-99) , 
3, 9.39852, 1, 0, 0.49982,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0135928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496796,-99) , 
8, 0.472668, 1, 0, 0.504372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487524,-99) , 
7, 0.00682594, 1, 0, 0.49739,-99) , 
9, 0.316557, 0, 0, 0.500372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517366,-99) , 
NN(
0, 
0, 
-1, 2.45366, 1, -1, 0.491147,-99) , 
8, 2.10549, 0, 0, 0.494921,-99) , 
7, 0.714304, 1, 0, 0.498846,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0145795);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49466,-99) , 
9, -0.55428, 0, 0, 0.504144,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495166,-99) , 
8, -2.36581, 1, 0, 0.497858,-99) , 
8, 4.34365, 0, 0, 0.498701,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00618976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49855,-99) , 
9, -0.332111, 0, 0, 0.509782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486286,-99) , 
9, 5.57874, 1, 0, 0.50032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483787,-99) , 
5, 0.0238076, 1, 0, 0.499654,-99) , 
7, -1.57139, 1, 0, 0.500372,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.00702153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496086,-99) , 
6, -948.87, 1, 0, 0.498915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483776,-99) , 
0, 0.490199, 0, 0, 0.498266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47975,-99) , 
0, 0.505709, 1, 0, 0.497561,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0121632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495044,-99) , 
9, -0.131547, 0, 0, 0.499475,-99) , 
7, -2.04758, 1, 0, 0.500197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489335,-99) , 
6, -948.87, 0, 0, 0.498312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465621,-99) , 
6, -951.286, 1, 0, 0.483145,-99) , 
9, 1.13061, 0, 0, 0.493227,-99) , 
7, 1.00001, 1, 0, 0.498782,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00659285);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4985,-99) , 
7, -1.57143, 1, 0, 0.499343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474144,-99) , 
4, 0.999184, 0, 0, 0.498626,-99) , 
4, 0.998571, 1, 0, 0.499277,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00887781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49954,-99) , 
8, -1.97491, 1, 0, 0.504741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493885,-99) , 
7, -0.999957, 0, 0, 0.502935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497648,-99) , 
4, 0.999048, 1, 0, 0.498602,-99) , 
NN(
0, 
0, 
-1, 0.491, 1, -1, 0.489042,-99) , 
0, 0.492058, 0, 0, 0.497417,-99) , 
0, 0.500947, 0, 0, 0.498855,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0118221);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488246,-99) , 
9, 3.57945, 1, 0, 0.501372,-99) , 
NN(
0, 
0, 
-1, -1.32542, 1, -1, 0.490703,-99) , 
7, -1.04078, 0, 0, 0.499644,-99) , 
7, 2.14285, 0, 0, 0.500615,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.010913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56846, 0, 1, 0.526805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475175,-99) , 
8, -2.44939, 1, 0, 0.502645,-99) , 
9, 0.319448, 0, 0, 0.510326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489539,-99) , 
9, 4.30633, 1, 0, 0.49977,-99) , 
7, 2.04761, 0, 0, 0.500459,-99) , 
7, -1, 1, 0, 0.502129,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.012063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496309,-99) , 
7, -0.0475245, 0, 0, 0.503487,-99) , 
7, -0.999951, 1, 0, 0.506155,-99) , 
NN(
NN(
0, 
0, 
-1, -0.944838, 1, 1, 0.502325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49119,-99) , 
2, -0.0497898, 1, 0, 0.493748,-99) , 
2, 0.00364716, 0, 0, 0.498451,-99) , 
2, -0.071166, 1, 0, 0.499842,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0206535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142857, 1, 1, 0.515218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493925,-99) , 
6, -951.286, 1, 0, 0.507291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496751,-99) , 
9, 0.692209, 0, 0, 0.501494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478757,-99) , 
6, -948.87, 0, 0, 0.48641,-99) , 
8, -1.19778, 1, 0, 0.496512,-99) , 
8, 0.862707, 0, 0, 0.498543,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0128839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484759,-99) , 
7, -0.840669, 1, 0, 0.500362,-99) , 
8, -3.85749, 1, 0, 0.5072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49631,-99) , 
7, 1.85714, 0, 0, 0.497374,-99) , 
5, 0.0237968, 0, 0, 0.498154,-99) , 
8, -3.10801, 1, 0, 0.499268,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0145414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486597,-99) , 
9, 4.63267, 1, 0, 0.502116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483367,-99) , 
6, -951.286, 0, 0, 0.494195,-99) , 
7, -1.16327, 0, 0, 0.500907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459895,-99) , 
8, -1.04176, 1, 0, 0.483146,-99) , 
8, -0.0650196, 0, 0, 0.491691,-99) , 
7, 1.28571, 1, 0, 0.499628,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00699185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38085, 1, 1, 0.502617,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49501,-99) , 
2, 0.0713938, 1, 0, 0.501257,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.488934,-99) , 
7, 1.85716, 1, 0, 0.500559,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.00605517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499682,-99) , 
8, -2.55115, 1, 0, 0.501445,-99) , 
7, -1.8571, 1, 0, 0.502051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483304,-99) , 
4, 0.998571, 0, 0, 0.501392,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0150978);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498363,-99) , 
9, -0.406222, 0, 0, 0.50531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494186,-99) , 
9, -0.370135, 1, 0, 0.495443,-99) , 
8, -2.23358, 1, 0, 0.498724,-99) , 
8, 4.46349, 0, 0, 0.499833,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0126062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4921,-99) , 
0, 0.498091, 0, 0, 0.50229,-99) , 
6, -951.286, 0, 0, 0.511837,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.504572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481468,-99) , 
9, 0.692024, 0, 0, 0.494716,-99) , 
7, 0.700668, 1, 0, 0.502483,-99) , 
7, 1.57142, 0, 0, 0.503357,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0066646);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497713,-99) , 
8, -2.71411, 1, 0, 0.498924,-99) , 
0, 0.489519, 1, 0, 0.499295,-99) , 
7, 2.14281, 0, 0, 0.499917,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0133605);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489139,-99) , 
6, -0.858501, 0, 0, 0.505643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497722,-99) , 
5, 0.0124649, 0, 0, 0.499554,-99) , 
6, -948.87, 0, 0, 0.502145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486515,-99) , 
5, 0.0237968, 1, 0, 0.501515,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0113662);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495193,-99) , 
3, 4.3304, 0, 0, 0.497016,-99) , 
0, 0.505709, 0, 0, 0.497821,-99) , 
7, 2.14286, 0, 0, 0.498718,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00954607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60039, 0, 1, 0.504055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48516,-99) , 
0, 0.497093, 0, 0, 0.49652,-99) , 
9, 3.8871, 1, 0, 0.503278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490043,-99) , 
0, 0.505709, 1, 0, 0.502769,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0121721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143003, 1, 1, 0.506759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495963,-99) , 
8, -3.18269, 1, 0, 0.496977,-99) , 
0, 0.497591, 1, 0, 0.499533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487308,-99) , 
0, 0.493419, 1, 0, 0.496517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474412,-99) , 
4, 0.999524, 0, 0, 0.4937,-99) , 
0, 0.495233, 0, 0, 0.498064,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0104893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.91545, 1, 1, 0.512019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484252,-99) , 
2, -0.0907638, 1, 0, 0.497426,-99) , 
2, -0.13934, 1, 0, 0.505645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496957,-99) , 
5, 0.00226658, 1, 0, 0.49952,-99) , 
5, 0.0238076, 0, 0, 0.500062,-99) , 
2, -0.0713324, 1, 0, 0.501064,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0084006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484916,-99) , 
5, 0.0238024, 1, 0, 0.502247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488488,-99) , 
7, 0.14283, 0, 0, 0.494667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476656,-99) , 
2, -0.0720284, 0, 0, 0.490122,-99) , 
0, 0.492376, 0, 0, 0.501004,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00886975);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497518,-99) , 
2, 0.214327, 0, 0, 0.498731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484454,-99) , 
3, 8.47487, 1, 0, 0.498026,-99) , 
7, -1.85709, 1, 0, 0.498688,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0140742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.507355,-99) , 
NN(
0, 
0, 
-1, 0.504439, 0, -1, 0.491093,-99) , 
0, 0.502852, 1, 0, 0.504925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476277,-99) , 
8, -1.58129, 1, 0, 0.495458,-99) , 
8, -0.762402, 0, 0, 0.497199,-99) , 
9, 1.12226, 0, 0, 0.500135,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.00585985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57029, 0, 1, 0.501968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483519,-99) , 
7, 0.434745, 1, 0, 0.493453,-99) , 
9, 4.59922, 1, 0, 0.501256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489845,-99) , 
0, 0.490471, 0, 0, 0.500707,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.00748629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482479,-99) , 
4, 0.999637, 0, 0, 0.500133,-99) , 
4, 0.999048, 1, 0, 0.500763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51365,-99) , 
NN(
0, 
0, 
-1, -0.0781476, 1, -1, 0.485276,-99) , 
2, 0.0714671, 0, 0, 0.492584,-99) , 
0, 0.492376, 0, 0, 0.499929,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00905026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498839,-99) , 
3, 8.58009, 0, 0, 0.500108,-99) , 
NN(
0, 
0, 
-1, 0.451554, 1, -1, 0.482801,-99) , 
4, 0.99966, 0, 0, 0.49869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467831,-99) , 
4, 0.998572, 0, 0, 0.497618,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0167773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142874, 1, 1, 0.504006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45653,-99) , 
7, 0.428829, 0, 0, 0.486867,-99) , 
4, 0.999524, 0, 0, 0.502624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473373,-99) , 
7, -0.710844, 0, 0, 0.501486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465675,-99) , 
7, -0.916007, 1, 0, 0.484733,-99) , 
8, -3.0835, 0, 0, 0.490834,-99) , 
9, -0.770318, 0, 0, 0.500384,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0131485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499946,-99) , 
8, 1.66228, 0, 0, 0.502753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475102,-99) , 
7, -1.85712, 0, 0, 0.501331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487993,-99) , 
8, -2.50422, 1, 0, 0.492212,-99) , 
7, -1.28465, 1, 0, 0.494244,-99) , 
6, -948.87, 1, 0, 0.498316,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0112898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485014,-99) , 
9, 4.58531, 1, 0, 0.505221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47635,-99) , 
7, 2.2653, 1, 0, 0.503271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461665,-99) , 
4, 0.999773, 0, 0, 0.497909,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.484489,-99) , 
4, 0.999524, 0, 0, 0.496687,-99) , 
7, 0.428565, 0, 0, 0.499162,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00787335);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.8446, 1, 1, 0.509474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494752,-99) , 
8, -1.05364, 1, 0, 0.498808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477677,-99) , 
0, 0.505709, 1, 0, 0.498044,-99) , 
8, 2.91838, 0, 0, 0.499171,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0107456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492785,-99) , 
8, -0.205406, 0, 0, 0.511118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491545,-99) , 
3, 2.96846, 1, 0, 0.498901,-99) , 
7, 1.57139, 0, 0, 0.500052,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492407,-99) , 
3, 8.75063, 0, 0, 0.496027,-99) , 
NN(
0, 
0, 
-1, 0.275138, 1, -1, 0.484313,-99) , 
6, -14.0823, 1, 0, 0.491093,-99) , 
3, 4.74166, 1, 0, 0.498353,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.00861948);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494272,-99) , 
6, -951.286, 1, 0, 0.498054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476718,-99) , 
7, -1.85706, 0, 0, 0.497125,-99) , 
8, 4.54756, 0, 0, 0.498016,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0267362);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496927,-99) , 
7, 0.673484, 0, 0, 0.501831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47911,-99) , 
7, 2.14286, 1, 0, 0.499941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490292,-99) , 
9, 0.168477, 0, 0, 0.496632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477249,-99) , 
9, 0.138178, 1, 0, 0.486633,-99) , 
8, -1.71444, 1, 0, 0.493552,-99) , 
9, 1.15319, 0, 0, 0.495951,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.00758323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522028,-99) , 
NN(
0, 
0, 
-1, 1.85714, 1, -1, 0.498228,-99) , 
8, 1.31335, 0, 0, 0.499506,-99) , 
NN(
0, 
0, 
-1, -951.275, 1, -1, 0.48864,-99) , 
9, 3.73674, 1, 0, 0.498315,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.00784856);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488385,-99) , 
4, 0.998572, 0, 0, 0.502044,-99) , 
NN(
0, 
0, 
-1, 2.67636, 1, -1, 0.493926,-99) , 
7, 0.918341, 1, 0, 0.500446,-99) , 
7, 2.14285, 0, 0, 0.500994,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.00567056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484721,-99) , 
5, 0.0158713, 1, 0, 0.500781,-99) , 
7, 2.14285, 0, 0, 0.501385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489575,-99) , 
5, 0.0238076, 1, 0, 0.500903,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.00915792);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497774,-99) , 
7, 2.14286, 0, 0, 0.498699,-99) , 
NN(
0, 
0, 
-1, 0.502016, 0, -1, 0.489663,-99) , 
0, 0.501401, 1, 0, 0.496945,-99) , 
0, 0.505709, 0, 0, 0.497396,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0107492);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490885,-99) , 
9, -1.3922, 0, 0, 0.507867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493983,-99) , 
6, -948.87, 1, 0, 0.498462,-99) , 
7, -1.28566, 1, 0, 0.499514,-99) , 
0, 0.489519, 1, 0, 0.500055,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0087846);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515404,-99) , 
NN(
NN(
0, 
0, 
-1, 4.45162, 1, 1, 0.513752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497195,-99) , 
2, -0.112269, 1, 0, 0.498431,-99) , 
2, 0.214242, 0, 0, 0.499301,-99) , 
7, -1.8571, 1, 0, 0.500008,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0194292);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.507649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492719,-99) , 
4, 0.999996, 0, 0, 0.500276,-99) , 
NN(
0, 
0, 
-1, -0.999984, 0, -1, 0.490093,-99) , 
4, 0.999909, 0, 0, 0.498312,-99) , 
4, 0.999048, 1, 0, 0.498842,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.00470997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.2137, 0, 1, 0.500991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482195,-99) , 
4, 0.999388, 0, 0, 0.500157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480732,-99) , 
4, 0.998571, 0, 0, 0.499472,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0137048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497666,-99) , 
0, 0.505437, 1, 0, 0.510693,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, 1, 0.501194,-99) , 
0, 0.5019, 0, 0, 0.502982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481158,-99) , 
4, 0.999977, 0, 0, 0.49891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476143,-99) , 
4, 0.999524, 0, 0, 0.494371,-99) , 
2, -0.0714243, 0, 0, 0.501457,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00878283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491197,-99) , 
0, 0.500358, 1, 0, 0.513805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498729,-99) , 
2, -0.214008, 1, 0, 0.499429,-99) , 
4, 0.999524, 1, 0, 0.500679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502535,-99) , 
NN(
0, 
0, 
-1, 0.490108, 0, -1, 0.483166,-99) , 
7, -0.428673, 1, 0, 0.489632,-99) , 
0, 0.492376, 0, 0, 0.499551,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00775018);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.503234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478499,-99) , 
4, 0.998572, 0, 0, 0.502367,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.00712022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501722,-99) , 
NN(
0, 
0, 
-1, 0.909681, 0, -1, 0.494312,-99) , 
0, 0.495233, 0, 0, 0.499851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478547,-99) , 
3, 8.70229, 1, 0, 0.4989,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0102649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499049,-99) , 
7, 0.428545, 1, 0, 0.506593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491439,-99) , 
8, -1.58038, 0, 0, 0.496525,-99) , 
6, -951.203, 1, 0, 0.502359,-99) , 
NN(
0, 
0, 
-1, 1.00004, 1, -1, 0.495619,-99) , 
0, 0.499995, 0, 0, 0.497885,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.00822986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498198,-99) , 
0, 0.492376, 1, 0, 0.499542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476734,-99) , 
4, 0.99941, 0, 0, 0.498919,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.482642,-99) , 
4, 0.999048, 0, 0, 0.49804,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0104762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.58379, 1, 1, 0.514653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481681,-99) , 
9, -1.9239, 0, 0, 0.491745,-99) , 
9, -1.43321, 0, 0, 0.50606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49601,-99) , 
1, -0.00338451, 0, 0, 0.50079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482311,-99) , 
5, 0.0236916, 1, 0, 0.500049,-99) , 
7, -0.999998, 1, 0, 0.501056,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_4_6_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_4_6_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_4_6_noPCts *ReadBDT_maker_LHC19c2a_4_6_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_4_6_noPCts(theInpVar);
  }
}
