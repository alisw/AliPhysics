#include "LHC19c2a_TMVAClassification_BDT_4_6_noP.class.h"

double ReadBDT_LHC19c2a_4_6_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_4_6_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.416035391540261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.729196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266439,-99) , 
4, 0.999524, 0, 0, 0.675999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368041,-99) , 
9, -2.48566, 1, 0, 0.422802,-99) , 
NN(
0, 
0, 
-1, 0.380763, 1, -1, 0.102104,-99) , 
4, 0.999524, 0, 0, 0.378341,-99) , 
7, -948.87, 0, 0, 0.500483,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.324992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.686722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.790006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418212,-99) , 
10, 4.7016, 0, 0, 0.452184,-99) , 
7, -948.87, 0, 0, 0.548731,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.198831,-99) , 
4, 0.999524, 0, 0, 0.504558,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.227416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023457, 1, 1, 0.649166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.157469,-99) , 
8, -1.85707, 0, 0, 0.486227,-99) , 
7, -948.87, 0, 0, 0.552948,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.222973,-99) , 
4, 0.999524, 0, 0, 0.512562,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.189398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.622858,-99) , 
NN(
0, 
0, 
-1, -1.57139, 0, -1, 0.463911,-99) , 
7, -951.203, 0, 0, 0.528197,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.242721,-99) , 
4, 0.999524, 0, 0, 0.493835,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.229619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.323417,-99) , 
8, -1.61222, 0, 0, 0.55257,-99) , 
NN(
0, 
0, 
-1, 2.23808, 1, -1, 0.25693,-99) , 
8, 1.85712, 1, 0, 0.533667,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.257704,-99) , 
4, 0.999524, 0, 0, 0.501208,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.217073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.74203, 1, 1, 0.673529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.706677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441852,-99) , 
10, 3.97479, 0, 0, 0.474867,-99) , 
9, -2.88184, 1, 0, 0.507641,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.212571,-99) , 
4, 0.999048, 0, 0, 0.486102,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.197099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.9573, 0, 1, 0.566097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378054,-99) , 
9, -3.26577, 1, 0, 0.414773,-99) , 
4, 0.999955, 0, 0, 0.520296,-99) , 
NN(
0, 
0, 
-1, 0.169568, 1, -1, 0.232347,-99) , 
4, 0.999048, 0, 0, 0.499894,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.157163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.21339,-99) , 
8, -2.12925, 0, 0, 0.527725,-99) , 
NN(
0, 
0, 
-1, 2.25171, 1, -1, 0.320044,-99) , 
8, 1.57142, 1, 0, 0.507987,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.244609,-99) , 
4, 0.999048, 0, 0, 0.489737,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.237225);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451071,-99) , 
4, 0.999905, 0, 0, 0.613459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424872,-99) , 
9, -3.23563, 1, 0, 0.472351,-99) , 
5, 0.0240271, 1, 0, 0.550032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314575,-99) , 
9, -1.53111, 1, 0, 0.407169,-99) , 
10, 4.44321, 0, 0, 0.430598,-99) , 
7, -950.098, 0, 0, 0.478959,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.0879188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.199611,-99) , 
8, 2.26528, 1, 0, 0.501469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.220053,-99) , 
8, -2.14286, 0, 0, 0.491013,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.270767,-99) , 
4, 0.999048, 0, 0, 0.47573,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.19969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480195,-99) , 
4, 0.999896, 0, 0, 0.571333,-99) , 
NN(
0, 
0, 
-1, -2.37069, 1, -1, 0.440357,-99) , 
5, 0.307308, 1, 0, 0.534204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33232,-99) , 
9, -1.85129, 1, 0, 0.398028,-99) , 
9, 3.10273, 0, 0, 0.422225,-99) , 
7, -951.256, 0, 0, 0.467705,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.111682);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.84087, 1, 1, 0.643272,-99) , 
NN(
0, 
0, 
-1, -1.28572, 0, -1, 0.452473,-99) , 
9, -3.39856, 1, 0, 0.46858,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.127862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268824,-99) , 
6, 0.0237968, 1, 0, 0.513545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277433,-99) , 
8, 1.97956, 1, 0, 0.499536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543533,-99) , 
NN(
0, 
0, 
-1, -0.444178, 0, -1, 0.263811,-99) , 
7, -951.286, 0, 0, 0.344766,-99) , 
8, -1.28572, 0, 0, 0.479224,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.121703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476443,-99) , 
9, 1.77938, 0, 0, 0.496916,-99) , 
NN(
0, 
0, 
-1, -0.544077, 0, -1, 0.326617,-99) , 
8, -1.5714, 0, 0, 0.482142,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.285811,-99) , 
4, 0.999048, 0, 0, 0.468687,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.120849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.291394, 1, 1, 0.561791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357652,-99) , 
9, -2.51141, 1, 0, 0.451477,-99) , 
5, 0.488075, 1, 0, 0.542046,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.440249,-99) , 
7, -948.87, 0, 0, 0.481874,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0848758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294515,-99) , 
6, 0.0237969, 1, 0, 0.505089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247902,-99) , 
8, -2.14278, 0, 0, 0.496469,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.304877,-99) , 
4, 0.999048, 0, 0, 0.483441,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.132639);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.256, 1, 1, 0.613082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693767,-99) , 
NN(
0, 
0, 
-1, -1.28567, 0, -1, 0.446933,-99) , 
9, -3.71861, 1, 0, 0.460586,-99) , 
9, 2.74363, 0, 0, 0.475427,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.116584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274989,-99) , 
8, 2.18367, 1, 0, 0.518497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311627,-99) , 
7, -951.286, 0, 0, 0.379411,-99) , 
8, -1.28568, 0, 0, 0.500804,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.316553,-99) , 
4, 0.999048, 0, 0, 0.48876,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0829938);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.84085, 1, 1, 0.625227,-99) , 
NN(
0, 
0, 
-1, -1.57137, 0, -1, 0.466432,-99) , 
9, -3.39856, 1, 0, 0.480003,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.124453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307234,-99) , 
6, 0.0237969, 1, 0, 0.522008,-99) , 
NN(
0, 
0, 
-1, 2.3003, 1, -1, 0.395181,-99) , 
8, 1.36734, 1, 0, 0.503742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356232,-99) , 
9, -3.33806, 1, 0, 0.472252,-99) , 
NN(
0, 
0, 
-1, -2.02042, 0, -1, 0.282332,-99) , 
5, -0.536802, 0, 0, 0.378327,-99) , 
8, -1.28571, 0, 0, 0.487955,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.101748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419869,-99) , 
4, 0.999932, 0, 0, 0.495702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.300702,-99) , 
4, 0.998571, 0, 0, 0.48739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25594,-99) , 
8, -2.14286, 0, 0, 0.480101,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0521978);
  fForest.push_back( 
NN(
0, 
0, 
-1, -1.85711, 0, -1, 0.473925,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0998782);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30857,-99) , 
6, 0.0238025, 1, 0, 0.507145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269233,-99) , 
8, 2.23807, 1, 0, 0.498486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287721,-99) , 
7, -951.286, 0, 0, 0.345254,-99) , 
9, -3.47118, 1, 0, 0.400235,-99) , 
8, -1.00001, 0, 0, 0.480581,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.122567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415213,-99) , 
9, -3.7617, 1, 0, 0.492878,-99) , 
10, -0.963908, 0, 0, 0.546187,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.455655,-99) , 
9, -2.7268, 1, 0, 0.47387,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.201362);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430952,-99) , 
6, 0.00565947, 0, 0, 0.50071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32588,-99) , 
6, 0.0237708, 1, 0, 0.493224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309371,-99) , 
4, 0.998571, 0, 0, 0.485482,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.100961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324863,-99) , 
8, 2.23807, 1, 0, 0.51756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378263,-99) , 
9, -3.60433, 1, 0, 0.42346,-99) , 
8, -0.999976, 0, 0, 0.500565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322349,-99) , 
4, 0.998572, 0, 0, 0.493266,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.133496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.256, 1, 1, 0.59899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469795,-99) , 
5, -0.685255, 1, 0, 0.566581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474457,-99) , 
5, 0.043055, 1, 0, 0.510002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361062,-99) , 
7, -951.286, 0, 0, 0.408592,-99) , 
9, -1.29822, 1, 0, 0.471625,-99) , 
10, 2.8818, 0, 0, 0.48568,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.100636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.306169, 1, 1, 0.640112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404351,-99) , 
9, -3.76187, 1, 0, 0.502379,-99) , 
10, -1.16536, 0, 0, 0.561635,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.469592,-99) , 
9, -2.7268, 1, 0, 0.488211,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.172867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00820368, 0, 1, 0.594404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427631,-99) , 
9, -3.57414, 1, 0, 0.439509,-99) , 
6, 0.00453362, 0, 0, 0.505762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341339,-99) , 
6, 0.0238024, 1, 0, 0.498795,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.136703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450023,-99) , 
6, 0.00338918, 0, 0, 0.515162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362112,-99) , 
6, 0.0237272, 1, 0, 0.508853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302167,-99) , 
8, -2.14285, 0, 0, 0.502656,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0789934);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466324,-99) , 
0, 0.500947, 1, 0, 0.512534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36552,-99) , 
8, 2.07479, 1, 0, 0.506467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364491,-99) , 
8, -1.85715, 0, 0, 0.499289,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0705658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434078,-99) , 
9, -3.72963, 1, 0, 0.513063,-99) , 
10, -1.11137, 0, 0, 0.566026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338399,-99) , 
4, 0.999048, 0, 0, 0.491622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276133,-99) , 
8, -1.8571, 0, 0, 0.483116,-99) , 
9, -2.86554, 1, 0, 0.497475,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0802818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459921,-99) , 
9, -3.76736, 1, 0, 0.514713,-99) , 
10, -0.949922, 0, 0, 0.554661,-99) , 
NN(
0, 
0, 
-1, -1.8571, 0, -1, 0.473462,-99) , 
9, -2.73239, 1, 0, 0.489769,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.106396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377812,-99) , 
6, 0.0237968, 1, 0, 0.52189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374254,-99) , 
8, 2.11562, 1, 0, 0.514749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431765,-99) , 
5, 0.342511, 1, 0, 0.528094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357873,-99) , 
7, -951.286, 0, 0, 0.405094,-99) , 
9, -3.21657, 1, 0, 0.442041,-99) , 
8, -0.714295, 0, 0, 0.496585,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0665867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471837,-99) , 
8, -0.269284, 0, 0, 0.516721,-99) , 
5, 0.103954, 1, 0, 0.555268,-99) , 
NN(
0, 
0, 
-1, -1.8571, 0, -1, 0.477564,-99) , 
9, -2.86554, 1, 0, 0.490875,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0495241);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.64532, 0, 1, 0.586271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362381,-99) , 
4, 0.999048, 0, 0, 0.49618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301197,-99) , 
8, -1.8571, 0, 0, 0.488967,-99) , 
9, -3.33543, 1, 0, 0.497894,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0798994);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.56685, 0, 1, 0.577723,-99) , 
NN(
NN(
0, 
0, 
-1, -951.256, 1, 1, 0.579364,-99) , 
NN(
0, 
0, 
-1, -0.714256, 0, -1, 0.470138,-99) , 
9, 2.55748, 0, 0, 0.482803,-99) , 
9, -3.26281, 1, 0, 0.49241,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.074431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.233705, 0, 1, 0.554758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330535,-99) , 
4, 0.999524, 0, 0, 0.489413,-99) , 
9, -1.97491, 1, 0, 0.511928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -1, 0.498948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357047,-99) , 
9, -2.88514, 1, 0, 0.408754,-99) , 
7, -951.286, 0, 0, 0.44078,-99) , 
8, -1, 0, 0, 0.499451,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0617455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495832,-99) , 
10, -1.58626, 0, 0, 0.565466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407932,-99) , 
4, 0.999864, 0, 0, 0.493148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363103,-99) , 
4, 0.999048, 0, 0, 0.48592,-99) , 
9, -3.27169, 1, 0, 0.493871,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0640185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446198,-99) , 
8, -0.701181, 0, 0, 0.509277,-99) , 
5, 0.0965731, 1, 0, 0.545829,-99) , 
NN(
0, 
0, 
-1, -1.85709, 0, -1, 0.479109,-99) , 
9, -2.86554, 1, 0, 0.490507,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0398785);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.58846, 0, 1, 0.565723,-99) , 
NN(
0, 
0, 
-1, -1.85708, 0, -1, 0.485176,-99) , 
9, -3.26541, 1, 0, 0.493253,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0852149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483261,-99) , 
6, 0.00793222, 0, 0, 0.509857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393066,-99) , 
6, 0.0237968, 1, 0, 0.505031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35391,-99) , 
8, -2.14282, 0, 0, 0.500841,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.11133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0974639, 1, 1, 0.559844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439269,-99) , 
5, -0.439158, 1, 0, 0.496219,-99) , 
9, -1.58644, 1, 0, 0.522003,-99) , 
NN(
NN(
0, 
0, 
-1, 1.90935, 0, 1, 0.571852,-99) , 
NN(
0, 
0, 
-1, -1.13229, 1, -1, 0.451328,-99) , 
10, 1.73148, 0, 0, 0.470973,-99) , 
8, -0.428542, 0, 0, 0.505046,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0553991);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.453696, 1, 1, 0.589222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414864,-99) , 
10, -0.920829, 0, 0, 0.502672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344734,-99) , 
8, -1.85711, 0, 0, 0.496948,-99) , 
9, -3.39856, 1, 0, 0.504633,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.105115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473976,-99) , 
9, -3.7296, 1, 0, 0.508667,-99) , 
5, 0.169921, 1, 0, 0.556093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451402,-99) , 
4, 0.999977, 0, 0, 0.498696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275309,-99) , 
7, -951.286, 0, 0, 0.39504,-99) , 
4, 0.999524, 0, 0, 0.489367,-99) , 
9, -2.86554, 1, 0, 0.500815,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.051287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445434,-99) , 
8, -0.898795, 0, 0, 0.513134,-99) , 
5, 0.186265, 1, 0, 0.55353,-99) , 
NN(
0, 
0, 
-1, -1.8571, 0, -1, 0.485775,-99) , 
9, -2.86554, 1, 0, 0.49734,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0875944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.273948, 1, 1, 0.597212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445127,-99) , 
6, 0.00226359, 0, 0, 0.483514,-99) , 
6, 0.00792247, 0, 0, 0.506394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397245,-99) , 
6, 0.0237681, 1, 0, 0.501856,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0636538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478796,-99) , 
9, -3.76736, 1, 0, 0.514209,-99) , 
10, -0.803655, 0, 0, 0.543077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388693,-99) , 
4, 0.999773, 0, 0, 0.497234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.270238,-99) , 
7, -951.286, 0, 0, 0.393857,-99) , 
4, 0.999524, 0, 0, 0.488168,-99) , 
9, -2.73239, 1, 0, 0.499034,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0506574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486016,-99) , 
8, -0.235876, 0, 0, 0.517846,-99) , 
5, 0.00831025, 1, 0, 0.545168,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.483305,-99) , 
9, -2.74869, 1, 0, 0.495268,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0583202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.10314, 1, 1, 0.60972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428529,-99) , 
9, -3.7296, 1, 0, 0.503043,-99) , 
10, -1.28774, 0, 0, 0.550709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410445,-99) , 
10, -0.517138, 0, 0, 0.493883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344507,-99) , 
8, -1.85711, 0, 0, 0.488496,-99) , 
9, -2.86554, 1, 0, 0.499079,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0547036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448806,-99) , 
8, -0.905521, 0, 0, 0.513737,-99) , 
5, 0.169921, 1, 0, 0.549212,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.482388,-99) , 
9, -2.88184, 1, 0, 0.493502,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0428948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.611348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469424,-99) , 
8, -0.47792, 0, 0, 0.503608,-99) , 
5, 0.265772, 1, 0, 0.546466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407215,-99) , 
10, -0.621324, 0, 0, 0.493682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359764,-99) , 
8, -1.8571, 0, 0, 0.488869,-99) , 
9, -2.86554, 1, 0, 0.498617,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0455169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489878,-99) , 
8, -0.193515, 0, 0, 0.516979,-99) , 
5, -0.0141466, 1, 0, 0.539371,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.484204,-99) , 
9, -2.7431, 1, 0, 0.494904,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0445141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28456, 0, 1, 0.598292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471413,-99) , 
9, -3.60731, 1, 0, 0.503559,-99) , 
5, 0.26482, 1, 0, 0.542762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390437,-99) , 
10, -0.610498, 0, 0, 0.494836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35148,-99) , 
8, -1.8571, 0, 0, 0.489804,-99) , 
9, -2.74869, 1, 0, 0.50007,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0890751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.26634, 1, 1, 0.580553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46765,-99) , 
9, -2.74869, 1, 0, 0.481661,-99) , 
6, 0.00793219, 0, 0, 0.501301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398703,-99) , 
6, 0.0237968, 1, 0, 0.497047,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0711434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422976,-99) , 
9, -3.76801, 1, 0, 0.506766,-99) , 
10, -1.47809, 0, 0, 0.563986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497823,-99) , 
5, -0.252184, 1, 0, 0.521953,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.471862,-99) , 
7, -948.87, 0, 0, 0.491961,-99) , 
9, -3.16769, 1, 0, 0.500252,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0478615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.445948, 0, 1, 0.546391,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490037,-99) , 
9, -2.2805, 1, 0, 0.507005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366453,-99) , 
8, -2.14286, 0, 0, 0.503284,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.071754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423372,-99) , 
5, 0.483025, 1, 0, 0.522316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376749,-99) , 
9, -0.410874, 1, 0, 0.475596,-99) , 
4, 0.999932, 0, 0, 0.510335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39888,-99) , 
4, 0.998571, 0, 0, 0.50603,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0604913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00999971, 0, 1, 0.56149,-99) , 
NN(
0, 
0, 
-1, 0.0012903, 0, -1, 0.484174,-99) , 
6, 0.006774, 0, 0, 0.504101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410351,-99) , 
6, 0.02371, 1, 0, 0.500152,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0637707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418876,-99) , 
6, 0.0237968, 1, 0, 0.520859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388321,-99) , 
5, -0.536808, 0, 0, 0.446583,-99) , 
8, -1.57143, 0, 0, 0.515311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449039,-99) , 
9, -1.71138, 1, 0, 0.470349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422087,-99) , 
8, -0.999965, 0, 0, 0.461803,-99) , 
0, 0.5019, 1, 0, 0.504925,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.036618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428054,-99) , 
6, 0.0237969, 1, 0, 0.506864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408213,-99) , 
3, 9.41704, 1, 0, 0.503254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389739,-99) , 
8, -2.14286, 0, 0, 0.500236,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.07098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485249,-99) , 
4, 0.999994, 0, 0, 0.508467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395831,-99) , 
7, -951.286, 0, 0, 0.455815,-99) , 
4, 0.999864, 0, 0, 0.499508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413692,-99) , 
4, 0.998572, 0, 0, 0.496177,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0733017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493633,-99) , 
10, -0.0982591, 0, 0, 0.525297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461808,-99) , 
5, -0.628897, 1, 0, 0.484265,-99) , 
9, -1.76095, 1, 0, 0.501511,-99) , 
NN(
0, 
0, 
-1, -1.50164, 1, -1, 0.440273,-99) , 
8, -1.57144, 0, 0, 0.496839,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.088149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.07321, 1, 1, 0.549339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451451,-99) , 
9, -1.98718, 1, 0, 0.49468,-99) , 
5, -0.0649578, 1, 0, 0.516165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416648,-99) , 
5, -0.545925, 1, 0, 0.511212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368344,-99) , 
7, -951.286, 0, 0, 0.40961,-99) , 
10, 2.15053, 0, 0, 0.474017,-99) , 
9, -0.578566, 1, 0, 0.501821,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0755837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.223535, 1, 1, 0.533394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421146,-99) , 
5, -0.443847, 1, 0, 0.477869,-99) , 
9, -0.953788, 1, 0, 0.508624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463259,-99) , 
5, 0.419213, 1, 0, 0.520375,-99) , 
NN(
0, 
0, 
-1, -0.162936, 1, -1, 0.453742,-99) , 
9, -3.20228, 1, 0, 0.471866,-99) , 
8, -0.428548, 0, 0, 0.496443,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0503443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48764,-99) , 
6, 0.00905428, 0, 0, 0.499396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421907,-99) , 
6, 0.0237681, 1, 0, 0.496173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410236,-99) , 
3, 9.40736, 1, 0, 0.493,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.049905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487527,-99) , 
10, -1.85519, 0, 0, 0.560529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473864,-99) , 
8, -0.142847, 0, 0, 0.497742,-99) , 
9, -3.40484, 1, 0, 0.502873,-99) , 
NN(
0, 
0, 
-1, 0.0289518, 1, -1, 0.44933,-99) , 
0, 0.503804, 1, 0, 0.497493,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0555236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482087,-99) , 
5, -0.162951, 1, 0, 0.506081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319312,-99) , 
5, -0.346325, 0, 0, 0.452019,-99) , 
4, 0.999796, 0, 0, 0.499041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406152,-99) , 
4, 0.998572, 0, 0, 0.495507,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0565568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451747,-99) , 
9, -3.38628, 1, 0, 0.500842,-99) , 
10, -0.745526, 0, 0, 0.525881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40635,-99) , 
4, 0.999796, 0, 0, 0.495504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311239,-99) , 
7, -951.286, 0, 0, 0.415475,-99) , 
4, 0.999524, 0, 0, 0.488652,-99) , 
9, -2.69985, 1, 0, 0.496252,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0620579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474181,-99) , 
9, -3.78911, 1, 0, 0.500813,-99) , 
10, -0.656319, 0, 0, 0.531343,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.489391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308248,-99) , 
7, -951.286, 0, 0, 0.410609,-99) , 
4, 0.999524, 0, 0, 0.482824,-99) , 
9, -2.58409, 1, 0, 0.493937,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0677003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479761,-99) , 
5, 0.395802, 1, 0, 0.521461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422124,-99) , 
10, 2.17122, 0, 0, 0.486369,-99) , 
9, -0.444462, 1, 0, 0.510422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471459,-99) , 
10, -1.12158, 0, 0, 0.515131,-99) , 
NN(
0, 
0, 
-1, 0.308624, 1, -1, 0.469596,-99) , 
9, -2.58409, 1, 0, 0.479769,-99) , 
0, 0.499043, 1, 0, 0.497677,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0469368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.365827, 0, 1, 0.534672,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.485186,-99) , 
9, -2.17535, 1, 0, 0.501359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39477,-99) , 
8, -2.1428, 0, 0, 0.498632,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0415461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494388,-99) , 
10, -0.361558, 0, 0, 0.529847,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490815,-99) , 
9, -2.16987, 1, 0, 0.503604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406719,-99) , 
8, -2.14285, 0, 0, 0.501097,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0647944);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441472,-99) , 
5, 0.575714, 1, 0, 0.51677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395342,-99) , 
7, -951.286, 0, 0, 0.461964,-99) , 
4, 0.999796, 0, 0, 0.509692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420645,-99) , 
4, 0.998571, 0, 0, 0.506345,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.042697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0097221, 0, 1, 0.512525,-99) , 
NN(
0, 
0, 
-1, -0.350411, 1, -1, 0.445202,-99) , 
6, 0.001128, 0, 0, 0.501867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430095,-99) , 
6, 0.0236887, 1, 0, 0.498868,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0414131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490591,-99) , 
9, -2.2805, 1, 0, 0.503175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417924,-99) , 
8, -2.14282, 0, 0, 0.500863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424846,-99) , 
3, 8.85502, 1, 0, 0.497493,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0458489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484038,-99) , 
10, -0.47924, 0, 0, 0.527077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408558,-99) , 
4, 0.999524, 0, 0, 0.493193,-99) , 
9, -2.20012, 1, 0, 0.503196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503855,-99) , 
NN(
0, 
0, 
-1, -1.48654, 1, -1, 0.426939,-99) , 
7, -951.286, 0, 0, 0.453258,-99) , 
8, -1.28572, 0, 0, 0.497456,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0358013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490371,-99) , 
9, -2.2805, 1, 0, 0.500357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420915,-99) , 
8, -2.14286, 0, 0, 0.498273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420825,-99) , 
3, 9.39852, 1, 0, 0.495477,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0476219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473126,-99) , 
6, 0.00226689, 0, 0, 0.503182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437136,-99) , 
6, 0.0238024, 1, 0, 0.500446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427186,-99) , 
3, 9.41652, 1, 0, 0.497737,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0596873);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485309,-99) , 
10, -0.0248181, 0, 0, 0.510752,-99) , 
NN(
0, 
0, 
-1, 0.269285, 0, -1, 0.475939,-99) , 
9, -1.75563, 1, 0, 0.49152,-99) , 
5, -0.906714, 1, 0, 0.49416,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0442284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490284,-99) , 
10, -1.57657, 0, 0, 0.546343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480953,-99) , 
10, 0.149843, 0, 0, 0.503108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413251,-99) , 
4, 0.998571, 0, 0, 0.500165,-99) , 
9, -3.25982, 1, 0, 0.504741,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0346378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489405,-99) , 
10, -1.71479, 0, 0, 0.552956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452931,-99) , 
4, 0.999796, 0, 0, 0.498534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414999,-99) , 
4, 0.998572, 0, 0, 0.4958,-99) , 
9, -3.29181, 1, 0, 0.50126,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0453145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431739,-99) , 
9, -3.11451, 1, 0, 0.501349,-99) , 
10, -0.698013, 0, 0, 0.526768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440226,-99) , 
4, 0.999819, 0, 0, 0.49372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405835,-99) , 
4, 0.999048, 0, 0, 0.489725,-99) , 
9, -2.6004, 1, 0, 0.4981,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0482692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494768,-99) , 
10, -0.325098, 0, 0, 0.525156,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.483001,-99) , 
9, -2.15653, 1, 0, 0.496904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412546,-99) , 
8, -2.14281, 0, 0, 0.49473,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0554429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488654,-99) , 
4, 0.999524, 1, 0, 0.509651,-99) , 
5, 0.081654, 1, 0, 0.53404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363898,-99) , 
4, 0.999714, 0, 0, 0.505131,-99) , 
NN(
0, 
0, 
-1, -0.338667, 0, -1, 0.479254,-99) , 
5, -0.252964, 1, 0, 0.493927,-99) , 
9, -2.86554, 1, 0, 0.500641,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0562653);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57426, 0, 1, 0.551555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459585,-99) , 
10, -0.513649, 0, 0, 0.505134,-99) , 
NN(
0, 
0, 
-1, 2.24151, 0, -1, 0.473849,-99) , 
9, -0.323103, 1, 0, 0.494507,-99) , 
9, -3.26541, 1, 0, 0.500139,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468225,-99) , 
9, -3.5599, 1, 0, 0.503478,-99) , 
10, -0.800432, 0, 0, 0.528809,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.490185,-99) , 
9, -2.6978, 1, 0, 0.497988,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0469621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.445948, 0, 1, 0.530473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482831,-99) , 
9, 1.14789, 0, 0, 0.492003,-99) , 
9, -2.2805, 1, 0, 0.503418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41699,-99) , 
8, -2.14279, 0, 0, 0.501189,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.03368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.72386, 0, 1, 0.557943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452497,-99) , 
8, -1.28573, 0, 0, 0.498035,-99) , 
6, 0.0101783, 0, 0, 0.505349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434195,-99) , 
6, 0.0237494, 1, 0, 0.502445,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0387074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485742,-99) , 
10, -1.85519, 0, 0, 0.548993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486955,-99) , 
8, 0.142864, 0, 0, 0.501023,-99) , 
9, -3.40484, 1, 0, 0.504844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444876,-99) , 
3, 8.8365, 1, 0, 0.502182,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.033593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0408669, 1, 1, 0.546961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463931,-99) , 
6, 0.00129507, 0, 0, 0.493345,-99) , 
6, 0.0090654, 0, 0, 0.501657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435641,-99) , 
6, 0.0237968, 1, 0, 0.498959,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0347357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456359,-99) , 
8, -1.3889, 0, 0, 0.481253,-99) , 
10, -1.51222, 0, 0, 0.535031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437689,-99) , 
4, 0.999733, 0, 0, 0.495645,-99) , 
NN(
0, 
0, 
-1, 0.379509, 0, -1, 0.46136,-99) , 
5, 0.400686, 1, 0, 0.491056,-99) , 
9, -3.16769, 1, 0, 0.496108,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.024318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499128,-99) , 
5, 0.00565001, 1, 0, 0.521635,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.493503,-99) , 
9, -2.73239, 1, 0, 0.49897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434679,-99) , 
3, 8.85165, 1, 0, 0.496146,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0438805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432234,-99) , 
9, -3.74319, 1, 0, 0.498066,-99) , 
10, -1.33714, 0, 0, 0.539299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484105,-99) , 
0, 0.49809, 1, 0, 0.495579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442281,-99) , 
3, 8.6352, 1, 0, 0.493028,-99) , 
9, -3.15698, 1, 0, 0.498337,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0438998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425052,-99) , 
9, -3.76796, 1, 0, 0.495223,-99) , 
10, -1.46742, 0, 0, 0.538314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499147,-99) , 
4, 0.999524, 1, 0, 0.510733,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.483754,-99) , 
7, -951.256, 0, 0, 0.494714,-99) , 
9, -3.16769, 1, 0, 0.499637,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0466212);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492524,-99) , 
9, -1.46735, 1, 0, 0.510578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462938,-99) , 
10, 1.30467, 0, 0, 0.481176,-99) , 
8, -1.04079, 0, 0, 0.505612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444084,-99) , 
8, 2.14284, 1, 0, 0.503592,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0440084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.07596, 1, 1, 0.517853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48296,-99) , 
4, 0.999524, 1, 0, 0.496092,-99) , 
5, -0.0672643, 1, 0, 0.50891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441441,-99) , 
3, 9.41652, 1, 0, 0.506496,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0337202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482747,-99) , 
10, -1.55263, 0, 0, 0.534944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452263,-99) , 
10, -0.760341, 0, 0, 0.501751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454134,-99) , 
8, -1.57139, 0, 0, 0.499161,-99) , 
9, -3.20228, 1, 0, 0.50303,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0470946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49098,-99) , 
9, -3.84625, 1, 0, 0.539582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484773,-99) , 
10, 0.145841, 0, 0, 0.505114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435313,-99) , 
10, 2.09274, 0, 0, 0.480761,-99) , 
9, -0.462219, 1, 0, 0.496502,-99) , 
9, -3.40484, 1, 0, 0.499949,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0357984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.381895, 1, 1, 0.578365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432618,-99) , 
9, -3.72961, 1, 0, 0.489119,-99) , 
10, -1.30741, 0, 0, 0.529463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465646,-99) , 
4, 0.999819, 0, 0, 0.497422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431967,-99) , 
4, 0.999048, 0, 0, 0.494278,-99) , 
9, -2.86554, 1, 0, 0.500211,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0424845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487295,-99) , 
10, -0.624687, 0, 0, 0.509507,-99) , 
5, -0.103464, 1, 0, 0.530216,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.487116,-99) , 
9, -2.5411, 1, 0, 0.497373,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0364228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.306169, 1, 1, 0.573947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441402,-99) , 
9, -3.77902, 1, 0, 0.48871,-99) , 
10, -1.22982, 0, 0, 0.527682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473253,-99) , 
4, 0.999864, 0, 0, 0.497261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441892,-99) , 
4, 0.999048, 0, 0, 0.494671,-99) , 
9, -2.74869, 1, 0, 0.500957,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0364765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490034,-99) , 
8, -0.0898418, 0, 0, 0.51033,-99) , 
5, -0.00661321, 1, 0, 0.531083,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.488757,-99) , 
9, -2.61768, 1, 0, 0.498071,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.027742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.16894, 0, 1, 0.576214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475687,-99) , 
4, 0.999524, 1, 0, 0.495179,-99) , 
5, 0.269258, 1, 0, 0.528947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448604,-99) , 
8, -1.85715, 0, 0, 0.499303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45507,-99) , 
3, 8.48372, 1, 0, 0.497129,-99) , 
9, -2.7268, 1, 0, 0.503333,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0499665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498237,-99) , 
10, -1.85519, 0, 0, 0.550875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450243,-99) , 
9, -1.0227, 1, 0, 0.506274,-99) , 
NN(
0, 
0, 
-1, 2.17909, 0, -1, 0.475448,-99) , 
9, -0.462185, 1, 0, 0.495318,-99) , 
9, -3.40484, 1, 0, 0.499777,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0298898);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.53303, 0, 1, 0.544719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45223,-99) , 
8, 2.14286, 1, 0, 0.500998,-99) , 
NN(
0, 
0, 
-1, -2.04349, 1, -1, 0.476607,-99) , 
10, 0.0547416, 0, 0, 0.493463,-99) , 
9, -3.21657, 1, 0, 0.498816,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0525659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492099,-99) , 
9, -3.86829, 1, 0, 0.545504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485703,-99) , 
5, -0.162368, 1, 0, 0.502534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461843,-99) , 
9, 2.26677, 0, 0, 0.479664,-99) , 
9, -0.512408, 1, 0, 0.494307,-99) , 
9, -3.43055, 1, 0, 0.49819,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0397663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463508,-99) , 
8, -0.817243, 0, 0, 0.507834,-99) , 
5, -0.00661321, 1, 0, 0.527173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482774,-99) , 
10, 0.658001, 0, 0, 0.49604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43665,-99) , 
4, 0.999048, 0, 0, 0.493346,-99) , 
9, -2.68355, 1, 0, 0.50027,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0360482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458096,-99) , 
8, -1.06199, 0, 0, 0.50867,-99) , 
5, -0.0139445, 1, 0, 0.525882,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491583,-99) , 
5, -0.907298, 1, 0, 0.493262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447011,-99) , 
4, 0.999048, 0, 0, 0.49112,-99) , 
9, -2.7268, 1, 0, 0.497914,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0381376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495422,-99) , 
9, 0.226242, 1, 0, 0.541999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49032,-99) , 
9, -2.86554, 1, 0, 0.496577,-99) , 
6, 0.00906689, 0, 0, 0.503599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44568,-99) , 
6, 0.0238024, 1, 0, 0.501194,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0612437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.625427, 0, 1, 0.524137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424191,-99) , 
10, 0.941742, 0, 0, 0.4743,-99) , 
9, -1.24195, 1, 0, 0.513399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473753,-99) , 
8, -0.428239, 1, 0, 0.496454,-99) , 
NN(
0, 
0, 
-1, -0.714495, 0, -1, 0.453854,-99) , 
10, 2.24541, 0, 0, 0.482311,-99) , 
9, -0.366509, 1, 0, 0.503689,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0330485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493362,-99) , 
10, -1.11976, 0, 0, 0.544543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435866,-99) , 
4, 0.999198, 0, 0, 0.49942,-99) , 
9, -2.68355, 1, 0, 0.50565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478073,-99) , 
9, -1.92701, 1, 0, 0.511275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423529,-99) , 
9, -3.4886, 1, 0, 0.454627,-99) , 
8, 0.430677, 0, 0, 0.478254,-99) , 
5, 0.403097, 1, 0, 0.500887,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0374976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495895,-99) , 
5, -0.722, 0, 0, 0.540441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484217,-99) , 
7, -950.098, 0, 0, 0.494736,-99) , 
6, 0.0090654, 0, 0, 0.501788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450939,-99) , 
6, 0.0237968, 1, 0, 0.499683,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0123935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499665,-99) , 
9, -3.30205, 1, 0, 0.502416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461869,-99) , 
3, 8.73182, 1, 0, 0.500557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454701,-99) , 
0, 0.505709, 1, 0, 0.498794,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.03671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498581,-99) , 
5, -0.724266, 0, 0, 0.540704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474744,-99) , 
9, -0.793501, 1, 0, 0.495272,-99) , 
6, 0.0090553, 0, 0, 0.502391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441688,-99) , 
6, 0.0237708, 1, 0, 0.499947,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0497079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386273,-99) , 
4, 0.999714, 0, 0, 0.498462,-99) , 
9, -1.79608, 1, 0, 0.509367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489842,-99) , 
10, 0.690687, 0, 0, 0.499933,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.446682,-99) , 
9, -1.26432, 1, 0, 0.490008,-99) , 
5, -0.347078, 1, 0, 0.498141,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0383221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491663,-99) , 
10, -0.368613, 0, 0, 0.522482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47879,-99) , 
5, -0.345681, 1, 0, 0.492521,-99) , 
9, -2.17284, 1, 0, 0.502154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447125,-99) , 
8, -2.1428, 0, 0, 0.500741,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.053533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479328,-99) , 
4, 0.999524, 1, 0, 0.494628,-99) , 
5, 0.163743, 1, 0, 0.520223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451027,-99) , 
10, 3.83922, 1, 0, 0.504358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473942,-99) , 
10, 2.95564, 0, 0, 0.484975,-99) , 
8, 0.142852, 0, 0, 0.495862,-99) , 
9, -2.69985, 1, 0, 0.500715,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0405475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139178, 1, 1, 0.522274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413003,-99) , 
10, 0.474206, 0, 0, 0.486862,-99) , 
9, -1.77249, 1, 0, 0.503167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422561,-99) , 
5, -0.897612, 1, 0, 0.469067,-99) , 
10, 4.57173, 1, 0, 0.500323,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0344371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458076,-99) , 
9, -3.8113, 1, 0, 0.50296,-99) , 
10, -1.22781, 0, 0, 0.534195,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.490556,-99) , 
9, -3.07791, 1, 0, 0.496102,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0267283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.382069, 1, 1, 0.563143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438467,-99) , 
9, -3.74203, 1, 0, 0.486646,-99) , 
10, -1.29849, 0, 0, 0.519899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460369,-99) , 
10, -0.621324, 0, 0, 0.497753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456884,-99) , 
8, -1.8571, 0, 0, 0.496415,-99) , 
9, -2.88184, 1, 0, 0.500269,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0322335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0839493, 1, 1, 0.535572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470352,-99) , 
9, -0.587569, 1, 0, 0.49318,-99) , 
6, 0.00905543, 0, 0, 0.499738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451144,-99) , 
6, 0.0237708, 1, 0, 0.49774,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0223412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478801,-99) , 
10, -1.74724, 0, 0, 0.528954,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.492719,-99) , 
9, -3.33104, 1, 0, 0.495921,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0286889);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499686,-99) , 
10, -1.13071, 0, 0, 0.543929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435629,-99) , 
4, 0.999306, 0, 0, 0.498332,-99) , 
9, -2.68355, 1, 0, 0.504491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535071,-99) , 
NN(
0, 
0, 
-1, 0.66186, 1, -1, 0.460881,-99) , 
4, 0.999524, 1, 0, 0.480918,-99) , 
5, 0.396389, 1, 0, 0.500342,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0263075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.991151, 0, 1, 0.539096,-99) , 
NN(
0, 
0, 
-1, 0.999158, 0, -1, 0.495065,-99) , 
9, -2.7431, 1, 0, 0.501307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511866,-99) , 
NN(
0, 
0, 
-1, 0.67353, 1, -1, 0.453865,-99) , 
4, 0.999524, 1, 0, 0.471546,-99) , 
5, 0.496631, 1, 0, 0.497433,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0182708);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454858,-99) , 
7, -951.286, 0, 0, 0.535265,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.497755,-99) , 
4, 0.999524, 1, 0, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44558,-99) , 
4, 0.998572, 0, 0, 0.498114,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0241779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485954,-99) , 
10, -1.64507, 0, 0, 0.528639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488481,-99) , 
9, -0.456867, 1, 0, 0.499293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456798,-99) , 
0, 0.505709, 1, 0, 0.497656,-99) , 
9, -3.33104, 1, 0, 0.500395,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0164759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.2661, 1, 1, 0.504328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43202,-99) , 
4, 0.999932, 1, 0, 0.471172,-99) , 
5, 0.587444, 1, 0, 0.501841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445187,-99) , 
4, 0.998572, 0, 0, 0.499758,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0268495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497563,-99) , 
10, -1.06598, 0, 0, 0.536258,-99) , 
NN(
0, 
0, 
-1, -1.8571, 0, -1, 0.49578,-99) , 
9, -2.68355, 1, 0, 0.502008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480536,-99) , 
9, -2.0292, 1, 0, 0.506146,-99) , 
NN(
0, 
0, 
-1, 0.652537, 1, -1, 0.45197,-99) , 
8, 0.42923, 0, 0, 0.474973,-99) , 
5, 0.496631, 1, 0, 0.498444,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0324909);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487298,-99) , 
10, -1.65137, 0, 0, 0.547242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487015,-99) , 
10, 0.303906, 0, 0, 0.500569,-99) , 
9, -3.21657, 1, 0, 0.504346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510566,-99) , 
NN(
0, 
0, 
-1, 0.429562, 0, -1, 0.444397,-99) , 
4, 0.999524, 1, 0, 0.467374,-99) , 
5, 0.58257, 1, 0, 0.500877,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0209379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.16536, 0, 1, 0.532492,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497231,-99) , 
9, -2.7268, 1, 0, 0.502888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515803,-99) , 
NN(
0, 
0, 
-1, 0.430662, 0, -1, 0.449712,-99) , 
4, 0.999524, 1, 0, 0.472637,-99) , 
5, 0.582572, 1, 0, 0.50001,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0227991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.52622, 1, 1, 0.544197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460008,-99) , 
6, 0.000485131, 0, 0, 0.49941,-99) , 
6, 0.0101873, 0, 0, 0.504876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461381,-99) , 
6, 0.0237708, 1, 0, 0.503094,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0403112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465349,-99) , 
9, -3.44483, 1, 0, 0.496434,-99) , 
10, -0.67375, 0, 0, 0.516248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486089,-99) , 
5, -0.439723, 1, 0, 0.494822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451051,-99) , 
4, 0.999048, 0, 0, 0.492877,-99) , 
9, -2.58409, 1, 0, 0.498193,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.049137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.697561, 0, 1, 0.519348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423896,-99) , 
10, 1.05143, 0, 0, 0.469559,-99) , 
9, -1.17543, 1, 0, 0.509122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466293,-99) , 
7, -951.256, 1, 0, 0.504381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458263,-99) , 
7, -948.87, 0, 0, 0.473554,-99) , 
5, -0.725744, 1, 0, 0.487389,-99) , 
9, -0.313172, 1, 0, 0.502515,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0239307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445811,-99) , 
7, -951.286, 0, 0, 0.52476,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.494512,-99) , 
4, 0.999524, 1, 0, 0.496426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447624,-99) , 
4, 0.998571, 0, 0, 0.494604,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.020568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441759,-99) , 
4, 0.999198, 0, 0, 0.499167,-99) , 
9, -3.19669, 1, 0, 0.502546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510731,-99) , 
NN(
0, 
0, 
-1, 0.149489, 0, -1, 0.465287,-99) , 
4, 0.999524, 1, 0, 0.477322,-99) , 
5, 0.403092, 1, 0, 0.498167,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.015413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494721,-99) , 
3, 4.15692, 1, 0, 0.51824,-99) , 
NN(
0, 
0, 
-1, 0.674733, 1, -1, 0.497198,-99) , 
2, -0.0703917, 1, 0, 0.500861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456591,-99) , 
4, 0.998571, 0, 0, 0.499206,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0283276);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48137,-99) , 
7, -951.286, 1, 0, 0.52901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491516,-99) , 
8, 0.42857, 0, 0, 0.499483,-99) , 
9, -3.33543, 1, 0, 0.50193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454934,-99) , 
4, 0.998572, 0, 0, 0.500173,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0211662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485797,-99) , 
10, -0.177132, 0, 0, 0.499052,-99) , 
9, -3.46978, 1, 0, 0.501736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468722,-99) , 
5, 0.121687, 1, 0, 0.491447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458643,-99) , 
8, -0.428916, 0, 0, 0.480633,-99) , 
0, 0.502852, 1, 0, 0.498733,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0476699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.758211, 0, 1, 0.513918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463428,-99) , 
9, 1.35249, 0, 0, 0.480187,-99) , 
9, -1.07977, 1, 0, 0.501127,-99) , 
NN(
0, 
0, 
-1, 0.440103, 1, -1, 0.468711,-99) , 
10, 4.59922, 1, 0, 0.498411,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0390205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421656,-99) , 
4, 0.999714, 0, 0, 0.496486,-99) , 
9, -2.33534, 1, 0, 0.505553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472352,-99) , 
9, -2.30887, 1, 0, 0.491257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434825,-99) , 
8, -1.28529, 0, 0, 0.486435,-99) , 
5, -0.158737, 1, 0, 0.496661,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0453995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497047,-99) , 
9, -2.36911, 1, 0, 0.514825,-99) , 
NN(
0, 
0, 
-1, 2.05728, 0, -1, 0.48199,-99) , 
9, -0.640865, 1, 0, 0.500674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524933,-99) , 
NN(
0, 
0, 
-1, -1.36923, 0, -1, 0.453567,-99) , 
9, -3.66721, 1, 0, 0.473841,-99) , 
10, -0.812095, 0, 0, 0.49584,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0305587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482829,-99) , 
10, 4.07897, 1, 0, 0.505435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450054,-99) , 
9, -3.04994, 1, 0, 0.484249,-99) , 
10, -0.60248, 0, 0, 0.500834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444702,-99) , 
4, 0.998571, 0, 0, 0.498771,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0434003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485291,-99) , 
9, -0.836755, 1, 0, 0.501534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453946,-99) , 
9, -3.83575, 1, 0, 0.4779,-99) , 
10, -0.936476, 0, 0, 0.497851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449906,-99) , 
3, 8.70229, 1, 0, 0.495588,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0343513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461132,-99) , 
4, 0.999714, 0, 0, 0.500176,-99) , 
9, -3.04131, 1, 0, 0.503923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470533,-99) , 
4, 0.998617, 0, 0, 0.521136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459819,-99) , 
8, 1.0014, 0, 0, 0.470969,-99) , 
4, 0.999524, 1, 0, 0.481354,-99) , 
5, 0.212562, 1, 0, 0.497895,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0252553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475207,-99) , 
10, -1.35433, 0, 0, 0.518433,-99) , 
NN(
0, 
0, 
-1, 5.93937, 1, -1, 0.495197,-99) , 
9, -2.7431, 1, 0, 0.498817,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.465525,-99) , 
5, 0.590172, 1, 0, 0.495791,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0294981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438988,-99) , 
4, 0.999333, 0, 0, 0.499162,-99) , 
9, -2.81451, 1, 0, 0.503034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476237,-99) , 
9, -2.0292, 1, 0, 0.50426,-99) , 
NN(
0, 
0, 
-1, -3.06043, 1, -1, 0.463421,-99) , 
8, 0.428811, 0, 0, 0.480412,-99) , 
5, 0.215152, 1, 0, 0.497006,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0396769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448379,-99) , 
7, -951.286, 0, 0, 0.520944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479706,-99) , 
5, -0.159582, 1, 0, 0.4951,-99) , 
4, 0.999524, 1, 0, 0.497633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451815,-99) , 
3, 9.39852, 1, 0, 0.495989,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0331386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454355,-99) , 
7, -951.286, 0, 0, 0.520653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482449,-99) , 
5, -0.255673, 1, 0, 0.492497,-99) , 
4, 0.999524, 1, 0, 0.495265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456331,-99) , 
3, 9.39852, 1, 0, 0.493855,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0243911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486676,-99) , 
7, -951.286, 1, 0, 0.528915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494465,-99) , 
5, -0.906615, 1, 0, 0.495964,-99) , 
9, -3.2661, 1, 0, 0.499178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506272,-99) , 
NN(
0, 
0, 
-1, -0.0645066, 1, -1, 0.461342,-99) , 
2, 0.0722493, 0, 0, 0.472732,-99) , 
0, 0.503804, 1, 0, 0.49655,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0289728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480558,-99) , 
10, -1.64532, 0, 0, 0.525937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493358,-99) , 
8, 0.142894, 0, 0, 0.501172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478681,-99) , 
2, 0.0728003, 0, 0, 0.484054,-99) , 
0, 0.499995, 1, 0, 0.495434,-99) , 
9, -3.33543, 1, 0, 0.49811,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0142077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492289,-99) , 
10, -1.51883, 0, 0, 0.526771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462093,-99) , 
8, -1.8571, 0, 0, 0.49941,-99) , 
9, -3.21657, 1, 0, 0.50226,-99) , 
NN(
0, 
0, 
-1, -1.09904, 1, -1, 0.469404,-99) , 
0, 0.504757, 1, 0, 0.500098,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0271299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495303,-99) , 
5, -0.724258, 0, 0, 0.542636,-99) , 
NN(
0, 
0, 
-1, 0.00194256, 0, -1, 0.492073,-99) , 
6, 0.0101985, 0, 0, 0.498193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461314,-99) , 
6, 0.0237968, 1, 0, 0.49666,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0447505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.186925, 1, 1, 0.542285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446924,-99) , 
9, -3.74394, 1, 0, 0.486234,-99) , 
10, -1.29235, 0, 0, 0.51486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460844,-99) , 
10, 5.19315, 1, 0, 0.501981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472134,-99) , 
10, 2.84512, 0, 0, 0.487066,-99) , 
8, -0.14287, 0, 0, 0.496992,-99) , 
9, -2.71411, 1, 0, 0.500505,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0184309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492074,-99) , 
5, 0.346456, 1, 0, 0.518838,-99) , 
NN(
0, 
0, 
-1, 0.490199, 0, -1, 0.495912,-99) , 
9, -2.86554, 1, 0, 0.499708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458675,-99) , 
0, 0.505709, 1, 0, 0.498109,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0237464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0478883, 1, 1, 0.534481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480985,-99) , 
6, 0.00145728, 0, 0, 0.498837,-99) , 
6, 0.0102009, 0, 0, 0.503148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467261,-99) , 
6, 0.0238024, 1, 0, 0.501675,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0386502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482471,-99) , 
7, -951.286, 1, 0, 0.521705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483374,-99) , 
9, -1.83399, 1, 0, 0.494471,-99) , 
5, -0.906955, 1, 0, 0.495984,-99) , 
9, -3.20228, 1, 0, 0.498726,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0274694);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489142,-99) , 
10, -1.63828, 0, 0, 0.549855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487206,-99) , 
10, 0.131002, 0, 0, 0.499824,-99) , 
9, -3.15344, 1, 0, 0.504356,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.47146,-99) , 
5, 0.59017, 1, 0, 0.501383,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0244459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491339,-99) , 
7, -951.286, 1, 0, 0.532774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484877,-99) , 
3, 4.25099, 1, 0, 0.507767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484734,-99) , 
2, -0.00315764, 1, 0, 0.493447,-99) , 
2, 0.0716557, 0, 0, 0.496053,-99) , 
9, -3.33543, 1, 0, 0.499254,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0333776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494057,-99) , 
5, -0.083234, 1, 0, 0.504625,-99) , 
10, -0.603601, 0, 0, 0.520222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496695,-99) , 
8, -1.28537, 1, 0, 0.500361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434091,-99) , 
9, -1.45573, 1, 0, 0.485206,-99) , 
10, 0.906082, 0, 0, 0.493567,-99) , 
9, -2.5411, 1, 0, 0.499854,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0422488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.25606, 0, 1, 0.532774,-99) , 
NN(
0, 
0, 
-1, 0.257402, 1, -1, 0.481362,-99) , 
9, -3.07738, 1, 0, 0.515339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49798,-99) , 
5, -0.721162, 1, 0, 0.502655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443361,-99) , 
9, -1.98222, 1, 0, 0.487446,-99) , 
10, 0.645232, 0, 0, 0.496448,-99) , 
9, -2.73239, 1, 0, 0.500078,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0321311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476748,-99) , 
10, -1.65242, 0, 0, 0.523756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486243,-99) , 
10, 4.28908, 1, 0, 0.503647,-99) , 
NN(
0, 
0, 
-1, -1.96927, 1, -1, 0.479924,-99) , 
10, 0.227165, 0, 0, 0.495363,-99) , 
9, -3.16769, 1, 0, 0.498553,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0334004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465071,-99) , 
9, -3.55679, 1, 0, 0.501903,-99) , 
10, -1.0903, 0, 0, 0.519395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493341,-99) , 
2, 0.0707248, 0, 0, 0.498398,-99) , 
NN(
0, 
0, 
-1, -0.0712068, 0, -1, 0.482917,-99) , 
3, 4.4052, 1, 0, 0.495089,-99) , 
9, -2.86554, 1, 0, 0.499129,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0303329);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488723,-99) , 
9, -0.26634, 1, 0, 0.52336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495115,-99) , 
9, 2.29604, 0, 0, 0.498915,-99) , 
6, 0.0068006, 0, 0, 0.505124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466068,-99) , 
6, 0.0238024, 1, 0, 0.503543,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0183929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999523, 1, 1, 0.535262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476425,-99) , 
2, -0.207506, 0, 0, 0.497788,-99) , 
3, 4.5204, 1, 0, 0.520833,-99) , 
NN(
NN(
0, 
0, 
-1, -3.60467, 1, 1, 0.503565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456188,-99) , 
0, 0.505709, 1, 0, 0.501973,-99) , 
2, -0.0714552, 1, 0, 0.505406,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0156959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498907,-99) , 
0, 0.49636, 1, 0, 0.503767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471408,-99) , 
0, 0.490063, 0, 0, 0.50237,-99) , 
NN(
0, 
0, 
-1, -0.158099, 1, -1, 0.468552,-99) , 
0, 0.504757, 1, 0, 0.500191,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0237568);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494672,-99) , 
10, -1.60489, 0, 0, 0.544182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494325,-99) , 
5, -0.319667, 1, 0, 0.501887,-99) , 
9, -3.15344, 1, 0, 0.505655,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.479612,-99) , 
5, 0.587444, 1, 0, 0.503289,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0216031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49425,-99) , 
7, -951.286, 1, 0, 0.527984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471591,-99) , 
10, -0.715377, 0, 0, 0.501027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467656,-99) , 
8, -1.5714, 0, 0, 0.499273,-99) , 
9, -3.20228, 1, 0, 0.502317,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0369944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480823,-99) , 
10, -1.69167, 0, 0, 0.523514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487312,-99) , 
3, 4.3959, 1, 0, 0.503329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420216,-99) , 
9, -1.94337, 1, 0, 0.490306,-99) , 
10, 0.326463, 0, 0, 0.498367,-99) , 
9, -3.20228, 1, 0, 0.501,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0268594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468665,-99) , 
9, -3.54546, 1, 0, 0.498101,-99) , 
10, -0.920954, 0, 0, 0.516865,-99) , 
NN(
0, 
0, 
-1, -1.85711, 0, -1, 0.493916,-99) , 
9, -2.68355, 1, 0, 0.498556,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0367674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.698878, 0, 1, 0.515694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439781,-99) , 
10, 1.13636, 0, 0, 0.488114,-99) , 
9, -1.27149, 1, 0, 0.504235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437713,-99) , 
5, -0.859216, 1, 0, 0.478473,-99) , 
10, 4.34157, 1, 0, 0.501909,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0301751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457004,-99) , 
9, -3.76793, 1, 0, 0.495407,-99) , 
10, -1.45973, 0, 0, 0.521335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490093,-99) , 
9, 0.131553, 1, 0, 0.500727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43489,-99) , 
9, -2.17178, 1, 0, 0.483029,-99) , 
10, 0.0474718, 0, 0, 0.495424,-99) , 
9, -3.16769, 1, 0, 0.498298,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0220217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484601,-99) , 
9, -3.84624, 1, 0, 0.526003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497015,-99) , 
5, -0.81305, 1, 0, 0.499862,-99) , 
NN(
0, 
0, 
-1, -2.20683, 1, -1, 0.484106,-99) , 
10, -0.0180293, 0, 0, 0.495022,-99) , 
9, -3.40484, 1, 0, 0.497435,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0228482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493872,-99) , 
10, -1.16183, 0, 0, 0.520155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494806,-99) , 
2, -0.0712558, 1, 0, 0.498042,-99) , 
9, -2.69985, 1, 0, 0.501979,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.467419,-99) , 
5, 0.682512, 1, 0, 0.500086,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0121917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499682,-99) , 
6, 0.0101873, 0, 0, 0.503468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471511,-99) , 
6, 0.0237708, 1, 0, 0.502164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466254,-99) , 
4, 0.998572, 0, 0, 0.500824,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0205939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47105,-99) , 
7, -951.286, 0, 0, 0.533739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448285,-99) , 
4, 0.999751, 0, 0, 0.500227,-99) , 
4, 0.999524, 1, 0, 0.502355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46007,-99) , 
4, 0.998572, 0, 0, 0.50081,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0242217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.935902, 0, 1, 0.525329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488312,-99) , 
10, 0.610127, 0, 0, 0.499087,-99) , 
9, -2.68355, 1, 0, 0.503492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463522,-99) , 
4, 0.999524, 1, 0, 0.478858,-99) , 
5, 0.59017, 1, 0, 0.501253,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.032343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472509,-99) , 
9, -1.11356, 1, 0, 0.50654,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.490769,-99) , 
9, -0.240012, 1, 0, 0.501698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458197,-99) , 
4, 0.998571, 0, 0, 0.500127,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0470971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.782382, 0, 1, 0.59077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476579,-99) , 
10, 1.47547, 0, 0, 0.493387,-99) , 
9, -2.07596, 1, 0, 0.505688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488503,-99) , 
7, -951.286, 0, 0, 0.538702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46969,-99) , 
8, 0.428795, 0, 0, 0.484005,-99) , 
4, 0.999524, 1, 0, 0.492876,-99) , 
5, -0.0672597, 1, 0, 0.500382,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0377376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483978,-99) , 
10, -1.89278, 0, 0, 0.532734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478645,-99) , 
10, -0.392693, 0, 0, 0.503557,-99) , 
NN(
0, 
0, 
-1, -0.632404, 1, -1, 0.48565,-99) , 
9, -0.512395, 1, 0, 0.497111,-99) , 
9, -3.43055, 1, 0, 0.499799,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0262433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462017,-99) , 
7, -951.286, 1, 0, 0.493051,-99) , 
10, -1.44069, 0, 0, 0.525196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465208,-99) , 
0, 0.490471, 0, 0, 0.50019,-99) , 
NN(
0, 
0, 
-1, -1.98377, 1, -1, 0.482645,-99) , 
10, 0.137401, 0, 0, 0.494538,-99) , 
9, -3.15344, 1, 0, 0.498014,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0154136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00250505, 1, 1, 0.516587,-99) , 
NN(
0, 
0, 
-1, -0.770307, 0, -1, 0.49588,-99) , 
9, -2.73239, 1, 0, 0.499875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452593,-99) , 
0, 0.489519, 0, 0, 0.498509,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0322905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474693,-99) , 
10, 3.19421, 1, 0, 0.519711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49181,-99) , 
9, 1.98714, 0, 0, 0.495244,-99) , 
6, 0.00679148, 0, 0, 0.501516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470233,-99) , 
6, 0.0237708, 1, 0, 0.500227,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0230108);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492926,-99) , 
10, -1.70365, 0, 0, 0.536112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492631,-99) , 
9, -0.317804, 1, 0, 0.501645,-99) , 
9, -3.25982, 1, 0, 0.504271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472617,-99) , 
0, 0.495777, 0, 0, 0.489703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453009,-99) , 
0, 0.499043, 1, 0, 0.476022,-99) , 
5, 0.587444, 1, 0, 0.501691,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0180631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482787,-99) , 
10, 4.44227, 1, 0, 0.501816,-99) , 
9, -3.39856, 1, 0, 0.503906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513432,-99) , 
NN(
0, 
0, 
-1, -1.14152, 1, -1, 0.480603,-99) , 
9, 1.26044, 0, 0, 0.486515,-99) , 
0, 0.5019, 1, 0, 0.500564,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0369363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492245,-99) , 
7, -951.286, 1, 0, 0.524144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448558,-99) , 
4, 0.999905, 0, 0, 0.505806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480192,-99) , 
9, -2.19374, 1, 0, 0.491869,-99) , 
5, -0.345687, 1, 0, 0.498294,-99) , 
9, -3.33543, 1, 0, 0.500539,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0112031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499435,-99) , 
6, 0.0113317, 0, 0, 0.502254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468406,-99) , 
6, 0.0237968, 1, 0, 0.500859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46531,-99) , 
0, 0.505709, 1, 0, 0.499499,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0278623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.746676, 0, 1, 0.530187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489705,-99) , 
10, 0.945946, 0, 0, 0.499106,-99) , 
9, -2.5083, 1, 0, 0.505351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517514,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.466946,-99) , 
4, 0.999524, 1, 0, 0.484564,-99) , 
5, 0.58108, 1, 0, 0.503378,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0170756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479002,-99) , 
10, 4.73023, 1, 0, 0.503111,-99) , 
NN(
0, 
0, 
-1, 0.142163, 0, -1, 0.473411,-99) , 
0, 0.505029, 1, 0, 0.50138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459145,-99) , 
0, 0.489519, 0, 0, 0.500167,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0278109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459534,-99) , 
7, -951.286, 0, 0, 0.516324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486183,-99) , 
4, 0.999977, 0, 0, 0.498029,-99) , 
4, 0.999524, 1, 0, 0.499657,-99) , 
NN(
0, 
0, 
-1, -0.0745581, 1, -1, 0.47526,-99) , 
0, 0.491424, 0, 0, 0.497863,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0300612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481983,-99) , 
9, -3.84085, 1, 0, 0.525483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465084,-99) , 
9, -1.152, 1, 0, 0.497684,-99) , 
NN(
0, 
0, 
-1, -0.628903, 1, -1, 0.485819,-99) , 
9, -0.44995, 1, 0, 0.493478,-99) , 
9, -3.39856, 1, 0, 0.496001,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0295795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480113,-99) , 
10, -1.7407, 0, 0, 0.515907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479731,-99) , 
4, 0.999905, 0, 0, 0.499801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473189,-99) , 
4, 0.999524, 1, 0, 0.482372,-99) , 
5, 0.0282045, 1, 0, 0.494507,-99) , 
9, -3.20228, 1, 0, 0.496773,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0241782);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48116,-99) , 
10, -1.37794, 0, 0, 0.516271,-99) , 
NN(
0, 
0, 
-1, 0.715294, 0, -1, 0.49374,-99) , 
9, -2.7431, 1, 0, 0.49691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476426,-99) , 
4, 0.999524, 1, 0, 0.486987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454596,-99) , 
0, 0.494281, 0, 0, 0.480628,-99) , 
5, 0.495567, 1, 0, 0.494762,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0398383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69012, 1, 1, 0.530489,-99) , 
NN(
0, 
0, 
-1, -0.207317, 0, -1, 0.485454,-99) , 
3, 4.79158, 1, 0, 0.514846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491139,-99) , 
9, -1.25174, 1, 0, 0.50396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48354,-99) , 
9, -3.5278, 1, 0, 0.489376,-99) , 
5, -0.345687, 1, 0, 0.495531,-99) , 
2, -0.0713047, 1, 0, 0.499037,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0148872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45796,-99) , 
7, -951.286, 0, 0, 0.524751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449924,-99) , 
4, 0.999683, 0, 0, 0.499271,-99) , 
4, 0.999524, 1, 0, 0.500846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465569,-99) , 
4, 0.998571, 0, 0, 0.499557,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0391284);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493116,-99) , 
9, -2.12571, 1, 0, 0.507622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471681,-99) , 
5, -0.636938, 1, 0, 0.494412,-99) , 
9, 0.0209039, 1, 0, 0.50311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491625,-99) , 
10, -1.58894, 0, 0, 0.518844,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.46808,-99) , 
9, -3.30872, 1, 0, 0.48855,-99) , 
10, -0.60248, 0, 0, 0.499844,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0219134);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486107,-99) , 
10, -0.0640492, 0, 0, 0.499536,-99) , 
9, -3.46978, 1, 0, 0.502106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5075,-99) , 
NN(
0, 
0, 
-1, -0.0739324, 1, -1, 0.475561,-99) , 
2, 0.0722493, 0, 0, 0.483798,-99) , 
0, 0.503804, 1, 0, 0.500298,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0253931);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481919,-99) , 
7, -951.286, 0, 0, 0.534497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490531,-99) , 
7, -948.87, 1, 0, 0.501321,-99) , 
4, 0.999524, 1, 0, 0.503387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470112,-99) , 
4, 0.998571, 0, 0, 0.502158,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0168934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.049799, 1, 1, 0.528504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462485,-99) , 
8, -1.57143, 0, 0, 0.499569,-99) , 
6, 0.0101985, 0, 0, 0.503077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473062,-99) , 
6, 0.0237968, 1, 0, 0.501842,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0330848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.966617, 0, 1, 0.509723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476088,-99) , 
9, 2.14433, 0, 0, 0.48595,-99) , 
9, -0.829092, 1, 0, 0.501845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4528,-99) , 
8, 0.431191, 1, 0, 0.481747,-99) , 
10, 4.65964, 1, 0, 0.50019,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0340347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28569, 1, 1, 0.506047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469048,-99) , 
4, 0.999524, 0, 0, 0.503833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493221,-99) , 
5, -0.240736, 1, 0, 0.504889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436212,-99) , 
5, 0.0184008, 0, 0, 0.456438,-99) , 
9, -1.87154, 1, 0, 0.492137,-99) , 
10, 0.711478, 0, 0, 0.49758,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.024048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493344,-99) , 
10, -1.1053, 0, 0, 0.516834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492598,-99) , 
8, 1.57142, 0, 0, 0.494897,-99) , 
9, -2.68355, 1, 0, 0.498892,-99) , 
NN(
0, 
0, 
-1, 0.760863, 0, -1, 0.472101,-99) , 
5, 0.680824, 1, 0, 0.49741,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0245845);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458704,-99) , 
7, -951.286, 0, 0, 0.519429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489417,-99) , 
4, 0.999977, 0, 0, 0.498195,-99) , 
4, 0.999524, 1, 0, 0.500173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463056,-99) , 
0, 0.489519, 0, 0, 0.499092,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.032306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460744,-99) , 
9, -3.79714, 1, 0, 0.500728,-99) , 
10, -1.47073, 0, 0, 0.520833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489932,-99) , 
3, 4.24728, 1, 0, 0.512029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488599,-99) , 
2, -0.0780667, 1, 0, 0.493059,-99) , 
2, 0.0715501, 0, 0, 0.496489,-99) , 
9, -3.19669, 1, 0, 0.499081,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.021564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.08191, 0, 1, 0.509211,-99) , 
NN(
0, 
0, 
-1, -0.537623, 1, -1, 0.488858,-99) , 
9, -0.714066, 1, 0, 0.501776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467707,-99) , 
0, 0.505709, 1, 0, 0.50046,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0342799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494261,-99) , 
10, 0.0228927, 0, 0, 0.51117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459853,-99) , 
10, 0.816361, 0, 0, 0.491945,-99) , 
9, -1.69764, 1, 0, 0.501113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448206,-99) , 
5, -0.863485, 1, 0, 0.479682,-99) , 
10, 4.43869, 1, 0, 0.499217,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0249869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.785451, 0, 1, 0.509945,-99) , 
NN(
0, 
0, 
-1, 1.28105, 0, -1, 0.485082,-99) , 
9, -1.03939, 1, 0, 0.500811,-99) , 
NN(
0, 
0, 
-1, -0.859224, 1, -1, 0.480254,-99) , 
10, 4.34157, 1, 0, 0.498958,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.015252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48975,-99) , 
10, -1.70471, 0, 0, 0.517587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496193,-99) , 
4, 0.999524, 1, 0, 0.497698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476213,-99) , 
8, 2.14285, 1, 0, 0.496925,-99) , 
9, -3.21657, 1, 0, 0.49906,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0272171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2398, 0, 1, 0.524391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46263,-99) , 
9, -3.03837, 1, 0, 0.512437,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28569, 1, 1, 0.503237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463062,-99) , 
9, -1.98334, 1, 0, 0.493411,-99) , 
10, 0.541627, 0, 0, 0.49932,-99) , 
9, -2.86554, 1, 0, 0.501492,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0265969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485496,-99) , 
9, -1.34123, 1, 0, 0.499214,-99) , 
9, 1.66992, 0, 0, 0.501277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447209,-99) , 
5, -0.859231, 1, 0, 0.480378,-99) , 
10, 4.39672, 1, 0, 0.499422,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0321609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475195,-99) , 
10, -0.957602, 0, 0, 0.546866,-99) , 
NN(
0, 
0, 
-1, -0.456785, 0, -1, 0.49729,-99) , 
9, -2.4626, 1, 0, 0.502866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481645,-99) , 
4, 0.998617, 0, 0, 0.52164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472114,-99) , 
8, 1.28614, 0, 0, 0.478038,-99) , 
4, 0.999524, 1, 0, 0.486355,-99) , 
5, 0.12169, 1, 0, 0.497683,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0316663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478106,-99) , 
10, -1.14725, 0, 0, 0.550068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490696,-99) , 
10, 1.02362, 0, 0, 0.499368,-99) , 
9, -2.47891, 1, 0, 0.504939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477434,-99) , 
4, 0.999524, 1, 0, 0.483638,-99) , 
9, -3.7715, 1, 0, 0.488226,-99) , 
5, 0.122474, 1, 0, 0.499698,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0245695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487389,-99) , 
9, -1.03997, 1, 0, 0.50137,-99) , 
9, 2.23071, 0, 0, 0.503005,-99) , 
NN(
0, 
0, 
-1, -0.872356, 1, -1, 0.478478,-99) , 
10, 4.60449, 1, 0, 0.500986,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0313175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49496,-99) , 
9, -0.538783, 1, 0, 0.505348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467384,-99) , 
9, -3.52011, 1, 0, 0.487277,-99) , 
10, -0.645241, 0, 0, 0.502032,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.473484,-99) , 
5, 0.587445, 1, 0, 0.499417,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0291518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.518904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450483,-99) , 
4, 0.999905, 0, 0, 0.499242,-99) , 
3, 1.35194, 1, 0, 0.505798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47651,-99) , 
7, -951.286, 0, 0, 0.519049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480136,-99) , 
0, 0.497138, 1, 0, 0.488591,-99) , 
4, 0.999524, 1, 0, 0.493497,-99) , 
5, -0.065269, 1, 0, 0.500724,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0379977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.727778, 0, 1, 0.574174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477586,-99) , 
10, 1.47074, 0, 0, 0.494754,-99) , 
9, -1.86545, 1, 0, 0.504937,-99) , 
NN(
NN(
0, 
0, 
-1, 4.4192, 1, 1, 0.518861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482355,-99) , 
9, -3.60852, 1, 0, 0.486933,-99) , 
2, 0.0713933, 0, 0, 0.492678,-99) , 
5, -0.158142, 1, 0, 0.499242,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0230798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0380708, 1, 1, 0.515634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49239,-99) , 
9, -3.08757, 1, 0, 0.49531,-99) , 
3, 1.31988, 1, 0, 0.501858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474691,-99) , 
3, 8.70229, 1, 0, 0.500599,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0161744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492757,-99) , 
10, 0.149843, 0, 0, 0.50051,-99) , 
9, -3.28779, 1, 0, 0.502367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505518,-99) , 
NN(
0, 
0, 
-1, -2.7968, 0, -1, 0.47513,-99) , 
8, 0.714867, 0, 0, 0.484867,-99) , 
5, 0.496633, 1, 0, 0.500061,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0139803);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481856,-99) , 
7, -951.286, 0, 0, 0.524924,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.496655,-99) , 
4, 0.999524, 1, 0, 0.498432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465211,-99) , 
4, 0.998572, 0, 0, 0.497203,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0287698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468735,-99) , 
10, 4.57173, 1, 0, 0.507742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483029,-99) , 
5, -0.532285, 1, 0, 0.487559,-99) , 
6, 0.00226688, 0, 0, 0.501413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473327,-99) , 
6, 0.0238024, 1, 0, 0.500259,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0134165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.165846, 0, 1, 0.528219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489725,-99) , 
10, -0.668742, 0, 0, 0.50004,-99) , 
2, -0.214291, 1, 0, 0.501544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461681,-99) , 
3, 9.40736, 1, 0, 0.50013,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0106305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495307,-99) , 
6, 0.0160729, 1, 0, 0.52215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476793,-99) , 
6, 0.000539382, 0, 0, 0.498478,-99) , 
6, 0.0113263, 0, 0, 0.500735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476831,-99) , 
6, 0.0237891, 1, 0, 0.499757,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0109671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497684,-99) , 
2, -0.112113, 1, 0, 0.499398,-99) , 
2, 0.214273, 0, 0, 0.500345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460826,-99) , 
4, 0.998572, 0, 0, 0.498897,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0323351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447975,-99) , 
10, -1.33081, 0, 0, 0.500074,-99) , 
9, -3.86827, 1, 0, 0.502968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467475,-99) , 
7, -951.274, 1, 0, 0.50056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467021,-99) , 
7, -951.286, 0, 0, 0.481451,-99) , 
5, -0.727207, 1, 0, 0.489859,-99) , 
9, -0.366509, 1, 0, 0.498854,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0158427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480618,-99) , 
10, -1.73492, 0, 0, 0.512482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489443,-99) , 
10, 0.315818, 0, 0, 0.496567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465984,-99) , 
4, 0.998571, 0, 0, 0.495592,-99) , 
9, -3.20228, 1, 0, 0.497373,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0290325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485819,-99) , 
9, -1.77249, 1, 0, 0.496878,-99) , 
NN(
0, 
0, 
-1, 0.43575, 1, -1, 0.477431,-99) , 
10, 4.57173, 1, 0, 0.495197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456213,-99) , 
4, 0.998571, 0, 0, 0.493795,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0271332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.548203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476598,-99) , 
9, -3.78916, 1, 0, 0.48871,-99) , 
10, -0.861334, 0, 0, 0.506414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493385,-99) , 
8, 1.85713, 0, 0, 0.494879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460688,-99) , 
4, 0.999048, 0, 0, 0.493429,-99) , 
9, -2.58409, 1, 0, 0.496345,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.031742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472966,-99) , 
10, -1.14204, 0, 0, 0.539183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488783,-99) , 
5, -0.412442, 1, 0, 0.498943,-99) , 
9, -2.4626, 1, 0, 0.503428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481187,-99) , 
4, 0.998617, 0, 0, 0.516856,-99) , 
NN(
0, 
0, 
-1, 0.999955, 1, -1, 0.483292,-99) , 
4, 0.999524, 1, 0, 0.489672,-99) , 
5, 0.121684, 1, 0, 0.499105,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.022162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492105,-99) , 
9, -1.65507, 1, 0, 0.501337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46112,-99) , 
8, 0.432146, 1, 0, 0.483359,-99) , 
10, 4.7016, 1, 0, 0.499833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473287,-99) , 
4, 0.998571, 0, 0, 0.498857,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0377172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.33724, 1, 1, 0.512449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479514,-99) , 
8, -0.142843, 1, 0, 0.490776,-99) , 
9, 0.147339, 1, 0, 0.505126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47774,-99) , 
10, -1.42921, 0, 0, 0.508714,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.469854,-99) , 
9, -3.11541, 1, 0, 0.487594,-99) , 
10, -0.44825, 0, 0, 0.500638,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0236393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.52305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463242,-99) , 
2, 0.207443, 1, 0, 0.487953,-99) , 
3, 4.3355, 1, 0, 0.508664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45554,-99) , 
4, 0.99981, 0, 0, 0.49886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483414,-99) , 
9, -3.51535, 1, 0, 0.48741,-99) , 
5, -0.0672643, 1, 0, 0.494105,-99) , 
2, 0.0713938, 0, 0, 0.496746,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0139574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494535,-99) , 
7, -951.256, 1, 0, 0.521481,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.496045,-99) , 
6, 0.0113336, 0, 0, 0.498506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47179,-99) , 
6, 0.0238024, 1, 0, 0.497418,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0342516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493731,-99) , 
10, -0.158198, 0, 0, 0.511854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469579,-99) , 
10, 0.746595, 0, 0, 0.495048,-99) , 
9, -1.97789, 1, 0, 0.501753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483698,-99) , 
10, 5.08481, 1, 0, 0.500448,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0183611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.524464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496013,-99) , 
2, 0.152914, 0, 0, 0.498655,-99) , 
2, -0.0714968, 1, 0, 0.502244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47295,-99) , 
2, 0.227932, 1, 0, 0.497777,-99) , 
NN(
0, 
0, 
-1, -0.166573, 0, -1, 0.481293,-99) , 
2, -0.0713028, 0, 0, 0.492282,-99) , 
3, 4.47895, 1, 0, 0.500147,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0357913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.486425, 0, 1, 0.513095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475011,-99) , 
10, 1.16925, 0, 0, 0.489587,-99) , 
9, -1.37976, 1, 0, 0.506361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463316,-99) , 
7, -948.87, 1, 0, 0.495115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419102,-99) , 
8, -0.714962, 0, 0, 0.479482,-99) , 
10, 2.28644, 0, 0, 0.490553,-99) , 
9, -0.176269, 1, 0, 0.501795,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0360022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496984,-99) , 
10, -0.33405, 0, 0, 0.513159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466374,-99) , 
10, 0.438756, 0, 0, 0.494191,-99) , 
9, -2.15146, 1, 0, 0.502703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478816,-99) , 
8, 1.16317, 0, 0, 0.48401,-99) , 
8, -1.28573, 1, 0, 0.487613,-99) , 
9, -0.0497727, 1, 0, 0.49858,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0344609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.00673, 1, 1, 0.535696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468838,-99) , 
9, -3.73235, 1, 0, 0.488448,-99) , 
10, -1.18646, 0, 0, 0.51001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490294,-99) , 
8, -0.713934, 1, 0, 0.501982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453289,-99) , 
8, -0.714256, 0, 0, 0.491809,-99) , 
7, -951.286, 0, 0, 0.495823,-99) , 
9, -2.6978, 1, 0, 0.498633,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0464025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498363,-99) , 
5, -0.43984, 1, 0, 0.512783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445361,-99) , 
9, 1.9519, 1, 0, 0.504557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453926,-99) , 
9, -0.951009, 1, 0, 0.486364,-99) , 
9, 3.10273, 0, 0, 0.491237,-99) , 
7, -951.256, 0, 0, 0.496923,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0317855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.532602, 1, 1, 0.515875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452201,-99) , 
10, 3.08842, 1, 0, 0.507493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494169,-99) , 
9, -3.20228, 1, 0, 0.498237,-99) , 
NN(
0, 
0, 
-1, 1.97958, 1, -1, 0.450795,-99) , 
8, 1.57142, 1, 0, 0.493657,-99) , 
7, -950.098, 0, 0, 0.49955,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0400732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481674,-99) , 
10, -1.73229, 0, 0, 0.515041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433725,-99) , 
10, 3.98041, 1, 0, 0.504709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484941,-99) , 
10, 3.25434, 0, 0, 0.492459,-99) , 
7, -948.87, 0, 0, 0.497447,-99) , 
9, -3.20228, 1, 0, 0.499293,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0240789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487389,-99) , 
7, -951.286, 0, 0, 0.525669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491489,-99) , 
5, -0.348965, 1, 0, 0.498981,-99) , 
4, 0.999524, 1, 0, 0.501814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487661,-99) , 
5, -0.439153, 1, 0, 0.494081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462935,-99) , 
2, -0.214541, 0, 0, 0.490024,-99) , 
3, 4.37429, 1, 0, 0.499251,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0114312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4918,-99) , 
10, -1.20508, 0, 0, 0.50977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487977,-99) , 
10, 4.13727, 1, 0, 0.498743,-99) , 
9, -2.74869, 1, 0, 0.500711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468425,-99) , 
4, 0.998571, 0, 0, 0.499541,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.014926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493535,-99) , 
9, -3.82324, 1, 0, 0.505133,-99) , 
10, -0.68532, 0, 0, 0.515434,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497076,-99) , 
9, -2.61768, 1, 0, 0.501045,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0152494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498936,-99) , 
10, -1.18113, 0, 0, 0.521138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488108,-99) , 
10, 3.98553, 1, 0, 0.500403,-99) , 
9, -2.7268, 1, 0, 0.503383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472378,-99) , 
0, 0.494599, 0, 0, 0.494365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461443,-99) , 
0, 0.500948, 1, 0, 0.486933,-99) , 
5, 0.495569, 1, 0, 0.501208,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0290933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.54013, 0, 1, 0.510319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479313,-99) , 
10, 1.5238, 0, 0, 0.487895,-99) , 
9, -1.37976, 1, 0, 0.503924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489581,-99) , 
8, -0.714699, 1, 0, 0.507793,-99) , 
NN(
0, 
0, 
-1, 3.84773, 1, -1, 0.484613,-99) , 
5, -0.818135, 1, 0, 0.491468,-99) , 
9, -0.176269, 1, 0, 0.500334,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0313571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.25412, 0, 1, 0.526189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48311,-99) , 
5, 0.61563, 1, 0, 0.516116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496896,-99) , 
8, 0.714287, 1, 0, 0.504781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46877,-99) , 
9, -2.14168, 1, 0, 0.492774,-99) , 
10, 0.523854, 0, 0, 0.500049,-99) , 
9, -2.86554, 1, 0, 0.502695,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0270663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494738,-99) , 
9, -1.67065, 1, 0, 0.504043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489462,-99) , 
4, 0.999524, 1, 0, 0.494137,-99) , 
5, -0.25296, 1, 0, 0.498914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46538,-99) , 
3, 9.41001, 1, 0, 0.497735,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0237241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479766,-99) , 
4, 0.999316, 0, 0, 0.505693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461393,-99) , 
9, -2.94193, 1, 0, 0.492461,-99) , 
10, -0.563, 0, 0, 0.503434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486184,-99) , 
10, -0.74744, 1, 0, 0.494996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461456,-99) , 
0, 0.500947, 1, 0, 0.487409,-99) , 
5, 0.403092, 1, 0, 0.500651,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0138604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472205,-99) , 
9, -3.03835, 1, 0, 0.512841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498533,-99) , 
9, 4.04695, 0, 0, 0.500152,-99) , 
9, -2.86554, 1, 0, 0.502234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469597,-99) , 
0, 0.489519, 0, 0, 0.501291,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0188097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49555,-99) , 
5, 0.308622, 1, 0, 0.504319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481014,-99) , 
9, -3.4846, 1, 0, 0.492611,-99) , 
10, -0.553417, 0, 0, 0.501589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470536,-99) , 
0, 0.489519, 0, 0, 0.500705,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0146549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.166136, 0, 1, 0.519959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4939,-99) , 
5, -0.534503, 1, 0, 0.49725,-99) , 
2, -0.213899, 1, 0, 0.498442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473327,-99) , 
3, 9.41704, 1, 0, 0.49754,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0255623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498857,-99) , 
9, -2.35408, 1, 0, 0.506746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480617,-99) , 
5, -0.636734, 1, 0, 0.496438,-99) , 
9, 0.119274, 1, 0, 0.503234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481107,-99) , 
9, -3.00254, 1, 0, 0.501783,-99) , 
NN(
0, 
0, 
-1, -3.72111, 1, -1, 0.478825,-99) , 
10, -1.29629, 0, 0, 0.492901,-99) , 
10, -0.478099, 0, 0, 0.500641,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0191257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47365,-99) , 
10, -1.82643, 0, 0, 0.524075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493115,-99) , 
10, 0.137401, 0, 0, 0.501086,-99) , 
9, -3.15344, 1, 0, 0.503328,-99) , 
NN(
0, 
0, 
-1, -0.628505, 0, -1, 0.481741,-99) , 
5, 0.683709, 1, 0, 0.502151,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0263565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.721139, 0, 1, 0.507598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47776,-99) , 
7, -951.286, 0, 0, 0.490232,-99) , 
9, -1.15651, 1, 0, 0.500688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463807,-99) , 
10, 7.31016, 0, 0, 0.482253,-99) , 
10, 4.69353, 1, 0, 0.499192,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0188118);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472128,-99) , 
0, 0.492376, 0, 0, 0.511178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496186,-99) , 
2, -0.213742, 1, 0, 0.498017,-99) , 
3, 1.34267, 1, 0, 0.502339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481576,-99) , 
3, 8.73885, 1, 0, 0.501391,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0152617);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488568,-99) , 
10, 2.60078, 1, 0, 0.518877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476425,-99) , 
8, -1.28569, 0, 0, 0.499185,-99) , 
6, 0.0101861, 0, 0, 0.501596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478947,-99) , 
6, 0.0237681, 1, 0, 0.500668,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0180655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481773,-99) , 
7, -951.286, 0, 0, 0.521953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455389,-99) , 
4, 0.999705, 0, 0, 0.501848,-99) , 
4, 0.999524, 1, 0, 0.503815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479657,-99) , 
3, 8.8365, 1, 0, 0.502754,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0141713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55164, 1, 1, 0.523421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481825,-99) , 
8, 0.142884, 0, 0, 0.495556,-99) , 
3, 4.36657, 1, 0, 0.512288,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.495775,-99) , 
2, 0.0712876, 0, 0, 0.498799,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0268581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494082,-99) , 
10, -0.198376, 0, 0, 0.510407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473688,-99) , 
10, 0.747681, 0, 0, 0.491386,-99) , 
9, -2.00011, 1, 0, 0.499022,-99) , 
NN(
0, 
0, 
-1, -0.856909, 1, -1, 0.484884,-99) , 
10, 4.30881, 1, 0, 0.497742,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0259322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486808,-99) , 
9, -0.616005, 1, 0, 0.502258,-99) , 
NN(
0, 
0, 
-1, -0.158682, 1, -1, 0.487166,-99) , 
0, 0.50326, 1, 0, 0.500206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463343,-99) , 
3, 1.55308, 0, 0, 0.493609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4584,-99) , 
5, 0.206074, 1, 0, 0.484712,-99) , 
0, 0.492376, 0, 0, 0.498608,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0105587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477561,-99) , 
7, -951.286, 0, 0, 0.51803,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.497923,-99) , 
4, 0.999524, 1, 0, 0.499181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476282,-99) , 
4, 0.998571, 0, 0, 0.498343,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0253472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.88909, 1, 1, 0.521388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489727,-99) , 
9, -2.45172, 1, 0, 0.498089,-99) , 
5, -0.345515, 1, 0, 0.503292,-99) , 
NN(
NN(
0, 
0, 
-1, -0.545346, 1, 1, 0.510152,-99) , 
NN(
0, 
0, 
-1, 2.52434, 0, -1, 0.48522,-99) , 
8, 0.999994, 0, 0, 0.491762,-99) , 
9, -0.0497727, 1, 0, 0.500137,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0061871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501547,-99) , 
NN(
0, 
0, 
-1, 0.506215, 0, -1, 0.483856,-99) , 
0, 0.505165, 1, 0, 0.500567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482598,-99) , 
0, 0.490472, 0, 0, 0.499685,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0323707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.665018, 0, 1, 0.559509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478606,-99) , 
10, 1.27022, 0, 0, 0.493982,-99) , 
9, -2.13892, 1, 0, 0.503213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492086,-99) , 
9, -3.34167, 1, 0, 0.497296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45917,-99) , 
8, -1.2846, 0, 0, 0.493996,-99) , 
5, 0.0282036, 1, 0, 0.49986,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.026711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.816781, 0, 1, 0.50947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476656,-99) , 
7, -951.286, 0, 0, 0.487841,-99) , 
9, -1.03939, 1, 0, 0.501412,-99) , 
NN(
0, 
0, 
-1, -0.897612, 1, -1, 0.48413,-99) , 
10, 4.60449, 1, 0, 0.499968,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0283946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.33073, 1, 1, 0.510405,-99) , 
NN(
0, 
0, 
-1, -0.540215, 1, -1, 0.489439,-99) , 
9, -0.640371, 1, 0, 0.501202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475163,-99) , 
9, -3.85821, 1, 0, 0.511868,-99) , 
NN(
0, 
0, 
-1, 0.310196, 0, -1, 0.474712,-99) , 
9, -3.44814, 1, 0, 0.48865,-99) , 
10, -0.751951, 0, 0, 0.498792,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0237268);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23809, 1, 1, 0.521101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499859,-99) , 
9, 2.81737, 0, 0, 0.504878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483915,-99) , 
4, 0.999524, 1, 0, 0.490919,-99) , 
7, -948.87, 1, 0, 0.498908,-99) , 
8, 1.85714, 0, 0, 0.500183,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0180496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.970331, 1, 1, 0.509556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490371,-99) , 
9, -1.70719, 1, 0, 0.500514,-99) , 
5, -0.532293, 1, 0, 0.503127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480963,-99) , 
0, 0.505709, 1, 0, 0.502284,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0256741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49721,-99) , 
9, -2.30202, 1, 0, 0.507592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494073,-99) , 
8, -1.28572, 1, 0, 0.497156,-99) , 
9, 0.0100865, 1, 0, 0.503975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482428,-99) , 
5, -0.249552, 1, 0, 0.488261,-99) , 
9, -3.78873, 1, 0, 0.494539,-99) , 
10, -0.569829, 0, 0, 0.501797,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0221815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.27757, 1, 1, 0.51002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480899,-99) , 
5, -0.54619, 1, 0, 0.497847,-99) , 
9, 0.0447877, 1, 0, 0.50587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483451,-99) , 
9, -3.02293, 1, 0, 0.501582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469533,-99) , 
10, -1.88261, 0, 0, 0.496271,-99) , 
10, -0.569829, 0, 0, 0.503656,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0153612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499755,-99) , 
9, -2.28719, 1, 0, 0.505728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494354,-99) , 
4, 0.999524, 1, 0, 0.497464,-99) , 
5, -0.159575, 1, 0, 0.502006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471728,-99) , 
4, 0.998571, 0, 0, 0.500894,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0162283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49955,-99) , 
9, -2.21335, 1, 0, 0.506347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493681,-99) , 
4, 0.999524, 1, 0, 0.496263,-99) , 
5, -0.0662032, 1, 0, 0.502356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472687,-99) , 
4, 0.998571, 0, 0, 0.501273,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0238812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487509,-99) , 
10, -1.65242, 0, 0, 0.520764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492634,-99) , 
10, 0.315818, 0, 0, 0.50441,-99) , 
9, -3.15344, 1, 0, 0.506013,-99) , 
NN(
0, 
0, 
-1, 0.166379, 0, -1, 0.488054,-99) , 
5, 0.680824, 1, 0, 0.50501,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0277756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.858909, 0, 1, 0.511166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469766,-99) , 
10, 1.44046, 0, 0, 0.483067,-99) , 
9, -1.06409, 1, 0, 0.505698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474742,-99) , 
5, -0.806636, 1, 0, 0.509432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475547,-99) , 
10, 4.50328, 1, 0, 0.494242,-99) , 
8, -0.714249, 1, 0, 0.497226,-99) , 
9, -0.183284, 1, 0, 0.503229,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0208462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.45205, 1, 1, 0.50956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491448,-99) , 
9, 2.16276, 0, 0, 0.497499,-99) , 
9, -0.721501, 1, 0, 0.504193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498473,-99) , 
0, 0.498095, 1, 0, 0.505753,-99) , 
NN(
0, 
0, 
-1, -3.2271, 0, -1, 0.478141,-99) , 
9, -3.48748, 1, 0, 0.489332,-99) , 
10, -0.876331, 0, 0, 0.501719,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0245372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496844,-99) , 
10, -0.644907, 0, 0, 0.545687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410946,-99) , 
10, -0.134664, 0, 0, 0.497647,-99) , 
9, -2.13296, 1, 0, 0.504438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491182,-99) , 
4, 0.999524, 1, 0, 0.49461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467983,-99) , 
0, 0.492376, 0, 0, 0.4921,-99) , 
5, 0.0282077, 1, 0, 0.499968,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0162057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496468,-99) , 
9, -2.36824, 1, 0, 0.501839,-99) , 
NN(
0, 
0, 
-1, -0.861145, 1, -1, 0.486936,-99) , 
10, 4.34157, 1, 0, 0.500443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474091,-99) , 
4, 0.998572, 0, 0, 0.49948,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0190239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488101,-99) , 
10, 2.56167, 1, 0, 0.519892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494983,-99) , 
5, 0.122478, 0, 0, 0.499873,-99) , 
6, 0.0102009, 0, 0, 0.502318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479209,-99) , 
6, 0.0238024, 1, 0, 0.501376,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0231742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473531,-99) , 
10, -1.42393, 0, 0, 0.524073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492744,-99) , 
10, 0.37138, 0, 0, 0.501072,-99) , 
9, -2.84992, 1, 0, 0.503133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479054,-99) , 
8, 0.619406, 0, 0, 0.485499,-99) , 
9, -1.91094, 0, 0, 0.493669,-99) , 
5, 0.30009, 1, 0, 0.501003,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0280322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496669,-99) , 
6, 0.0237708, 0, 0, 0.500186,-99) , 
9, -1.81817, 1, 0, 0.506962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491244,-99) , 
10, -0.38045, 0, 0, 0.50291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48211,-99) , 
5, 0.264233, 0, 0, 0.489319,-99) , 
9, -2.24487, 1, 0, 0.496559,-99) , 
5, -0.253805, 1, 0, 0.50156,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0280863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491952,-99) , 
4, 0.999968, 0, 0, 0.508074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453217,-99) , 
4, 0.999333, 0, 0, 0.505922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488141,-99) , 
7, -951.286, 1, 0, 0.499318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480238,-99) , 
9, -2.31304, 1, 0, 0.488434,-99) , 
10, -0.583176, 1, 0, 0.493578,-99) , 
5, 0.121677, 1, 0, 0.502043,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.00960506);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213371, 1, 1, 0.504069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475766,-99) , 
4, 0.998572, 0, 0, 0.503041,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0228136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49876,-99) , 
9, -1.61707, 1, 0, 0.508432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478601,-99) , 
9, -2.55001, 1, 0, 0.496153,-99) , 
10, -0.0386734, 0, 0, 0.503635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467324,-99) , 
8, 0.428899, 1, 0, 0.486142,-99) , 
10, 4.3363, 1, 0, 0.502073,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0121595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499009,-99) , 
3, 4.26545, 1, 0, 0.512492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481426,-99) , 
4, 0.999796, 0, 0, 0.500079,-99) , 
2, 0.072117, 0, 0, 0.502198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47504,-99) , 
4, 0.998572, 0, 0, 0.501203,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0185015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491736,-99) , 
10, -0.954169, 0, 0, 0.5289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475261,-99) , 
4, 0.999293, 0, 0, 0.501066,-99) , 
9, -2.5246, 1, 0, 0.505037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5109,-99) , 
NN(
0, 
0, 
-1, -0.805795, 1, -1, 0.486001,-99) , 
9, -1.85977, 0, 0, 0.490859,-99) , 
5, 0.309555, 1, 0, 0.50193,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0182653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.681669, 0, 1, 0.50818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470693,-99) , 
10, 1.25298, 0, 0, 0.49446,-99) , 
9, -1.15651, 1, 0, 0.502731,-99) , 
NN(
0, 
0, 
-1, 7.22477, 0, -1, 0.488329,-99) , 
10, 4.59922, 1, 0, 0.501527,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0192759);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23809, 1, 1, 0.518878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450118,-99) , 
8, -1.84349, 0, 0, 0.503227,-99) , 
NN(
0, 
0, 
-1, 3.08842, 1, -1, 0.490806,-99) , 
7, -948.87, 1, 0, 0.497924,-99) , 
8, 1.85714, 0, 0, 0.499157,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0143453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489134,-99) , 
10, -0.0230615, 0, 0, 0.498654,-99) , 
9, -3.35078, 1, 0, 0.500117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513322,-99) , 
NN(
0, 
0, 
-1, -0.638102, 1, -1, 0.480724,-99) , 
9, -1.9265, 0, 0, 0.487016,-99) , 
5, 0.496633, 1, 0, 0.498392,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0209127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498427,-99) , 
5, 0.382069, 1, 0, 0.531784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475874,-99) , 
7, -951.286, 1, 0, 0.487702,-99) , 
10, -1.28774, 0, 0, 0.50664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489627,-99) , 
10, 1.50149, 0, 0, 0.507859,-99) , 
NN(
0, 
0, 
-1, 4.53464, 1, -1, 0.494005,-99) , 
8, -0.999954, 1, 0, 0.49569,-99) , 
9, -2.86554, 1, 0, 0.497482,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0205004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.90808, 1, 1, 0.518128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484656,-99) , 
9, -1.68064, 1, 0, 0.49682,-99) , 
5, -0.344825, 1, 0, 0.501331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486425,-99) , 
10, 3.19263, 1, 0, 0.502188,-99) , 
NN(
0, 
0, 
-1, 2.27028, 0, -1, 0.484616,-99) , 
8, 0.999995, 0, 0, 0.489304,-99) , 
9, -0.176269, 1, 0, 0.497839,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0135048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493774,-99) , 
7, -950.098, 0, 0, 0.49807,-99) , 
1, -0.0124585, 1, 0, 0.499098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475232,-99) , 
6, 0.0237891, 1, 0, 0.498133,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0199431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499466,-99) , 
8, 2.23809, 1, 0, 0.520429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489878,-99) , 
7, -948.87, 1, 0, 0.499781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465336,-99) , 
8, -2.0748, 0, 0, 0.49876,-99) , 
8, 1.85714, 0, 0, 0.500021,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0187125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490119,-99) , 
9, -0.142193, 1, 0, 0.510091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493618,-99) , 
9, -2.54489, 1, 0, 0.497026,-99) , 
2, -0.070384, 1, 0, 0.499296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468193,-99) , 
4, 0.998571, 0, 0, 0.498181,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0223235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499138,-99) , 
10, 1.4889, 0, 0, 0.518247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481796,-99) , 
10, 4.48057, 1, 0, 0.501416,-99) , 
8, -0.999956, 1, 0, 0.50321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55195,-99) , 
NN(
0, 
0, 
-1, -3.1849, 0, -1, 0.466157,-99) , 
9, -3.87183, 1, 0, 0.48699,-99) , 
10, -1.01496, 0, 0, 0.500907,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0213003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446896,-99) , 
8, -1.95234, 0, 0, 0.492341,-99) , 
7, -951.286, 0, 0, 0.509904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495919,-99) , 
9, -3.05498, 1, 0, 0.498639,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.479692,-99) , 
10, 4.25279, 1, 0, 0.496695,-99) , 
8, -0.999967, 1, 0, 0.498947,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0224065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497642,-99) , 
9, -1.90926, 1, 0, 0.511225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47867,-99) , 
5, -0.599156, 1, 0, 0.496341,-99) , 
9, 0.0410158, 1, 0, 0.504595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492492,-99) , 
2, 0.0716191, 0, 0, 0.496189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460916,-99) , 
8, -1.28528, 0, 0, 0.493247,-99) , 
5, -0.0646031, 1, 0, 0.499904,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0211741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493188,-99) , 
4, 0.999987, 0, 0, 0.502717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450512,-99) , 
8, -0.428524, 0, 0, 0.486561,-99) , 
4, 0.999728, 0, 0, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477009,-99) , 
4, 0.998571, 0, 0, 0.500214,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0161776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.625615, 1, 1, 0.504847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447961,-99) , 
7, -951.286, 1, 0, 0.484329,-99) , 
10, 3.71904, 1, 0, 0.502456,-99) , 
NN(
0, 
0, 
-1, -1.23427, 1, -1, 0.484024,-99) , 
8, -1.5714, 0, 0, 0.501157,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.00730321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49967,-99) , 
2, 0.214479, 0, 0, 0.501202,-99) , 
NN(
0, 
0, 
-1, -0.071383, 0, -1, 0.48696,-99) , 
3, 6.7821, 1, 0, 0.499898,-99) , 
NN(
0, 
0, 
-1, 0.762634, 0, -1, 0.482899,-99) , 
5, 0.682515, 1, 0, 0.498951,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0142534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.531445, 1, 1, 0.504188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486546,-99) , 
8, 0.999839, 0, 0, 0.493426,-99) , 
9, -0.0169193, 1, 0, 0.501298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476033,-99) , 
0, 0.489519, 0, 0, 0.50057,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0234859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477775,-99) , 
10, -0.929814, 0, 0, 0.524549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4929,-99) , 
5, -0.536754, 1, 0, 0.49743,-99) , 
9, -2.5083, 1, 0, 0.500817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486329,-99) , 
0, 0.495233, 0, 0, 0.498958,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.481394,-99) , 
0, 0.499043, 1, 0, 0.492072,-99) , 
5, 0.216013, 1, 0, 0.498479,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0168839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497411,-99) , 
8, 2.2381, 1, 0, 0.517032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49882,-99) , 
9, -2.4626, 1, 0, 0.502794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486404,-99) , 
9, -1.68452, 0, 0, 0.491554,-99) , 
5, 0.215152, 1, 0, 0.499826,-99) , 
8, 1.85714, 0, 0, 0.500822,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0207547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492371,-99) , 
9, -0.0784261, 1, 0, 0.500321,-99) , 
9, -3.0019, 1, 0, 0.502568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490236,-99) , 
4, 0.999048, 1, 0, 0.494301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462544,-99) , 
0, 0.492377, 0, 0, 0.491319,-99) , 
5, 0.122483, 1, 0, 0.49903,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0210793);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499029,-99) , 
9, -0.0857249, 1, 0, 0.506529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482973,-99) , 
5, 0.589039, 1, 0, 0.505145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485528,-99) , 
9, -3.40421, 1, 0, 0.495927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466864,-99) , 
10, -1.82242, 0, 0, 0.489745,-99) , 
10, -0.707647, 0, 0, 0.502041,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0288041);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237681, 0, 1, 0.505947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492451,-99) , 
10, -0.0958143, 0, 0, 0.504999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470747,-99) , 
5, 0.297437, 0, 0, 0.47901,-99) , 
9, -1.93901, 1, 0, 0.496682,-99) , 
10, 0.810381, 0, 0, 0.5008,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0124424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.38498, 0, 1, 0.514191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496999,-99) , 
9, -2.5083, 1, 0, 0.500028,-99) , 
5, 0.581691, 0, 0, 0.501146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476412,-99) , 
4, 0.998571, 0, 0, 0.500252,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0104424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462896,-99) , 
7, -951.286, 0, 0, 0.525007,-99) , 
NN(
0, 
0, 
-1, -0.214173, 1, 1, 0.501022,-99) , 
4, 0.999048, 1, 0, 0.502406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474171,-99) , 
3, 9.41367, 1, 0, 0.501412,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.017165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493592,-99) , 
10, -1.28774, 0, 0, 0.512069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493954,-99) , 
10, 0.523854, 0, 0, 0.501245,-99) , 
9, -2.86554, 1, 0, 0.503019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47855,-99) , 
0, 0.489519, 0, 0, 0.502329,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0220556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45845, 1, 1, 0.518645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490679,-99) , 
2, -0.00296828, 1, 0, 0.500429,-99) , 
2, 0.0718094, 0, 0, 0.503028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47033,-99) , 
2, 0.112109, 1, 0, 0.491787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462674,-99) , 
2, -0.21439, 0, 0, 0.487933,-99) , 
3, 4.74401, 1, 0, 0.500168,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0253421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490093,-99) , 
5, 0.35822, 1, 0, 0.540798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479983,-99) , 
9, -3.5772, 1, 0, 0.491094,-99) , 
10, -0.824132, 0, 0, 0.505573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49831,-99) , 
6, 0.0238025, 0, 0, 0.500572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481504,-99) , 
9, -2.00166, 1, 0, 0.490733,-99) , 
10, 0.95586, 0, 0, 0.496045,-99) , 
9, -2.54489, 1, 0, 0.498258,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0155291);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23808, 1, 1, 0.524637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499141,-99) , 
9, -2.43565, 1, 0, 0.503013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490684,-99) , 
9, -1.68676, 0, 0, 0.495141,-99) , 
5, 0.116489, 1, 0, 0.500546,-99) , 
8, 1.85712, 0, 0, 0.501954,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0179518);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493088,-99) , 
5, -0.724558, 0, 0, 0.52532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496912,-99) , 
9, 1.98227, 0, 0, 0.498835,-99) , 
6, 0.0090672, 0, 0, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475802,-99) , 
6, 0.0238024, 1, 0, 0.501856,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0186931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.36102, 1, 1, 0.511114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492256,-99) , 
10, 3.54468, 1, 0, 0.508926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496781,-99) , 
3, 4.5204, 1, 0, 0.513782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490586,-99) , 
2, 0.00373367, 0, 0, 0.498109,-99) , 
2, -0.0710745, 1, 0, 0.500855,-99) , 
0, 0.497138, 1, 0, 0.504161,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0192618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57136, 0, 1, 0.510458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478167,-99) , 
8, -0.714244, 0, 0, 0.497393,-99) , 
7, -948.87, 0, 0, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48305,-99) , 
6, 0.0238024, 1, 0, 0.502141,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0149245);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499431,-99) , 
9, -1.81817, 1, 0, 0.505725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495083,-99) , 
9, -3.47244, 1, 0, 0.498473,-99) , 
5, -0.27841, 1, 0, 0.502029,-99) , 
NN(
0, 
0, 
-1, 0.763894, 0, -1, 0.48419,-99) , 
5, 0.683709, 1, 0, 0.501053,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0279707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458252,-99) , 
4, 0.999714, 0, 0, 0.503135,-99) , 
9, -1.81817, 1, 0, 0.509296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496855,-99) , 
9, -2.02405, 1, 0, 0.509397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48138,-99) , 
9, -2.93953, 1, 0, 0.493212,-99) , 
10, -0.0433809, 0, 0, 0.500037,-99) , 
5, -0.252213, 1, 0, 0.504465,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0297172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.697561, 0, 1, 0.510416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485777,-99) , 
10, 1.75939, 0, 0, 0.493493,-99) , 
9, -1.24532, 1, 0, 0.505938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46294,-99) , 
7, -951.275, 1, 0, 0.507215,-99) , 
NN(
0, 
0, 
-1, -0.999977, 0, -1, 0.488102,-99) , 
9, 2.80763, 0, 0, 0.495266,-99) , 
9, -0.0444653, 1, 0, 0.503049,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.019167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497174,-99) , 
9, -0.578566, 1, 0, 0.505847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482735,-99) , 
5, -0.536044, 1, 0, 0.488773,-99) , 
6, 0.00113346, 0, 0, 0.503144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482706,-99) , 
6, 0.0238024, 1, 0, 0.502309,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0342772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.688647, 1, 1, 0.513405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465329,-99) , 
7, -951.274, 1, 0, 0.499147,-99) , 
10, 3.96326, 1, 0, 0.50961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493435,-99) , 
10, 0.397026, 0, 0, 0.501288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469933,-99) , 
5, -0.0652481, 0, 0, 0.484847,-99) , 
9, -1.5058, 1, 0, 0.497552,-99) , 
10, 1.11062, 0, 0, 0.502172,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0105785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.163451, 0, 1, 0.525217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498081,-99) , 
2, -0.112406, 1, 0, 0.499972,-99) , 
2, 0.213985, 0, 0, 0.5013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472068,-99) , 
3, 9.41704, 1, 0, 0.500281,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0186695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.70524, 1, 1, 0.509247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493665,-99) , 
4, 0.999932, 1, 0, 0.499835,-99) , 
5, -0.534794, 1, 0, 0.50263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479217,-99) , 
4, 0.998571, 0, 0, 0.501791,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0276679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469858,-99) , 
5, -0.625788, 0, 0, 0.493716,-99) , 
7, -951.286, 0, 0, 0.510684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494083,-99) , 
10, -0.302623, 0, 0, 0.513081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494643,-99) , 
2, 0.214996, 0, 0, 0.49642,-99) , 
9, -2.08094, 1, 0, 0.50153,-99) , 
8, -0.999962, 1, 0, 0.50309,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0178439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483293,-99) , 
7, -951.286, 0, 0, 0.52155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471234,-99) , 
4, 0.999705, 0, 0, 0.503413,-99) , 
4, 0.999524, 1, 0, 0.505185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485244,-99) , 
3, 9.39852, 1, 0, 0.504476,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0171722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83448, 1, 1, 0.506067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493017,-99) , 
2, -0.0303834, 1, 0, 0.498899,-99) , 
5, -0.253805, 1, 0, 0.502355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458552,-99) , 
3, 4.46817, 1, 0, 0.48655,-99) , 
2, 0.214429, 1, 0, 0.501487,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.019772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458839,-99) , 
5, -0.814249, 0, 0, 0.509892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497861,-99) , 
5, -0.813017, 1, 0, 0.49983,-99) , 
6, 0.00566719, 0, 0, 0.503165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483707,-99) , 
6, 0.0238024, 1, 0, 0.502373,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0105005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.532103, 1, 1, 0.504488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486327,-99) , 
10, 2.36264, 0, 0, 0.497028,-99) , 
9, -0.176029, 1, 0, 0.502342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484109,-99) , 
0, 0.505709, 1, 0, 0.501653,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0214116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.08924, 1, 1, 0.51864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474458,-99) , 
8, -1.28537, 0, 0, 0.500778,-99) , 
5, -0.249081, 1, 0, 0.505452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481239,-99) , 
8, 0.428586, 0, 0, 0.492838,-99) , 
6, 0.0237681, 0, 0, 0.496225,-99) , 
9, -0.411609, 1, 0, 0.502473,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.018409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455292,-99) , 
8, 1.97959, 1, 0, 0.478116,-99) , 
7, -951.286, 0, 0, 0.510686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496268,-99) , 
10, 0.463472, 0, 0, 0.500408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48661,-99) , 
0, 0.499995, 0, 0, 0.493078,-99) , 
8, 0.700683, 1, 0, 0.498855,-99) , 
8, 1.57143, 0, 0, 0.499951,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0149801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88871, 1, 1, 0.530095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497968,-99) , 
9, -3.84087, 1, 0, 0.50016,-99) , 
5, -0.534427, 1, 0, 0.502507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516248,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.489749,-99) , 
5, -0.360069, 0, 0, 0.492074,-99) , 
9, -0.302525, 1, 0, 0.499312,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.022313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.72253, 0, 1, 0.510371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482581,-99) , 
10, 1.69944, 0, 0, 0.496189,-99) , 
9, -1.1284, 1, 0, 0.504865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47742,-99) , 
8, 0.435113, 1, 0, 0.491682,-99) , 
10, 4.39672, 1, 0, 0.503699,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0152394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0408359, 1, 1, 0.506159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495761,-99) , 
0, 0.493328, 1, 0, 0.498776,-99) , 
3, 2.34988, 1, 0, 0.5028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491346,-99) , 
9, -2.07828, 0, 0, 0.49889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46175,-99) , 
0, 0.500947, 1, 0, 0.490688,-99) , 
5, 0.495569, 1, 0, 0.501198,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0103812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.256, 1, 1, 0.520277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484331,-99) , 
6, 0.000538921, 0, 0, 0.500297,-99) , 
6, 0.0113166, 0, 0, 0.502239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480028,-99) , 
6, 0.0237659, 1, 0, 0.501336,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0189376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.866041, 0, 1, 0.506449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467096,-99) , 
7, -951.286, 0, 0, 0.483599,-99) , 
9, -0.917156, 1, 0, 0.502351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511958,-99) , 
NN(
0, 
0, 
-1, -951.275, 1, -1, 0.493467,-99) , 
8, 1.5714, 0, 0, 0.49589,-99) , 
9, -0.0169193, 1, 0, 0.500603,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.01377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490351,-99) , 
7, -951.203, 0, 0, 0.496213,-99) , 
0, 0.49936, 1, 0, 0.50065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464229,-99) , 
4, 0.999887, 0, 0, 0.495193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472735,-99) , 
4, 0.999524, 0, 0, 0.491873,-99) , 
0, 0.494281, 0, 0, 0.498956,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0196127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487363,-99) , 
7, -951.286, 0, 0, 0.521789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494638,-99) , 
2, 0.132801, 0, 0, 0.496224,-99) , 
4, 0.999524, 1, 0, 0.498924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482146,-99) , 
2, 0.152976, 1, 0, 0.496559,-99) , 
NN(
0, 
0, 
-1, -0.166154, 0, -1, 0.479715,-99) , 
2, -0.0714329, 0, 0, 0.490967,-99) , 
3, 4.74401, 1, 0, 0.497402,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.01959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497872,-99) , 
6, 0.0237709, 0, 0, 0.501046,-99) , 
9, -1.81238, 1, 0, 0.50544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494141,-99) , 
9, -2.96056, 1, 0, 0.499227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472158,-99) , 
8, -1.28529, 0, 0, 0.49697,-99) , 
5, -0.345687, 1, 0, 0.500554,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.010065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.016084, 1, 1, 0.518229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483561,-99) , 
6, 0.000539755, 0, 0, 0.499689,-99) , 
6, 0.0113344, 0, 0, 0.501465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467313,-99) , 
6, 0.0238024, 1, 0, 0.500112,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0171919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47226,-99) , 
10, -1.84906, 0, 0, 0.50352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462453,-99) , 
7, -951.256, 1, 0, 0.493931,-99) , 
10, 3.56803, 1, 0, 0.502402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47896,-99) , 
0, 0.489519, 0, 0, 0.501731,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0225283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498949,-99) , 
10, 1.02792, 0, 0, 0.505333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476935,-99) , 
10, 1.75495, 0, 0, 0.494079,-99) , 
9, -0.919648, 1, 0, 0.50004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445636,-99) , 
9, -3.2722, 0, 0, 0.476614,-99) , 
9, -3.83043, 1, 0, 0.489736,-99) , 
10, -1.01496, 0, 0, 0.49857,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0109636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.32949, 1, 1, 0.52034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485198,-99) , 
8, -0.42855, 0, 0, 0.499574,-99) , 
7, -951.286, 0, 0, 0.50829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492118,-99) , 
3, 4.34582, 1, 0, 0.510956,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.498319,-99) , 
2, 0.15327, 0, 0, 0.499726,-99) , 
2, -0.071166, 1, 0, 0.501278,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0111576);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491255,-99) , 
3, 8.26788, 0, 0, 0.495466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463217,-99) , 
5, 0.48583, 1, 0, 0.491006,-99) , 
3, 4.47231, 1, 0, 0.501065,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0107754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486512,-99) , 
7, -951.286, 0, 0, 0.517867,-99) , 
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.498112,-99) , 
4, 0.999524, 1, 0, 0.500064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479385,-99) , 
3, 9.42075, 1, 0, 0.49934,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0108121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57128, 0, 1, 0.506029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444494,-99) , 
8, -1.8571, 0, 0, 0.498647,-99) , 
7, -950.098, 0, 0, 0.501765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486363,-99) , 
6, 0.0238024, 1, 0, 0.501137,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.01949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494609,-99) , 
4, 0.999984, 0, 0, 0.501975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453213,-99) , 
7, -951.286, 0, 0, 0.483609,-99) , 
4, 0.99966, 0, 0, 0.500435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470418,-99) , 
4, 0.998572, 0, 0, 0.499357,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0186017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487621,-99) , 
8, -0.714288, 0, 0, 0.50056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4832,-99) , 
8, -0.713969, 1, 0, 0.491838,-99) , 
9, 0.890253, 1, 0, 0.498968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479805,-99) , 
0, 0.489519, 0, 0, 0.498428,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0133607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.515004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497884,-99) , 
2, -0.157443, 1, 0, 0.500003,-99) , 
2, 0.066246, 0, 0, 0.502203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479948,-99) , 
3, 8.64633, 1, 0, 0.496646,-99) , 
NN(
0, 
0, 
-1, -0.724076, 1, -1, 0.479332,-99) , 
9, -0.467136, 1, 0, 0.491034,-99) , 
3, 4.48195, 1, 0, 0.499876,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0154013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00899602, 1, 1, 0.513154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495281,-99) , 
2, -0.206581, 1, 0, 0.496304,-99) , 
3, 1.13081, 1, 0, 0.501714,-99) , 
NN(
0, 
0, 
-1, 0.214242, 1, -1, 0.492628,-99) , 
3, 4.463, 1, 0, 0.499797,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0154464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487839,-99) , 
5, 0.215152, 1, 0, 0.503973,-99) , 
NN(
0, 
0, 
-1, -2.099, 1, -1, 0.492685,-99) , 
10, 0.0421152, 0, 0, 0.500182,-99) , 
9, -3.53658, 1, 0, 0.501247,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.00740559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.510958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499433,-99) , 
3, 8.5574, 0, 0, 0.50043,-99) , 
2, -0.0711811, 1, 0, 0.50224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48132,-99) , 
4, 0.998572, 0, 0, 0.501485,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.021276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.898361, 1, 1, 0.528575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490248,-99) , 
9, -2.15147, 1, 0, 0.498997,-99) , 
5, -0.53452, 1, 0, 0.50177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482943,-99) , 
10, 3.17425, 1, 0, 0.491183,-99) , 
8, -1.28573, 1, 0, 0.494172,-99) , 
9, -0.0497727, 1, 0, 0.499682,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0226161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.08437, 0, 1, 0.507978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484935,-99) , 
7, -951.256, 0, 0, 0.49199,-99) , 
9, -0.840977, 1, 0, 0.500641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488293,-99) , 
9, -3.51936, 1, 0, 0.498127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464204,-99) , 
8, -1.39886, 0, 0, 0.487704,-99) , 
10, -0.9875, 0, 0, 0.498731,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0142772);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499295,-99) , 
10, 0.960444, 0, 0, 0.503558,-99) , 
NN(
0, 
0, 
-1, 3.68561, 1, -1, 0.490314,-99) , 
9, -0.791799, 1, 0, 0.499163,-99) , 
9, 4.39257, 0, 0, 0.500392,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0150716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492866,-99) , 
5, 0.402106, 1, 0, 0.509806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48432,-99) , 
8, -0.999945, 0, 0, 0.505539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47201,-99) , 
4, 0.999905, 0, 0, 0.50426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484698,-99) , 
9, -1.35293, 1, 0, 0.496405,-99) , 
5, -0.439723, 1, 0, 0.499206,-99) , 
2, 0.0716197, 0, 0, 0.500351,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.00798873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492643,-99) , 
3, 4.53422, 1, 0, 0.511705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511439,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.497396,-99) , 
2, 0.132785, 0, 0, 0.498146,-99) , 
2, 0.214405, 0, 0, 0.498933,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0111336);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497851,-99) , 
5, -0.441743, 1, 0, 0.500833,-99) , 
NN(
0, 
0, 
-1, -0.857147, 1, -1, 0.484021,-99) , 
10, 4.27544, 1, 0, 0.499236,-99) , 
8, -1.85714, 1, 0, 0.49998,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0125564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499213,-99) , 
8, 2.23809, 1, 0, 0.515799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471621,-99) , 
8, -2.07483, 0, 0, 0.501337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447362,-99) , 
7, -951.274, 1, 0, 0.484647,-99) , 
10, 3.91459, 1, 0, 0.499652,-99) , 
8, 1.85713, 0, 0, 0.500602,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0257064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450764,-99) , 
10, -1.51281, 0, 0, 0.502446,-99) , 
9, -3.84086, 1, 0, 0.504526,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469533,-99) , 
7, -951.275, 1, 0, 0.503595,-99) , 
NN(
0, 
0, 
-1, -0.999962, 0, -1, 0.485263,-99) , 
9, 2.49868, 0, 0, 0.491874,-99) , 
9, -0.302525, 1, 0, 0.500658,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0314908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.803434, 1, 1, 0.521614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483313,-99) , 
10, 4.1123, 1, 0, 0.499333,-99) , 
8, -0.714022, 1, 0, 0.502451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491513,-99) , 
10, -0.298728, 0, 0, 0.503016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479327,-99) , 
5, 0.495576, 0, 0, 0.48479,-99) , 
9, -2.12129, 1, 0, 0.494524,-99) , 
10, 1.15911, 0, 0, 0.497489,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.00694548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49876,-99) , 
4, 0.999524, 1, 0, 0.499685,-99) , 
3, 9.42202, 0, 0, 0.500434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475239,-99) , 
4, 0.998571, 0, 0, 0.499524,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0122842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.41286, 1, 1, 0.516354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495273,-99) , 
5, -0.626057, 0, 0, 0.511643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491525,-99) , 
7, -948.87, 1, 0, 0.496713,-99) , 
8, 1.85712, 0, 0, 0.497649,-99) , 
2, 0.0715135, 0, 0, 0.500192,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0193056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479113,-99) , 
7, -951.256, 1, 0, 0.509996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499355,-99) , 
10, -0.437284, 0, 0, 0.508197,-99) , 
NN(
0, 
0, 
-1, 0.352476, 0, -1, 0.492999,-99) , 
9, -2.35675, 1, 0, 0.497676,-99) , 
9, 2.92563, 0, 0, 0.498906,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.020612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495906,-99) , 
6, 0.0237681, 0, 0, 0.499795,-99) , 
9, -1.41936, 1, 0, 0.506183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496652,-99) , 
10, -0.457911, 0, 0, 0.506038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482345,-99) , 
10, 0.365791, 0, 0, 0.493853,-99) , 
9, -2.28778, 1, 0, 0.499263,-99) , 
5, -0.439717, 1, 0, 0.501747,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.010778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0832817, 1, 1, 0.50763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473317,-99) , 
4, 0.999524, 0, 0, 0.498652,-99) , 
3, 1.73003, 1, 0, 0.502526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478699,-99) , 
3, 8.70229, 1, 0, 0.501435,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0198326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498648,-99) , 
6, 0.0237708, 0, 0, 0.502481,-99) , 
9, -1.23655, 1, 0, 0.507416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496674,-99) , 
9, -2.837, 1, 0, 0.502031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462801,-99) , 
8, -1.17453, 0, 0, 0.481209,-99) , 
10, -1.37962, 0, 0, 0.499264,-99) , 
5, -0.439153, 1, 0, 0.502188,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0115941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486056,-99) , 
5, -0.724313, 0, 0, 0.5158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499423,-99) , 
10, 4.57173, 0, 0, 0.500838,-99) , 
6, 0.0090672, 0, 0, 0.503161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483749,-99) , 
6, 0.0238024, 1, 0, 0.50236,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0187031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.427404, 1, 1, 0.509942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495019,-99) , 
9, -2.44787, 1, 0, 0.500199,-99) , 
7, -948.87, 0, 0, 0.504331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479462,-99) , 
6, 0.0238024, 1, 0, 0.503316,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0175941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479216,-99) , 
10, -0.911382, 0, 0, 0.541794,-99) , 
NN(
0, 
0, 
-1, 0.0238025, 0, 1, 0.503002,-99) , 
9, -2.21909, 1, 0, 0.506914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485544,-99) , 
7, -950.098, 0, 0, 0.493873,-99) , 
9, -3.50712, 1, 0, 0.496547,-99) , 
5, -0.0662078, 1, 0, 0.50264,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0130246);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.070361, 1, 1, 0.506094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491048,-99) , 
4, 0.999977, 0, 0, 0.498703,-99) , 
NN(
0, 
0, 
-1, 0.14289, 0, -1, 0.484358,-99) , 
4, 0.999524, 0, 0, 0.497226,-99) , 
0, 0.49809, 0, 0, 0.501719,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0231764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484541,-99) , 
9, -1.51883, 1, 0, 0.501645,-99) , 
10, 1.08191, 0, 0, 0.505118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486327,-99) , 
7, -948.87, 0, 0, 0.493803,-99) , 
6, 0.0237968, 0, 0, 0.496646,-99) , 
9, -0.689523, 1, 0, 0.502025,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0309864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479807,-99) , 
8, 1.57142, 1, 0, 0.507139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48809,-99) , 
8, -0.999513, 1, 0, 0.495536,-99) , 
7, -948.87, 1, 0, 0.502261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447974,-99) , 
7, -951.286, 0, 0, 0.486546,-99) , 
4, 0.999524, 0, 0, 0.500768,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.00837395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499228,-99) , 
9, 1.6909, 0, 0, 0.500651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468696,-99) , 
7, -951.274, 1, 0, 0.490927,-99) , 
10, 3.91986, 1, 0, 0.499642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481625,-99) , 
0, 0.505709, 1, 0, 0.498953,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.00673602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497137, 0, 1, 0.516913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498837,-99) , 
5, 0.59017, 0, 0, 0.499846,-99) , 
NN(
0, 
0, 
-1, 0.63437, 0, -1, 0.489603,-99) , 
0, 0.491424, 0, 0, 0.499143,-99) , 
2, -0.214304, 1, 0, 0.500165,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0178448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.628217, 1, 1, 0.507861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485975,-99) , 
0, 0.489428, 0, 0, 0.50646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492883,-99) , 
5, 0.215165, 1, 0, 0.501959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477903,-99) , 
7, -951.275, 0, 0, 0.493782,-99) , 
8, -0.714252, 0, 0, 0.500017,-99) , 
0, 0.497138, 1, 0, 0.502655,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0220382);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496985,-99) , 
9, -1.88972, 1, 0, 0.503356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488352,-99) , 
9, -3.85268, 1, 0, 0.493063,-99) , 
10, -0.0100508, 0, 0, 0.499324,-99) , 
9, 4.46349, 0, 0, 0.500336,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0128376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0113344, 0, 1, 0.505659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485695,-99) , 
10, 6.29646, 1, 0, 0.504774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484866,-99) , 
6, 0.0238024, 1, 0, 0.503949,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0143717);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497337,-99) , 
9, -2.06047, 1, 0, 0.502391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478424,-99) , 
10, -1.83117, 0, 0, 0.501261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488439,-99) , 
3, 1.75319, 1, 0, 0.49505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476139,-99) , 
0, 0.499994, 1, 0, 0.488349,-99) , 
5, -0.81305, 0, 0, 0.500115,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0180423);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496207,-99) , 
10, -0.282643, 0, 0, 0.505231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468912,-99) , 
7, -951.256, 1, 0, 0.493164,-99) , 
10, 3.67612, 1, 0, 0.50379,-99) , 
NN(
0, 
0, 
-1, 0.75887, 0, -1, 0.488285,-99) , 
5, 0.678921, 1, 0, 0.502905,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.00942494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.8571, 1, 1, 0.5018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461882,-99) , 
4, 0.999411, 0, 0, 0.500709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440057,-99) , 
4, 0.998186, 0, 0, 0.482639,-99) , 
4, 0.999048, 0, 0, 0.499714,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0206492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556826,-99) , 
NN(
0, 
0, 
-1, -0.0722519, 0, -1, 0.485233,-99) , 
7, -951.286, 0, 0, 0.51219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498224,-99) , 
9, -2.21335, 1, 0, 0.502619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490057,-99) , 
9, -1.60089, 0, 0, 0.494128,-99) , 
5, -0.0711238, 1, 0, 0.499159,-99) , 
8, 1.5714, 0, 0, 0.500363,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0295989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495263,-99) , 
9, 0.501583, 1, 0, 0.504215,-99) , 
8, -1.28561, 1, 0, 0.506103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486258,-99) , 
10, -1.06566, 0, 0, 0.503702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481472,-99) , 
9, -1.26527, 0, 0, 0.487332,-99) , 
9, -2.54349, 1, 0, 0.495034,-99) , 
10, 0.534474, 0, 0, 0.500638,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0239403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488961,-99) , 
7, -951.274, 1, 0, 0.511639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494689,-99) , 
10, 0.266769, 0, 0, 0.504518,-99) , 
NN(
0, 
0, 
-1, -0.999969, 0, -1, 0.49196,-99) , 
9, -1.49463, 1, 0, 0.498706,-99) , 
9, 2.91838, 0, 0, 0.499988,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0178036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142911, 1, 1, 0.515519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495868,-99) , 
5, -0.720655, 0, 0, 0.512532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490123,-99) , 
0, 0.499994, 1, 0, 0.513488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496278,-99) , 
5, -0.359684, 1, 0, 0.502161,-99) , 
5, 0.494067, 0, 0, 0.503682,-99) , 
2, 0.0713933, 0, 0, 0.505292,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0133711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492812,-99) , 
0, 0.498091, 0, 0, 0.517894,-99) , 
NN(
NN(
0, 
0, 
-1, -20.9575, 1, 1, 0.505251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483992,-99) , 
8, -2.07484, 0, 0, 0.50462,-99) , 
8, 1.85708, 0, 0, 0.505393,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0187196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.456348, 0, 1, 0.508612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489104,-99) , 
10, 1.61765, 0, 0, 0.498577,-99) , 
9, -1.44334, 1, 0, 0.504018,-99) , 
NN(
0, 
0, 
-1, -0.892681, 1, -1, 0.488242,-99) , 
10, 4.30881, 1, 0, 0.502571,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0146376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492883,-99) , 
9, -3.04263, 1, 0, 0.510438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496244,-99) , 
7, -948.87, 0, 0, 0.50019,-99) , 
9, -2.6978, 1, 0, 0.502271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482265,-99) , 
6, 0.0237891, 1, 0, 0.501464,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.030842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480918,-99) , 
4, 0.999995, 0, 0, 0.511883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475922,-99) , 
4, 0.999905, 0, 0, 0.50715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496694,-99) , 
10, -0.357521, 0, 0, 0.50479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487363,-99) , 
10, 0.731081, 0, 0, 0.495323,-99) , 
9, -2.22657, 1, 0, 0.499375,-99) , 
5, -0.533102, 1, 0, 0.501631,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0351021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476424,-99) , 
4, 0.999991, 0, 0, 0.515916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470003,-99) , 
4, 0.999905, 0, 0, 0.509962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49887,-99) , 
10, -0.199974, 0, 0, 0.50864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48934,-99) , 
5, 0.464522, 0, 0, 0.491925,-99) , 
9, -2.00192, 1, 0, 0.50038,-99) , 
5, -0.532298, 1, 0, 0.503168,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0178556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.212313, 1, 1, 0.532077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481476,-99) , 
9, -3.83411, 1, 0, 0.497335,-99) , 
10, -1.11266, 0, 0, 0.512315,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.503541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483941,-99) , 
4, 0.999048, 0, 0, 0.502695,-99) , 
9, -2.63399, 1, 0, 0.504735,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0195135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.86128, 1, 1, 0.508194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47588,-99) , 
9, 0.417854, 1, 0, 0.506984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49936,-99) , 
10, 5.04861, 1, 0, 0.509163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479158,-99) , 
7, -951.274, 1, 0, 0.498065,-99) , 
9, 0.763513, 1, 0, 0.505257,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0315407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0298858, 0, 1, 0.511819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48403,-99) , 
10, 2.72159, 0, 0, 0.496673,-99) , 
9, -1.10264, 1, 0, 0.506447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470141,-99) , 
8, 1.77551, 1, 0, 0.504762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480383,-99) , 
8, 1.63944, 0, 0, 0.489719,-99) , 
7, -948.87, 1, 0, 0.498328,-99) , 
8, 0.142874, 1, 0, 0.502592,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.01808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478893,-99) , 
5, -0.814671, 0, 0, 0.510209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496252,-99) , 
9, 1.99217, 0, 0, 0.499119,-99) , 
6, 0.00680063, 0, 0, 0.501938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483656,-99) , 
6, 0.0238024, 1, 0, 0.501198,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0149888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497975,-99) , 
10, -0.702576, 0, 0, 0.51031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48537,-99) , 
10, 0.307945, 0, 0, 0.496747,-99) , 
9, -2.3658, 1, 0, 0.500774,-99) , 
9, 4.34365, 0, 0, 0.501795,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0110891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491582,-99) , 
9, -3.85894, 1, 0, 0.512205,-99) , 
NN(
NN(
0, 
0, 
-1, -0.54361, 0, 1, 0.514996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48567,-99) , 
10, 3.69382, 1, 0, 0.499102,-99) , 
8, -1.28572, 1, 0, 0.50042,-99) , 
9, -3.27169, 1, 0, 0.501534,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0257213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484026,-99) , 
10, -1.89358, 0, 0, 0.514317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416697,-99) , 
7, -1.41512, 0, 0, 0.504363,-99) , 
NN(
0, 
0, 
-1, -1.5714, 0, -1, 0.495548,-99) , 
7, -950.098, 0, 0, 0.49917,-99) , 
9, -3.30205, 1, 0, 0.500555,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0143304);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495607,-99) , 
9, -2.03417, 1, 0, 0.499957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472752,-99) , 
6, 0.0238024, 1, 0, 0.498883,-99) , 
8, -1.85714, 1, 0, 0.499923,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0204776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487465,-99) , 
9, -3.01311, 1, 0, 0.516075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475147,-99) , 
7, -951.286, 1, 0, 0.49318,-99) , 
10, -1.41516, 0, 0, 0.506356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488155,-99) , 
9, -0.76103, 1, 0, 0.496735,-99) , 
9, 4.16742, 0, 0, 0.49804,-99) , 
9, -2.73239, 1, 0, 0.499631,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0158034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497531,-99) , 
10, -1.48428, 0, 0, 0.520673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492083,-99) , 
10, 0.0612019, 0, 0, 0.501252,-99) , 
9, -3.1507, 1, 0, 0.503159,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.486503,-99) , 
5, 0.68371, 1, 0, 0.502243,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0149429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494963,-99) , 
0, 0.5019, 0, 0, 0.502922,-99) , 
0, 0.494281, 1, 0, 0.507632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496434,-99) , 
2, -0.152483, 1, 0, 0.498746,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.488287,-99) , 
3, 4.74401, 1, 0, 0.497132,-99) , 
2, 0.0713938, 0, 0, 0.499023,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0197526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490417,-99) , 
7, -951.286, 1, 0, 0.509992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478403,-99) , 
5, 0.303294, 1, 0, 0.501363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486272,-99) , 
9, -1.80443, 0, 0, 0.490669,-99) , 
10, 0.0258795, 0, 0, 0.49803,-99) , 
9, -3.33543, 1, 0, 0.499062,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0238238);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497091,-99) , 
10, -1.13768, 0, 0, 0.505877,-99) , 
NN(
0, 
0, 
-1, -0.0296564, 0, -1, 0.488347,-99) , 
0, 0.503805, 1, 0, 0.504113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489592,-99) , 
8, 1.09521, 1, 0, 0.503908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476547,-99) , 
8, 1.36723, 0, 0, 0.486812,-99) , 
7, -951.256, 1, 0, 0.496631,-99) , 
8, 0.142839, 1, 0, 0.500551,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0160175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497977,-99) , 
9, -3.54546, 1, 0, 0.506394,-99) , 
10, -0.780689, 0, 0, 0.512824,-99) , 
NN(
NN(
0, 
0, 
-1, 2.63691, 0, 1, 0.515506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487523,-99) , 
7, -951.203, 1, 0, 0.495336,-99) , 
8, -1.28567, 1, 0, 0.49692,-99) , 
9, -2.68355, 1, 0, 0.500125,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.019825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492546,-99) , 
9, -3.01191, 1, 0, 0.523232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485599,-99) , 
8, -1.17309, 0, 0, 0.498793,-99) , 
10, -1.37128, 0, 0, 0.512052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495308,-99) , 
10, -0.391345, 1, 0, 0.497413,-99) , 
8, -1.57134, 1, 0, 0.498761,-99) , 
9, -2.7431, 1, 0, 0.501243,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.012995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499454,-99) , 
3, 4.66962, 1, 0, 0.518127,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.508669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496941,-99) , 
2, -0.120757, 1, 0, 0.498994,-99) , 
2, 0.0308129, 0, 0, 0.501806,-99) , 
2, -0.214032, 1, 0, 0.502756,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0174087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.02956, 1, 1, 0.526733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482933,-99) , 
5, 0.518734, 1, 0, 0.495761,-99) , 
10, -1.32894, 0, 0, 0.512707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497191,-99) , 
8, -0.713963, 1, 0, 0.506644,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.49701,-99) , 
7, -950.098, 0, 0, 0.500807,-99) , 
9, -2.68355, 1, 0, 0.503192,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0194654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.12861, 0, 1, 0.50871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491577,-99) , 
7, -951.275, 0, 0, 0.497442,-99) , 
9, -0.67825, 1, 0, 0.504602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48339,-99) , 
2, -0.153174, 0, 0, 0.501167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467977,-99) , 
5, 0.0224484, 0, 0, 0.48281,-99) , 
2, 0.0712876, 1, 0, 0.495003,-99) , 
3, 4.74401, 1, 0, 0.50277,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0154866);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522805,-99) , 
NN(
NN(
0, 
0, 
-1, 1.61079, 0, 1, 0.506832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495099,-99) , 
4, 0.999048, 1, 0, 0.498179,-99) , 
7, -951.256, 1, 0, 0.503104,-99) , 
8, -1.85711, 1, 0, 0.503977,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0210241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.62801, 1, 1, 0.50669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486205,-99) , 
5, 0.21515, 1, 0, 0.504923,-99) , 
NN(
NN(
0, 
0, 
-1, -0.192944, 1, 1, 0.506966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479069,-99) , 
9, -1.31639, 0, 0, 0.486383,-99) , 
9, -2.35204, 1, 0, 0.49804,-99) , 
10, 0.506964, 0, 0, 0.501572,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0138554);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0224045, 0, 1, 0.518612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4947,-99) , 
3, 1.41933, 1, 0, 0.498853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482287,-99) , 
3, 9.39852, 1, 0, 0.498267,-99) , 
8, 1.85712, 0, 0, 0.499453,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.00688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49572,-99) , 
3, 4.72271, 1, 0, 0.513869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498615,-99) , 
1, 0.0101876, 0, 0, 0.499424,-99) , 
2, -0.213988, 1, 0, 0.500249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48441,-99) , 
6, 0.0237708, 1, 0, 0.499609,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0161182);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493831,-99) , 
10, -0.877491, 0, 0, 0.510103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496471,-99) , 
0, 0.503804, 0, 0, 0.498082,-99) , 
9, -2.50406, 1, 0, 0.500851,-99) , 
8, -1.85714, 1, 0, 0.501701,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0129438);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.212021, 1, 1, 0.504838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485143,-99) , 
5, 0.375409, 1, 0, 0.503575,-99) , 
NN(
0, 
0, 
-1, 0.072551, 1, -1, 0.48861,-99) , 
5, -0.158705, 0, 0, 0.495727,-99) , 
3, 4.75611, 1, 0, 0.503108,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0150266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499098,-99) , 
4, 0.999987, 0, 0, 0.503825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462938,-99) , 
7, -951.286, 0, 0, 0.485544,-99) , 
4, 0.999728, 0, 0, 0.501996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470557,-99) , 
4, 0.998571, 0, 0, 0.500883,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0304902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4007, 0, 1, 0.514026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370269,-99) , 
5, 0.209555, 1, 0, 0.453523,-99) , 
7, -1.05744, 0, 0, 0.504494,-99) , 
NN(
NN(
0, 
0, 
-1, 5.13266, 1, 1, 0.512826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472685,-99) , 
9, -0.961794, 1, 0, 0.491398,-99) , 
9, 1.09179, 0, 0, 0.495364,-99) , 
7, -951.275, 0, 0, 0.499266,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0115534);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494525,-99) , 
10, -1.29849, 0, 0, 0.508003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497108,-99) , 
6, 0.0102009, 0, 0, 0.498663,-99) , 
9, -2.86554, 1, 0, 0.50022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486095,-99) , 
6, 0.0238024, 1, 0, 0.499645,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0143414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499912,-99) , 
5, -0.627749, 1, 0, 0.50243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468215,-99) , 
7, -951.256, 1, 0, 0.487698,-99) , 
10, 3.53201, 1, 0, 0.500569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445869,-99) , 
5, -0.451901, 0, 0, 0.468205,-99) , 
7, -951.286, 0, 0, 0.488697,-99) , 
8, -1.28567, 0, 0, 0.499259,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0113336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.218166, 0, 1, 0.503634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457473,-99) , 
8, -0.428739, 0, 0, 0.48989,-99) , 
4, 0.999796, 0, 0, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482174,-99) , 
4, 0.998571, 0, 0, 0.501191,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0176737);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497445,-99) , 
5, -0.352446, 1, 0, 0.515911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484312,-99) , 
5, 0.0289392, 0, 0, 0.493945,-99) , 
7, -951.203, 0, 0, 0.502761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485644,-99) , 
10, 2.95248, 1, 0, 0.498518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473043,-99) , 
6, 0.0238024, 1, 0, 0.497506,-99) , 
8, -0.428583, 1, 0, 0.499222,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0139101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.30613, 1, 1, 0.517538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479515,-99) , 
0, 0.49292, 1, 0, 0.494175,-99) , 
0, 0.496186, 0, 0, 0.509265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498251,-99) , 
10, -0.0605894, 0, 0, 0.508866,-99) , 
NN(
0, 
0, 
-1, 3.12751, 1, -1, 0.495944,-99) , 
8, -1.28572, 1, 0, 0.497391,-99) , 
2, -0.0712558, 1, 0, 0.499526,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0111943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485427,-99) , 
8, 1.97958, 1, 0, 0.497318,-99) , 
7, -951.286, 0, 0, 0.512244,-99) , 
NN(
NN(
0, 
0, 
-1, 0.995438, 0, 1, 0.51008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49749,-99) , 
9, -3.43055, 1, 0, 0.498665,-99) , 
0, 0.503804, 0, 0, 0.49982,-99) , 
8, 1.57142, 0, 0, 0.500969,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0102586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495648,-99) , 
3, 4.45498, 1, 0, 0.51576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498692,-99) , 
5, -0.5331, 1, 0, 0.50115,-99) , 
NN(
0, 
0, 
-1, -0.0303556, 1, -1, 0.484271,-99) , 
0, 0.503804, 1, 0, 0.49955,-99) , 
2, 0.214126, 0, 0, 0.500484,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.010108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473129,-99) , 
8, 2.0476, 1, 0, 0.493883,-99) , 
7, -951.286, 0, 0, 0.512249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491619,-99) , 
4, 0.999524, 0, 0, 0.499873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475695,-99) , 
9, -0.511788, 0, 0, 0.488984,-99) , 
8, 1.13603, 1, 0, 0.498938,-99) , 
8, 1.5714, 0, 0, 0.50017,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.023814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499602,-99) , 
10, 0.264715, 0, 0, 0.507283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490692,-99) , 
5, 0.121693, 0, 0, 0.495704,-99) , 
9, -1.6776, 1, 0, 0.502064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480534,-99) , 
8, 1.47621, 0, 0, 0.487317,-99) , 
8, -0.99992, 1, 0, 0.492892,-99) , 
9, 0.730904, 1, 0, 0.500266,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0195169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496011,-99) , 
10, -1.64688, 0, 0, 0.512856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499114,-99) , 
8, 0.428585, 1, 0, 0.504835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476392,-99) , 
5, 0.211223, 0, 0, 0.493115,-99) , 
10, -0.177132, 0, 0, 0.501802,-99) , 
9, -3.33663, 1, 0, 0.50275,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0270242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.26514, 1, 1, 0.513046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483232,-99) , 
7, -951.256, 1, 0, 0.498226,-99) , 
9, 0.663479, 1, 0, 0.506437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497562,-99) , 
10, -0.112876, 0, 0, 0.505988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476331,-99) , 
5, 0.214105, 0, 0, 0.486134,-99) , 
9, -2.00848, 1, 0, 0.49923,-99) , 
10, 0.772462, 0, 0, 0.502508,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.015335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.11853, 0, 1, 0.514317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485455,-99) , 
9, -2.91482, 1, 0, 0.509094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496172,-99) , 
4, 0.999955, 1, 0, 0.499612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472824,-99) , 
4, 0.999048, 0, 0, 0.49845,-99) , 
9, -2.7431, 1, 0, 0.500455,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0156991);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.2381, 1, 1, 0.520786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488363,-99) , 
10, 4.95529, 1, 0, 0.504547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467611,-99) , 
8, -2.07483, 0, 0, 0.503501,-99) , 
8, 1.85712, 0, 0, 0.504511,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.014263);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494211,-99) , 
9, -2.97524, 1, 0, 0.518171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480254,-99) , 
5, 0.264204, 0, 0, 0.496439,-99) , 
10, -1.31437, 0, 0, 0.508031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497106,-99) , 
1, -0.0124506, 1, 0, 0.498425,-99) , 
6, 0.0237708, 0, 0, 0.499155,-99) , 
9, -2.6978, 1, 0, 0.50091,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.00723743);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0195806, 0, 1, 0.518271,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0849333, 1, 1, 0.509315,-99) , 
NN(
0, 
0, 
-1, 1.62582, 1, -1, 0.499263,-99) , 
9, -2.61768, 1, 0, 0.50157,-99) , 
8, 1.85712, 0, 0, 0.502549,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0149302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.444885, 1, 1, 0.523217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49336,-99) , 
10, 1.81139, 0, 0, 0.49987,-99) , 
7, -951.286, 0, 0, 0.509309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48784,-99) , 
10, 4.05653, 1, 0, 0.499856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471681,-99) , 
6, 0.0238024, 1, 0, 0.498739,-99) , 
8, -0.428575, 1, 0, 0.5022,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0267804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.721965, 0, 1, 0.514987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448135,-99) , 
10, 2.20628, 0, 0, 0.487308,-99) , 
9, -0.176029, 1, 0, 0.508552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494994,-99) , 
7, -951.274, 1, 0, 0.503451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480741,-99) , 
8, 0.318292, 0, 0, 0.491553,-99) , 
10, -0.0987876, 0, 0, 0.500793,-99) , 
8, -0.42859, 1, 0, 0.503314,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0253042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497483,-99) , 
9, 0.348043, 1, 0, 0.506136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468738,-99) , 
9, -2.96319, 1, 0, 0.488916,-99) , 
10, -0.323216, 0, 0, 0.503393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490251,-99) , 
9, -3.04623, 0, 0, 0.505248,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.489113,-99) , 
10, -0.61333, 1, 0, 0.496533,-99) , 
5, 0.122474, 1, 0, 0.501223,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0188711);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515399,-99) , 
NN(
NN(
0, 
0, 
-1, 0.241968, 0, 1, 0.50788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491105,-99) , 
5, 0.297696, 0, 0, 0.493423,-99) , 
9, -1.71843, 1, 0, 0.500139,-99) , 
9, 4.46349, 0, 0, 0.501261,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0186468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237708, 0, 1, 0.506128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480178,-99) , 
9, -2.0218, 1, 0, 0.49829,-99) , 
10, 0.463472, 0, 0, 0.501832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517649,-99) , 
NN(
0, 
0, 
-1, 1.3946, 1, -1, 0.475464,-99) , 
7, -951.286, 0, 0, 0.492146,-99) , 
8, 1.28572, 1, 0, 0.500502,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0139971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495329,-99) , 
6, 0.0154903, 1, 0, 0.513237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495469,-99) , 
7, -950.098, 0, 0, 0.500121,-99) , 
6, 0.0113344, 0, 0, 0.501382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480144,-99) , 
6, 0.0238024, 1, 0, 0.500522,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0102045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480601,-99) , 
4, 0.99966, 0, 0, 0.50052,-99) , 
4, 0.998571, 1, 0, 0.50141,-99) , 
8, 2.14284, 0, 0, 0.502101,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0161191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494775,-99) , 
5, -0.0727248, 1, 0, 0.509217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493882,-99) , 
9, -1.55369, 1, 0, 0.498669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471978,-99) , 
7, -951.286, 0, 0, 0.490036,-99) , 
8, -1.28572, 0, 0, 0.497718,-99) , 
0, 0.491424, 1, 0, 0.498578,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.016136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49233, 1, 1, 0.513035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483006,-99) , 
0, 0.49088, 0, 0, 0.50074,-99) , 
2, 0.0713802, 0, 0, 0.503373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487868,-99) , 
5, -0.625832, 0, 0, 0.501184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492714,-99) , 
4, 0.999524, 1, 0, 0.494294,-99) , 
8, -0.428549, 1, 0, 0.496535,-99) , 
0, 0.495233, 1, 0, 0.498273,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0160723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496401,-99) , 
4, 0.99999, 0, 0, 0.502288,-99) , 
NN(
0, 
0, 
-1, -0.714017, 0, -1, 0.484432,-99) , 
4, 0.999796, 0, 0, 0.500052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47156,-99) , 
4, 0.998572, 0, 0, 0.499021,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0141964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49459,-99) , 
3, 2.89517, 1, 0, 0.515514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483511,-99) , 
0, 0.498092, 0, 0, 0.494195,-99) , 
3, 4.26262, 1, 0, 0.506617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486491,-99) , 
10, 4.62386, 1, 0, 0.501566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494035,-99) , 
5, 0.581417, 0, 0, 0.495285,-99) , 
8, 0.142897, 0, 0, 0.498278,-99) , 
2, 0.0714619, 0, 0, 0.499787,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0209445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.67541, 0, 1, 0.540379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488772,-99) , 
5, -0.559022, 1, 0, 0.49931,-99) , 
9, -1.86545, 1, 0, 0.504387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494633,-99) , 
4, 0.999048, 1, 0, 0.496502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467436,-99) , 
0, 0.504757, 1, 0, 0.494875,-99) , 
5, -0.158138, 1, 0, 0.499964,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0112609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482399,-99) , 
7, -951.286, 0, 0, 0.515479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499957,-99) , 
3, 9.4271, 0, 0, 0.501314,-99) , 
4, 0.999524, 1, 0, 0.502573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485964,-99) , 
3, 2.59533, 0, 0, 0.497933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473071,-99) , 
5, 0.0200029, 1, 0, 0.489579,-99) , 
0, 0.492376, 0, 0, 0.501231,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0163394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499781,-99) , 
10, -0.236919, 0, 0, 0.512397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48545,-99) , 
10, 1.33771, 0, 0, 0.49888,-99) , 
9, -1.06014, 1, 0, 0.507641,-99) , 
NN(
NN(
0, 
0, 
-1, 0.068562, 0, 1, 0.50451,-99) , 
NN(
0, 
0, 
-1, 0.300116, 1, -1, 0.493787,-99) , 
3, 4.4052, 1, 0, 0.502234,-99) , 
8, 0.142869, 1, 0, 0.505085,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0103283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.502088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470756,-99) , 
4, 0.99941, 0, 0, 0.501218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439526,-99) , 
4, 0.998186, 0, 0, 0.489662,-99) , 
4, 0.999048, 0, 0, 0.500574,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.00823152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47743,-99) , 
6, 0.0238024, 1, 0, 0.501025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47735,-99) , 
5, -0.81311, 0, 0, 0.500313,-99) , 
9, 4.49462, 0, 0, 0.501618,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0136345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498929,-99) , 
9, -1.80691, 1, 0, 0.502762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479966,-99) , 
8, -1.85714, 0, 0, 0.501762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489969,-99) , 
9, -3.06035, 0, 0, 0.502792,-99) , 
NN(
0, 
0, 
-1, -2.0001, 0, -1, 0.47483,-99) , 
10, -0.416989, 1, 0, 0.491365,-99) , 
5, 0.495567, 1, 0, 0.500375,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0146056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.256, 1, 1, 0.508864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489084,-99) , 
8, 0.42873, 0, 0, 0.499002,-99) , 
0, 0.494281, 0, 0, 0.506912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521399,-99) , 
NN(
0, 
0, 
-1, -2.0349, 1, -1, 0.495871,-99) , 
8, 0.758392, 0, 0, 0.497575,-99) , 
10, 0.322481, 0, 0, 0.502754,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0144539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.444028, 0, 1, 0.519093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486001,-99) , 
3, 4.42818, 1, 0, 0.500472,-99) , 
0, 0.497138, 0, 0, 0.511173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491549,-99) , 
0, 0.494417, 0, 0, 0.49975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484261,-99) , 
2, 0.0780823, 0, 0, 0.4901,-99) , 
0, 0.5019, 1, 0, 0.497978,-99) , 
2, -0.0714552, 1, 0, 0.500381,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0148188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497835,-99) , 
3, 4.11376, 0, 0, 0.501669,-99) , 
NN(
0, 
0, 
-1, 0.999531, 1, -1, 0.478672,-99) , 
4, 0.999683, 0, 0, 0.500054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45664,-99) , 
7, -951.286, 0, 0, 0.487067,-99) , 
4, 0.999048, 0, 0, 0.499332,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0112704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497,-99) , 
2, 0.0305611, 0, 0, 0.500275,-99) , 
2, -0.214128, 1, 0, 0.501184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484957,-99) , 
4, 0.998571, 0, 0, 0.500595,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0100733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00906689, 0, 1, 0.504239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487177,-99) , 
5, -0.906504, 0, 0, 0.503645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483178,-99) , 
6, 0.0238024, 1, 0, 0.502815,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0184154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471466,-99) , 
4, 0.999411, 0, 0, 0.499712,-99) , 
9, -2.97819, 1, 0, 0.501465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483639,-99) , 
9, -2.77237, 0, 0, 0.501342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465168,-99) , 
9, -1.53077, 0, 0, 0.478196,-99) , 
10, -0.403111, 1, 0, 0.491356,-99) , 
5, 0.309555, 1, 0, 0.499237,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0139149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494711,-99) , 
5, -0.55188, 0, 0, 0.514106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495132,-99) , 
0, 0.489519, 1, 0, 0.495897,-99) , 
3, 0.532789, 1, 0, 0.497303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475249,-99) , 
3, 9.39852, 1, 0, 0.496534,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0154109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499188,-99) , 
2, -0.0164955, 1, 0, 0.505616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49332,-99) , 
0, 0.492376, 1, 0, 0.495506,-99) , 
3, 1.42897, 1, 0, 0.499035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479618,-99) , 
3, 9.40736, 1, 0, 0.498357,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0125461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.088966, 0, 1, 0.506495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495828,-99) , 
8, 1.85715, 0, 0, 0.497333,-99) , 
3, 1.74306, 1, 0, 0.501316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482739,-99) , 
3, 8.72917, 1, 0, 0.50048,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.00796486);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.14274, 0, 1, 0.51639,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0665286, 1, 1, 0.508377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480898,-99) , 
4, 0.999524, 0, 0, 0.499539,-99) , 
2, 0.0509804, 0, 0, 0.50107,-99) , 
2, 0.214242, 0, 0, 0.501951,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0197445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49203,-99) , 
9, -3.4122, 0, 0, 0.518834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475265,-99) , 
4, 0.999783, 0, 0, 0.502291,-99) , 
5, 0.399104, 0, 0, 0.504978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498864,-99) , 
8, 0.904651, 0, 0, 0.507911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491566,-99) , 
9, -2.60369, 1, 0, 0.494315,-99) , 
5, -0.534533, 1, 0, 0.497592,-99) , 
8, -0.142874, 1, 0, 0.500734,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.00858553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.167002, 0, 1, 0.524933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476854,-99) , 
3, 6.7476, 1, 0, 0.500062,-99) , 
2, -0.213611, 1, 0, 0.501379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480331,-99) , 
3, 9.40736, 1, 0, 0.500646,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0133755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50754, 1, 1, 0.524066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478986,-99) , 
5, -0.0738678, 0, 0, 0.493083,-99) , 
3, 4.24379, 1, 0, 0.511101,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.49645,-99) , 
2, -0.0714552, 1, 0, 0.499116,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0108569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.77101, 1, 1, 0.512891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485452,-99) , 
8, -0.999947, 0, 0, 0.508305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498164,-99) , 
9, -3.01514, 1, 0, 0.499866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488349,-99) , 
10, 4.59922, 1, 0, 0.498901,-99) , 
2, 0.0712876, 0, 0, 0.500601,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.00765054);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499896,-99) , 
10, 1.54243, 0, 0, 0.502068,-99) , 
NN(
0, 
0, 
-1, -951.256, 1, -1, 0.491936,-99) , 
9, 0.763513, 1, 0, 0.50012,-99) , 
8, 2.14282, 0, 0, 0.500683,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0110969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497596,-99) , 
5, -0.252953, 0, 0, 0.50239,-99) , 
1, -0.0124678, 1, 0, 0.503149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487265,-99) , 
6, 0.0238024, 1, 0, 0.50251,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0105808);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51526,-99) , 
NN(
NN(
0, 
0, 
-1, 0.402102, 1, 1, 0.513934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468006,-99) , 
4, 0.999683, 0, 0, 0.501904,-99) , 
4, 0.999524, 1, 0, 0.503087,-99) , 
8, -1.85715, 1, 0, 0.503616,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0145913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484976,-99) , 
3, 2.15629, 1, 0, 0.521773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458361,-99) , 
4, 0.999683, 0, 0, 0.50189,-99) , 
4, 0.999524, 1, 0, 0.50385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488354,-99) , 
3, 8.71744, 1, 0, 0.503144,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.00987335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498147,-99) , 
10, 5.51473, 1, 0, 0.511916,-99) , 
NN(
NN(
0, 
0, 
-1, -0.558991, 1, 1, 0.502616,-99) , 
NN(
0, 
0, 
-1, -0.786157, 0, -1, 0.47763,-99) , 
5, -0.719344, 0, 0, 0.501053,-99) , 
9, 2.69967, 0, 0, 0.502192,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0174192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490617,-99) , 
8, -0.142878, 0, 0, 0.49936,-99) , 
9, -1.86545, 1, 0, 0.503689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493414,-99) , 
7, -950.098, 1, 0, 0.498767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479919,-99) , 
0, 0.503804, 1, 0, 0.497078,-99) , 
5, -0.256439, 1, 0, 0.500227,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0104635);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499861,-99) , 
8, -0.422717, 1, 0, 0.501583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48588,-99) , 
7, -951.286, 0, 0, 0.495315,-99) , 
8, -0.551009, 0, 0, 0.499736,-99) , 
8, 2.14285, 0, 0, 0.500246,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.010032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498209,-99) , 
3, 8.56798, 0, 0, 0.499587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471966,-99) , 
4, 0.99932, 0, 0, 0.498523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466011,-99) , 
4, 0.998572, 0, 0, 0.497375,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.014598);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496705,-99) , 
10, -0.213821, 0, 0, 0.506106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496218,-99) , 
5, 0.213929, 0, 0, 0.497925,-99) , 
9, -2.08126, 1, 0, 0.500684,-99) , 
8, -1.8571, 1, 0, 0.501314,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0143897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493207,-99) , 
8, -1.47616, 0, 0, 0.506291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475776,-99) , 
0, 0.502308, 1, 0, 0.497606,-99) , 
8, 1.00001, 1, 0, 0.504543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50997,-99) , 
NN(
0, 
0, 
-1, -0.0700684, 0, -1, 0.495555,-99) , 
0, 0.490517, 1, 0, 0.498434,-99) , 
0, 0.495233, 0, 0, 0.502998,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0188187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47925,-99) , 
10, -0.820808, 0, 0, 0.523562,-99) , 
NN(
0, 
0, 
-1, 0.0238024, 0, 1, 0.502062,-99) , 
9, -2.34462, 1, 0, 0.504796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480968,-99) , 
10, -0.674568, 1, 0, 0.493223,-99) , 
9, -1.55748, 0, 0, 0.496638,-99) , 
5, 0.121677, 1, 0, 0.502216,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0164562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494527,-99) , 
8, -0.999727, 1, 0, 0.498764,-99) , 
4, 0.999524, 1, 0, 0.501943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483104,-99) , 
4, 0.999909, 0, 0, 0.498407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451966,-99) , 
4, 0.999048, 0, 0, 0.496192,-99) , 
7, -948.87, 0, 0, 0.498648,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.00592856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499287,-99) , 
3, 8.5394, 0, 0, 0.500238,-99) , 
4, 0.999048, 1, 0, 0.501082,-99) , 
NN(
0, 
0, 
-1, 4.54202, 1, -1, 0.486968,-99) , 
2, 0.214132, 1, 0, 0.500309,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0243368);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485263,-99) , 
4, 0.999995, 0, 0, 0.509403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472206,-99) , 
4, 0.999905, 0, 0, 0.504615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496949,-99) , 
5, -0.18048, 1, 0, 0.502454,-99) , 
NN(
0, 
0, 
-1, -0.629132, 0, -1, 0.494508,-99) , 
9, -2.19482, 1, 0, 0.497995,-99) , 
5, -0.534873, 1, 0, 0.499917,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0164222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0713945, 1, 1, 0.503834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478602,-99) , 
5, 0.680824, 1, 0, 0.502908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481433,-99) , 
9, -3.12074, 0, 0, 0.499371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4755,-99) , 
5, 0.0333293, 0, 0, 0.4934,-99) , 
10, -0.837427, 0, 0, 0.501247,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0244001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463651,-99) , 
10, -1.56397, 0, 0, 0.500278,-99) , 
9, -3.86653, 1, 0, 0.502669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475912,-99) , 
4, 0.999995, 0, 0, 0.498693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460078,-99) , 
4, 0.999905, 0, 0, 0.493701,-99) , 
5, -0.532293, 0, 0, 0.500087,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.00876924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489222,-99) , 
0, 0.498363, 0, 0, 0.49599,-99) , 
3, 4.4825, 1, 0, 0.501761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476342,-99) , 
5, -0.348932, 1, 0, 0.487798,-99) , 
0, 0.491424, 0, 0, 0.500755,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00872404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498687,-99) , 
0, 0.491424, 1, 0, 0.50036,-99) , 
NN(
0, 
0, 
-1, -0.142817, 0, -1, 0.486373,-99) , 
4, 0.999728, 0, 0, 0.498956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483482,-99) , 
4, 0.998572, 0, 0, 0.498393,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0230659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474004,-99) , 
10, -1.1636, 0, 0, 0.501016,-99) , 
9, -3.83411, 1, 0, 0.508254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493914,-99) , 
4, 0.999955, 1, 0, 0.497697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475869,-99) , 
4, 0.999048, 0, 0, 0.496767,-99) , 
9, -2.63399, 1, 0, 0.49922,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00527294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49989,-99) , 
2, 0.214757, 0, 0, 0.500831,-99) , 
3, 8.43645, 0, 0, 0.501748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479088,-99) , 
4, 0.998571, 0, 0, 0.500926,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0170046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238024, 0, 1, 0.505086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47886,-99) , 
7, -951.286, 0, 0, 0.495629,-99) , 
5, 0.209529, 1, 0, 0.503273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479253,-99) , 
5, 0.306552, 0, 0, 0.490697,-99) , 
9, -3.64128, 1, 0, 0.496417,-99) , 
10, -0.707647, 0, 0, 0.5019,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.00897684);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499622,-99) , 
2, -0.21035, 1, 0, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465949,-99) , 
4, 0.999683, 0, 0, 0.499805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464092,-99) , 
7, -951.286, 0, 0, 0.48661,-99) , 
4, 0.999524, 0, 0, 0.498569,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0103569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0234166, 0, 1, 0.515741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485872,-99) , 
0, 0.494281, 0, 0, 0.498349,-99) , 
7, -951.275, 0, 0, 0.505725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49674,-99) , 
9, -2.7268, 1, 0, 0.498266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474245,-99) , 
8, 2.14271, 1, 0, 0.497506,-99) , 
2, -0.0714547, 1, 0, 0.498994,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0070578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.469775, 0, 1, 0.517907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480363,-99) , 
3, 7.25869, 1, 0, 0.500405,-99) , 
3, 0.51575, 1, 0, 0.501664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486528,-99) , 
3, 8.84534, 1, 0, 0.501,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.00833007);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496822,-99) , 
9, -2.0182, 1, 0, 0.498872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483645,-99) , 
0, 0.490471, 0, 0, 0.498143,-99) , 
8, -1.85714, 1, 0, 0.498924,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0196993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.55556, 1, 1, 0.520899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491402,-99) , 
7, -951.275, 0, 0, 0.499818,-99) , 
8, 0.427886, 0, 0, 0.505878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540032,-99) , 
NN(
0, 
0, 
-1, -1.43267, 0, -1, 0.493639,-99) , 
9, -3.871, 1, 0, 0.495897,-99) , 
5, -0.5323, 1, 0, 0.498802,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0163073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489557,-99) , 
8, -1.13927, 0, 0, 0.513062,-99) , 
NN(
NN(
0, 
0, 
-1, 0.142903, 1, 1, 0.50384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486962,-99) , 
9, -2.05841, 0, 0, 0.491882,-99) , 
10, -0.177132, 0, 0, 0.500746,-99) , 
9, -3.33543, 1, 0, 0.501809,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.00996746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494356,-99) , 
7, -951.286, 1, 0, 0.511999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466938,-99) , 
10, -1.56467, 0, 0, 0.499438,-99) , 
9, -3.8683, 1, 0, 0.501074,-99) , 
9, 2.69753, 0, 0, 0.502213,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0170569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492722,-99) , 
8, -0.600016, 0, 0, 0.498978,-99) , 
5, 0.0037996, 1, 0, 0.504972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495051,-99) , 
8, -0.713839, 1, 0, 0.501628,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.493632,-99) , 
7, -950.098, 0, 0, 0.49678,-99) , 
9, -2.69985, 1, 0, 0.498403,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0115565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495217,-99) , 
3, 4.49027, 1, 0, 0.517781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491328,-99) , 
5, 0.216023, 1, 0, 0.511716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498744,-99) , 
7, -951.286, 0, 0, 0.506131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484314,-99) , 
0, 0.501401, 1, 0, 0.49873,-99) , 
5, -0.441747, 1, 0, 0.501315,-99) , 
0, 0.502852, 0, 0, 0.502814,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0133751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.315338, 0, 1, 0.521537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486445,-99) , 
8, 2.25168, 1, 0, 0.511843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477938,-99) , 
5, 0.482468, 1, 0, 0.504292,-99) , 
NN(
0, 
0, 
-1, -0.0716958, 0, -1, 0.496046,-99) , 
0, 0.500947, 0, 0, 0.498188,-99) , 
8, 1.5714, 0, 0, 0.499465,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0251513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494254,-99) , 
8, 0.142889, 0, 0, 0.502253,-99) , 
6, 0.0237968, 0, 0, 0.503636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474265,-99) , 
9, -1.681, 1, 0, 0.505737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488966,-99) , 
9, -3.85644, 1, 0, 0.493345,-99) , 
10, -0.0607096, 0, 0, 0.497162,-99) , 
10, 0.585272, 0, 0, 0.500374,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0166275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496632,-99) , 
9, 0.487951, 1, 0, 0.505345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496681,-99) , 
9, -1.3164, 0, 0, 0.499507,-99) , 
10, 0.503541, 0, 0, 0.502081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511876,-99) , 
NN(
0, 
0, 
-1, 2.02041, 1, -1, 0.480531,-99) , 
7, -951.286, 0, 0, 0.492868,-99) , 
8, 1.28572, 1, 0, 0.500798,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00982573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488206,-99) , 
9, -3.86832, 1, 0, 0.513812,-99) , 
NN(
NN(
0, 
0, 
-1, -0.158669, 0, 1, 0.516234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498821,-99) , 
2, 0.0511668, 0, 0, 0.500455,-99) , 
2, 0.214405, 0, 0, 0.501339,-99) , 
9, -3.43055, 1, 0, 0.502267,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.02361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.21095, 0, 1, 0.511605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475607,-99) , 
10, 1.94041, 0, 0, 0.495959,-99) , 
9, -0.444976, 1, 0, 0.507314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493765,-99) , 
10, 4.78077, 1, 0, 0.510949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488991,-99) , 
9, -1.73831, 1, 0, 0.49572,-99) , 
5, -0.627625, 1, 0, 0.498324,-99) , 
8, 0.142884, 1, 0, 0.503056,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0135283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.212768, 1, 1, 0.505416,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484753,-99) , 
4, 0.999728, 0, 0, 0.50336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483461,-99) , 
4, 0.998571, 0, 0, 0.502635,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0114945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.444051, 1, 1, 0.508112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498293,-99) , 
0, 0.501809, 0, 0, 0.500944,-99) , 
0, 0.497455, 1, 0, 0.503626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508475,-99) , 
NN(
0, 
0, 
-1, -0.142894, 1, -1, 0.486533,-99) , 
5, -0.628846, 1, 0, 0.492032,-99) , 
0, 0.492376, 0, 0, 0.502425,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.011544);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490619,-99) , 
10, 3.73674, 1, 0, 0.501979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484353,-99) , 
2, -0.214291, 0, 0, 0.5011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510992,-99) , 
NN(
0, 
0, 
-1, -0.617734, 1, -1, 0.489198,-99) , 
10, 2.9001, 0, 0, 0.492994,-99) , 
0, 0.5019, 1, 0, 0.499534,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0135508);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.165447, 1, 1, 0.512965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493493,-99) , 
10, -0.954325, 0, 0, 0.506337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490539,-99) , 
2, -0.00445024, 1, 0, 0.497674,-99) , 
2, 0.0305233, 0, 0, 0.500205,-99) , 
2, -0.214291, 1, 0, 0.500926,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.00977876);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49896,-99) , 
4, 0.999932, 0, 0, 0.508347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497465,-99) , 
5, 0.587444, 0, 0, 0.498332,-99) , 
2, 0.0721689, 0, 0, 0.500046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473145,-99) , 
4, 0.998571, 0, 0, 0.49909,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0201214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.444617, 1, 1, 0.51708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461825,-99) , 
8, -1.89793, 0, 0, 0.498659,-99) , 
7, -951.286, 0, 0, 0.506136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493928,-99) , 
7, -20.9575, 1, 0, 0.501232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480229,-99) , 
8, 0.294846, 0, 0, 0.48918,-99) , 
10, -0.151371, 0, 0, 0.498735,-99) , 
8, -0.428558, 1, 0, 0.501147,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0157823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.734942, 0, 1, 0.503762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485375,-99) , 
9, 2.68203, 0, 0, 0.491197,-99) , 
9, -0.176269, 1, 0, 0.50041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489841,-99) , 
8, 1.66649, 0, 0, 0.50609,-99) , 
NN(
0, 
0, 
-1, 0.496187, 1, -1, 0.481874,-99) , 
7, -951.286, 0, 0, 0.491688,-99) , 
8, 0.999992, 1, 0, 0.49866,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0112581);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519526,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490305,-99) , 
4, 0.999524, 0, 0, 0.504145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495906,-99) , 
8, -1.77552, 1, 0, 0.496868,-99) , 
0, 0.495233, 1, 0, 0.498726,-99) , 
8, 2.14282, 0, 0, 0.499431,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0096775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0710831, 0, 1, 0.506535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487188,-99) , 
3, 2.13046, 0, 0, 0.49433,-99) , 
5, -0.444057, 0, 0, 0.501947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496709,-99) , 
8, -1.85701, 1, 0, 0.497356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48732,-99) , 
0, 0.500312, 1, 0, 0.496706,-99) , 
0, 0.500947, 0, 0, 0.498064,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00676033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427234, 1, 1, 0.502405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485472,-99) , 
3, 7.1819, 1, 0, 0.501628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485141,-99) , 
3, 9.39852, 1, 0, 0.501048,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0174943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475222,-99) , 
10, 2.79567, 1, 0, 0.499915,-99) , 
8, 1.57151, 0, 0, 0.502662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495197,-99) , 
9, -2.99732, 1, 0, 0.498188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463014,-99) , 
8, 1.85713, 1, 0, 0.495995,-99) , 
7, -951.203, 0, 0, 0.498843,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0148466);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497539,-99) , 
9, 0.656785, 1, 0, 0.504093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471826,-99) , 
5, 0.391598, 1, 0, 0.502481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516677,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.493001,-99) , 
2, -0.214304, 1, 0, 0.494443,-99) , 
10, 0.537897, 0, 0, 0.498504,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0158791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475809,-99) , 
3, 1.87511, 1, 0, 0.519394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469823,-99) , 
4, 0.999705, 0, 0, 0.501246,-99) , 
4, 0.999524, 1, 0, 0.503139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494716,-99) , 
5, 0.43189, 1, 0, 0.506426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480159,-99) , 
3, 5.93508, 1, 0, 0.487706,-99) , 
5, 0.113702, 0, 0, 0.493836,-99) , 
3, 4.75611, 1, 0, 0.501381,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0149163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489665,-99) , 
10, 3.0264, 1, 0, 0.503475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488898,-99) , 
7, -951.286, 0, 0, 0.494129,-99) , 
8, -0.551035, 0, 0, 0.500734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480075,-99) , 
8, 2.14283, 1, 0, 0.500074,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.01377);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498354,-99) , 
10, 0.854702, 0, 0, 0.502749,-99) , 
NN(
0, 
0, 
-1, 1.5714, 1, -1, 0.49299,-99) , 
9, -1.03497, 1, 0, 0.499041,-99) , 
9, 4.64587, 0, 0, 0.500174,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0186651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55167, 1, 1, 0.515775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482848,-99) , 
5, 0.0215358, 0, 0, 0.496389,-99) , 
3, 4.36657, 1, 0, 0.507963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495027,-99) , 
0, 0.494281, 0, 0, 0.503967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483748,-99) , 
2, 0.0107672, 0, 0, 0.49546,-99) , 
2, -0.00348128, 1, 0, 0.500198,-99) , 
2, 0.0713245, 0, 0, 0.501611,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0121478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49917,-99) , 
2, 0.132777, 0, 0, 0.500425,-99) , 
2, 0.214405, 0, 0, 0.501515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497986,-99) , 
3, 1.93169, 0, 0, 0.507001,-99) , 
NN(
0, 
0, 
-1, -1.39015, 1, -1, 0.488006,-99) , 
5, -0.532631, 1, 0, 0.492221,-99) , 
8, 0.428576, 1, 0, 0.498076,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0128303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498422,-99) , 
6, 0.0237681, 0, 0, 0.50083,-99) , 
9, -2.60898, 1, 0, 0.502898,-99) , 
NN(
0, 
0, 
-1, -1.28458, 0, -1, 0.492576,-99) , 
5, -0.0672643, 1, 0, 0.498625,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0108162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714127, 0, 1, 0.508865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49355,-99) , 
9, -1.29532, 1, 0, 0.499293,-99) , 
5, -0.627627, 1, 0, 0.501389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47923,-99) , 
0, 0.505709, 1, 0, 0.500551,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0119154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455289,-99) , 
4, 0.998186, 0, 0, 0.515212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485051,-99) , 
3, 6.1407, 1, 0, 0.499672,-99) , 
3, 8.55455, 0, 0, 0.500904,-99) , 
4, 0.999048, 1, 0, 0.501732,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0137734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.522787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485872,-99) , 
7, -951.256, 1, 0, 0.504484,-99) , 
8, 1.28579, 0, 0, 0.508901,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498316,-99) , 
9, -0.0931219, 0, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461405,-99) , 
5, -0.719446, 0, 0, 0.498118,-99) , 
10, 2.21381, 0, 0, 0.500466,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0161431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.466947, 1, 1, 0.539426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491286,-99) , 
8, 0.428423, 0, 0, 0.499654,-99) , 
9, -1.26778, 1, 0, 0.505423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499433,-99) , 
2, 0.214478, 0, 0, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476376,-99) , 
10, -1.92039, 0, 0, 0.499161,-99) , 
5, -0.345687, 1, 0, 0.501805,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.00553293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42815, 0, 1, 0.501584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470113,-99) , 
8, -0.428524, 0, 0, 0.490886,-99) , 
4, 0.99966, 0, 0, 0.500681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48348,-99) , 
4, 0.998572, 0, 0, 0.500066,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0201867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0597381, 0, 1, 0.507547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485571,-99) , 
9, 2.49865, 0, 0, 0.496977,-99) , 
9, -0.302525, 1, 0, 0.504714,-99) , 
NN(
NN(
0, 
0, 
-1, -0.706197, 1, 1, 0.509176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478512,-99) , 
9, -1.35533, 1, 0, 0.491032,-99) , 
5, -0.439136, 1, 0, 0.496285,-99) , 
8, 0.428576, 1, 0, 0.501578,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.00438036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496646,-99) , 
3, 4.72444, 1, 0, 0.513072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51719,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.499191,-99) , 
8, 2.14282, 0, 0, 0.499789,-99) , 
2, -0.214508, 1, 0, 0.50054,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.00849722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00339987, 0, 1, 0.510438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4999,-99) , 
6, 0.0136012, 0, 0, 0.501704,-99) , 
5, 0.308622, 0, 0, 0.503699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486082,-99) , 
6, 0.0238024, 1, 0, 0.50299,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0163957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492417,-99) , 
6, 0.00339937, 1, 0, 0.50186,-99) , 
6, 0.0237969, 0, 0, 0.505131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496926,-99) , 
2, 0.214445, 0, 0, 0.498168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478694,-99) , 
8, -1.57023, 0, 0, 0.4972,-99) , 
5, -0.439158, 1, 0, 0.500051,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0262061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490642,-99) , 
10, 5.11455, 1, 0, 0.507103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480761,-99) , 
8, -1.85709, 0, 0, 0.505744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494745,-99) , 
5, 0.482537, 0, 0, 0.502618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391101,-99) , 
5, 0.303427, 1, 0, 0.475117,-99) , 
7, -0.819292, 0, 0, 0.496948,-99) , 
7, -951.274, 1, 0, 0.502012,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0193781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.48352, 1, 1, 0.516034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478569,-99) , 
10, 2.03792, 0, 0, 0.509211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499845,-99) , 
10, 0.550595, 0, 0, 0.506146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490058,-99) , 
5, 0.161736, 0, 0, 0.493165,-99) , 
9, -1.35127, 1, 0, 0.500972,-99) , 
5, -0.719577, 1, 0, 0.502219,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0130771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.505838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483784,-99) , 
4, 0.999388, 0, 0, 0.504842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487258,-99) , 
4, 0.998571, 0, 0, 0.504209,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0100339);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490931,-99) , 
10, 3.57723, 1, 0, 0.502085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475942,-99) , 
5, -0.906448, 0, 0, 0.501047,-99) , 
8, -1.85714, 1, 0, 0.501759,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.00667617);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49902,-99) , 
9, -1.90897, 1, 0, 0.501519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488028,-99) , 
5, -0.906456, 0, 0, 0.500956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488063,-99) , 
8, 2.14284, 1, 0, 0.500543,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0116442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481542,-99) , 
4, 0.999905, 0, 0, 0.502411,-99) , 
9, -0.970331, 1, 0, 0.50668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499001,-99) , 
9, -3.15495, 1, 0, 0.500874,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.48604,-99) , 
10, -1.61096, 0, 0, 0.499589,-99) , 
5, -0.5323, 1, 0, 0.501654,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0118088);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498227,-99) , 
7, -948.87, 0, 0, 0.5014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483456,-99) , 
5, -0.351375, 1, 0, 0.49173,-99) , 
6, 0.00113339, 0, 0, 0.499872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477457,-99) , 
6, 0.0238024, 1, 0, 0.498984,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.010866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46629,-99) , 
4, 0.998186, 0, 0, 0.514214,-99) , 
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.501322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458961,-99) , 
8, -0.142823, 0, 0, 0.486225,-99) , 
4, 0.999773, 0, 0, 0.499855,-99) , 
4, 0.999048, 1, 0, 0.50068,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.021445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497298,-99) , 
10, -0.262811, 0, 0, 0.504146,-99) , 
NN(
0, 
0, 
-1, -0.885085, 0, -1, 0.49188,-99) , 
5, -0.814375, 0, 0, 0.502919,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490808,-99) , 
7, -948.87, 0, 0, 0.500879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482078,-99) , 
10, 1.07809, 0, 0, 0.490921,-99) , 
9, -0.889657, 0, 0, 0.495963,-99) , 
8, 0.428596, 1, 0, 0.500333,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0118222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.551081, 0, 1, 0.507754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497889,-99) , 
2, -0.153015, 1, 0, 0.499847,-99) , 
8, -0.42859, 1, 0, 0.502423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489754,-99) , 
3, 4.35973, 1, 0, 0.498714,-99) , 
NN(
0, 
0, 
-1, -0.351274, 0, -1, 0.483628,-99) , 
0, 0.499995, 1, 0, 0.493194,-99) , 
2, 0.0713938, 1, 0, 0.500776,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0109147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496754,-99) , 
3, 1.76802, 1, 0, 0.523691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468385,-99) , 
4, 0.999705, 0, 0, 0.500254,-99) , 
4, 0.999524, 1, 0, 0.502717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479369,-99) , 
2, -0.194053, 0, 0, 0.497194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476477,-99) , 
2, 0.214076, 1, 0, 0.494498,-99) , 
3, 4.4751, 1, 0, 0.501007,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0113012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495864,-99) , 
7, -948.87, 1, 0, 0.49994,-99) , 
4, 0.998572, 1, 0, 0.500745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514919,-99) , 
NN(
0, 
0, 
-1, -0.0732793, 0, -1, 0.475424,-99) , 
7, -951.286, 0, 0, 0.490482,-99) , 
8, 1.57141, 1, 0, 0.499815,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0101436);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494153,-99) , 
5, -0.144704, 0, 0, 0.518562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499296,-99) , 
0, 0.504757, 0, 0, 0.500482,-99) , 
4, 0.99955, 1, 0, 0.501713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509592,-99) , 
NN(
0, 
0, 
-1, -0.704679, 1, -1, 0.480139,-99) , 
9, -2.29552, 0, 0, 0.489537,-99) , 
5, 0.496631, 1, 0, 0.5001,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0107822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496197,-99) , 
3, 1.77039, 1, 0, 0.499809,-99) , 
3, 8.87268, 0, 0, 0.500614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505273,-99) , 
NN(
0, 
0, 
-1, -1.14925, 1, -1, 0.483914,-99) , 
9, -2.3184, 0, 0, 0.490615,-99) , 
5, 0.589043, 1, 0, 0.499695,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.00715035);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499143,-99) , 
7, -951.286, 0, 0, 0.516454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499306,-99) , 
0, 0.490471, 1, 0, 0.500131,-99) , 
4, 0.999524, 1, 0, 0.501694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479847,-99) , 
3, 9.39852, 1, 0, 0.500937,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00682198);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85714, 0, 1, 0.502865,-99) , 
NN(
0, 
0, 
-1, -0.142808, 1, -1, 0.489621,-99) , 
0, 0.491424, 0, 0, 0.501902,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0125429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.511221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488671,-99) , 
10, -0.0470959, 0, 0, 0.50178,-99) , 
8, -0.14296, 1, 0, 0.505807,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494163,-99) , 
8, -0.142835, 0, 0, 0.498818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472394,-99) , 
4, 0.999048, 0, 0, 0.49758,-99) , 
0, 0.497138, 1, 0, 0.500952,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.028319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392729,-99) , 
7, -1.54487, 0, 0, 0.506919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486712,-99) , 
5, -0.535555, 0, 0, 0.497369,-99) , 
7, -951.203, 0, 0, 0.501416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483039,-99) , 
6, 0.0238025, 1, 0, 0.500675,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.007767);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498766,-99) , 
9, -3.33573, 1, 0, 0.500534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480369,-99) , 
10, -1.9086, 0, 0, 0.499736,-99) , 
9, 4.54353, 0, 0, 0.500367,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.00847217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497986,-99) , 
7, -951.286, 0, 0, 0.518823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497955,-99) , 
2, -0.210429, 1, 0, 0.49885,-99) , 
4, 0.999048, 1, 0, 0.499976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486276,-99) , 
3, 8.71379, 1, 0, 0.499348,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.012398);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499648,-99) , 
5, -0.192944, 1, 0, 0.505645,-99) , 
NN(
0, 
0, 
-1, -0.714295, 0, -1, 0.494372,-99) , 
9, -2.34711, 1, 0, 0.497773,-99) , 
9, 4.39257, 0, 0, 0.498752,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0229336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.472917, 0, 1, 0.50819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482044,-99) , 
5, 0.258189, 1, 0, 0.495823,-99) , 
9, -3.20228, 0, 0, 0.505798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499428,-99) , 
5, -0.26433, 0, 0, 0.506181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485725,-99) , 
10, 1.27154, 0, 0, 0.491768,-99) , 
9, -0.519238, 0, 0, 0.497562,-99) , 
8, 0.142842, 1, 0, 0.501906,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0164039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494371,-99) , 
9, -1.37051, 1, 0, 0.501828,-99) , 
9, 1.69313, 0, 0, 0.50309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471197,-99) , 
5, -0.82442, 1, 0, 0.493972,-99) , 
10, 4.00891, 1, 0, 0.502174,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0205872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493943,-99) , 
10, 0.471019, 0, 0, 0.507342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483532,-99) , 
10, -0.0181524, 1, 0, 0.494455,-99) , 
5, 0.308622, 1, 0, 0.504241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494744,-99) , 
10, -0.206847, 0, 0, 0.502488,-99) , 
NN(
0, 
0, 
-1, 1.92477, 0, -1, 0.489397,-99) , 
9, -0.444976, 1, 0, 0.498887,-99) , 
8, 0.142839, 0, 0, 0.501436,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0148127);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.153904, 1, 1, 0.513357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465753,-99) , 
4, 0.99981, 0, 0, 0.504949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494839,-99) , 
9, -3.22199, 1, 0, 0.496344,-99) , 
5, -0.519266, 1, 0, 0.499097,-99) , 
5, 0.682515, 0, 0, 0.499913,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.00947812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.4271, 0, 1, 0.503057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47552,-99) , 
4, 0.99941, 0, 0, 0.502292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462017,-99) , 
7, -951.286, 0, 0, 0.485886,-99) , 
4, 0.999048, 0, 0, 0.501403,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.00857005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.501578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463672,-99) , 
4, 0.999683, 0, 0, 0.500474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469287,-99) , 
7, -951.286, 0, 0, 0.489482,-99) , 
4, 0.999524, 0, 0, 0.499449,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0141504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498005,-99) , 
9, -0.362542, 0, 0, 0.504831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489683,-99) , 
10, 3.79359, 1, 0, 0.502692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494671,-99) , 
8, -0.970812, 1, 0, 0.497609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477723,-99) , 
8, -2.02037, 0, 0, 0.496655,-99) , 
8, 0.428585, 0, 0, 0.498913,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0120329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463857,-99) , 
4, 0.998186, 0, 0, 0.518435,-99) , 
NN(
NN(
0, 
0, 
-1, 8.34753, 0, 1, 0.501973,-99) , 
NN(
0, 
0, 
-1, -0.428409, 0, -1, 0.484491,-99) , 
4, 0.999773, 0, 0, 0.500279,-99) , 
4, 0.999048, 1, 0, 0.501325,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0143536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494577,-99) , 
9, -1.65987, 1, 0, 0.499128,-99) , 
NN(
0, 
0, 
-1, -2.52794, 1, -1, 0.487932,-99) , 
8, -0.70068, 0, 0, 0.496812,-99) , 
8, -1.85714, 1, 0, 0.497436,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0141868);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0205152, 1, 1, 0.514772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496248,-99) , 
10, 1.27104, 0, 0, 0.500131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469303,-99) , 
7, -951.274, 1, 0, 0.489345,-99) , 
10, 3.91459, 1, 0, 0.499035,-99) , 
8, 1.85712, 0, 0, 0.499946,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.00421387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.166588, 0, 1, 0.513565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.5,-99) , 
4, 0.999048, 1, 0, 0.500974,-99) , 
2, -0.214157, 1, 0, 0.501658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486588,-99) , 
0, 0.505709, 1, 0, 0.501083,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0142321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.48721, 0, 1, 0.503881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493642,-99) , 
9, -1.86545, 1, 0, 0.497268,-99) , 
5, -0.162633, 0, 0, 0.500291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471759,-99) , 
4, 0.998571, 0, 0, 0.499294,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0199438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4719,-99) , 
7, -0.917567, 0, 0, 0.507508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498217,-99) , 
6, 0.0113036, 0, 0, 0.500782,-99) , 
7, -951.274, 0, 0, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48727,-99) , 
6, 0.0237399, 1, 0, 0.502968,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0124646);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.142906, 1, 1, 0.510666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494251,-99) , 
7, -951.256, 1, 0, 0.49967,-99) , 
4, 0.999048, 1, 0, 0.500552,-99) , 
0, 0.494281, 1, 0, 0.50252,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.00899486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486748,-99) , 
10, 5.05736, 1, 0, 0.501005,-99) , 
8, -1.85715, 1, 0, 0.501865,-99) , 
NN(
0, 
0, 
-1, -0.444674, 1, -1, 0.485987,-99) , 
0, 0.491424, 0, 0, 0.500723,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.016486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494657,-99) , 
6, 0.00566661, 1, 0, 0.501674,-99) , 
6, 0.0238025, 0, 0, 0.503348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528058,-99) , 
NN(
0, 
0, 
-1, -1.34045, 0, -1, 0.492384,-99) , 
9, -3.84035, 1, 0, 0.494841,-99) , 
10, 0.652195, 0, 0, 0.49893,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0109081);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486844,-99) , 
4, 0.999683, 0, 0, 0.502595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486229,-99) , 
4, 0.999048, 0, 0, 0.501827,-99) , 
5, 0.775985, 0, 0, 0.502595,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00669791);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486109,-99) , 
10, 5.15411, 1, 0, 0.499602,-99) , 
NN(
0, 
0, 
-1, -0.0796447, 1, -1, 0.486526,-99) , 
8, -1.16321, 0, 0, 0.49837,-99) , 
8, -1.85708, 1, 0, 0.499046,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00919314);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.67611, 0, 1, 0.510826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497785,-99) , 
9, 1.58359, 0, 0, 0.498771,-99) , 
NN(
0, 
0, 
-1, -951.256, 1, -1, 0.48686,-99) , 
10, 3.90564, 1, 0, 0.497476,-99) , 
8, -1.57143, 1, 0, 0.49844,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0111763);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499564,-99) , 
7, -951.286, 1, 0, 0.515537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499993,-99) , 
2, 0.215281, 0, 0, 0.500898,-99) , 
0, 0.492376, 1, 0, 0.502445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473096,-99) , 
10, -1.90599, 0, 0, 0.499789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453888,-99) , 
10, 2.11057, 0, 0, 0.483771,-99) , 
9, -0.302525, 1, 0, 0.495838,-99) , 
8, -0.428575, 0, 0, 0.500311,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.00833739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490949,-99) , 
5, -0.158129, 1, 0, 0.496448,-99) , 
0, 0.501446, 1, 0, 0.50169,-99) , 
NN(
0, 
0, 
-1, 0.552477, 0, -1, 0.487724,-99) , 
0, 0.491424, 0, 0, 0.500687,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0129633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468125,-99) , 
4, 0.998186, 0, 0, 0.515768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49713,-99) , 
3, 4.34454, 0, 0, 0.499235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478408,-99) , 
4, 0.999411, 0, 0, 0.49866,-99) , 
4, 0.999048, 1, 0, 0.499646,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.00755749);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.97744, 1, 1, 0.508484,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.496743,-99) , 
9, 2.92563, 0, 0, 0.497914,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.020034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498145,-99) , 
7, -948.87, 1, 0, 0.505473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487493,-99) , 
10, 4.91654, 1, 0, 0.503821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495476,-99) , 
5, -0.44416, 1, 0, 0.504119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485048,-99) , 
10, 1.75213, 0, 0, 0.491765,-99) , 
7, -951.286, 0, 0, 0.496927,-99) , 
8, -0.142837, 0, 0, 0.500915,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0173842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476451,-99) , 
6, 0.0236488, 1, 0, 0.506191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490142,-99) , 
7, -951.286, 0, 0, 0.497168,-99) , 
8, -0.551018, 0, 0, 0.503527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480541,-99) , 
8, 2.14282, 1, 0, 0.502805,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00870496);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499214,-99) , 
9, -2.37764, 1, 0, 0.501664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476882,-99) , 
5, -0.906448, 0, 0, 0.500667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471691,-99) , 
8, -1.97957, 0, 0, 0.487945,-99) , 
8, -1.57136, 0, 0, 0.499778,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.00652804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.513676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489896,-99) , 
4, 0.999905, 0, 0, 0.504033,-99) , 
5, 0.116061, 0, 0, 0.50704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492036,-99) , 
0, 0.504439, 1, 0, 0.499553,-99) , 
8, -1.85715, 1, 0, 0.500133,-99) , 
0, 0.494281, 1, 0, 0.501486,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0137381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49437,-99) , 
10, 0.289592, 0, 0, 0.507507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496362,-99) , 
7, -951.286, 0, 0, 0.506919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494658,-99) , 
3, 8.56798, 0, 0, 0.495915,-99) , 
4, 0.999524, 1, 0, 0.496872,-99) , 
0, 0.491424, 1, 0, 0.49766,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.00629566);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516541,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.513787,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.498652,-99) , 
4, 0.999524, 1, 0, 0.500104,-99) , 
8, -1.85714, 1, 0, 0.500817,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0136727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490226,-99) , 
3, 1.52795, 1, 0, 0.521518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481773,-99) , 
4, 0.999705, 0, 0, 0.502669,-99) , 
4, 0.999524, 1, 0, 0.504642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486117,-99) , 
5, -0.345681, 0, 0, 0.494582,-99) , 
0, 0.493328, 1, 0, 0.497857,-99) , 
3, 4.40491, 1, 0, 0.503175,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.00863484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498363,-99) , 
0, 0.497002, 0, 0, 0.501964,-99) , 
0, 0.490471, 1, 0, 0.502803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485487,-99) , 
4, 0.998571, 0, 0, 0.502189,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.00949745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485392,-99) , 
8, 1.65304, 1, 0, 0.501915,-99) , 
8, 2.14282, 0, 0, 0.502365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49372,-99) , 
3, 2.30821, 1, 0, 0.502982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479417,-99) , 
5, -0.158129, 1, 0, 0.493313,-99) , 
0, 0.503804, 1, 0, 0.501472,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0137556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480115,-99) , 
0, 0.490472, 0, 0, 0.500888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493176,-99) , 
10, -0.151548, 0, 0, 0.499409,-99) , 
NN(
0, 
0, 
-1, 1.25934, 0, -1, 0.484763,-99) , 
9, -1.16661, 1, 0, 0.494234,-99) , 
8, -0.142794, 0, 0, 0.498095,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0061162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485132,-99) , 
8, -1.53061, 0, 0, 0.499181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481213,-99) , 
5, -0.906937, 0, 0, 0.498431,-99) , 
8, 2.14284, 0, 0, 0.499445,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.018562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495512,-99) , 
7, -951.256, 1, 0, 0.509381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490369,-99) , 
10, -0.756703, 0, 0, 0.503181,-99) , 
NN(
0, 
0, 
-1, 0.272138, 0, -1, 0.494234,-99) , 
9, -2.37723, 1, 0, 0.496927,-99) , 
9, 2.91838, 0, 0, 0.498172,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.00827392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.340754, 0, 1, 0.510491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485605,-99) , 
5, -0.721957, 0, 0, 0.506732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485063,-99) , 
2, -0.30239, 0, 0, 0.500916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477553,-99) , 
0, 0.505709, 1, 0, 0.500135,-99) , 
2, 0.0716242, 0, 0, 0.501325,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0090238);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498766,-99) , 
10, 1.47889, 0, 0, 0.500931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477039,-99) , 
7, -951.274, 1, 0, 0.492748,-99) , 
10, 2.74794, 1, 0, 0.499622,-99) , 
8, 2.14282, 0, 0, 0.500085,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.00707974);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.51691,-99) , 
NN(
NN(
0, 
0, 
-1, 9.4271, 0, 1, 0.501191,-99) , 
NN(
0, 
0, 
-1, 0.999413, 0, -1, 0.472399,-99) , 
4, 0.999637, 0, 0, 0.499514,-99) , 
4, 0.999048, 1, 0, 0.500507,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0140041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49917,-99) , 
7, -951.286, 0, 0, 0.515051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495607,-99) , 
0, 0.490471, 1, 0, 0.496771,-99) , 
3, 9.42945, 0, 0, 0.497943,-99) , 
4, 0.999524, 1, 0, 0.499606,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.00929094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497137, 1, 1, 0.516487,-99) , 
NN(
NN(
0, 
0, 
-1, -0.26223, 1, 1, 0.512086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496874,-99) , 
5, 0.30731, 0, 0, 0.498604,-99) , 
2, -0.132763, 1, 0, 0.499329,-99) , 
2, -0.21439, 1, 0, 0.500294,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.009712);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482379,-99) , 
10, -1.96467, 0, 0, 0.502484,-99) , 
NN(
0, 
0, 
-1, -0.894879, 1, -1, 0.488653,-99) , 
10, 4.59922, 1, 0, 0.501346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48227,-99) , 
8, 2.14283, 1, 0, 0.500743,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0106558);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517676,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0237681, 0, 1, 0.501709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491866,-99) , 
8, 0.654709, 0, 0, 0.494233,-99) , 
10, 0.208005, 0, 0, 0.498681,-99) , 
8, -1.85711, 1, 0, 0.499506,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0101381);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499588,-99) , 
3, 0.396732, 1, 0, 0.515336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497192,-99) , 
2, -0.214173, 1, 0, 0.498318,-99) , 
3, 0.515731, 1, 0, 0.499552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482563,-99) , 
3, 8.84534, 1, 0, 0.498805,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0102421);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517175,-99) , 
NN(
NN(
0, 
0, 
-1, -0.957275, 0, 1, 0.503632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494956,-99) , 
6, 0.0237681, 0, 0, 0.49665,-99) , 
10, 0.964505, 1, 0, 0.500787,-99) , 
0, 0.505709, 0, 0, 0.501435,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0108685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43577, 1, 1, 0.520564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497561,-99) , 
0, 0.490471, 1, 0, 0.498537,-99) , 
4, 0.999524, 1, 0, 0.500662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479445,-99) , 
3, 9.41367, 1, 0, 0.499911,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00656835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.532779, 1, 1, 0.502171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482993,-99) , 
3, 9.39852, 1, 0, 0.501497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481585,-99) , 
0, 0.505709, 1, 0, 0.500747,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0141004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480899,-99) , 
0, 0.5019, 1, 0, 0.509302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497099,-99) , 
0, 0.493328, 1, 0, 0.499412,-99) , 
3, 0.988653, 1, 0, 0.501574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485592,-99) , 
3, 9.41001, 1, 0, 0.501013,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0077918);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485727,-99) , 
3, 8.71744, 1, 0, 0.502598,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0079361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.699382, 0, 1, 0.52589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495117,-99) , 
10, -1.23144, 0, 0, 0.512263,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49956,-99) , 
5, -0.719234, 1, 0, 0.500812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487271,-99) , 
10, 5.72272, 1, 0, 0.499916,-99) , 
8, -1.28567, 1, 0, 0.501313,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.00494917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49987,-99) , 
2, -0.213786, 1, 0, 0.500804,-99) , 
8, -1.85714, 1, 0, 0.501641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477046,-99) , 
0, 0.489519, 0, 0, 0.500942,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0132103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.38391, 1, 1, 0.507006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487066,-99) , 
5, 0.651365, 0, 0, 0.494428,-99) , 
5, 0.495571, 1, 0, 0.50547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494361,-99) , 
9, -0.176029, 1, 0, 0.503344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491616,-99) , 
5, -0.350561, 1, 0, 0.49565,-99) , 
8, 0.142884, 1, 0, 0.499709,-99) , 
0, 0.499043, 0, 0, 0.50211,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0140193);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.39404, 1, 1, 0.504406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489865,-99) , 
8, -1.00011, 1, 0, 0.493301,-99) , 
0, 0.5019, 1, 0, 0.502394,-99) , 
NN(
NN(
0, 
0, 
-1, -0.206988, 1, 1, 0.509271,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.481784,-99) , 
7, -951.286, 0, 0, 0.493627,-99) , 
2, -0.0711665, 0, 0, 0.500848,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0245421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28742, 1, 1, 0.508543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474178,-99) , 
7, -951.256, 1, 0, 0.494688,-99) , 
10, 3.31966, 1, 0, 0.504827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494738,-99) , 
10, -0.545687, 0, 0, 0.50343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48585,-99) , 
9, -1.19426, 0, 0, 0.491218,-99) , 
9, -2.39439, 1, 0, 0.497492,-99) , 
10, 0.652195, 0, 0, 0.501019,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.01153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489723,-99) , 
7, -951.286, 1, 0, 0.508947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497825,-99) , 
4, 0.999524, 1, 0, 0.499302,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, -1, 0.485402,-99) , 
0, 0.504757, 1, 0, 0.498401,-99) , 
9, -3.20228, 1, 0, 0.49951,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0128496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495627,-99) , 
10, 0.0134998, 0, 0, 0.501424,-99) , 
9, -3.33104, 1, 0, 0.502445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467764,-99) , 
10, -0.775104, 1, 0, 0.489404,-99) , 
5, 0.59017, 1, 0, 0.50126,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0208739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488542,-99) , 
10, -1.18784, 0, 0, 0.502059,-99) , 
9, -0.401393, 0, 0, 0.503616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490985,-99) , 
6, 0.0237681, 0, 0, 0.493527,-99) , 
9, -1.81238, 1, 0, 0.498417,-99) , 
5, -0.347078, 0, 0, 0.501438,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0152369);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499058,-99) , 
8, -1.40814, 0, 0, 0.512978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4704,-99) , 
10, 2.13888, 0, 0, 0.495197,-99) , 
9, -0.176269, 1, 0, 0.508857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49794,-99) , 
4, 0.999524, 1, 0, 0.499345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472402,-99) , 
6, 0.0236916, 1, 0, 0.498291,-99) , 
8, -0.428573, 1, 0, 0.501736,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0159918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.639898, 0, 1, 0.522932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497389,-99) , 
10, -1.56073, 0, 0, 0.513254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496943,-99) , 
10, -0.281674, 0, 0, 0.507221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495894,-99) , 
5, 0.0282036, 0, 0, 0.498329,-99) , 
9, -2.13699, 1, 0, 0.501036,-99) , 
8, -1.28569, 1, 0, 0.502415,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0118875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496705,-99) , 
5, -0.261337, 1, 0, 0.505089,-99) , 
8, -0.142795, 1, 0, 0.51493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490545,-99) , 
10, -1.86436, 0, 0, 0.511981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495901,-99) , 
0, 0.499179, 1, 0, 0.50058,-99) , 
9, -3.40484, 1, 0, 0.501468,-99) , 
0, 0.503804, 0, 0, 0.502819,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00828201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49973,-99) , 
3, 0.900827, 1, 0, 0.501621,-99) , 
3, 8.3295, 0, 0, 0.502558,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.475336,-99) , 
4, 0.999048, 0, 0, 0.501091,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0178031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498686,-99) , 
10, 0.08861, 0, 0, 0.504089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474424,-99) , 
9, 3.53589, 0, 0, 0.490506,-99) , 
10, 2.63666, 1, 0, 0.501911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445624,-99) , 
9, -1.02397, 1, 0, 0.477428,-99) , 
9, -0.0110438, 0, 0, 0.493672,-99) , 
8, 1.57139, 1, 0, 0.501159,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0176289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.538274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489462,-99) , 
9, -3.45681, 1, 0, 0.501985,-99) , 
9, -2.74203, 0, 0, 0.510149,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0238024, 0, 1, 0.503671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469802,-99) , 
9, -1.86754, 0, 0, 0.483966,-99) , 
5, 0.402094, 1, 0, 0.501508,-99) , 
10, -0.60248, 1, 0, 0.50346,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0146908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.08839, 0, 1, 0.521449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499132,-99) , 
5, 0.0389927, 0, 0, 0.515575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497913,-99) , 
8, -0.428318, 1, 0, 0.503042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47537,-99) , 
8, -0.714295, 0, 0, 0.495596,-99) , 
7, -950.098, 0, 0, 0.498573,-99) , 
10, -0.751951, 1, 0, 0.501865,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0145744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.51774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480605,-99) , 
9, -3.05389, 1, 0, 0.510381,-99) , 
NN(
NN(
0, 
0, 
-1, -0.710315, 1, 1, 0.506383,-99) , 
NN(
0, 
0, 
-1, -1.57138, 0, -1, 0.495566,-99) , 
7, -951.203, 0, 0, 0.499888,-99) , 
9, -2.88184, 1, 0, 0.501581,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0223528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.67368, 0, 1, 0.508833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493124,-99) , 
9, -1.65435, 1, 0, 0.498522,-99) , 
5, -0.25167, 0, 0, 0.503691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477435,-99) , 
9, -1.47975, 1, 0, 0.486101,-99) , 
5, -0.532579, 1, 0, 0.491554,-99) , 
8, 1.00001, 1, 0, 0.501246,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00851155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47764,-99) , 
4, 0.999388, 0, 0, 0.500875,-99) , 
4, 0.998571, 1, 0, 0.501548,-99) , 
NN(
0, 
0, 
-1, 0.20908, 1, -1, 0.487423,-99) , 
0, 0.492376, 0, 0, 0.500071,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0168192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498068,-99) , 
9, 0.729046, 1, 0, 0.508078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483736,-99) , 
9, -2.06527, 1, 0, 0.50036,-99) , 
10, 0.350381, 0, 0, 0.503456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483796,-99) , 
10, 0.849363, 0, 0, 0.498053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462949,-99) , 
10, 0.382879, 1, 0, 0.484029,-99) , 
5, 0.308628, 1, 0, 0.494608,-99) , 
8, 0.428549, 1, 0, 0.50016,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.017559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.288163, 0, 1, 0.506781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470461,-99) , 
9, -3.85388, 1, 0, 0.490299,-99) , 
9, -3.26541, 0, 0, 0.503232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499913,-99) , 
0, 0.490789, 0, 0, 0.509615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491476,-99) , 
5, -0.534787, 1, 0, 0.493827,-99) , 
0, 0.492376, 1, 0, 0.495502,-99) , 
8, -0.142826, 1, 0, 0.498768,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0173337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498279,-99) , 
10, 0.169544, 0, 0, 0.503957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4734,-99) , 
10, 2.00969, 0, 0, 0.494237,-99) , 
9, -0.315087, 1, 0, 0.501338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495197,-99) , 
8, 1.2854, 0, 0, 0.501938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487123,-99) , 
9, -1.82636, 1, 0, 0.492705,-99) , 
5, -0.439722, 1, 0, 0.495331,-99) , 
8, 0.42857, 1, 0, 0.499102,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.015517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.711242, 1, 1, 0.506267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488664,-99) , 
10, -1.27966, 0, 0, 0.503943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527109,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.493752,-99) , 
9, -3.02496, 1, 0, 0.497142,-99) , 
7, -950.098, 0, 0, 0.500038,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0112791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485983,-99) , 
10, -1.60476, 0, 0, 0.511567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488489,-99) , 
10, 3.23563, 1, 0, 0.500059,-99) , 
8, -1.28564, 1, 0, 0.501347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48297,-99) , 
6, 0.0237968, 1, 0, 0.500601,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.00711158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499264,-99) , 
8, -1.8571, 1, 0, 0.500284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471185,-99) , 
4, 0.99941, 0, 0, 0.499481,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.477071,-99) , 
4, 0.999048, 0, 0, 0.498263,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0190215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486808,-99) , 
4, 0.999995, 0, 0, 0.508527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488558,-99) , 
4, 0.999905, 0, 0, 0.505931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497365,-99) , 
3, 0.522694, 1, 0, 0.498864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480117,-99) , 
3, 8.85165, 1, 0, 0.49798,-99) , 
5, -0.532298, 1, 0, 0.500305,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0119453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499762,-99) , 
0, 0.498091, 0, 0, 0.511818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495621,-99) , 
7, -20.9575, 1, 0, 0.501344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478253,-99) , 
8, -2.07479, 0, 0, 0.500693,-99) , 
8, 1.85712, 0, 0, 0.501336,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00908165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484681,-99) , 
3, 1.88218, 1, 0, 0.5167,-99) , 
NN(
0, 
0, 
-1, -1.85715, 1, 1, 0.501406,-99) , 
4, 0.999524, 1, 0, 0.502869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47916,-99) , 
3, 9.41652, 1, 0, 0.502039,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.00911575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49846,-99) , 
9, -2.94397, 1, 0, 0.500606,-99) , 
9, 1.59598, 0, 0, 0.501613,-99) , 
NN(
0, 
0, 
-1, -0.819055, 1, -1, 0.491074,-99) , 
10, 3.91459, 1, 0, 0.500515,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.00600491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68354, 0, 1, 0.508421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48632,-99) , 
4, 0.999524, 0, 0, 0.499215,-99) , 
2, 0.0512111, 0, 0, 0.500789,-99) , 
NN(
0, 
0, 
-1, 4.53422, 1, -1, 0.485489,-99) , 
2, 0.214445, 1, 0, 0.49995,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0104154);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497939,-99) , 
9, -2.05805, 1, 0, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481125,-99) , 
3, 8.8365, 1, 0, 0.500217,-99) , 
8, -1.85709, 1, 0, 0.501162,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.011702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.162155, 1, 1, 0.510911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492148,-99) , 
8, 0.918344, 1, 0, 0.501695,-99) , 
8, 1.5714, 0, 0, 0.502552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493978,-99) , 
8, 1.57143, 0, 0, 0.496068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478077,-99) , 
0, 0.495777, 1, 0, 0.494313,-99) , 
0, 0.496186, 0, 0, 0.499875,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.00961312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487204,-99) , 
9, -1.2172, 1, 0, 0.502051,-99) , 
10, 1.91572, 0, 0, 0.505262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496536,-99) , 
2, -0.00324185, 1, 0, 0.499873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483152,-99) , 
0, 0.490472, 0, 0, 0.499165,-99) , 
2, 0.0715747, 0, 0, 0.500265,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.00931477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491682,-99) , 
3, 4.7654, 1, 0, 0.515922,-99) , 
NN(
0, 
0, 
-1, -0.132465, 1, 1, 0.50308,-99) , 
2, -0.214087, 1, 0, 0.503819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486131,-99) , 
5, -0.906439, 0, 0, 0.50309,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0102947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495037,-99) , 
5, -0.438697, 0, 0, 0.505279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496518,-99) , 
0, 0.495097, 1, 0, 0.498752,-99) , 
0, 0.5019, 0, 0, 0.500019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482748,-99) , 
8, -1.8571, 0, 0, 0.499316,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.00794293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497664,-99) , 
1, 0.00340094, 0, 0, 0.499898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488321,-99) , 
6, 0.0238024, 1, 0, 0.49944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483885,-99) , 
0, 0.489519, 0, 0, 0.498997,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00689136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.158099, 0, 1, 0.518412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496997,-99) , 
8, -0.714254, 1, 0, 0.503145,-99) , 
0, 0.499995, 0, 0, 0.508808,-99) , 
NN(
NN(
0, 
0, 
-1, 8.47487, 0, 1, 0.500963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48205,-99) , 
4, 0.999048, 0, 0, 0.500213,-99) , 
2, -0.0712558, 1, 0, 0.501765,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0130553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484587,-99) , 
0, 0.501265, 1, 0, 0.515399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497684,-99) , 
0, 0.5019, 0, 0, 0.499801,-99) , 
4, 0.999524, 1, 0, 0.501123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490366,-99) , 
8, -0.142961, 0, 0, 0.498726,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.47907,-99) , 
5, 0.11229, 1, 0, 0.492749,-99) , 
0, 0.494281, 0, 0, 0.499505,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0268227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494205,-99) , 
8, 0.714448, 0, 0, 0.502043,-99) , 
6, 0.0237708, 0, 0, 0.504571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495023,-99) , 
10, 0.503636, 0, 0, 0.500379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462306,-99) , 
5, -0.166782, 0, 0, 0.48359,-99) , 
9, -1.30421, 1, 0, 0.497206,-99) , 
10, 1.24009, 0, 0, 0.499869,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0149356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.386921, 0, 1, 0.507439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477944,-99) , 
0, 0.503804, 1, 0, 0.500087,-99) , 
10, 0.418351, 0, 0, 0.503107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491432,-99) , 
8, 1.14967, 1, 0, 0.498821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460962,-99) , 
10, 0.440797, 1, 0, 0.483416,-99) , 
10, 0.780255, 0, 0, 0.494541,-99) , 
8, 0.714296, 1, 0, 0.500698,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.00884206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.647339, 0, 1, 0.526261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492498,-99) , 
10, -1.64869, 0, 0, 0.514205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499757,-99) , 
5, -0.720482, 1, 0, 0.500921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480531,-99) , 
8, 0.550589, 0, 0, 0.490807,-99) , 
10, 4.06992, 1, 0, 0.499847,-99) , 
8, -1.28572, 1, 0, 0.501456,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.00832829);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.542515, 1, 1, 0.503412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474703,-99) , 
3, 9.40736, 1, 0, 0.502425,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0140462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481271,-99) , 
2, 0.0717711, 1, 0, 0.493862,-99) , 
3, 4.77198, 1, 0, 0.50349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490984,-99) , 
9, -2.05524, 1, 0, 0.493983,-99) , 
5, -0.719553, 1, 0, 0.495963,-99) , 
8, 0.142852, 1, 0, 0.499911,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.011476);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490704,-99) , 
10, -0.974219, 0, 0, 0.500468,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.479842,-99) , 
9, -0.0497727, 1, 0, 0.495894,-99) , 
8, -0.428532, 0, 0, 0.500416,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0158559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495875,-99) , 
0, 0.499043, 0, 0, 0.506097,-99) , 
NN(
0, 
0, 
-1, 0.346856, 1, -1, 0.496263,-99) , 
2, -0.071166, 1, 0, 0.498037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436551,-99) , 
9, -1.87168, 1, 0, 0.474618,-99) , 
7, -951.286, 0, 0, 0.488329,-99) , 
8, -1.28576, 0, 0, 0.496984,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0116073);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479962,-99) , 
10, -1.95406, 0, 0, 0.503197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487779,-99) , 
5, -0.785291, 1, 0, 0.494421,-99) , 
9, 0.763513, 1, 0, 0.501515,-99) , 
8, 2.14283, 0, 0, 0.502206,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0134936);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485256,-99) , 
10, -1.50825, 0, 0, 0.518347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497609,-99) , 
8, -1.85713, 1, 0, 0.49847,-99) , 
9, -3.04131, 1, 0, 0.50031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483392,-99) , 
9, -3.18236, 0, 0, 0.496714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471788,-99) , 
0, 0.500948, 1, 0, 0.491157,-99) , 
5, 0.496631, 1, 0, 0.499102,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00552834);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51981,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.501163,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.493587,-99) , 
0, 0.494281, 0, 0, 0.49971,-99) , 
8, 2.14284, 0, 0, 0.500387,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00842136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.360475, 0, 1, 0.505408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498117,-99) , 
9, -0.715798, 0, 0, 0.499472,-99) , 
10, 1.15319, 0, 0, 0.501589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485907,-99) , 
8, 2.14281, 1, 0, 0.501091,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0199069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.697561, 0, 1, 0.505295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488945,-99) , 
10, 0.504432, 1, 0, 0.494291,-99) , 
9, -1.29822, 1, 0, 0.501102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49352,-99) , 
5, -0.901657, 1, 0, 0.500873,-99) , 
NN(
0, 
0, 
-1, 1.98812, 0, -1, 0.473309,-99) , 
9, 3.409, 0, 0, 0.489257,-99) , 
10, 2.8762, 1, 0, 0.499274,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.00666041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499296,-99) , 
9, -3.27436, 1, 0, 0.500519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481491,-99) , 
10, -1.84097, 0, 0, 0.499652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487342,-99) , 
10, 5.09659, 1, 0, 0.498759,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0133101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488511,-99) , 
4, 0.999728, 0, 0, 0.503445,-99) , 
3, 9.42789, 0, 0, 0.504288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474755,-99) , 
7, -951.286, 0, 0, 0.494843,-99) , 
4, 0.999524, 0, 0, 0.5034,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0102896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.68129, 0, 1, 0.508507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497684,-99) , 
9, -3.00844, 1, 0, 0.499643,-99) , 
5, -0.626473, 1, 0, 0.501545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484192,-99) , 
5, -0.733471, 0, 0, 0.497851,-99) , 
NN(
0, 
0, 
-1, 0.502172, 0, -1, 0.478372,-99) , 
5, 0.399111, 1, 0, 0.494744,-99) , 
0, 0.499995, 1, 0, 0.499293,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0151581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489789,-99) , 
10, 4.18556, 1, 0, 0.50677,-99) , 
NN(
0, 
0, 
-1, -1.77553, 0, -1, 0.49563,-99) , 
10, 1.24009, 0, 0, 0.499434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47743,-99) , 
8, 2.14284, 1, 0, 0.498753,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00979469);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.801311, 1, 1, 0.512191,-99) , 
NN(
NN(
0, 
0, 
-1, -2.96867, 1, 1, 0.502298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490989,-99) , 
9, -1.55748, 0, 0, 0.495706,-99) , 
5, 0.307307, 1, 0, 0.500819,-99) , 
0, 0.504757, 0, 0, 0.501581,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0118531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.08191, 0, 1, 0.503536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492513,-99) , 
5, -0.257813, 0, 0, 0.495245,-99) , 
9, -0.67825, 1, 0, 0.500556,-99) , 
NN(
0, 
0, 
-1, -0.0698852, 1, -1, 0.487685,-99) , 
0, 0.491424, 0, 0, 0.499631,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0120915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.82523, 0, 1, 0.51554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495324,-99) , 
3, 2.65219, 1, 0, 0.500309,-99) , 
5, 0.581693, 0, 0, 0.501885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505084,-99) , 
NN(
0, 
0, 
-1, 0.119931, 1, -1, 0.49152,-99) , 
10, 2.84699, 0, 0, 0.493791,-99) , 
0, 0.499995, 1, 0, 0.499204,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.00920686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490969,-99) , 
8, -1.28572, 0, 0, 0.501766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490059,-99) , 
10, 3.93021, 1, 0, 0.500971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487123,-99) , 
5, -0.906598, 0, 0, 0.500402,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0248537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495666,-99) , 
10, 0.257079, 0, 0, 0.504436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48573,-99) , 
5, 0.109843, 0, 0, 0.492738,-99) , 
9, -1.37976, 1, 0, 0.501101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490515,-99) , 
7, -951.286, 1, 0, 0.502609,-99) , 
NN(
0, 
0, 
-1, -0.999943, 0, -1, 0.488242,-99) , 
9, 2.68203, 0, 0, 0.493488,-99) , 
9, -0.176269, 1, 0, 0.498895,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.00626373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499256,-99) , 
0, 0.503804, 0, 0, 0.500337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474806,-99) , 
4, 0.99932, 0, 0, 0.499368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481781,-99) , 
4, 0.998572, 0, 0, 0.49874,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0090519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482225,-99) , 
8, -1.57143, 0, 0, 0.50017,-99) , 
9, 1.6909, 0, 0, 0.501363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473901,-99) , 
5, -0.824427, 1, 0, 0.490555,-99) , 
10, 3.91459, 1, 0, 0.500238,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0100654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.932134, 0, 1, 0.511397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492695,-99) , 
10, 2.01716, 0, 0, 0.49979,-99) , 
9, -1.45192, 1, 0, 0.507061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487119,-99) , 
8, -0.537384, 0, 0, 0.500598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473698,-99) , 
6, 0.0237891, 1, 0, 0.499541,-99) , 
8, -0.714256, 1, 0, 0.501341,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0111075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.600187, 1, 1, 0.505238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482009,-99) , 
9, -1.34791, 1, 0, 0.498333,-99) , 
10, 1.16587, 0, 0, 0.500735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483785,-99) , 
5, -0.906523, 0, 0, 0.500036,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.00789935);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497628,-99) , 
9, 3.01552, 0, 0, 0.498478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485789,-99) , 
10, 6.01167, 1, 0, 0.497766,-99) , 
8, 2.14284, 0, 0, 0.498271,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00932033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.519104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497452,-99) , 
2, -0.0304472, 1, 0, 0.499668,-99) , 
2, 0.214405, 0, 0, 0.500681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480734,-99) , 
3, 9.41001, 1, 0, 0.499997,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0109372);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495357,-99) , 
5, -0.283368, 1, 0, 0.498902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481114,-99) , 
5, -0.906521, 0, 0, 0.49819,-99) , 
8, -1.85709, 1, 0, 0.499145,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00907372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492202,-99) , 
3, 4.43012, 1, 0, 0.51374,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0667131, 1, 1, 0.507166,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.497241,-99) , 
2, 0.0511668, 0, 0, 0.498952,-99) , 
2, 0.214405, 0, 0, 0.499793,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00882762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499365,-99) , 
4, 0.999524, 1, 0, 0.500536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483191,-99) , 
9, -0.371523, 0, 0, 0.493528,-99) , 
8, 0.999972, 1, 0, 0.49913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478773,-99) , 
0, 0.489519, 0, 0, 0.498568,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0130441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.639935, 0, 1, 0.524955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482328,-99) , 
10, -1.5183, 0, 0, 0.508726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481785,-99) , 
8, 2.18361, 1, 0, 0.5021,-99) , 
NN(
0, 
0, 
-1, 4.57712, 0, -1, 0.485575,-99) , 
10, 3.86449, 1, 0, 0.500224,-99) , 
8, -1.28573, 1, 0, 0.501184,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0102539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.443328, 1, 1, 0.511729,-99) , 
NN(
0, 
0, 
-1, -0.317939, 0, -1, 0.497091,-99) , 
2, 0.0512174, 0, 0, 0.499616,-99) , 
NN(
0, 
0, 
-1, 4.55217, 1, -1, 0.482844,-99) , 
2, 0.214429, 1, 0, 0.498699,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0263294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496338,-99) , 
9, -1.52867, 1, 0, 0.507704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490858,-99) , 
9, -2.5519, 1, 0, 0.499872,-99) , 
10, 0.219173, 0, 0, 0.50363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480274,-99) , 
4, 0.999995, 0, 0, 0.499441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466338,-99) , 
4, 0.999905, 0, 0, 0.495377,-99) , 
5, -0.627978, 0, 0, 0.501838,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0109389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.75996, 0, 1, 0.504276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482834,-99) , 
4, 0.99932, 0, 0, 0.50345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475496,-99) , 
4, 0.998571, 0, 0, 0.502463,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0109871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39048, 1, 1, 0.507414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492769,-99) , 
5, -0.0680233, 0, 0, 0.499325,-99) , 
5, -0.390197, 1, 0, 0.502006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483888,-99) , 
5, -0.884269, 0, 0, 0.491831,-99) , 
5, -0.81305, 0, 0, 0.5011,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0112337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499327,-99) , 
3, 4.67934, 1, 0, 0.514183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488288,-99) , 
10, -1.00828, 0, 0, 0.505401,-99) , 
NN(
0, 
0, 
-1, 0.11929, 1, -1, 0.496465,-99) , 
2, 0.030583, 0, 0, 0.499073,-99) , 
2, -0.214303, 1, 0, 0.499937,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0150105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.309544, 0, 1, 0.504325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485238,-99) , 
5, 0.208291, 1, 0, 0.502971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495388,-99) , 
10, 0.0626574, 0, 0, 0.500184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477975,-99) , 
10, 0.11881, 1, 0, 0.488307,-99) , 
8, 0.425255, 1, 0, 0.497435,-99) , 
10, 0.742411, 0, 0, 0.499982,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.00599285);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48885,-99) , 
5, -0.813448, 0, 0, 0.499557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481242,-99) , 
8, 1.65303, 1, 0, 0.498667,-99) , 
8, 2.14285, 0, 0, 0.499347,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.019875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493228,-99) , 
10, -1.44032, 0, 0, 0.514919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496981,-99) , 
9, -2.43319, 1, 0, 0.49929,-99) , 
8, -0.999528, 1, 0, 0.501522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479062,-99) , 
4, 0.999995, 0, 0, 0.49884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469746,-99) , 
4, 0.999905, 0, 0, 0.495182,-99) , 
5, -0.625823, 0, 0, 0.500129,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.00851666);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493591,-99) , 
3, 1.32216, 1, 0, 0.515263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476107,-99) , 
4, 0.999705, 0, 0, 0.500248,-99) , 
4, 0.999524, 1, 0, 0.501703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487181,-99) , 
3, 8.72033, 1, 0, 0.50105,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0209086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494563,-99) , 
10, -0.0224641, 0, 0, 0.504627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492155,-99) , 
9, -1.54364, 0, 0, 0.496529,-99) , 
5, 0.207105, 1, 0, 0.501798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484814,-99) , 
7, -951.275, 1, 0, 0.502368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453613,-99) , 
8, -1.35578, 0, 0, 0.485037,-99) , 
10, 2.66158, 0, 0, 0.495872,-99) , 
5, -0.625839, 0, 0, 0.500496,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.00785696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497985,-99) , 
2, -0.111889, 1, 0, 0.499391,-99) , 
2, 0.214545, 0, 0, 0.499991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479957,-99) , 
4, 0.998571, 0, 0, 0.499291,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0114816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493218,-99) , 
5, 0.403118, 1, 0, 0.510094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499833,-99) , 
8, -0.999513, 1, 0, 0.505106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476122,-99) , 
8, -0.999961, 0, 0, 0.497117,-99) , 
7, -948.87, 0, 0, 0.500425,-99) , 
9, -3.43055, 1, 0, 0.501141,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.00637746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498386,-99) , 
5, -0.629438, 0, 0, 0.513661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48983,-99) , 
7, -951.286, 0, 0, 0.51184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480383,-99) , 
5, 0.680822, 1, 0, 0.49942,-99) , 
4, 0.999048, 1, 0, 0.500137,-99) , 
8, -1.57143, 1, 0, 0.501092,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0259279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410034,-99) , 
7, -1.54487, 0, 0, 0.506469,-99) , 
NN(
0, 
0, 
-1, -0.438747, 0, -1, 0.494454,-99) , 
7, -951.203, 0, 0, 0.499571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475524,-99) , 
6, 0.0238024, 1, 0, 0.498626,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0171723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498038,-99) , 
5, -0.626903, 0, 0, 0.507605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479509,-99) , 
10, 3.0005, 1, 0, 0.499293,-99) , 
7, -20.9575, 1, 0, 0.504028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491189,-99) , 
8, 1.66666, 0, 0, 0.507165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478314,-99) , 
9, -1.4162, 1, 0, 0.487502,-99) , 
9, 0.230084, 0, 0, 0.493531,-99) , 
8, 0.999979, 1, 0, 0.501921,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0177942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496005,-99) , 
6, 0.00339878, 0, 0, 0.501422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478645,-99) , 
6, 0.00339957, 1, 0, 0.491882,-99) , 
5, -0.62648, 0, 0, 0.49947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48366,-99) , 
6, 0.0237968, 1, 0, 0.49884,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0152368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.765834, 0, 1, 0.509454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475782,-99) , 
10, 2.08835, 0, 0, 0.495527,-99) , 
9, -0.302525, 1, 0, 0.505955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490727,-99) , 
7, -948.87, 1, 0, 0.496108,-99) , 
5, -0.720717, 1, 0, 0.498209,-99) , 
8, -0.142852, 1, 0, 0.501474,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0173396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.55829, 1, 1, 0.519371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462866,-99) , 
7, -951.286, 1, 0, 0.489656,-99) , 
10, -1.35839, 0, 0, 0.507839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493533,-99) , 
5, -0.346338, 0, 0, 0.500088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47772,-99) , 
6, 0.0236916, 1, 0, 0.499208,-99) , 
8, -0.999977, 1, 0, 0.500659,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0104722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49602,-99) , 
9, -1.82874, 1, 0, 0.499478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473655,-99) , 
6, 0.0237968, 1, 0, 0.498705,-99) , 
9, 4.39257, 0, 0, 0.499792,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0178023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494121,-99) , 
7, -948.87, 0, 0, 0.500197,-99) , 
6, 0.0237399, 0, 0, 0.504534,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48491,-99) , 
8, 1.6053, 1, 0, 0.510019,-99) , 
NN(
0, 
0, 
-1, -0.787222, 1, -1, 0.494367,-99) , 
9, -0.501845, 0, 0, 0.495772,-99) , 
5, -0.439723, 1, 0, 0.498914,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.00817474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.509854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498165,-99) , 
3, 8.31895, 0, 0, 0.49903,-99) , 
2, 0.112534, 0, 0, 0.500489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472522,-99) , 
10, 0.530231, 1, 0, 0.487908,-99) , 
2, -0.2139, 0, 0, 0.499796,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0164047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494894,-99) , 
10, -0.150072, 0, 0, 0.503989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496408,-99) , 
5, 0.396387, 0, 0, 0.498294,-99) , 
9, -1.99428, 1, 0, 0.500344,-99) , 
8, -1.85714, 1, 0, 0.501189,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0138813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714212, 1, 1, 0.50847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489008,-99) , 
8, 0.637498, 1, 0, 0.499768,-99) , 
10, 1.00136, 0, 0, 0.503439,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.481587,-99) , 
4, 0.999524, 0, 0, 0.501429,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0262079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.380579, 0, 1, 0.508576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479207,-99) , 
10, 2.60061, 0, 0, 0.495496,-99) , 
8, 1.57143, 1, 0, 0.505978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495572,-99) , 
10, 0.38216, 0, 0, 0.500864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47487,-99) , 
5, 0.122044, 0, 0, 0.48786,-99) , 
9, -1.58129, 1, 0, 0.497569,-99) , 
10, 1.12226, 0, 0, 0.50079,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0080145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494553, 0, 1, 0.507015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498854,-99) , 
9, -3.53658, 1, 0, 0.499839,-99) , 
0, 0.496186, 1, 0, 0.502204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486002,-99) , 
3, 9.41001, 1, 0, 0.501639,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0133886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496744,-99) , 
9, -0.273948, 1, 0, 0.503779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483823,-99) , 
0, 0.49809, 0, 0, 0.49267,-99) , 
8, 0.918348, 1, 0, 0.501606,-99) , 
8, 2.14282, 0, 0, 0.502275,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0124475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495868, 1, 1, 0.509312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497121,-99) , 
0, 0.497047, 0, 0, 0.500692,-99) , 
5, -0.535562, 1, 0, 0.503121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490136,-99) , 
10, -0.120382, 0, 0, 0.498445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480298,-99) , 
8, -0.143374, 0, 0, 0.489887,-99) , 
5, -0.625819, 0, 0, 0.496468,-99) , 
0, 0.499995, 1, 0, 0.500918,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0117665);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498838,-99) , 
10, -0.226851, 0, 0, 0.506266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497041,-99) , 
5, 0.301232, 0, 0, 0.498769,-99) , 
9, -2.09756, 1, 0, 0.50126,-99) , 
8, -1.85714, 1, 0, 0.50185,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0168707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -20.9575, 1, 1, 0.505959,-99) , 
NN(
0, 
0, 
-1, -0.887701, 1, -1, 0.492403,-99) , 
0, 0.492376, 0, 0, 0.504556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471733,-99) , 
9, -1.35424, 1, 0, 0.485262,-99) , 
9, 0.45099, 0, 0, 0.494315,-99) , 
8, 1.28571, 1, 0, 0.503139,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0158743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497239,-99) , 
9, -0.93491, 1, 0, 0.519842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470345,-99) , 
5, 0.308576, 0, 0, 0.498393,-99) , 
10, -1.21996, 0, 0, 0.510754,-99) , 
NN(
NN(
0, 
0, 
-1, -0.626754, 1, 1, 0.502959,-99) , 
NN(
0, 
0, 
-1, -0.589779, 1, -1, 0.490864,-99) , 
10, 2.52064, 1, 0, 0.500529,-99) , 
8, -1, 1, 0, 0.50225,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00883697);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.73833, 0, 1, 0.50216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490609,-99) , 
3, 1.57079, 1, 0, 0.500749,-99) , 
NN(
0, 
0, 
-1, 0.114411, 0, -1, 0.484704,-99) , 
3, 4.38508, 1, 0, 0.49435,-99) , 
2, 0.0713933, 1, 0, 0.500765,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00966882);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495342,-99) , 
5, -0.0734612, 0, 0, 0.510009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496143,-99) , 
8, 1.38096, 0, 0, 0.497161,-99) , 
2, -0.214032, 1, 0, 0.497891,-99) , 
8, -1.8571, 1, 0, 0.498495,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0150006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499914,-99) , 
10, 2.77465, 0, 0, 0.50456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469716,-99) , 
10, 2.2581, 1, 0, 0.495783,-99) , 
7, -951.274, 1, 0, 0.500791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485742,-99) , 
10, 1.85121, 0, 0, 0.500747,-99) , 
NN(
0, 
0, 
-1, -0.0707128, 0, -1, 0.489291,-99) , 
7, -951.286, 0, 0, 0.494046,-99) , 
8, 0.714279, 1, 0, 0.498898,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00767508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483523,-99) , 
5, -0.813202, 0, 0, 0.501637,-99) , 
9, 4.59696, 0, 0, 0.502482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485063,-99) , 
3, 9.39852, 1, 0, 0.501873,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00746249);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.50217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489089,-99) , 
7, -951.275, 1, 0, 0.497181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473574,-99) , 
4, 0.999524, 0, 0, 0.494761,-99) , 
0, 0.500947, 1, 0, 0.500275,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0160961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474536,-99) , 
4, 0.999932, 0, 0, 0.508752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496294,-99) , 
4, 0.999524, 1, 0, 0.497674,-99) , 
8, -1.00001, 1, 0, 0.499537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471893,-99) , 
4, 0.998571, 0, 0, 0.498574,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0101884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495153,-99) , 
7, -951.256, 1, 0, 0.508377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494349,-99) , 
9, -1.173, 1, 0, 0.498978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476104,-99) , 
8, -1.85711, 0, 0, 0.497995,-99) , 
9, 2.8945, 0, 0, 0.499031,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.01904);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497243,-99) , 
9, -0.626252, 1, 0, 0.502202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467975,-99) , 
9, -2.91016, 1, 0, 0.487185,-99) , 
10, -0.575313, 0, 0, 0.500463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476547,-99) , 
10, -0.513449, 1, 0, 0.491839,-99) , 
9, -1.26652, 0, 0, 0.49501,-99) , 
5, 0.121676, 1, 0, 0.498736,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.00931179);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.77379, 1, 1, 0.513083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490894,-99) , 
5, 0.496666, 1, 0, 0.500085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476343,-99) , 
8, -1.8571, 0, 0, 0.499054,-99) , 
9, 2.98289, 0, 0, 0.500434,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0104878);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.28561, 1, 1, 0.506296,-99) , 
NN(
0, 
0, 
-1, 8.86307, 1, -1, 0.495677,-99) , 
10, 0.711478, 0, 0, 0.500631,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.00909418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497551,-99) , 
8, 0.142858, 1, 0, 0.506134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494718,-99) , 
7, -948.87, 1, 0, 0.498928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482512,-99) , 
8, -1.85714, 0, 0, 0.498216,-99) , 
9, 3.10273, 0, 0, 0.498979,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0134683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.250833, 0, 1, 0.503788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483769,-99) , 
5, 0.210203, 1, 0, 0.502382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492884,-99) , 
9, -1.19425, 0, 0, 0.494455,-99) , 
9, -3.83453, 1, 0, 0.496158,-99) , 
10, 0.748335, 0, 0, 0.499013,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0204032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496355,-99) , 
5, -0.25296, 0, 0, 0.500245,-99) , 
6, 0.0238024, 0, 0, 0.501457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468824,-99) , 
9, -2.86825, 0, 0, 0.485744,-99) , 
9, -3.86863, 1, 0, 0.492956,-99) , 
10, -0.60248, 0, 0, 0.499555,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00740118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499456,-99) , 
10, 5.75118, 1, 0, 0.506867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498991,-99) , 
9, -3.40377, 1, 0, 0.50025,-99) , 
NN(
0, 
0, 
-1, -0.540757, 0, -1, 0.482158,-99) , 
8, -1.57143, 0, 0, 0.498939,-99) , 
9, 2.8945, 0, 0, 0.499734,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0125462);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23809, 1, 1, 0.520169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493525,-99) , 
10, -1.13768, 0, 0, 0.503963,-99) , 
NN(
0, 
0, 
-1, -0.445093, 0, -1, 0.495927,-99) , 
8, -0.687063, 1, 0, 0.498026,-99) , 
8, 1.85714, 0, 0, 0.499313,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0141393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498792,-99) , 
6, 0.0237969, 0, 0, 0.501573,-99) , 
9, -1.88175, 1, 0, 0.505068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494397,-99) , 
10, 1.10389, 0, 0, 0.495603,-99) , 
9, -0.732132, 0, 0, 0.497256,-99) , 
5, -0.251682, 1, 0, 0.501003,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00693984);
  fForest.push_back( 
NN(
0, 
0, 
-1, -1.57143, 1, 1, 0.50347,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0175975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471876,-99) , 
10, 2.58903, 0, 0, 0.496586,-99) , 
7, -951.256, 0, 0, 0.505503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493835,-99) , 
7, -20.9575, 1, 0, 0.499241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478755,-99) , 
8, 2.14293, 1, 0, 0.498488,-99) , 
5, -0.626479, 1, 0, 0.500024,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0206969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28651, 0, 1, 0.510247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407219,-99) , 
5, 0.215197, 1, 0, 0.473606,-99) , 
7, -1.05069, 0, 0, 0.504474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497125,-99) , 
9, -3.00066, 1, 0, 0.499282,-99) , 
NN(
0, 
0, 
-1, -0.257086, 1, -1, 0.476072,-99) , 
8, 1.57142, 1, 0, 0.497007,-99) , 
7, -951.286, 0, 0, 0.500189,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0104671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498245,-99) , 
7, -951.275, 1, 0, 0.502904,-99) , 
4, 0.998571, 1, 0, 0.503445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483817,-99) , 
8, 2.14285, 1, 0, 0.502831,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0113675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499682,-99) , 
8, -0.714148, 0, 0, 0.510867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492198,-99) , 
2, -0.0709326, 0, 0, 0.506475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489687,-99) , 
0, 0.499451, 1, 0, 0.507587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495346,-99) , 
10, 1.35437, 0, 0, 0.497927,-99) , 
5, 0.590173, 0, 0, 0.498825,-99) , 
0, 0.493328, 1, 0, 0.499929,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.00532667);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513158,-99) , 
NN(
NN(
0, 
0, 
-1, 8.42761, 0, 1, 0.501112,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.486472,-99) , 
4, 0.999048, 0, 0, 0.500271,-99) , 
9, 4.46349, 0, 0, 0.501223,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00984325);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.53422, 1, 1, 0.52003,-99) , 
NN(
NN(
0, 
0, 
-1, 0.400686, 0, 1, 0.503036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490008,-99) , 
5, -0.165797, 1, 0, 0.497078,-99) , 
0, 0.499995, 1, 0, 0.501075,-99) , 
2, 0.214126, 0, 0, 0.50215,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.00999248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496155,-99) , 
3, 4.25856, 0, 0, 0.498019,-99) , 
4, 0.998572, 1, 0, 0.498651,-99) , 
NN(
0, 
0, 
-1, 0.142797, 1, -1, 0.486754,-99) , 
2, -0.214075, 0, 0, 0.497999,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.00705136);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521859,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14286, 0, 1, 0.501966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487573,-99) , 
2, 0.0728003, 0, 0, 0.491394,-99) , 
0, 0.503306, 1, 0, 0.500678,-99) , 
0, 0.489519, 1, 0, 0.501311,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0143462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00563796, 0, 1, 0.506409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485151,-99) , 
8, -0.387711, 0, 0, 0.494302,-99) , 
9, -0.170722, 1, 0, 0.503338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496556,-99) , 
5, -0.0690592, 1, 0, 0.514108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490708,-99) , 
8, 0.848434, 1, 0, 0.494654,-99) , 
8, 1.89797, 0, 0, 0.497445,-99) , 
8, 0.428603, 1, 0, 0.501149,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0109602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460005,-99) , 
4, 0.998186, 0, 0, 0.512651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499001,-99) , 
0, 0.492376, 1, 0, 0.500432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473118,-99) , 
4, 0.99941, 0, 0, 0.499683,-99) , 
4, 0.999048, 1, 0, 0.500421,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.00663422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496725,-99) , 
10, -0.70308, 0, 0, 0.510296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499768,-99) , 
0, 0.490471, 1, 0, 0.500682,-99) , 
NN(
0, 
0, 
-1, 4.39911, 0, -1, 0.486783,-99) , 
10, 3.73705, 1, 0, 0.499078,-99) , 
8, -1.57143, 1, 0, 0.499873,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.01035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0011307, 0, 1, 0.503644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486455,-99) , 
6, 0.0237494, 1, 0, 0.502951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514794,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484976,-99) , 
2, -0.072251, 1, 0, 0.4927,-99) , 
0, 0.492376, 0, 0, 0.501889,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0146508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498496,-99) , 
8, 1.00001, 1, 0, 0.504712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47982,-99) , 
5, 0.303297, 1, 0, 0.503218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547132,-99) , 
NN(
0, 
0, 
-1, -1.68695, 1, -1, 0.493979,-99) , 
9, -1.18089, 0, 0, 0.496637,-99) , 
10, 0.621262, 0, 0, 0.49983,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.013053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.29137, 1, 1, 0.519346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478232,-99) , 
9, -1.21713, 1, 0, 0.501636,-99) , 
9, -0.415418, 0, 0, 0.509415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493279,-99) , 
10, 1.99914, 1, 0, 0.499707,-99) , 
NN(
0, 
0, 
-1, -0.333415, 1, -1, 0.488704,-99) , 
0, 0.491424, 0, 0, 0.498906,-99) , 
8, 0.999994, 0, 0, 0.501065,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0142142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483992,-99) , 
10, 0.529177, 1, 0, 0.524016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477058,-99) , 
10, -0.559135, 1, 0, 0.497739,-99) , 
9, -2.22138, 0, 0, 0.505699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498686,-99) , 
0, 0.492376, 1, 0, 0.499927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473183,-99) , 
9, -3.3366, 1, 0, 0.48625,-99) , 
10, -0.783866, 0, 0, 0.498142,-99) , 
5, 0.4021, 0, 0, 0.499486,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0222365);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475314,-99) , 
8, -1.91147, 0, 0, 0.504057,-99) , 
NN(
0, 
0, 
-1, 2.04763, 1, -1, 0.483106,-99) , 
8, 1.57144, 1, 0, 0.50201,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57132, 0, 1, 0.507735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371096,-99) , 
7, -1.72499, 0, 0, 0.498507,-99) , 
7, -951.203, 1, 0, 0.500521,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0165836);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.849254, 0, 1, 0.509045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495331,-99) , 
9, -2.13892, 1, 0, 0.498804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489139,-99) , 
9, -1.54921, 0, 0, 0.493102,-99) , 
5, 0.121676, 1, 0, 0.496997,-99) , 
0, 0.491424, 1, 0, 0.497896,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00500291);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499581,-99) , 
3, 8.5394, 0, 0, 0.500469,-99) , 
4, 0.998572, 1, 0, 0.501104,-99) , 
8, 2.14284, 0, 0, 0.50176,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0104064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.488651, 0, 1, 0.502851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483073,-99) , 
4, 0.999048, 0, 0, 0.501963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510484,-99) , 
NN(
0, 
0, 
-1, -3.38398, 0, -1, 0.484459,-99) , 
10, -1.0903, 0, 0, 0.492014,-99) , 
9, -2.86554, 0, 0, 0.500347,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0105234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495819,-99) , 
9, -1.09793, 1, 0, 0.501226,-99) , 
9, 1.60045, 0, 0, 0.502104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481786,-99) , 
10, 7.19992, 0, 0, 0.491153,-99) , 
10, 4.57173, 1, 0, 0.501185,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0087794);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492143,-99) , 
10, -1.26666, 0, 0, 0.507592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488228,-99) , 
10, 3.86449, 1, 0, 0.499532,-99) , 
8, -1.28568, 1, 0, 0.500422,-99) , 
NN(
0, 
0, 
-1, 0.489791, 1, -1, 0.484036,-99) , 
0, 0.491424, 0, 0, 0.499239,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0169391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.18138, 1, 1, 0.515706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477718,-99) , 
9, -1.61798, 1, 0, 0.4942,-99) , 
9, -0.415418, 0, 0, 0.503636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493857,-99) , 
9, -1.32542, 1, 0, 0.504756,-99) , 
NN(
0, 
0, 
-1, -20.9575, 1, -1, 0.495199,-99) , 
8, -1.28567, 1, 0, 0.496539,-99) , 
8, 1.00002, 0, 0, 0.497979,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0126842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497861,-99) , 
4, 0.999955, 1, 0, 0.500937,-99) , 
4, 0.999048, 1, 0, 0.502575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510814,-99) , 
NN(
0, 
0, 
-1, -0.692539, 0, -1, 0.490006,-99) , 
0, 0.493328, 1, 0, 0.493126,-99) , 
3, 4.463, 1, 0, 0.500586,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0141944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.678679, 1, 1, 0.50584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486106,-99) , 
8, 0.150236, 1, 0, 0.493872,-99) , 
10, 4.10694, 1, 0, 0.502746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51725,-99) , 
NN(
0, 
0, 
-1, 0.443952, 1, -1, 0.493365,-99) , 
9, -0.703694, 0, 0, 0.494544,-99) , 
10, 1.15319, 0, 0, 0.497624,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0154413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49739,-99) , 
4, 0.999991, 0, 0, 0.503173,-99) , 
NN(
0, 
0, 
-1, 0.142689, 0, -1, 0.485558,-99) , 
4, 0.999819, 0, 0, 0.501776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472222,-99) , 
7, -951.286, 0, 0, 0.489672,-99) , 
4, 0.999524, 0, 0, 0.500643,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0103985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489001,-99) , 
5, -0.630252, 0, 0, 0.504425,-99) , 
8, -1.44893, 0, 0, 0.509977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490337,-99) , 
5, 0.495586, 1, 0, 0.505529,-99) , 
NN(
0, 
0, 
-1, -0.0611661, 0, -1, 0.497573,-99) , 
0, 0.500947, 0, 0, 0.499623,-99) , 
8, -1.28567, 1, 0, 0.500781,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.016832);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214033, 1, 1, 0.504661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490935,-99) , 
9, -2.74282, 0, 0, 0.5048,-99) , 
NN(
0, 
0, 
-1, -2.7024, 1, -1, 0.477415,-99) , 
5, 0.0338646, 0, 0, 0.497162,-99) , 
10, -0.563576, 0, 0, 0.502918,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0101795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495978,-99) , 
3, 3.81332, 1, 0, 0.501275,-99) , 
5, 0.678922, 0, 0, 0.502177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492914,-99) , 
5, -0.25215, 1, 0, 0.50201,-99) , 
NN(
0, 
0, 
-1, 0.713902, 1, -1, 0.490323,-99) , 
0, 0.504621, 0, 0, 0.49455,-99) , 
0, 0.5019, 1, 0, 0.500709,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0097231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.50778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496907,-99) , 
9, -1.9002, 1, 0, 0.500579,-99) , 
5, -0.626479, 1, 0, 0.502148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479783,-99) , 
8, -0.142891, 0, 0, 0.491557,-99) , 
0, 0.504757, 1, 0, 0.501463,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.00920029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487521,-99) , 
6, 0.0158681, 1, 0, 0.502288,-99) , 
8, 2.14285, 0, 0, 0.50303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479236,-99) , 
6, 0.0238024, 1, 0, 0.502087,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0134396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492999,-99) , 
10, -1.17526, 0, 0, 0.505122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489479,-99) , 
5, -0.440351, 0, 0, 0.497286,-99) , 
7, -948.87, 0, 0, 0.50061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484805,-99) , 
6, 0.0238024, 1, 0, 0.49998,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0139945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497017,-99) , 
5, -0.439694, 1, 0, 0.499372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476259,-99) , 
3, 1.8106, 0, 0, 0.488826,-99) , 
10, 3.8871, 1, 0, 0.498292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478393,-99) , 
2, 0.139401, 0, 0, 0.498001,-99) , 
NN(
0, 
0, 
-1, -0.667306, 1, -1, 0.481208,-99) , 
7, -951.286, 0, 0, 0.488522,-99) , 
2, 0.0713938, 1, 0, 0.496542,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00690886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48099,-99) , 
4, 0.999728, 0, 0, 0.49872,-99) , 
4, 0.998572, 1, 0, 0.499376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481276,-99) , 
8, 2.14285, 1, 0, 0.49881,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.00817639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497278,-99) , 
8, -0.14287, 0, 0, 0.500341,-99) , 
NN(
0, 
0, 
-1, -0.841767, 0, -1, 0.491826,-99) , 
2, 0.0713938, 1, 0, 0.49884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479281,-99) , 
0, 0.489519, 0, 0, 0.498288,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0202393);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142788, 1, 1, 0.505791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494558,-99) , 
10, 0.839598, 0, 0, 0.498782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487721,-99) , 
5, 0.012226, 0, 0, 0.491008,-99) , 
9, -1.0534, 1, 0, 0.495948,-99) , 
9, 2.91838, 0, 0, 0.496943,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0160229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.373749, 0, 1, 0.50834,-99) , 
NN(
0, 
0, 
-1, 2.20628, 0, -1, 0.489929,-99) , 
9, -0.143176, 1, 0, 0.503998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481452,-99) , 
3, 5.35623, 1, 0, 0.503023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494623,-99) , 
9, -0.344459, 0, 0, 0.496855,-99) , 
5, -0.349382, 1, 0, 0.499154,-99) , 
8, -0.142826, 1, 0, 0.501207,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00862086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497951,-99) , 
8, -1.28568, 1, 0, 0.499508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480392,-99) , 
2, 0.0720745, 0, 0, 0.488265,-99) , 
4, 0.99966, 0, 0, 0.498578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486268,-99) , 
4, 0.998572, 0, 0, 0.498142,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.00820293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498684,-99) , 
9, -1.15425, 1, 0, 0.502236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491108,-99) , 
10, 4.06531, 1, 0, 0.501515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4845,-99) , 
5, -0.906617, 0, 0, 0.500822,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0172747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.697561, 0, 1, 0.505349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493088,-99) , 
10, 0.601958, 1, 0, 0.496627,-99) , 
9, -1.29686, 1, 0, 0.502135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484576,-99) , 
8, 0.428863, 1, 0, 0.501545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481044,-99) , 
7, -951.286, 1, 0, 0.493777,-99) , 
10, 2.66587, 1, 0, 0.500711,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00660198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500358, 1, 1, 0.504621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498685,-99) , 
9, 2.91335, 0, 0, 0.499504,-99) , 
0, 0.499995, 0, 0, 0.501206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484895,-99) , 
6, 0.0237708, 1, 0, 0.500552,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.00750356);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.4271, 0, 1, 0.502283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490721,-99) , 
2, -0.0710845, 1, 0, 0.499943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465517,-99) , 
8, 0.71411, 1, 0, 0.489965,-99) , 
4, 0.999524, 0, 0, 0.50113,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.00848843);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518038,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0611534, 0, 1, 0.508996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496842,-99) , 
2, 0.0305233, 0, 0, 0.498983,-99) , 
2, -0.214291, 1, 0, 0.499545,-99) , 
8, 2.14284, 0, 0, 0.500163,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.00806721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499244,-99) , 
5, -0.550435, 1, 0, 0.501626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482724,-99) , 
5, -0.906521, 0, 0, 0.500861,-99) , 
8, -1.85715, 1, 0, 0.501637,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0129572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498168,-99) , 
10, 0.117927, 0, 0, 0.502893,-99) , 
NN(
0, 
0, 
-1, -0.81611, 1, -1, 0.484259,-99) , 
10, 3.9164, 1, 0, 0.50088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468993,-99) , 
10, -0.840114, 0, 0, 0.485954,-99) , 
8, -1.57138, 0, 0, 0.499853,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0088295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.27658, 1, 1, 0.511944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496834,-99) , 
0, 0.5058, 1, 0, 0.508139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488816,-99) , 
2, -0.227508, 0, 0, 0.501053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487843,-99) , 
10, 1.83456, 0, 0, 0.491762,-99) , 
2, 0.0717298, 1, 0, 0.49948,-99) , 
0, 0.502852, 0, 0, 0.500733,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.00982171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49478,-99) , 
10, -0.386783, 0, 0, 0.501183,-99) , 
5, 0.682512, 0, 0, 0.502061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478595,-99) , 
4, 0.999887, 0, 0, 0.497888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488247,-99) , 
4, 0.999524, 0, 0, 0.49661,-99) , 
0, 0.495233, 0, 0, 0.500683,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.00817302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497756,-99) , 
2, 0.21311, 0, 0, 0.498416,-99) , 
3, 8.5394, 0, 0, 0.499177,-99) , 
NN(
0, 
0, 
-1, 0.496652, 1, -1, 0.481511,-99) , 
4, 0.999048, 0, 0, 0.498227,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0121858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.650797, 0, 1, 0.514484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480723,-99) , 
7, -951.286, 1, 0, 0.498276,-99) , 
10, -1.25886, 0, 0, 0.507804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489588,-99) , 
10, 2.52554, 1, 0, 0.498978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473091,-99) , 
3, 9.39852, 1, 0, 0.498073,-99) , 
8, -0.999963, 1, 0, 0.499712,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0198843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468619,-99) , 
9, -0.903377, 1, 0, 0.495886,-99) , 
10, 2.61954, 0, 0, 0.506567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495057,-99) , 
10, 0.891349, 0, 0, 0.497495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48998,-99) , 
6, 0.0237495, 0, 0, 0.492428,-99) , 
5, -0.438759, 0, 0, 0.495617,-99) , 
8, 1.57143, 0, 0, 0.496632,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0164695);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496138,-99) , 
9, -3.25129, 0, 0, 0.515605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483986,-99) , 
8, -1.95239, 0, 0, 0.502056,-99) , 
5, 0.395369, 0, 0, 0.504299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499964,-99) , 
5, -0.35058, 0, 0, 0.504392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488204,-99) , 
10, -0.291231, 1, 0, 0.492395,-99) , 
9, -0.462542, 0, 0, 0.497095,-99) , 
8, 0.142839, 1, 0, 0.500878,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0192529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.03002, 0, 1, 0.519364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477765,-99) , 
9, -1.73091, 0, 0, 0.49261,-99) , 
10, -0.417733, 1, 0, 0.50815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472142,-99) , 
8, -1.5714, 0, 0, 0.501213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491831,-99) , 
8, 1.28562, 0, 0, 0.49498,-99) , 
7, -948.87, 1, 0, 0.498746,-99) , 
5, 0.403094, 0, 0, 0.500415,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0145121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49988,-99) , 
9, -3.12551, 1, 0, 0.502125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483872,-99) , 
9, -2.11664, 0, 0, 0.490256,-99) , 
5, 0.558998, 1, 0, 0.500189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476166,-99) , 
4, 0.999982, 0, 0, 0.496496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464549,-99) , 
4, 0.99981, 0, 0, 0.493801,-99) , 
5, -0.440355, 0, 0, 0.497917,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.015347);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448098,-99) , 
7, -1.41512, 0, 0, 0.504767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479041,-99) , 
4, 0.999524, 0, 0, 0.498779,-99) , 
7, -950.098, 0, 0, 0.5013,-99) , 
5, 0.767772, 0, 0, 0.501811,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00854224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497359,-99) , 
8, 1.85713, 0, 0, 0.49814,-99) , 
4, 0.998572, 1, 0, 0.499121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487868,-99) , 
3, 8.84534, 1, 0, 0.498636,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.00857808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510644,-99) , 
NN(
0, 
0, 
-1, 0.682512, 1, -1, 0.499126,-99) , 
2, -0.214119, 1, 0, 0.499775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484736,-99) , 
3, 4.78731, 0, 0, 0.488708,-99) , 
5, 0.388427, 0, 0, 0.492865,-99) , 
8, -0.714246, 0, 0, 0.498142,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0238021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49996,-99) , 
5, 0.482542, 0, 0, 0.508532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418755,-99) , 
5, 0.302108, 1, 0, 0.48485,-99) , 
7, -0.858501, 0, 0, 0.503868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471044,-99) , 
4, 0.999909, 0, 0, 0.500222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476479,-99) , 
4, 0.999524, 0, 0, 0.498274,-99) , 
7, -948.87, 0, 0, 0.50066,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0182777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.299295, 0, 1, 0.51056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431676,-99) , 
5, 0.308645, 1, 0, 0.487119,-99) , 
7, -0.797485, 0, 0, 0.505612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516624,-99) , 
NN(
0, 
0, 
-1, -1.28568, 0, -1, 0.496442,-99) , 
9, -3.02496, 1, 0, 0.498494,-99) , 
7, -951.274, 0, 0, 0.501525,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0171715);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481268,-99) , 
7, -0.858501, 0, 0, 0.502147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493039,-99) , 
9, 2.09784, 0, 0, 0.495567,-99) , 
7, -948.87, 0, 0, 0.498309,-99) , 
9, -3.53658, 1, 0, 0.499079,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.00536172);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483947,-99) , 
3, 8.72033, 1, 0, 0.501234,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0137082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.719433, 1, 1, 0.504108,-99) , 
NN(
0, 
0, 
-1, -0.80497, 1, -1, 0.485322,-99) , 
10, 3.77304, 1, 0, 0.501873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517001,-99) , 
NN(
0, 
0, 
-1, -1.22995, 1, -1, 0.486164,-99) , 
10, 1.29908, 0, 0, 0.492067,-99) , 
8, -0.999964, 0, 0, 0.500265,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0128307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499389,-99) , 
0, 0.500948, 0, 0, 0.50243,-99) , 
9, -1.1222, 0, 0, 0.504569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484021,-99) , 
10, 1.21378, 0, 0, 0.494267,-99) , 
9, -2.21909, 1, 0, 0.496595,-99) , 
5, -0.065269, 0, 0, 0.499926,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.00992682);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496522,-99) , 
5, 0.354095, 0, 0, 0.498001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477837,-99) , 
4, 0.999048, 0, 0, 0.497059,-99) , 
5, 0.777248, 0, 0, 0.497534,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0142375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00567766, 1, 1, 0.504697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491059,-99) , 
6, 0.0136003, 0, 0, 0.494857,-99) , 
5, -0.438747, 0, 0, 0.501318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485201,-99) , 
6, 0.0238025, 1, 0, 0.500664,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00891715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499245,-99) , 
1, -0.0101963, 1, 0, 0.500059,-99) , 
6, 0.0238024, 0, 0, 0.500552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470833,-99) , 
9, -1.37534, 1, 0, 0.484521,-99) , 
5, -0.348326, 1, 0, 0.492095,-99) , 
8, 1.2857, 1, 0, 0.499376,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.00884383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478992,-99) , 
8, -1.84354, 0, 0, 0.500522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477822,-99) , 
7, -951.256, 1, 0, 0.491511,-99) , 
10, 2.67147, 1, 0, 0.49906,-99) , 
NN(
0, 
0, 
-1, 0.0195942, 0, -1, 0.482261,-99) , 
8, 1.85713, 1, 0, 0.498127,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0163428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49112,-99) , 
5, 0.302345, 1, 0, 0.500867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488141,-99) , 
5, 0.0189909, 0, 0, 0.493964,-99) , 
8, -0.550989, 0, 0, 0.498587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507946,-99) , 
NN(
0, 
0, 
-1, 1.85717, 1, -1, 0.475149,-99) , 
7, -951.286, 0, 0, 0.48819,-99) , 
8, 1.28573, 1, 0, 0.497153,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0164654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488389,-99) , 
3, 6.64873, 1, 0, 0.502782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479972,-99) , 
5, 0.214716, 0, 0, 0.49065,-99) , 
10, -0.783866, 0, 0, 0.501013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486899,-99) , 
9, -2.72088, 0, 0, 0.499622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472684,-99) , 
10, -0.0276205, 1, 0, 0.492255,-99) , 
5, 0.495572, 1, 0, 0.499856,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0111981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496633,-99) , 
9, -2.73239, 1, 0, 0.498482,-99) , 
NN(
0, 
0, 
-1, -1.72499, 0, -1, 0.493115,-99) , 
7, -951.203, 1, 0, 0.496184,-99) , 
8, 2.14283, 0, 0, 0.49675,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00784765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510865,-99) , 
NN(
0, 
0, 
-1, -0.813939, 0, -1, 0.498619,-99) , 
8, -1.77548, 1, 0, 0.499324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517134,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.483873,-99) , 
2, -0.0704883, 1, 0, 0.490177,-99) , 
8, 1.2857, 1, 0, 0.498055,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00600318);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499073,-99) , 
4, 0.999048, 1, 0, 0.499825,-99) , 
NN(
0, 
0, 
-1, 0.328399, 0, -1, 0.486269,-99) , 
0, 0.504757, 1, 0, 0.498952,-99) , 
8, 2.14286, 0, 0, 0.499707,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00577444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489446,-99) , 
0, 0.505709, 1, 0, 0.501641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483503,-99) , 
8, 2.14283, 1, 0, 0.501068,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0158989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485601,-99) , 
10, 0.104016, 1, 0, 0.526186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491927,-99) , 
10, -1.37245, 1, 0, 0.49708,-99) , 
9, -2.3621, 0, 0, 0.507923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498719,-99) , 
9, -2.30917, 1, 0, 0.501156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478657,-99) , 
5, 0.247187, 1, 0, 0.500248,-99) , 
5, 0.309553, 0, 0, 0.501961,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.013298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14018, 1, 1, 0.505102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487177,-99) , 
5, 0.213756, 0, 0, 0.496205,-99) , 
10, -0.294302, 0, 0, 0.50202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498311,-99) , 
5, -0.878572, 1, 0, 0.503042,-99) , 
NN(
0, 
0, 
-1, 1.99534, 0, -1, 0.482315,-99) , 
9, 3.57028, 0, 0, 0.494448,-99) , 
10, 2.97641, 1, 0, 0.500888,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.00748703);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513054,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489247,-99) , 
5, 0.0231258, 0, 0, 0.49438,-99) , 
0, 0.495233, 0, 0, 0.499698,-99) , 
9, 4.39257, 0, 0, 0.500693,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00646191);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511754,-99) , 
NN(
0, 
0, 
-1, 6.82842, 1, -1, 0.497148,-99) , 
8, -1.85715, 1, 0, 0.497769,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.00853145);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.75901, 1, 1, 0.507765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495424,-99) , 
10, -0.273106, 0, 0, 0.500108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477372,-99) , 
8, -1.85709, 0, 0, 0.49915,-99) , 
9, 2.91838, 0, 0, 0.500012,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00799166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498863,-99) , 
3, 8.49002, 0, 0, 0.499843,-99) , 
4, 0.999048, 1, 0, 0.500627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491934,-99) , 
5, -0.596959, 1, 0, 0.497985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461983,-99) , 
5, 0.20908, 1, 0, 0.489239,-99) , 
0, 0.492376, 0, 0, 0.499449,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00799366);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495466,-99) , 
5, 0.250758, 1, 0, 0.500547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484153,-99) , 
5, -0.906521, 0, 0, 0.499883,-99) , 
8, -1.85709, 1, 0, 0.500556,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00705913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497326,-99) , 
9, -1.90897, 1, 0, 0.49949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487251,-99) , 
5, -0.9066, 0, 0, 0.498978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481369,-99) , 
8, 2.14284, 1, 0, 0.49842,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0165013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498378,-99) , 
9, -1.86545, 1, 0, 0.501243,-99) , 
8, 1.57139, 0, 0, 0.503343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493515,-99) , 
9, -1.37255, 0, 0, 0.49655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447436,-99) , 
9, -0.893416, 1, 0, 0.476576,-99) , 
8, 1.57154, 1, 0, 0.494346,-99) , 
5, -0.251681, 1, 0, 0.498677,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0057208);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85711, 1, 1, 0.502189,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.485337,-99) , 
4, 0.999048, 0, 0, 0.501282,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0108922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497371,-99) , 
5, -0.786192, 0, 0, 0.502979,-99) , 
9, -0.159204, 1, 0, 0.506913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491485,-99) , 
9, -1.16202, 1, 0, 0.499118,-99) , 
9, 0.915092, 0, 0, 0.499761,-99) , 
5, -0.625839, 1, 0, 0.501341,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0217797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57133, 1, 1, 0.508847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465706,-99) , 
9, -2.84144, 1, 0, 0.485641,-99) , 
10, -0.352854, 0, 0, 0.505794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486095,-99) , 
10, -0.54036, 1, 0, 0.49589,-99) , 
9, -1.35958, 0, 0, 0.498147,-99) , 
5, 0.0282036, 1, 0, 0.503005,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.019804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494608,-99) , 
5, -0.441425, 0, 0, 0.499866,-99) , 
8, -1.5714, 1, 0, 0.500845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465053,-99) , 
5, 0.222515, 0, 0, 0.507536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461566,-99) , 
9, -3.8315, 1, 0, 0.481041,-99) , 
9, -3.23768, 0, 0, 0.491861,-99) , 
10, -0.903824, 0, 0, 0.499392,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0166642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.66279, 1, 1, 0.514364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486383,-99) , 
9, -1.80789, 1, 0, 0.495853,-99) , 
9, 0.00879106, 0, 0, 0.502004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487862,-99) , 
9, -0.0444653, 1, 0, 0.499944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484269,-99) , 
10, -0.0960031, 0, 0, 0.494473,-99) , 
8, -0.346956, 1, 0, 0.497151,-99) , 
8, 0.714279, 0, 0, 0.498518,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0112507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49596,-99) , 
4, 0.999524, 1, 0, 0.500048,-99) , 
0, 0.492376, 1, 0, 0.503181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513078,-99) , 
NN(
0, 
0, 
-1, -2.04995, 1, -1, 0.495405,-99) , 
8, -1.85709, 1, 0, 0.496152,-99) , 
2, -0.071078, 1, 0, 0.497414,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0174695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494154,-99) , 
8, 0.428325, 0, 0, 0.501541,-99) , 
9, -1.25174, 1, 0, 0.505667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489614,-99) , 
9, -3.36028, 0, 0, 0.504155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485917,-99) , 
10, -0.262456, 0, 0, 0.495295,-99) , 
5, 0.295271, 0, 0, 0.498474,-99) , 
5, -0.439153, 1, 0, 0.501055,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00802346);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499354,-99) , 
8, -1.28567, 1, 0, 0.500858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480536,-99) , 
5, 0.309385, 0, 0, 0.492876,-99) , 
10, -0.904589, 0, 0, 0.499547,-99) , 
0, 0.505709, 0, 0, 0.500114,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.00905964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49868,-99) , 
3, 4.34565, 0, 0, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473692,-99) , 
4, 0.99941, 0, 0, 0.500617,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.486665,-99) , 
4, 0.999048, 0, 0, 0.499854,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0058643);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515711,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489519, 1, 1, 0.501016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476884,-99) , 
10, -1.89047, 0, 0, 0.500031,-99) , 
9, 4.51743, 0, 0, 0.501185,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.00816299);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498092,-99) , 
10, 1.79671, 0, 0, 0.499714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478446,-99) , 
8, 2.14284, 1, 0, 0.499035,-99) , 
9, 4.34365, 0, 0, 0.500056,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0133411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76187, 1, 1, 0.516077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486643,-99) , 
10, -1.5515, 0, 0, 0.506103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496727,-99) , 
4, 0.999524, 1, 0, 0.498108,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.486093,-99) , 
8, 1.66668, 1, 0, 0.496978,-99) , 
8, -0.999971, 1, 0, 0.498506,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0153288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498715,-99) , 
10, 0.403458, 0, 0, 0.50238,-99) , 
5, 0.678921, 0, 0, 0.50322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497574,-99) , 
7, -951.286, 0, 0, 0.506502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480212,-99) , 
10, 1.1717, 0, 0, 0.490246,-99) , 
9, -0.715458, 0, 0, 0.498224,-99) , 
8, 0.714279, 1, 0, 0.501818,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.00811389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485582,-99) , 
4, 0.999388, 0, 0, 0.501791,-99) , 
4, 0.998572, 1, 0, 0.502322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479049,-99) , 
0, 0.498091, 1, 0, 0.492491,-99) , 
8, 1.85713, 1, 0, 0.501772,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.00578336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502091,-99) , 
NN(
0, 
0, 
-1, -0.356258, 1, -1, 0.49208,-99) , 
0, 0.491424, 0, 0, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0.142994, 0, -1, 0.490166,-99) , 
2, -0.214086, 0, 0, 0.500793,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0130158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499858,-99) , 
3, 2.19673, 1, 0, 0.516396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485554,-99) , 
5, -0.0736458, 0, 0, 0.502036,-99) , 
3, 4.43948, 1, 0, 0.510682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49784,-99) , 
2, 0.228009, 0, 0, 0.499092,-99) , 
NN(
0, 
0, 
-1, -0.164918, 1, -1, 0.485376,-99) , 
8, 1.57143, 1, 0, 0.497859,-99) , 
2, -0.0712563, 1, 0, 0.500184,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0111157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00212097, 0, 1, 0.514061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498081,-99) , 
2, 0.215827, 0, 0, 0.499231,-99) , 
3, 0.714286, 1, 0, 0.501671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49828,-99) , 
3, 6.05899, 1, 0, 0.505015,-99) , 
NN(
0, 
0, 
-1, -1.65507, 1, -1, 0.490425,-99) , 
5, -0.443153, 1, 0, 0.495557,-99) , 
3, 4.463, 1, 0, 0.500387,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0236695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492365,-99) , 
2, 0.0716557, 1, 0, 0.503016,-99) , 
8, -1.57143, 1, 0, 0.504074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470403,-99) , 
5, 0.209522, 0, 0, 0.513995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450042,-99) , 
9, -3.86853, 1, 0, 0.48048,-99) , 
9, -3.28484, 0, 0, 0.493206,-99) , 
10, -1.01658, 0, 0, 0.502522,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0112267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499497,-99) , 
10, 0.255756, 0, 0, 0.504939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496183,-99) , 
10, 0.215886, 1, 0, 0.49793,-99) , 
9, -1.758, 1, 0, 0.501007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489221,-99) , 
5, -0.906455, 0, 0, 0.500529,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00666118);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214828, 0, 1, 0.502802,-99) , 
NN(
0, 
0, 
-1, 0.496652, 1, -1, 0.487473,-99) , 
4, 0.999048, 0, 0, 0.501969,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00703479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499319,-99) , 
2, 0.213865, 0, 0, 0.500416,-99) , 
4, 0.999048, 1, 0, 0.501322,-99) , 
NN(
0, 
0, 
-1, -0.220755, 0, -1, 0.486743,-99) , 
8, 1.57139, 1, 0, 0.500002,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0135461);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510866,-99) , 
NN(
NN(
0, 
0, 
-1, 0.182915, 0, 1, 0.506199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491566,-99) , 
9, -0.347424, 0, 0, 0.497582,-99) , 
9, -1.82867, 1, 0, 0.501347,-99) , 
9, 4.39257, 0, 0, 0.502067,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00882139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499473,-99) , 
10, 0.936411, 0, 0, 0.501976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490059,-99) , 
5, -0.906456, 0, 0, 0.501474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460021,-99) , 
9, -0.695695, 1, 0, 0.485477,-99) , 
10, 2.71811, 0, 0, 0.493915,-99) , 
8, 1.57141, 1, 0, 0.500782,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0131903);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479227,-99) , 
7, -0.972885, 0, 0, 0.505348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480246,-99) , 
4, 0.999048, 0, 0, 0.499436,-99) , 
7, -950.098, 0, 0, 0.50195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481311,-99) , 
6, 0.0237891, 1, 0, 0.501135,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0158356);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48627,-99) , 
3, 1.41919, 1, 0, 0.512568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496409,-99) , 
4, 0.999977, 1, 0, 0.500722,-99) , 
4, 0.999524, 1, 0, 0.501945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491794,-99) , 
2, -0.071345, 0, 0, 0.503058,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.484234,-99) , 
0, 0.499042, 1, 0, 0.494558,-99) , 
3, 4.74401, 1, 0, 0.500545,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0127121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492503,-99) , 
8, -1.38095, 0, 0, 0.50283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480615,-99) , 
8, 1.85713, 1, 0, 0.501732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487926,-99) , 
9, 7.13324, 1, 0, 0.497316,-99) , 
NN(
0, 
0, 
-1, -0.629028, 0, -1, 0.482832,-99) , 
5, -0.763922, 1, 0, 0.491629,-99) , 
10, 2.8762, 1, 0, 0.50016,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0212057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494792,-99) , 
10, -0.629583, 0, 0, 0.519328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49862,-99) , 
6, 0.0237494, 0, 0, 0.500084,-99) , 
9, -2.30731, 1, 0, 0.503136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482669,-99) , 
10, -0.362178, 1, 0, 0.501231,-99) , 
NN(
0, 
0, 
-1, 0.643624, 1, -1, 0.485894,-99) , 
9, -2.66632, 0, 0, 0.493725,-99) , 
5, 0.216013, 1, 0, 0.500624,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0113814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.62517, 1, 1, 0.517814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4785,-99) , 
7, -951.286, 1, 0, 0.500857,-99) , 
10, -1.42174, 0, 0, 0.511399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521082,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.498388,-99) , 
2, 0.215035, 0, 0, 0.499702,-99) , 
8, -0.999967, 1, 0, 0.501688,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0158801);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494829,-99) , 
6, 0.0011327, 0, 0, 0.50525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494153,-99) , 
6, 0.0135981, 0, 0, 0.496674,-99) , 
5, -0.158742, 0, 0, 0.500789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475964,-99) , 
6, 0.0237968, 1, 0, 0.499811,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0154459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484926,-99) , 
4, 0.999954, 0, 0, 0.505783,-99) , 
4, 0.999524, 1, 0, 0.511074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497726,-99) , 
9, -1.37515, 1, 0, 0.514339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497792,-99) , 
2, -0.152948, 1, 0, 0.499038,-99) , 
8, -1.28567, 1, 0, 0.50073,-99) , 
2, 0.0713938, 0, 0, 0.502595,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0137927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486572,-99) , 
6, 0.0238024, 1, 0, 0.505315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474005,-99) , 
8, -0.14249, 1, 0, 0.485326,-99) , 
0, 0.504757, 1, 0, 0.504049,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0183058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492012,-99) , 
4, 0.999991, 0, 0, 0.513754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486197,-99) , 
4, 0.999905, 0, 0, 0.510319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499523,-99) , 
10, 1.03559, 0, 0, 0.5028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486363,-99) , 
5, -0.182632, 0, 0, 0.492999,-99) , 
9, -0.736111, 1, 0, 0.50068,-99) , 
5, -0.627627, 1, 0, 0.502788,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.00919393);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493422,-99) , 
9, 0.423291, 1, 0, 0.500402,-99) , 
NN(
0, 
0, 
-1, 1.87658, 0, -1, 0.48745,-99) , 
8, 1.61224, 1, 0, 0.499256,-99) , 
8, -1.85708, 1, 0, 0.499961,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0138405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487815,-99) , 
0, 0.491424, 0, 0, 0.506544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489335,-99) , 
2, -0.139221, 1, 0, 0.497378,-99) , 
2, -0.0712063, 0, 0, 0.504929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499075,-99) , 
9, 1.60481, 0, 0, 0.50269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47138,-99) , 
5, 0.0223952, 1, 0, 0.500288,-99) , 
10, 1.06341, 1, 0, 0.503117,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00841047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498581,-99) , 
9, -2.20936, 1, 0, 0.50065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468958,-99) , 
3, 4.46817, 1, 0, 0.486712,-99) , 
2, 0.214156, 1, 0, 0.499879,-99) , 
9, 4.51743, 0, 0, 0.500973,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0118835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -948.87, 1, 1, 0.514625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498231,-99) , 
10, -0.982305, 0, 0, 0.503732,-99) , 
0, 0.495369, 1, 0, 0.505279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507113,-99) , 
NN(
0, 
0, 
-1, 0.490607, 0, -1, 0.492752,-99) , 
2, 0.0715038, 0, 0, 0.496205,-99) , 
0, 0.493328, 0, 0, 0.503991,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0121826);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.142808, 1, 1, 0.514895,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496408,-99) , 
5, -0.625832, 0, 0, 0.502881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488716,-99) , 
3, 4.4154, 0, 0, 0.492963,-99) , 
8, 1.28572, 1, 0, 0.501507,-99) , 
0, 0.491424, 1, 0, 0.502507,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.00699526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.235513, 0, 1, 0.508134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498794,-99) , 
4, 0.999524, 1, 0, 0.499549,-99) , 
8, 0.999992, 0, 0, 0.501298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485628,-99) , 
4, 0.998571, 0, 0, 0.500747,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00951186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.34753, 0, 1, 0.503261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476853,-99) , 
4, 0.999705, 0, 0, 0.502348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475287,-99) , 
8, 0.142939, 1, 0, 0.488813,-99) , 
4, 0.999524, 0, 0, 0.501083,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0140096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496943,-99) , 
10, 5.65134, 1, 0, 0.509317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498725,-99) , 
10, 0.639027, 0, 0, 0.503396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484287,-99) , 
10, 1.50078, 0, 0, 0.494637,-99) , 
9, -1.19789, 1, 0, 0.499951,-99) , 
9, 2.77467, 0, 0, 0.500911,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0143101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497809,-99) , 
7, -0.175918, 1, 0, 0.513058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486861,-99) , 
8, -1.40816, 0, 0, 0.501038,-99) , 
7, -951.203, 0, 0, 0.505964,-99) , 
NN(
NN(
0, 
0, 
-1, 6.51312, 1, 1, 0.511159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494142,-99) , 
7, -951.286, 1, 0, 0.498849,-99) , 
5, -0.719562, 1, 0, 0.500464,-99) , 
8, -0.428575, 1, 0, 0.502245,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0116583);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491878, 1, 1, 0.504095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49254,-99) , 
5, -0.626042, 1, 0, 0.497783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470284,-99) , 
2, -0.214428, 0, 0, 0.494279,-99) , 
3, 4.31445, 1, 0, 0.501916,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0159883);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494448,-99) , 
10, 0.231552, 1, 0, 0.516106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496745,-99) , 
8, 0.382059, 0, 0, 0.500873,-99) , 
9, -2.24346, 0, 0, 0.506652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519029,-99) , 
NN(
0, 
0, 
-1, 0.707037, 0, -1, 0.49601,-99) , 
9, -2.54585, 1, 0, 0.49779,-99) , 
5, 0.0289351, 0, 0, 0.501065,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.015336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497199,-99) , 
5, -0.255801, 0, 0, 0.50173,-99) , 
6, 0.0237891, 0, 0, 0.502318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470424,-99) , 
9, -1.3561, 1, 0, 0.482279,-99) , 
5, -0.439146, 1, 0, 0.491072,-99) , 
8, 0.999996, 1, 0, 0.500068,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.00997805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83448, 1, 1, 0.504903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49823,-99) , 
9, -3.05779, 1, 0, 0.500585,-99) , 
5, -0.281856, 1, 0, 0.502696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468215,-99) , 
9, -2.69508, 0, 0, 0.484502,-99) , 
5, 0.675663, 1, 0, 0.501647,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0105359);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494179,-99) , 
10, -0.785384, 0, 0, 0.515377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488661,-99) , 
10, 3.95946, 1, 0, 0.500545,-99) , 
8, -1.57143, 1, 0, 0.50161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466827,-99) , 
7, -951.286, 0, 0, 0.488817,-99) , 
4, 0.999048, 0, 0, 0.500912,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0135365);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498607,-99) , 
10, 1.0901, 0, 0, 0.501457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485005,-99) , 
8, 0.714328, 0, 0, 0.492645,-99) , 
9, -0.688544, 1, 0, 0.49869,-99) , 
9, 4.46349, 0, 0, 0.499789,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0100235);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42509, 0, 1, 0.503175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448211,-99) , 
4, 0.998186, 0, 0, 0.489417,-99) , 
4, 0.999048, 0, 0, 0.502422,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.00802541);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491937,-99) , 
10, -0.336621, 0, 0, 0.507321,-99) , 
NN(
0, 
0, 
-1, -1.13603, 0, -1, 0.497253,-99) , 
8, -1.5714, 1, 0, 0.497964,-99) , 
0, 0.505709, 0, 0, 0.49847,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.00844289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498234,-99) , 
0, 0.494281, 1, 0, 0.500003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482058,-99) , 
5, 0.674442, 1, 0, 0.499218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47067,-99) , 
7, -951.286, 0, 0, 0.487723,-99) , 
4, 0.999048, 0, 0, 0.498593,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0119459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.39852, 0, 1, 0.504263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491764,-99) , 
2, 0.21403, 1, 0, 0.503576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510757,-99) , 
NN(
0, 
0, 
-1, 1.77552, 1, -1, 0.481702,-99) , 
7, -948.87, 0, 0, 0.493151,-99) , 
8, 1.28571, 1, 0, 0.502143,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0113157);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494798,-99) , 
10, 0.218811, 0, 0, 0.499101,-99) , 
NN(
0, 
0, 
-1, 3.56429, 0, -1, 0.488904,-99) , 
10, 2.84699, 1, 0, 0.497529,-99) , 
8, 2.14282, 0, 0, 0.498007,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.013257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490483,-99) , 
10, -1.33737, 0, 0, 0.507051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496865,-99) , 
8, -1.57143, 1, 0, 0.498124,-99) , 
9, -2.6978, 1, 0, 0.499701,-99) , 
NN(
0, 
0, 
-1, 0.754178, 0, -1, 0.485331,-99) , 
5, 0.674442, 1, 0, 0.498862,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.011436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.264319, 0, 1, 0.506189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487747,-99) , 
9, -1.67156, 1, 0, 0.498999,-99) , 
10, 0.964505, 0, 0, 0.501622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500003,-99) , 
NN(
0, 
0, 
-1, -0.075046, 0, -1, 0.48658,-99) , 
7, -951.286, 0, 0, 0.491648,-99) , 
8, 1.57142, 1, 0, 0.500715,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0150872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492036,-99) , 
10, -0.319573, 0, 0, 0.502317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490698,-99) , 
9, -1.74002, 0, 0, 0.495722,-99) , 
5, 0.212555, 1, 0, 0.500555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47727,-99) , 
10, 1.94421, 1, 0, 0.489196,-99) , 
8, 1.85711, 1, 0, 0.499921,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0066315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214865, 0, 1, 0.502048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480231,-99) , 
4, 0.99932, 0, 0, 0.501219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480416,-99) , 
4, 0.998572, 0, 0, 0.500486,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.00979095);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497415,-99) , 
3, 8.47487, 0, 0, 0.498371,-99) , 
9, 4.46349, 0, 0, 0.499685,-99) , 
4, 0.998572, 1, 0, 0.500544,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0150566);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498585,-99) , 
10, 0.148923, 0, 0, 0.503993,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.495791,-99) , 
9, -0.578566, 1, 0, 0.501469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492795,-99) , 
10, 1.80251, 0, 0, 0.503938,-99) , 
NN(
0, 
0, 
-1, 2.02038, 1, -1, 0.488059,-99) , 
7, -948.87, 0, 0, 0.494691,-99) , 
8, 0.71428, 1, 0, 0.499576,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0110351);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49178,-99) , 
5, 0.660799, 1, 0, 0.510362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498087,-99) , 
10, 1.25929, 0, 0, 0.501225,-99) , 
5, 0.395071, 0, 0, 0.502687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489719,-99) , 
4, 0.998572, 0, 0, 0.502227,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00915017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.31776, 0, 1, 0.508518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482767,-99) , 
10, 2.20808, 0, 0, 0.495709,-99) , 
9, -0.0444653, 1, 0, 0.505591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489374,-99) , 
8, -0.0359686, 0, 0, 0.49952,-99) , 
8, 2.10201, 0, 0, 0.500311,-99) , 
8, -0.14287, 1, 0, 0.502536,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00467077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481434,-99) , 
4, 0.99932, 0, 0, 0.499611,-99) , 
8, 2.14283, 0, 0, 0.500362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480825,-99) , 
4, 0.998571, 0, 0, 0.499682,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0281934);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436118,-99) , 
7, -1.46688, 0, 0, 0.510019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487703,-99) , 
5, 0.299289, 0, 0, 0.498769,-99) , 
7, 0.43626, 1, 0, 0.505696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483823,-99) , 
8, 1.28569, 1, 0, 0.500447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469504,-99) , 
10, 2.52434, 0, 0, 0.489869,-99) , 
9, -0.00562098, 1, 0, 0.497192,-99) , 
7, -948.87, 0, 0, 0.500821,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0104326);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23807, 1, 1, 0.514644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49696,-99) , 
9, 1.6909, 0, 0, 0.497854,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.486825,-99) , 
10, 3.91459, 1, 0, 0.496743,-99) , 
8, 1.85711, 0, 0, 0.49778,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0114269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.508669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494402,-99) , 
5, -0.34882, 0, 0, 0.500018,-99) , 
2, 0.0712876, 0, 0, 0.50159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483838,-99) , 
6, 0.0237708, 1, 0, 0.500888,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0192759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498257,-99) , 
10, -0.753511, 0, 0, 0.507927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469734,-99) , 
10, 1.89474, 0, 0, 0.489795,-99) , 
9, -0.240012, 1, 0, 0.503598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497174,-99) , 
5, 0.30863, 1, 0, 0.514945,-99) , 
NN(
0, 
0, 
-1, 3.86278, 1, -1, 0.491659,-99) , 
4, 0.999524, 1, 0, 0.493977,-99) , 
8, -0.428565, 1, 0, 0.497103,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_4_6_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_4_6_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_4_6_noP *ReadBDT_maker_LHC19c2a_4_6_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_4_6_noP(theInpVar);
  }
}
