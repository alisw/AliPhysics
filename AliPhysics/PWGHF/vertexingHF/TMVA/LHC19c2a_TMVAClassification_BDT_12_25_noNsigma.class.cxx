#include "LHC19c2a_TMVAClassification_BDT_12_25_noNsigma.class.h"

double ReadBDT_LHC19c2a_12_25_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_12_25_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.897869778272045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.550902, 1, 1, 0.854844,-99) , 
NN(
0, 
0, 
-1, 0.863924, 1, -1, 0.139489,-99) , 
5, 0.714265, 1, 0, 0.503197,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.678095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.552947, 1, 1, 0.867466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36653,-99) , 
5, -0.911905, 0, 0, 0.520311,-99) , 
5, -0.768703, 0, 0, 0.815367,-99) , 
NN(
0, 
0, 
-1, 0.873005, 1, -1, 0.236592,-99) , 
5, 0.619036, 1, 0, 0.494273,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.528979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.778425, 0, 1, 0.799075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467117,-99) , 
0, 0.5019, 1, 0, 0.536595,-99) , 
5, 0.550976, 1, 0, 0.708202,-99) , 
NN(
0, 
0, 
-1, 0.909287, 1, -1, 0.212589,-99) , 
5, 0.80951, 1, 0, 0.512015,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.432195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.399388, 1, 1, 0.825518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387988,-99) , 
0, 0.49714, 1, 0, 0.435145,-99) , 
5, -0.78231, 0, 0, 0.750484,-99) , 
NN(
0, 
0, 
-1, 0.886607, 1, -1, 0.341376,-99) , 
5, 0.523792, 1, 0, 0.496499,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.403961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.810219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47273,-99) , 
5, -0.779729, 0, 0, 0.743093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425038,-99) , 
5, 0.852856, 1, 0, 0.530433,-99) , 
5, 0.541888, 1, 0, 0.636075,-99) , 
NN(
0, 
0, 
-1, 0.954639, 1, -1, 0.20496,-99) , 
5, 0.904738, 1, 0, 0.532437,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.338421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.637177, 0, 1, 0.709255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342152,-99) , 
5, 0.909261, 1, 0, 0.481484,-99) , 
5, 0.523785, 1, 0, 0.577629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.103268,-99) , 
4, 0.999524, 0, 0, 0.515079,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.266506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.564604, 0, 1, 0.680224,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.467138,-99) , 
5, 0.523798, 1, 0, 0.55484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.11649,-99) , 
4, 0.999524, 0, 0, 0.499407,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.312228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416951,-99) , 
5, -0.714266, 0, 0, 0.598542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329761,-99) , 
6, 0.00251154, 0, 0, 0.382014,-99) , 
4, 0.999932, 0, 0, 0.560854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.148008,-99) , 
4, 0.999524, 0, 0, 0.510669,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.252346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523486, 1, 1, 0.593045,-99) , 
NN(
0, 
0, 
-1, 0.999892, 0, -1, 0.407822,-99) , 
4, 0.999977, 0, 0, 0.529017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.155451,-99) , 
4, 0.999526, 0, 0, 0.4833,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.224166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.720807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408564,-99) , 
5, -0.591827, 0, 0, 0.591734,-99) , 
NN(
0, 
0, 
-1, 0.999887, 0, -1, 0.470278,-99) , 
5, 0.42856, 1, 0, 0.515768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.173543,-99) , 
4, 0.999524, 0, 0, 0.475317,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.193872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.720873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48346,-99) , 
5, -0.591811, 0, 0, 0.625728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430765,-99) , 
5, 0.918344, 1, 0, 0.499271,-99) , 
5, 0.428564, 1, 0, 0.544262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.198026,-99) , 
4, 0.999524, 0, 0, 0.503965,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.196467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428511, 0, 1, 0.636676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460905,-99) , 
1, -0.00125547, 1, 0, 0.485807,-99) , 
5, 0.333352, 1, 0, 0.534488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.208759,-99) , 
4, 0.999524, 0, 0, 0.498273,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.18516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479845,-99) , 
5, -0.682527, 0, 0, 0.624292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41853,-99) , 
4, 0.999909, 0, 0, 0.502259,-99) , 
5, 0.333324, 1, 0, 0.541423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224874,-99) , 
4, 0.999524, 0, 0, 0.505094,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.160327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.69886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43712,-99) , 
5, -0.823103, 0, 0, 0.618097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429108,-99) , 
5, 0.927375, 1, 0, 0.493416,-99) , 
5, 0.238069, 1, 0, 0.529298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256064,-99) , 
4, 0.999524, 0, 0, 0.499547,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.169117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454198,-99) , 
5, -0.863911, 0, 0, 0.603388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454173,-99) , 
5, 0.755053, 1, 0, 0.473368,-99) , 
5, 0.428536, 1, 0, 0.517988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252317,-99) , 
4, 0.999525, 0, 0, 0.489204,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.159253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.678438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493116,-99) , 
5, -0.555592, 0, 0, 0.587916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450613,-99) , 
0, 0.495236, 1, 0, 0.467783,-99) , 
5, 0.333292, 1, 0, 0.505305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253117,-99) , 
4, 0.999524, 0, 0, 0.479126,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.146233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471883,-99) , 
3, 3.39839, 1, 0, 0.589186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467643,-99) , 
1, 0.00177148, 0, 0, 0.491938,-99) , 
5, 0.238087, 1, 0, 0.520385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304563,-99) , 
4, 0.999525, 0, 0, 0.498211,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.139685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403384,-99) , 
3, 4.05641, 1, 0, 0.580748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445075,-99) , 
5, 0.70066, 0, 0, 0.495119,-99) , 
5, 0.428556, 1, 0, 0.524263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304818,-99) , 
4, 0.999524, 0, 0, 0.501451,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.100738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.419564, 0, 1, 0.564295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485268,-99) , 
5, 0.659811, 1, 0, 0.492625,-99) , 
5, 0.523738, 1, 0, 0.519626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322153,-99) , 
4, 0.999524, 0, 0, 0.499154,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.106238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.703138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455539,-99) , 
5, -0.428526, 0, 0, 0.51365,-99) , 
1, 0.00544861, 0, 0, 0.524545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317993,-99) , 
4, 0.999524, 0, 0, 0.503578,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0705486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.654452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489695,-99) , 
0, 0.505709, 0, 0, 0.493943,-99) , 
1, -0.00532441, 1, 0, 0.503316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337835,-99) , 
4, 0.999524, 0, 0, 0.487761,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.112226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.63486, 1, 1, 0.656393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436806,-99) , 
3, 0.850998, 0, 0, 0.505827,-99) , 
5, -0.67347, 0, 0, 0.582579,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.458202,-99) , 
5, 0.142865, 1, 0, 0.486869,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0768262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.410412, 0, 1, 0.580657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406875,-99) , 
5, 0.346931, 0, 0, 0.497507,-99) , 
5, 0.238076, 1, 0, 0.520222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356096,-99) , 
4, 0.999524, 0, 0, 0.50474,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.103723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.627886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474233,-99) , 
0, 0.49809, 1, 0, 0.507158,-99) , 
1, 0.00442927, 0, 0, 0.517794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366083,-99) , 
4, 0.999524, 0, 0, 0.502914,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.102334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432485,-99) , 
3, 3.98461, 1, 0, 0.576267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490651,-99) , 
4, 0.999955, 1, 0, 0.501868,-99) , 
5, 0.428558, 1, 0, 0.526538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379655,-99) , 
4, 0.999524, 0, 0, 0.51143,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0871024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492378, 1, 1, 0.542044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464119,-99) , 
2, -0.0125105, 1, 0, 0.485525,-99) , 
1, -0.00116413, 1, 0, 0.503294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371742,-99) , 
4, 0.999524, 0, 0, 0.49066,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.128164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48414,-99) , 
4, 0.999991, 0, 0, 0.541664,-99) , 
NN(
0, 
0, 
-1, 0.715347, 0, -1, 0.427941,-99) , 
4, 0.99991, 0, 0, 0.524823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388815,-99) , 
4, 0.999526, 0, 0, 0.511023,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0702787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.525992,-99) , 
NN(
0, 
0, 
-1, 0.496188, 0, -1, 0.4488,-99) , 
5, -0.428549, 0, 0, 0.512489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423478,-99) , 
4, 0.999524, 0, 0, 0.503457,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0802334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 1, 1, 0.601931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424416,-99) , 
0, 0.498083, 0, 0, 0.471316,-99) , 
5, -0.823127, 0, 0, 0.560732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445061,-99) , 
0, 0.493331, 0, 0, 0.497778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385098,-99) , 
5, 0.963704, 1, 0, 0.484929,-99) , 
5, 0.238089, 1, 0, 0.503902,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.118033);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487498,-99) , 
5, -0.87298, 0, 0, 0.589697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356281,-99) , 
5, -0.428566, 0, 0, 0.4634,-99) , 
3, 2.27534, 1, 0, 0.536089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442787,-99) , 
4, 0.999524, 0, 0, 0.496378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.72465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351327,-99) , 
6, 0.00304689, 0, 0, 0.428367,-99) , 
5, 0.619079, 0, 0, 0.484,-99) , 
5, 0.333324, 1, 0, 0.498341,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0655965);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485805,-99) , 
5, -0.510197, 0, 0, 0.542747,-99) , 
NN(
0, 
0, 
-1, 0.224491, 0, -1, 0.488257,-99) , 
5, 0.142852, 1, 0, 0.501723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369357,-99) , 
3, 6.6809, 1, 0, 0.490597,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0491256);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49785,-99) , 
1, -0.00384117, 1, 0, 0.510606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41164,-99) , 
5, -0.904722, 0, 0, 0.505068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387034,-99) , 
3, 7.41165, 1, 0, 0.497711,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0515521);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485495,-99) , 
1, -0.00116413, 1, 0, 0.499303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416268,-99) , 
2, -0.225264, 0, 0, 0.495016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413468,-99) , 
5, -0.904755, 0, 0, 0.490716,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0667319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498524,-99) , 
1, 0.00265106, 0, 0, 0.514511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375889,-99) , 
5, 0.523659, 0, 0, 0.442187,-99) , 
0, 0.502853, 1, 0, 0.501984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387227,-99) , 
3, 6.6809, 1, 0, 0.492989,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0722712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476067,-99) , 
0, 0.496185, 0, 0, 0.510579,-99) , 
3, 0.379109, 1, 0, 0.516165,-99) , 
NN(
0, 
0, 
-1, 0.496188, 1, -1, 0.43805,-99) , 
3, 5.55483, 1, 0, 0.506624,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0755954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490474, 1, 1, 0.532002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433502,-99) , 
4, 0.999887, 0, 0, 0.519282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450583,-99) , 
4, 0.999524, 0, 0, 0.512556,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0682979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.22901, 0, 1, 0.636229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485179,-99) , 
5, 0.782266, 1, 0, 0.502025,-99) , 
5, 0.619014, 1, 0, 0.554194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407882,-99) , 
5, -0.428381, 0, 0, 0.543225,-99) , 
NN(
0, 
0, 
-1, 4.9192, 1, -1, 0.491458,-99) , 
2, 0.0477831, 0, 0, 0.502648,-99) , 
0, 0.495234, 1, 0, 0.515558,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0777608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0808627, 1, 1, 0.728062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447923,-99) , 
3, 1.5421, 1, 0, 0.512552,-99) , 
5, -0.174611, 0, 0, 0.560927,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00230464, 1, 1, 0.512317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432437,-99) , 
0, 0.504757, 1, 0, 0.506777,-99) , 
5, 0.238088, 1, 0, 0.520146,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.123312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.940252, 0, 1, 0.647282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452353,-99) , 
0, 0.499029, 1, 0, 0.492442,-99) , 
3, 2.24799, 1, 0, 0.57386,-99) , 
NN(
NN(
0, 
0, 
-1, 0.237533, 1, 1, 0.658944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45744,-99) , 
6, 0.00242256, 0, 0, 0.483505,-99) , 
1, 0.00508723, 0, 0, 0.495537,-99) , 
1, -0.0034466, 1, 0, 0.50453,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.10042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458873,-99) , 
0, 0.502851, 1, 0, 0.590108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442323,-99) , 
5, -0.789455, 0, 0, 0.464479,-99) , 
5, -0.659867, 0, 0, 0.537558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456195,-99) , 
5, 0.72398, 0, 0, 0.49817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437965,-99) , 
5, 0.945552, 1, 0, 0.487367,-99) , 
5, 0.428554, 1, 0, 0.502463,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0875446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.90248, 1, 1, 0.690357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421087,-99) , 
3, 0.689484, 0, 0, 0.511737,-99) , 
5, -0.401379, 0, 0, 0.55695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487034,-99) , 
5, 0.410437, 1, 0, 0.496994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375916,-99) , 
3, 3.25152, 0, 0, 0.435946,-99) , 
0, 0.502852, 1, 0, 0.487456,-99) , 
5, 0.0476098, 1, 0, 0.501986,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0805348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.39227, 1, 1, 0.611214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458584,-99) , 
2, 0.000636141, 1, 0, 0.487829,-99) , 
5, -0.705172, 0, 0, 0.555032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406465,-99) , 
6, 0.00570003, 1, 0, 0.506826,-99) , 
NN(
0, 
0, 
-1, 0.341751, 1, -1, 0.382917,-99) , 
5, 0.455791, 0, 0, 0.494092,-99) , 
5, 0.238107, 1, 0, 0.508642,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.077339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.78464, 1, 1, 0.641956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42684,-99) , 
5, -0.0476464, 0, 0, 0.494819,-99) , 
6, 0.0047562, 0, 0, 0.51233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356754,-99) , 
6, 0.0124852, 1, 0, 0.507757,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0798018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497134, 1, 1, 0.623067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462535,-99) , 
2, 0.1378, 1, 0, 0.493488,-99) , 
3, 2.97096, 1, 0, 0.550825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458599,-99) , 
3, 2.37235, 1, 0, 0.493158,-99) , 
NN(
0, 
0, 
-1, 0.496182, 0, -1, 0.402655,-99) , 
2, -0.152138, 0, 0, 0.482592,-99) , 
2, 0.070333, 0, 0, 0.494054,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0968461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469153,-99) , 
5, -0.854869, 0, 0, 0.545653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281119,-99) , 
5, 0.0907592, 0, 0, 0.384336,-99) , 
3, 4.08803, 1, 0, 0.51632,-99) , 
NN(
NN(
0, 
0, 
-1, 0.957868, 1, -1, 0.486709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389563,-99) , 
6, 0.00304751, 0, 0, 0.437343,-99) , 
5, 0.705203, 0, 0, 0.476166,-99) , 
5, 0.52379, 1, 0, 0.489518,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0659183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498093, 0, 1, 0.599782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485327,-99) , 
5, -0.850306, 0, 0, 0.559323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454172,-99) , 
5, 0.954634, 1, 0, 0.504213,-99) , 
NN(
0, 
0, 
-1, 0.501097, 0, -1, 0.441458,-99) , 
0, 0.502852, 1, 0, 0.494614,-99) , 
5, 0.0476298, 1, 0, 0.507739,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0638217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496185, 1, 1, 0.562633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46263,-99) , 
5, -0.900201, 0, 0, 0.536397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439556,-99) , 
4, 0.999524, 0, 0, 0.493474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293736,-99) , 
0, 0.499041, 1, 0, 0.399658,-99) , 
5, 0.410437, 0, 0, 0.482035,-99) , 
5, 0.0476312, 1, 0, 0.493359,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0751294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.383209, 0, 1, 0.628681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462699,-99) , 
0, 0.501899, 1, 0, 0.52891,-99) , 
3, 0.853537, 1, 0, 0.549036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491929,-99) , 
3, 3.59526, 0, 0, 0.501323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422521,-99) , 
3, 6.71713, 1, 0, 0.493257,-99) , 
5, 0.619031, 1, 0, 0.513886,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0512132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495487,-99) , 
2, 0.132054, 0, 0, 0.502454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429181,-99) , 
3, 6.30988, 1, 0, 0.495252,-99) , 
NN(
0, 
0, 
-1, -0.0477571, 1, -1, 0.394088,-99) , 
0, 0.491423, 0, 0, 0.48516,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0468386);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499047, 0, 1, 0.552977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488386,-99) , 
5, 0.298304, 1, 0, 0.497399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404318,-99) , 
5, -0.637183, 0, 0, 0.492776,-99) , 
5, -0.809511, 1, 0, 0.497341,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0617213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.399384, 0, 1, 0.678211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453106,-99) , 
0, 0.49809, 0, 0, 0.495258,-99) , 
5, -0.632626, 0, 0, 0.549412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487499,-99) , 
5, 0.163058, 1, 0, 0.490997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321615,-99) , 
5, -0.0338862, 0, 0, 0.48579,-99) , 
5, -0.142845, 1, 0, 0.496702,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0421942);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502126, 0, 1, 0.51232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383703,-99) , 
5, 0.523594, 0, 0, 0.454241,-99) , 
0, 0.505573, 0, 0, 0.482612,-99) , 
0, 0.502852, 1, 0, 0.507389,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0990765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0046197, 1, 1, 0.628594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444474,-99) , 
5, 0.714263, 0, 0, 0.484423,-99) , 
6, 0.00359398, 0, 0, 0.509662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412809,-99) , 
6, 0.0107824, 1, 0, 0.506213,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0815696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.57264, 1, 1, 0.578302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475127,-99) , 
3, 0.819348, 1, 0, 0.490328,-99) , 
2, 0.0709487, 0, 0, 0.503879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410088,-99) , 
3, 7.41597, 1, 0, 0.498526,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0638332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400091,-99) , 
5, 0.339178, 0, 0, 0.504122,-99) , 
5, 0.183646, 1, 0, 0.510251,-99) , 
NN(
NN(
0, 
0, 
-1, -0.807673, 0, 1, 0.546127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314339,-99) , 
5, -0.399416, 0, 0, 0.391797,-99) , 
5, -0.632638, 1, 0, 0.477828,-99) , 
5, -0.14287, 0, 0, 0.503861,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0581017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00468573, 1, 1, 0.576707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354899,-99) , 
3, 2.64354, 1, 0, 0.431123,-99) , 
2, 0.0551375, 1, 0, 0.540502,-99) , 
NN(
NN(
0, 
0, 
-1, 0.564818, 1, 1, 0.509979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423103,-99) , 
5, 0.42868, 0, 0, 0.506198,-99) , 
5, 0.333335, 1, 0, 0.515118,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.110252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619005, 1, 1, 0.580367,-99) , 
NN(
0, 
0, 
-1, 0.714249, 0, -1, 0.462844,-99) , 
6, 0.00262575, 0, 0, 0.498436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277685,-99) , 
6, 0.013785, 1, 0, 0.492455,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.089682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.61904, 1, 1, 0.588309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443267,-99) , 
5, 0.714267, 0, 0, 0.482051,-99) , 
6, 0.00356681, 0, 0, 0.502031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354774,-99) , 
6, 0.012485, 1, 0, 0.497957,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0585341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505799, 0, 1, 0.521673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437967,-99) , 
3, 5.82237, 1, 0, 0.51171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480517,-99) , 
5, 0.800389, 1, 0, 0.492418,-99) , 
NN(
0, 
0, 
-1, 3.99703, 1, -1, 0.45028,-99) , 
5, 0.619, 0, 0, 0.475033,-99) , 
0, 0.49809, 0, 0, 0.49309,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0472609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499936,-99) , 
3, 3.74425, 1, 0, 0.547247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462415,-99) , 
5, -0.455757, 0, 0, 0.497905,-99) , 
2, 0.0564175, 0, 0, 0.507439,-99) , 
NN(
0, 
0, 
-1, 0.499038, 1, -1, 0.463199,-99) , 
5, 0.904727, 1, 0, 0.49758,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0780383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.63718, 0, 1, 0.577332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442872,-99) , 
0, 0.502851, 1, 0, 0.541642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476368,-99) , 
5, 0.52834, 1, 0, 0.486874,-99) , 
NN(
0, 
0, 
-1, 0.504892, 0, -1, 0.415851,-99) , 
0, 0.503803, 1, 0, 0.478454,-99) , 
5, -0.238087, 1, 0, 0.488734,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0604939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.526359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446115,-99) , 
4, 0.999864, 0, 0, 0.518057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461175,-99) , 
4, 0.999524, 0, 0, 0.512123,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0516091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498627,-99) , 
5, 0.809478, 1, 0, 0.535511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485662,-99) , 
3, 2.61958, 0, 0, 0.497551,-99) , 
2, 0.0333012, 0, 0, 0.506849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439636,-99) , 
3, 6.66832, 1, 0, 0.501406,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0792207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.596972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45972,-99) , 
3, 1.81727, 1, 0, 0.500201,-99) , 
5, -0.800442, 0, 0, 0.554818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489402,-99) , 
5, 0.546474, 1, 0, 0.499201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321183,-99) , 
1, 0.000523522, 1, 0, 0.431138,-99) , 
5, 0.365059, 0, 0, 0.49275,-99) , 
5, 0.0475976, 1, 0, 0.505078,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0429955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.189008, 0, 1, 0.512392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394402,-99) , 
3, 5.07258, 1, 0, 0.506245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409126,-99) , 
0, 0.498092, 1, 0, 0.44621,-99) , 
3, 5.90021, 1, 0, 0.499791,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0722443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49701,-99) , 
5, 0.673513, 1, 0, 0.529996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371353,-99) , 
3, 4.00477, 1, 0, 0.436635,-99) , 
5, 0.142851, 0, 0, 0.513256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490659,-99) , 
5, 0.891149, 1, 0, 0.509918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434083,-99) , 
5, 0.20629, 1, 0, 0.462476,-99) , 
5, 0.809489, 0, 0, 0.479377,-99) , 
3, 2.97096, 0, 0, 0.490262,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0847388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450499,-99) , 
5, 0.691637, 0, 0, 0.503097,-99) , 
2, 0.0588517, 0, 0, 0.513345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430802,-99) , 
2, -0.0442393, 0, 0, 0.515498,-99) , 
NN(
0, 
0, 
-1, 0.498362, 0, -1, 0.424307,-99) , 
0, 0.496185, 1, 0, 0.45253,-99) , 
5, 0.619039, 0, 0, 0.488439,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0591975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482437,-99) , 
0, 0.498302, 0, 0, 0.500696,-99) , 
0, 0.506344, 0, 0, 0.505467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477322,-99) , 
5, 0.637143, 1, 0, 0.49327,-99) , 
NN(
0, 
0, 
-1, 0.00627727, 0, -1, 0.37102,-99) , 
5, 0.238065, 0, 0, 0.449711,-99) , 
0, 0.494281, 0, 0, 0.493335,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0664555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0101754, 1, 1, 0.568534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449261,-99) , 
6, 0.000895632, 0, 0, 0.483511,-99) , 
1, 0.00224306, 0, 0, 0.498508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381928,-99) , 
6, 0.00940909, 1, 0, 0.492492,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0532685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445131,-99) , 
5, 0.682529, 0, 0, 0.514367,-99) , 
5, 0.333345, 1, 0, 0.531529,-99) , 
NN(
NN(
0, 
0, 
-1, -0.428454, 0, 1, 0.563901,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.48284,-99) , 
1, -0.00406158, 1, 0, 0.489382,-99) , 
2, -0.0740473, 1, 0, 0.496277,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0726499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449974,-99) , 
0, 0.500946, 1, 0, 0.54802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471853,-99) , 
0, 0.494283, 0, 0, 0.501715,-99) , 
5, 0.591837, 1, 0, 0.510107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380274,-99) , 
0, 0.502854, 1, 0, 0.474204,-99) , 
NN(
0, 
0, 
-1, 2.68685, 0, -1, 0.376676,-99) , 
3, 2.34714, 1, 0, 0.435251,-99) , 
5, 0.0476312, 0, 0, 0.492729,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0248915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441614,-99) , 
2, -0.212802, 0, 0, 0.497564,-99) , 
NN(
0, 
0, 
-1, 0.504724, 0, -1, 0.397224,-99) , 
0, 0.503986, 1, 0, 0.49009,-99) , 
0, 0.505709, 0, 0, 0.492829,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0695643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486591,-99) , 
3, 3.75214, 1, 0, 0.533296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479933,-99) , 
2, 0.0939815, 0, 0, 0.48595,-99) , 
5, 0.727898, 1, 0, 0.5041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460901,-99) , 
3, 1.51919, 0, 0, 0.526267,-99) , 
NN(
0, 
0, 
-1, -0.75503, 1, -1, 0.424944,-99) , 
0, 0.499993, 0, 0, 0.460985,-99) , 
5, -0.428496, 0, 0, 0.497452,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0513404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.18368, 1, 1, 0.516607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382987,-99) , 
3, 1.09008, 0, 0, 0.455734,-99) , 
5, -0.428542, 0, 0, 0.507678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369151,-99) , 
1, -0.00823218, 0, 0, 0.50297,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.058788);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480871,-99) , 
0, 0.500383, 0, 0, 0.488034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416398,-99) , 
0, 0.505281, 0, 0, 0.445269,-99) , 
0, 0.502716, 1, 0, 0.479804,-99) , 
0, 0.490471, 1, 0, 0.484005,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0728538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.23803, 1, 1, 0.554517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444487,-99) , 
5, 0.809519, 0, 0, 0.479322,-99) , 
1, 0.000754638, 0, 0, 0.506973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47666,-99) , 
2, -0.080818, 1, 0, 0.483099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414934,-99) , 
0, 0.497637, 0, 0, 0.47734,-99) , 
0, 0.497138, 1, 0, 0.489507,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0697876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619058, 1, 1, 0.535781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395699,-99) , 
0, 0.490637, 1, 0, 0.468113,-99) , 
0, 0.492149, 0, 0, 0.516548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545345,-99) , 
NN(
0, 
0, 
-1, 0.238075, 0, -1, 0.472845,-99) , 
0, 0.505618, 0, 0, 0.477891,-99) , 
0, 0.497138, 1, 0, 0.493215,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0834964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475504,-99) , 
5, 0.755052, 1, 0, 0.531832,-99) , 
NN(
0, 
0, 
-1, 0.469384, 0, -1, 0.48363,-99) , 
0, 0.500948, 0, 0, 0.495379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444467,-99) , 
5, -0.673465, 0, 0, 0.511819,-99) , 
NN(
0, 
0, 
-1, -0.292539, 1, -1, 0.408845,-99) , 
2, 0.00632979, 0, 0, 0.448895,-99) , 
5, 0.142858, 0, 0, 0.483867,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0528472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.174591, 0, 1, 0.549393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456464,-99) , 
5, 0.492092, 0, 0, 0.503409,-99) , 
5, 0.238101, 1, 0, 0.5133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474613,-99) , 
5, 0.0474425, 1, 0, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0.506448, 0, -1, 0.41813,-99) , 
0, 0.505574, 1, 0, 0.474719,-99) , 
0, 0.502852, 1, 0, 0.506433,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0523166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00462041, 0, 1, 0.607775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492639,-99) , 
1, -0.00268907, 1, 0, 0.499655,-99) , 
6, 0.00513389, 0, 0, 0.508842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355149,-99) , 
6, 0.0107824, 1, 0, 0.502519,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0745658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42551,-99) , 
2, -0.0729702, 0, 0, 0.557408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477545,-99) , 
5, 0.841338, 0, 0, 0.4984,-99) , 
5, 0.523782, 1, 0, 0.516496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487233,-99) , 
5, 0.351417, 1, 0, 0.49494,-99) , 
NN(
0, 
0, 
-1, -0.229073, 1, -1, 0.415626,-99) , 
5, -0.0476567, 0, 0, 0.477373,-99) , 
0, 0.498091, 0, 0, 0.496726,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0643123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493459, 0, 1, 0.529845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453666,-99) , 
0, 0.501706, 0, 0, 0.490541,-99) , 
0, 0.499859, 1, 0, 0.515081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398328,-99) , 
0, 0.489519, 0, 0, 0.510032,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0489525);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.48911, 1, 1, 0.587262,-99) , 
NN(
NN(
0, 
0, 
-1, 2.2555, 1, 1, 0.569922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492988,-99) , 
0, 0.498635, 1, 0, 0.507673,-99) , 
1, 0.00339227, 0, 0, 0.514876,-99) , 
0, 0.490471, 1, 0, 0.518659,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0490628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.201859, 1, 1, 0.51887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384263,-99) , 
5, -0.319693, 1, 0, 0.480251,-99) , 
5, -0.047592, 0, 0, 0.511439,-99) , 
NN(
0, 
0, 
-1, 0.490153, 1, -1, 0.450127,-99) , 
0, 0.491423, 0, 0, 0.506079,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0265828);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498239,-99) , 
5, -0.0365572, 1, 0, 0.502585,-99) , 
NN(
0, 
0, 
-1, -0.541944, 1, -1, 0.454907,-99) , 
5, -0.360524, 0, 0, 0.496875,-99) , 
5, -0.904741, 1, 0, 0.500097,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0494521);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.000715757, 1, 1, 0.593674,-99) , 
NN(
NN(
0, 
0, 
-1, 0.025014, 0, 1, 0.51401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393984,-99) , 
5, 0.619176, 0, 0, 0.471916,-99) , 
2, 0.0977421, 1, 0, 0.508088,-99) , 
0, 0.504757, 0, 0, 0.513876,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0629129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475655,-99) , 
3, 0.905338, 0, 0, 0.552251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401119,-99) , 
5, -0.229064, 0, 0, 0.465776,-99) , 
0, 0.502851, 1, 0, 0.531928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468894,-99) , 
5, 0.709744, 0, 0, 0.496285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460343,-99) , 
1, -0.00229925, 0, 0, 0.490986,-99) , 
5, 0.619031, 1, 0, 0.505882,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0439146);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492655,-99) , 
5, 0.569174, 1, 0, 0.502956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358723,-99) , 
1, -0.00860018, 0, 0, 0.499029,-99) , 
NN(
0, 
0, 
-1, -0.891159, 0, -1, 0.430271,-99) , 
5, -0.809517, 0, 0, 0.492823,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0623658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484308,-99) , 
3, 2.12653, 1, 0, 0.56647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48798,-99) , 
2, 0.0706187, 0, 0, 0.495821,-99) , 
5, 0.183663, 1, 0, 0.502087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450229,-99) , 
0, 0.497141, 0, 0, 0.51273,-99) , 
NN(
0, 
0, 
-1, -0.755083, 1, -1, 0.393445,-99) , 
3, 1.94689, 1, 0, 0.457094,-99) , 
5, -0.428576, 0, 0, 0.494916,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0181699);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489111, 0, 1, 0.53493,-99) , 
NN(
0, 
0, 
-1, 0.492104, 0, -1, 0.492455,-99) , 
0, 0.490471, 1, 0, 0.494842,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0446454);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485552,-99) , 
5, -0.891163, 0, 0, 0.531378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4891,-99) , 
2, 0.0712048, 0, 0, 0.496993,-99) , 
5, -0.71428, 1, 0, 0.500024,-99) , 
1, 0.00544861, 0, 0, 0.50533,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0403381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00510274, 0, 1, 0.53978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428034,-99) , 
2, 0.187723, 1, 0, 0.501814,-99) , 
0, 0.501583, 0, 0, 0.510868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414098,-99) , 
0, 0.489519, 0, 0, 0.506715,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0631524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459184,-99) , 
0, 0.502262, 1, 0, 0.516952,-99) , 
NN(
0, 
0, 
-1, 0.0485195, 0, -1, 0.477753,-99) , 
3, 3.77572, 1, 0, 0.507252,-99) , 
0, 0.505709, 0, 0, 0.511179,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0301398);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714013, 1, 1, 0.52858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562542,-99) , 
NN(
0, 
0, 
-1, -0.61896, 0, -1, 0.489523,-99) , 
0, 0.505709, 0, 0, 0.492208,-99) , 
2, -0.0732547, 1, 0, 0.498215,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0693084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.158399, 1, 1, 0.572765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411097,-99) , 
2, -0.0624453, 0, 0, 0.490626,-99) , 
5, -0.346955, 0, 0, 0.542912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457585,-99) , 
0, 0.500947, 1, 0, 0.490197,-99) , 
5, 0.755084, 1, 0, 0.498461,-99) , 
5, 0.714265, 1, 0, 0.518482,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0573394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434061,-99) , 
6, 0.00570033, 1, 0, 0.502121,-99) , 
5, 0.0476375, 1, 0, 0.512721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438805,-99) , 
2, 0.0595284, 1, 0, 0.488017,-99) , 
NN(
0, 
0, 
-1, -0.80949, 1, -1, 0.391893,-99) , 
2, -0.00629062, 0, 0, 0.441684,-99) , 
5, -0.428562, 0, 0, 0.501176,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0531812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.410429, 1, 1, 0.533138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409799,-99) , 
0, 0.495238, 0, 0, 0.477728,-99) , 
5, -0.237982, 0, 0, 0.519927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485754,-99) , 
5, 0.238175, 1, 0, 0.494938,-99) , 
NN(
0, 
0, 
-1, 0.491967, 1, -1, 0.453376,-99) , 
0, 0.493329, 0, 0, 0.48827,-99) , 
1, -0.00116413, 1, 0, 0.498117,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0682158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500946, 0, 1, 0.584711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48706,-99) , 
6, 0.00376023, 0, 0, 0.49662,-99) , 
1, 0.00308471, 0, 0, 0.508148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295187,-99) , 
1, -0.00987108, 0, 0, 0.501858,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0650413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498414,-99) , 
4, 0.999998, 0, 0, 0.530137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441307,-99) , 
5, 0.809489, 0, 0, 0.486195,-99) , 
4, 0.999955, 0, 0, 0.519192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467114,-99) , 
4, 0.999524, 0, 0, 0.513884,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0770341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 0, 1, 0.572556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488123,-99) , 
3, 2.85352, 1, 0, 0.503818,-99) , 
1, 0.000339006, 0, 0, 0.535001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477766,-99) , 
5, 0.714368, 1, 0, 0.518341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461969,-99) , 
2, 0.00945816, 0, 0, 0.483978,-99) , 
2, 0.0655438, 0, 0, 0.490838,-99) , 
2, -0.0816723, 1, 0, 0.49769,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0563155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496187, 1, 1, 0.548439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480766,-99) , 
3, 1.14802, 1, 0, 0.496865,-99) , 
2, -0.10748, 1, 0, 0.502315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447173,-99) , 
3, 7.39984, 1, 0, 0.498875,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0591414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0769851, 1, 1, 0.524201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434256,-99) , 
4, 0.999864, 0, 0, 0.514608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46198,-99) , 
4, 0.999524, 0, 0, 0.509534,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0662185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.537407, 0, 1, 0.551958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45848,-99) , 
2, 0.146343, 1, 0, 0.544606,-99) , 
NN(
NN(
0, 
0, 
-1, 0.818608, 1, 1, 0.532243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469502,-99) , 
0, 0.497144, 0, 0, 0.4923,-99) , 
3, 3.23053, 0, 0, 0.505398,-99) , 
5, 0.619031, 1, 0, 0.519055,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0517961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471791,-99) , 
5, -0.727598, 0, 0, 0.547446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485073,-99) , 
3, 3.80283, 0, 0, 0.496378,-99) , 
5, 0.428621, 1, 0, 0.51104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434737,-99) , 
0, 0.505228, 1, 0, 0.496497,-99) , 
NN(
0, 
0, 
-1, -0.0476051, 0, -1, 0.447914,-99) , 
0, 0.497592, 0, 0, 0.483468,-99) , 
0, 0.495233, 1, 0, 0.490524,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0745116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494816,-99) , 
0, 0.492149, 0, 0, 0.577954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499183,-99) , 
0, 0.493056, 1, 0, 0.513619,-99) , 
5, 0.523811, 1, 0, 0.531447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48193,-99) , 
5, 0.74608, 1, 0, 0.508308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391673,-99) , 
5, -0.301392, 1, 0, 0.457256,-99) , 
5, 0.333426, 0, 0, 0.494657,-99) , 
0, 0.497138, 1, 0, 0.509459,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0801863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417955,-99) , 
1, -0.00612429, 0, 0, 0.525344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435682,-99) , 
3, 7.42028, 1, 0, 0.518571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471174,-99) , 
3, 1.63424, 1, 0, 0.500224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351855,-99) , 
3, 0.765305, 0, 0, 0.453166,-99) , 
5, -0.428576, 0, 0, 0.508425,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0509888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493152,-99) , 
2, 0.0333012, 0, 0, 0.50071,-99) , 
3, 6.69504, 0, 0, 0.504828,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446725,-99) , 
5, -0.632903, 0, 0, 0.469845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322261,-99) , 
5, -0.229036, 1, 0, 0.444503,-99) , 
5, -0.0476219, 0, 0, 0.492557,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0570021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333292, 1, 1, 0.517912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450995,-99) , 
0, 0.489519, 0, 0, 0.514255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441545,-99) , 
5, 0.836652, 1, 0, 0.483994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295512,-99) , 
5, -0.292629, 1, 0, 0.432072,-99) , 
5, 0.142783, 0, 0, 0.469387,-99) , 
0, 0.500947, 1, 0, 0.501478,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.045932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477673,-99) , 
0, 0.490335, 0, 0, 0.511903,-99) , 
2, -0.0164626, 1, 0, 0.540663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49065,-99) , 
2, -0.0844848, 1, 0, 0.497021,-99) , 
NN(
0, 
0, 
-1, -0.0475975, 0, -1, 0.452103,-99) , 
0, 0.495279, 0, 0, 0.48913,-99) , 
0, 0.492376, 1, 0, 0.494777,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.050168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448267,-99) , 
5, 0.961118, 1, 0, 0.495728,-99) , 
5, 0.183759, 1, 0, 0.500537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449577,-99) , 
5, -0.883337, 0, 0, 0.494998,-99) , 
NN(
0, 
0, 
-1, 2.31753, 1, -1, 0.345041,-99) , 
5, -0.510173, 1, 0, 0.446489,-99) , 
5, -0.142832, 0, 0, 0.490253,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0608453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601887,-99) , 
NN(
0, 
0, 
-1, 0.50115, 0, -1, 0.492178,-99) , 
1, -0.00406158, 1, 0, 0.4974,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456294,-99) , 
5, -0.682516, 0, 0, 0.504145,-99) , 
NN(
0, 
0, 
-1, -0.455777, 1, -1, 0.388047,-99) , 
0, 0.496186, 1, 0, 0.423985,-99) , 
5, -0.0476057, 0, 0, 0.481421,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0739856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49727,-99) , 
5, 0.673373, 1, 0, 0.53517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414322,-99) , 
5, -0.714286, 0, 0, 0.517958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451712,-99) , 
3, 1.49816, 1, 0, 0.47382,-99) , 
5, 0.904678, 0, 0, 0.486553,-99) , 
0, 0.499995, 0, 0, 0.497102,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0480972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.711329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46178,-99) , 
3, 2.24074, 0, 0, 0.555109,-99) , 
NN(
0, 
0, 
-1, 0.46791, 0, -1, 0.495477,-99) , 
5, 0.301636, 1, 0, 0.501342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393405,-99) , 
0, 0.50462, 1, 0, 0.485261,-99) , 
NN(
0, 
0, 
-1, -0.746017, 1, -1, 0.397729,-99) , 
0, 0.497139, 0, 0, 0.445108,-99) , 
5, -0.333312, 0, 0, 0.491742,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0683951);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478516,-99) , 
5, 0.845784, 1, 0, 0.522664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483343,-99) , 
5, 0.151947, 1, 0, 0.489949,-99) , 
0, 0.499043, 0, 0, 0.502986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4157,-99) , 
3, 1.07179, 0, 0, 0.488039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379708,-99) , 
5, -0.782326, 1, 0, 0.455851,-99) , 
5, -0.619032, 0, 0, 0.496838,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0630269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465359,-99) , 
5, -0.61902, 0, 0, 0.522695,-99) , 
0, 0.502444, 1, 0, 0.535166,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489298, 1, 1, 0.516173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445868,-99) , 
5, 0.80953, 0, 0, 0.475197,-99) , 
0, 0.496457, 1, 0, 0.493091,-99) , 
0, 0.5019, 0, 0, 0.501592,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0698568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.552758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451497,-99) , 
5, 0.714954, 0, 0, 0.496082,-99) , 
5, 0.600888, 1, 0, 0.506657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40912,-99) , 
2, 0.0551375, 1, 0, 0.508091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264167,-99) , 
5, -0.229033, 1, 0, 0.455843,-99) , 
5, -0.047619, 0, 0, 0.496252,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0704572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.26004, 1, 1, 0.555772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454809,-99) , 
5, 0.619036, 0, 0, 0.496926,-99) , 
6, 0.00393772, 0, 0, 0.506328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301143,-99) , 
6, 0.0137852, 1, 0, 0.501107,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.100806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.62995, 0, 1, 0.58826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359776,-99) , 
0, 0.497145, 0, 0, 0.444786,-99) , 
3, 3.28997, 1, 0, 0.551857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475022,-99) , 
5, 0.746024, 1, 0, 0.502844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43009,-99) , 
2, -0.00124578, 1, 0, 0.46549,-99) , 
3, 3.41417, 0, 0, 0.476659,-99) , 
5, 0.238047, 1, 0, 0.492621,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0546342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49592, 0, 1, 0.538643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458846,-99) , 
5, -0.0476267, 0, 0, 0.500819,-99) , 
0, 0.49673, 1, 0, 0.510045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482687,-99) , 
0, 0.491152, 0, 0, 0.497331,-99) , 
NN(
0, 
0, 
-1, 1.64558, 0, -1, 0.427798,-99) , 
3, 2.78168, 0, 0, 0.451706,-99) , 
0, 0.493328, 0, 0, 0.500145,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0581328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491821,-99) , 
4, 0.999994, 0, 0, 0.513894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43141,-99) , 
4, 0.999864, 0, 0, 0.505313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45529,-99) , 
4, 0.999524, 0, 0, 0.500429,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0708318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49491,-99) , 
0, 0.502986, 0, 0, 0.561195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438057,-99) , 
3, 2.3424, 0, 0, 0.48149,-99) , 
2, -0.00135447, 0, 0, 0.520438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472681,-99) , 
1, -7.02874e-06, 0, 0, 0.489275,-99) , 
NN(
0, 
0, 
-1, 1.04829, 0, -1, 0.459953,-99) , 
5, 0.809519, 0, 0, 0.472174,-99) , 
0, 0.501898, 0, 0, 0.481687,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0703438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490861,-99) , 
0, 0.494284, 0, 0, 0.554456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411721,-99) , 
5, 0.088522, 0, 0, 0.472982,-99) , 
3, 3.38529, 1, 0, 0.534099,-99) , 
NN(
NN(
0, 
0, 
-1, 0.77308, 1, 1, 0.525616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476779,-99) , 
2, 0.0779693, 0, 0, 0.485229,-99) , 
2, -0.0704421, 1, 0, 0.492242,-99) , 
5, 0.523782, 1, 0, 0.504511,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0655282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.90941, 0, 1, 0.538887,-99) , 
NN(
0, 
0, 
-1, 0.493103, 1, -1, 0.456777,-99) , 
3, 3.77753, 1, 0, 0.518791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499703,-99) , 
1, 0.00026474, 1, 0, 0.52364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472698,-99) , 
3, 5.82159, 0, 0, 0.477908,-99) , 
0, 0.504893, 0, 0, 0.484125,-99) , 
0, 0.49809, 1, 0, 0.500751,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0714991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437446,-99) , 
3, 2.50202, 1, 0, 0.487651,-99) , 
5, 0.523745, 0, 0, 0.537423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487085,-99) , 
5, 0.673466, 1, 0, 0.492359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444154,-99) , 
0, 0.504893, 0, 0, 0.455894,-99) , 
5, 0.619039, 0, 0, 0.47885,-99) , 
0, 0.493329, 1, 0, 0.487839,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0530661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.501491, 0, 1, 0.520664,-99) , 
NN(
NN(
0, 
0, 
-1, 0.506155, 0, 1, 0.549121,-99) , 
NN(
0, 
0, 
-1, 0.504426, 1, -1, 0.414682,-99) , 
0, 0.505256, 0, 0, 0.473536,-99) , 
0, 0.503804, 1, 0, 0.515021,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0871226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.129196, 0, 1, 0.608478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45979,-99) , 
5, 0.886623, 1, 0, 0.492095,-99) , 
5, 0.52383, 1, 0, 0.523438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481782,-99) , 
0, 0.502127, 0, 0, 0.504845,-99) , 
NN(
0, 
0, 
-1, 4.05022, 1, -1, 0.437324,-99) , 
5, 0.5238, 0, 0, 0.482376,-99) , 
0, 0.497138, 1, 0, 0.498335,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0593702);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459306,-99) , 
4, 0.999842, 0, 0, 0.513158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470044,-99) , 
4, 0.999524, 0, 0, 0.50758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479225,-99) , 
5, -0.111147, 0, 0, 0.499757,-99) , 
NN(
0, 
0, 
-1, 0.501492, 0, -1, 0.437604,-99) , 
0, 0.499044, 1, 0, 0.469173,-99) , 
5, 0.333335, 0, 0, 0.497397,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0776577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0065231, 0, 1, 0.623809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494995,-99) , 
1, -0.0034466, 1, 0, 0.519238,-99) , 
5, -0.351404, 0, 0, 0.551081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46398,-99) , 
0, 0.50435, 1, 0, 0.518226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451547,-99) , 
2, 0.0939815, 0, 0, 0.466128,-99) , 
0, 0.496189, 0, 0, 0.500579,-99) , 
5, 0.238131, 1, 0, 0.511468,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0484872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478736,-99) , 
0, 0.496321, 0, 0, 0.496445,-99) , 
1, -0.00544689, 1, 0, 0.500371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451851,-99) , 
5, -0.428202, 0, 0, 0.508793,-99) , 
NN(
0, 
0, 
-1, 0.238145, 0, -1, 0.415835,-99) , 
0, 0.504213, 0, 0, 0.468628,-99) , 
0, 0.502852, 1, 0, 0.495072,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0628526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.71765, 0, 1, 0.557328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490202,-99) , 
2, -0.0147806, 1, 0, 0.501561,-99) , 
5, 0.523794, 1, 0, 0.517565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398257,-99) , 
0, 0.500947, 0, 0, 0.442457,-99) , 
5, 0.714252, 0, 0, 0.482927,-99) , 
2, 0.0588517, 1, 0, 0.510057,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0735288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489026,-99) , 
2, 0.0242944, 0, 0, 0.500694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450621,-99) , 
4, 0.999524, 0, 0, 0.494217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432928,-99) , 
0, 0.499042, 1, 0, 0.489702,-99) , 
NN(
0, 
0, 
-1, 0.501896, 0, -1, 0.409557,-99) , 
5, -0.251685, 1, 0, 0.45367,-99) , 
5, 0.428572, 0, 0, 0.482208,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0514386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481182,-99) , 
0, 0.498091, 0, 0, 0.519009,-99) , 
5, -0.0567048, 0, 0, 0.536005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492599,-99) , 
5, 0.419497, 1, 0, 0.49785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40351,-99) , 
0, 0.504757, 1, 0, 0.490727,-99) , 
5, 0.238083, 1, 0, 0.500566,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0428649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.333752, 1, 1, 0.55917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441822,-99) , 
2, 0.210551, 1, 0, 0.507137,-99) , 
6, 0.00475564, 0, 0, 0.512657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393708,-99) , 
6, 0.0124849, 1, 0, 0.509456,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.032708);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523792, 1, 1, 0.51393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440489,-99) , 
2, -0.215157, 0, 0, 0.510034,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.048004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498085, 1, 1, 0.548789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487705,-99) , 
0, 0.492376, 1, 0, 0.49418,-99) , 
3, 0.732081, 1, 0, 0.502481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442116,-99) , 
3, 6.66832, 1, 0, 0.497708,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0436469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.564618, 1, 1, 0.515517,-99) , 
NN(
0, 
0, 
-1, -0.705223, 1, -1, 0.464473,-99) , 
5, -0.523807, 0, 0, 0.50775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425976,-99) , 
3, 7.41242, 1, 0, 0.502961,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0578117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.546471, 0, 1, 0.559317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386526,-99) , 
5, 0.251741, 0, 0, 0.501095,-99) , 
5, -0.0476144, 1, 0, 0.510501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478328,-99) , 
0, 0.493328, 0, 0, 0.492544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287889,-99) , 
5, -0.551098, 1, 0, 0.400963,-99) , 
5, 0.0476004, 0, 0, 0.466692,-99) , 
0, 0.494281, 0, 0, 0.500892,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0557959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.58706, 0, 1, 0.576847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483322,-99) , 
0, 0.49524, 1, 0, 0.503435,-99) , 
5, 0.238161, 1, 0, 0.522042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49576,-99) , 
3, 1.45461, 0, 0, 0.526381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478366,-99) , 
2, 0.070333, 0, 0, 0.485123,-99) , 
5, -0.714199, 1, 0, 0.48871,-99) , 
1, 0.0013636, 0, 0, 0.498884,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0593073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476557,-99) , 
6, 0.00118875, 0, 0, 0.502134,-99) , 
NN(
0, 
0, 
-1, -0.564675, 1, -1, 0.44431,-99) , 
5, -0.428576, 0, 0, 0.493589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351698,-99) , 
6, 0.0124849, 1, 0, 0.489524,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0447503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432454,-99) , 
2, -0.150373, 0, 0, 0.49786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427974,-99) , 
3, 2.89046, 0, 0, 0.455245,-99) , 
0, 0.493329, 0, 0, 0.490914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403743,-99) , 
0, 0.498092, 1, 0, 0.451393,-99) , 
3, 5.91202, 1, 0, 0.486782,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0673747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491332,-99) , 
5, -0.383225, 0, 0, 0.536507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41807,-99) , 
0, 0.501901, 1, 0, 0.476705,-99) , 
3, 1.75194, 0, 0, 0.50639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465104,-99) , 
3, 6.54077, 1, 0, 0.501016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454874,-99) , 
0, 0.501899, 0, 0, 0.462868,-99) , 
3, 3.41781, 0, 0, 0.474369,-99) , 
5, 0.619002, 1, 0, 0.48564,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0461847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480929,-99) , 
5, -0.873023, 0, 0, 0.539165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389494,-99) , 
5, -0.156411, 0, 0, 0.496133,-99) , 
5, -0.619043, 1, 0, 0.50066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391459,-99) , 
0, 0.506254, 0, 0, 0.43067,-99) , 
0, 0.504757, 1, 0, 0.494719,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0637214);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489247, 1, 1, 0.561327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474899,-99) , 
0, 0.4966, 1, 0, 0.489718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37779,-99) , 
0, 0.492195, 0, 0, 0.485733,-99) , 
0, 0.491424, 1, 0, 0.491477,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0447527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499041, 0, 1, 0.56465,-99) , 
NN(
0, 
0, 
-1, 0.646304, 0, -1, 0.491575,-99) , 
5, 0.587287, 1, 0, 0.499078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414165,-99) , 
0, 0.494281, 0, 0, 0.482384,-99) , 
NN(
0, 
0, 
-1, 0.200286, 0, -1, 0.396765,-99) , 
5, 0.0793505, 1, 0, 0.464901,-99) , 
5, 0.333324, 0, 0, 0.490229,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0376239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333315, 1, 1, 0.513551,-99) , 
NN(
0, 
0, 
-1, 0.0990455, 1, -1, 0.479717,-99) , 
0, 0.497138, 0, 0, 0.499456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39983,-99) , 
1, -0.00858948, 0, 0, 0.496547,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0422197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.2381, 1, 1, 0.513521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453142,-99) , 
2, -0.134464, 0, 0, 0.509275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531267,-99) , 
NN(
0, 
0, 
-1, 0.497129, 0, -1, 0.462376,-99) , 
5, 0.524754, 1, 0, 0.47608,-99) , 
3, 3.7668, 1, 0, 0.500801,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0499937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489711,-99) , 
1, -0.00532441, 1, 0, 0.496368,-99) , 
3, 5.75338, 0, 0, 0.5042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486978,-99) , 
5, 0.961123, 1, 0, 0.509479,-99) , 
NN(
0, 
0, 
-1, 2.28093, 1, -1, 0.464612,-99) , 
5, 0.918375, 0, 0, 0.485981,-99) , 
5, 0.809513, 1, 0, 0.496411,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.051036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475651,-99) , 
0, 0.503986, 1, 0, 0.500243,-99) , 
5, 0.0476812, 1, 0, 0.532109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45848,-99) , 
5, 0.619036, 0, 0, 0.487428,-99) , 
0, 0.489791, 1, 0, 0.49195,-99) , 
0, 0.502852, 0, 0, 0.498027,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0600948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408559,-99) , 
3, 0.841942, 0, 0, 0.485579,-99) , 
5, -0.183692, 0, 0, 0.517943,-99) , 
NN(
NN(
0, 
0, 
-1, -0.059705, 0, -1, 0.491036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355736,-99) , 
0, 0.499041, 0, 0, 0.429211,-99) , 
5, 0.46944, 0, 0, 0.484519,-99) , 
5, 0.142865, 1, 0, 0.491309,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0456914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.714924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412641,-99) , 
2, -0.0616041, 0, 0, 0.506367,-99) , 
5, -0.251689, 0, 0, 0.5344,-99) , 
NN(
NN(
0, 
0, 
-1, 0.57889, 1, 1, 0.506944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403659,-99) , 
0, 0.498091, 1, 0, 0.448438,-99) , 
5, 0.410434, 0, 0, 0.501365,-99) , 
5, 0.0476234, 1, 0, 0.507712,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0598909);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489311,-99) , 
2, -0.0198172, 1, 0, 0.508236,-99) , 
NN(
0, 
0, 
-1, 0.496187, 0, -1, 0.46172,-99) , 
2, -0.124051, 0, 0, 0.502001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462497,-99) , 
5, 0.673639, 1, 0, 0.483193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38054,-99) , 
5, -0.142372, 0, 0, 0.463718,-99) , 
2, 0.0948557, 1, 0, 0.496435,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0412421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42858, 1, 1, 0.567311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462148,-99) , 
0, 0.506308, 0, 0, 0.484102,-99) , 
0, 0.50512, 1, 0, 0.531111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460721,-99) , 
5, 0.42859, 0, 0, 0.491841,-99) , 
0, 0.489791, 1, 0, 0.495452,-99) , 
0, 0.502852, 0, 0, 0.500993,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0456084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45533,-99) , 
5, 0.48907, 0, 0, 0.501449,-99) , 
5, 0.174652, 1, 0, 0.50939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473581,-99) , 
2, -0.0010546, 1, 0, 0.519459,-99) , 
NN(
0, 
0, 
-1, -0.628072, 0, -1, 0.456871,-99) , 
5, -0.80951, 1, 0, 0.487552,-99) , 
5, -0.333315, 0, 0, 0.505869,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0568085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496699,-99) , 
5, 0.428554, 1, 0, 0.541361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486266,-99) , 
5, 0.782315, 1, 0, 0.498318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385588,-99) , 
0, 0.497136, 0, 0, 0.448808,-99) , 
5, 0.428603, 0, 0, 0.484946,-99) , 
1, -0.00384117, 1, 0, 0.489665,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0633879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.637151, 0, 1, 0.554427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474945,-99) , 
5, 0.705236, 0, 0, 0.510855,-99) , 
5, 0.523802, 1, 0, 0.522343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45353,-99) , 
3, 0.974665, 0, 0, 0.512987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464545,-99) , 
5, 0.714256, 1, 0, 0.488878,-99) , 
0, 0.500947, 1, 0, 0.51317,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0568851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0203678, 1, 1, 0.516002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388969,-99) , 
3, 0.769001, 0, 0, 0.471105,-99) , 
5, -0.428505, 0, 0, 0.508905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54501,-99) , 
NN(
0, 
0, 
-1, 0.401501, 0, -1, 0.434538,-99) , 
5, -0.0474686, 1, 0, 0.451701,-99) , 
2, 0.068648, 1, 0, 0.498185,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0731192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342542,-99) , 
5, -0.284038, 1, 0, 0.495516,-99) , 
5, -0.11559, 0, 0, 0.523183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476438,-99) , 
5, 0.588824, 1, 0, 0.481719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388509,-99) , 
5, 0.383253, 0, 0, 0.476794,-99) , 
5, 0.238124, 1, 0, 0.486682,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0572999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481869,-99) , 
3, 1.71797, 1, 0, 0.531132,-99) , 
0, 0.499997, 0, 0, 0.554725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489186,-99) , 
5, 0.757628, 1, 0, 0.498846,-99) , 
NN(
0, 
0, 
-1, 0.317088, 1, -1, 0.444806,-99) , 
5, 0.53736, 0, 0, 0.486177,-99) , 
5, -0.619031, 1, 0, 0.493608,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0530769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.455766, 0, 1, 0.550789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41083,-99) , 
3, 4.3431, 1, 0, 0.530955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499109,-99) , 
5, 0.673438, 0, 0, 0.528679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490132,-99) , 
2, 0.0645605, 0, 0, 0.496582,-99) , 
0, 0.494281, 1, 0, 0.502504,-99) , 
5, 0.428528, 1, 0, 0.509942,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0281528);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497723,-99) , 
0, 0.504757, 0, 0, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0.428617, 0, -1, 0.47128,-99) , 
2, 0.052509, 1, 0, 0.495081,-99) , 
1, 0.00600111, 0, 0, 0.499086,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0518026);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00633324, 0, 1, 0.565922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497001,-99) , 
0, 0.501489, 0, 0, 0.503576,-99) , 
NN(
0, 
0, 
-1, 0.999906, 0, -1, 0.459974,-99) , 
5, 0.714275, 0, 0, 0.483854,-99) , 
0, 0.504757, 0, 0, 0.489604,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0630554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0252271, 1, 1, 0.578344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49331,-99) , 
0, 0.493328, 0, 0, 0.520603,-99) , 
5, 0.714235, 1, 0, 0.545179,-99) , 
NN(
NN(
0, 
0, 
-1, 3.23366, 0, 1, 0.518133,-99) , 
NN(
0, 
0, 
-1, 4.05022, 1, -1, 0.463446,-99) , 
5, 0.523808, 0, 0, 0.501329,-99) , 
0, 0.496185, 1, 0, 0.514967,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0357092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461004,-99) , 
5, 0.428536, 1, 0, 0.558913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469545,-99) , 
5, 0.142839, 0, 0, 0.496202,-99) , 
0, 0.490471, 1, 0, 0.500119,-99) , 
1, -0.00384117, 1, 0, 0.504744,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0525054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.11567, 0, 1, 0.543468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490445,-99) , 
5, 0.918333, 0, 0, 0.5026,-99) , 
5, 0.428556, 1, 0, 0.513026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455033,-99) , 
2, -0.141592, 0, 0, 0.474634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409182,-99) , 
5, -0.0476115, 0, 0, 0.462162,-99) , 
2, -0.0740473, 0, 0, 0.503979,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0228859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0529775, 1, 1, 0.506667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449165,-99) , 
2, -0.215157, 0, 0, 0.503558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403659,-99) , 
1, -0.00860018, 0, 0, 0.500827,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0884282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.78358, 1, 1, 0.523918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455882,-99) , 
1, -0.0023365, 0, 0, 0.514825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440632,-99) , 
4, 0.999996, 0, 0, 0.500917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336527,-99) , 
4, 0.999906, 0, 0, 0.483417,-99) , 
5, 0.714211, 0, 0, 0.500676,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0685557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492693, 1, 1, 0.516308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445412,-99) , 
1, 0.00223524, 0, 0, 0.466307,-99) , 
0, 0.500947, 1, 0, 0.502529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419491,-99) , 
0, 0.499043, 1, 0, 0.460056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30381,-99) , 
5, -0.564626, 1, 0, 0.432565,-99) , 
5, -0.428572, 0, 0, 0.491589,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0732638);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462365,-99) , 
5, -0.750621, 0, 0, 0.555514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488602,-99) , 
3, 5.50728, 0, 0, 0.495989,-99) , 
5, 0.0476191, 1, 0, 0.5085,-99) , 
NN(
0, 
0, 
-1, 0.809454, 0, -1, 0.461747,-99) , 
0, 0.499995, 0, 0, 0.476944,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0345621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455413,-99) , 
4, 0.999841, 0, 0, 0.505028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472271,-99) , 
4, 0.999524, 0, 0, 0.501406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414951,-99) , 
5, -0.909266, 1, 0, 0.461872,-99) , 
5, -0.809489, 0, 0, 0.497974,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0580452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.419343, 0, 1, 0.572166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487575,-99) , 
0, 0.502535, 0, 0, 0.502152,-99) , 
5, 0.523846, 1, 0, 0.52396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475208,-99) , 
6, 0.000896185, 1, 0, 0.488322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412655,-99) , 
6, 0.00940919, 1, 0, 0.485047,-99) , 
0, 0.499996, 0, 0, 0.497955,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0606254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474616,-99) , 
1, -0.00084452, 0, 0, 0.557956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483013,-99) , 
1, -0.00406158, 1, 0, 0.486289,-99) , 
5, 0.00228366, 1, 0, 0.495878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417788,-99) , 
5, -0.904741, 0, 0, 0.491507,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0189193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499906,-99) , 
0, 0.503124, 0, 0, 0.505113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446395,-99) , 
0, 0.505709, 1, 0, 0.502532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41647,-99) , 
1, -0.00860018, 0, 0, 0.500211,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0381988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496836,-99) , 
5, -0.0158501, 1, 0, 0.501434,-99) , 
0, 0.490471, 1, 0, 0.506592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54908,-99) , 
NN(
0, 
0, 
-1, 0.496187, 0, -1, 0.434197,-99) , 
2, -0.024518, 1, 0, 0.464536,-99) , 
5, -0.523773, 0, 0, 0.500748,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0567661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.550979, 1, 1, 0.515119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416224,-99) , 
0, 0.505709, 1, 0, 0.510777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461051,-99) , 
5, -0.596177, 0, 0, 0.488376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330319,-99) , 
5, -0.229047, 1, 0, 0.462109,-99) , 
5, -0.047646, 0, 0, 0.501073,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0369297);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496307,-99) , 
3, 1.67473, 1, 0, 0.524363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489897,-99) , 
5, -0.809519, 1, 0, 0.493374,-99) , 
2, -0.0248728, 1, 0, 0.500824,-99) , 
2, -0.183931, 1, 0, 0.504155,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0380614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455687,-99) , 
5, -0.523809, 0, 0, 0.50142,-99) , 
6, 0.0068543, 0, 0, 0.50693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406916,-99) , 
6, 0.0119971, 1, 0, 0.504278,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0427116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499857,-99) , 
3, 1.71605, 1, 0, 0.551342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396404,-99) , 
5, -0.0792891, 0, 0, 0.504202,-99) , 
5, -0.333312, 1, 0, 0.510392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381136,-99) , 
5, 0.23799, 0, 0, 0.460827,-99) , 
0, 0.503804, 1, 0, 0.504358,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0613066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.77753, 0, 1, 0.542981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490023,-99) , 
0, 0.49842, 0, 0, 0.501401,-99) , 
0, 0.494689, 1, 0, 0.51715,-99) , 
NN(
0, 
0, 
-1, 0.42856, 0, -1, 0.465864,-99) , 
0, 0.499043, 1, 0, 0.494451,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0550478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501984, 0, 1, 0.519947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410351,-99) , 
0, 0.504193, 0, 0, 0.47126,-99) , 
0, 0.503124, 1, 0, 0.5073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588204,-99) , 
NN(
0, 
0, 
-1, 0.494806, 0, -1, 0.470655,-99) , 
0, 0.488976, 1, 0, 0.478273,-99) , 
0, 0.497138, 0, 0, 0.49543,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0707655);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.501899, 0, 1, 0.543764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465388,-99) , 
1, -0.000521434, 1, 0, 0.51286,-99) , 
NN(
0, 
0, 
-1, 0.928729, 1, -1, 0.480537,-99) , 
5, 0.750556, 1, 0, 0.492435,-99) , 
5, -0.0476219, 1, 0, 0.50149,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0479941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49292, 1, 1, 0.586487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441438,-99) , 
5, -0.714247, 0, 0, 0.508103,-99) , 
3, 3.41351, 0, 0, 0.527622,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463223,-99) , 
2, 0.0725178, 1, 0, 0.496176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425726,-99) , 
2, -0.140009, 0, 0, 0.489365,-99) , 
0, 0.496185, 1, 0, 0.501813,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0701992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505074, 1, 1, 0.573239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46792,-99) , 
0, 0.497138, 1, 0, 0.499251,-99) , 
0, 0.500947, 0, 0, 0.519742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466873,-99) , 
5, 0.931947, 0, 0, 0.481866,-99) , 
4, 0.999525, 1, 0, 0.489876,-99) , 
5, 0.714267, 1, 0, 0.502586,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0512058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491504,-99) , 
5, 0.0476039, 1, 0, 0.504398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41597,-99) , 
5, 0.238083, 0, 0, 0.484909,-99) , 
0, 0.498407, 1, 0, 0.496135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503783,-99) , 
NN(
0, 
0, 
-1, 0.528437, 0, -1, 0.425585,-99) , 
5, -0.23816, 1, 0, 0.443233,-99) , 
0, 0.503804, 1, 0, 0.489855,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.043238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499993, 0, 1, 0.579194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400089,-99) , 
3, 3.36683, 1, 0, 0.49596,-99) , 
5, -0.183684, 0, 0, 0.524178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498823,-99) , 
3, 6.75183, 0, 0, 0.504619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46432,-99) , 
5, 0.945568, 1, 0, 0.497249,-99) , 
5, 0.428563, 1, 0, 0.504169,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0279165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495756, 0, 1, 0.524821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448873,-99) , 
0, 0.496946, 0, 0, 0.497658,-99) , 
0, 0.496412, 1, 0, 0.506056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42349,-99) , 
0, 0.489519, 0, 0, 0.502794,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0441242);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487296,-99) , 
5, 0.727922, 1, 0, 0.534834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472397,-99) , 
5, 0.455784, 0, 0, 0.500191,-99) , 
2, 0.0939815, 0, 0, 0.504774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428364,-99) , 
5, -0.904754, 0, 0, 0.500614,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0454182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.469472, 1, 1, 0.533684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440392,-99) , 
5, -0.238081, 0, 0, 0.524929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482917,-99) , 
0, 0.49523, 0, 0, 0.54768,-99) , 
NN(
0, 
0, 
-1, 0.709893, 0, -1, 0.488748,-99) , 
3, 0.575917, 1, 0, 0.496615,-99) , 
3, 3.3878, 0, 0, 0.504637,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0367485);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577515,-99) , 
NN(
NN(
0, 
0, 
-1, 0.714266, 1, 1, 0.512487,-99) , 
NN(
0, 
0, 
-1, 0.66565, 0, -1, 0.479228,-99) , 
5, 0.333322, 0, 0, 0.503936,-99) , 
2, 0.198873, 0, 0, 0.508322,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0527114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483308,-99) , 
0, 0.503305, 1, 0, 0.520607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456698,-99) , 
0, 0.489519, 0, 0, 0.517869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457907,-99) , 
5, 0.950111, 1, 0, 0.479989,-99) , 
5, 0.904747, 1, 0, 0.50872,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.078616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487542,-99) , 
0, 0.49487, 0, 0, 0.526755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474662,-99) , 
5, -0.238091, 1, 0, 0.485948,-99) , 
0, 0.497138, 1, 0, 0.502073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474594,-99) , 
2, 0.125221, 0, 0, 0.502016,-99) , 
NN(
0, 
0, 
-1, 0.125652, 0, -1, 0.378091,-99) , 
5, 0.523913, 0, 0, 0.457785,-99) , 
2, 0.0587182, 1, 0, 0.492387,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0491808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499134, 1, 1, 0.51911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429329,-99) , 
3, 2.6065, 0, 0, 0.469426,-99) , 
0, 0.491424, 0, 0, 0.514579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461222,-99) , 
3, 6.66832, 1, 0, 0.510317,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0654585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504348, 0, 1, 0.606187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469843,-99) , 
0, 0.503805, 1, 0, 0.510289,-99) , 
5, 0.428427, 1, 0, 0.538016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469324,-99) , 
3, 1.98182, 1, 0, 0.50775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394594,-99) , 
5, 0.142945, 0, 0, 0.483371,-99) , 
3, 3.3878, 1, 0, 0.500718,-99) , 
0, 0.5019, 0, 0, 0.508313,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0452116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495948,-99) , 
5, -0.174616, 0, 0, 0.530983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480383,-99) , 
5, 0.782286, 0, 0, 0.499518,-99) , 
5, 0.238075, 1, 0, 0.506314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433365,-99) , 
3, 8.07835, 1, 0, 0.502831,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0555231);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48569,-99) , 
0, 0.494691, 1, 0, 0.494065,-99) , 
NN(
0, 
0, 
-1, 0.498997, 1, -1, 0.458928,-99) , 
5, 0.9047, 1, 0, 0.485954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369907,-99) , 
0, 0.489522, 0, 0, 0.480635,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0542571);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467199,-99) , 
5, -0.42857, 0, 0, 0.506942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431384,-99) , 
4, 0.999864, 0, 0, 0.498758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45073,-99) , 
4, 0.999524, 0, 0, 0.494061,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0588471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458886,-99) , 
0, 0.499048, 1, 0, 0.501315,-99) , 
5, -0.682551, 0, 0, 0.531505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411656,-99) , 
5, 0.238167, 0, 0, 0.512371,-99) , 
NN(
0, 
0, 
-1, -0.0791483, 0, -1, 0.480319,-99) , 
0, 0.500947, 0, 0, 0.488718,-99) , 
5, -0.333338, 1, 0, 0.495025,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.066202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.66683, 1, 1, 0.544437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417748,-99) , 
5, -0.102063, 1, 0, 0.471191,-99) , 
0, 0.493328, 0, 0, 0.530041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492455,-99) , 
0, 0.500948, 0, 0, 0.504257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461707,-99) , 
5, 0.945562, 1, 0, 0.493719,-99) , 
5, 0.714254, 1, 0, 0.50912,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0596022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.546482, 1, 1, 0.523548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32737,-99) , 
3, 0.955514, 0, 0, 0.469908,-99) , 
5, 0.0476039, 0, 0, 0.511815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485709,-99) , 
0, 0.49836, 1, 0, 0.495467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446853,-99) , 
0, 0.501628, 0, 0, 0.469608,-99) , 
5, 0.714267, 0, 0, 0.483915,-99) , 
0, 0.496185, 1, 0, 0.493116,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0463429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473609,-99) , 
3, 3.10743, 1, 0, 0.507673,-99) , 
5, 0.238287, 1, 0, 0.535885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485779,-99) , 
3, 2.6296, 1, 0, 0.501991,-99) , 
NN(
0, 
0, 
-1, 0.492511, 1, -1, 0.466527,-99) , 
0, 0.493328, 0, 0, 0.496558,-99) , 
2, 0.0709487, 0, 0, 0.503134,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0523518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00146089, 0, 1, 0.566702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432632,-99) , 
3, 2.85352, 0, 0, 0.488432,-99) , 
0, 0.496185, 0, 0, 0.538519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491718,-99) , 
5, 0.387795, 1, 0, 0.500566,-99) , 
NN(
0, 
0, 
-1, -0.619106, 1, -1, 0.46144,-99) , 
5, -0.428572, 0, 0, 0.494402,-99) , 
2, -0.0740473, 1, 0, 0.501859,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0586687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.854856, 0, 1, 0.563378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42929,-99) , 
3, 1.7818, 0, 0, 0.481405,-99) , 
0, 0.502851, 1, 0, 0.54447,-99) , 
NN(
NN(
0, 
0, 
-1, 0.63718, 1, 1, 0.513239,-99) , 
NN(
0, 
0, 
-1, 0.705255, 0, -1, 0.473568,-99) , 
0, 0.500948, 1, 0, 0.50277,-99) , 
5, 0.523803, 1, 0, 0.514397,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0463977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0478579, 0, 1, 0.58467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4908,-99) , 
5, -0.238123, 1, 0, 0.498832,-99) , 
1, -0.00416183, 1, 0, 0.503955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342333,-99) , 
6, 0.012485, 1, 0, 0.499299,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0647725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.71423, 1, 1, 0.527334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457487,-99) , 
2, 0.160276, 1, 0, 0.479851,-99) , 
2, 0.0939838, 1, 0, 0.520334,-99) , 
NN(
NN(
0, 
0, 
-1, 0.333559, 1, 1, 0.527088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448297,-99) , 
2, -0.0595172, 1, 0, 0.473825,-99) , 
2, 0.0118913, 0, 0, 0.493492,-99) , 
0, 0.499043, 1, 0, 0.508564,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0449893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499223,-99) , 
2, -0.014534, 1, 0, 0.510872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446643,-99) , 
2, 0.225821, 1, 0, 0.5068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460367,-99) , 
5, 0.777892, 0, 0, 0.499804,-99) , 
NN(
0, 
0, 
-1, 0.497131, 0, -1, 0.378731,-99) , 
5, 0.333353, 0, 0, 0.467268,-99) , 
2, -0.0710868, 0, 0, 0.499141,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0717004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47955,-99) , 
5, -0.809531, 0, 0, 0.58527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445321,-99) , 
5, 0.619046, 0, 0, 0.510062,-99) , 
5, 0.333268, 1, 0, 0.524802,-99) , 
NN(
NN(
0, 
0, 
-1, 0.551108, 1, 1, 0.51602,-99) , 
NN(
0, 
0, 
-1, -0.618801, 1, -1, 0.434704,-99) , 
5, 0.142976, 0, 0, 0.495615,-99) , 
0, 0.499043, 1, 0, 0.511981,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0423674);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.333279, 1, 1, 0.537805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476223,-99) , 
5, -0.428311, 0, 0, 0.501581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43956,-99) , 
0, 0.493067, 1, 0, 0.450597,-99) , 
0, 0.496004, 0, 0, 0.48971,-99) , 
0, 0.492376, 1, 0, 0.494865,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0689363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 1, 1, 0.569767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478228,-99) , 
3, 0.371835, 1, 0, 0.484812,-99) , 
3, 2.88537, 0, 0, 0.495467,-99) , 
NN(
0, 
0, 
-1, 0.714268, 0, -1, 0.458276,-99) , 
3, 3.75356, 1, 0, 0.485906,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0538781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487122,-99) , 
3, 1.82701, 0, 0, 0.566783,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.522365,-99) , 
5, 0.809498, 1, 0, 0.546734,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0476086, 1, 1, 0.518017,-99) , 
NN(
0, 
0, 
-1, -0.714209, 0, -1, 0.472812,-99) , 
0, 0.496185, 0, 0, 0.503063,-99) , 
2, 0.0579437, 0, 0, 0.511448,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0592322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.576567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481131,-99) , 
5, -0.854856, 0, 0, 0.551775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486707,-99) , 
2, 0.0629115, 0, 0, 0.492635,-99) , 
0, 0.492379, 1, 0, 0.497522,-99) , 
5, 0.523795, 1, 0, 0.512571,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0502979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486805,-99) , 
4, 0.999991, 0, 0, 0.520766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411984,-99) , 
4, 0.999905, 0, 0, 0.510822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508685,-99) , 
NN(
0, 
0, 
-1, 0.809632, 0, -1, 0.479177,-99) , 
0, 0.501901, 0, 0, 0.48459,-99) , 
5, 0.714278, 1, 0, 0.495728,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0825608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411477,-99) , 
4, 0.999973, 0, 0, 0.53742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413179,-99) , 
4, 0.999906, 0, 0, 0.525231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548105,-99) , 
NN(
0, 
0, 
-1, 0.801735, 0, -1, 0.479569,-99) , 
5, 0.755083, 1, 0, 0.486158,-99) , 
5, 0.714265, 1, 0, 0.502836,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0328966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453655,-99) , 
4, 0.999524, 0, 0, 0.501388,-99) , 
6, 0.00687489, 0, 0, 0.504942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396136,-99) , 
6, 0.0120366, 1, 0, 0.501798,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0435526);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.854859, 0, 1, 0.579898,-99) , 
NN(
NN(
0, 
0, 
-1, 0.559468, 1, 1, 0.512032,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.439411,-99) , 
5, -0.156455, 0, 0, 0.507355,-99) , 
5, -0.619032, 1, 0, 0.514755,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0293885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000764792, 1, 1, 0.536944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498072,-99) , 
0, 0.500947, 0, 0, 0.505143,-99) , 
2, 0.0564175, 0, 0, 0.51139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467188,-99) , 
5, -0.904754, 0, 0, 0.509138,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0520668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425689,-99) , 
5, 0.174014, 0, 0, 0.504421,-99) , 
5, -0.0204088, 1, 0, 0.508024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408314,-99) , 
3, 2.15942, 1, 0, 0.524158,-99) , 
NN(
0, 
0, 
-1, -0.755129, 1, -1, 0.406514,-99) , 
0, 0.49714, 0, 0, 0.469032,-99) , 
5, -0.428563, 0, 0, 0.502197,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0411522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455186,-99) , 
0, 0.492376, 0, 0, 0.501595,-99) , 
NN(
0, 
0, 
-1, 0.49713, 1, -1, 0.457798,-99) , 
4, 0.999909, 0, 0, 0.494891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449312,-99) , 
4, 0.999524, 0, 0, 0.490178,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0567865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480046,-99) , 
0, 0.505981, 0, 0, 0.48356,-99) , 
0, 0.490471, 1, 0, 0.487536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43636,-99) , 
4, 0.999524, 0, 0, 0.482279,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0528358);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466127,-99) , 
5, -0.0476277, 0, 0, 0.506763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464341,-99) , 
5, -0.0475079, 1, 0, 0.480627,-99) , 
0, 0.500675, 1, 0, 0.498568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506274,-99) , 
NN(
0, 
0, 
-1, 0.489791, 1, -1, 0.423018,-99) , 
2, 0.0152089, 0, 0, 0.456018,-99) , 
0, 0.491424, 0, 0, 0.494782,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0434725);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428294, 1, 1, 0.53898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486292,-99) , 
0, 0.493663, 1, 0, 0.491469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393685,-99) , 
0, 0.492194, 0, 0, 0.488016,-99) , 
0, 0.491423, 1, 0, 0.4919,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0371467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.841273, 0, 1, 0.558554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404907,-99) , 
5, -0.0884287, 0, 0, 0.495355,-99) , 
5, -0.523809, 1, 0, 0.50237,-99) , 
NN(
0, 
0, 
-1, 0.428515, 0, -1, 0.443255,-99) , 
0, 0.492376, 0, 0, 0.494638,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0538554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489759,-99) , 
0, 0.493329, 0, 0, 0.519631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457079,-99) , 
0, 0.497819, 0, 0, 0.494095,-99) , 
0, 0.496186, 1, 0, 0.502223,-99) , 
NN(
0, 
0, 
-1, 0.495232, 0, -1, 0.462597,-99) , 
5, 0.714273, 0, 0, 0.48461,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0470254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00286209, 1, 1, 0.515366,-99) , 
NN(
0, 
0, 
-1, 0.428599, 0, -1, 0.481526,-99) , 
0, 0.497139, 1, 0, 0.495015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473749,-99) , 
0, 0.5019, 0, 0, 0.492967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379308,-99) , 
5, -0.619058, 1, 0, 0.462146,-99) , 
5, -0.333313, 0, 0, 0.489774,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0640801);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489251,-99) , 
0, 0.502217, 1, 0, 0.524177,-99) , 
NN(
0, 
0, 
-1, 2.04456, 1, -1, 0.455595,-99) , 
0, 0.491424, 0, 0, 0.517854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564594,-99) , 
NN(
0, 
0, 
-1, 0.620584, 0, -1, 0.467723,-99) , 
0, 0.494281, 1, 0, 0.483591,-99) , 
3, 3.7668, 1, 0, 0.50923,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0430538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490349,-99) , 
2, 0.137538, 1, 0, 0.514498,-99) , 
5, 0.238188, 1, 0, 0.538757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561971,-99) , 
NN(
0, 
0, 
-1, 0.619018, 0, -1, 0.486556,-99) , 
0, 0.490471, 1, 0, 0.490194,-99) , 
2, 0.0700769, 0, 0, 0.498748,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0523568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449265,-99) , 
0, 0.497138, 0, 0, 0.497893,-99) , 
3, 2.97693, 0, 0, 0.524291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418845,-99) , 
1, 0.00480033, 1, 0, 0.50474,-99) , 
NN(
0, 
0, 
-1, 0.619086, 0, -1, 0.467696,-99) , 
0, 0.500948, 1, 0, 0.494593,-99) , 
5, -0.142855, 1, 0, 0.499504,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0544313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496,-99) , 
1, -0.000571303, 0, 0, 0.55677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481309,-99) , 
2, -0.202884, 1, 0, 0.505611,-99) , 
2, -0.138579, 0, 0, 0.526704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491616,-99) , 
0, 0.50598, 1, 0, 0.536417,-99) , 
NN(
0, 
0, 
-1, 0.5238, 0, -1, 0.476428,-99) , 
0, 0.504756, 0, 0, 0.480432,-99) , 
2, -0.0710868, 1, 0, 0.488226,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0520265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504667, 0, 1, 0.610154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487191,-99) , 
0, 0.505619, 1, 0, 0.556358,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0748395, 0, 1, 0.530143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475657,-99) , 
0, 0.49378, 0, 0, 0.507174,-99) , 
5, 0.619028, 1, 0, 0.514557,-99) , 
0, 0.503804, 0, 0, 0.519238,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.04744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.19782, 1, 1, 0.550493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383752,-99) , 
3, 0.899228, 1, 0, 0.478944,-99) , 
3, 1.21097, 0, 0, 0.522784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49008,-99) , 
6, 0.00398965, 0, 0, 0.495411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422448,-99) , 
6, 0.00644717, 1, 0, 0.492391,-99) , 
5, 0.238094, 1, 0, 0.498698,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0358873);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.42854, 1, 1, 0.586338,-99) , 
NN(
NN(
0, 
0, 
-1, 0.332726, 1, 1, 0.584891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439031,-99) , 
6, 0.000223015, 0, 0, 0.495778,-99) , 
1, 0.00468307, 0, 0, 0.50165,-99) , 
1, -0.00384117, 1, 0, 0.508066,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0600419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491607,-99) , 
5, 0.27439, 0, 0, 0.522261,-99) , 
0, 0.490471, 1, 0, 0.525236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440833,-99) , 
5, -0.904711, 0, 0, 0.520531,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0547501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490337, 0, 1, 0.598819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484807,-99) , 
3, 3.42333, 1, 0, 0.566274,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502639, 1, 1, 0.526515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462979,-99) , 
5, 0.809511, 0, 0, 0.480103,-99) , 
0, 0.501809, 0, 0, 0.490489,-99) , 
0, 0.492377, 1, 0, 0.498397,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0635132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464672,-99) , 
2, 0.00627446, 1, 0, 0.500599,-99) , 
0, 0.503803, 0, 0, 0.514355,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477699,-99) , 
5, 0.56464, 1, 0, 0.481191,-99) , 
NN(
0, 
0, 
-1, 0.499041, 0, -1, 0.427551,-99) , 
5, 0.492077, 0, 0, 0.476058,-99) , 
5, 0.238094, 1, 0, 0.484231,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0448812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.151988, 0, 1, 0.594047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49014,-99) , 
3, 1.54921, 0, 0, 0.521574,-99) , 
2, -0.0411179, 1, 0, 0.53843,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493323, 1, 1, 0.509279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483631,-99) , 
2, 0.052179, 1, 0, 0.503901,-99) , 
5, 0.619042, 1, 0, 0.515273,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0467728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471682,-99) , 
5, -0.881241, 0, 0, 0.502255,-99) , 
5, -0.501175, 0, 0, 0.526661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484387,-99) , 
5, 0.818581, 1, 0, 0.496689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41844,-99) , 
0, 0.491424, 0, 0, 0.489901,-99) , 
5, 0.047615, 1, 0, 0.496567,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0504762);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.750538, 0, 1, 0.578499,-99) , 
NN(
NN(
0, 
0, 
-1, 0.000114058, 0, 1, 0.589207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474343,-99) , 
0, 0.49741, 0, 0, 0.489822,-99) , 
0, 0.504756, 0, 0, 0.495932,-99) , 
5, -0.523783, 1, 0, 0.505208,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0610015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477285,-99) , 
3, 3.39602, 1, 0, 0.523227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479369,-99) , 
5, 0.909292, 0, 0, 0.499574,-99) , 
5, 0.809459, 1, 0, 0.512586,-99) , 
NN(
NN(
0, 
0, 
-1, 0.523795, 1, 1, 0.549444,-99) , 
NN(
0, 
0, 
-1, 0.497637, 0, -1, 0.471718,-99) , 
2, 0.0562948, 0, 0, 0.48638,-99) , 
0, 0.497138, 1, 0, 0.496975,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.040612);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489111, 1, 1, 0.595713,-99) , 
NN(
NN(
0, 
0, 
-1, -0.877581, 0, 1, 0.554133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488388,-99) , 
1, -0.00243105, 1, 0, 0.492389,-99) , 
5, -0.714251, 1, 0, 0.498054,-99) , 
0, 0.490471, 1, 0, 0.503132,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0619624);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.619021, 1, 1, 0.535963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466085,-99) , 
5, 0.945581, 1, 0, 0.498704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434857,-99) , 
5, -0.265308, 1, 0, 0.460794,-99) , 
5, 0.714273, 0, 0, 0.481277,-99) , 
2, -0.0933332, 1, 0, 0.488608,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0347444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424693,-99) , 
6, 0.00566788, 1, 0, 0.506998,-99) , 
6, 0.00700318, 0, 0, 0.509934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43908,-99) , 
6, 0.00980531, 1, 0, 0.507061,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0620434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489791, 0, 1, 0.577357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4684,-99) , 
2, 0.0491185, 1, 0, 0.542385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479037,-99) , 
2, 0.0269476, 0, 0, 0.489107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409461,-99) , 
3, 3.34039, 1, 0, 0.452922,-99) , 
2, 0.0996793, 1, 0, 0.484152,-99) , 
0, 0.491424, 1, 0, 0.48881,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0667539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466634,-99) , 
5, -0.618996, 0, 0, 0.55556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456106,-99) , 
5, 0.90468, 1, 0, 0.500401,-99) , 
3, 0.753648, 1, 0, 0.511981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490786,-99) , 
0, 0.491968, 1, 0, 0.504076,-99) , 
NN(
0, 
0, 
-1, 5.59266, 1, -1, 0.444965,-99) , 
0, 0.499042, 1, 0, 0.474821,-99) , 
3, 3.40848, 1, 0, 0.500961,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0496459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.82815, 1, 1, 0.5347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44808,-99) , 
0, 0.500946, 0, 0, 0.467122,-99) , 
5, -0.428585, 0, 0, 0.510949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503022,-99) , 
NN(
0, 
0, 
-1, 0.890485, 1, -1, 0.478251,-99) , 
5, 0.931959, 0, 0, 0.4857,-99) , 
5, 0.714273, 1, 0, 0.496472,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0398336);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428299, 1, 1, 0.552709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499708,-99) , 
0, 0.503191, 1, 0, 0.519711,-99) , 
NN(
0, 
0, 
-1, -0.0476277, 0, -1, 0.485058,-99) , 
0, 0.501809, 0, 0, 0.493052,-99) , 
0, 0.492376, 1, 0, 0.499208,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0445213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477235,-99) , 
5, 0.730441, 0, 0, 0.506705,-99) , 
5, 0.564599, 1, 0, 0.51042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561197,-99) , 
NN(
0, 
0, 
-1, 3.97672, 1, -1, 0.475238,-99) , 
0, 0.492375, 1, 0, 0.486617,-99) , 
5, 0.428535, 0, 0, 0.504116,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0267865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593521,-99) , 
NN(
0, 
0, 
-1, 0.00940934, 1, -1, 0.493202,-99) , 
5, -0.550871, 1, 0, 0.497284,-99) , 
NN(
0, 
0, 
-1, 1.33817, 0, -1, 0.454064,-99) , 
5, -0.80949, 0, 0, 0.493567,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0505881);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492965, 1, 1, 0.522646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538016,-99) , 
NN(
0, 
0, 
-1, 0.490151, 1, -1, 0.438599,-99) , 
3, 2.7577, 0, 0, 0.474392,-99) , 
0, 0.491423, 0, 0, 0.518468,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0440863);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450376,-99) , 
5, -0.714214, 0, 0, 0.520073,-99) , 
NN(
0, 
0, 
-1, 0.501901, 1, -1, 0.4856,-99) , 
2, 0.0203106, 0, 0, 0.496777,-99) , 
2, -0.220847, 1, 0, 0.499774,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.068893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.647236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456794,-99) , 
0, 0.495232, 1, 0, 0.484977,-99) , 
5, -0.174599, 0, 0, 0.52515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470064,-99) , 
2, 0.0216453, 0, 0, 0.480542,-99) , 
5, 0.936501, 0, 0, 0.490086,-99) , 
5, 0.33333, 1, 0, 0.497798,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0405225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496691,-99) , 
2, -0.0144813, 1, 0, 0.510325,-99) , 
3, 6.39631, 0, 0, 0.514907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489417,-99) , 
0, 0.498081, 1, 0, 0.501635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443518,-99) , 
5, 0.963705, 1, 0, 0.489185,-99) , 
5, 0.809501, 1, 0, 0.503687,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.048063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.451231, 1, 1, 0.508845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419996,-99) , 
5, -0.773255, 1, 0, 0.466211,-99) , 
5, -0.0476329, 0, 0, 0.500608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566906,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.449875,-99) , 
5, 0.238167, 1, 0, 0.471689,-99) , 
2, 0.0706187, 1, 0, 0.495645,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0482784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492983,-99) , 
0, 0.494146, 0, 0, 0.545158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489252,-99) , 
3, 5.93432, 0, 0, 0.494399,-99) , 
5, 0.523794, 1, 0, 0.507457,-99) , 
NN(
0, 
0, 
-1, 0.523633, 0, -1, 0.469547,-99) , 
0, 0.502852, 1, 0, 0.500808,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0389344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499114,-99) , 
0, 0.499996, 0, 0, 0.509042,-99) , 
5, 0.201868, 1, 0, 0.511449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533845,-99) , 
NN(
0, 
0, 
-1, -0.591821, 1, -1, 0.449934,-99) , 
0, 0.503803, 0, 0, 0.461585,-99) , 
5, -0.0476104, 0, 0, 0.501739,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0379234);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.89115, 0, 1, 0.545172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496372,-99) , 
0, 0.498092, 1, 0, 0.507421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383361,-99) , 
0, 0.499993, 1, 0, 0.447911,-99) , 
5, 0.233562, 0, 0, 0.502949,-99) , 
5, -0.238096, 1, 0, 0.509169,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0345051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464389,-99) , 
4, 0.999909, 0, 0, 0.501284,-99) , 
2, -0.193316, 1, 0, 0.505645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468953,-99) , 
4, 0.999524, 0, 0, 0.50171,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0268545);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489792, 1, 1, 0.508554,-99) , 
NN(
0, 
0, 
-1, 0.499859, 0, -1, 0.480356,-99) , 
0, 0.499043, 1, 0, 0.496171,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0641142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.90469, 1, 1, 0.539732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484482,-99) , 
5, 0.918351, 0, 0, 0.498392,-99) , 
5, 0.809501, 1, 0, 0.521545,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489687, 1, 1, 0.538512,-99) , 
NN(
0, 
0, 
-1, -0.0475963, 0, -1, 0.463575,-99) , 
0, 0.491242, 1, 0, 0.475897,-99) , 
0, 0.497138, 0, 0, 0.50253,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0476875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.451267, 1, 1, 0.601177,-99) , 
NN(
0, 
0, 
-1, 1.67409, 0, -1, 0.467717,-99) , 
0, 0.501899, 1, 0, 0.559383,-99) , 
NN(
0, 
0, 
-1, -0.00551247, 0, -1, 0.487415,-99) , 
5, 0.047615, 1, 0, 0.499486,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0565989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.129241, 0, 1, 0.549008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48169,-99) , 
5, 0.931948, 1, 0, 0.508983,-99) , 
5, 0.523802, 1, 0, 0.519425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420784,-99) , 
0, 0.489519, 0, 0, 0.515255,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0464742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465362,-99) , 
5, -0.619046, 0, 0, 0.505547,-99) , 
2, 0.156486, 0, 0, 0.511117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427976,-99) , 
0, 0.49808, 1, 0, 0.458364,-99) , 
3, 5.54302, 1, 0, 0.504732,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0345123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.87756, 0, 1, 0.560961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499552,-99) , 
0, 0.502217, 0, 0, 0.507152,-99) , 
5, -0.714282, 1, 0, 0.511845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476959,-99) , 
0, 0.489972, 1, 0, 0.495688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368288,-99) , 
1, 0.000910608, 1, 0, 0.442703,-99) , 
0, 0.491424, 0, 0, 0.505651,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0538664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.62047, 1, 1, 0.528043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491322,-99) , 
0, 0.499984, 0, 0, 0.503518,-99) , 
5, 0.863932, 1, 0, 0.516344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444821,-99) , 
5, 0.160982, 1, 0, 0.495698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379768,-99) , 
3, 4.73886, 1, 0, 0.482764,-99) , 
5, 0.5238, 0, 0, 0.506473,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0499222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4495,-99) , 
0, 0.503803, 1, 0, 0.550859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470522,-99) , 
5, -0.87301, 0, 0, 0.527268,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489296,-99) , 
5, 0.873005, 0, 0, 0.5002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452098,-99) , 
0, 0.491424, 0, 0, 0.496973,-99) , 
5, 0.333326, 1, 0, 0.503715,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0375562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491243, 1, 1, 0.516379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439769,-99) , 
0, 0.489519, 0, 0, 0.51304,-99) , 
NN(
0, 
0, 
-1, 0.498087, 0, -1, 0.479752,-99) , 
5, 0.904748, 1, 0, 0.504897,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0596143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494972,-99) , 
0, 0.500808, 0, 0, 0.5051,-99) , 
0, 0.493328, 1, 0, 0.512739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47161,-99) , 
3, 3.69608, 0, 0, 0.486123,-99) , 
NN(
0, 
0, 
-1, 2.59937, 1, -1, 0.419083,-99) , 
2, 0.0564175, 1, 0, 0.471543,-99) , 
5, 0.714272, 0, 0, 0.494598,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.053976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48142,-99) , 
5, 0.523759, 1, 0, 0.584375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464644,-99) , 
5, 0.523807, 0, 0, 0.499047,-99) , 
6, 0.00456851, 0, 0, 0.507679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41276,-99) , 
6, 0.0119971, 1, 0, 0.50499,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0403289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.605045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417415,-99) , 
6, 0.00689942, 1, 0, 0.500595,-99) , 
5, 0.183673, 1, 0, 0.507186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453964,-99) , 
1, 0.0023278, 0, 0, 0.477538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398571,-99) , 
0, 0.494279, 0, 0, 0.455797,-99) , 
5, -0.428572, 0, 0, 0.499381,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0427451);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506253, 0, 1, 0.566083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476116,-99) , 
2, 0.0276958, 1, 0, 0.493725,-99) , 
NN(
0, 
0, 
-1, 0.333427, 0, -1, 0.459569,-99) , 
2, -0.0452213, 0, 0, 0.485497,-99) , 
0, 0.504756, 0, 0, 0.491049,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0347726);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494215,-99) , 
5, -0.727899, 0, 0, 0.554267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458771,-99) , 
5, -0.78227, 1, 0, 0.489909,-99) , 
0, 0.499042, 1, 0, 0.522316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495448,-99) , 
5, 0.438288, 1, 0, 0.498356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422714,-99) , 
5, 0.306123, 0, 0, 0.495313,-99) , 
5, 0.142852, 1, 0, 0.500421,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0604479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618823, 0, 1, 0.539971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478339,-99) , 
1, -0.0043319, 1, 0, 0.485087,-99) , 
1, 0.00178299, 0, 0, 0.498569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420272,-99) , 
6, 0.0124851, 1, 0, 0.496547,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.03562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599281,-99) , 
NN(
0, 
0, 
-1, 0.1263, 0, -1, 0.491971,-99) , 
5, -0.310546, 1, 0, 0.495345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413899,-99) , 
0, 0.502535, 1, 0, 0.476544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375266,-99) , 
0, 0.494283, 0, 0, 0.446413,-99) , 
5, -0.618953, 0, 0, 0.489295,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0610292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49428, 1, 1, 0.555535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49422,-99) , 
2, -0.190439, 1, 0, 0.503419,-99) , 
3, 2.05903, 1, 0, 0.529146,-99) , 
NN(
0, 
0, 
-1, 0.959189, 0, -1, 0.48167,-99) , 
5, 0.90474, 1, 0, 0.517232,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.047792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.460922, 0, 1, 0.530731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476824,-99) , 
5, 0.834135, 0, 0, 0.496008,-99) , 
5, 0.564611, 1, 0, 0.502811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44696,-99) , 
5, -0.841268, 0, 0, 0.471829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408238,-99) , 
0, 0.494281, 0, 0, 0.453768,-99) , 
5, -0.523809, 0, 0, 0.496174,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0308248);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545317,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500539, 0, 1, 0.513067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441377,-99) , 
5, -0.42867, 0, 0, 0.489638,-99) , 
0, 0.5019, 1, 0, 0.508242,-99) , 
2, 0.198873, 0, 0, 0.510548,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0637124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.360526, 1, 1, 0.560592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436153,-99) , 
3, 2.36561, 1, 0, 0.486794,-99) , 
5, 0.142823, 0, 0, 0.524426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531995,-99) , 
NN(
0, 
0, 
-1, 0.863894, 1, -1, 0.482616,-99) , 
0, 0.493329, 1, 0, 0.489725,-99) , 
5, 0.71423, 1, 0, 0.504037,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0442158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496406,-99) , 
1, 0.0013636, 1, 0, 0.537762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496333,-99) , 
2, -0.0710868, 1, 0, 0.509162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479489,-99) , 
2, 0.0261935, 0, 0, 0.491751,-99) , 
3, 2.83758, 0, 0, 0.498163,-99) , 
5, -0.809489, 1, 0, 0.50121,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0581008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.387768, 0, 1, 0.583088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488368,-99) , 
0, 0.492104, 0, 0, 0.524773,-99) , 
5, 0.428405, 1, 0, 0.537433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496219,-99) , 
5, 0.0204375, 1, 0, 0.504336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427486,-99) , 
5, -0.714254, 0, 0, 0.495414,-99) , 
0, 0.49809, 1, 0, 0.515284,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0339549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.51376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454004,-99) , 
5, -0.904722, 0, 0, 0.510598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427269,-99) , 
1, -0.00858948, 0, 0, 0.508408,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0326847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.89343, 1, 1, 0.540413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496386,-99) , 
3, 5.49237, 0, 0, 0.503063,-99) , 
2, 0.109235, 0, 0, 0.507921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438645,-99) , 
2, -0.215157, 0, 0, 0.504098,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0621599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.510178, 0, 1, 0.580635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419377,-99) , 
5, -0.619009, 1, 0, 0.490083,-99) , 
2, -0.011451, 0, 0, 0.541029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473519,-99) , 
3, 6.69981, 1, 0, 0.506088,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.394428,-99) , 
5, 0.469409, 0, 0, 0.494016,-99) , 
5, 0.142867, 1, 0, 0.502475,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0559413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142945, 1, 1, 0.53089,-99) , 
NN(
0, 
0, 
-1, 0.503532, 1, -1, 0.483739,-99) , 
3, 2.97096, 0, 0, 0.499318,-99) , 
NN(
0, 
0, 
-1, 0.492512, 1, -1, 0.438089,-99) , 
0, 0.493328, 0, 0, 0.489047,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0288168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491015, 0, 1, 0.555303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481847,-99) , 
3, 3.3878, 1, 0, 0.534335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499783,-99) , 
5, 0.54646, 1, 0, 0.504591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357132,-99) , 
5, -0.251763, 1, 0, 0.470569,-99) , 
5, 0.0475954, 0, 0, 0.498346,-99) , 
0, 0.492376, 1, 0, 0.502371,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0544457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.587288, 1, 1, 0.537731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425903,-99) , 
3, 1.49122, 1, 0, 0.460214,-99) , 
5, -0.238086, 0, 0, 0.520538,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499048, 1, 1, 0.568603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453957,-99) , 
5, 0.691608, 0, 0, 0.48643,-99) , 
5, -0.619043, 1, 0, 0.493353,-99) , 
1, -0.00116413, 1, 0, 0.501579,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0424573);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.121638, 0, 1, 0.521835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483781,-99) , 
4, 0.999524, 0, 0, 0.517642,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0547977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499453, 1, 1, 0.520942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461917,-99) , 
0, 0.494103, 1, 0, 0.490469,-99) , 
0, 0.498092, 0, 0, 0.506364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48616,-99) , 
3, 0.842764, 1, 0, 0.498936,-99) , 
NN(
0, 
0, 
-1, 0.999906, 0, -1, 0.465436,-99) , 
5, 0.714254, 0, 0, 0.483329,-99) , 
3, 3.02443, 0, 0, 0.49064,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0587814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.576116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475852,-99) , 
3, 1.34339, 1, 0, 0.515669,-99) , 
3, 2.70322, 0, 0, 0.533573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48803,-99) , 
5, 0.88654, 1, 0, 0.522354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474076,-99) , 
1, 0.000106023, 0, 0, 0.488959,-99) , 
0, 0.499042, 0, 0, 0.502034,-99) , 
5, 0.523752, 1, 0, 0.510471,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0360904);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472538,-99) , 
0, 0.496187, 0, 0, 0.547948,-99) , 
NN(
0, 
0, 
-1, 3.7668, 1, -1, 0.490123,-99) , 
1, -0.0034466, 1, 0, 0.494898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429535,-99) , 
5, -0.904754, 0, 0, 0.49116,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0700997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485694,-99) , 
3, 1.03628, 0, 0, 0.553544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472461,-99) , 
0, 0.495233, 0, 0, 0.508203,-99) , 
5, 0.142861, 1, 0, 0.516342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468735,-99) , 
0, 0.498906, 1, 0, 0.492406,-99) , 
NN(
0, 
0, 
-1, 0.42822, 0, -1, 0.415982,-99) , 
0, 0.496185, 0, 0, 0.463114,-99) , 
2, 0.0562948, 1, 0, 0.505413,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0631222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482063,-99) , 
2, -0.0632461, 0, 0, 0.512022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446613,-99) , 
0, 0.493327, 1, 0, 0.474957,-99) , 
2, 0.0838667, 1, 0, 0.50621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514548,-99) , 
NN(
0, 
0, 
-1, 0.502535, 1, -1, 0.447308,-99) , 
0, 0.505709, 0, 0, 0.457304,-99) , 
0, 0.500947, 1, 0, 0.492117,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0480007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490561,-99) , 
2, -0.00974302, 1, 0, 0.509277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454171,-99) , 
5, 0.714219, 0, 0, 0.48948,-99) , 
3, 3.40477, 1, 0, 0.503443,-99) , 
NN(
0, 
0, 
-1, 0.489246, 1, -1, 0.451561,-99) , 
0, 0.490471, 0, 0, 0.500449,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0401312);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499239,-99) , 
5, -0.0567003, 0, 0, 0.517695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48305,-99) , 
0, 0.492377, 1, 0, 0.487742,-99) , 
5, 0.523792, 1, 0, 0.496864,-99) , 
4, 0.999524, 1, 0, 0.500537,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0424408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491701,-99) , 
3, 0.907509, 1, 0, 0.532691,-99) , 
3, 1.97454, 0, 0, 0.560284,-99) , 
NN(
NN(
0, 
0, 
-1, 0.401423, 1, 1, 0.510936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419351,-99) , 
0, 0.499993, 0, 0, 0.455845,-99) , 
5, 0.102124, 0, 0, 0.504875,-99) , 
5, -0.714257, 1, 0, 0.509896,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0538984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.576651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470721,-99) , 
2, -0.0794168, 0, 0, 0.507596,-99) , 
2, -0.0190523, 0, 0, 0.550609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490966,-99) , 
5, 0.587318, 1, 0, 0.496889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446714,-99) , 
0, 0.503805, 1, 0, 0.491212,-99) , 
5, 0.333341, 1, 0, 0.503928,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0488548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523534, 1, 1, 0.553558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488722,-99) , 
0, 0.493522, 0, 0, 0.49618,-99) , 
0, 0.494145, 0, 0, 0.518656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48022,-99) , 
2, -0.0843733, 1, 0, 0.486295,-99) , 
5, -0.809518, 1, 0, 0.490215,-99) , 
0, 0.496185, 1, 0, 0.499436,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0387512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484784,-99) , 
2, 0.0358347, 1, 0, 0.50879,-99) , 
2, 0.190295, 0, 0, 0.511716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454749,-99) , 
2, -0.215157, 0, 0, 0.508617,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0557973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.727894, 1, 1, 0.521253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414276,-99) , 
0, 0.500938, 1, 0, 0.482334,-99) , 
2, -0.0843733, 0, 0, 0.514487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511993,-99) , 
NN(
0, 
0, 
-1, 0.501898, 1, -1, 0.417938,-99) , 
5, -0.863948, 1, 0, 0.458113,-99) , 
5, -0.428572, 0, 0, 0.506014,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0332996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00689937, 0, 1, 0.508059,-99) , 
NN(
0, 
0, 
-1, 0.502848, 1, -1, 0.488235,-99) , 
2, 0.00230742, 0, 0, 0.49923,-99) , 
NN(
0, 
0, 
-1, -0.142828, 0, -1, 0.45113,-99) , 
2, -0.0718794, 0, 0, 0.490713,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0462339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.360571, 1, 1, 0.530106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462096,-99) , 
5, 0.45124, 0, 0, 0.494704,-99) , 
0, 0.495235, 1, 0, 0.50352,-99) , 
NN(
0, 
0, 
-1, 0.497136, 0, -1, 0.477554,-99) , 
5, 0.904749, 1, 0, 0.497267,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0305814);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572745,-99) , 
NN(
NN(
0, 
0, 
-1, 0.310674, 1, 1, 0.512153,-99) , 
NN(
0, 
0, 
-1, 0.4971, 0, -1, 0.476803,-99) , 
5, -0.809477, 0, 0, 0.509331,-99) , 
0, 0.505709, 0, 0, 0.511722,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.052637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501898, 0, 1, 0.540712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480632,-99) , 
5, 0.945564, 0, 0, 0.48745,-99) , 
5, -0.142851, 1, 0, 0.495433,-99) , 
NN(
0, 
0, 
-1, 0.489111, 1, -1, 0.42523,-99) , 
0, 0.490471, 0, 0, 0.490945,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0304898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464241,-99) , 
0, 0.505437, 1, 0, 0.509035,-99) , 
5, 0.142958, 1, 0, 0.532045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467341,-99) , 
5, -0.523801, 0, 0, 0.498553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42172,-99) , 
0, 0.503033, 1, 0, 0.494975,-99) , 
0, 0.503804, 0, 0, 0.499179,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0416327);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.746021, 0, 1, 0.557738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494146,-99) , 
5, 0.536797, 1, 0, 0.500996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424587,-99) , 
5, 0.115651, 0, 0, 0.496984,-99) , 
5, -0.238087, 1, 0, 0.505448,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0422332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483007,-99) , 
0, 0.495776, 0, 0, 0.505671,-99) , 
NN(
0, 
0, 
-1, 0.00072363, 1, -1, 0.460466,-99) , 
0, 0.504756, 1, 0, 0.502089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435169,-99) , 
2, -0.225264, 0, 0, 0.49838,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0317768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49904, 0, 1, 0.55706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470422,-99) , 
0, 0.502852, 1, 0, 0.500286,-99) , 
1, 0.00359286, 0, 0, 0.505205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426661,-99) , 
6, 0.0107825, 1, 0, 0.502514,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0528054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.726497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467207,-99) , 
5, -0.691609, 0, 0, 0.502098,-99) , 
5, 0.0793512, 0, 0, 0.531666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494901,-99) , 
0, 0.501899, 0, 0, 0.501582,-99) , 
NN(
0, 
0, 
-1, 0.714211, 1, -1, 0.446868,-99) , 
1, -0.00249289, 0, 0, 0.494059,-99) , 
5, 0.333319, 1, 0, 0.50208,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0619293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.705084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435654,-99) , 
5, 0.489053, 0, 0, 0.505004,-99) , 
5, 0.174604, 1, 0, 0.512701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483099,-99) , 
5, -0.818578, 0, 0, 0.52393,-99) , 
NN(
0, 
0, 
-1, -0.709722, 1, -1, 0.421865,-99) , 
0, 0.498089, 0, 0, 0.470322,-99) , 
5, -0.238091, 0, 0, 0.505751,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0672221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476951,-99) , 
5, -0.709716, 0, 0, 0.536182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480054,-99) , 
0, 0.503756, 0, 0, 0.485764,-99) , 
5, 0.523808, 1, 0, 0.498635,-99) , 
NN(
0, 
0, 
-1, 0.238161, 1, -1, 0.43095,-99) , 
0, 0.491423, 0, 0, 0.492534,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0409914);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.42851, 1, 1, 0.535937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482733,-99) , 
5, -0.238096, 1, 0, 0.486958,-99) , 
0, 0.506162, 0, 0, 0.489624,-99) , 
0, 0.492376, 1, 0, 0.494392,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0667241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455389,-99) , 
3, 2.47235, 1, 0, 0.551105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490559,-99) , 
3, 2.4723, 0, 0, 0.497627,-99) , 
2, 0.0486841, 0, 0, 0.506291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41898,-99) , 
2, 0.0614485, 1, 0, 0.490905,-99) , 
NN(
0, 
0, 
-1, 0.428542, 0, -1, 0.445186,-99) , 
0, 0.496185, 1, 0, 0.459374,-99) , 
3, 3.40934, 1, 0, 0.492521,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.066214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470848,-99) , 
3, 4.29895, 1, 0, 0.528125,-99) , 
3, 6.39631, 0, 0, 0.532971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498308,-99) , 
0, 0.497153, 0, 0, 0.521814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471702,-99) , 
5, 0.945564, 1, 0, 0.505719,-99) , 
5, 0.809501, 1, 0, 0.520583,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0668948);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469889,-99) , 
0, 0.502852, 1, 0, 0.5193,-99) , 
NN(
0, 
0, 
-1, -0.138582, 1, -1, 0.473784,-99) , 
2, -0.0710868, 0, 0, 0.510687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447075,-99) , 
3, 0.90753, 0, 0, 0.502483,-99) , 
NN(
0, 
0, 
-1, 1.70484, 0, -1, 0.43122,-99) , 
5, -0.705196, 1, 0, 0.463745,-99) , 
5, 0.238093, 0, 0, 0.500557,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0441165);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498381,-99) , 
3, 3.02898, 0, 0, 0.509467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440726,-99) , 
2, 0.0510438, 0, 0, 0.45669,-99) , 
5, 0.183681, 0, 0, 0.500465,-99) , 
5, -0.904741, 1, 0, 0.504641,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0596449);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422482,-99) , 
3, 4.77568, 1, 0, 0.517649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476511,-99) , 
2, -0.0710868, 1, 0, 0.483279,-99) , 
5, 0.619027, 1, 0, 0.494115,-99) , 
0, 0.490471, 1, 0, 0.498448,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0367628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481657,-99) , 
5, 0.619018, 0, 0, 0.503079,-99) , 
0, 0.505709, 0, 0, 0.505643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426524,-99) , 
1, -0.00858948, 0, 0, 0.50357,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0573873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397693,-99) , 
6, 0.00714692, 1, 0, 0.512261,-99) , 
5, 0.174663, 1, 0, 0.517231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457998,-99) , 
3, 1.74879, 1, 0, 0.499726,-99) , 
NN(
0, 
0, 
-1, 0.811733, 0, -1, 0.445017,-99) , 
0, 0.499995, 0, 0, 0.46476,-99) , 
5, -0.333323, 0, 0, 0.509025,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0278849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497642,-99) , 
0, 0.493828, 1, 0, 0.501629,-99) , 
NN(
0, 
0, 
-1, 0.61903, 0, -1, 0.466675,-99) , 
2, 0.0579437, 1, 0, 0.494397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422557,-99) , 
0, 0.489519, 0, 0, 0.491668,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0569939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494431,-99) , 
5, -0.174616, 0, 0, 0.514205,-99) , 
0, 0.492376, 1, 0, 0.529018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483689,-99) , 
2, 0.0764159, 0, 0, 0.490594,-99) , 
NN(
0, 
0, 
-1, 4.39909, 1, -1, 0.426444,-99) , 
5, 0.600926, 0, 0, 0.48048,-99) , 
5, 0.238089, 1, 0, 0.489773,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0545526);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.42857, 1, 1, 0.564877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474035,-99) , 
3, 3.00374, 1, 0, 0.501595,-99) , 
2, -0.212089, 1, 0, 0.505523,-99) , 
0, 0.502852, 0, 0, 0.5142,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0517302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00442927, 0, 1, 0.52995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444601,-99) , 
3, 2.27521, 0, 0, 0.474406,-99) , 
0, 0.493329, 0, 0, 0.520424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486277,-99) , 
5, 0.921411, 1, 0, 0.497989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47269,-99) , 
5, 0.87306, 0, 0, 0.490636,-99) , 
5, 0.809501, 1, 0, 0.507065,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0575441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.72969, 0, 1, 0.56595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435233,-99) , 
5, -0.727882, 0, 0, 0.486858,-99) , 
0, 0.499044, 1, 0, 0.525832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48793,-99) , 
5, 0.691574, 1, 0, 0.494752,-99) , 
NN(
0, 
0, 
-1, 0.56452, 1, -1, 0.454738,-99) , 
5, 0.618987, 0, 0, 0.490023,-99) , 
5, 0.428512, 1, 0, 0.498605,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0580083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.89298, 0, 1, 0.527181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48803,-99) , 
3, 5.92713, 1, 0, 0.521917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476614,-99) , 
3, 1.29841, 1, 0, 0.499137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395479,-99) , 
3, 5.05401, 1, 0, 0.4881,-99) , 
5, 0.619036, 0, 0, 0.510607,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0491299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486549,-99) , 
5, 0.909263, 0, 0, 0.500033,-99) , 
5, 0.863889, 1, 0, 0.511974,-99) , 
NN(
NN(
0, 
0, 
-1, 0.501898, 0, 1, 0.53602,-99) , 
NN(
0, 
0, 
-1, 0.550911, 1, -1, 0.472254,-99) , 
3, 3.3848, 0, 0, 0.487871,-99) , 
5, 0.809465, 0, 0, 0.498496,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.056133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.569166, 1, 1, 0.525662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479221,-99) , 
5, -0.809487, 0, 0, 0.521803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473791,-99) , 
0, 0.490607, 1, 0, 0.492423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420756,-99) , 
2, 0.0527651, 1, 0, 0.471851,-99) , 
0, 0.493328, 0, 0, 0.513385,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0697733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493719,-99) , 
5, 0.954626, 1, 0, 0.524058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470535,-99) , 
5, -0.0929345, 0, 0, 0.531587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461718,-99) , 
5, -0.274381, 1, 0, 0.470505,-99) , 
0, 0.494281, 1, 0, 0.482036,-99) , 
5, 0.904738, 0, 0, 0.492326,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0449831);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714246, 1, 1, 0.533604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493769,-99) , 
5, 0.510204, 1, 0, 0.501819,-99) , 
NN(
0, 
0, 
-1, 0.500542, 0, -1, 0.427236,-99) , 
5, -0.71428, 0, 0, 0.493702,-99) , 
0, 0.495233, 1, 0, 0.503698,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0704314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.387704, 1, 1, 0.574369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48148,-99) , 
5, -0.0203656, 0, 0, 0.517349,-99) , 
3, 1.93589, 0, 0, 0.544048,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498076, 0, 1, 0.524168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479572,-99) , 
2, 0.0131282, 0, 0, 0.495851,-99) , 
5, 0.91836, 0, 0, 0.506291,-99) , 
5, 0.714278, 1, 0, 0.521175,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0377324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497134, 1, 1, 0.536538,-99) , 
NN(
0, 
0, 
-1, 0.999887, 0, -1, 0.488184,-99) , 
3, 4.37714, 0, 0, 0.497151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459593,-99) , 
4, 0.999524, 0, 0, 0.493306,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0338056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.113466, 0, 1, 0.52504,-99) , 
NN(
0, 
0, 
-1, 0.497954, 1, -1, 0.491421,-99) , 
0, 0.499677, 0, 0, 0.502746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430053,-99) , 
0, 0.505709, 1, 0, 0.499136,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0419711);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.877551, 0, 1, 0.57855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493719,-99) , 
5, -0.0573146, 1, 0, 0.497552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387923,-99) , 
5, -0.387727, 0, 0, 0.491602,-99) , 
5, -0.714268, 1, 0, 0.499402,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0367822);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.52366, 1, 1, 0.54903,-99) , 
NN(
NN(
0, 
0, 
-1, 0.551038, 1, 1, 0.51323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3893,-99) , 
5, -0.319742, 1, 0, 0.481195,-99) , 
5, -0.0476267, 0, 0, 0.507787,-99) , 
0, 0.492376, 1, 0, 0.511979,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0568641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142863, 1, 1, 0.532261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44637,-99) , 
5, 0.333342, 0, 0, 0.493882,-99) , 
0, 0.497138, 1, 0, 0.508716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453256,-99) , 
4, 0.999525, 0, 0, 0.502904,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0417895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.333316, 1, 1, 0.522376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482856,-99) , 
0, 0.494383, 1, 0, 0.492072,-99) , 
0, 0.500538, 0, 0, 0.499763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4237,-99) , 
0, 0.505709, 1, 0, 0.496185,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0624765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.07974, 1, 1, 0.525105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465209,-99) , 
0, 0.498089, 1, 0, 0.483127,-99) , 
5, 0.891145, 1, 0, 0.507314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475999,-99) , 
3, 2.76576, 0, 0, 0.497141,-99) , 
NN(
0, 
0, 
-1, -0.0340731, 0, -1, 0.382369,-99) , 
3, 4.39157, 1, 0, 0.479094,-99) , 
5, 0.619036, 0, 0, 0.497593,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0552704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498088, 1, 1, 0.553507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395929,-99) , 
5, -0.284125, 1, 0, 0.505681,-99) , 
5, 0.00225251, 0, 0, 0.526537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513856,-99) , 
NN(
0, 
0, 
-1, 3.22885, 1, -1, 0.482066,-99) , 
5, 0.94556, 0, 0, 0.488816,-99) , 
5, 0.619027, 1, 0, 0.500816,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0471046);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.53591, 0, 1, 0.589892,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0223236, 0, 1, 0.516336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465929,-99) , 
4, 0.999525, 0, 0, 0.510653,-99) , 
5, -0.809509, 1, 0, 0.516411,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0216802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.573022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484347,-99) , 
3, 1.17343, 0, 0, 0.535812,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00884559, 1, 1, 0.504396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436276,-99) , 
5, -0.387752, 0, 0, 0.502202,-99) , 
5, -0.619043, 1, 0, 0.505773,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0718112);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494122,-99) , 
0, 0.49469, 0, 0, 0.518026,-99) , 
NN(
0, 
0, 
-1, 3.04733, 1, -1, 0.484878,-99) , 
0, 0.499044, 1, 0, 0.504261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488057,-99) , 
5, -0.347064, 1, 0, 0.548616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446071,-99) , 
1, 0.00508772, 0, 0, 0.460024,-99) , 
1, -0.0034466, 1, 0, 0.471884,-99) , 
5, 0.714273, 0, 0, 0.490367,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0219283);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.50571, 1, 1, 0.549271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469653,-99) , 
0, 0.494263, 0, 0, 0.495001,-99) , 
0, 0.490066, 1, 0, 0.497741,-99) , 
0, 0.504757, 0, 0, 0.501232,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0554129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.492092, 0, 1, 0.560495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435803,-99) , 
5, 0.492037, 0, 0, 0.50613,-99) , 
5, 0.333289, 1, 0, 0.516287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488469,-99) , 
0, 0.505284, 0, 0, 0.513776,-99) , 
NN(
0, 
0, 
-1, 0.619098, 0, -1, 0.4454,-99) , 
0, 0.503168, 0, 0, 0.479534,-99) , 
0, 0.500946, 1, 0, 0.506216,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0472679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499045, 1, 1, 0.573526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442058,-99) , 
3, 2.14711, 1, 0, 0.499317,-99) , 
2, 0.00627727, 1, 0, 0.538031,-99) , 
NN(
NN(
0, 
0, 
-1, 0.591878, 1, 1, 0.509684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411362,-99) , 
5, 0.160991, 1, 0, 0.446262,-99) , 
5, 0.523805, 0, 0, 0.498673,-99) , 
5, -0.428559, 1, 0, 0.503647,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0657479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.780237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495323,-99) , 
5, -0.700429, 0, 0, 0.583703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452484,-99) , 
2, 0.0645605, 1, 0, 0.501508,-99) , 
5, 0.0477361, 1, 0, 0.514921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467991,-99) , 
2, -0.0679014, 1, 0, 0.479232,-99) , 
0, 0.490108, 1, 0, 0.484929,-99) , 
0, 0.49809, 0, 0, 0.500199,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.040513);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461881,-99) , 
5, -0.714263, 0, 0, 0.509476,-99) , 
NN(
0, 
0, 
-1, 0.497954, 1, -1, 0.483474,-99) , 
0, 0.499042, 0, 0, 0.493921,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.427789,-99) , 
1, -0.00532441, 0, 0, 0.490233,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.05812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483118,-99) , 
1, 0.00508795, 0, 0, 0.506442,-99) , 
1, -0.0034466, 1, 0, 0.521375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473528,-99) , 
5, 0.564633, 1, 0, 0.476825,-99) , 
4, 0.999524, 1, 0, 0.481275,-99) , 
5, 0.428556, 1, 0, 0.49064,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0506465);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.39289, 0, 1, 0.551897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48854,-99) , 
5, 0.650771, 1, 0, 0.496103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459824,-99) , 
3, 5.92418, 1, 0, 0.491573,-99) , 
5, 0.33331, 1, 0, 0.503979,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0437933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.222, 0, 1, 0.545155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406357,-99) , 
3, 4.74756, 1, 0, 0.529856,-99) , 
NN(
0, 
0, 
-1, 0.614506, 0, -1, 0.488137,-99) , 
5, 0.523792, 1, 0, 0.498957,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0404456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461137,-99) , 
0, 0.503804, 1, 0, 0.505117,-99) , 
1, -0.00526335, 1, 0, 0.510297,-99) , 
NN(
0, 
0, 
-1, 0.497133, 0, -1, 0.478411,-99) , 
5, 0.904747, 1, 0, 0.502464,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0491829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483744,-99) , 
5, 0.557719, 0, 0, 0.509313,-99) , 
5, -0.160963, 1, 0, 0.512717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435818,-99) , 
3, 0.604458, 0, 0, 0.510957,-99) , 
NN(
0, 
0, 
-1, 0.498086, 0, -1, 0.411806,-99) , 
3, 2.15371, 1, 0, 0.470871,-99) , 
5, -0.523773, 0, 0, 0.507159,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0548186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504666, 0, 1, 0.564964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437151,-99) , 
3, 2.19366, 1, 0, 0.472951,-99) , 
1, 0.001101, 1, 0, 0.530727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480426,-99) , 
0, 0.497772, 1, 0, 0.500919,-99) , 
NN(
0, 
0, 
-1, 3.83859, 1, -1, 0.471052,-99) , 
5, 0.619018, 0, 0, 0.491326,-99) , 
0, 0.502852, 0, 0, 0.497243,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0426178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.284706, 1, 1, 0.609035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489635,-99) , 
3, 0.882742, 1, 0, 0.514153,-99) , 
5, -0.673442, 0, 0, 0.551501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497416,-99) , 
3, 4.38773, 0, 0, 0.506209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469331,-99) , 
4, 0.999525, 0, 0, 0.501428,-99) , 
5, 0.142853, 1, 0, 0.510253,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0610545);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0475047, 1, 1, 0.539422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48002,-99) , 
3, 4.57118, 0, 0, 0.491844,-99) , 
5, 0.904736, 0, 0, 0.502128,-99) , 
0, 0.500947, 0, 0, 0.511662,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0436369);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464756,-99) , 
0, 0.504756, 1, 0, 0.509158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426157,-99) , 
3, 6.13834, 0, 0, 0.465428,-99) , 
3, 4.98092, 1, 0, 0.504587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434795,-99) , 
3, 7.41165, 1, 0, 0.500226,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0570942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.401373, 0, 1, 0.55277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477093,-99) , 
0, 0.496503, 0, 0, 0.495784,-99) , 
5, 0.142836, 1, 0, 0.50487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471603,-99) , 
5, 0.637188, 1, 0, 0.484852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376503,-99) , 
5, -0.646282, 1, 0, 0.44405,-99) , 
5, 0.238101, 0, 0, 0.474123,-99) , 
0, 0.500947, 1, 0, 0.496548,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.030777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46306,-99) , 
6, 0.00065285, 0, 0, 0.492533,-99) , 
6, 0.0068542, 0, 0, 0.496766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398116,-99) , 
6, 0.0119971, 1, 0, 0.494031,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0368092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.18531, 0, 1, 0.581562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468317,-99) , 
3, 1.5791, 1, 0, 0.49059,-99) , 
5, -0.764144, 0, 0, 0.536029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497517,-99) , 
5, 0.746017, 1, 0, 0.516,-99) , 
NN(
0, 
0, 
-1, 0.492059, 0, -1, 0.491377,-99) , 
0, 0.494281, 1, 0, 0.495965,-99) , 
5, 0.238094, 1, 0, 0.503387,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0619972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489511,-99) , 
2, -0.0556563, 0, 0, 0.524931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469653,-99) , 
1, 0.001101, 0, 0, 0.488125,-99) , 
0, 0.499905, 1, 0, 0.510679,-99) , 
NN(
0, 
0, 
-1, 0.489246, 0, -1, 0.446814,-99) , 
0, 0.491424, 0, 0, 0.50519,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0351729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554279,-99) , 
NN(
0, 
0, 
-1, 0.491243, 0, -1, 0.486375,-99) , 
0, 0.489519, 1, 0, 0.488434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43628,-99) , 
5, -0.904755, 0, 0, 0.485528,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.065959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00116413, 1, 1, 0.535817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426297,-99) , 
4, 0.999905, 0, 0, 0.525351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484681,-99) , 
3, 1.10418, 1, 0, 0.501048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447289,-99) , 
5, 0.836805, 1, 0, 0.469073,-99) , 
3, 3.00364, 1, 0, 0.489292,-99) , 
5, 0.714287, 1, 0, 0.503589,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0876516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.65976, 0, 1, 0.60299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432992,-99) , 
2, -0.045722, 0, 0, 0.512851,-99) , 
2, 0.0250096, 0, 0, 0.537863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469199,-99) , 
2, 0.0706187, 1, 0, 0.51859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444236,-99) , 
5, 0.71492, 0, 0, 0.46595,-99) , 
5, 0.782306, 0, 0, 0.499277,-99) , 
5, 0.428572, 1, 0, 0.507857,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0547678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492375, 1, 1, 0.519023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464888,-99) , 
0, 0.499991, 0, 0, 0.479176,-99) , 
5, 0.863912, 1, 0, 0.502458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440748,-99) , 
0, 0.502853, 1, 0, 0.495304,-99) , 
NN(
0, 
0, 
-1, -0.213706, 0, -1, 0.396614,-99) , 
5, -0.451252, 1, 0, 0.465621,-99) , 
5, 0.0476177, 0, 0, 0.495645,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0518483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.727839, 1, 1, 0.518586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436957,-99) , 
5, 0.523798, 0, 0, 0.495458,-99) , 
0, 0.499043, 1, 0, 0.508835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489697,-99) , 
0, 0.503078, 0, 0, 0.521408,-99) , 
NN(
0, 
0, 
-1, 0.495097, 1, -1, 0.398708,-99) , 
0, 0.49809, 0, 0, 0.456416,-99) , 
5, -0.428572, 0, 0, 0.501286,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0718701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500948, 0, 1, 0.574758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448777,-99) , 
0, 0.496189, 1, 0, 0.477598,-99) , 
1, 0.000143512, 1, 0, 0.528592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492287,-99) , 
5, 0.618977, 1, 0, 0.514879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466435,-99) , 
2, -0.0371137, 1, 0, 0.480355,-99) , 
3, 3.40838, 0, 0, 0.488644,-99) , 
2, 0.0709487, 0, 0, 0.495301,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0565202);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479325,-99) , 
5, -0.614513, 0, 0, 0.584233,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.514987,-99) , 
5, 0.618974, 1, 0, 0.540622,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450919,-99) , 
2, 0.0846777, 1, 0, 0.525078,-99) , 
NN(
0, 
0, 
-1, 0.809499, 0, -1, 0.482125,-99) , 
0, 0.49487, 1, 0, 0.493454,-99) , 
0, 0.502852, 0, 0, 0.500421,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0600719);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483854,-99) , 
5, 0.863936, 1, 0, 0.499754,-99) , 
NN(
0, 
0, 
-1, 0.723269, 1, -1, 0.469777,-99) , 
5, 0.809505, 0, 0, 0.482727,-99) , 
0, 0.489519, 1, 0, 0.486256,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0489437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0709487, 0, 1, 0.517705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442294,-99) , 
0, 0.505981, 1, 0, 0.514055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479752,-99) , 
5, 0.56457, 1, 0, 0.497581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451371,-99) , 
5, -0.5238, 0, 0, 0.491068,-99) , 
0, 0.496185, 0, 0, 0.506214,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0515497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.424677, 0, 1, 0.577559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459627,-99) , 
6, 0.00434908, 1, 0, 0.504862,-99) , 
5, 0.56462, 1, 0, 0.51196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491323,-99) , 
2, 0.0253627, 0, 0, 0.522155,-99) , 
NN(
0, 
0, 
-1, -0.469393, 1, -1, 0.418484,-99) , 
3, 1.19917, 0, 0, 0.48003,-99) , 
5, 0.238089, 0, 0, 0.505373,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0421299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481558,-99) , 
0, 0.497138, 1, 0, 0.492813,-99) , 
2, 0.163827, 0, 0, 0.4961,-99) , 
NN(
0, 
0, 
-1, 0.69179, 0, -1, 0.441946,-99) , 
3, 5.91202, 1, 0, 0.490353,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0328319);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.58651, 0, 1, 0.560546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497465,-99) , 
5, 0.409174, 1, 0, 0.502548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417832,-99) , 
0, 0.499044, 1, 0, 0.46429,-99) , 
5, 0.224526, 0, 0, 0.49733,-99) , 
5, -0.809517, 1, 0, 0.501913,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0384158);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582012,-99) , 
NN(
NN(
0, 
0, 
-1, -0.809518, 1, 1, 0.511839,-99) , 
NN(
0, 
0, 
-1, 0.00568153, 1, -1, 0.477206,-99) , 
0, 0.498136, 0, 0, 0.494828,-99) , 
0, 0.489519, 1, 0, 0.49749,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0398424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499677, 0, 1, 0.508497,-99) , 
NN(
0, 
0, 
-1, 2.09702, 1, -1, 0.460833,-99) , 
5, -0.0475695, 0, 0, 0.500561,-99) , 
NN(
NN(
0, 
0, 
-1, 0.506284, 0, 1, 0.520901,-99) , 
NN(
0, 
0, 
-1, 0.503306, 1, -1, 0.458529,-99) , 
0, 0.505074, 0, 0, 0.472554,-99) , 
0, 0.500947, 1, 0, 0.492961,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0586254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999982, 1, 1, 0.54032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431291,-99) , 
4, 0.999906, 0, 0, 0.529443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517994,-99) , 
NN(
0, 
0, 
-1, 0.82317, 0, -1, 0.479587,-99) , 
0, 0.500947, 0, 0, 0.488754,-99) , 
5, 0.714268, 1, 0, 0.505233,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0590158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0489732, 1, 1, 0.604972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455635,-99) , 
5, -0.365071, 0, 0, 0.49159,-99) , 
0, 0.497138, 0, 0, 0.554711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45661,-99) , 
5, 0.460321, 0, 0, 0.508582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436087,-99) , 
0, 0.491423, 0, 0, 0.503498,-99) , 
5, 0.333329, 1, 0, 0.513853,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0563401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.51025, 0, 1, 0.565361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479893,-99) , 
3, 3.48812, 1, 0, 0.549674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479524,-99) , 
2, 0.0706187, 0, 0, 0.485089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39315,-99) , 
5, 0.306151, 0, 0, 0.481691,-99) , 
5, 0.142826, 1, 0, 0.493299,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0426542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.173712, 0, 1, 0.519129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456641,-99) , 
4, 0.999841, 0, 0, 0.512681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481327,-99) , 
4, 0.999524, 0, 0, 0.509346,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0393226);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491356,-99) , 
1, 0.00388001, 0, 0, 0.496484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448035,-99) , 
2, -0.206066, 1, 0, 0.464953,-99) , 
2, -0.0712347, 0, 0, 0.490417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436866,-99) , 
5, -0.904754, 0, 0, 0.487579,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0513678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.513894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447377,-99) , 
2, 0.13813, 1, 0, 0.478603,-99) , 
2, 0.0706187, 1, 0, 0.507654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571762,-99) , 
NN(
0, 
0, 
-1, -0.251718, 1, -1, 0.449724,-99) , 
3, 2.98694, 0, 0, 0.472579,-99) , 
5, 0.0476071, 0, 0, 0.501255,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.079093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481671,-99) , 
4, 0.999997, 0, 0, 0.522543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460031,-99) , 
5, 0.904736, 0, 0, 0.478822,-99) , 
4, 0.999977, 0, 0, 0.505805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45344,-99) , 
4, 0.999525, 0, 0, 0.500157,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0364012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0035162, 0, 1, 0.527581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437604,-99) , 
0, 0.497479, 0, 0, 0.492342,-99) , 
0, 0.496412, 1, 0, 0.503404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432305,-99) , 
0, 0.489519, 0, 0, 0.500813,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0403317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462254,-99) , 
0, 0.492209, 0, 0, 0.499825,-99) , 
0, 0.490153, 1, 0, 0.50312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463584,-99) , 
0, 0.503809, 0, 0, 0.50892,-99) , 
NN(
0, 
0, 
-1, -0.0104229, 1, -1, 0.453661,-99) , 
2, 0.0630342, 0, 0, 0.465091,-99) , 
0, 0.500946, 1, 0, 0.492362,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0585682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48204,-99) , 
0, 0.501901, 0, 0, 0.489566,-99) , 
4, 0.999524, 1, 0, 0.494872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483849,-99) , 
3, 2.63373, 0, 0, 0.504392,-99) , 
NN(
0, 
0, 
-1, 0.501901, 1, -1, 0.431092,-99) , 
5, 0.156457, 1, 0, 0.471012,-99) , 
5, 0.619042, 0, 0, 0.486965,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0419318);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.42849, 1, 1, 0.52011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458511,-99) , 
0, 0.504348, 1, 0, 0.495936,-99) , 
NN(
0, 
0, 
-1, -0.115647, 1, -1, 0.447437,-99) , 
5, 0.238078, 0, 0, 0.484388,-99) , 
0, 0.499042, 1, 0, 0.504662,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0548324);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451646,-99) , 
5, -0.142847, 0, 0, 0.531145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482336,-99) , 
0, 0.492376, 1, 0, 0.488736,-99) , 
2, -0.0643321, 1, 0, 0.494885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424317,-99) , 
2, -0.225264, 0, 0, 0.49142,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0499448);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499877,-99) , 
4, 0.999997, 0, 0, 0.516317,-99) , 
NN(
0, 
0, 
-1, 0.809937, 0, -1, 0.465409,-99) , 
4, 0.999932, 0, 0, 0.50571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435557,-99) , 
4, 0.999524, 0, 0, 0.498245,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.055032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481131,-99) , 
5, -0.428499, 0, 0, 0.517813,-99) , 
NN(
0, 
0, 
-1, 0.499046, 1, -1, 0.464654,-99) , 
4, 0.999932, 0, 0, 0.506711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470282,-99) , 
4, 0.999524, 0, 0, 0.502818,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0526863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472565,-99) , 
3, 3.78358, 1, 0, 0.494071,-99) , 
5, 0.564635, 1, 0, 0.500254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47012,-99) , 
5, -0.883366, 0, 0, 0.509296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418168,-99) , 
3, 3.39524, 0, 0, 0.43928,-99) , 
5, -0.727848, 1, 0, 0.465555,-99) , 
5, 0.428576, 0, 0, 0.491373,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0501466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.56443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459667,-99) , 
0, 0.496179, 0, 0, 0.501102,-99) , 
3, 2.59634, 1, 0, 0.524928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479158,-99) , 
5, -0.619048, 1, 0, 0.483314,-99) , 
0, 0.504756, 0, 0, 0.486217,-99) , 
2, 0.0677761, 0, 0, 0.492828,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0636638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 0, 1, 0.581266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483485,-99) , 
2, -0.00629062, 1, 0, 0.506404,-99) , 
3, 0.527499, 1, 0, 0.515055,-99) , 
NN(
NN(
0, 
0, 
-1, -0.140852, 1, 1, 0.523895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456483,-99) , 
2, 0.0754177, 0, 0, 0.478683,-99) , 
2, -0.0732547, 1, 0, 0.490822,-99) , 
3, 2.97096, 1, 0, 0.506775,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0402233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.713938, 1, 1, 0.529637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456999,-99) , 
5, 0.619037, 0, 0, 0.49627,-99) , 
1, -0.0023365, 1, 0, 0.500764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47826,-99) , 
5, -0.428566, 0, 0, 0.514629,-99) , 
NN(
0, 
0, 
-1, 0.496185, 1, -1, 0.445736,-99) , 
3, 2.81691, 0, 0, 0.461918,-99) , 
5, 0.333326, 0, 0, 0.491873,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0498741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51315, 0, 1, 0.55081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490971,-99) , 
3, 0.598555, 1, 0, 0.504397,-99) , 
5, 0.5238, 1, 0, 0.517214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475571,-99) , 
2, 0.0579437, 1, 0, 0.492268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418888,-99) , 
5, -0.142846, 0, 0, 0.48552,-99) , 
3, 3.3878, 1, 0, 0.507873,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0421888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492363,-99) , 
5, 0.111144, 1, 0, 0.497269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413165,-99) , 
3, 1.50314, 1, 0, 0.450876,-99) , 
5, -0.333337, 0, 0, 0.490695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350877,-99) , 
6, 0.012485, 1, 0, 0.486895,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0483932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492324,-99) , 
3, 3.87267, 1, 0, 0.529228,-99) , 
5, 0.428739, 1, 0, 0.541815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49203,-99) , 
0, 0.497817, 0, 0, 0.503256,-99) , 
NN(
0, 
0, 
-1, 0.504891, 1, -1, 0.453874,-99) , 
0, 0.501898, 1, 0, 0.49318,-99) , 
2, 0.0709487, 0, 0, 0.501372,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0527874);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46914,-99) , 
0, 0.491106, 0, 0, 0.511772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479456,-99) , 
0, 0.505347, 0, 0, 0.487169,-99) , 
0, 0.49809, 1, 0, 0.499199,-99) , 
2, 0.211901, 0, 0, 0.504085,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0573542);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480876,-99) , 
3, 2.0674, 1, 0, 0.528762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489583,-99) , 
0, 0.500947, 0, 0, 0.500472,-99) , 
2, -0.00914114, 1, 0, 0.50861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471142,-99) , 
1, 0.00153683, 0, 0, 0.49042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378491,-99) , 
0, 0.492923, 1, 0, 0.440178,-99) , 
0, 0.496188, 0, 0, 0.469486,-99) , 
2, -0.0829858, 0, 0, 0.502264,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0339434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00229925, 1, 1, 0.510696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455551,-99) , 
0, 0.497144, 0, 0, 0.503922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425382,-99) , 
3, 2.36582, 1, 0, 0.476696,-99) , 
5, -0.428562, 0, 0, 0.505878,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0605498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483406,-99) , 
5, -0.714278, 0, 0, 0.587635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487369,-99) , 
5, 0.809513, 0, 0, 0.507569,-99) , 
6, 0.00456951, 0, 0, 0.515456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404386,-99) , 
6, 0.0119971, 1, 0, 0.512367,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0541242);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.86394, 0, 1, 0.560782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498833,-99) , 
3, 1.16762, 1, 0, 0.51268,-99) , 
NN(
0, 
0, 
-1, 0.61902, 0, -1, 0.47531,-99) , 
3, 3.22885, 1, 0, 0.500196,-99) , 
5, 0.428556, 1, 0, 0.513373,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0592104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.23815, 0, 1, 0.545603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458554,-99) , 
5, 0.619078, 0, 0, 0.50436,-99) , 
5, 0.333328, 1, 0, 0.511765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461317,-99) , 
2, 0.0159323, 0, 0, 0.480614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43983,-99) , 
2, 0.0875876, 1, 0, 0.47318,-99) , 
0, 0.499995, 1, 0, 0.498266,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0437728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.38771, 0, 1, 0.526647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451573,-99) , 
2, 0.16004, 1, 0, 0.520874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483501,-99) , 
3, 2.94313, 1, 0, 0.501304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458912,-99) , 
0, 0.49333, 0, 0, 0.495464,-99) , 
5, 0.714263, 1, 0, 0.505637,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0576116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469782,-99) , 
0, 0.493328, 0, 0, 0.536744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487129,-99) , 
2, -0.124852, 1, 0, 0.493122,-99) , 
2, 0.0190885, 0, 0, 0.50648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436464,-99) , 
0, 0.498083, 1, 0, 0.474689,-99) , 
3, 5.82944, 1, 0, 0.50307,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0630753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498133,-99) , 
5, 0.206254, 0, 0, 0.547917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446735,-99) , 
0, 0.498225, 1, 0, 0.505314,-99) , 
0, 0.499994, 0, 0, 0.520734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511152,-99) , 
NN(
0, 
0, 
-1, 0.888113, 1, -1, 0.466874,-99) , 
5, 0.92742, 0, 0, 0.485791,-99) , 
5, 0.809504, 1, 0, 0.50463,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0753505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49698,-99) , 
0, 0.499988, 1, 0, 0.592456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482777,-99) , 
3, 1.40558, 0, 0, 0.529283,-99) , 
5, 0.464826, 0, 0, 0.542553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468284,-99) , 
2, -0.00771985, 0, 0, 0.515613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472213,-99) , 
3, 3.00762, 0, 0, 0.488061,-99) , 
1, -0.000544935, 1, 0, 0.498632,-99) , 
5, 0.619027, 1, 0, 0.511962,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0699345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492616, 0, 1, 0.590286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425083,-99) , 
0, 0.489169, 1, 0, 0.467841,-99) , 
0, 0.490335, 0, 0, 0.543701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461114,-99) , 
0, 0.505087, 1, 0, 0.514464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463547,-99) , 
3, 2.98376, 0, 0, 0.480717,-99) , 
0, 0.498771, 0, 0, 0.498159,-99) , 
0, 0.493328, 1, 0, 0.50461,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0571922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.591796, 1, 1, 0.546309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450185,-99) , 
5, -0.714036, 0, 0, 0.531046,-99) , 
NN(
NN(
0, 
0, 
-1, 0.85034, 0, 1, 0.51463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457228,-99) , 
3, 1.76859, 1, 0, 0.48359,-99) , 
5, 0.71428, 0, 0, 0.502226,-99) , 
1, -0.00116413, 1, 0, 0.510774,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0780136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439307,-99) , 
0, 0.503803, 1, 0, 0.540862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43396,-99) , 
3, 0.860447, 0, 0, 0.488194,-99) , 
2, -0.00350103, 1, 0, 0.510983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469231,-99) , 
2, 0.0177742, 1, 0, 0.497957,-99) , 
NN(
0, 
0, 
-1, 0.428583, 0, -1, 0.458335,-99) , 
0, 0.499995, 0, 0, 0.473205,-99) , 
3, 3.21376, 1, 0, 0.499348,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0336974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528731,-99) , 
NN(
0, 
0, 
-1, 0.131605, 1, -1, 0.486818,-99) , 
2, 0.212621, 0, 0, 0.489092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410727,-99) , 
0, 0.489519, 0, 0, 0.486159,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0301329);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.238049, 1, 1, 0.538248,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00526335, 1, 1, 0.508368,-99) , 
NN(
0, 
0, 
-1, 0.503215, 1, -1, 0.448458,-99) , 
0, 0.502261, 1, 0, 0.502844,-99) , 
0, 0.503804, 0, 0, 0.506553,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0827555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469022,-99) , 
4, 0.999998, 0, 0, 0.494987,-99) , 
NN(
0, 
0, 
-1, 0.621188, 0, -1, 0.455738,-99) , 
4, 0.999955, 0, 0, 0.484728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446919,-99) , 
4, 0.999525, 0, 0, 0.480828,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.061115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48492,-99) , 
3, 2.63251, 1, 0, 0.517328,-99) , 
2, -0.172263, 1, 0, 0.524935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473088,-99) , 
2, -0.080818, 1, 0, 0.478835,-99) , 
5, -0.809512, 1, 0, 0.484362,-99) , 
0, 0.498089, 1, 0, 0.503879,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0454696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470729,-99) , 
0, 0.5019, 1, 0, 0.503057,-99) , 
5, 0.0476256, 1, 0, 0.508266,-99) , 
NN(
0, 
0, 
-1, -0.863964, 1, -1, 0.457078,-99) , 
5, -0.42857, 0, 0, 0.500962,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0494739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486882,-99) , 
0, 0.496412, 1, 0, 0.501127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415671,-99) , 
0, 0.489519, 0, 0, 0.4982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421934,-99) , 
5, -0.904725, 0, 0, 0.493871,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0515995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.33328, 1, 1, 0.521242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461591,-99) , 
0, 0.492377, 0, 0, 0.513179,-99) , 
NN(
NN(
0, 
0, 
-1, 0.522936, 1, 1, 0.532427,-99) , 
NN(
0, 
0, 
-1, 1.37723, 0, -1, 0.474747,-99) , 
3, 0.745057, 1, 0, 0.485632,-99) , 
3, 3.40023, 0, 0, 0.493141,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0751958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497131, 0, 1, 0.591886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467634,-99) , 
3, 1.03961, 0, 0, 0.515507,-99) , 
3, 0.498852, 1, 0, 0.52326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542009,-99) , 
NN(
0, 
0, 
-1, 0.401414, 0, -1, 0.471758,-99) , 
5, -0.0476202, 1, 0, 0.478869,-99) , 
3, 2.77013, 1, 0, 0.506582,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0553433);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.238084, 1, 1, 0.527694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49398,-99) , 
5, 0.746036, 1, 0, 0.507877,-99) , 
NN(
0, 
0, 
-1, 0.49088, 0, -1, 0.437474,-99) , 
5, 0.333302, 0, 0, 0.491107,-99) , 
0, 0.496186, 0, 0, 0.515388,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0447375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0723437, 0, 1, 0.522925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389384,-99) , 
5, -0.455799, 1, 0, 0.481286,-99) , 
5, -0.18368, 0, 0, 0.513932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460008,-99) , 
5, 0.954662, 0, 0, 0.48249,-99) , 
5, 0.904747, 1, 0, 0.506053,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0492808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47016,-99) , 
5, -0.396828, 0, 0, 0.549202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497074,-99) , 
2, -0.157379, 1, 0, 0.502075,-99) , 
0, 0.501899, 0, 0, 0.512803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476617,-99) , 
2, 0.0137143, 0, 0, 0.493921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467338,-99) , 
5, 0.927411, 1, 0, 0.482441,-99) , 
5, 0.809499, 1, 0, 0.498639,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0548847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142915, 1, 1, 0.569812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476116,-99) , 
0, 0.503804, 1, 0, 0.497737,-99) , 
3, 2.80717, 1, 0, 0.538592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483393,-99) , 
3, 1.16486, 1, 0, 0.518998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467991,-99) , 
5, 0.841231, 0, 0, 0.484602,-99) , 
5, 0.333295, 1, 0, 0.490892,-99) , 
0, 0.5019, 0, 0, 0.500396,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0406636);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.891154, 0, 1, 0.556412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474444,-99) , 
5, 0.930017, 1, 0, 0.500178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364963,-99) , 
5, -0.469357, 0, 0, 0.493853,-99) , 
5, -0.714268, 1, 0, 0.499375,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0321972);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495654,-99) , 
3, 3.98081, 0, 0, 0.500793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421925,-99) , 
0, 0.497088, 1, 0, 0.4624,-99) , 
3, 5.91202, 1, 0, 0.496849,-99) , 
0, 0.505709, 0, 0, 0.49915,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0310785);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.000780533, 1, 1, 0.549902,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497563, 1, 1, 0.510144,-99) , 
NN(
0, 
0, 
-1, 0.0476376, 0, -1, 0.486162,-99) , 
0, 0.496094, 0, 0, 0.501537,-99) , 
0, 0.503804, 0, 0, 0.506652,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.041167);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492375, 1, 1, 0.51892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465653,-99) , 
4, 0.999524, 0, 0, 0.513216,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0448694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.558271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467311,-99) , 
0, 0.499045, 1, 0, 0.502807,-99) , 
5, -0.782308, 0, 0, 0.539037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472736,-99) , 
5, 0.773245, 0, 0, 0.493545,-99) , 
0, 0.502852, 0, 0, 0.498302,-99) , 
5, 0.5238, 1, 0, 0.508426,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0412384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495178,-99) , 
5, -0.00226762, 1, 0, 0.501802,-99) , 
NN(
0, 
0, 
-1, 0.502853, 1, -1, 0.458523,-99) , 
5, -0.619046, 0, 0, 0.495894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432586,-99) , 
4, 0.999524, 0, 0, 0.489164,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0478295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450423,-99) , 
3, 0.701894, 0, 0, 0.50779,-99) , 
5, -0.455769, 0, 0, 0.53311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455208,-99) , 
5, 0.923976, 1, 0, 0.490746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34678,-99) , 
5, 0.201843, 0, 0, 0.484863,-99) , 
5, -0.0476041, 1, 0, 0.492298,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0491977);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485442,-99) , 
5, -0.0793589, 1, 0, 0.489946,-99) , 
NN(
0, 
0, 
-1, -0.782326, 1, -1, 0.455462,-99) , 
5, -0.619032, 0, 0, 0.485782,-99) , 
NN(
0, 
0, 
-1, 0.523752, 1, -1, 0.457367,-99) , 
2, -0.080455, 0, 0, 0.481027,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0472893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478864,-99) , 
3, 2.59634, 1, 0, 0.517992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443137,-99) , 
0, 0.489065, 0, 0, 0.510063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465169,-99) , 
3, 2.25296, 1, 0, 0.517851,-99) , 
NN(
0, 
0, 
-1, 0.38319, 0, -1, 0.483382,-99) , 
5, -0.619052, 1, 0, 0.486853,-99) , 
0, 0.495233, 1, 0, 0.492655,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0565771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.556418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468582,-99) , 
5, 0.948109, 1, 0, 0.501327,-99) , 
5, 0.63714, 1, 0, 0.513507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432432,-99) , 
3, 1.08059, 0, 0, 0.477987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417614,-99) , 
3, 2.66226, 1, 0, 0.462358,-99) , 
5, -0.523818, 0, 0, 0.506834,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0558423);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480246,-99) , 
5, -0.183676, 0, 0, 0.525998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485338,-99) , 
0, 0.499995, 0, 0, 0.493063,-99) , 
5, 0.714273, 1, 0, 0.506238,-99) , 
2, 0.19399, 0, 0, 0.510349,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0484468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499993, 0, 1, 0.540541,-99) , 
NN(
0, 
0, 
-1, 0.233535, 0, -1, 0.447828,-99) , 
3, 3.54216, 1, 0, 0.518777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489994,-99) , 
5, 0.915348, 1, 0, 0.500573,-99) , 
NN(
0, 
0, 
-1, -0.0647249, 0, -1, 0.483207,-99) , 
5, 0.872997, 0, 0, 0.491317,-99) , 
5, 0.619029, 1, 0, 0.499744,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0511397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.745995, 1, 1, 0.549819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47854,-99) , 
5, -0.333324, 0, 0, 0.537832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425089,-99) , 
3, 4.25758, 1, 0, 0.494264,-99) , 
3, 5.9128, 0, 0, 0.500119,-99) , 
0, 0.496187, 1, 0, 0.511843,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0449798);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505845, 1, 1, 0.538497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488676,-99) , 
5, 0.40136, 1, 0, 0.493983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365605,-99) , 
5, -0.632641, 1, 0, 0.456864,-99) , 
5, -0.142851, 0, 0, 0.487969,-99) , 
0, 0.504756, 0, 0, 0.491453,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0582607);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489836,-99) , 
0, 0.499041, 1, 0, 0.552348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488851,-99) , 
5, 0.850331, 0, 0, 0.506116,-99) , 
5, 0.551028, 1, 0, 0.511442,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492515, 1, 1, 0.529111,-99) , 
NN(
0, 
0, 
-1, 0.50326, 0, -1, 0.423756,-99) , 
0, 0.496188, 1, 0, 0.456113,-99) , 
5, -0.0476192, 0, 0, 0.501713,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0544581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495777, 0, 1, 0.532105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480895,-99) , 
5, 0.904749, 1, 0, 0.518706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469504,-99) , 
5, 0.809502, 1, 0, 0.492046,-99) , 
NN(
0, 
0, 
-1, 0.619116, 0, -1, 0.451343,-99) , 
0, 0.498634, 0, 0, 0.482291,-99) , 
0, 0.497138, 1, 0, 0.496532,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0486678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495461,-99) , 
5, 0.464838, 0, 0, 0.52539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48135,-99) , 
0, 0.499989, 1, 0, 0.499805,-99) , 
5, 0.809503, 1, 0, 0.513765,-99) , 
2, 0.216506, 0, 0, 0.517228,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0327722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.618985, 1, 1, 0.568388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498785,-99) , 
0, 0.490562, 0, 0, 0.53453,-99) , 
NN(
0, 
0, 
-1, 0.493827, 0, -1, 0.493436,-99) , 
0, 0.492376, 1, 0, 0.497604,-99) , 
1, 0.00306157, 0, 0, 0.505843,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0372337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00671119, 1, 1, 0.584426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468835,-99) , 
5, 0.619037, 0, 0, 0.492194,-99) , 
6, 0.00458327, 0, 0, 0.500565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405146,-99) , 
6, 0.0120365, 1, 0, 0.498101,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0433247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491356,-99) , 
0, 0.497136, 1, 0, 0.522607,-99) , 
5, 0.333877, 1, 0, 0.539708,-99) , 
NN(
NN(
0, 
0, 
-1, 0.50072, 1, 1, 0.521231,-99) , 
NN(
0, 
0, 
-1, -0.152004, 0, -1, 0.485787,-99) , 
0, 0.499994, 0, 0, 0.497441,-99) , 
2, 0.0706187, 0, 0, 0.504293,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0701452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490388,-99) , 
0, 0.499043, 0, 0, 0.513743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476089,-99) , 
5, 0.945572, 0, 0, 0.491794,-99) , 
5, 0.809512, 1, 0, 0.500746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419773,-99) , 
5, 0.15643, 1, 0, 0.514199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391879,-99) , 
0, 0.492602, 1, 0, 0.428488,-99) , 
0, 0.498089, 0, 0, 0.469805,-99) , 
5, 0.428563, 0, 0, 0.493097,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0331184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495272,-99) , 
1, 0.00124609, 0, 0, 0.504892,-99) , 
1, -0.00462147, 1, 0, 0.50889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437751,-99) , 
6, 0.0107826, 1, 0, 0.506723,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0502498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48243,-99) , 
4, 0.999906, 0, 0, 0.535172,-99) , 
NN(
0, 
0, 
-1, 0.863966, 1, 1, 0.506517,-99) , 
5, 0.809501, 1, 0, 0.521657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448389,-99) , 
0, 0.489519, 0, 0, 0.518682,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0542844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.13811, 1, 1, 0.539217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442048,-99) , 
0, 0.492376, 0, 0, 0.5228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444232,-99) , 
0, 0.504757, 1, 0, 0.511685,-99) , 
NN(
0, 
0, 
-1, 0.00699115, 0, -1, 0.471701,-99) , 
2, -0.00361427, 1, 0, 0.493661,-99) , 
2, 0.0706187, 0, 0, 0.498685,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0670196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999999, 0, 1, 0.539661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482834,-99) , 
5, 0.904792, 0, 0, 0.499212,-99) , 
4, 0.999977, 0, 0, 0.524058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460432,-99) , 
4, 0.999524, 0, 0, 0.517096,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0671724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486732,-99) , 
3, 5.14206, 1, 0, 0.542761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477526,-99) , 
0, 0.502163, 0, 0, 0.499782,-99) , 
0, 0.498084, 1, 0, 0.519499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473757,-99) , 
1, 0.000132627, 0, 0, 0.525119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465435,-99) , 
2, 0.0174737, 0, 0, 0.478819,-99) , 
2, -0.0338263, 1, 0, 0.487597,-99) , 
3, 2.68596, 0, 0, 0.499197,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.052744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446126,-99) , 
0, 0.496193, 0, 0, 0.498367,-99) , 
5, -0.700621, 0, 0, 0.525027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481956,-99) , 
1, -0.000544935, 1, 0, 0.493938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371242,-99) , 
2, -0.00176442, 0, 0, 0.431219,-99) , 
5, 0.251774, 0, 0, 0.488856,-99) , 
5, -0.428502, 1, 0, 0.493421,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0281585);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523798, 1, 1, 0.539241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456341,-99) , 
2, -0.0541563, 0, 0, 0.500357,-99) , 
2, 0.212374, 0, 0, 0.503489,-99) , 
2, -0.0822054, 1, 0, 0.508859,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0488072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486497,-99) , 
0, 0.499259, 1, 0, 0.505432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423135,-99) , 
0, 0.491759, 1, 0, 0.473739,-99) , 
0, 0.493419, 0, 0, 0.499226,-99) , 
NN(
0, 
0, 
-1, 0.50512, 0, -1, 0.452749,-99) , 
0, 0.502852, 1, 0, 0.491742,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.039516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490145,-99) , 
0, 0.496231, 1, 0, 0.499434,-99) , 
0, 0.505709, 0, 0, 0.502736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510973,-99) , 
NN(
0, 
0, 
-1, 0.428407, 0, -1, 0.443404,-99) , 
2, -0.217219, 1, 0, 0.46488,-99) , 
2, -0.0829858, 0, 0, 0.496715,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0425439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483723,-99) , 
4, 0.999955, 0, 0, 0.508171,-99) , 
3, 7.30963, 0, 0, 0.512268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47123,-99) , 
4, 0.999525, 0, 0, 0.507773,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0535749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0411179, 0, 1, 0.575149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458898,-99) , 
0, 0.499042, 1, 0, 0.494471,-99) , 
5, -0.151953, 0, 0, 0.532724,-99) , 
NN(
NN(
0, 
0, 
-1, 0.932633, 1, 1, 0.510392,-99) , 
NN(
0, 
0, 
-1, 0.83936, 1, -1, 0.48123,-99) , 
5, 0.891183, 0, 0, 0.493439,-99) , 
5, 0.619024, 1, 0, 0.504969,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0453221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00265908, 0, 1, 0.544501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477796,-99) , 
5, 0.917015, 1, 0, 0.491118,-99) , 
5, 0.782267, 1, 0, 0.50492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459607,-99) , 
5, -0.229034, 1, 0, 0.477536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409982,-99) , 
0, 0.490471, 0, 0, 0.472092,-99) , 
5, 0.619002, 0, 0, 0.494296,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0535095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494446,-99) , 
5, 0.619002, 1, 0, 0.504576,-99) , 
0, 0.499451, 1, 0, 0.511528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442411,-99) , 
5, -0.0476295, 0, 0, 0.498105,-99) , 
NN(
0, 
0, 
-1, 0.0828727, 1, -1, 0.461441,-99) , 
0, 0.494689, 1, 0, 0.475125,-99) , 
0, 0.499043, 0, 0, 0.490128,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0548612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00376077, 0, 1, 0.527175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48017,-99) , 
0, 0.497144, 0, 0, 0.496664,-99) , 
5, 0.714215, 1, 0, 0.508352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458008,-99) , 
5, 0.727969, 1, 0, 0.486126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311795,-99) , 
0, 0.496187, 0, 0, 0.411229,-99) , 
5, 0.428784, 0, 0, 0.46633,-99) , 
2, 0.0580684, 1, 0, 0.499934,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.047288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0034466, 1, 1, 0.538753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469626,-99) , 
5, -0.845769, 0, 0, 0.522193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493908,-99) , 
5, 0.691623, 1, 0, 0.499511,-99) , 
NN(
0, 
0, 
-1, 0.800436, 0, -1, 0.459331,-99) , 
0, 0.500947, 1, 0, 0.489509,-99) , 
5, 0.619024, 1, 0, 0.499172,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0517223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497072,-99) , 
3, 3.43416, 0, 0, 0.505606,-99) , 
4, 0.999524, 1, 0, 0.510231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449627,-99) , 
0, 0.502171, 1, 0, 0.486093,-99) , 
NN(
0, 
0, 
-1, -0.306113, 1, -1, 0.43233,-99) , 
0, 0.49809, 0, 0, 0.459223,-99) , 
5, 0.619029, 0, 0, 0.493889,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0561699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482979,-99) , 
0, 0.500931, 1, 0, 0.506422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456088,-99) , 
2, 0.0948533, 1, 0, 0.498911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571678,-99) , 
NN(
0, 
0, 
-1, 0.387751, 1, -1, 0.461217,-99) , 
2, 0.112204, 0, 0, 0.471332,-99) , 
5, 0.714275, 0, 0, 0.487642,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0301311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497002, 1, 1, 0.510031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449581,-99) , 
0, 0.490471, 0, 0, 0.506874,-99) , 
NN(
0, 
0, 
-1, -0.237974, 0, -1, 0.470992,-99) , 
2, 0.0700769, 1, 0, 0.500661,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0364926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333354, 1, 1, 0.570726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46866,-99) , 
1, 0.00191012, 1, 0, 0.498592,-99) , 
6, 0.00573102, 0, 0, 0.502691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388086,-99) , 
6, 0.0120364, 1, 0, 0.499534,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0587116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.273076, 1, 1, 0.611007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490639,-99) , 
3, 0.843311, 1, 0, 0.512414,-99) , 
5, -0.115643, 0, 0, 0.539877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437666,-99) , 
2, -0.0647249, 0, 0, 0.508281,-99) , 
NN(
0, 
0, 
-1, 0.961113, 1, -1, 0.486008,-99) , 
5, 0.836723, 1, 0, 0.496594,-99) , 
5, 0.428567, 1, 0, 0.505941,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0357565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.117967, 0, 1, 0.510342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4756,-99) , 
3, 6.30556, 1, 0, 0.507156,-99) , 
NN(
NN(
0, 
0, 
-1, 0.48979, 0, 1, 0.530963,-99) , 
NN(
0, 
0, 
-1, -0.0470254, 0, -1, 0.450018,-99) , 
0, 0.491423, 1, 0, 0.47991,-99) , 
0, 0.494281, 0, 0, 0.50173,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0327997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489787,-99) , 
0, 0.497136, 0, 0, 0.516056,-99) , 
2, 0.209787, 0, 0, 0.527842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483203,-99) , 
0, 0.500949, 1, 0, 0.500837,-99) , 
NN(
0, 
0, 
-1, -0.000109343, 1, -1, 0.482482,-99) , 
2, 0.00127198, 1, 0, 0.493876,-99) , 
2, 0.0752647, 0, 0, 0.499468,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0429873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485599,-99) , 
5, -0.569229, 0, 0, 0.552702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490836,-99) , 
5, 0.80947, 1, 0, 0.525362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487721,-99) , 
0, 0.491182, 1, 0, 0.490983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422844,-99) , 
0, 0.488884, 0, 0, 0.488619,-99) , 
0, 0.500947, 0, 0, 0.49797,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0378945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495067, 1, 1, 0.510961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436608,-99) , 
5, 0.618922, 0, 0, 0.473576,-99) , 
0, 0.502535, 1, 0, 0.502358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454149,-99) , 
5, 0.755081, 1, 0, 0.475029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425852,-99) , 
5, -0.714206, 0, 0, 0.4678,-99) , 
0, 0.494281, 0, 0, 0.495484,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.040083);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 1, 1, 0.56426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47355,-99) , 
2, -0.0707239, 0, 0, 0.504132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436759,-99) , 
0, 0.503707, 0, 0, 0.460532,-99) , 
0, 0.502307, 1, 0, 0.498787,-99) , 
0, 0.504757, 0, 0, 0.50322,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0547411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618988, 1, 1, 0.547886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478912,-99) , 
1, 0.00226792, 1, 0, 0.534218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482229,-99) , 
0, 0.498803, 1, 0, 0.492984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447175,-99) , 
0, 0.494462, 1, 0, 0.463055,-99) , 
0, 0.49673, 0, 0, 0.485232,-99) , 
0, 0.493328, 1, 0, 0.492302,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0296273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496188, 1, 1, 0.542729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456401,-99) , 
3, 3.26858, 1, 0, 0.525024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479658,-99) , 
2, -0.080818, 0, 0, 0.499483,-99) , 
NN(
0, 
0, 
-1, 0.489794, 1, -1, 0.44463,-99) , 
0, 0.491426, 0, 0, 0.495406,-99) , 
5, -0.0475972, 1, 0, 0.49999,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0335797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494555,-99) , 
0, 0.498089, 0, 0, 0.53232,-99) , 
NN(
0, 
0, 
-1, 0.383215, 0, -1, 0.490408,-99) , 
5, 0.238089, 1, 0, 0.497539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394411,-99) , 
6, 0.0124852, 1, 0, 0.494833,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0438812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.90742, 1, 1, 0.55511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463137,-99) , 
0, 0.489039, 1, 0, 0.501084,-99) , 
0, 0.490335, 0, 0, 0.527945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484821,-99) , 
0, 0.496453, 1, 0, 0.491228,-99) , 
NN(
0, 
0, 
-1, 2.10323, 0, -1, 0.440731,-99) , 
0, 0.493827, 0, 0, 0.487415,-99) , 
0, 0.492376, 1, 0, 0.49173,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0796727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142673, 1, 1, 0.531131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435877,-99) , 
5, 0.33328, 1, 0, 0.461138,-99) , 
0, 0.503531, 1, 0, 0.513836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486469,-99) , 
5, 0.618969, 1, 0, 0.508524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44906,-99) , 
3, 0.502456, 1, 0, 0.457484,-99) , 
3, 2.71167, 0, 0, 0.473755,-99) , 
0, 0.498089, 0, 0, 0.49381,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0507342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493962,-99) , 
0, 0.501371, 0, 0, 0.543938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454904,-99) , 
0, 0.505392, 1, 0, 0.525512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494239,-99) , 
3, 3.75356, 1, 0, 0.518131,-99) , 
NN(
0, 
0, 
-1, 0.33328, 0, -1, 0.482497,-99) , 
2, 0.070333, 0, 0, 0.487994,-99) , 
0, 0.500948, 0, 0, 0.497593,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.051572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497609,-99) , 
1, -7.02874e-06, 1, 0, 0.527922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487407,-99) , 
2, 0.0845602, 0, 0, 0.495319,-99) , 
0, 0.496185, 1, 0, 0.505383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420356,-99) , 
0, 0.492375, 0, 0, 0.495017,-99) , 
NN(
0, 
0, 
-1, 0.499993, 1, -1, 0.419878,-99) , 
5, -0.238096, 1, 0, 0.470541,-99) , 
5, 0.33333, 0, 0, 0.497872,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0644696);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49428, 0, 1, 0.542387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478015,-99) , 
2, -0.00682954, 1, 0, 0.533891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483992,-99) , 
0, 0.491424, 1, 0, 0.490409,-99) , 
2, 0.000246522, 1, 0, 0.507368,-99) , 
2, -0.0740473, 1, 0, 0.513428,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0221613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555294,-99) , 
NN(
0, 
0, 
-1, -0.809517, 0, -1, 0.495036,-99) , 
3, 6.68787, 0, 0, 0.499543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398583,-99) , 
1, -0.00858948, 0, 0, 0.496981,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.04286);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.959165, 0, 1, 0.529353,-99) , 
NN(
NN(
0, 
0, 
-1, 0.50598, 1, 1, 0.552222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463313,-99) , 
0, 0.500674, 1, 0, 0.49797,-99) , 
0, 0.504756, 0, 0, 0.501892,-99) , 
5, 0.904725, 0, 0, 0.509082,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0518791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.63266, 1, 1, 0.519109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450444,-99) , 
2, 0.200647, 1, 0, 0.513976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427595,-99) , 
3, 0.66921, 0, 0, 0.49326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360674,-99) , 
3, 3.96271, 1, 0, 0.474916,-99) , 
5, 0.142858, 0, 0, 0.506661,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0564938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.501137, 0, 1, 0.554186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421158,-99) , 
5, 0.27439, 0, 0, 0.508573,-99) , 
5, 0.0476375, 1, 0, 0.515617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468981,-99) , 
5, 0.682713, 1, 0, 0.500534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412615,-99) , 
5, 0.0479107, 0, 0, 0.483061,-99) , 
2, 0.0579437, 1, 0, 0.50906,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0490894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.00021, 1, 1, 0.532944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472756,-99) , 
5, 0.904749, 1, 0, 0.516094,-99) , 
NN(
0, 
0, 
-1, 0.0564175, 1, -1, 0.47972,-99) , 
0, 0.497138, 1, 0, 0.49367,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0452826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498528,-99) , 
0, 0.499041, 1, 0, 0.521499,-99) , 
2, 0.117967, 0, 0, 0.529586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497282,-99) , 
0, 0.500947, 0, 0, 0.50699,-99) , 
NN(
0, 
0, 
-1, 0.850292, 1, -1, 0.465497,-99) , 
1, -0.00125547, 0, 0, 0.495609,-99) , 
5, 0.714236, 1, 0, 0.508623,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0463328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494554, 1, 1, 0.514316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490609,-99) , 
0, 0.492376, 0, 0, 0.511978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448417,-99) , 
3, 1.24744, 0, 0, 0.497496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405586,-99) , 
3, 4.05363, 1, 0, 0.483328,-99) , 
5, 0.428556, 0, 0, 0.505378,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0375229);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.886584, 0, 1, 0.540871,-99) , 
NN(
NN(
0, 
0, 
-1, 0.129276, 1, 1, 0.510193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440774,-99) , 
5, 0.782115, 0, 0, 0.485099,-99) , 
0, 0.494281, 0, 0, 0.505222,-99) , 
5, -0.523781, 1, 0, 0.50925,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0755542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465347,-99) , 
3, 2.15949, 1, 0, 0.515359,-99) , 
5, -0.546467, 0, 0, 0.549734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468411,-99) , 
0, 0.491742, 0, 0, 0.519293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469238,-99) , 
3, 6.31881, 0, 0, 0.473797,-99) , 
0, 0.494282, 1, 0, 0.482115,-99) , 
5, -0.0476019, 1, 0, 0.491768,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0450842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499857, 0, 1, 0.521637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480801,-99) , 
0, 0.501898, 1, 0, 0.514314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49063,-99) , 
0, 0.492376, 1, 0, 0.50155,-99) , 
NN(
0, 
0, 
-1, 0.756079, 1, -1, 0.461068,-99) , 
3, 1.01568, 0, 0, 0.489115,-99) , 
5, 0.714263, 0, 0, 0.504341,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0539926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499386, 0, 1, 0.537672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472861,-99) , 
5, 0.809505, 1, 0, 0.495489,-99) , 
0, 0.500358, 1, 0, 0.511633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488625,-99) , 
0, 0.494835, 0, 0, 0.501166,-99) , 
NN(
0, 
0, 
-1, 0.428757, 0, -1, 0.46113,-99) , 
0, 0.495596, 1, 0, 0.483666,-99) , 
0, 0.49809, 0, 0, 0.497736,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0537725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473913,-99) , 
5, 0.714347, 0, 0, 0.533987,-99) , 
5, 0.333356, 1, 0, 0.547813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494743,-99) , 
2, -0.00174001, 0, 0, 0.528468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488048,-99) , 
0, 0.500949, 0, 0, 0.495804,-99) , 
5, 0.619036, 1, 0, 0.505522,-99) , 
2, 0.0712048, 0, 0, 0.512707,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0370239);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.61888, 1, 1, 0.544626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440935,-99) , 
3, 4.90317, 1, 0, 0.505104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436576,-99) , 
0, 0.49877, 1, 0, 0.466438,-99) , 
3, 5.70134, 1, 0, 0.500563,-99) , 
0, 0.493328, 1, 0, 0.506871,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0505751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493193,-99) , 
3, 2.77924, 1, 0, 0.511953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456177,-99) , 
0, 0.504213, 1, 0, 0.474133,-99) , 
0, 0.502852, 1, 0, 0.506553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450706,-99) , 
3, 1.7563, 0, 0, 0.480726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351482,-99) , 
3, 1.71524, 1, 0, 0.413982,-99) , 
0, 0.495235, 0, 0, 0.459798,-99) , 
5, 0.238083, 0, 0, 0.497283,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0429023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496185, 0, 1, 0.533963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487284,-99) , 
0, 0.499041, 1, 0, 0.506139,-99) , 
5, 0.637177, 1, 0, 0.513712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476319,-99) , 
5, -0.904665, 0, 0, 0.5118,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0451146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498404,-99) , 
0, 0.490646, 1, 0, 0.513059,-99) , 
0, 0.492512, 0, 0, 0.52497,-99) , 
NN(
NN(
0, 
0, 
-1, -0.523628, 1, 1, 0.516442,-99) , 
NN(
0, 
0, 
-1, 0.714263, 0, -1, 0.476592,-99) , 
0, 0.502172, 0, 0, 0.485032,-99) , 
0, 0.493328, 1, 0, 0.490714,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0434606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489791, 0, 1, 0.594088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494017,-99) , 
3, 2.77915, 0, 0, 0.507672,-99) , 
0, 0.491424, 1, 0, 0.513403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469197,-99) , 
4, 0.999524, 0, 0, 0.508663,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0434232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714141, 1, 1, 0.531076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465389,-99) , 
3, 5.49315, 1, 0, 0.521358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491067,-99) , 
0, 0.496148, 0, 0, 0.501964,-99) , 
NN(
0, 
0, 
-1, 0.523921, 0, -1, 0.46283,-99) , 
0, 0.498815, 1, 0, 0.495249,-99) , 
0, 0.499994, 0, 0, 0.504011,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0409292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470957,-99) , 
0, 0.503533, 1, 0, 0.502689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460762,-99) , 
0, 0.490475, 0, 0, 0.500612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484868,-99) , 
5, -0.727905, 0, 0, 0.515533,-99) , 
NN(
0, 
0, 
-1, 0.499994, 0, -1, 0.40574,-99) , 
3, 1.72363, 1, 0, 0.456319,-99) , 
5, -0.0476329, 0, 0, 0.493123,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0473707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0474891, 1, 1, 0.523652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477279,-99) , 
1, 0.00296579, 0, 0, 0.486638,-99) , 
6, 0.00178257, 1, 0, 0.506287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414301,-99) , 
6, 0.0124849, 1, 0, 0.503954,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0334793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498998, 0, 1, 0.576808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386538,-99) , 
5, -0.55101, 0, 0, 0.49738,-99) , 
5, -0.809517, 1, 0, 0.502756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410687,-99) , 
0, 0.48952, 0, 0, 0.49917,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0490761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476153,-99) , 
0, 0.498907, 0, 0, 0.490952,-99) , 
0, 0.492376, 1, 0, 0.494903,-99) , 
NN(
0, 
0, 
-1, 0.492376, 1, -1, 0.454783,-99) , 
5, 0.428556, 0, 0, 0.48529,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0709885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477575,-99) , 
2, 0.0414768, 1, 0, 0.533821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427757,-99) , 
0, 0.492376, 0, 0, 0.512905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473887,-99) , 
5, 0.764162, 1, 0, 0.494121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461053,-99) , 
2, -0.086882, 1, 0, 0.469589,-99) , 
0, 0.499995, 0, 0, 0.477358,-99) , 
5, -0.238077, 1, 0, 0.482288,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0536565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.13713, 1, 1, 0.590844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44743,-99) , 
5, 0.429897, 0, 0, 0.51363,-99) , 
5, 0.201849, 1, 0, 0.518346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555704,-99) , 
NN(
0, 
0, 
-1, 0.498179, 0, -1, 0.458997,-99) , 
0, 0.495231, 1, 0, 0.485385,-99) , 
5, -0.523734, 0, 0, 0.514222,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0537733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495776,-99) , 
5, -0.782291, 0, 0, 0.572216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446903,-99) , 
0, 0.503803, 1, 0, 0.547645,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.508441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456182,-99) , 
4, 0.999524, 0, 0, 0.501293,-99) , 
5, 0.523755, 1, 0, 0.512191,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0680075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.383086, 0, 1, 0.555593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472293,-99) , 
2, 0.0516899, 0, 0, 0.510217,-99) , 
2, -0.0121806, 1, 0, 0.527212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512696,-99) , 
NN(
0, 
0, 
-1, 0.673498, 0, -1, 0.470419,-99) , 
2, 0.0712048, 0, 0, 0.477662,-99) , 
5, 0.619058, 1, 0, 0.49215,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0554408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488468,-99) , 
5, 0.71428, 1, 0, 0.511132,-99) , 
NN(
0, 
0, 
-1, 4.2937, 1, -1, 0.473787,-99) , 
2, -8.29186e-05, 0, 0, 0.491759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455539,-99) , 
4, 0.999524, 0, 0, 0.487776,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0443706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489251,-99) , 
3, 0.843757, 1, 0, 0.500775,-99) , 
0, 0.504756, 0, 0, 0.505949,-99) , 
NN(
0, 
0, 
-1, -0.0476099, 0, -1, 0.475095,-99) , 
3, 3.20051, 1, 0, 0.496158,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0565889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472415,-99) , 
0, 0.49772, 1, 0, 0.50947,-99) , 
0, 0.499404, 0, 0, 0.515345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475456,-99) , 
3, 4.85836, 1, 0, 0.50072,-99) , 
NN(
0, 
0, 
-1, -0.401416, 1, -1, 0.421308,-99) , 
5, 0.142861, 0, 0, 0.481856,-99) , 
0, 0.499994, 1, 0, 0.503603,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0550528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497186,-99) , 
0, 0.492512, 0, 0, 0.531793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46322,-99) , 
0, 0.50326, 1, 0, 0.503922,-99) , 
0, 0.496185, 1, 0, 0.512696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55666,-99) , 
NN(
0, 
0, 
-1, 0.61904, 0, -1, 0.45397,-99) , 
0, 0.493332, 1, 0, 0.470363,-99) , 
2, -0.0843733, 0, 0, 0.50589,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0292335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50462, 1, 1, 0.586471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497518,-99) , 
0, 0.504348, 0, 0, 0.513621,-99) , 
5, 0.428638, 1, 0, 0.532917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496298,-99) , 
5, 0.0522929, 1, 0, 0.49989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455291,-99) , 
5, -0.809517, 0, 0, 0.496592,-99) , 
0, 0.501899, 0, 0, 0.50382,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0493006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486474,-99) , 
5, -0.510191, 0, 0, 0.528862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440792,-99) , 
4, 0.999905, 0, 0, 0.519094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491929,-99) , 
0, 0.495234, 1, 0, 0.499589,-99) , 
NN(
0, 
0, 
-1, 0.850292, 1, -1, 0.478678,-99) , 
1, -0.00125547, 0, 0, 0.493933,-99) , 
5, 0.71427, 1, 0, 0.503497,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0522969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000325152, 1, 1, 0.563755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473694,-99) , 
0, 0.496189, 0, 0, 0.529177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466761,-99) , 
0, 0.500947, 1, 0, 0.502971,-99) , 
NN(
0, 
0, 
-1, 0.320839, 1, -1, 0.466105,-99) , 
5, 0.614525, 0, 0, 0.494714,-99) , 
5, -0.618953, 1, 0, 0.49841,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0547941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.882152, 1, 1, 0.51846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478758,-99) , 
5, 0.909327, 0, 0, 0.492068,-99) , 
0, 0.497138, 0, 0, 0.507521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483734,-99) , 
5, 0.292509, 1, 0, 0.500007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42566,-99) , 
3, 0.470098, 1, 0, 0.449617,-99) , 
3, 1.19581, 0, 0, 0.482549,-99) , 
5, 0.809515, 0, 0, 0.4941,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0347328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.68012, 0, 1, 0.517522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446846,-99) , 
2, 0.0381228, 1, 0, 0.491914,-99) , 
0, 0.500947, 1, 0, 0.510594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474125,-99) , 
2, 0.198982, 1, 0, 0.50821,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0426688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454174,-99) , 
6, 0.00514753, 1, 0, 0.498448,-99) , 
NN(
0, 
0, 
-1, 0.00122008, 1, -1, 0.467923,-99) , 
0, 0.493328, 0, 0, 0.494394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437867,-99) , 
3, 1.4575, 1, 0, 0.494764,-99) , 
NN(
0, 
0, 
-1, -0.480558, 0, -1, 0.417295,-99) , 
5, -0.705203, 1, 0, 0.454891,-99) , 
5, 0.238094, 0, 0, 0.486658,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0533548);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.000588343, 1, 1, 0.552727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491487,-99) , 
5, -0.872987, 0, 0, 0.538148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479635,-99) , 
0, 0.490698, 1, 0, 0.482153,-99) , 
5, -0.333327, 1, 0, 0.488764,-99) , 
0, 0.503804, 0, 0, 0.495592,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0468428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450805,-99) , 
0, 0.49075, 0, 0, 0.510128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473666,-99) , 
0, 0.503552, 0, 0, 0.485869,-99) , 
0, 0.498135, 1, 0, 0.497266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424147,-99) , 
0, 0.489519, 0, 0, 0.494444,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0744515);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494129,-99) , 
0, 0.504348, 1, 0, 0.564906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474987,-99) , 
0, 0.500266, 1, 0, 0.491366,-99) , 
5, 0.523794, 1, 0, 0.509566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476676,-99) , 
5, 0.72792, 1, 0, 0.493657,-99) , 
NN(
0, 
0, 
-1, -0.709667, 1, -1, 0.450782,-99) , 
5, 0.523822, 0, 0, 0.482788,-99) , 
0, 0.499042, 0, 0, 0.493849,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0511324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.151962, 0, 1, 0.569318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471017,-99) , 
0, 0.499033, 1, 0, 0.507068,-99) , 
5, 0.619014, 1, 0, 0.528413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462176,-99) , 
0, 0.496185, 0, 0, 0.48908,-99) , 
5, 0.904743, 0, 0, 0.49919,-99) , 
1, -0.00116413, 1, 0, 0.507675,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.051512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.591749, 1, 1, 0.517021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442215,-99) , 
5, -0.836739, 0, 0, 0.46794,-99) , 
5, -0.428599, 0, 0, 0.510664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580419,-99) , 
NN(
0, 
0, 
-1, 0.713808, 0, -1, 0.461992,-99) , 
0, 0.489065, 1, 0, 0.472883,-99) , 
0, 0.495233, 0, 0, 0.500508,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0521946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000937044, 0, 1, 0.539173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478475,-99) , 
5, 0.882082, 1, 0, 0.487321,-99) , 
5, 0.823118, 1, 0, 0.501338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475905,-99) , 
5, -0.222545, 1, 0, 0.492915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432276,-99) , 
5, 0.63264, 1, 0, 0.480463,-99) , 
5, 0.714278, 0, 0, 0.493025,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0174402);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504847, 0, 1, 0.505892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432754,-99) , 
0, 0.505709, 1, 0, 0.502521,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0472439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523755, 1, 1, 0.525779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439551,-99) , 
0, 0.493327, 1, 0, 0.472443,-99) , 
2, 0.0780467, 1, 0, 0.515873,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.477787,-99) , 
0, 0.496185, 1, 0, 0.490173,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0262276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439797,-99) , 
2, 0.220795, 1, 0, 0.49906,-99) , 
5, -0.723324, 1, 0, 0.503658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441243,-99) , 
5, -0.904741, 0, 0, 0.500087,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0557953);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491383,-99) , 
3, 3.39661, 1, 0, 0.523306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454714,-99) , 
0, 0.500946, 0, 0, 0.482692,-99) , 
5, 0.120135, 0, 0, 0.509363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485344,-99) , 
5, 0.918335, 0, 0, 0.499049,-99) , 
NN(
0, 
0, 
-1, 0.909292, 1, -1, 0.471904,-99) , 
0, 0.497133, 0, 0, 0.487408,-99) , 
5, 0.809491, 1, 0, 0.498933,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0421676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490153, 1, 1, 0.57788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479616,-99) , 
6, 0.0040322, 1, 0, 0.508132,-99) , 
0, 0.491424, 1, 0, 0.513236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408212,-99) , 
6, 0.00940943, 1, 0, 0.508677,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0538683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0180702, 0, 1, 0.556112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467647,-99) , 
0, 0.49176, 1, 0, 0.500709,-99) , 
0, 0.493418, 0, 0, 0.520638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466237,-99) , 
2, -0.0181188, 0, 0, 0.508063,-99) , 
NN(
0, 
0, 
-1, 0.795973, 0, -1, 0.483472,-99) , 
5, 0.714275, 1, 0, 0.492766,-99) , 
0, 0.495233, 1, 0, 0.499705,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0512529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.387729, 0, 1, 0.548577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392052,-99) , 
0, 0.499995, 1, 0, 0.458202,-99) , 
3, 2.69084, 1, 0, 0.51803,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.481478,-99) , 
5, 0.428569, 1, 0, 0.489249,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0493539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.703822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493817,-99) , 
1, -0.000896041, 1, 0, 0.550716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49719,-99) , 
3, 3.22885, 0, 0, 0.50709,-99) , 
5, 0.587332, 1, 0, 0.513577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416984,-99) , 
3, 3.01015, 0, 0, 0.44025,-99) , 
3, 0.81383, 1, 0, 0.463209,-99) , 
5, -0.238087, 0, 0, 0.505991,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0339213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493324,-99) , 
2, 0.163084, 0, 0, 0.496867,-99) , 
0, 0.490471, 1, 0, 0.50101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451323,-99) , 
4, 0.999524, 0, 0, 0.495631,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0603022);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491015, 1, 1, 0.573448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482,-99) , 
3, 5.84127, 1, 0, 0.516266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453946,-99) , 
5, -0.460327, 1, 0, 0.477587,-99) , 
5, 0.619027, 0, 0, 0.504458,-99) , 
0, 0.492376, 1, 0, 0.511501,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0750314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.564604, 1, 1, 0.529529,-99) , 
NN(
0, 
0, 
-1, -0.773244, 1, -1, 0.435053,-99) , 
5, -0.523812, 0, 0, 0.51771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455351,-99) , 
0, 0.492239, 0, 0, 0.471328,-99) , 
NN(
0, 
0, 
-1, 0.493555, 0, -1, 0.430136,-99) , 
0, 0.49301, 1, 0, 0.458119,-99) , 
0, 0.494281, 0, 0, 0.505221,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0361512);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562917,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49333, 1, 1, 0.51335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480031,-99) , 
3, 1.1704, 1, 0, 0.493764,-99) , 
3, 2.89802, 0, 0, 0.499925,-99) , 
2, 0.210551, 0, 0, 0.503429,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.053807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502173, 1, 1, 0.535635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451937,-99) , 
0, 0.498226, 1, 0, 0.488369,-99) , 
0, 0.499995, 0, 0, 0.503329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460403,-99) , 
5, -0.222559, 0, 0, 0.488961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41771,-99) , 
5, 0.632639, 1, 0, 0.474422,-99) , 
5, 0.714273, 0, 0, 0.491888,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0592488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00116413, 1, 1, 0.52441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477073,-99) , 
5, 0.904736, 1, 0, 0.511741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471051,-99) , 
2, 0.154313, 0, 0, 0.47923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405493,-99) , 
2, -0.159226, 0, 0, 0.472711,-99) , 
0, 0.497138, 0, 0, 0.495215,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0448486);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478908,-99) , 
5, -0.333246, 0, 0, 0.51316,-99) , 
NN(
0, 
0, 
-1, 0.428629, 0, -1, 0.479065,-99) , 
0, 0.496231, 1, 0, 0.490937,-99) , 
0, 0.505709, 0, 0, 0.49394,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0416884);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485641,-99) , 
3, 3.21294, 1, 0, 0.507563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45298,-99) , 
5, -0.904725, 0, 0, 0.504366,-99) , 
2, -0.192469, 1, 0, 0.508076,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0335422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523734, 1, 1, 0.510196,-99) , 
NN(
0, 
0, 
-1, -0.0715164, 0, -1, 0.477722,-99) , 
3, 3.76599, 1, 0, 0.50216,-99) , 
NN(
0, 
0, 
-1, 0.506253, 0, -1, 0.439049,-99) , 
0, 0.504756, 1, 0, 0.497431,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0774012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.646234, 0, 1, 0.572203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371667,-99) , 
0, 0.498089, 0, 0, 0.457139,-99) , 
3, 2.30162, 1, 0, 0.523409,-99) , 
NN(
NN(
0, 
0, 
-1, 0.709674, 1, 1, 0.52451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465643,-99) , 
5, 0.927411, 0, 0, 0.477784,-99) , 
1, -0.00168722, 1, 0, 0.486885,-99) , 
5, 0.23808, 1, 0, 0.493485,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0293663);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.618973, 1, 1, 0.528863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538972,-99) , 
NN(
0, 
0, 
-1, -0.550934, 0, -1, 0.489808,-99) , 
5, -0.809488, 1, 0, 0.493322,-99) , 
0, 0.493328, 1, 0, 0.498521,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0455402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.54099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478543,-99) , 
2, -0.0885335, 0, 0, 0.523506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485292,-99) , 
3, 2.20662, 1, 0, 0.540838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491755,-99) , 
3, 2.88536, 0, 0, 0.495638,-99) , 
2, -0.0442393, 1, 0, 0.504011,-99) , 
3, 3.75356, 0, 0, 0.508853,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0483066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428518, 1, 1, 0.590914,-99) , 
NN(
0, 
0, 
-1, 0.619043, 0, -1, 0.483628,-99) , 
6, 0.00515792, 0, 0, 0.490997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386232,-99) , 
6, 0.0120364, 1, 0, 0.487998,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0684191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.3991, 1, 1, 0.570367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40682,-99) , 
3, 0.453853, 0, 0, 0.461149,-99) , 
3, 0.768929, 0, 0, 0.541531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490259,-99) , 
3, 3.22574, 1, 0, 0.515538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463932,-99) , 
5, 0.954634, 1, 0, 0.506731,-99) , 
5, 0.523807, 1, 0, 0.515068,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0659463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442655,-99) , 
1, -0.00289893, 0, 0, 0.536954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447802,-99) , 
0, 0.492378, 0, 0, 0.526132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456148,-99) , 
0, 0.492376, 0, 0, 0.520515,-99) , 
NN(
0, 
0, 
-1, 0.809491, 0, -1, 0.476984,-99) , 
2, -0.0183279, 1, 0, 0.488966,-99) , 
3, 3.40104, 0, 0, 0.499352,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0364477);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.909348, 0, 1, 0.5777,-99) , 
NN(
NN(
0, 
0, 
-1, 0.507593, 1, 1, 0.509481,-99) , 
NN(
0, 
0, 
-1, -0.313057, 1, -1, 0.452798,-99) , 
5, 0.138286, 0, 0, 0.503183,-99) , 
5, -0.809524, 1, 0, 0.508469,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0391149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.309975, 1, 1, 0.525379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43839,-99) , 
0, 0.499045, 1, 0, 0.470761,-99) , 
5, -0.346955, 0, 0, 0.504776,-99) , 
NN(
0, 
0, 
-1, -0.0023365, 0, -1, 0.485178,-99) , 
5, 0.714254, 1, 0, 0.49261,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0447499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497569,-99) , 
3, 3.22885, 1, 0, 0.515963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494532,-99) , 
5, 0.945541, 1, 0, 0.511189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469393,-99) , 
6, 0.00559576, 0, 0, 0.476939,-99) , 
1, -0.00438664, 1, 0, 0.489471,-99) , 
5, 0.619018, 0, 0, 0.504491,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0446264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505982, 1, 1, 0.583444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471379,-99) , 
4, 0.999932, 0, 0, 0.503393,-99) , 
0, 0.504757, 0, 0, 0.508479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459284,-99) , 
4, 0.999524, 0, 0, 0.503073,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0264246);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49683,-99) , 
5, 0.238047, 1, 0, 0.502795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439987,-99) , 
2, 0.129432, 1, 0, 0.499608,-99) , 
2, 0.210551, 0, 0, 0.502774,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0419822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499034, 0, 1, 0.573708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496707,-99) , 
3, 6.33674, 0, 0, 0.512556,-99) , 
2, -0.0801732, 1, 0, 0.528661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474591,-99) , 
0, 0.502445, 1, 0, 0.504483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413673,-99) , 
0, 0.489522, 0, 0, 0.501003,-99) , 
3, 3.40023, 0, 0, 0.508834,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0544851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479567,-99) , 
5, -0.714269, 0, 0, 0.528001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491913,-99) , 
0, 0.494284, 1, 0, 0.500438,-99) , 
2, 0.00293688, 0, 0, 0.515911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454451,-99) , 
0, 0.499033, 0, 0, 0.478131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415698,-99) , 
5, -0.142682, 0, 0, 0.467792,-99) , 
2, -0.0712347, 0, 0, 0.506905,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0346387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492956,-99) , 
2, 0.0709487, 0, 0, 0.498047,-99) , 
NN(
0, 
0, 
-1, 0.504712, 0, -1, 0.455932,-99) , 
0, 0.503804, 1, 0, 0.493242,-99) , 
NN(
0, 
0, 
-1, -0.900195, 1, -1, 0.446883,-99) , 
5, -0.809491, 0, 0, 0.489151,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0189814);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00515102, 0, 1, 0.507623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422697,-99) , 
6, 0.0120364, 1, 0, 0.505347,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0406282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489781,-99) , 
5, 0.848378, 0, 0, 0.501936,-99) , 
5, 0.755084, 1, 0, 0.504665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486723,-99) , 
2, -0.0010546, 0, 0, 0.519159,-99) , 
NN(
0, 
0, 
-1, -0.405194, 0, -1, 0.463821,-99) , 
5, -0.75509, 1, 0, 0.475708,-99) , 
5, 0.714267, 0, 0, 0.493135,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0323294);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557413,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493022,-99) , 
0, 0.501354, 0, 0, 0.497699,-99) , 
NN(
0, 
0, 
-1, 0.618861, 0, -1, 0.476451,-99) , 
0, 0.501899, 1, 0, 0.492833,-99) , 
0, 0.490471, 1, 0, 0.496051,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0363126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493197,-99) , 
0, 0.497138, 0, 0, 0.527356,-99) , 
5, -0.346953, 0, 0, 0.549366,-99) , 
NN(
NN(
0, 
0, 
-1, 0.591786, 1, 1, 0.509349,-99) , 
NN(
0, 
0, 
-1, 0.000616284, 0, -1, 0.472318,-99) , 
0, 0.5038, 1, 0, 0.505491,-99) , 
5, 0.142819, 1, 0, 0.512511,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.046494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484877,-99) , 
5, -0.684451, 0, 0, 0.52376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479048,-99) , 
5, 0.861738, 1, 0, 0.495543,-99) , 
5, 0.637147, 1, 0, 0.502948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439072,-99) , 
5, -0.904724, 0, 0, 0.499507,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0432096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493668,-99) , 
5, 0.823113, 1, 0, 0.502022,-99) , 
0, 0.501896, 0, 0, 0.510248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448748,-99) , 
5, 0.550934, 1, 0, 0.483664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386619,-99) , 
4, 0.999906, 0, 0, 0.473073,-99) , 
5, 0.714265, 0, 0, 0.495573,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0399258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436106,-99) , 
0, 0.506232, 1, 0, 0.507512,-99) , 
0, 0.493102, 1, 0, 0.510596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372458,-99) , 
3, 1.39356, 0, 0, 0.44502,-99) , 
3, 3.42333, 0, 0, 0.46796,-99) , 
0, 0.492376, 0, 0, 0.505775,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0474046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470318,-99) , 
5, 0.723336, 1, 0, 0.49115,-99) , 
5, 0.904739, 0, 0, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458287,-99) , 
4, 0.999525, 0, 0, 0.495666,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0585994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490178,-99) , 
0, 0.496314, 1, 0, 0.5004,-99) , 
0, 0.499031, 0, 0, 0.51539,-99) , 
NN(
NN(
0, 
0, 
-1, 3.40787, 1, 1, 0.569188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467133,-99) , 
2, 0.172912, 0, 0, 0.471652,-99) , 
2, -0.110021, 1, 0, 0.482001,-99) , 
5, 0.809501, 0, 0, 0.497483,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0328034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491243, 1, 1, 0.512553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474258,-99) , 
4, 0.999524, 0, 0, 0.508296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42393,-99) , 
0, 0.489519, 0, 0, 0.505065,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0480806);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486206,-99) , 
3, 2.85517, 1, 0, 0.504369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453608,-99) , 
2, -0.0121806, 1, 0, 0.47427,-99) , 
5, 0.727848, 0, 0, 0.493108,-99) , 
5, -0.904724, 1, 0, 0.496677,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.025803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493684,-99) , 
0, 0.489612, 0, 0, 0.544242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491545,-99) , 
0, 0.506292, 1, 0, 0.541728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463817,-99) , 
0, 0.502658, 1, 0, 0.497692,-99) , 
0, 0.505301, 0, 0, 0.500266,-99) , 
0, 0.491426, 1, 0, 0.50348,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0536138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.306114, 1, 1, 0.562118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48798,-99) , 
0, 0.497137, 1, 0, 0.510321,-99) , 
5, -0.129256, 0, 0, 0.52916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47517,-99) , 
5, 0.727953, 0, 0, 0.503107,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.473931,-99) , 
0, 0.500947, 0, 0, 0.480957,-99) , 
5, 0.523795, 1, 0, 0.492081,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0614822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449972,-99) , 
3, 0.67205, 0, 0, 0.520933,-99) , 
5, -0.591845, 0, 0, 0.54936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456074,-99) , 
0, 0.49428, 0, 0, 0.498981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459853,-99) , 
2, -0.0818425, 1, 0, 0.469158,-99) , 
5, 0.782302, 0, 0, 0.487065,-99) , 
5, -0.142859, 1, 0, 0.495479,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0490031);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428365, 1, 1, 0.544103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488373,-99) , 
0, 0.498803, 1, 0, 0.498354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410535,-99) , 
1, 0.0013918, 0, 0, 0.439785,-99) , 
0, 0.495279, 0, 0, 0.488256,-99) , 
0, 0.492376, 1, 0, 0.493754,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.030438);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478132,-99) , 
0, 0.500617, 1, 0, 0.496454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408643,-99) , 
0, 0.491288, 0, 0, 0.494104,-99) , 
0, 0.490471, 1, 0, 0.497823,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0432929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49616,-99) , 
3, 2.78342, 0, 0, 0.508946,-99) , 
0, 0.494506, 0, 0, 0.519969,-99) , 
NN(
NN(
0, 
0, 
-1, 1.34848, 1, 1, 0.528903,-99) , 
NN(
0, 
0, 
-1, 0.142943, 0, -1, 0.480264,-99) , 
1, -0.00278654, 1, 0, 0.486229,-99) , 
0, 0.495233, 1, 0, 0.494458,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0297688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.768678, 1, 1, 0.512749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489461,-99) , 
1, -0.00483745, 1, 0, 0.497364,-99) , 
5, 0.714217, 0, 0, 0.506975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467087,-99) , 
1, 0.0062426, 1, 0, 0.50549,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0626219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481409,-99) , 
0, 0.500947, 1, 0, 0.530372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397863,-99) , 
0, 0.497138, 0, 0, 0.475299,-99) , 
2, 0.0579437, 1, 0, 0.512838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482363,-99) , 
0, 0.496188, 0, 0, 0.530558,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.478368,-99) , 
5, -0.714243, 1, 0, 0.484335,-99) , 
3, 3.40104, 0, 0, 0.492269,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0554663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.33336, 1, 1, 0.520987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471732,-99) , 
5, 0.809503, 0, 0, 0.494841,-99) , 
0, 0.49809, 1, 0, 0.507177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579339,-99) , 
NN(
0, 
0, 
-1, 0.238076, 0, -1, 0.468039,-99) , 
0, 0.503803, 0, 0, 0.479807,-99) , 
1, -0.00116413, 0, 0, 0.498798,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0522042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.720694, 1, 1, 0.518428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466317,-99) , 
3, 6.42481, 1, 0, 0.513366,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489428, 0, 1, 0.540762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468355,-99) , 
1, 0.00383011, 0, 0, 0.475494,-99) , 
0, 0.490789, 1, 0, 0.485015,-99) , 
0, 0.497138, 0, 0, 0.501847,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0611025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.18087, 1, 1, 0.635246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430196,-99) , 
0, 0.497144, 0, 0, 0.479755,-99) , 
5, -0.800455, 0, 0, 0.545718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478131,-99) , 
0, 0.500948, 0, 0, 0.485524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413721,-99) , 
5, 0.319737, 0, 0, 0.482107,-99) , 
5, 0.047615, 1, 0, 0.491724,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0307983);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.365117, 1, 1, 0.51151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47718,-99) , 
0, 0.494282, 1, 0, 0.496177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422488,-99) , 
5, -0.619042, 1, 0, 0.480889,-99) , 
5, -0.333312, 0, 0, 0.50735,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0518857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.265231, 1, 1, 0.562806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481963,-99) , 
5, 0.142861, 0, 0, 0.516964,-99) , 
0, 0.495233, 1, 0, 0.528413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479319,-99) , 
3, 1.21457, 1, 0, 0.487978,-99) , 
3, 5.73017, 0, 0, 0.49226,-99) , 
5, 0.714278, 1, 0, 0.505845,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0407367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456111,-99) , 
5, 0.523796, 0, 0, 0.514472,-99) , 
5, -0.428567, 1, 0, 0.53077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559582,-99) , 
NN(
0, 
0, 
-1, 0.498544, 0, -1, 0.487015,-99) , 
0, 0.494916, 1, 0, 0.490035,-99) , 
0, 0.494281, 1, 0, 0.49795,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0497699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.275031, 1, 1, 0.585154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411131,-99) , 
5, -0.461009, 1, 0, 0.510386,-99) , 
5, -0.0566994, 0, 0, 0.535428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481921,-99) , 
3, 2.01197, 1, 0, 0.492072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451063,-99) , 
3, 6.69683, 1, 0, 0.488272,-99) , 
5, 0.5238, 1, 0, 0.499453,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0509304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484034,-99) , 
2, 0.0988565, 1, 0, 0.507075,-99) , 
0, 0.49333, 1, 0, 0.521713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484052,-99) , 
5, 0.727893, 1, 0, 0.491516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440129,-99) , 
5, -0.564605, 1, 0, 0.470052,-99) , 
5, 0.523799, 0, 0, 0.486076,-99) , 
2, 0.0328286, 0, 0, 0.495,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0570668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470829,-99) , 
0, 0.494282, 0, 0, 0.530021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488117,-99) , 
5, 0.564658, 1, 0, 0.492792,-99) , 
3, 3.22885, 0, 0, 0.505032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54411,-99) , 
NN(
0, 
0, 
-1, 0.499177, 1, -1, 0.455866,-99) , 
0, 0.503802, 0, 0, 0.468541,-99) , 
5, 0.428572, 0, 0, 0.496712,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0333629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424686,-99) , 
6, 0.00689942, 1, 0, 0.504921,-99) , 
5, 0.111169, 1, 0, 0.507758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433851,-99) , 
0, 0.498089, 1, 0, 0.468506,-99) , 
3, 2.19455, 0, 0, 0.486995,-99) , 
5, -0.333312, 0, 0, 0.504975,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.022078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498476,-99) , 
1, -0.00406158, 1, 0, 0.501854,-99) , 
2, 0.169481, 0, 0, 0.505224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442733,-99) , 
3, 7.41242, 1, 0, 0.501254,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0534891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000737474, 1, 1, 0.5292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484686,-99) , 
0, 0.502172, 0, 0, 0.502238,-99) , 
0, 0.49809, 1, 0, 0.515019,-99) , 
NN(
0, 
0, 
-1, 0.497125, 0, -1, 0.468487,-99) , 
5, 0.904747, 1, 0, 0.502787,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0572576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499055, 1, 1, 0.56072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480918,-99) , 
5, 0.740845, 0, 0, 0.514335,-99) , 
5, 0.637183, 1, 0, 0.518157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499414,-99) , 
5, -0.613001, 0, 0, 0.52783,-99) , 
NN(
0, 
0, 
-1, 2.748, 1, -1, 0.428617,-99) , 
5, 0.160952, 1, 0, 0.493689,-99) , 
5, 0.523803, 0, 0, 0.512117,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0513525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.419489, 0, 1, 0.563051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425666,-99) , 
5, -0.129237, 1, 0, 0.507565,-99) , 
2, 0.0250096, 1, 0, 0.545035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533472,-99) , 
NN(
0, 
0, 
-1, 0.705208, 0, -1, 0.489207,-99) , 
0, 0.502853, 0, 0, 0.49484,-99) , 
5, 0.523807, 1, 0, 0.506123,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0258708);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.333355, 1, 1, 0.541894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435618,-99) , 
6, 0.0061613, 1, 0, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416555,-99) , 
6, 0.0107824, 1, 0, 0.498669,-99) , 
0, 0.503804, 0, 0, 0.503088,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0357544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.52086, 1, 1, 0.545318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491541,-99) , 
2, -0.0710868, 1, 0, 0.497299,-99) , 
0, 0.492376, 1, 0, 0.502076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461607,-99) , 
3, 1.50574, 0, 0, 0.483699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421257,-99) , 
0, 0.494282, 0, 0, 0.465999,-99) , 
5, -0.523807, 0, 0, 0.497573,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0627057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0476098, 1, 1, 0.550781,-99) , 
NN(
0, 
0, 
-1, 0.0838667, 1, -1, 0.484843,-99) , 
0, 0.497818, 0, 0, 0.511069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435088,-99) , 
0, 0.505437, 1, 0, 0.48567,-99) , 
NN(
0, 
0, 
-1, 0.504344, 1, -1, 0.427489,-99) , 
3, 3.21376, 1, 0, 0.464068,-99) , 
0, 0.501899, 1, 0, 0.501086,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0455634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0564175, 0, 1, 0.536842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487353,-99) , 
0, 0.49428, 1, 0, 0.499511,-99) , 
5, -0.183706, 0, 0, 0.522426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495552,-99) , 
0, 0.496863, 0, 0, 0.506803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457519,-99) , 
5, 0.863936, 1, 0, 0.479211,-99) , 
0, 0.499039, 1, 0, 0.495453,-99) , 
5, 0.714207, 1, 0, 0.505559,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0490587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45606,-99) , 
5, -0.860062, 1, 0, 0.527656,-99) , 
5, -0.755106, 0, 0, 0.553029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496781,-99) , 
0, 0.499905, 1, 0, 0.512696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419508,-99) , 
0, 0.489791, 1, 0, 0.463207,-99) , 
0, 0.491424, 0, 0, 0.509019,-99) , 
5, -0.428566, 1, 0, 0.51432,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0410556);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488709,-99) , 
2, -0.0707239, 1, 0, 0.494164,-99) , 
NN(
0, 
0, 
-1, 0.42858, 0, -1, 0.461025,-99) , 
0, 0.502444, 1, 0, 0.487657,-99) , 
0, 0.489519, 1, 0, 0.490899,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0459805);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.87756, 0, 1, 0.567551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495492,-99) , 
2, 0.00801972, 0, 0, 0.511401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470684,-99) , 
0, 0.493328, 1, 0, 0.481675,-99) , 
2, -0.0659763, 0, 0, 0.505618,-99) , 
5, -0.714282, 1, 0, 0.510991,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0561374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428589,-99) , 
2, 0.0444758, 1, 0, 0.522249,-99) , 
3, 2.51491, 0, 0, 0.548458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492923,-99) , 
2, -0.0091646, 1, 0, 0.503734,-99) , 
NN(
0, 
0, 
-1, 3.48361, 1, -1, 0.451095,-99) , 
2, -0.0829858, 0, 0, 0.495124,-99) , 
5, 0.047615, 1, 0, 0.50321,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0523231);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.76413, 1, 1, 0.523131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483763,-99) , 
5, -0.782285, 1, 0, 0.513327,-99) , 
NN(
0, 
0, 
-1, 0.501901, 1, -1, 0.445633,-99) , 
3, 1.85409, 0, 0, 0.47352,-99) , 
5, -0.238092, 0, 0, 0.515734,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.06105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495777, 0, 1, 0.525653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480736,-99) , 
3, 3.01699, 0, 0, 0.496614,-99) , 
0, 0.499042, 1, 0, 0.513228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460907,-99) , 
5, 0.619014, 1, 0, 0.480937,-99) , 
NN(
0, 
0, 
-1, 1.93844, 0, -1, 0.415269,-99) , 
0, 0.502851, 1, 0, 0.469013,-99) , 
1, -0.00116413, 0, 0, 0.499255,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0289113);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00633324, 1, 1, 0.563017,-99) , 
NN(
NN(
0, 
0, 
-1, 0.396817, 1, 1, 0.508734,-99) , 
NN(
0, 
0, 
-1, 0.497406, 1, -1, 0.466531,-99) , 
5, -0.809429, 0, 0, 0.505426,-99) , 
0, 0.504757, 0, 0, 0.509583,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0327286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464205,-99) , 
2, 0.0378106, 1, 0, 0.49706,-99) , 
2, 0.198873, 0, 0, 0.499907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421686,-99) , 
0, 0.489519, 0, 0, 0.496867,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0507218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468578,-99) , 
5, -0.797833, 1, 0, 0.512221,-99) , 
5, -0.292498, 0, 0, 0.536716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489402,-99) , 
3, 3.02898, 1, 0, 0.506117,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.410256,-99) , 
5, 0.428604, 0, 0, 0.499486,-99) , 
5, 0.142866, 1, 0, 0.505308,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0509024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497203,-99) , 
4, 0.999999, 0, 0, 0.51504,-99) , 
NN(
0, 
0, 
-1, 0.428546, 0, -1, 0.472172,-99) , 
4, 0.999977, 0, 0, 0.49791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453018,-99) , 
4, 0.999524, 0, 0, 0.492896,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0353627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.27599, 0, 1, 0.55746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440135,-99) , 
0, 0.491424, 0, 0, 0.50056,-99) , 
5, 0.310716, 1, 0, 0.506869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426341,-99) , 
0, 0.497139, 1, 0, 0.455588,-99) , 
5, -0.809489, 0, 0, 0.502477,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0401807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498756,-99) , 
5, 0.904666, 0, 0, 0.5084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441952,-99) , 
4, 0.999887, 0, 0, 0.498825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457385,-99) , 
4, 0.999524, 0, 0, 0.494238,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0486971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502534, 1, 1, 0.544627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429356,-99) , 
0, 0.502536, 0, 0, 0.46848,-99) , 
2, 0.0583883, 1, 0, 0.526532,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489158, 0, 1, 0.544324,-99) , 
NN(
0, 
0, 
-1, -0.0436659, 0, -1, 0.487601,-99) , 
0, 0.490562, 1, 0, 0.492077,-99) , 
0, 0.499995, 0, 0, 0.503548,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0486693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489655, 0, 1, 0.562574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487982,-99) , 
2, 0.070333, 1, 0, 0.544216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493742,-99) , 
5, 0.809469, 1, 0, 0.515059,-99) , 
NN(
0, 
0, 
-1, 0.714371, 0, -1, 0.478139,-99) , 
0, 0.49818, 0, 0, 0.498167,-99) , 
0, 0.492376, 1, 0, 0.503009,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0328175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495228, 0, 1, 0.556698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485792,-99) , 
0, 0.503793, 1, 0, 0.49855,-99) , 
0, 0.500937, 1, 0, 0.538641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459953,-99) , 
3, 3.24516, 1, 0, 0.498999,-99) , 
0, 0.505709, 0, 0, 0.501779,-99) , 
3, 3.76599, 0, 0, 0.510683,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0545012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42071,-99) , 
0, 0.490789, 0, 0, 0.503998,-99) , 
5, -0.523782, 1, 0, 0.51405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483327,-99) , 
5, 0.564613, 1, 0, 0.489557,-99) , 
NN(
0, 
0, 
-1, 1.49143, 1, -1, 0.44684,-99) , 
5, -0.523809, 0, 0, 0.484137,-99) , 
0, 0.497138, 1, 0, 0.495992,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0570059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.690314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476042,-99) , 
5, -0.501138, 1, 0, 0.529371,-99) , 
5, -0.0476302, 0, 0, 0.556374,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00398994, 0, 1, 0.518315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432351,-99) , 
6, 0.00644715, 1, 0, 0.514948,-99) , 
5, 0.333319, 1, 0, 0.52243,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0326646);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489747,-99) , 
5, -0.333349, 1, 0, 0.494757,-99) , 
3, 7.32567, 0, 0, 0.497488,-99) , 
2, 0.190435, 0, 0, 0.500597,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0409482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418902,-99) , 
0, 0.502852, 1, 0, 0.505231,-99) , 
3, 0.812509, 1, 0, 0.533115,-99) , 
NN(
NN(
0, 
0, 
-1, 0.764168, 1, 1, 0.523855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491059,-99) , 
1, -0.00387777, 1, 0, 0.494935,-99) , 
2, -0.0732547, 1, 0, 0.499676,-99) , 
5, -0.238066, 1, 0, 0.503963,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0414991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714207, 1, 1, 0.540353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493828,-99) , 
5, 0.904704, 0, 0, 0.503593,-99) , 
0, 0.501901, 0, 0, 0.510187,-99) , 
NN(
0, 
0, 
-1, -0.217217, 1, -1, 0.463207,-99) , 
2, -0.0829858, 0, 0, 0.502424,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0576791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523742, 1, 1, 0.569267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48139,-99) , 
5, 0.428554, 0, 0, 0.51144,-99) , 
1, 0.00339227, 0, 0, 0.517052,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452235,-99) , 
0, 0.501127, 1, 0, 0.50784,-99) , 
NN(
0, 
0, 
-1, -0.138532, 1, -1, 0.446515,-99) , 
0, 0.49523, 0, 0, 0.48714,-99) , 
2, -0.0710868, 0, 0, 0.511643,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0404133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497614,-99) , 
5, 0.814013, 0, 0, 0.509583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475546,-99) , 
5, 0.90473, 1, 0, 0.500719,-99) , 
NN(
0, 
0, 
-1, 0.714337, 0, -1, 0.461447,-99) , 
2, -0.0710868, 0, 0, 0.493458,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0472959);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.519991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447355,-99) , 
4, 0.999524, 0, 0, 0.511896,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0604819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500748, 0, 1, 0.521029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45039,-99) , 
0, 0.50329, 0, 0, 0.481573,-99) , 
0, 0.501128, 1, 0, 0.503877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472394,-99) , 
0, 0.493511, 1, 0, 0.516749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457644,-99) , 
2, -0.0597075, 1, 0, 0.465828,-99) , 
1, -0.00202648, 1, 0, 0.475767,-99) , 
0, 0.497138, 0, 0, 0.492295,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.037737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475573,-99) , 
5, 0.685545, 0, 0, 0.500513,-99) , 
5, 0.056687, 1, 0, 0.504889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508937,-99) , 
NN(
0, 
0, 
-1, -0.79593, 1, -1, 0.440094,-99) , 
0, 0.497139, 1, 0, 0.466591,-99) , 
5, -0.523809, 0, 0, 0.500248,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0470357);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496183,-99) , 
0, 0.501082, 1, 0, 0.530547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487146,-99) , 
5, 0.0476218, 1, 0, 0.492852,-99) , 
2, -0.0710868, 1, 0, 0.499006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479252,-99) , 
5, 0.836779, 1, 0, 0.491023,-99) , 
NN(
0, 
0, 
-1, 0.0903461, 1, -1, 0.443219,-99) , 
5, 0.714216, 0, 0, 0.471512,-99) , 
0, 0.496185, 0, 0, 0.489852,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0423401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50217, 1, 1, 0.546533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430884,-99) , 
2, 0.138038, 0, 0, 0.480668,-99) , 
0, 0.496184, 0, 0, 0.5221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489574,-99) , 
5, -0.292515, 1, 0, 0.493132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444477,-99) , 
5, -0.809519, 0, 0, 0.48912,-99) , 
2, 0.0706187, 0, 0, 0.494617,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0436763);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483292,-99) , 
2, -0.0712347, 0, 0, 0.518289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470905,-99) , 
5, 0.727877, 0, 0, 0.493108,-99) , 
0, 0.49809, 1, 0, 0.505405,-99) , 
5, -0.904755, 1, 0, 0.507556,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0530005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.310663, 1, 1, 0.541516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491727,-99) , 
1, 0.00234347, 0, 0, 0.503723,-99) , 
0, 0.500947, 0, 0, 0.51411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528487,-99) , 
NN(
0, 
0, 
-1, 0.49904, 1, -1, 0.470081,-99) , 
5, 0.863939, 1, 0, 0.483475,-99) , 
5, 0.809512, 1, 0, 0.499574,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.03422);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.671823, 1, 1, 0.512621,-99) , 
NN(
0, 
0, 
-1, 0.499036, 1, -1, 0.446825,-99) , 
3, 5.91202, 1, 0, 0.50535,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0263305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497299,-99) , 
3, 5.42778, 0, 0, 0.502714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469381,-99) , 
4, 0.999528, 0, 0, 0.498973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429773,-99) , 
5, -0.904754, 0, 0, 0.495356,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0311243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.736837, 0, 1, 0.596903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476462,-99) , 
5, -0.891121, 0, 0, 0.539962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45236,-99) , 
3, 7.42489, 1, 0, 0.500186,-99) , 
NN(
0, 
0, 
-1, 0.505846, 1, -1, 0.454172,-99) , 
0, 0.504757, 1, 0, 0.496902,-99) , 
5, -0.428547, 1, 0, 0.501916,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0455821);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47869,-99) , 
1, -0.00116413, 0, 0, 0.514664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485129,-99) , 
0, 0.500947, 0, 0, 0.492822,-99) , 
5, 0.714273, 1, 0, 0.501125,-99) , 
2, -0.215157, 1, 0, 0.503676,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0511194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498944,-99) , 
5, 0.727835, 1, 0, 0.510612,-99) , 
5, 0.428523, 1, 0, 0.5229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470763,-99) , 
3, 3.23273, 1, 0, 0.519691,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.477869,-99) , 
3, 2.19084, 0, 0, 0.489819,-99) , 
3, 3.75356, 0, 0, 0.497793,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.029117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494691, 0, 1, 0.570025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477872,-99) , 
0, 0.503124, 0, 0, 0.504426,-99) , 
0, 0.499043, 1, 0, 0.536707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525304,-99) , 
NN(
0, 
0, 
-1, 0.263608, 0, -1, 0.494512,-99) , 
5, 0.954624, 0, 0, 0.499301,-99) , 
5, 0.0476234, 1, 0, 0.504758,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0416651);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.809439, 1, 1, 0.537344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495522,-99) , 
3, 3.02574, 0, 0, 0.502386,-99) , 
NN(
0, 
0, 
-1, 0.489439, 1, -1, 0.44172,-99) , 
0, 0.490562, 0, 0, 0.497138,-99) , 
0, 0.499995, 0, 0, 0.510188,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0511047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.551044, 1, 1, 0.517537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424358,-99) , 
5, -0.773227, 1, 0, 0.480621,-99) , 
5, -0.0476144, 0, 0, 0.51216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448787,-99) , 
5, 0.238122, 1, 0, 0.467453,-99) , 
0, 0.503804, 1, 0, 0.507194,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0540575);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479003,-99) , 
5, -0.809494, 0, 0, 0.518531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473044,-99) , 
0, 0.504757, 0, 0, 0.483332,-99) , 
0, 0.499043, 1, 0, 0.503413,-99) , 
1, -0.00526335, 1, 0, 0.506509,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0335433);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472503,-99) , 
0, 0.490156, 0, 0, 0.547608,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.506812,-99) , 
5, 0.809477, 1, 0, 0.527493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481106,-99) , 
5, 0.922888, 1, 0, 0.497397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413004,-99) , 
0, 0.50054, 0, 0, 0.458466,-99) , 
5, -0.619043, 0, 0, 0.493172,-99) , 
0, 0.495235, 1, 0, 0.501485,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0375373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483122,-99) , 
3, 1.50891, 1, 0, 0.493354,-99) , 
0, 0.505709, 0, 0, 0.495918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430858,-99) , 
3, 7.41165, 1, 0, 0.492013,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0235208);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490334, 0, 1, 0.518806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494361,-99) , 
0, 0.494507, 1, 0, 0.497591,-99) , 
NN(
0, 
0, 
-1, -0.292571, 1, -1, 0.469324,-99) , 
5, 0.142829, 0, 0, 0.492886,-99) , 
0, 0.491423, 1, 0, 0.494714,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0394797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489759,-99) , 
5, 0.0611882, 0, 0, 0.545424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495342,-99) , 
0, 0.498106, 0, 0, 0.507703,-99) , 
5, 0.714217, 1, 0, 0.519318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499235,-99) , 
6, 0.00644697, 0, 0, 0.504648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44008,-99) , 
3, 0.554553, 1, 0, 0.464539,-99) , 
3, 0.948555, 0, 0, 0.49099,-99) , 
3, 3.01699, 0, 0, 0.500138,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0529587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00116413, 1, 1, 0.539988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490046,-99) , 
0, 0.496229, 0, 0, 0.508633,-99) , 
5, 0.714258, 1, 0, 0.52,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430671,-99) , 
0, 0.505709, 1, 0, 0.515957,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0418509);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.33336, 1, 1, 0.51841,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488193,-99) , 
0, 0.503532, 0, 0, 0.4965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398204,-99) , 
2, 0.123395, 0, 0, 0.459689,-99) , 
2, 0.0562948, 1, 0, 0.488781,-99) , 
0, 0.499043, 1, 0, 0.505575,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0539063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470515,-99) , 
3, 1.42137, 1, 0, 0.503778,-99) , 
0, 0.492376, 1, 0, 0.517688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520008,-99) , 
NN(
0, 
0, 
-1, 0.500718, 1, -1, 0.479423,-99) , 
0, 0.503804, 0, 0, 0.483293,-99) , 
5, 0.523807, 1, 0, 0.49117,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0552946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491679,-99) , 
2, 0.0948533, 1, 0, 0.517235,-99) , 
5, 0.492082, 1, 0, 0.521241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41725,-99) , 
2, -0.0616041, 0, 0, 0.500765,-99) , 
NN(
0, 
0, 
-1, 0.164027, 0, -1, 0.437633,-99) , 
5, -0.111111, 1, 0, 0.484169,-99) , 
5, 0.333321, 0, 0, 0.513901,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0451896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493056, 1, 1, 0.515671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429018,-99) , 
0, 0.494418, 0, 0, 0.478707,-99) , 
5, -0.142859, 0, 0, 0.510646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504564,-99) , 
NN(
0, 
0, 
-1, 2.491, 0, -1, 0.451666,-99) , 
5, 0.04758, 1, 0, 0.462181,-99) , 
0, 0.501899, 1, 0, 0.500552,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.04289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.632879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48218,-99) , 
5, -0.881238, 0, 0, 0.506526,-99) , 
5, -0.750571, 0, 0, 0.554463,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00142063, 0, 1, 0.533752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492651,-99) , 
2, -0.0829858, 1, 0, 0.496353,-99) , 
0, 0.494281, 1, 0, 0.503148,-99) , 
5, 0.0476086, 1, 0, 0.510511,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0387884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50072, 0, 1, 0.523597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483124,-99) , 
5, 0.8368, 0, 0, 0.503502,-99) , 
5, 0.714258, 1, 0, 0.510655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43912,-99) , 
0, 0.489519, 0, 0, 0.507943,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0547297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473203,-99) , 
0, 0.498998, 0, 0, 0.490157,-99) , 
0, 0.48952, 1, 0, 0.49304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424329,-99) , 
5, -0.872971, 0, 0, 0.460564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401104,-99) , 
3, 2.50612, 1, 0, 0.443868,-99) , 
5, -0.619015, 0, 0, 0.487614,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0509837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469769,-99) , 
0, 0.490153, 0, 0, 0.517338,-99) , 
3, 5.26465, 0, 0, 0.524652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480599,-99) , 
0, 0.499753, 1, 0, 0.497277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419317,-99) , 
0, 0.495823, 0, 0, 0.49173,-99) , 
0, 0.495233, 1, 0, 0.499994,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0470328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809452, 1, 1, 0.543841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45318,-99) , 
2, -0.147848, 1, 0, 0.502367,-99) , 
2, -0.080818, 0, 0, 0.531614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470824,-99) , 
0, 0.499042, 1, 0, 0.487543,-99) , 
3, 0.414851, 1, 0, 0.492413,-99) , 
3, 3.21294, 0, 0, 0.5042,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0332076);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489066, 0, 1, 0.554227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48804,-99) , 
5, 0.809506, 1, 0, 0.498764,-99) , 
0, 0.505301, 0, 0, 0.502504,-99) , 
0, 0.491425, 1, 0, 0.506359,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0365316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.219939, 0, 1, 0.571765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464156,-99) , 
5, 0.686413, 0, 0, 0.49772,-99) , 
5, 0.401346, 1, 0, 0.502476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422766,-99) , 
2, 0.00280646, 0, 0, 0.459054,-99) , 
0, 0.496185, 1, 0, 0.473171,-99) , 
5, -0.142863, 0, 0, 0.49813,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0358279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486925,-99) , 
2, -0.0505852, 1, 0, 0.511403,-99) , 
0, 0.503803, 0, 0, 0.521758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495707,-99) , 
5, 0.591865, 1, 0, 0.500484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454022,-99) , 
0, 0.503804, 1, 0, 0.495841,-99) , 
5, 0.428594, 1, 0, 0.50115,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0597569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619155, 1, 1, 0.551992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483446,-99) , 
2, 0.0780681, 0, 0, 0.496156,-99) , 
0, 0.502172, 1, 0, 0.519893,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497047, 1, 1, 0.526497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475439,-99) , 
3, 0.441179, 1, 0, 0.481317,-99) , 
3, 3.40838, 0, 0, 0.492929,-99) , 
0, 0.499995, 0, 0, 0.501952,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0580759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493664,-99) , 
5, 0.333324, 0, 0, 0.541898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446979,-99) , 
0, 0.504227, 0, 0, 0.487343,-99) , 
0, 0.503168, 1, 0, 0.513247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526639,-99) , 
NN(
0, 
0, 
-1, 0.494598, 1, -1, 0.472835,-99) , 
2, 0.199145, 0, 0, 0.475579,-99) , 
0, 0.500946, 0, 0, 0.485415,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.056087);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485271,-99) , 
3, 1.33196, 0, 0, 0.507355,-99) , 
NN(
0, 
0, 
-1, 2.36382, 1, -1, 0.455362,-99) , 
5, -0.428497, 0, 0, 0.498872,-99) , 
NN(
0, 
0, 
-1, 0.71432, 0, -1, 0.460417,-99) , 
3, 3.75356, 1, 0, 0.488847,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0359499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490308,-99) , 
5, 0.904683, 1, 0, 0.505922,-99) , 
NN(
0, 
0, 
-1, 0.49487, 0, -1, 0.476073,-99) , 
2, 0.0709487, 1, 0, 0.500808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519848,-99) , 
NN(
0, 
0, 
-1, 0.504504, 0, -1, 0.451685,-99) , 
0, 0.503532, 1, 0, 0.464734,-99) , 
0, 0.502852, 1, 0, 0.495185,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0515971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.662657, 0, 1, 0.560058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473117,-99) , 
1, 0.00470502, 1, 0, 0.546516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482647,-99) , 
6, 0.00147003, 0, 0, 0.49819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441037,-99) , 
6, 0.0051476, 1, 0, 0.49452,-99) , 
5, 0.333337, 1, 0, 0.503894,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0442343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489264,-99) , 
5, 0.714794, 1, 0, 0.509765,-99) , 
0, 0.493329, 1, 0, 0.522124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48792,-99) , 
3, 0.467529, 1, 0, 0.491379,-99) , 
NN(
0, 
0, 
-1, 0.000264572, 1, -1, 0.430952,-99) , 
0, 0.504757, 1, 0, 0.48715,-99) , 
3, 3.76599, 0, 0, 0.495648,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0380443);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.954645, 1, 1, 0.519579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533358,-99) , 
NN(
0, 
0, 
-1, 5.50254, 1, -1, 0.48237,-99) , 
3, 6.40211, 0, 0, 0.486186,-99) , 
5, 0.904747, 0, 0, 0.495105,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0651241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.203102, 0, 1, 0.576566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469352,-99) , 
0, 0.494281, 0, 0, 0.510419,-99) , 
5, 0.591828, 1, 0, 0.520282,-99) , 
NN(
0, 
0, 
-1, 2.36842, 1, -1, 0.452133,-99) , 
5, -0.42857, 0, 0, 0.510732,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0583459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.11561, 1, 1, 0.588859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497114,-99) , 
2, -0.0349872, 1, 0, 0.516946,-99) , 
5, -0.587303, 0, 0, 0.540659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472996,-99) , 
0, 0.500947, 1, 0, 0.519133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47866,-99) , 
2, 0.0159437, 0, 0, 0.492603,-99) , 
3, 3.78168, 0, 0, 0.499576,-99) , 
5, 0.238089, 1, 0, 0.506451,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0397534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495984, 0, 1, 0.514166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478109,-99) , 
0, 0.499839, 0, 0, 0.493591,-99) , 
0, 0.496865, 1, 0, 0.502164,-99) , 
NN(
0, 
0, 
-1, 0.506162, 0, -1, 0.447751,-99) , 
0, 0.503804, 1, 0, 0.49604,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0414412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.506116, 1, 1, 0.556218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494737,-99) , 
0, 0.499041, 1, 0, 0.51051,-99) , 
0, 0.504755, 0, 0, 0.514068,-99) , 
NN(
0, 
0, 
-1, 0.959173, 0, -1, 0.471149,-99) , 
5, 0.904739, 1, 0, 0.502828,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0402156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428539, 1, 1, 0.534874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462512,-99) , 
0, 0.499949, 1, 0, 0.499325,-99) , 
NN(
0, 
0, 
-1, 0.714206, 0, -1, 0.472489,-99) , 
0, 0.493963, 0, 0, 0.492728,-99) , 
0, 0.500947, 0, 0, 0.503451,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0430029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.103879, 0, 1, 0.513165,-99) , 
NN(
0, 
0, 
-1, -0.00135447, 1, -1, 0.438734,-99) , 
0, 0.505573, 1, 0, 0.504313,-99) , 
NN(
0, 
0, 
-1, 3.40838, 1, -1, 0.476604,-99) , 
0, 0.499043, 0, 0, 0.488325,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0517861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491448,-99) , 
4, 0.999998, 0, 0, 0.515093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356205,-99) , 
5, 0.618964, 0, 0, 0.483394,-99) , 
4, 0.999955, 0, 0, 0.506139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476942,-99) , 
4, 0.999524, 0, 0, 0.502922,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0467882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480853,-99) , 
5, -0.0476202, 0, 0, 0.505988,-99) , 
0, 0.504757, 0, 0, 0.510021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469309,-99) , 
3, 2.37891, 1, 0, 0.507083,-99) , 
NN(
0, 
0, 
-1, 0.500131, 0, -1, 0.440359,-99) , 
0, 0.497137, 1, 0, 0.466631,-99) , 
2, 0.0582656, 1, 0, 0.501307,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0434354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496302,-99) , 
0, 0.499995, 1, 0, 0.514963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446228,-99) , 
0, 0.499995, 0, 0, 0.468953,-99) , 
3, 4.981, 1, 0, 0.510401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447493,-99) , 
3, 7.41242, 1, 0, 0.506492,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0550411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.539107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449029,-99) , 
2, -0.126761, 0, 0, 0.529018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487037,-99) , 
3, 1.65167, 0, 0, 0.511181,-99) , 
NN(
0, 
0, 
-1, 0.95466, 1, -1, 0.481172,-99) , 
5, 0.863991, 1, 0, 0.493534,-99) , 
5, 0.71428, 1, 0, 0.506663,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0372804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414623,-99) , 
0, 0.505265, 0, 0, 0.494906,-99) , 
0, 0.50453, 1, 0, 0.52797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495985,-99) , 
0, 0.500169, 0, 0, 0.502218,-99) , 
NN(
0, 
0, 
-1, 0.428556, 0, -1, 0.455526,-99) , 
0, 0.502262, 1, 0, 0.49791,-99) , 
0, 0.503804, 0, 0, 0.501085,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0285659);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485016,-99) , 
2, 0.138109, 1, 0, 0.525271,-99) , 
NN(
0, 
0, 
-1, -0.81396, 0, -1, 0.496602,-99) , 
2, 0.0706187, 0, 0, 0.501431,-99) , 
5, -0.904656, 1, 0, 0.505881,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.033306);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.51199, 1, 1, 0.551565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496762,-99) , 
0, 0.499044, 1, 0, 0.506574,-99) , 
NN(
0, 
0, 
-1, 2.08527, 0, -1, 0.463578,-99) , 
5, 0.483012, 0, 0, 0.499151,-99) , 
5, -0.809517, 1, 0, 0.502927,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0623783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49714, 1, 1, 0.557631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479588,-99) , 
5, 0.705158, 0, 0, 0.518511,-99) , 
5, 0.523749, 1, 0, 0.527162,-99) , 
NN(
NN(
0, 
0, 
-1, 0.4931, 1, 1, 0.521522,-99) , 
NN(
0, 
0, 
-1, 0.428617, 0, -1, 0.472183,-99) , 
0, 0.498089, 1, 0, 0.495406,-99) , 
2, 0.0534224, 1, 0, 0.520465,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0500766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492161,-99) , 
5, 0.464836, 0, 0, 0.516722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4723,-99) , 
5, 0.891148, 0, 0, 0.502173,-99) , 
5, 0.80951, 1, 0, 0.509784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482318,-99) , 
0, 0.497137, 1, 0, 0.50579,-99) , 
NN(
0, 
0, 
-1, -0.108593, 0, -1, 0.457299,-99) , 
2, -0.153078, 1, 0, 0.484033,-99) , 
2, -0.0863569, 0, 0, 0.505778,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0296181);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.174599, 0, 1, 0.535079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49868,-99) , 
0, 0.492378, 1, 0, 0.501987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436849,-99) , 
0, 0.499995, 0, 0, 0.462721,-99) , 
5, 0.619087, 0, 0, 0.49697,-99) , 
5, 0.33333, 1, 0, 0.504071,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0677592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809517, 1, 1, 0.538898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475251,-99) , 
0, 0.49809, 0, 0, 0.508878,-99) , 
3, 1.49788, 1, 0, 0.526343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480316,-99) , 
0, 0.496186, 1, 0, 0.494583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4051,-99) , 
5, -0.428563, 0, 0, 0.486692,-99) , 
3, 2.76218, 1, 0, 0.511656,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.044377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714286, 1, 1, 0.52664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486063,-99) , 
0, 0.493253, 1, 0, 0.493696,-99) , 
0, 0.500721, 0, 0, 0.503044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421651,-99) , 
0, 0.489519, 0, 0, 0.499864,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0342716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43029, 1, 1, 0.578225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45467,-99) , 
5, -0.909275, 0, 0, 0.477058,-99) , 
5, -0.72786, 0, 0, 0.529074,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.53038,-99) , 
NN(
0, 
0, 
-1, 0.669598, 0, -1, 0.493156,-99) , 
5, 0.591838, 1, 0, 0.495779,-99) , 
5, 0.428571, 1, 0, 0.502435,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0612858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.05313, 0, 1, 0.583631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427593,-99) , 
0, 0.503803, 1, 0, 0.551383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457471,-99) , 
0, 0.493328, 0, 0, 0.505525,-99) , 
NN(
0, 
0, 
-1, -0.00539972, 1, -1, 0.427547,-99) , 
1, 0.00384307, 1, 0, 0.49983,-99) , 
5, -0.0476219, 1, 0, 0.506953,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0581852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473739,-99) , 
0, 0.498803, 0, 0, 0.524041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4483,-99) , 
3, 2.81608, 0, 0, 0.48904,-99) , 
0, 0.503079, 1, 0, 0.514287,-99) , 
NN(
0, 
0, 
-1, -0.00309666, 0, -1, 0.480371,-99) , 
0, 0.49809, 0, 0, 0.497064,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0505164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492603, 0, 1, 0.578074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483309,-99) , 
5, 0.714298, 0, 0, 0.522998,-99) , 
5, 0.142832, 1, 0, 0.530807,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497808,-99) , 
0, 0.500368, 0, 0, 0.509749,-99) , 
NN(
0, 
0, 
-1, 0.502673, 0, -1, 0.478688,-99) , 
0, 0.501129, 1, 0, 0.496126,-99) , 
0, 0.497138, 1, 0, 0.509952,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0511401);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714205, 1, 1, 0.548421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489879,-99) , 
3, 1.03448, 0, 0, 0.509563,-99) , 
NN(
0, 
0, 
-1, 0.500539, 1, -1, 0.474925,-99) , 
3, 2.84573, 1, 0, 0.497361,-99) , 
0, 0.5019, 0, 0, 0.507284,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0652864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489572,-99) , 
5, -0.714199, 0, 0, 0.547005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446481,-99) , 
0, 0.490562, 0, 0, 0.512837,-99) , 
1, 3.43699e-05, 1, 0, 0.529383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479505,-99) , 
0, 0.502534, 1, 0, 0.500737,-99) , 
NN(
0, 
0, 
-1, 0.502172, 1, -1, 0.472199,-99) , 
5, 0.523902, 1, 0, 0.479919,-99) , 
0, 0.499995, 1, 0, 0.511877,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0406392);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505619, 1, 1, 0.53694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481352,-99) , 
5, 0.845798, 1, 0, 0.498882,-99) , 
NN(
0, 
0, 
-1, 0.496868, 0, -1, 0.464318,-99) , 
5, -0.619018, 0, 0, 0.495213,-99) , 
0, 0.503804, 0, 0, 0.499514,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0350514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490335, 0, 1, 0.545137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477338,-99) , 
0, 0.497455, 0, 0, 0.494038,-99) , 
0, 0.492376, 1, 0, 0.499419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40712,-99) , 
0, 0.499042, 0, 0, 0.44292,-99) , 
1, 0.00442927, 1, 0, 0.495395,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0525457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428944,-99) , 
0, 0.500948, 1, 0, 0.498726,-99) , 
5, -0.746001, 0, 0, 0.532927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517946,-99) , 
NN(
0, 
0, 
-1, 0.999977, 0, -1, 0.480127,-99) , 
4, 0.999524, 1, 0, 0.484941,-99) , 
5, -0.238077, 1, 0, 0.491007,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0384331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.515672,-99) , 
NN(
0, 
0, 
-1, 0.714263, 0, -1, 0.476868,-99) , 
4, 0.999955, 0, 0, 0.504935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469276,-99) , 
4, 0.999524, 0, 0, 0.500897,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0189004);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497856,-99) , 
0, 0.491061, 1, 0, 0.500278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434766,-99) , 
0, 0.505709, 1, 0, 0.497491,-99) , 
2, 0.216506, 0, 0, 0.50055,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0650067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496864, 0, 1, 0.527551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427892,-99) , 
3, 2.52019, 0, 0, 0.471767,-99) , 
0, 0.503803, 1, 0, 0.522097,-99) , 
NN(
NN(
0, 
0, 
-1, 1.53158, 0, 1, 0.540426,-99) , 
NN(
0, 
0, 
-1, 0.495098, 1, -1, 0.440094,-99) , 
0, 0.498091, 0, 0, 0.488361,-99) , 
5, -0.42855, 0, 0, 0.517765,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0475986);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.351477, 0, 1, 0.547659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481737,-99) , 
5, 0.825485, 0, 0, 0.49568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453824,-99) , 
5, 0.963705, 1, 0, 0.490466,-99) , 
5, 0.238107, 1, 0, 0.499649,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0547954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491655,-99) , 
0, 0.498321, 0, 0, 0.518212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472707,-99) , 
0, 0.50576, 0, 0, 0.480055,-99) , 
0, 0.501128, 1, 0, 0.504923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435155,-99) , 
5, 0.0475926, 0, 0, 0.490747,-99) , 
NN(
0, 
0, 
-1, 0.494662, 0, -1, 0.445686,-99) , 
0, 0.494144, 1, 0, 0.478978,-99) , 
0, 0.495233, 0, 0, 0.498191,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0436276);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486414,-99) , 
5, -0.183703, 0, 0, 0.515012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481871,-99) , 
2, 0.0272693, 0, 0, 0.492138,-99) , 
5, 0.714263, 1, 0, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462181,-99) , 
2, -0.215871, 0, 0, 0.498349,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.035191);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.134464, 1, 1, 0.511505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487322,-99) , 
0, 0.496188, 1, 0, 0.502659,-99) , 
NN(
0, 
0, 
-1, 0.428534, 0, -1, 0.468785,-99) , 
2, -0.0659763, 1, 0, 0.478444,-99) , 
3, 2.77013, 1, 0, 0.499244,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0459152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0180171, 1, 1, 0.602146,-99) , 
NN(
0, 
0, 
-1, 0.505929, 0, -1, 0.458592,-99) , 
0, 0.504892, 1, 0, 0.535849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479065,-99) , 
0, 0.497877, 1, 0, 0.490551,-99) , 
NN(
0, 
0, 
-1, 0.490033, 1, -1, 0.453314,-99) , 
0, 0.491242, 0, 0, 0.487383,-99) , 
0, 0.502852, 0, 0, 0.494705,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.031479);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428671, 1, 1, 0.561403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467464,-99) , 
5, 0.523795, 0, 0, 0.496095,-99) , 
0, 0.505709, 0, 0, 0.49896,-99) , 
1, -0.00406158, 1, 0, 0.50291,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0341037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474875,-99) , 
3, 3.4122, 1, 0, 0.51122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485002,-99) , 
0, 0.500131, 0, 0, 0.496506,-99) , 
0, 0.497138, 1, 0, 0.502415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458677,-99) , 
2, 0.212852, 1, 0, 0.499808,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0278074);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552913,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500034, 1, 1, 0.513061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464488,-99) , 
0, 0.496069, 1, 0, 0.493414,-99) , 
0, 0.497002, 0, 0, 0.505892,-99) , 
0, 0.490471, 1, 0, 0.508139,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0507471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48713,-99) , 
3, 5.03297, 0, 0, 0.493963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450658,-99) , 
4, 0.999887, 0, 0, 0.4877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436326,-99) , 
4, 0.999525, 0, 0, 0.482302,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0272031);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.618959, 1, 1, 0.530537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604638,-99) , 
NN(
0, 
0, 
-1, 0.501538, 1, -1, 0.492246,-99) , 
0, 0.489065, 1, 0, 0.495562,-99) , 
0, 0.502852, 0, 0, 0.500804,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0417983);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46583,-99) , 
0, 0.49487, 0, 0, 0.492953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436356,-99) , 
5, 0.142755, 1, 0, 0.459123,-99) , 
0, 0.502851, 1, 0, 0.487706,-99) , 
1, -0.00532441, 1, 0, 0.490469,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0558327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.545204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443575,-99) , 
3, 4.01052, 1, 0, 0.52843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485846,-99) , 
2, 0.0522896, 0, 0, 0.494792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453106,-99) , 
4, 0.999524, 0, 0, 0.489198,-99) , 
5, 0.5238, 1, 0, 0.49801,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.024639);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496298,-99) , 
5, 0.523982, 1, 0, 0.521243,-99) , 
NN(
0, 
0, 
-1, 0.504213, 1, -1, 0.492282,-99) , 
0, 0.493328, 1, 0, 0.496253,-99) , 
2, -0.215157, 1, 0, 0.499036,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0365341);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523798, 0, 1, 0.542333,-99) , 
NN(
NN(
0, 
0, 
-1, 0.691606, 1, 1, 0.506515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468247,-99) , 
2, 0.0520401, 0, 0, 0.481794,-99) , 
5, 0.619039, 0, 0, 0.499298,-99) , 
2, -0.0732547, 1, 0, 0.506535,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0614014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.11763, 1, 1, 0.580691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441915,-99) , 
0, 0.495237, 1, 0, 0.473745,-99) , 
5, -0.659863, 0, 0, 0.523001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488599,-99) , 
5, 0.863928, 0, 0, 0.510247,-99) , 
NN(
0, 
0, 
-1, 0.673388, 0, -1, 0.479951,-99) , 
3, 2.78912, 0, 0, 0.491571,-99) , 
5, 0.428554, 1, 0, 0.497756,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0478604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494961, 0, 1, 0.548772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453147,-99) , 
0, 0.49292, 1, 0, 0.488674,-99) , 
2, 0.0829949, 1, 0, 0.537533,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504115, 1, 1, 0.530452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487543,-99) , 
3, 3.02443, 1, 0, 0.49988,-99) , 
0, 0.502716, 0, 0, 0.506816,-99) , 
0, 0.496185, 1, 0, 0.51659,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0655914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.543979, 1, 1, 0.532143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437699,-99) , 
2, -0.081954, 0, 0, 0.495507,-99) , 
3, 3.02574, 1, 0, 0.519893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485457,-99) , 
3, 2.50457, 1, 0, 0.510979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426111,-99) , 
3, 2.78372, 0, 0, 0.465974,-99) , 
0, 0.503804, 0, 0, 0.488386,-99) , 
0, 0.5019, 1, 0, 0.513282,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.061479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497817, 1, 1, 0.528415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446443,-99) , 
3, 2.83248, 0, 0, 0.473841,-99) , 
0, 0.496184, 0, 0, 0.509977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468455,-99) , 
0, 0.49645, 0, 0, 0.488051,-99) , 
NN(
0, 
0, 
-1, 0.502159, 0, -1, 0.459075,-99) , 
0, 0.499984, 1, 0, 0.478665,-99) , 
5, 0.714278, 1, 0, 0.490082,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0364401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.24419, 1, 1, 0.513584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486444,-99) , 
1, -0.00526335, 1, 0, 0.490971,-99) , 
5, 0.904738, 0, 0, 0.497078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448116,-99) , 
3, 7.4203, 1, 0, 0.493953,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0503279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477357,-99) , 
2, -0.0843733, 0, 0, 0.543967,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.502936,-99) , 
5, 0.809469, 1, 0, 0.524874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454917,-99) , 
5, 0.714209, 0, 0, 0.502056,-99) , 
NN(
0, 
0, 
-1, 3.24591, 1, -1, 0.478502,-99) , 
3, 3.7668, 0, 0, 0.484287,-99) , 
1, -0.00116413, 1, 0, 0.496362,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0566781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47334,-99) , 
3, 3.21261, 1, 0, 0.525496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487325,-99) , 
5, -0.0475762, 1, 0, 0.495091,-99) , 
2, 0.000247125, 1, 0, 0.507006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458409,-99) , 
2, -0.141625, 1, 0, 0.499549,-99) , 
NN(
0, 
0, 
-1, 0.49442, 1, -1, 0.44478,-99) , 
0, 0.49714, 0, 0, 0.475078,-99) , 
2, -0.0740473, 0, 0, 0.501139,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0502409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478552,-99) , 
3, 5.53494, 1, 0, 0.522232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494329,-99) , 
5, 0.927425, 1, 0, 0.513976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476401,-99) , 
0, 0.495279, 1, 0, 0.487274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434598,-99) , 
0, 0.492376, 0, 0, 0.479431,-99) , 
5, 0.619036, 0, 0, 0.503938,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0347426);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490955,-99) , 
2, -0.0505852, 1, 0, 0.497438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45832,-99) , 
4, 0.999525, 0, 0, 0.493335,-99) , 
0, 0.505709, 0, 0, 0.496139,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0260672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0475377, 1, 1, 0.508759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464115,-99) , 
2, 0.192505, 1, 0, 0.505828,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.459317,-99) , 
5, -0.809506, 0, 0, 0.501984,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0471011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482024,-99) , 
5, -0.23803, 0, 0, 0.548609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452667,-99) , 
0, 0.50571, 1, 0, 0.528078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467547,-99) , 
5, 0.238089, 0, 0, 0.501921,-99) , 
NN(
0, 
0, 
-1, 0.000508307, 0, -1, 0.455222,-99) , 
0, 0.500539, 1, 0, 0.496493,-99) , 
0, 0.5019, 0, 0, 0.502675,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.045656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50181, 0, 1, 0.522467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433904,-99) , 
3, 1.51343, 0, 0, 0.487401,-99) , 
5, 0.238057, 0, 0, 0.514944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549511,-99) , 
NN(
0, 
0, 
-1, 0.49191, 0, -1, 0.482291,-99) , 
0, 0.489383, 1, 0, 0.485491,-99) , 
0, 0.499995, 0, 0, 0.495158,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0379884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49682, 1, 1, 0.526954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465049,-99) , 
0, 0.491424, 0, 0, 0.520392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533222,-99) , 
NN(
0, 
0, 
-1, 0.836661, 0, -1, 0.489944,-99) , 
2, -0.0816723, 1, 0, 0.497048,-99) , 
5, 0.714207, 1, 0, 0.50563,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0402228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44103, 1, 1, 0.542788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469941,-99) , 
5, 0.265317, 0, 0, 0.509865,-99) , 
5, -0.714268, 1, 0, 0.512984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448142,-99) , 
2, -0.21311, 0, 0, 0.509333,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0479531);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485167,-99) , 
0, 0.492376, 0, 0, 0.528642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478623,-99) , 
1, -0.00084452, 1, 0, 0.494999,-99) , 
3, 1.91552, 0, 0, 0.511859,-99) , 
NN(
0, 
0, 
-1, 0.954645, 0, -1, 0.486542,-99) , 
5, 0.904748, 1, 0, 0.504921,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0437864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00361133, 0, 1, 0.531236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435849,-99) , 
0, 0.491424, 0, 0, 0.49712,-99) , 
3, 2.9186, 0, 0, 0.507356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448451,-99) , 
3, 2.55875, 1, 0, 0.490277,-99) , 
NN(
0, 
0, 
-1, 3.26642, 0, -1, 0.437377,-99) , 
0, 0.499996, 1, 0, 0.470583,-99) , 
2, 0.0706187, 1, 0, 0.501152,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0352595);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142738, 0, 1, 0.545079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489809,-99) , 
3, 3.21376, 1, 0, 0.535741,-99) , 
NN(
0, 
0, 
-1, 0.142846, 0, -1, 0.490287,-99) , 
0, 0.50326, 0, 0, 0.496725,-99) , 
0, 0.492376, 1, 0, 0.501757,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0504283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50285, 1, 1, 0.589858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479499,-99) , 
3, 3.75672, 0, 0, 0.499,-99) , 
3, 1.6555, 1, 0, 0.538059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499543,-99) , 
5, 0.870413, 1, 0, 0.509653,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.477556,-99) , 
5, 0.818579, 0, 0, 0.497872,-99) , 
5, 0.619036, 1, 0, 0.50854,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0354594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.614465, 1, 1, 0.541273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448053,-99) , 
5, -0.61898, 0, 0, 0.527467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498031,-99) , 
3, 0.651741, 1, 0, 0.505093,-99) , 
NN(
0, 
0, 
-1, 0.49872, 0, -1, 0.465183,-99) , 
3, 5.70056, 1, 0, 0.500193,-99) , 
0, 0.494281, 1, 0, 0.505424,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0380625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457296,-99) , 
3, 0.454496, 0, 0, 0.510981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468578,-99) , 
3, 7.39984, 1, 0, 0.50845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442083,-99) , 
0, 0.505709, 1, 0, 0.505519,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0467244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809494, 0, 1, 0.570862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487358,-99) , 
0, 0.496229, 1, 0, 0.515195,-99) , 
5, 0.333308, 1, 0, 0.5245,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505619, 1, 1, 0.522333,-99) , 
NN(
0, 
0, 
-1, 0.0602445, 1, -1, 0.480683,-99) , 
0, 0.504122, 0, 0, 0.486759,-99) , 
0, 0.497138, 1, 0, 0.50166,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.050228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.544269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474213,-99) , 
5, 0.428633, 0, 0, 0.5045,-99) , 
1, -0.00218438, 1, 0, 0.511214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561192,-99) , 
NN(
0, 
0, 
-1, 0.600919, 0, -1, 0.456493,-99) , 
5, 0.238093, 1, 0, 0.47217,-99) , 
2, -0.056514, 0, 0, 0.502753,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0408457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470485,-99) , 
5, -0.915341, 1, 0, 0.520472,-99) , 
5, -0.746019, 0, 0, 0.544442,-99) , 
NN(
NN(
0, 
0, 
-1, 0.000772149, 0, 1, 0.535942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468926,-99) , 
0, 0.499995, 1, 0, 0.490133,-99) , 
3, 5.83025, 0, 0, 0.495546,-99) , 
5, -0.238092, 1, 0, 0.501685,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0541228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491454,-99) , 
0, 0.499043, 0, 0, 0.504308,-99) , 
NN(
0, 
0, 
-1, 0.818563, 1, -1, 0.474937,-99) , 
1, 0.00107711, 1, 0, 0.494502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446048,-99) , 
1, -0.000887891, 0, 0, 0.518172,-99) , 
NN(
0, 
0, 
-1, 0.500629, 0, -1, 0.423897,-99) , 
0, 0.497138, 1, 0, 0.457721,-99) , 
5, 0.0476166, 0, 0, 0.488489,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0481645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462847,-99) , 
0, 0.504115, 1, 0, 0.510707,-99) , 
NN(
0, 
0, 
-1, 0.491521, 1, -1, 0.452582,-99) , 
0, 0.49292, 0, 0, 0.505776,-99) , 
0, 0.490471, 1, 0, 0.508925,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0521395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481494,-99) , 
2, -0.132086, 0, 0, 0.530928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477327,-99) , 
5, 0.909315, 0, 0, 0.491677,-99) , 
5, 0.80952, 1, 0, 0.510873,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505649, 1, 1, 0.508431,-99) , 
NN(
0, 
0, 
-1, 2.26872, 0, -1, 0.435329,-99) , 
0, 0.504667, 0, 0, 0.469512,-99) , 
0, 0.502852, 1, 0, 0.50413,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0340924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495713,-99) , 
0, 0.49673, 1, 0, 0.499101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455428,-99) , 
5, -0.809482, 0, 0, 0.49568,-99) , 
NN(
0, 
0, 
-1, -0.00136763, 0, -1, 0.468855,-99) , 
0, 0.496185, 0, 0, 0.486845,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0445333);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482654,-99) , 
2, 0.131856, 0, 0, 0.485563,-99) , 
2, 0.212852, 0, 0, 0.488607,-99) , 
3, 7.41242, 0, 0, 0.492451,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0480995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470285,-99) , 
5, 0.247208, 0, 0, 0.526969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493208,-99) , 
5, 0.788353, 1, 0, 0.498852,-99) , 
5, 0.682544, 1, 0, 0.505301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483783,-99) , 
0, 0.502716, 1, 0, 0.526001,-99) , 
NN(
0, 
0, 
-1, 0.493058, 1, -1, 0.412445,-99) , 
0, 0.499043, 0, 0, 0.46012,-99) , 
5, -0.333314, 0, 0, 0.498993,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0557265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499224, 0, 1, 0.525287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476617,-99) , 
2, -0.016843, 0, 0, 0.500977,-99) , 
0, 0.502852, 1, 0, 0.521734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413241,-99) , 
5, 0.618976, 0, 0, 0.473409,-99) , 
0, 0.501899, 0, 0, 0.493685,-99) , 
2, 0.0541421, 1, 0, 0.515863,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0366849);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487471,-99) , 
5, 0.308946, 1, 0, 0.492441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425332,-99) , 
5, -0.813993, 0, 0, 0.490231,-99) , 
5, -0.904755, 1, 0, 0.492972,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0467009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499677, 0, 1, 0.518689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47912,-99) , 
5, -0.755062, 1, 0, 0.490373,-99) , 
5, 0.71428, 0, 0, 0.508314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417304,-99) , 
0, 0.505709, 1, 0, 0.503856,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0519014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.39685, 1, 1, 0.526839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469183,-99) , 
5, -0.809424, 0, 0, 0.52232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48364,-99) , 
3, 3.41603, 0, 0, 0.492052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457839,-99) , 
2, 0.070333, 1, 0, 0.48549,-99) , 
0, 0.495234, 0, 0, 0.512679,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0535428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482226,-99) , 
0, 0.502851, 1, 0, 0.521309,-99) , 
5, 0.224483, 0, 0, 0.531392,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479094,-99) , 
0, 0.500943, 1, 0, 0.508343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469813,-99) , 
3, 3.38189, 0, 0, 0.489602,-99) , 
5, 0.809503, 0, 0, 0.500886,-99) , 
5, 0.428563, 1, 0, 0.506864,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0550128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461484,-99) , 
2, -0.0616012, 0, 0, 0.514279,-99) , 
5, -0.410412, 0, 0, 0.537181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47578,-99) , 
1, -0.000544935, 0, 0, 0.491481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443066,-99) , 
0, 0.502851, 0, 0, 0.455033,-99) , 
5, 0.745991, 0, 0, 0.480258,-99) , 
5, 0.238078, 1, 0, 0.489499,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.047867);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 1, 1, 0.531487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453623,-99) , 
0, 0.48948, 0, 0, 0.504383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467392,-99) , 
5, -0.333337, 1, 0, 0.474215,-99) , 
0, 0.49741, 1, 0, 0.487702,-99) , 
0, 0.504757, 0, 0, 0.490732,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0437053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.95757, 1, 1, 0.540599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491313,-99) , 
2, -0.164825, 1, 0, 0.498031,-99) , 
2, 0.0564175, 0, 0, 0.506137,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.470284,-99) , 
5, 0.904739, 1, 0, 0.49654,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0386555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.514778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46459,-99) , 
4, 0.999524, 0, 0, 0.508755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442662,-99) , 
5, -0.904754, 0, 0, 0.505352,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0573522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.0372, 1, 1, 0.552576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476309,-99) , 
1, -0.000708901, 0, 0, 0.497292,-99) , 
5, 0.727898, 1, 0, 0.51298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521263,-99) , 
NN(
0, 
0, 
-1, -0.755075, 1, -1, 0.440029,-99) , 
0, 0.500949, 0, 0, 0.46353,-99) , 
5, -0.428536, 0, 0, 0.506441,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0481826);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491468, 0, 1, 0.558472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491898,-99) , 
5, 0.950135, 1, 0, 0.510065,-99) , 
NN(
0, 
0, 
-1, 0.494553, 0, -1, 0.479087,-99) , 
5, 0.904727, 0, 0, 0.487541,-99) , 
0, 0.492376, 1, 0, 0.494495,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0395489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489976,-99) , 
0, 0.501401, 0, 0, 0.494272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4517,-99) , 
0, 0.506254, 0, 0, 0.467937,-99) , 
0, 0.502852, 1, 0, 0.490124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451524,-99) , 
2, 0.212621, 1, 0, 0.487878,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.048151);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.415701, 1, 1, 0.521737,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502889, 1, 1, 0.535572,-99) , 
NN(
0, 
0, 
-1, 0.619197, 0, -1, 0.474376,-99) , 
0, 0.499988, 0, 0, 0.496488,-99) , 
3, 3.21376, 1, 0, 0.513908,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0384003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495365,-99) , 
0, 0.50054, 1, 0, 0.531851,-99) , 
NN(
0, 
0, 
-1, 0.34694, 0, -1, 0.488887,-99) , 
5, -0.714241, 1, 0, 0.492389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460429,-99) , 
5, 0.78237, 1, 0, 0.478048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424599,-99) , 
5, -0.142853, 0, 0, 0.468246,-99) , 
0, 0.495233, 0, 0, 0.486233,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.051601);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.89115, 0, 1, 0.569713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461988,-99) , 
1, -0.0019101, 0, 0, 0.500728,-99) , 
NN(
0, 
0, 
-1, 0.608004, 1, -1, 0.463424,-99) , 
5, 0.659854, 0, 0, 0.492034,-99) , 
5, -0.42857, 1, 0, 0.50039,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0456585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493827, 1, 1, 0.518702,-99) , 
NN(
0, 
0, 
-1, 0.490789, 1, -1, 0.46697,-99) , 
0, 0.492376, 0, 0, 0.512807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460435,-99) , 
5, 0.95915, 0, 0, 0.48615,-99) , 
5, 0.904727, 1, 0, 0.505614,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0500908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498354,-99) , 
3, 2.2878, 1, 0, 0.541386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482279,-99) , 
3, 3.3914, 0, 0, 0.499719,-99) , 
2, -0.011451, 1, 0, 0.515325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485616,-99) , 
0, 0.495233, 0, 0, 0.504002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484492,-99) , 
0, 0.499042, 1, 0, 0.496325,-99) , 
5, 0.809515, 1, 0, 0.505925,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0550661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 0, 1, 0.590259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474174,-99) , 
0, 0.499993, 0, 0, 0.499789,-99) , 
3, 2.00627, 1, 0, 0.546916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490064,-99) , 
3, 2.85038, 0, 0, 0.50485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462698,-99) , 
0, 0.492376, 0, 0, 0.500597,-99) , 
5, 0.428572, 1, 0, 0.509365,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0316906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488476,-99) , 
5, 0.875596, 0, 0, 0.497453,-99) , 
5, -0.306087, 1, 0, 0.500162,-99) , 
NN(
0, 
0, 
-1, 1.34021, 0, -1, 0.465665,-99) , 
5, -0.714254, 0, 0, 0.496883,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0411553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.35132, 0, 1, 0.553013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458193,-99) , 
0, 0.505437, 1, 0, 0.528133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495484,-99) , 
0, 0.499275, 0, 0, 0.502336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428386,-99) , 
0, 0.501219, 1, 0, 0.497663,-99) , 
0, 0.5019, 0, 0, 0.503608,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0301688);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49678,-99) , 
5, 0.727881, 1, 0, 0.505817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45226,-99) , 
2, 0.21167, 1, 0, 0.502626,-99) , 
5, -0.904725, 1, 0, 0.505923,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0282215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.59634, 1, 1, 0.550126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484583,-99) , 
0, 0.489181, 1, 0, 0.506391,-99) , 
0, 0.490607, 0, 0, 0.531941,-99) , 
NN(
NN(
0, 
0, 
-1, 0.809503, 0, 1, 0.513487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458702,-99) , 
2, 0.0948533, 1, 0, 0.49714,-99) , 
0, 0.499451, 0, 0, 0.504437,-99) , 
0, 0.493328, 1, 0, 0.508401,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0454374);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489802,-99) , 
5, 0.714265, 1, 0, 0.504729,-99) , 
NN(
0, 
0, 
-1, 0.428433, 0, -1, 0.466999,-99) , 
0, 0.502852, 1, 0, 0.498789,-99) , 
2, 0.21167, 0, 0, 0.502233,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0414288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439483,-99) , 
3, 0.749179, 0, 0, 0.513123,-99) , 
5, -0.45126, 0, 0, 0.527053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489995,-99) , 
0, 0.493328, 1, 0, 0.495897,-99) , 
4, 0.999524, 1, 0, 0.499692,-99) , 
5, 0.0475976, 1, 0, 0.503608,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0484752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474234,-99) , 
0, 0.496175, 0, 0, 0.533009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484862,-99) , 
0, 0.502852, 1, 0, 0.506561,-99) , 
5, 0.619047, 1, 0, 0.509574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488501,-99) , 
5, -0.746026, 0, 0, 0.536483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426976,-99) , 
0, 0.503803, 0, 0, 0.4511,-99) , 
0, 0.496185, 1, 0, 0.477056,-99) , 
5, 0.333336, 0, 0, 0.503247,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0579044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.94598, 0, 1, 0.533335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455175,-99) , 
3, 6.30556, 1, 0, 0.525248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490901,-99) , 
1, -0.00084452, 1, 0, 0.505841,-99) , 
NN(
0, 
0, 
-1, 0.49487, 0, -1, 0.470576,-99) , 
3, 3.41177, 1, 0, 0.496216,-99) , 
0, 0.497138, 0, 0, 0.513324,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0544421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.542167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476361,-99) , 
4, 0.999906, 0, 0, 0.532135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47575,-99) , 
1, -0.000252493, 1, 0, 0.488659,-99) , 
0, 0.499996, 0, 0, 0.496685,-99) , 
5, 0.809513, 1, 0, 0.514657,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0540586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478997,-99) , 
0, 0.499038, 1, 0, 0.496048,-99) , 
5, 0.755085, 1, 0, 0.500776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464261,-99) , 
3, 0.853537, 1, 0, 0.479592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42841,-99) , 
6, 0.00304654, 0, 0, 0.445046,-99) , 
5, 0.550974, 1, 0, 0.466773,-99) , 
5, 0.71427, 0, 0, 0.487788,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0433366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477392,-99) , 
5, 0.957807, 1, 0, 0.506108,-99) , 
5, 0.115612, 1, 0, 0.510193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460735,-99) , 
3, 1.8106, 0, 0, 0.498041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402583,-99) , 
0, 0.502851, 1, 0, 0.473205,-99) , 
5, -0.428589, 0, 0, 0.505593,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0511125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457892,-99) , 
5, -0.61889, 0, 0, 0.538186,-99) , 
NN(
0, 
0, 
-1, 3.20051, 1, -1, 0.484512,-99) , 
1, -0.00171192, 1, 0, 0.49601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393464,-99) , 
6, 0.0119971, 1, 0, 0.493256,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0416293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497556,-99) , 
5, 0.809872, 0, 0, 0.506524,-99) , 
NN(
0, 
0, 
-1, 0.961961, 0, -1, 0.473244,-99) , 
5, 0.900169, 1, 0, 0.495403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438569,-99) , 
5, -0.896339, 0, 0, 0.473126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376578,-99) , 
5, -0.455812, 1, 0, 0.452729,-99) , 
5, -0.0476364, 0, 0, 0.488823,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0574548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499632, 1, 1, 0.53281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487679,-99) , 
2, -0.00171097, 0, 0, 0.504507,-99) , 
0, 0.497138, 0, 0, 0.521136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570359,-99) , 
NN(
0, 
0, 
-1, 0.49999, 0, -1, 0.470415,-99) , 
5, 0.333637, 1, 0, 0.485329,-99) , 
2, 0.0700769, 1, 0, 0.514841,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0399222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498233,-99) , 
5, 0.954656, 0, 0, 0.517958,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495236, 1, 1, 0.522728,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.480382,-99) , 
2, -0.094003, 1, 0, 0.486041,-99) , 
5, 0.904736, 0, 0, 0.494542,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.046657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453872,-99) , 
0, 0.49798, 1, 0, 0.509999,-99) , 
0, 0.498499, 0, 0, 0.515511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457659,-99) , 
5, -0.727875, 0, 0, 0.504923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464779,-99) , 
5, 0.904738, 1, 0, 0.494762,-99) , 
0, 0.499043, 1, 0, 0.506686,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0357853);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490755,-99) , 
5, 0.319716, 1, 0, 0.493582,-99) , 
NN(
0, 
0, 
-1, -0.00172014, 1, -1, 0.449193,-99) , 
5, -0.428576, 0, 0, 0.48779,-99) , 
0, 0.505708, 0, 0, 0.490559,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0324406);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49714, 0, 1, 0.569607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46671,-99) , 
0, 0.504349, 1, 0, 0.505177,-99) , 
0, 0.490471, 1, 0, 0.507392,-99) , 
1, 0.00442927, 0, 0, 0.511125,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0429181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485721,-99) , 
2, -0.00168726, 1, 0, 0.531631,-99) , 
6, 0.0025681, 0, 0, 0.552705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474867,-99) , 
5, 0.0476033, 0, 0, 0.535081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496385,-99) , 
1, -0.00233071, 1, 0, 0.502044,-99) , 
0, 0.494553, 1, 0, 0.509756,-99) , 
0, 0.503804, 0, 0, 0.514082,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0456564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502535, 0, 1, 0.523746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453372,-99) , 
0, 0.498226, 1, 0, 0.492045,-99) , 
0, 0.499995, 0, 0, 0.502235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474841,-99) , 
3, 2.80548, 0, 0, 0.488331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414528,-99) , 
4, 0.999906, 0, 0, 0.480164,-99) , 
5, 0.714275, 0, 0, 0.494103,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0334968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499165,-99) , 
5, 0.72788, 1, 0, 0.507776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458207,-99) , 
3, 1.45642, 1, 0, 0.486028,-99) , 
5, 0.047615, 0, 0, 0.504569,-99) , 
NN(
0, 
0, 
-1, 0.505846, 1, -1, 0.434011,-99) , 
0, 0.504757, 1, 0, 0.499554,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.050016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46157, 1, 1, 0.570365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491604,-99) , 
0, 0.498091, 1, 0, 0.505935,-99) , 
5, 0.600892, 1, 0, 0.514121,-99) , 
NN(
NN(
0, 
0, 
-1, 1.54816, 1, 1, 0.522323,-99) , 
NN(
0, 
0, 
-1, -0.451425, 1, -1, 0.435145,-99) , 
5, -0.81855, 1, 0, 0.47681,-99) , 
5, -0.0476191, 0, 0, 0.508529,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0434633);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494665,-99) , 
0, 0.496185, 0, 0, 0.514662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461744,-99) , 
3, 6.68787, 1, 0, 0.51123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43974,-99) , 
2, 0.123476, 0, 0, 0.472387,-99) , 
0, 0.494281, 1, 0, 0.48436,-99) , 
2, 0.0564175, 1, 0, 0.505669,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0544917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485357,-99) , 
0, 0.498089, 0, 0, 0.515336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423073,-99) , 
0, 0.492376, 0, 0, 0.512009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478024,-99) , 
0, 0.493328, 1, 0, 0.484235,-99) , 
2, 0.0312797, 0, 0, 0.491399,-99) , 
5, 0.904736, 0, 0, 0.497819,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0498696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498085, 1, 1, 0.531172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483987,-99) , 
3, 1.20623, 1, 0, 0.499499,-99) , 
3, 5.82159, 0, 0, 0.503026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437885,-99) , 
5, -0.904754, 0, 0, 0.499609,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0445624);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499046, 1, 1, 0.54385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496152,-99) , 
0, 0.497092, 1, 0, 0.506638,-99) , 
0, 0.505709, 0, 0, 0.509817,-99) , 
5, 0.904704, 0, 0, 0.519078,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0404598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.745863, 1, 1, 0.566707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468788,-99) , 
5, 0.237962, 0, 0, 0.542007,-99) , 
NN(
NN(
0, 
0, 
-1, 6.76753, 0, 1, 0.505696,-99) , 
NN(
0, 
0, 
-1, 0.954645, 1, -1, 0.47504,-99) , 
5, 0.904749, 1, 0, 0.497253,-99) , 
0, 0.501899, 0, 0, 0.506076,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0522362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503717, 0, 1, 0.570414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499669,-99) , 
0, 0.50621, 0, 0, 0.522725,-99) , 
0, 0.504667, 1, 0, 0.546699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487409,-99) , 
5, 0.809515, 1, 0, 0.516455,-99) , 
NN(
0, 
0, 
-1, 0.497602, 0, -1, 0.483386,-99) , 
0, 0.497049, 1, 0, 0.498159,-99) , 
0, 0.502853, 0, 0, 0.505511,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0591469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 0, 1, 0.552086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463763,-99) , 
0, 0.50149, 0, 0, 0.499733,-99) , 
0, 0.499042, 1, 0, 0.527007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443309,-99) , 
2, 0.0978087, 1, 0, 0.511014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470176,-99) , 
0, 0.502853, 0, 0, 0.478429,-99) , 
3, 1.76239, 1, 0, 0.49912,-99) , 
3, 3.00374, 0, 0, 0.508169,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0369108);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562572,-99) , 
NN(
NN(
0, 
0, 
-1, 0.501083, 1, 1, 0.517938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48045,-99) , 
0, 0.496321, 1, 0, 0.498105,-99) , 
0, 0.499042, 0, 0, 0.506358,-99) , 
2, -0.222504, 1, 0, 0.509155,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0524805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499554,-99) , 
5, 0.945559, 1, 0, 0.523692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483296,-99) , 
3, 2.79761, 0, 0, 0.498262,-99) , 
5, 0.809511, 0, 0, 0.510449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485937,-99) , 
0, 0.49233, 1, 0, 0.515756,-99) , 
NN(
0, 
0, 
-1, 0.714228, 0, -1, 0.461911,-99) , 
2, -0.0645047, 1, 0, 0.472527,-99) , 
0, 0.495232, 0, 0, 0.500488,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0332874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491344,-99) , 
0, 0.500947, 0, 0, 0.516593,-99) , 
5, -0.174686, 0, 0, 0.539089,-99) , 
NN(
NN(
0, 
0, 
-1, 0.588806, 1, 1, 0.507032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426611,-99) , 
5, 0.460307, 0, 0, 0.503571,-99) , 
5, 0.333319, 1, 0, 0.50974,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0388685);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489322,-99) , 
5, 0.71427, 1, 0, 0.497931,-99) , 
NN(
0, 
0, 
-1, 0.0828727, 1, -1, 0.46832,-99) , 
0, 0.496413, 0, 0, 0.488366,-99) , 
0, 0.489519, 1, 0, 0.490674,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0443124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.512953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4831,-99) , 
5, 0.937808, 0, 0, 0.495954,-99) , 
5, 0.836736, 1, 0, 0.501335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458679,-99) , 
0, 0.493331, 1, 0, 0.4661,-99) , 
5, -0.836715, 1, 0, 0.476436,-99) , 
5, 0.714275, 0, 0, 0.491832,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0306284);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495575,-99) , 
2, 0.131348, 0, 0, 0.497859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452087,-99) , 
5, 0.428506, 1, 0, 0.466391,-99) , 
0, 0.501899, 1, 0, 0.49145,-99) , 
2, 0.212324, 0, 0, 0.495127,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0424607);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498088, 0, 1, 0.586462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488176,-99) , 
0, 0.499994, 1, 0, 0.505497,-99) , 
NN(
0, 
0, 
-1, -0.0502388, 0, -1, 0.458466,-99) , 
3, 5.49669, 1, 0, 0.499365,-99) , 
1, 0.00442927, 0, 0, 0.504374,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0304032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498086, 1, 1, 0.536028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464818,-99) , 
0, 0.493328, 0, 0, 0.499161,-99) , 
2, -0.111253, 1, 0, 0.503954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432652,-99) , 
2, 0.212621, 1, 0, 0.499948,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0531693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.080455, 1, 1, 0.515594,-99) , 
NN(
0, 
0, 
-1, 0.505126, 0, -1, 0.460409,-99) , 
0, 0.504349, 1, 0, 0.508809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573057,-99) , 
NN(
0, 
0, 
-1, 0.495777, 1, -1, 0.461015,-99) , 
3, 5.71153, 0, 0, 0.471069,-99) , 
0, 0.496185, 0, 0, 0.495936,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0513583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460732,-99) , 
3, 3.85582, 1, 0, 0.539275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473817,-99) , 
5, 0.827212, 0, 0, 0.495963,-99) , 
5, 0.637182, 1, 0, 0.502186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43553,-99) , 
0, 0.49233, 0, 0, 0.492694,-99) , 
NN(
0, 
0, 
-1, 1.21882, 0, -1, 0.439375,-99) , 
0, 0.499994, 1, 0, 0.470959,-99) , 
5, 0.238075, 0, 0, 0.496642,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.053767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502125, 1, 1, 0.557437,-99) , 
NN(
0, 
0, 
-1, 0.493962, 1, -1, 0.468621,-99) , 
0, 0.497137, 0, 0, 0.517533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478329,-99) , 
0, 0.500947, 0, 0, 0.486263,-99) , 
NN(
0, 
0, 
-1, 0.499044, 1, -1, 0.408457,-99) , 
5, 0.428584, 0, 0, 0.481462,-99) , 
5, 0.142836, 1, 0, 0.486883,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0516954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498809,-99) , 
5, 0.714254, 0, 0, 0.517517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443616,-99) , 
3, 2.19098, 0, 0, 0.476077,-99) , 
0, 0.5019, 1, 0, 0.509262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503757,-99) , 
NN(
0, 
0, 
-1, 0.499984, 0, -1, 0.444423,-99) , 
0, 0.496179, 1, 0, 0.460323,-99) , 
3, 5.55483, 1, 0, 0.503165,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0509527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.520796,-99) , 
NN(
0, 
0, 
-1, 0.809489, 0, -1, 0.477602,-99) , 
4, 0.999932, 0, 0, 0.510972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440303,-99) , 
4, 0.999524, 0, 0, 0.503098,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0222603);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.0120364, 1, -1, 0.488872,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0474617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484475,-99) , 
3, 1.29244, 0, 0, 0.528177,-99) , 
0, 0.501899, 0, 0, 0.542351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477915,-99) , 
5, 0.709736, 0, 0, 0.499817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471039,-99) , 
0, 0.493509, 1, 0, 0.477682,-99) , 
0, 0.499994, 0, 0, 0.484803,-99) , 
5, -0.523785, 1, 0, 0.490904,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0304543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492561,-99) , 
0, 0.499044, 1, 0, 0.504522,-99) , 
2, 0.2096, 0, 0, 0.50717,-99) , 
NN(
0, 
0, 
-1, -0.900228, 1, -1, 0.460492,-99) , 
5, -0.809519, 0, 0, 0.503253,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0433218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.595777, 1, 1, 0.581105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490121,-99) , 
0, 0.49714, 1, 0, 0.508977,-99) , 
3, 1.02811, 1, 0, 0.528089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499925,-99) , 
0, 0.502531, 1, 0, 0.50815,-99) , 
NN(
0, 
0, 
-1, 3.41781, 1, -1, 0.484392,-99) , 
0, 0.499992, 0, 0, 0.492124,-99) , 
5, 0.714256, 1, 0, 0.504821,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0436387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.573497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494163,-99) , 
3, 1.10025, 0, 0, 0.541715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487837,-99) , 
3, 3.21294, 1, 0, 0.505762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474169,-99) , 
0, 0.493101, 1, 0, 0.485457,-99) , 
0, 0.49809, 0, 0, 0.495342,-99) , 
5, -0.714241, 1, 0, 0.499426,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0323136);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.836747, 0, 1, 0.531361,-99) , 
NN(
NN(
0, 
0, 
-1, 0.66958, 1, 1, 0.505463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443826,-99) , 
3, 0.918585, 1, 0, 0.460399,-99) , 
5, 0.614504, 0, 0, 0.496269,-99) , 
5, -0.619043, 1, 0, 0.499766,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0563321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480126,-99) , 
3, 1.16869, 0, 0, 0.514385,-99) , 
NN(
0, 
0, 
-1, 4.86509, 1, -1, 0.461485,-99) , 
2, 0.0564175, 1, 0, 0.502951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501334,-99) , 
NN(
0, 
0, 
-1, 0.945579, 0, -1, 0.464226,-99) , 
0, 0.496184, 1, 0, 0.476281,-99) , 
5, 0.80951, 1, 0, 0.490057,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0534859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471088,-99) , 
5, -0.428545, 0, 0, 0.512028,-99) , 
NN(
0, 
0, 
-1, 0.661692, 0, -1, 0.466827,-99) , 
3, 5.13042, 1, 0, 0.506525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518924,-99) , 
NN(
0, 
0, 
-1, 0.428565, 0, -1, 0.444163,-99) , 
0, 0.501899, 0, 0, 0.46067,-99) , 
2, 0.0712048, 1, 0, 0.498237,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0515954);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.836729, 0, 1, 0.556823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488578,-99) , 
0, 0.499995, 1, 0, 0.511594,-99) , 
NN(
0, 
0, 
-1, 3.78179, 1, -1, 0.47997,-99) , 
0, 0.496185, 0, 0, 0.501324,-99) , 
5, -0.42857, 1, 0, 0.507446,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0411904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49012,-99) , 
5, 0.224451, 0, 0, 0.509566,-99) , 
1, 0.00442927, 0, 0, 0.518459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499426,-99) , 
5, 0.836689, 1, 0, 0.510875,-99) , 
NN(
0, 
0, 
-1, 0.850445, 0, -1, 0.479895,-99) , 
0, 0.496182, 1, 0, 0.49009,-99) , 
5, 0.714265, 1, 0, 0.500277,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0204667);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434558,-99) , 
0, 0.489519, 0, 0, 0.497598,-99) , 
NN(
0, 
0, 
-1, 0.497154, 0, -1, 0.429598,-99) , 
3, 0.454468, 0, 0, 0.493292,-99) , 
3, 7.39984, 0, 0, 0.497331,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0256394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.909409, 1, 1, 0.533608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439935,-99) , 
5, 0.301628, 0, 0, 0.501517,-99) , 
5, -0.0476202, 1, 0, 0.505623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472978,-99) , 
5, 0.714244, 0, 0, 0.493338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442558,-99) , 
0, 0.493645, 1, 0, 0.484271,-99) , 
0, 0.49428, 0, 0, 0.501436,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.051493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49632, 1, 1, 0.587166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45616,-99) , 
0, 0.502851, 1, 0, 0.551779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489032,-99) , 
5, 0.792667, 1, 0, 0.499605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373766,-99) , 
5, 0.274385, 0, 0, 0.49501,-99) , 
5, 0.0476323, 1, 0, 0.502896,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.026907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490612,-99) , 
0, 0.50326, 1, 0, 0.512305,-99) , 
5, 0.333427, 1, 0, 0.527392,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496931,-99) , 
5, -0.142859, 1, 0, 0.500219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431906,-99) , 
1, 0.00659562, 1, 0, 0.49794,-99) , 
0, 0.5019, 0, 0, 0.503755,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.041241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494605,-99) , 
0, 0.497001, 0, 0, 0.5269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487535,-99) , 
3, 1.82558, 0, 0, 0.497336,-99) , 
3, 3.3878, 0, 0, 0.505724,-99) , 
NN(
0, 
0, 
-1, 0.48911, 1, -1, 0.436236,-99) , 
0, 0.490471, 0, 0, 0.501803,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0564749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0050124, 1, 1, 0.562821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483132,-99) , 
0, 0.48979, 1, 0, 0.510303,-99) , 
0, 0.490879, 0, 0, 0.538457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444784,-99) , 
3, 3.69608, 1, 0, 0.52213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471277,-99) , 
0, 0.500811, 1, 0, 0.496815,-99) , 
5, 0.714278, 1, 0, 0.505422,-99) , 
0, 0.493328, 1, 0, 0.510155,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0576263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.34606, 1, 1, 0.550966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436333,-99) , 
0, 0.503805, 1, 0, 0.530643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523365,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.480611,-99) , 
2, 0.0706187, 0, 0, 0.488118,-99) , 
5, 0.619027, 1, 0, 0.499277,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.026428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497141, 0, 1, 0.557737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494283,-99) , 
0, 0.502852, 0, 0, 0.499164,-99) , 
1, -0.00384117, 1, 0, 0.502716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462477,-99) , 
5, -0.904648, 0, 0, 0.500688,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0404031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499997, 1, 1, 0.578833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490687,-99) , 
5, -0.891122, 0, 0, 0.545498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499446,-99) , 
0, 0.499988, 0, 0, 0.509398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473797,-99) , 
5, 0.638492, 1, 0, 0.483869,-99) , 
5, 0.836732, 0, 0, 0.496857,-99) , 
5, 0.142866, 1, 0, 0.503769,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0615074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481244,-99) , 
2, 0.0289404, 1, 0, 0.515355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442084,-99) , 
2, 0.00387163, 0, 0, 0.476276,-99) , 
5, 0.523863, 0, 0, 0.506512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464545,-99) , 
5, -0.491842, 0, 0, 0.506459,-99) , 
NN(
0, 
0, 
-1, 0.773254, 0, -1, 0.47205,-99) , 
5, 0.523839, 1, 0, 0.479408,-99) , 
0, 0.496185, 0, 0, 0.497349,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0473677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.183675, 1, 1, 0.523569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476485,-99) , 
5, -0.904755, 0, 0, 0.521201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473969,-99) , 
0, 0.505709, 1, 0, 0.519296,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0223103);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479834,-99) , 
3, 1.44103, 1, 0, 0.535014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435576,-99) , 
5, -0.156431, 0, 0, 0.49839,-99) , 
5, -0.619018, 1, 0, 0.501821,-99) , 
0, 0.490471, 1, 0, 0.504849,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0594431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.396774, 1, 1, 0.523609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458087,-99) , 
5, -0.809524, 0, 0, 0.518469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447916,-99) , 
5, -0.637163, 0, 0, 0.520973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466537,-99) , 
0, 0.502717, 0, 0, 0.47869,-99) , 
5, 0.5238, 1, 0, 0.488562,-99) , 
0, 0.499043, 1, 0, 0.505827,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0342273);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.48911, 0, 1, 0.543972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488463,-99) , 
0, 0.498641, 1, 0, 0.522297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48225,-99) , 
0, 0.501083, 0, 0, 0.487657,-99) , 
5, -0.809505, 1, 0, 0.490108,-99) , 
0, 0.490471, 1, 0, 0.492886,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0466162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491275,-99) , 
2, -0.011451, 1, 0, 0.518569,-99) , 
3, 0.666266, 1, 0, 0.531608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48561,-99) , 
3, 3.7867, 0, 0, 0.494381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413034,-99) , 
5, 0.52381, 0, 0, 0.489468,-99) , 
5, 0.333329, 1, 0, 0.496538,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0413058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.945577, 1, 1, 0.526639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475785,-99) , 
0, 0.499903, 0, 0, 0.486526,-99) , 
0, 0.491423, 1, 0, 0.490102,-99) , 
5, 0.904748, 0, 0, 0.499896,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0311881);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493439,-99) , 
3, 5.41482, 0, 0, 0.497273,-99) , 
3, 0.454496, 1, 0, 0.501041,-99) , 
3, 7.39984, 0, 0, 0.504667,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0318586);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523582, 1, 1, 0.537473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490461,-99) , 
0, 0.497111, 0, 0, 0.506084,-99) , 
NN(
0, 
0, 
-1, 0.493206, 0, -1, 0.462967,-99) , 
0, 0.493828, 0, 0, 0.502977,-99) , 
0, 0.492377, 1, 0, 0.506385,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0439718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.954637, 0, 1, 0.518824,-99) , 
NN(
0, 
0, 
-1, 5.56641, 1, -1, 0.489276,-99) , 
5, 0.809499, 0, 0, 0.50398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545967,-99) , 
NN(
0, 
0, 
-1, 0.502989, 1, -1, 0.449167,-99) , 
5, -0.238105, 1, 0, 0.464781,-99) , 
0, 0.5019, 1, 0, 0.495964,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0322894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497023,-99) , 
5, -0.836698, 0, 0, 0.533783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49172,-99) , 
0, 0.496185, 1, 0, 0.499665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422383,-99) , 
5, 0.0476832, 0, 0, 0.496826,-99) , 
5, -0.428549, 1, 0, 0.501027,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0590231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47208,-99) , 
5, 0.814036, 1, 0, 0.508868,-99) , 
5, 0.904739, 0, 0, 0.51665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46167,-99) , 
4, 0.999524, 0, 0, 0.510402,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0588891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491175,-99) , 
5, 0.904685, 1, 0, 0.519737,-99) , 
0, 0.499405, 0, 0, 0.525477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492753,-99) , 
0, 0.504245, 1, 0, 0.518597,-99) , 
NN(
0, 
0, 
-1, 0.428613, 0, -1, 0.471934,-99) , 
0, 0.502897, 0, 0, 0.492365,-99) , 
0, 0.499995, 1, 0, 0.514019,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0408739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.600909, 1, 1, 0.510869,-99) , 
NN(
0, 
0, 
-1, 0.490567, 0, -1, 0.460047,-99) , 
0, 0.49238, 0, 0, 0.505894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433259,-99) , 
0, 0.501899, 1, 0, 0.499484,-99) , 
NN(
0, 
0, 
-1, -0.292564, 1, -1, 0.434853,-99) , 
3, 2.06461, 1, 0, 0.470875,-99) , 
5, 0.238089, 0, 0, 0.499844,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0315401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49605, 1, 1, 0.509262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444911,-99) , 
1, -0.00526335, 0, 0, 0.506335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517855,-99) , 
NN(
0, 
0, 
-1, 0.49224, 1, -1, 0.452978,-99) , 
5, 0.142823, 1, 0, 0.466085,-99) , 
0, 0.493328, 0, 0, 0.500364,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0457979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49922,-99) , 
4, 0.999524, 1, 0, 0.504407,-99) , 
5, 0.69159, 1, 0, 0.509576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464718,-99) , 
5, 0.0025355, 1, 0, 0.531047,-99) , 
NN(
0, 
0, 
-1, -0.691608, 1, -1, 0.450301,-99) , 
2, 0.0564175, 0, 0, 0.46489,-99) , 
5, 0.619028, 0, 0, 0.496742,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0542105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496823,-99) , 
0, 0.499223, 0, 0, 0.510193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462423,-99) , 
0, 0.502852, 1, 0, 0.503776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441141,-99) , 
5, -0.614513, 1, 0, 0.467968,-99) , 
1, -0.00468573, 1, 0, 0.478138,-99) , 
5, 0.619018, 0, 0, 0.496536,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0263613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479259,-99) , 
2, -0.080818, 0, 0, 0.500491,-99) , 
5, -0.306091, 1, 0, 0.503083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421754,-99) , 
5, -0.90478, 1, 0, 0.463021,-99) , 
5, -0.71428, 0, 0, 0.499173,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0533655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464412,-99) , 
3, 3.78558, 1, 0, 0.533769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466139,-99) , 
5, -0.333287, 0, 0, 0.52258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499551,-99) , 
0, 0.50466, 0, 0, 0.506772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475836,-99) , 
3, 0.528401, 1, 0, 0.482709,-99) , 
3, 2.97178, 0, 0, 0.490895,-99) , 
0, 0.495233, 1, 0, 0.49873,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.034536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49601, 1, 1, 0.513705,-99) , 
NN(
0, 
0, 
-1, 0.0476337, 0, -1, 0.485248,-99) , 
0, 0.49487, 0, 0, 0.50603,-99) , 
NN(
0, 
0, 
-1, 0.523662, 0, -1, 0.465097,-99) , 
0, 0.502852, 1, 0, 0.499623,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0417903);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00135447, 1, 1, 0.540117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492365,-99) , 
2, 0.0841491, 0, 0, 0.498294,-99) , 
NN(
0, 
0, 
-1, 3.75838, 1, -1, 0.466641,-99) , 
5, 0.714273, 0, 0, 0.486539,-99) , 
0, 0.504756, 0, 0, 0.489998,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0333455);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 1, 1, 0.542904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495554,-99) , 
5, 0.673465, 1, 0, 0.498905,-99) , 
NN(
0, 
0, 
-1, 0.310638, 1, -1, 0.465707,-99) , 
5, 0.619031, 0, 0, 0.489591,-99) , 
0, 0.504756, 0, 0, 0.493049,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0488937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.534745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416352,-99) , 
0, 0.504755, 1, 0, 0.495922,-99) , 
3, 2.05984, 1, 0, 0.51545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458868,-99) , 
0, 0.498086, 1, 0, 0.487104,-99) , 
5, 0.904749, 1, 0, 0.507409,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0472622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619017, 1, 1, 0.525098,-99) , 
NN(
0, 
0, 
-1, 0.149904, 1, -1, 0.484583,-99) , 
0, 0.499633, 1, 0, 0.508256,-99) , 
NN(
0, 
0, 
-1, 0.491016, 1, -1, 0.455599,-99) , 
0, 0.492377, 0, 0, 0.502523,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.058278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485201,-99) , 
4, 0.999991, 0, 0, 0.521795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463794,-99) , 
4, 0.999913, 1, 0, 0.483136,-99) , 
4, 0.999977, 0, 0, 0.506223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457217,-99) , 
4, 0.999524, 0, 0, 0.500973,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0298962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496609,-99) , 
0, 0.491426, 1, 0, 0.500756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478646,-99) , 
4, 0.999524, 0, 0, 0.497719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463533,-99) , 
0, 0.500946, 0, 0, 0.482317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393034,-99) , 
5, -0.183672, 1, 0, 0.467747,-99) , 
5, 0.142858, 0, 0, 0.492888,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.044731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000737474, 0, 1, 0.582742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486463,-99) , 
0, 0.493781, 0, 0, 0.508674,-99) , 
5, 0.523759, 1, 0, 0.525455,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0829858, 1, 1, 0.509627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403135,-99) , 
3, 1.72859, 1, 0, 0.468316,-99) , 
5, -0.42857, 0, 0, 0.504796,-99) , 
0, 0.495233, 1, 0, 0.509959,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.054118);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483289,-99) , 
0, 0.49333, 0, 0, 0.533755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476231,-99) , 
0, 0.497133, 0, 0, 0.497662,-99) , 
5, 0.727878, 1, 0, 0.507804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458731,-99) , 
3, 2.04968, 0, 0, 0.482203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424553,-99) , 
5, -0.755072, 1, 0, 0.464802,-99) , 
5, -0.42855, 0, 0, 0.502512,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0428648);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468963,-99) , 
5, 0.333324, 0, 0, 0.513186,-99) , 
NN(
0, 
0, 
-1, 0.151975, 1, -1, 0.483484,-99) , 
0, 0.496185, 1, 0, 0.493168,-99) , 
2, -0.230244, 1, 0, 0.496249,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0457612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498016,-99) , 
0, 0.500947, 1, 0, 0.541984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492517,-99) , 
0, 0.495235, 1, 0, 0.502397,-99) , 
2, -0.0181055, 1, 0, 0.513124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442858,-99) , 
2, 0.0587182, 0, 0, 0.461089,-99) , 
5, 0.809502, 0, 0, 0.483771,-99) , 
3, 3.22268, 1, 0, 0.504271,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0375654);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497155, 1, 1, 0.529965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448266,-99) , 
3, 5.50664, 1, 0, 0.499739,-99) , 
2, -0.206978, 1, 0, 0.503571,-99) , 
5, 0.904705, 0, 0, 0.510738,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0453971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489493,-99) , 
6, 0.00123072, 1, 0, 0.501696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461279,-99) , 
6, 0.00430738, 1, 0, 0.498032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472505,-99) , 
0, 0.499996, 0, 0, 0.495052,-99) , 
NN(
0, 
0, 
-1, 0.499047, 1, -1, 0.399535,-99) , 
3, 3.32353, 1, 0, 0.471688,-99) , 
5, 0.523807, 0, 0, 0.491926,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0511914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502537, 1, 1, 0.537269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487514,-99) , 
0, 0.502172, 0, 0, 0.504585,-99) , 
2, -0.0537318, 1, 0, 0.511531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453992,-99) , 
2, 0.070333, 1, 0, 0.510579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471463,-99) , 
2, 0.0709487, 0, 0, 0.478094,-99) , 
0, 0.495278, 1, 0, 0.490325,-99) , 
0, 0.499995, 0, 0, 0.49738,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0387553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456537,-99) , 
0, 0.495626, 0, 0, 0.511772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451601,-99) , 
1, 0.001101, 1, 0, 0.487486,-99) , 
0, 0.503486, 1, 0, 0.507897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53893,-99) , 
NN(
0, 
0, 
-1, 0.493056, 1, -1, 0.478659,-99) , 
5, -0.5238, 1, 0, 0.486115,-99) , 
0, 0.495233, 0, 0, 0.502181,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0416342);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500946, 1, 1, 0.558239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456443,-99) , 
0, 0.490608, 0, 0, 0.499551,-99) , 
NN(
0, 
0, 
-1, 0.714261, 0, -1, 0.479676,-99) , 
0, 0.498091, 1, 0, 0.489555,-99) , 
5, 0.142858, 1, 0, 0.499131,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0241922);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577013,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493739, 1, 1, 0.507444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463488,-99) , 
2, 0.212324, 1, 0, 0.505018,-99) , 
0, 0.490475, 1, 0, 0.508245,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0411903);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497137, 1, 1, 0.51414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466517,-99) , 
0, 0.502625, 1, 0, 0.493939,-99) , 
NN(
0, 
0, 
-1, 0.45124, 0, -1, 0.464108,-99) , 
0, 0.497138, 0, 0, 0.4817,-99) , 
5, 0.904726, 0, 0, 0.490745,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0400407);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.854844, 0, 1, 0.526087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491626,-99) , 
0, 0.496183, 1, 0, 0.499548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459811,-99) , 
0, 0.5019, 0, 0, 0.469568,-99) , 
5, 0.7687, 0, 0, 0.488271,-99) , 
5, -0.61902, 1, 0, 0.491883,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0535398);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469746,-99) , 
0, 0.50295, 1, 0, 0.504698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455523,-99) , 
5, -0.238065, 1, 0, 0.471621,-99) , 
0, 0.49537, 0, 0, 0.497318,-99) , 
0, 0.490472, 1, 0, 0.500538,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0362663);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523768, 1, 1, 0.524594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490896,-99) , 
5, 0.292514, 1, 0, 0.493061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434832,-99) , 
3, 0.853298, 1, 0, 0.461965,-99) , 
5, -0.142855, 0, 0, 0.488985,-99) , 
0, 0.493328, 1, 0, 0.494048,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0608914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500721, 1, 1, 0.537455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450104,-99) , 
5, -0.714246, 0, 0, 0.527156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495645,-99) , 
5, 0.523637, 1, 0, 0.511781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465993,-99) , 
0, 0.499237, 0, 0, 0.471942,-99) , 
0, 0.494689, 1, 0, 0.48455,-99) , 
0, 0.499995, 0, 0, 0.49837,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0410479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494879,-99) , 
3, 3.24986, 0, 0, 0.519236,-99) , 
5, 0.0475894, 1, 0, 0.531874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487528,-99) , 
0, 0.49487, 1, 0, 0.495035,-99) , 
NN(
0, 
0, 
-1, 0.499949, 1, -1, 0.462736,-99) , 
2, -0.0704421, 0, 0, 0.489589,-99) , 
0, 0.502852, 0, 0, 0.495833,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0401262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481043,-99) , 
3, 3.77753, 1, 0, 0.510793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473088,-99) , 
5, 0.809545, 0, 0, 0.487645,-99) , 
0, 0.498998, 1, 0, 0.500475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437056,-99) , 
0, 0.489519, 0, 0, 0.497929,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0564356);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498105,-99) , 
0, 0.49809, 1, 0, 0.526362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493443,-99) , 
3, 0.533662, 1, 0, 0.502252,-99) , 
3, 1.85635, 0, 0, 0.511563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472716,-99) , 
5, 0.75512, 1, 0, 0.497209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366274,-99) , 
5, 0.428563, 0, 0, 0.477012,-99) , 
3, 3.76599, 1, 0, 0.502671,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0320544);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489698,-99) , 
0, 0.496184, 0, 0, 0.52048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494695,-99) , 
2, 0.0428563, 0, 0, 0.500043,-99) , 
3, 2.78287, 0, 0, 0.506833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463902,-99) , 
2, -0.215157, 0, 0, 0.504534,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0447243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483125,-99) , 
3, 2.84988, 1, 0, 0.506595,-99) , 
5, 0.33328, 1, 0, 0.534316,-99) , 
NN(
NN(
0, 
0, 
-1, 2.79324, 0, 1, 0.53521,-99) , 
NN(
0, 
0, 
-1, 0.714275, 0, -1, 0.483736,-99) , 
0, 0.49197, 1, 0, 0.489268,-99) , 
0, 0.502852, 0, 0, 0.495855,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0528831);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498748,-99) , 
3, 2.80635, 1, 0, 0.523677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427395,-99) , 
0, 0.492512, 1, 0, 0.496149,-99) , 
0, 0.493328, 0, 0, 0.519796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464532,-99) , 
2, -0.226466, 0, 0, 0.516756,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0339241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.836709, 0, 1, 0.532853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455923,-99) , 
5, -0.00224207, 0, 0, 0.508696,-99) , 
5, -0.619018, 1, 0, 0.511143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453651,-99) , 
2, 0.2096, 1, 0, 0.507817,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0476899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491069,-99) , 
5, 0.206197, 0, 0, 0.526955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459006,-99) , 
4, 0.999905, 0, 0, 0.516473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509694,-99) , 
NN(
0, 
0, 
-1, 0.894155, 1, -1, 0.485437,-99) , 
5, 0.936496, 0, 0, 0.494534,-99) , 
5, 0.809512, 1, 0, 0.505599,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0400645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438923,-99) , 
3, 3.88541, 1, 0, 0.53706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489299,-99) , 
5, 0.936471, 1, 0, 0.505581,-99) , 
5, 0.33331, 1, 0, 0.510843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431591,-99) , 
0, 0.489519, 0, 0, 0.508154,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0376831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472244,-99) , 
5, -0.746002, 1, 0, 0.527667,-99) , 
0, 0.500946, 0, 0, 0.539725,-99) , 
NN(
NN(
0, 
0, 
-1, 3.41613, 0, 1, 0.511712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43822,-99) , 
3, 3.75919, 1, 0, 0.488877,-99) , 
5, 0.682596, 0, 0, 0.506412,-99) , 
5, -0.333301, 1, 0, 0.51026,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0471709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498498, 0, 1, 0.529185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476005,-99) , 
0, 0.502308, 0, 0, 0.494928,-99) , 
0, 0.499043, 1, 0, 0.513926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476318,-99) , 
5, 0.959207, 0, 0, 0.489872,-99) , 
5, 0.904747, 1, 0, 0.507177,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0514301);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494102,-99) , 
5, 0.619037, 0, 0, 0.517221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450022,-99) , 
0, 0.505799, 1, 0, 0.511755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473522,-99) , 
0, 0.4946, 0, 0, 0.498654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468499,-99) , 
5, -0.809422, 1, 0, 0.474881,-99) , 
3, 2.7228, 0, 0, 0.483272,-99) , 
0, 0.49809, 0, 0, 0.497771,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0276471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495777, 0, 1, 0.518885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409913,-99) , 
2, 0.13479, 1, 0, 0.496325,-99) , 
0, 0.496185, 1, 0, 0.503552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434779,-99) , 
2, 0.215555, 1, 0, 0.499137,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0402546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48806,-99) , 
0, 0.493329, 1, 0, 0.49447,-99) , 
5, -0.909276, 1, 0, 0.497306,-99) , 
NN(
0, 
0, 
-1, 0.95916, 1, -1, 0.47082,-99) , 
5, 0.904736, 1, 0, 0.490078,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0496984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499174, 0, 1, 0.53168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492848,-99) , 
0, 0.501894, 1, 0, 0.522557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497604,-99) , 
0, 0.49809, 1, 0, 0.517014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47641,-99) , 
0, 0.503804, 0, 0, 0.486286,-99) , 
3, 1.51755, 0, 0, 0.501628,-99) , 
3, 3.77414, 0, 0, 0.506602,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0522183);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490249,-99) , 
3, 5.92066, 1, 0, 0.518548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453503,-99) , 
5, -0.809517, 0, 0, 0.513524,-99) , 
NN(
0, 
0, 
-1, 0.490788, 0, -1, 0.445861,-99) , 
0, 0.492376, 0, 0, 0.506219,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0364879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499796,-99) , 
0, 0.49428, 1, 0, 0.507095,-99) , 
5, 0.691606, 1, 0, 0.511394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496279,-99) , 
3, 0.562319, 1, 0, 0.538797,-99) , 
NN(
0, 
0, 
-1, 2.36718, 0, -1, 0.466623,-99) , 
3, 0.893819, 1, 0, 0.48347,-99) , 
5, 0.619039, 0, 0, 0.503761,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_12_25_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_12_25_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_12_25_noNsigma *ReadBDT_maker_LHC19c2a_12_25_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_12_25_noNsigma(theInpVar);
  }
}
