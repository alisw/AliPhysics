#include "LHC19c2a_TMVAClassification_BDT_6_8_noPCts.class.h"

double ReadBDT_LHC19c2a_6_8_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_6_8_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.441144630123264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43088, 1, 1, 0.747935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269094,-99) , 
4, 0.999524, 0, 0, 0.696562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315674,-99) , 
6, -951.286, 0, 0, 0.423333,-99) , 
NN(
0, 
0, 
-1, -1.57558, 1, -1, 0.0474511,-99) , 
4, 0.999524, 0, 0, 0.373632,-99) , 
8, -2.47955, 1, 0, 0.499758,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.24667);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.81137, 1, 1, 0.722563,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.41366,-99) , 
8, -2.97894, 1, 0, 0.492013,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.311825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.52148, 1, 1, 0.669999,-99) , 
NN(
0, 
0, 
-1, 0.999977, 0, -1, 0.423476,-99) , 
8, -1.95643, 1, 0, 0.554117,-99) , 
NN(
0, 
0, 
-1, -2.91569, 1, -1, 0.155853,-99) , 
4, 0.999524, 0, 0, 0.508483,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.289934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.81869, 1, 1, 0.728608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36883,-99) , 
4, 0.999977, 0, 0, 0.506338,-99) , 
8, -3.15212, 1, 0, 0.552644,-99) , 
NN(
0, 
0, 
-1, -2.78387, 1, -1, 0.175161,-99) , 
4, 0.999524, 0, 0, 0.51106,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.225783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485948,-99) , 
6, -951.198, 0, 0, 0.558995,-99) , 
NN(
0, 
0, 
-1, 2.40134, 1, -1, 0.240336,-99) , 
7, 1.85713, 1, 0, 0.532949,-99) , 
NN(
0, 
0, 
-1, -2.9699, 1, -1, 0.205681,-99) , 
4, 0.999524, 0, 0, 0.49737,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.245029);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321074,-99) , 
7, -1.61218, 0, 0, 0.561518,-99) , 
NN(
0, 
0, 
-1, 2.40136, 1, -1, 0.263862,-99) , 
7, 1.85715, 1, 0, 0.537722,-99) , 
NN(
0, 
0, 
-1, -2.72023, 1, -1, 0.220837,-99) , 
4, 0.999524, 0, 0, 0.504426,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.145254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.780905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.232213,-99) , 
7, -1.28568, 0, 0, 0.487081,-99) , 
8, -3.81451, 1, 0, 0.51182,-99) , 
NN(
0, 
0, 
-1, -2.06863, 1, -1, 0.162898,-99) , 
4, 0.999048, 0, 0, 0.488183,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.218361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.27108, 0, 1, 0.729396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433839,-99) , 
9, -0.993463, 0, 0, 0.534544,-99) , 
8, -3.69022, 1, 0, 0.587104,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.408364,-99) , 
8, -2.54548, 1, 0, 0.473207,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.164168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.96863, 1, 1, 0.654389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316511,-99) , 
4, 0.999932, 0, 0, 0.47958,-99) , 
8, -3.13021, 1, 0, 0.51532,-99) , 
NN(
0, 
0, 
-1, -2.72914, 1, -1, 0.246189,-99) , 
4, 0.999524, 0, 0, 0.488326,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.174088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.761941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430647,-99) , 
9, -1.5735, 0, 0, 0.572034,-99) , 
8, -4.05521, 1, 0, 0.617072,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.433512,-99) , 
8, -3.0565, 1, 0, 0.474888,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.174511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426902,-99) , 
4, 0.999955, 0, 0, 0.525871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230927,-99) , 
7, 2.14285, 1, 0, 0.510324,-99) , 
NN(
0, 
0, 
-1, -2.06863, 1, -1, 0.212563,-99) , 
4, 0.999048, 0, 0, 0.491382,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.163904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.58815, 1, 1, 0.544182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34424,-99) , 
6, -946.347, 0, 0, 0.414671,-99) , 
8, -1.29058, 1, 0, 0.501805,-99) , 
NN(
0, 
0, 
-1, -2.06389, 1, -1, 0.22984,-99) , 
4, 0.999048, 0, 0, 0.484831,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0995603);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285397,-99) , 
7, -1.77544, 0, 0, 0.501576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.221605,-99) , 
4, 0.998571, 0, 0, 0.490806,-99) , 
NN(
0, 
0, 
-1, 2.51022, 1, -1, 0.209149,-99) , 
7, 2.14287, 1, 0, 0.47506,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.160103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45217,-99) , 
9, -1.36554, 0, 0, 0.539614,-99) , 
8, -3.97807, 1, 0, 0.588463,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.432394,-99) , 
8, -3.1426, 1, 0, 0.463698,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.100558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.23672,-99) , 
7, -2.02033, 0, 0, 0.507896,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.275169,-99) , 
4, 0.999048, 0, 0, 0.495261,-99) , 
NN(
0, 
0, 
-1, 2.51023, 1, -1, 0.223399,-99) , 
7, 2.14287, 1, 0, 0.480677,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0988412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36347,-99) , 
7, -1.28569, 0, 0, 0.495656,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.29037,-99) , 
4, 0.999048, 0, 0, 0.484425,-99) , 
NN(
0, 
0, 
-1, 2.5102, 1, -1, 0.237391,-99) , 
7, 2.14285, 1, 0, 0.471027,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.147968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459908,-99) , 
7, -0.360836, 0, 0, 0.51838,-99) , 
8, -4.06207, 1, 0, 0.562981,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.434865,-99) , 
8, -3.0661, 1, 0, 0.462793,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0951383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377484,-99) , 
4, 0.999864, 0, 0, 0.496686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25561,-99) , 
4, 0.998571, 0, 0, 0.487749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.182573,-99) , 
7, 2.42854, 1, 0, 0.478354,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.119393);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478263,-99) , 
8, -3.5822, 1, 0, 0.497554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273013,-99) , 
7, -1.91149, 0, 0, 0.487515,-99) , 
NN(
0, 
0, 
-1, 2.45579, 1, -1, 0.333037,-99) , 
7, 1.57144, 1, 0, 0.468801,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0820268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66602,-99) , 
NN(
0, 
0, 
-1, -0.999925, 0, -1, 0.477698,-99) , 
8, -3.88098, 1, 0, 0.490351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230394,-99) , 
4, 0.998572, 0, 0, 0.480547,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.135199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362322,-99) , 
4, 0.999048, 0, 0, 0.533578,-99) , 
NN(
0, 
0, 
-1, -2.3048, 1, -1, 0.396246,-99) , 
7, -1.04079, 0, 0, 0.510479,-99) , 
NN(
0, 
0, 
-1, 2.45577, 1, -1, 0.357777,-99) , 
7, 1.57143, 1, 0, 0.49222,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.235567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41705,-99) , 
5, 0.00452927, 0, 0, 0.499103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241188,-99) , 
5, 0.0237791, 1, 0, 0.492359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215641,-99) , 
7, 2.42856, 1, 0, 0.484266,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0651607);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.246583,-99) , 
7, 2.34694, 1, 0, 0.490412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.238143,-99) , 
7, -1.57134, 0, 0, 0.478401,-99) , 
8, -3.81139, 1, 0, 0.492415,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.126539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467334,-99) , 
4, 0.999994, 0, 0, 0.518122,-99) , 
NN(
0, 
0, 
-1, -1.84278, 1, -1, 0.41719,-99) , 
4, 0.999932, 0, 0, 0.49678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263265,-99) , 
4, 0.998571, 0, 0, 0.48821,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.142088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.07289, 0, 1, 0.641178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444484,-99) , 
9, -0.506539, 0, 0, 0.500703,-99) , 
8, -3.59962, 1, 0, 0.527435,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.438891,-99) , 
8, -1.83009, 1, 0, 0.488872,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0635087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.199495,-99) , 
7, -1.85703, 0, 0, 0.495778,-99) , 
8, -3.76886, 1, 0, 0.507927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278439,-99) , 
4, 0.998571, 0, 0, 0.499703,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.111577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462927,-99) , 
8, -3.39668, 1, 0, 0.529372,-99) , 
7, 0.169654, 0, 0, 0.553651,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.458863,-99) , 
8, -2.63082, 1, 0, 0.491061,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0797998);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334887,-99) , 
4, 0.998571, 0, 0, 0.515656,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.349876,-99) , 
7, -1.70741, 0, 0, 0.506729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251028,-99) , 
7, 2.42858, 1, 0, 0.49978,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.192564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421391,-99) , 
5, 0.00339699, 0, 0, 0.503737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268227,-99) , 
5, 0.0237791, 1, 0, 0.49746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26368,-99) , 
7, 2.42857, 1, 0, 0.491186,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0763195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484492,-99) , 
8, -3.98925, 1, 0, 0.529144,-99) , 
7, -0.148217, 0, 0, 0.55548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319293,-99) , 
4, 0.999524, 0, 0, 0.486148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224467,-99) , 
7, -1.57139, 0, 0, 0.474549,-99) , 
8, -2.99353, 1, 0, 0.493669,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0946382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.92925, 1, 1, 0.61825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484273,-99) , 
8, -3.97106, 1, 0, 0.518387,-99) , 
7, -0.0274518, 0, 0, 0.545565,-99) , 
NN(
0, 
0, 
-1, -1.57139, 0, -1, 0.461076,-99) , 
8, -2.63082, 1, 0, 0.489722,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.139888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.398, 0, 1, 0.628139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417766,-99) , 
5, 0.00215678, 0, 0, 0.46228,-99) , 
5, 0.00566159, 0, 0, 0.505509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285722,-99) , 
5, 0.0237791, 1, 0, 0.499966,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.084987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.46818, 1, 1, 0.610904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463703,-99) , 
8, -3.96866, 1, 0, 0.513228,-99) , 
7, -0.800542, 0, 0, 0.562231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356749,-99) , 
4, 0.999524, 0, 0, 0.493062,-99) , 
NN(
0, 
0, 
-1, -1.76182, 0, -1, 0.325758,-99) , 
7, -0.999927, 0, 0, 0.476832,-99) , 
8, -3.13021, 1, 0, 0.493979,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.104818);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.160012, 0, 1, 0.595777,-99) , 
NN(
NN(
0, 
0, 
-1, -0.76685, 0, 1, 0.554945,-99) , 
NN(
0, 
0, 
-1, -0.999906, 0, -1, 0.455026,-99) , 
8, -3.14184, 1, 0, 0.473987,-99) , 
6, 0.877635, 0, 0, 0.487313,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0518022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495935,-99) , 
8, -3.467, 1, 0, 0.507015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32869,-99) , 
7, 2.30612, 1, 0, 0.500458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330964,-99) , 
7, -1.8571, 0, 0, 0.493702,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0672838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.76021, 1, 1, 0.520198,-99) , 
NN(
0, 
0, 
-1, -1.67689, 1, -1, 0.430068,-99) , 
7, -0.931958, 0, 0, 0.504597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287796,-99) , 
7, 2.42853, 1, 0, 0.498941,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.080716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437403,-99) , 
4, 0.999932, 0, 0, 0.504698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344399,-99) , 
4, 0.998571, 0, 0, 0.498998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345028,-99) , 
7, -1.85707, 0, 0, 0.492937,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0502012);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628372,-99) , 
NN(
0, 
0, 
-1, -1.85706, 0, -1, 0.479815,-99) , 
8, -4.08195, 1, 0, 0.486535,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.113741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471094,-99) , 
5, 0.00679476, 0, 0, 0.502711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31587,-99) , 
5, 0.0237843, 1, 0, 0.497854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297664,-99) , 
7, 2.42853, 1, 0, 0.492647,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.146656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.978632, 0, 1, 0.585946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442059,-99) , 
9, -0.896092, 0, 0, 0.511578,-99) , 
8, -3.49941, 1, 0, 0.524474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411184,-99) , 
7, 1.57253, 1, 0, 0.563382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353184,-99) , 
8, 1.52161, 0, 0, 0.397995,-99) , 
6, -946.347, 0, 0, 0.455438,-99) , 
8, -1.20998, 1, 0, 0.503774,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0749797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.617159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47306,-99) , 
8, -3.93564, 1, 0, 0.51367,-99) , 
9, -1.23432, 0, 0, 0.549259,-99) , 
NN(
0, 
0, 
-1, -0.714261, 0, -1, 0.474156,-99) , 
8, -2.93865, 1, 0, 0.493005,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0657797);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.588741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422072,-99) , 
4, 0.999864, 0, 0, 0.499598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328797,-99) , 
4, 0.998571, 0, 0, 0.49381,-99) , 
6, 0.877635, 0, 0, 0.504346,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0751524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471854,-99) , 
8, -3.30863, 1, 0, 0.518077,-99) , 
9, -0.626015, 0, 0, 0.534769,-99) , 
NN(
0, 
0, 
-1, -1.57136, 0, -1, 0.473738,-99) , 
8, -2.54548, 1, 0, 0.4959,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0643183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.70411, 1, 1, 0.518169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370803,-99) , 
4, 0.998571, 0, 0, 0.513026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549148,-99) , 
NN(
0, 
0, 
-1, -2.18228, 1, -1, 0.332541,-99) , 
6, -951.286, 0, 0, 0.419242,-99) , 
7, -1.28568, 0, 0, 0.503394,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.112202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.398, 0, 1, 0.602272,-99) , 
NN(
0, 
0, 
-1, 0.0018848, 0, -1, 0.464897,-99) , 
5, 0.00565442, 0, 0, 0.500404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31337,-99) , 
5, 0.0237486, 1, 0, 0.495661,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0852518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.61307, 1, 1, 0.526125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371929,-99) , 
7, 2.29252, 1, 0, 0.519323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478416,-99) , 
9, -1.87499, 0, 0, 0.52801,-99) , 
NN(
0, 
0, 
-1, -2.42615, 1, -1, 0.383572,-99) , 
6, -949.846, 0, 0, 0.448079,-99) , 
7, -0.714222, 0, 0, 0.503736,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.051025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.40796, 1, 1, 0.582939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456699,-99) , 
8, -3.56416, 1, 0, 0.508939,-99) , 
7, -0.765646, 0, 0, 0.546499,-99) , 
NN(
0, 
0, 
-1, -1.57134, 0, -1, 0.483582,-99) , 
8, -3.0661, 1, 0, 0.497371,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0637953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484068,-99) , 
8, -2.81387, 1, 0, 0.500847,-99) , 
8, 2.06899, 0, 0, 0.505975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360991,-99) , 
7, -1.85707, 0, 0, 0.500476,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0862617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.726185, 1, 1, 0.590401,-99) , 
NN(
0, 
0, 
-1, 0.00134765, 0, -1, 0.477807,-99) , 
5, 0.00566012, 0, 0, 0.506623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327483,-99) , 
5, 0.0237755, 1, 0, 0.502073,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0918993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -946.347, 0, 1, 0.558281,-99) , 
NN(
0, 
0, 
-1, 2.14286, 1, -1, 0.470765,-99) , 
5, 0.00339692, 0, 0, 0.51143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33572,-99) , 
5, 0.0237791, 1, 0, 0.506964,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0651143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461356,-99) , 
8, -0.84095, 1, 0, 0.509462,-99) , 
8, 2.17332, 0, 0, 0.514458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387684,-99) , 
7, -1.85711, 0, 0, 0.509615,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0620169);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.578844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448357,-99) , 
7, -0.714225, 0, 0, 0.497411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339918,-99) , 
4, 0.998571, 0, 0, 0.492268,-99) , 
6, 0.877635, 0, 0, 0.501892,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.054656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497371,-99) , 
8, -4.02102, 1, 0, 0.517738,-99) , 
7, -0.00703216, 0, 0, 0.536845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380192,-99) , 
4, 0.999524, 0, 0, 0.497173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29301,-99) , 
7, -1.57136, 0, 0, 0.48913,-99) , 
8, -2.8621, 1, 0, 0.502097,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0764723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47899,-99) , 
4, 0.999994, 0, 0, 0.509058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372901,-99) , 
8, -2.24519, 1, 0, 0.447842,-99) , 
4, 0.999864, 0, 0, 0.500546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372596,-99) , 
4, 0.998571, 0, 0, 0.496413,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0335355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35934,-99) , 
7, -1.57139, 0, 0, 0.495993,-99) , 
8, -3.81451, 1, 0, 0.502136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375324,-99) , 
3, 8.99018, 1, 0, 0.498184,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0468493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.30785, 1, 1, 0.574975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483848,-99) , 
8, -3.97785, 1, 0, 0.507199,-99) , 
7, -0.514936, 0, 0, 0.534037,-99) , 
NN(
0, 
0, 
-1, -1.57139, 0, -1, 0.483834,-99) , 
8, -2.98593, 1, 0, 0.495782,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0645051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.20998, 1, 1, 0.597751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432859,-99) , 
5, 0.00113245, 0, 0, 0.485914,-99) , 
5, 0.00792709, 0, 0, 0.502359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333734,-99) , 
5, 0.0237843, 1, 0, 0.498093,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0698686);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497778,-99) , 
9, 0.579004, 0, 0, 0.504953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374829,-99) , 
6, -951.286, 0, 0, 0.437899,-99) , 
8, -1.19203, 1, 0, 0.488069,-99) , 
8, 1.53775, 0, 0, 0.493026,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0695147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.743315, 1, 1, 0.589043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461119,-99) , 
8, -1.97194, 1, 0, 0.487449,-99) , 
5, 0.00790465, 0, 0, 0.502264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340625,-99) , 
5, 0.0237147, 1, 0, 0.498155,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0540781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47546,-99) , 
8, -3.39668, 1, 0, 0.507398,-99) , 
7, 0.169545, 0, 0, 0.523393,-99) , 
NN(
0, 
0, 
-1, -1.57139, 0, -1, 0.481453,-99) , 
8, -2.63082, 1, 0, 0.495685,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0608957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407328,-99) , 
7, 2.29251, 1, 0, 0.517815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367248,-99) , 
8, -1.51039, 1, 0, 0.465557,-99) , 
7, -0.714222, 0, 0, 0.506329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386984,-99) , 
3, 9.03751, 1, 0, 0.502604,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0782753);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489626,-99) , 
9, 0.202533, 0, 0, 0.502092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386648,-99) , 
6, -946.347, 0, 0, 0.448177,-99) , 
8, -1.03683, 1, 0, 0.489926,-99) , 
8, 1.68255, 0, 0, 0.494838,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0316643);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.834375, 0, 1, 0.560775,-99) , 
NN(
0, 
0, 
-1, 2.14286, 1, -1, 0.48978,-99) , 
6, 0.877635, 0, 0, 0.497654,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0620911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.910215, 1, 1, 0.597782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464715,-99) , 
0, 0.499995, 1, 0, 0.495707,-99) , 
5, 0.00906, 0, 0, 0.507033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362384,-99) , 
5, 0.0237843, 1, 0, 0.503361,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0588378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490445,-99) , 
4, 0.999994, 0, 0, 0.512276,-99) , 
NN(
0, 
0, 
-1, -1.78649, 1, -1, 0.447339,-99) , 
4, 0.999864, 0, 0, 0.503319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380794,-99) , 
4, 0.998572, 0, 0, 0.499396,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0772523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472673,-99) , 
7, 1.2041, 1, 0, 0.517204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436267,-99) , 
6, -949.846, 0, 0, 0.478487,-99) , 
7, -0.42855, 0, 0, 0.505437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379256,-99) , 
4, 0.998571, 0, 0, 0.501527,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0649189);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495526,-99) , 
8, -0.89467, 1, 0, 0.566162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482711,-99) , 
9, 2.94543, 0, 0, 0.487507,-99) , 
5, 0.00679391, 0, 0, 0.502415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368129,-99) , 
5, 0.0237791, 1, 0, 0.498997,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.104445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.17017, 1, 1, 0.599821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439074,-99) , 
8, -2.70441, 1, 0, 0.500883,-99) , 
9, -0.114023, 0, 0, 0.519225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477174,-99) , 
7, 0.717928, 1, 0, 0.532414,-99) , 
NN(
0, 
0, 
-1, -0.99997, 0, -1, 0.450621,-99) , 
6, -946.347, 0, 0, 0.482651,-99) , 
8, -1.81636, 1, 0, 0.50367,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0439672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.444761, 1, 1, 0.592582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494129,-99) , 
8, 1.53775, 0, 0, 0.498927,-99) , 
5, 0.00905999, 0, 0, 0.50937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376494,-99) , 
5, 0.0237843, 1, 0, 0.506009,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0502865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422479,-99) , 
7, 2.38776, 1, 0, 0.515137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333524,-99) , 
8, -1.44474, 1, 0, 0.456823,-99) , 
7, -1.28564, 0, 0, 0.509295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389457,-99) , 
3, 9.14738, 1, 0, 0.505826,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0448405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499783,-99) , 
0, 0.497138, 1, 0, 0.512169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423753,-99) , 
3, 8.99736, 1, 0, 0.509318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460388,-99) , 
9, -1.5762, 0, 0, 0.488076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368344,-99) , 
8, -1.61046, 1, 0, 0.456236,-99) , 
7, -0.99993, 0, 0, 0.501374,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0309871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0713128, 1, 1, 0.508675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412589,-99) , 
3, 8.8405, 1, 0, 0.505459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332282,-99) , 
8, -2.70459, 1, 0, 0.436013,-99) , 
7, -1.57139, 0, 0, 0.501219,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0472127);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.429459, 0, 1, 0.554673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460841,-99) , 
8, -1.52829, 1, 0, 0.490851,-99) , 
8, 1.51595, 0, 0, 0.495285,-99) , 
6, 0.877635, 0, 0, 0.501931,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0295529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495631,-99) , 
2, 0.0724507, 0, 0, 0.502378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415809,-99) , 
3, 9.03751, 1, 0, 0.499698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408379,-99) , 
7, -1.85707, 0, 0, 0.496371,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0538573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142871, 0, 1, 0.583783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464346,-99) , 
5, 0.00194107, 0, 0, 0.492712,-99) , 
5, 0.0101908, 0, 0, 0.500494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36994,-99) , 
5, 0.0237791, 1, 0, 0.497181,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0548899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.285208, 0, 1, 0.542203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340191,-99) , 
4, 0.999524, 0, 0, 0.498551,-99) , 
8, -2.27013, 1, 0, 0.512396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470581,-99) , 
0, 0.497138, 1, 0, 0.484281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369203,-99) , 
7, -2.04759, 0, 0, 0.476869,-99) , 
7, -0.142853, 0, 0, 0.498467,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0501834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.4287, 0, 1, 0.57378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486613,-99) , 
8, 1.20336, 0, 0, 0.491042,-99) , 
5, 0.00905854, 0, 0, 0.500214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383932,-99) , 
5, 0.0237791, 1, 0, 0.497269,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0632525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487104,-99) , 
7, -0.428543, 0, 0, 0.519581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469389,-99) , 
9, 1.95301, 0, 0, 0.476472,-99) , 
5, 0.00225598, 0, 0, 0.503186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388217,-99) , 
5, 0.0236886, 1, 0, 0.500273,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0418791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464657,-99) , 
8, -0.828624, 1, 0, 0.534462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491039,-99) , 
2, 0.0787892, 0, 0, 0.497715,-99) , 
2, -0.0707931, 1, 0, 0.50434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423505,-99) , 
3, 8.99096, 1, 0, 0.501814,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0451933);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498428,-99) , 
4, 0.999994, 0, 0, 0.5146,-99) , 
NN(
0, 
0, 
-1, -1.9852, 1, -1, 0.452296,-99) , 
4, 0.999864, 0, 0, 0.506037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416514,-99) , 
4, 0.998571, 0, 0, 0.503166,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0295257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.429385, 0, 1, 0.552525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564675,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.493533,-99) , 
8, -3.88098, 1, 0, 0.497999,-99) , 
6, 0.877635, 0, 0, 0.503963,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0499695);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493689,-99) , 
9, -0.3821, 0, 0, 0.515269,-99) , 
NN(
0, 
0, 
-1, -1.89308, 1, -1, 0.458472,-99) , 
4, 0.999864, 0, 0, 0.507507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418202,-99) , 
4, 0.998571, 0, 0, 0.504634,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0492743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491505,-99) , 
4, 0.999987, 0, 0, 0.513009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397465,-99) , 
8, -1.9852, 1, 0, 0.470391,-99) , 
4, 0.999864, 0, 0, 0.507073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414853,-99) , 
4, 0.998571, 0, 0, 0.504192,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0732478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483104,-99) , 
8, -2.18012, 1, 0, 0.512719,-99) , 
9, 1.21012, 0, 0, 0.516237,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498088, 1, 1, 0.56332,-99) , 
NN(
0, 
0, 
-1, -0.714229, 0, -1, 0.432212,-99) , 
6, -946.347, 0, 0, 0.476364,-99) , 
8, -0.782658, 1, 0, 0.507406,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0359829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.73105, 1, 1, 0.541371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496698,-99) , 
9, -0.0798834, 0, 0, 0.507303,-99) , 
2, -0.0714203, 1, 0, 0.513205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484094,-99) , 
2, -0.0707106, 1, 0, 0.491337,-99) , 
NN(
0, 
0, 
-1, 0.503487, 1, -1, 0.456068,-99) , 
3, 4.48615, 1, 0, 0.483206,-99) , 
0, 0.500947, 1, 0, 0.505233,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0325203);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450455,-99) , 
4, 0.999796, 0, 0, 0.499872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41022,-99) , 
4, 0.998571, 0, 0, 0.497149,-99) , 
8, -3.76886, 1, 0, 0.502183,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0380885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.30225, 1, 1, 0.565665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482413,-99) , 
7, -0.316368, 0, 0, 0.499076,-99) , 
6, -949.846, 1, 0, 0.525838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439869,-99) , 
9, -0.703518, 0, 0, 0.494643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382832,-99) , 
7, -1.57134, 0, 0, 0.490461,-99) , 
8, -2.97641, 1, 0, 0.499081,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0353997);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49115,-99) , 
6, 0.877635, 0, 0, 0.496085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401562,-99) , 
7, -1.57127, 0, 0, 0.492237,-99) , 
8, -3.97106, 1, 0, 0.495881,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0505743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479453,-99) , 
8, -0.416815, 1, 0, 0.549953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485082,-99) , 
8, -2.92415, 1, 0, 0.494815,-99) , 
5, 0.0079275, 0, 0, 0.502669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38869,-99) , 
5, 0.0237843, 1, 0, 0.499767,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0695678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.28418, 1, 1, 0.532314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441197,-99) , 
8, -2.73924, 1, 0, 0.490448,-99) , 
9, -0.310294, 0, 0, 0.509265,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.551751,-99) , 
NN(
0, 
0, 
-1, -0.71424, 0, -1, 0.440448,-99) , 
6, -946.347, 0, 0, 0.477873,-99) , 
8, -0.782658, 1, 0, 0.50228,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0288897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.742193, 1, 1, 0.560762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464137,-99) , 
7, -0.999947, 0, 0, 0.495267,-99) , 
5, 0.00902577, 0, 0, 0.502639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388535,-99) , 
5, 0.0236939, 1, 0, 0.499768,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0260396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.498676, 1, 1, 0.552431,-99) , 
NN(
0, 
0, 
-1, 9.28394, 1, -1, 0.494609,-99) , 
5, 0.00905969, 0, 0, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391436,-99) , 
5, 0.0237843, 1, 0, 0.498138,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0315395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.743315, 1, 1, 0.548767,-99) , 
NN(
0, 
0, 
-1, 9.03111, 1, -1, 0.4921,-99) , 
5, 0.00792709, 0, 0, 0.500295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409449,-99) , 
5, 0.0237843, 1, 0, 0.497981,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0372102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489203,-99) , 
9, -0.529051, 0, 0, 0.50806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448612,-99) , 
7, -1.85705, 0, 0, 0.505848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421933,-99) , 
3, 9.3008, 1, 0, 0.50358,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0484616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465082,-99) , 
8, -3.39668, 1, 0, 0.505065,-99) , 
9, -0.810542, 0, 0, 0.5202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408568,-99) , 
4, 0.999819, 0, 0, 0.497104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408004,-99) , 
4, 0.999524, 0, 0, 0.491013,-99) , 
8, -2.63082, 1, 0, 0.50102,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.053481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433392,-99) , 
8, -2.28604, 1, 0, 0.499057,-99) , 
9, 0.110708, 0, 0, 0.508787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448713,-99) , 
7, 1.3674, 1, 0, 0.487346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389162,-99) , 
7, -1.28563, 0, 0, 0.480529,-99) , 
8, -1.84468, 1, 0, 0.49654,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.035909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142477, 0, 1, 0.542275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47474,-99) , 
8, -1.97194, 1, 0, 0.490712,-99) , 
5, 0.010189, 0, 0, 0.495093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393431,-99) , 
5, 0.0237755, 1, 0, 0.492499,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0493549);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475273,-99) , 
8, -0.662458, 1, 0, 0.525535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481468,-99) , 
2, 0.0792055, 0, 0, 0.490179,-99) , 
2, -0.0703452, 1, 0, 0.496544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410103,-99) , 
3, 9.14098, 1, 0, 0.494069,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.038863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494254,-99) , 
9, -0.395791, 0, 0, 0.510673,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.484742,-99) , 
8, -2.36271, 1, 0, 0.495582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413601,-99) , 
3, 9.27754, 1, 0, 0.493351,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0439262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496665,-99) , 
9, 0.110137, 0, 0, 0.507767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446706,-99) , 
6, -951.286, 0, 0, 0.478564,-99) , 
8, -0.668845, 1, 0, 0.501618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415215,-99) , 
3, 9.27754, 1, 0, 0.499267,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0252513);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49686,-99) , 
3, 1.36883, 1, 0, 0.50496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442881,-99) , 
7, -1.85701, 0, 0, 0.502712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426911,-99) , 
3, 9.14098, 1, 0, 0.50052,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0339543);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491304,-99) , 
9, 0.077956, 0, 0, 0.503834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429292,-99) , 
7, -1.57135, 0, 0, 0.500839,-99) , 
8, -3.97106, 1, 0, 0.503689,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0264467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.519417, 0, 1, 0.518606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404469,-99) , 
4, 0.999524, 0, 0, 0.494495,-99) , 
8, -2.46463, 1, 0, 0.503759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419954,-99) , 
3, 9.14738, 1, 0, 0.501378,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0465844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.442475, 0, 1, 0.58751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474185,-99) , 
8, -3.43087, 1, 0, 0.500207,-99) , 
9, -0.657139, 0, 0, 0.518192,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.488093,-99) , 
8, -2.47955, 1, 0, 0.499788,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0315066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0800517, 0, 1, 0.516957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425072,-99) , 
7, -0.99997, 0, 0, 0.495425,-99) , 
8, -1.81636, 1, 0, 0.507624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429352,-99) , 
3, 9.04907, 1, 0, 0.505348,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0177412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142675, 0, 1, 0.548899,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.497165,-99) , 
5, 0.0101907, 0, 0, 0.50155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409013,-99) , 
5, 0.0237791, 1, 0, 0.499211,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0402371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491035,-99) , 
8, -1.79873, 1, 0, 0.5083,-99) , 
NN(
0, 
0, 
-1, 1.28582, 1, -1, 0.472747,-99) , 
5, 0.00113233, 0, 0, 0.501308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40771,-99) , 
5, 0.0237791, 1, 0, 0.49895,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0300818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485835,-99) , 
9, -0.921184, 0, 0, 0.504919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437764,-99) , 
7, 2.30611, 1, 0, 0.502762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449056,-99) , 
7, -1.85711, 0, 0, 0.500825,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0281398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.43449, 0, 1, 0.517965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39285,-99) , 
4, 0.999524, 0, 0, 0.493989,-99) , 
8, -2.43926, 1, 0, 0.503698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402162,-99) , 
5, 0.0237843, 1, 0, 0.501163,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0394539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65978, 1, 1, 0.545354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490189,-99) , 
2, 0.0797037, 0, 0, 0.497718,-99) , 
2, -0.0696781, 1, 0, 0.505006,-99) , 
NN(
0, 
0, 
-1, 8.64231, 1, -1, 0.477173,-99) , 
3, 4.46587, 1, 0, 0.499323,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0195411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.877635, 0, 1, 0.505957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433154,-99) , 
3, 9.14738, 1, 0, 0.50387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409991,-99) , 
5, 0.0237843, 1, 0, 0.501512,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0364107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496208,-99) , 
4, 0.999994, 0, 0, 0.506999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427369,-99) , 
4, 0.999495, 1, 0, 0.458989,-99) , 
4, 0.999864, 0, 0, 0.500442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441064,-99) , 
4, 0.998571, 0, 0, 0.498524,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0309874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0672865, 1, 1, 0.507698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43138,-99) , 
4, 0.999495, 1, 0, 0.464345,-99) , 
4, 0.999864, 0, 0, 0.501729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439584,-99) , 
4, 0.998571, 0, 0, 0.499778,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0348849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496576,-99) , 
9, -0.291142, 0, 0, 0.512671,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.486863,-99) , 
8, -2.05921, 1, 0, 0.500102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418831,-99) , 
5, 0.0237755, 1, 0, 0.498023,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0205493);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470896,-99) , 
3, 5.80253, 1, 0, 0.524103,-99) , 
NN(
0, 
0, 
-1, -1.85705, 0, -1, 0.496596,-99) , 
2, -0.0703948, 1, 0, 0.501562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437356,-99) , 
3, 9.2955, 1, 0, 0.499856,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.027035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0729279, 1, 1, 0.510345,-99) , 
NN(
0, 
0, 
-1, -2.1398, 1, -1, 0.480731,-99) , 
3, 4.6823, 1, 0, 0.504763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428863,-99) , 
5, 0.0237843, 1, 0, 0.502854,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0527614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493968,-99) , 
4, 0.999524, 1, 0, 0.504149,-99) , 
9, -0.474799, 0, 0, 0.515105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478429,-99) , 
9, 0.756957, 0, 0, 0.500764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397055,-99) , 
4, 0.999524, 0, 0, 0.49407,-99) , 
8, -2.48251, 1, 0, 0.502179,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0346518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491153,-99) , 
6, -951.286, 1, 0, 0.506284,-99) , 
7, 0.566507, 0, 0, 0.51594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389136,-99) , 
4, 0.999819, 0, 0, 0.495246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412087,-99) , 
4, 0.999524, 0, 0, 0.489784,-99) , 
8, -2.43291, 1, 0, 0.500275,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0519313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.36426, 1, 1, 0.581366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46166,-99) , 
8, -2.16245, 1, 0, 0.499809,-99) , 
9, 0.674049, 0, 0, 0.506576,-99) , 
NN(
0, 
0, 
-1, -0.999906, 0, -1, 0.473336,-99) , 
8, -1.14772, 1, 0, 0.497207,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0272522);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.143945, 0, 1, 0.531323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457103,-99) , 
4, 0.999864, 0, 0, 0.497694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422252,-99) , 
4, 0.998572, 0, 0, 0.495363,-99) , 
6, 0.877635, 0, 0, 0.499364,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0372972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494548,-99) , 
2, -0.032705, 1, 0, 0.503859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443891,-99) , 
4, 0.999495, 1, 0, 0.474025,-99) , 
4, 0.999864, 0, 0, 0.499761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426495,-99) , 
4, 0.998571, 0, 0, 0.497558,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0496765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47314,-99) , 
8, -3.39668, 1, 0, 0.502376,-99) , 
9, -0.772549, 0, 0, 0.514211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413894,-99) , 
4, 0.999524, 0, 0, 0.502077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438116,-99) , 
7, -0.357313, 1, 0, 0.457926,-99) , 
9, -0.11069, 0, 0, 0.492228,-99) , 
8, -2.63082, 1, 0, 0.499747,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0421648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472414,-99) , 
7, 2.00026, 1, 0, 0.546321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453957,-99) , 
8, -1.54182, 1, 0, 0.497732,-99) , 
9, 0.993069, 0, 0, 0.501331,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00318, 0, 1, 0.530391,-99) , 
NN(
0, 
0, 
-1, -0.714219, 0, -1, 0.443899,-99) , 
6, -951.286, 0, 0, 0.473049,-99) , 
8, -0.706799, 1, 0, 0.495316,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0261233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44964,-99) , 
9, -0.173984, 1, 0, 0.529195,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.494633,-99) , 
4, 0.999524, 1, 0, 0.497413,-99) , 
NN(
0, 
0, 
-1, -0.71431, 0, -1, 0.472677,-99) , 
0, 0.502852, 1, 0, 0.493637,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0217997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00426, 0, 1, 0.531024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452602,-99) , 
8, -0.341969, 1, 0, 0.496615,-99) , 
9, 2.42185, 0, 0, 0.499668,-99) , 
NN(
0, 
0, 
-1, -0.428605, 0, -1, 0.468484,-99) , 
0, 0.502852, 1, 0, 0.494938,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0411414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468452,-99) , 
8, -0.862729, 1, 0, 0.52317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485664,-99) , 
2, -0.0781059, 1, 0, 0.491305,-99) , 
2, 0.0715353, 0, 0, 0.49698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417994,-99) , 
4, 0.998572, 0, 0, 0.494629,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.033907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498943,-99) , 
8, -2.05603, 1, 0, 0.509403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455761,-99) , 
8, -2.7454, 1, 0, 0.487986,-99) , 
9, -0.141537, 0, 0, 0.499398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443643,-99) , 
7, -1.85706, 0, 0, 0.497397,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0215127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499304,-99) , 
8, -3.34979, 1, 0, 0.502945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41123,-99) , 
7, -1.14672, 0, 0, 0.464421,-99) , 
9, -1.65388, 0, 0, 0.499664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43738,-99) , 
7, -1.85705, 0, 0, 0.497493,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.042445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491296,-99) , 
7, -0.71431, 0, 0, 0.538671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487067,-99) , 
3, 0.933671, 1, 0, 0.498831,-99) , 
2, 0.070897, 0, 0, 0.504964,-99) , 
NN(
0, 
0, 
-1, -0.0707435, 0, -1, 0.479082,-99) , 
3, 4.55908, 1, 0, 0.499869,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0407955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.79711, 1, 1, 0.518862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489168,-99) , 
4, 0.999524, 1, 0, 0.494623,-99) , 
6, -946.347, 1, 0, 0.506649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339273,-99) , 
8, -1.61829, 1, 0, 0.443606,-99) , 
6, -949.846, 0, 0, 0.477687,-99) , 
7, -0.999966, 0, 0, 0.502328,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0319954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00451923, 1, 1, 0.543077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467849,-99) , 
8, -0.918928, 1, 0, 0.500981,-99) , 
9, 2.39216, 0, 0, 0.504818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423726,-99) , 
5, 0.0237486, 1, 0, 0.50274,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0366595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496854,-99) , 
8, -2.13629, 1, 0, 0.509316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483875,-99) , 
4, 0.999524, 1, 0, 0.492417,-99) , 
9, -0.418148, 0, 0, 0.502623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439842,-99) , 
3, 9.28394, 1, 0, 0.500951,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0372142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492889,-99) , 
4, 0.999987, 0, 0, 0.509307,-99) , 
NN(
0, 
0, 
-1, 0.142847, 0, -1, 0.466501,-99) , 
4, 0.999864, 0, 0, 0.503455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440084,-99) , 
4, 0.998571, 0, 0, 0.501485,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0329585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495218,-99) , 
9, -0.101283, 0, 0, 0.508445,-99) , 
NN(
0, 
0, 
-1, -0.428499, 0, -1, 0.469813,-99) , 
4, 0.999864, 0, 0, 0.503178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446054,-99) , 
4, 0.998571, 0, 0, 0.5014,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0265731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.508742,-99) , 
NN(
0, 
0, 
-1, -0.42856, 0, -1, 0.469727,-99) , 
4, 0.999864, 0, 0, 0.503467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434572,-99) , 
4, 0.998572, 0, 0, 0.501378,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0410504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492111,-99) , 
4, 0.999997, 0, 0, 0.508736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426901,-99) , 
7, -0.428566, 0, 0, 0.482834,-99) , 
4, 0.999932, 0, 0, 0.503369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451017,-99) , 
4, 0.998571, 0, 0, 0.501769,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0332793);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475003,-99) , 
4, 0.999796, 0, 0, 0.525928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485828,-99) , 
9, -0.367079, 0, 0, 0.498867,-99) , 
2, 0.0714948, 0, 0, 0.503668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432743,-99) , 
4, 0.998571, 0, 0, 0.50155,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0190632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0813141, 0, 1, 0.505309,-99) , 
NN(
0, 
0, 
-1, -1.85823, 1, -1, 0.474802,-99) , 
4, 0.999864, 0, 0, 0.501133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442036,-99) , 
4, 0.998571, 0, 0, 0.499359,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.028665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.431965, 0, 1, 0.533004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49216,-99) , 
8, 1.60413, 0, 0, 0.495553,-99) , 
6, 0.877635, 0, 0, 0.499747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43217,-99) , 
5, 0.0237791, 1, 0, 0.498031,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0398643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.510311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465459,-99) , 
6, -951.198, 0, 0, 0.487725,-99) , 
8, -1.84558, 1, 0, 0.500656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428487,-99) , 
5, 0.0237791, 1, 0, 0.498828,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.035745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497466,-99) , 
9, 0.42043, 0, 0, 0.50528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453302,-99) , 
6, -946.347, 0, 0, 0.479614,-99) , 
8, -0.668845, 1, 0, 0.499828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41575,-99) , 
3, 9.28394, 1, 0, 0.497679,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0455266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.42957, 0, 1, 0.563068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439623,-99) , 
8, -2.81916, 1, 0, 0.500121,-99) , 
9, -0.644957, 0, 0, 0.513541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477443,-99) , 
9, 0.756957, 0, 0, 0.494204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42568,-99) , 
4, 0.999524, 0, 0, 0.489906,-99) , 
8, -2.43926, 1, 0, 0.499362,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0215829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49905,-99) , 
8, -0.575294, 1, 0, 0.534932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477858,-99) , 
5, 0.000970405, 0, 0, 0.498606,-99) , 
5, 0.0101893, 0, 0, 0.501708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428445,-99) , 
5, 0.0237755, 1, 0, 0.499856,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0290578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49646,-99) , 
4, 0.999524, 1, 0, 0.502538,-99) , 
9, -0.395193, 0, 0, 0.512421,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.487924,-99) , 
8, -2.43291, 1, 0, 0.497809,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0268608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.898793, 0, 1, 0.507607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468103,-99) , 
6, -946.347, 0, 0, 0.484883,-99) , 
8, -0.822377, 1, 0, 0.502271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439652,-99) , 
3, 9.28394, 1, 0, 0.500644,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0333251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.14712, 1, 1, 0.54983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464056,-99) , 
8, -1.62111, 1, 0, 0.500752,-99) , 
9, 0.923302, 0, 0, 0.504691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452414,-99) , 
0, 0.502852, 1, 0, 0.498232,-99) , 
NN(
0, 
0, 
-1, 1.78984, 0, -1, 0.442213,-99) , 
7, -0.142797, 0, 0, 0.480817,-99) , 
8, -0.782658, 1, 0, 0.499389,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0455506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499662,-99) , 
8, -1.69998, 1, 0, 0.532039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471919,-99) , 
6, -951.286, 1, 0, 0.486285,-99) , 
3, 4.58362, 1, 0, 0.516559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474184,-99) , 
3, 4.66996, 1, 0, 0.515543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480704,-99) , 
2, 0.0215911, 0, 0, 0.488692,-99) , 
2, -0.0781739, 1, 0, 0.49438,-99) , 
2, 0.0714736, 0, 0, 0.498489,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0522587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4786,-99) , 
8, -0.251257, 1, 0, 0.516198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48708,-99) , 
8, -3.24427, 1, 0, 0.494332,-99) , 
9, 0.598583, 0, 0, 0.499692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437762,-99) , 
8, -1.75241, 1, 0, 0.468156,-99) , 
9, 2.26166, 0, 0, 0.478768,-99) , 
7, 1.28574, 1, 0, 0.496278,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0307024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.31024, 1, 1, 0.53206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476961,-99) , 
3, 4.55235, 1, 0, 0.498446,-99) , 
8, -3.01842, 1, 0, 0.502396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527008,-99) , 
NN(
0, 
0, 
-1, -3.64021, 1, -1, 0.446211,-99) , 
7, -0.841178, 0, 0, 0.468408,-99) , 
9, -1.43905, 0, 0, 0.497695,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0288376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483606,-99) , 
9, -0.358318, 0, 0, 0.499581,-99) , 
8, -3.39288, 1, 0, 0.502975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42913,-99) , 
8, -3.99811, 1, 0, 0.467624,-99) , 
9, -1.74265, 0, 0, 0.499878,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0369324);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463049,-99) , 
9, -1.73393, 0, 0, 0.503819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437977,-99) , 
7, -1.9795, 0, 0, 0.501641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421915,-99) , 
8, -1.53537, 1, 0, 0.46261,-99) , 
9, 2.03252, 0, 0, 0.473829,-99) , 
7, 1.28574, 1, 0, 0.497091,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0288145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499053,-99) , 
9, 0.656348, 0, 0, 0.503871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472344,-99) , 
6, -951.286, 0, 0, 0.486056,-99) , 
8, -1.20998, 1, 0, 0.498785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475636,-99) , 
2, 0.0625703, 0, 0, 0.485526,-99) , 
NN(
0, 
0, 
-1, 0.504077, 1, -1, 0.451559,-99) , 
3, 4.18743, 1, 0, 0.476739,-99) , 
0, 0.5019, 1, 0, 0.494295,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0795244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495969,-99) , 
7, -0.142879, 0, 0, 0.515535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.151029,-99) , 
6, -1.8892, 0, 0, 0.489806,-99) , 
6, -951.286, 1, 0, 0.501675,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00318, 0, 1, 0.522879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415873,-99) , 
9, 2.45858, 0, 0, 0.454487,-99) , 
6, -946.347, 0, 0, 0.477853,-99) , 
8, -0.650827, 1, 0, 0.496797,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0333973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494854,-99) , 
8, -1.91827, 1, 0, 0.52641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486033,-99) , 
2, 0.0719278, 0, 0, 0.491368,-99) , 
3, 0.518904, 1, 0, 0.494038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433105,-99) , 
3, 9.28394, 1, 0, 0.492451,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0620557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413963,-99) , 
7, -1.77542, 0, 0, 0.506735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388683,-99) , 
6, -0.826471, 0, 0, 0.489958,-99) , 
6, -6.95896, 1, 0, 0.498415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503494,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.462009,-99) , 
2, 0.0720563, 0, 0, 0.469735,-99) , 
7, 1.28575, 1, 0, 0.493732,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0419527);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485361,-99) , 
4, 0.999997, 0, 0, 0.498498,-99) , 
NN(
0, 
0, 
-1, 4.45355, 1, -1, 0.470078,-99) , 
4, 0.999932, 0, 0, 0.492612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438059,-99) , 
4, 0.998572, 0, 0, 0.490937,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0282391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.29637, 1, 1, 0.530873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463907,-99) , 
6, -951.286, 0, 0, 0.484088,-99) , 
7, -0.142499, 0, 0, 0.512673,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.488798,-99) , 
2, -0.0714412, 1, 0, 0.49317,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0455755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487619,-99) , 
6, -6.95896, 1, 0, 0.500334,-99) , 
9, 1.19525, 0, 0, 0.503883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495182,-99) , 
7, 1.00156, 0, 0, 0.509193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441593,-99) , 
8, 1.70901, 0, 0, 0.463532,-99) , 
6, -951.286, 0, 0, 0.479243,-99) , 
8, -0.822377, 1, 0, 0.498284,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0421249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.49866, 1, 1, 0.563817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490339,-99) , 
4, 0.999524, 1, 0, 0.496166,-99) , 
9, 0.548462, 0, 0, 0.501903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459408,-99) , 
7, 0.00685024, 0, 0, 0.488232,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.433479,-99) , 
7, 1.85716, 1, 0, 0.478709,-99) , 
8, -1.29058, 1, 0, 0.494841,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0299309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.379049, 0, 1, 0.509056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444361,-99) , 
7, -0.55103, 0, 0, 0.48616,-99) , 
8, -0.762624, 1, 0, 0.504565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43515,-99) , 
8, -1.37689, 1, 0, 0.474002,-99) , 
9, 2.27558, 0, 0, 0.482507,-99) , 
7, 1.28573, 1, 0, 0.500992,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0334549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488011,-99) , 
8, -4.07177, 1, 0, 0.496422,-99) , 
7, 0.424796, 0, 0, 0.50445,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.486741,-99) , 
8, -2.54548, 1, 0, 0.493261,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0211224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0562693, 1, 1, 0.506753,-99) , 
NN(
0, 
0, 
-1, -0.428499, 0, -1, 0.474279,-99) , 
4, 0.999864, 0, 0, 0.502334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450652,-99) , 
4, 0.998571, 0, 0, 0.500751,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0358279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492497,-99) , 
4, 0.999997, 0, 0, 0.504341,-99) , 
NN(
0, 
0, 
-1, -0.714206, 0, -1, 0.471874,-99) , 
4, 0.999932, 0, 0, 0.497658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44645,-99) , 
4, 0.998572, 0, 0, 0.496094,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0243036);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495621,-99) , 
2, -0.059678, 1, 0, 0.500586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458535,-99) , 
4, 0.999495, 1, 0, 0.475416,-99) , 
4, 0.999864, 0, 0, 0.497165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446658,-99) , 
4, 0.998571, 0, 0, 0.49562,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0351529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487434,-99) , 
8, -2.16537, 1, 0, 0.507048,-99) , 
9, 0.914693, 0, 0, 0.510638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464079,-99) , 
7, 1.85713, 1, 0, 0.497322,-99) , 
NN(
0, 
0, 
-1, 0.714329, 0, -1, 0.454043,-99) , 
3, 4.46587, 1, 0, 0.488928,-99) , 
8, -1.15051, 1, 0, 0.504525,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0229914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.056788, 1, 1, 0.507177,-99) , 
NN(
0, 
0, 
-1, -0.428272, 0, -1, 0.479173,-99) , 
4, 0.999932, 0, 0, 0.501379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440169,-99) , 
4, 0.998571, 0, 0, 0.499548,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0259133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.889312, 0, 1, 0.507925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473899,-99) , 
6, -946.347, 0, 0, 0.487347,-99) , 
8, -0.880045, 1, 0, 0.50323,-99) , 
NN(
0, 
0, 
-1, 0.505392, 1, -1, 0.481781,-99) , 
0, 0.500947, 1, 0, 0.497523,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0239197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.10966, 1, 1, 0.54035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480255,-99) , 
5, 0.0014556, 0, 0, 0.497132,-99) , 
5, 0.0101893, 0, 0, 0.50076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44015,-99) , 
5, 0.0237755, 1, 0, 0.499226,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0340825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494049,-99) , 
8, -1.73868, 1, 0, 0.515991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485743,-99) , 
0, 0.494281, 1, 0, 0.491903,-99) , 
3, 0.957146, 1, 0, 0.497159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44331,-99) , 
3, 9.28394, 1, 0, 0.495762,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0178493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.07971, 0, 1, 0.504031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471819,-99) , 
6, -946.347, 0, 0, 0.485456,-99) , 
8, -0.650827, 1, 0, 0.50014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456337,-99) , 
3, 9.27754, 1, 0, 0.498977,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0263683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.535721,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496891,-99) , 
8, -2.91813, 1, 0, 0.501609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530888,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.451015,-99) , 
8, -4.0591, 1, 0, 0.474032,-99) , 
9, -1.30175, 0, 0, 0.497017,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0379495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482725,-99) , 
9, 0.456847, 0, 0, 0.497046,-99) , 
8, -2.6517, 1, 0, 0.502409,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.518305,-99) , 
NN(
0, 
0, 
-1, -2.73793, 1, -1, 0.468622,-99) , 
8, -3.7415, 1, 0, 0.483586,-99) , 
9, -0.84169, 0, 0, 0.497173,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0194907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496563,-99) , 
8, -3.45211, 1, 0, 0.499007,-99) , 
7, -1.28568, 1, 0, 0.501725,-99) , 
NN(
0, 
0, 
-1, -3.92995, 1, -1, 0.467959,-99) , 
9, -1.79947, 0, 0, 0.499013,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0245236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469521,-99) , 
8, -0.578714, 1, 0, 0.527642,-99) , 
NN(
0, 
0, 
-1, 1.85719, 1, -1, 0.495339,-99) , 
5, 0.00792622, 0, 0, 0.499988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439144,-99) , 
5, 0.0237791, 1, 0, 0.49844,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0332783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462793,-99) , 
8, -1.35921, 1, 0, 0.504453,-99) , 
9, 1.20463, 0, 0, 0.506813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467881,-99) , 
3, 3.85494, 1, 0, 0.502973,-99) , 
NN(
0, 
0, 
-1, -0.428566, 0, -1, 0.460052,-99) , 
9, 1.79309, 0, 0, 0.486828,-99) , 
8, -0.802044, 1, 0, 0.502308,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.04601, 1, 1, 0.511155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.171886,-99) , 
6, -2.08094, 0, 0, 0.493475,-99) , 
6, -951.198, 1, 0, 0.502273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483795,-99) , 
7, -1.61221, 0, 0, 0.514621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435814,-99) , 
9, -1.98061, 0, 0, 0.479124,-99) , 
7, -1.28568, 0, 0, 0.500049,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0365862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498904,-99) , 
3, 3.09818, 1, 0, 0.529542,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.474209,-99) , 
3, 4.58362, 1, 0, 0.511054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479239,-99) , 
3, 4.60728, 1, 0, 0.497977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464133,-99) , 
2, 0.0251086, 0, 0, 0.479472,-99) , 
2, -0.00339703, 1, 0, 0.489808,-99) , 
2, 0.0714289, 0, 0, 0.493747,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0285378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.53004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488648,-99) , 
2, 0.0720351, 0, 0, 0.492622,-99) , 
5, 0.0101925, 0, 0, 0.495803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427856,-99) , 
5, 0.0237843, 1, 0, 0.494082,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0180007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.951244, 1, 1, 0.535922,-99) , 
NN(
0, 
0, 
-1, 1.00003, 1, -1, 0.495015,-99) , 
5, 0.0101893, 0, 0, 0.498491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437611,-99) , 
5, 0.0237755, 1, 0, 0.496951,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0376418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139395, 1, 1, 0.53129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489418,-99) , 
9, 0.312707, 0, 0, 0.495002,-99) , 
2, -0.0713712, 1, 0, 0.501636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48344,-99) , 
8, -0.128823, 1, 0, 0.494721,-99) , 
NN(
0, 
0, 
-1, -0.494424, 0, -1, 0.457632,-99) , 
9, 1.28108, 0, 0, 0.483631,-99) , 
8, -1.20998, 1, 0, 0.496373,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0324935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469963,-99) , 
9, -1.71534, 0, 0, 0.50741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416183,-99) , 
4, 0.999508, 1, 0, 0.470453,-99) , 
4, 0.999728, 0, 0, 0.50434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442384,-99) , 
4, 0.998571, 0, 0, 0.50249,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0147877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543546,-99) , 
NN(
0, 
0, 
-1, -1.7273, 0, -1, 0.496245,-99) , 
8, -4.08195, 1, 0, 0.498427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422853,-99) , 
5, 0.0237319, 1, 0, 0.496524,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.024337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496909,-99) , 
2, 0.0291737, 0, 0, 0.503342,-99) , 
NN(
0, 
0, 
-1, -0.428328, 0, -1, 0.472502,-99) , 
4, 0.999864, 0, 0, 0.499181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435617,-99) , 
4, 0.998571, 0, 0, 0.497319,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0214697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.211166, 0, 1, 0.506662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434184,-99) , 
4, 0.999504, 1, 0, 0.469649,-99) , 
4, 0.999796, 0, 0, 0.502845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469161,-99) , 
4, 0.998571, 0, 0, 0.501802,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.020292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496581,-99) , 
3, 0.957149, 1, 0, 0.502011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441236,-99) , 
3, 9.28394, 1, 0, 0.500432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434012,-99) , 
5, 0.0237125, 1, 0, 0.498753,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0293015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485322,-99) , 
8, -0.687342, 1, 0, 0.505116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478589,-99) , 
5, 0.00679271, 0, 0, 0.488527,-99) , 
7, 1, 1, 0, 0.5013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443531,-99) , 
5, 0.0237791, 1, 0, 0.499847,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0251681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494001,-99) , 
9, -0.0481506, 0, 0, 0.502713,-99) , 
NN(
0, 
0, 
-1, 0.999508, 1, -1, 0.453452,-99) , 
4, 0.999728, 0, 0, 0.498743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457642,-99) , 
4, 0.998571, 0, 0, 0.497501,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0209235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481974,-99) , 
7, -0.714211, 0, 0, 0.512426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489708,-99) , 
7, 0.428617, 1, 0, 0.498714,-99) , 
2, -0.0714842, 1, 0, 0.501103,-99) , 
NN(
0, 
0, 
-1, 0.714737, 0, -1, 0.474708,-99) , 
0, 0.504757, 1, 0, 0.499192,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0183274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.49973, 1, 1, 0.533392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471752,-99) , 
7, 0.428859, 0, 0, 0.495779,-99) , 
8, -1.24305, 1, 0, 0.521921,-99) , 
NN(
NN(
0, 
0, 
-1, 0.1531, 0, 1, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0.00333916, 0, -1, 0.483263,-99) , 
0, 0.502852, 1, 0, 0.499805,-99) , 
2, -0.0713712, 1, 0, 0.503903,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0103222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461763,-99) , 
3, 7.21881, 1, 0, 0.499315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456367,-99) , 
3, 8.90015, 1, 0, 0.497986,-99) , 
6, 1.39928, 0, 0, 0.500074,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0321013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45298,-99) , 
8, -0.581695, 1, 0, 0.519623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491672,-99) , 
2, -0.0714207, 1, 0, 0.496538,-99) , 
1, -0.0056606, 1, 0, 0.499396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445158,-99) , 
5, 0.0237843, 1, 0, 0.498024,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0313297);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490147,-99) , 
4, 0.999997, 0, 0, 0.501844,-99) , 
NN(
0, 
0, 
-1, 4.70718, 1, -1, 0.484432,-99) , 
4, 0.999932, 0, 0, 0.498252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448544,-99) , 
4, 0.998571, 0, 0, 0.496762,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0120122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499606,-99) , 
2, 0.2151, 0, 0, 0.501456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427575,-99) , 
4, 0.999508, 1, 0, 0.477797,-99) , 
4, 0.999728, 0, 0, 0.499492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466718,-99) , 
4, 0.998571, 0, 0, 0.498493,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.032364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497463,-99) , 
5, 0.00452977, 0, 0, 0.509032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473754,-99) , 
5, 0.00339754, 1, 0, 0.492593,-99) , 
8, -1.10367, 1, 0, 0.504639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455527,-99) , 
5, 0.0237843, 1, 0, 0.503379,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0251848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0283043, 1, 1, 0.519036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487093,-99) , 
6, -949.006, 1, 0, 0.495317,-99) , 
3, 1.38839, 1, 0, 0.503619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462886,-99) , 
3, 9.27754, 1, 0, 0.502546,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0357797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.285421, 1, 1, 0.542763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423838,-99) , 
8, -3.20528, 1, 0, 0.495452,-99) , 
9, -1.20943, 0, 0, 0.51753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474806,-99) , 
9, -0.11069, 0, 0, 0.498048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45571,-99) , 
4, 0.999524, 0, 0, 0.495288,-99) , 
8, -2.63082, 1, 0, 0.502906,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0177459);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496933,-99) , 
8, -2.67259, 1, 0, 0.501716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47009,-99) , 
9, -1.55934, 0, 0, 0.499827,-99) , 
8, -3.88098, 1, 0, 0.501424,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0344644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.139061, 0, 1, 0.530427,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.482546,-99) , 
3, 4.58323, 1, 0, 0.514666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481065,-99) , 
0, 0.491424, 0, 0, 0.501978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471255,-99) , 
2, 0.0323012, 0, 0, 0.485638,-99) , 
2, -0.0033286, 1, 0, 0.494794,-99) , 
2, 0.0714948, 0, 0, 0.498444,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0154197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.210522, 0, 1, 0.503293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424703,-99) , 
7, 0.143275, 0, 0, 0.468011,-99) , 
4, 0.999796, 0, 0, 0.499682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461669,-99) , 
4, 0.998572, 0, 0, 0.498533,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0371375);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491958,-99) , 
8, -2.35059, 1, 0, 0.501095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47689,-99) , 
4, 0.999524, 1, 0, 0.485423,-99) , 
9, -0.668425, 0, 0, 0.496662,-99) , 
8, -3.88098, 1, 0, 0.498686,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0111032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.529119,-99) , 
NN(
0, 
0, 
-1, 7.60743, 1, -1, 0.497594,-99) , 
3, 0.511841, 1, 0, 0.499955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450669,-99) , 
3, 9.27754, 1, 0, 0.498698,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0333023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496754,-99) , 
9, -1.18414, 0, 0, 0.528488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47917,-99) , 
8, -0.803304, 1, 0, 0.517052,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491223,-99) , 
9, -0.256974, 0, 0, 0.500653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472996,-99) , 
8, -0.41051, 0, 0, 0.484149,-99) , 
7, 1.00002, 1, 0, 0.496894,-99) , 
2, 0.0718172, 0, 0, 0.500604,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0247389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476656,-99) , 
8, -1.59096, 1, 0, 0.501943,-99) , 
9, 0.972806, 0, 0, 0.505583,-99) , 
NN(
0, 
0, 
-1, -0.99993, 0, -1, 0.482457,-99) , 
8, -1.08498, 1, 0, 0.499347,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0194268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.212706, 0, 1, 0.510585,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.493039,-99) , 
8, -2.24651, 1, 0, 0.501142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448543,-99) , 
5, 0.0237319, 1, 0, 0.499819,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0208315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0684273, 0, 1, 0.506504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443128,-99) , 
4, 0.999504, 1, 0, 0.476396,-99) , 
4, 0.999796, 0, 0, 0.503407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46317,-99) , 
4, 0.998571, 0, 0, 0.502191,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0208066);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475332,-99) , 
9, -1.15699, 0, 0, 0.499232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418697,-99) , 
9, -1.85739, 0, 0, 0.496228,-99) , 
8, -4.10179, 1, 0, 0.498666,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0181179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498101,-99) , 
2, -0.0703528, 1, 0, 0.501938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414442,-99) , 
4, 0.999508, 1, 0, 0.473074,-99) , 
4, 0.999728, 0, 0, 0.499541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46427,-99) , 
4, 0.998571, 0, 0, 0.498494,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0207589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.533498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493672,-99) , 
2, -0.0721637, 1, 0, 0.497336,-99) , 
3, 0.502849, 1, 0, 0.499998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462798,-99) , 
3, 8.94697, 1, 0, 0.498864,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0243782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00457, 1, 1, 0.508576,-99) , 
NN(
0, 
0, 
-1, -0.999966, 0, -1, 0.487716,-99) , 
8, -1.2564, 1, 0, 0.501628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452275,-99) , 
6, -949.846, 1, 0, 0.476509,-99) , 
9, -1.66217, 0, 0, 0.499135,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0411201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.21186, 0, 1, 0.549572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415129,-99) , 
4, 0.999524, 0, 0, 0.496009,-99) , 
8, -2.21762, 1, 0, 0.504842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464968,-99) , 
7, -1.12568, 0, 0, 0.504177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467278,-99) , 
7, -1.11013, 1, 0, 0.476859,-99) , 
8, -3.33732, 1, 0, 0.488183,-99) , 
9, -0.497603, 0, 0, 0.498563,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0122135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.210142, 0, 1, 0.503091,-99) , 
NN(
0, 
0, 
-1, 0.999508, 1, -1, 0.472007,-99) , 
4, 0.999728, 0, 0, 0.500524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462585,-99) , 
4, 0.998571, 0, 0, 0.499396,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0264284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487801,-99) , 
2, -0.0309774, 1, 0, 0.493876,-99) , 
2, 0.21383, 0, 0, 0.495776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450221,-99) , 
3, 9.3008, 1, 0, 0.494584,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0299333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0123916, 1, 1, 0.513908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485897,-99) , 
2, 0.0714033, 0, 0, 0.492768,-99) , 
3, 1.36016, 1, 0, 0.499957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460669,-99) , 
3, 9.03751, 1, 0, 0.498828,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0268586);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478396,-99) , 
8, -1.64232, 1, 0, 0.532211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486697,-99) , 
9, 0.37942, 0, 0, 0.492544,-99) , 
7, -0.999972, 1, 0, 0.495948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45442,-99) , 
6, -949.846, 1, 0, 0.474547,-99) , 
9, -1.68948, 0, 0, 0.493927,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0196178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.8744, 1, 1, 0.520958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491396,-99) , 
1, -0.000485378, 1, 0, 0.498089,-99) , 
5, 0.0101921, 0, 0, 0.500003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44846,-99) , 
5, 0.0237843, 1, 0, 0.498699,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0187468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28964, 0, 1, 0.503072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467614,-99) , 
5, 0.0033962, 1, 0, 0.488967,-99) , 
8, -0.670213, 1, 0, 0.500199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446773,-99) , 
5, 0.0237843, 1, 0, 0.498858,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0297239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491969,-99) , 
4, 0.999997, 0, 0, 0.500945,-99) , 
NN(
0, 
0, 
-1, -0.42851, 0, -1, 0.476016,-99) , 
4, 0.999932, 0, 0, 0.495816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449023,-99) , 
4, 0.998571, 0, 0, 0.494462,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.019176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0743757, 0, 1, 0.505579,-99) , 
NN(
0, 
0, 
-1, -2.46463, 1, -1, 0.486039,-99) , 
3, 2.671, 1, 0, 0.498126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461964,-99) , 
3, 9.14738, 1, 0, 0.497124,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0323029);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496516,-99) , 
3, 3.52261, 1, 0, 0.525778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478232,-99) , 
7, 0.143412, 0, 0, 0.49432,-99) , 
3, 4.58362, 1, 0, 0.515167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489795,-99) , 
9, -0.635045, 0, 0, 0.500615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469647,-99) , 
6, -949.006, 1, 0, 0.485252,-99) , 
7, 0.142915, 1, 0, 0.492923,-99) , 
2, 0.0714808, 0, 0, 0.49704,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0323767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482254,-99) , 
8, -2.767, 1, 0, 0.531323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415394,-99) , 
8, -3.20523, 1, 0, 0.488546,-99) , 
9, -1.23209, 0, 0, 0.508999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487412,-99) , 
9, 0.756957, 0, 0, 0.496545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452617,-99) , 
4, 0.999048, 0, 0, 0.494877,-99) , 
8, -2.63082, 1, 0, 0.499699,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0315873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493765,-99) , 
4, 0.999524, 1, 0, 0.498521,-99) , 
9, 0.876793, 0, 0, 0.502291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451878,-99) , 
7, 2.31975, 1, 0, 0.495111,-99) , 
NN(
0, 
0, 
-1, 0.673419, 0, -1, 0.45347,-99) , 
7, 0.142915, 0, 0, 0.479789,-99) , 
8, -1.15051, 1, 0, 0.495958,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0263798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.567157, 0, 1, 0.505776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415181,-99) , 
7, 1.57147, 1, 0, 0.473505,-99) , 
8, -1.34163, 1, 0, 0.501867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487466,-99) , 
8, 0.103713, 1, 0, 0.500772,-99) , 
NN(
0, 
0, 
-1, -0.714254, 0, -1, 0.465228,-99) , 
6, -951.286, 0, 0, 0.477295,-99) , 
8, -0.782658, 1, 0, 0.496404,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0178046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497868,-99) , 
7, 0.42921, 0, 0, 0.516473,-99) , 
NN(
0, 
0, 
-1, 1.00004, 1, -1, 0.493606,-99) , 
6, 0.877635, 0, 0, 0.496136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448523,-99) , 
5, 0.0237791, 1, 0, 0.494939,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0267341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497011,-99) , 
8, -2.41312, 1, 0, 0.504356,-99) , 
NN(
0, 
0, 
-1, -0.428313, 0, -1, 0.470415,-99) , 
4, 0.999909, 0, 0, 0.49894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446656,-99) , 
4, 0.999048, 0, 0, 0.496615,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0373288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498572,-99) , 
9, 0.256131, 0, 0, 0.507446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446018,-99) , 
8, -1.74661, 1, 0, 0.48523,-99) , 
7, 0.999647, 1, 0, 0.503082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497163,-99) , 
8, 0.0893677, 1, 0, 0.510536,-99) , 
NN(
0, 
0, 
-1, -0.714229, 0, -1, 0.471918,-99) , 
6, -946.347, 0, 0, 0.485152,-99) , 
8, -0.802044, 1, 0, 0.49902,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.029412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.139442, 0, 1, 0.535053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480074,-99) , 
6, -951.286, 0, 0, 0.496011,-99) , 
8, -1.74649, 1, 0, 0.518846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490528,-99) , 
6, -951.286, 1, 0, 0.51361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494568,-99) , 
7, -0.714225, 1, 0, 0.498019,-99) , 
8, -3.04487, 1, 0, 0.50155,-99) , 
2, 0.0714244, 0, 0, 0.504752,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0418922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47386,-99) , 
8, -1.62107, 1, 0, 0.504829,-99) , 
9, 1.20861, 0, 0, 0.507862,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0896152, 1, 1, 0.518986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447892,-99) , 
8, 1.00596, 0, 0, 0.47722,-99) , 
6, -946.347, 0, 0, 0.491832,-99) , 
8, -0.782658, 1, 0, 0.504283,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0367973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489463,-99) , 
9, -0.80271, 0, 0, 0.527166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479871,-99) , 
7, 1.00008, 1, 0, 0.502093,-99) , 
6, 0.877635, 0, 0, 0.505106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455912,-99) , 
6, -946.347, 0, 0, 0.480246,-99) , 
8, 2.01329, 0, 0, 0.489958,-99) , 
8, -0.650827, 1, 0, 0.501996,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0234952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494727,-99) , 
4, 0.999997, 0, 0, 0.50206,-99) , 
NN(
0, 
0, 
-1, -0.428018, 0, -1, 0.481615,-99) , 
4, 0.999932, 0, 0, 0.497816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45492,-99) , 
4, 0.998571, 0, 0, 0.496554,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0163974);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485444,-99) , 
8, -1.42933, 1, 0, 0.497228,-99) , 
8, 1.66525, 0, 0, 0.49862,-99) , 
6, 1.39928, 0, 0, 0.500435,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0150152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.218301, 0, 1, 0.50305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433973,-99) , 
7, 0.428621, 0, 0, 0.470639,-99) , 
4, 0.999728, 0, 0, 0.500383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457515,-99) , 
4, 0.998571, 0, 0, 0.499124,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0267764);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47573,-99) , 
8, -0.803304, 1, 0, 0.513629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488685,-99) , 
2, -0.0030585, 1, 0, 0.498453,-99) , 
2, 0.0717469, 0, 0, 0.501109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476125,-99) , 
2, 0.0457592, 0, 0, 0.4846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457721,-99) , 
3, 4.32828, 1, 0, 0.477943,-99) , 
0, 0.502852, 1, 0, 0.497656,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0168065);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477403,-99) , 
4, 0.999932, 0, 0, 0.497598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462448,-99) , 
4, 0.998572, 0, 0, 0.496542,-99) , 
6, 1.39928, 0, 0, 0.497854,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0298499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492158,-99) , 
8, -1.49346, 1, 0, 0.535134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494048,-99) , 
2, 0.214628, 0, 0, 0.496337,-99) , 
7, -0.714199, 1, 0, 0.501132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514443,-99) , 
NN(
0, 
0, 
-1, -1.72004, 0, -1, 0.457714,-99) , 
8, -4.08371, 1, 0, 0.47611,-99) , 
9, -1.43905, 0, 0, 0.49764,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0431353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.96206, 1, 1, 0.511718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413034,-99) , 
4, 0.999524, 0, 0, 0.506484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48125,-99) , 
9, -1.19747, 0, 0, 0.50156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466059,-99) , 
8, -1.87802, 0, 0, 0.476267,-99) , 
8, -2.68927, 1, 0, 0.492354,-99) , 
9, -0.0348162, 0, 0, 0.4993,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0152838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496524,-99) , 
2, -0.0713974, 1, 0, 0.499386,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.469368,-99) , 
3, 6.3848, 1, 0, 0.497384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467852,-99) , 
3, 8.90656, 1, 0, 0.496478,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0232796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48646,-99) , 
8, -0.89467, 1, 0, 0.504972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490867,-99) , 
9, 1.50045, 0, 0, 0.494502,-99) , 
1, -0.00112917, 1, 0, 0.498663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449219,-99) , 
5, 0.0236939, 1, 0, 0.497411,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0349105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.848453, 0, 1, 0.563648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472714,-99) , 
8, -2.22752, 1, 0, 0.496594,-99) , 
9, 0.629171, 0, 0, 0.502097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488559,-99) , 
8, -0.128834, 1, 0, 0.495618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439788,-99) , 
6, -951.286, 0, 0, 0.464575,-99) , 
9, 1.2211, 0, 0, 0.487119,-99) , 
8, -1.20998, 1, 0, 0.497727,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0353729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482206,-99) , 
9, 1.16446, 0, 0, 0.497094,-99) , 
8, -1.97523, 1, 0, 0.504537,-99) , 
NN(
NN(
0, 
0, 
-1, -1.01429, 0, 1, 0.533676,-99) , 
NN(
0, 
0, 
-1, 0.999841, 0, -1, 0.486156,-99) , 
4, 0.999524, 1, 0, 0.491037,-99) , 
9, -0.0657462, 0, 0, 0.497775,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.016313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.527247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493582,-99) , 
6, -951.198, 0, 0, 0.499052,-99) , 
5, 0.0101909, 0, 0, 0.501463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459508,-99) , 
5, 0.0237791, 1, 0, 0.500401,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.020037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492824,-99) , 
8, -1.099, 1, 0, 0.540381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466655,-99) , 
8, -1.28104, 1, 0, 0.499413,-99) , 
9, 0.973322, 0, 0, 0.502487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48555,-99) , 
9, 2.95374, 1, 0, 0.502339,-99) , 
NN(
0, 
0, 
-1, 1.67973, 0, -1, 0.469131,-99) , 
7, 0.42861, 0, 0, 0.486238,-99) , 
8, -0.726185, 1, 0, 0.498981,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0235105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.18419, 0, 1, 0.504951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468357,-99) , 
7, 0.714305, 0, 0, 0.482936,-99) , 
8, -0.476973, 1, 0, 0.500059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511207,-99) , 
NN(
0, 
0, 
-1, -1.69301, 0, -1, 0.46486,-99) , 
8, -4.04966, 1, 0, 0.478332,-99) , 
9, -1.30175, 0, 0, 0.496433,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0320217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481,-99) , 
9, 1.19302, 0, 0, 0.494343,-99) , 
8, -1.95681, 1, 0, 0.501558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523685,-99) , 
NN(
0, 
0, 
-1, 0.999887, 0, -1, 0.486512,-99) , 
4, 0.999524, 1, 0, 0.490279,-99) , 
9, -0.0481506, 0, 0, 0.495833,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0160013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49568,-99) , 
3, 1.79731, 1, 0, 0.501607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47097,-99) , 
3, 9.01422, 1, 0, 0.500702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454013,-99) , 
5, 0.0237843, 1, 0, 0.499523,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0194837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.105251, 0, 1, 0.504263,-99) , 
NN(
0, 
0, 
-1, -0.999648, 0, -1, 0.474749,-99) , 
4, 0.999932, 0, 0, 0.498223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451702,-99) , 
4, 0.998572, 0, 0, 0.496839,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0343191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496634,-99) , 
3, 3.52261, 1, 0, 0.525141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47535,-99) , 
0, 0.499994, 0, 0, 0.486511,-99) , 
3, 4.58362, 1, 0, 0.512111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486837,-99) , 
9, -0.985067, 0, 0, 0.503581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486589,-99) , 
2, -0.152971, 1, 0, 0.490369,-99) , 
7, -0.142794, 1, 0, 0.495614,-99) , 
2, 0.0714736, 0, 0, 0.498633,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0176081);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470125,-99) , 
9, 3.08565, 1, 0, 0.502246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474241,-99) , 
7, 2.14286, 1, 0, 0.50106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481752,-99) , 
2, 0.0316015, 0, 0, 0.493816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464648,-99) , 
3, 4.44424, 1, 0, 0.486797,-99) , 
0, 0.502852, 1, 0, 0.498909,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0107396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497661,-99) , 
9, 1.59677, 0, 0, 0.516335,-99) , 
NN(
0, 
0, 
-1, 3.1211, 1, -1, 0.496795,-99) , 
7, 1.85715, 0, 0, 0.498226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455778,-99) , 
3, 9.27754, 1, 0, 0.49715,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0247604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499586,-99) , 
9, -0.025467, 0, 0, 0.520812,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494068,-99) , 
9, 0.375346, 0, 0, 0.500905,-99) , 
NN(
0, 
0, 
-1, 2.14288, 1, -1, 0.486208,-99) , 
8, -1.20998, 1, 0, 0.496635,-99) , 
0, 0.490471, 1, 0, 0.498011,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0143595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469048,-99) , 
3, 7.5308, 1, 0, 0.503547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466445,-99) , 
3, 9.28394, 1, 0, 0.502587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458592,-99) , 
5, 0.0237843, 1, 0, 0.501481,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0213741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496381,-99) , 
2, 0.0328473, 0, 0, 0.503372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439957,-99) , 
7, -0.428359, 0, 0, 0.483903,-99) , 
4, 0.999864, 0, 0, 0.500701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465691,-99) , 
4, 0.998571, 0, 0, 0.499662,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0192451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.210142, 0, 1, 0.506065,-99) , 
NN(
0, 
0, 
-1, 0.999508, 1, -1, 0.462014,-99) , 
4, 0.999728, 0, 0, 0.502521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458052,-99) , 
4, 0.998571, 0, 0, 0.501202,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0245912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486521,-99) , 
7, 0.485173, 1, 0, 0.500449,-99) , 
9, 1.09229, 0, 0, 0.502416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485903,-99) , 
0, 0.494281, 1, 0, 0.492022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457354,-99) , 
2, -0.0716043, 0, 0, 0.485666,-99) , 
8, -0.634933, 1, 0, 0.499017,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0177875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484726,-99) , 
9, -0.358318, 0, 0, 0.495563,-99) , 
8, -3.41078, 1, 0, 0.498124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446703,-99) , 
8, -3.99811, 1, 0, 0.476915,-99) , 
9, -1.74265, 0, 0, 0.496298,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0179241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499219,-99) , 
9, 1.29077, 0, 0, 0.501515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467221,-99) , 
5, 0.00339619, 1, 0, 0.487659,-99) , 
8, -0.670213, 1, 0, 0.498694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454523,-99) , 
5, 0.0237843, 1, 0, 0.497586,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.00892408);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0101907, 0, 1, 0.503501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458198,-99) , 
5, 0.0237791, 1, 0, 0.502364,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0388595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488558,-99) , 
9, -0.601288, 0, 0, 0.512998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458661,-99) , 
8, -1.3744, 1, 0, 0.489842,-99) , 
6, -951.286, 0, 0, 0.501169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493912,-99) , 
8, -1.99016, 1, 0, 0.500785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474935,-99) , 
2, -0.0706702, 1, 0, 0.481315,-99) , 
6, -946.347, 1, 0, 0.490958,-99) , 
7, 0.142881, 1, 0, 0.496063,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0268734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497692,-99) , 
2, -0.0102284, 1, 0, 0.509387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485105,-99) , 
2, 0.0729127, 0, 0, 0.491087,-99) , 
3, 1.78667, 1, 0, 0.501065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506865,-99) , 
NN(
0, 
0, 
-1, 0.0712023, 1, -1, 0.484027,-99) , 
8, -3.15145, 1, 0, 0.488689,-99) , 
3, 4.55908, 1, 0, 0.498616,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0215045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.009, 1, 1, 0.555357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497465,-99) , 
4, 0.999524, 1, 0, 0.500525,-99) , 
9, 1.01185, 0, 0, 0.504336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496324,-99) , 
9, 2.36395, 1, 0, 0.504912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459664,-99) , 
8, 1.03473, 0, 0, 0.477461,-99) , 
7, 0.428593, 0, 0, 0.491561,-99) , 
8, -0.726185, 1, 0, 0.501582,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.021527);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49294,-99) , 
8, -1.16097, 1, 0, 0.535144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499178,-99) , 
4, 0.999524, 1, 0, 0.502801,-99) , 
9, 0.90839, 0, 0, 0.505274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489431,-99) , 
7, 1.85731, 0, 0, 0.500219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46115,-99) , 
6, -946.347, 0, 0, 0.480427,-99) , 
9, 1.75642, 0, 0, 0.493013,-99) , 
8, -0.802044, 1, 0, 0.502507,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0387913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.82878, 1, 1, 0.53262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486937,-99) , 
7, -0.627515, 0, 0, 0.502809,-99) , 
9, -1.18057, 0, 0, 0.516201,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491917,-99) , 
9, 0.303898, 0, 0, 0.504174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470688,-99) , 
8, -1.48191, 1, 0, 0.486934,-99) , 
7, 1.00001, 1, 0, 0.49833,-99) , 
8, -2.63082, 1, 0, 0.504481,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0214532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57139, 1, 1, 0.507749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417403,-99) , 
7, -0.142707, 0, 0, 0.471874,-99) , 
4, 0.999728, 0, 0, 0.504802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450389,-99) , 
4, 0.998571, 0, 0, 0.503204,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0136676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57125, 1, 1, 0.506042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462622,-99) , 
5, 0.0237843, 1, 0, 0.504945,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0229335);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.6631, 0, 1, 0.507325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486595,-99) , 
7, 1.57245, 0, 0, 0.501962,-99) , 
NN(
0, 
0, 
-1, 1.85705, 1, -1, 0.478676,-99) , 
9, 2.00329, 0, 0, 0.488793,-99) , 
8, -1.15051, 1, 0, 0.502081,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0249216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48995,-99) , 
4, 0.999987, 0, 0, 0.501614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455475,-99) , 
7, 0.714479, 0, 0, 0.475831,-99) , 
4, 0.999728, 0, 0, 0.499497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469825,-99) , 
4, 0.998571, 0, 0, 0.498592,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0284104);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489593,-99) , 
8, -1.42282, 1, 0, 0.539479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49515,-99) , 
4, 0.999048, 1, 0, 0.498265,-99) , 
9, 0.646871, 0, 0, 0.501757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444066,-99) , 
7, 2.10205, 1, 0, 0.495601,-99) , 
NN(
0, 
0, 
-1, 1.41105, 0, -1, 0.457818,-99) , 
7, -0.142831, 0, 0, 0.48487,-99) , 
8, -1.15051, 1, 0, 0.496995,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0147895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499862,-99) , 
7, -1.28563, 1, 0, 0.503712,-99) , 
NN(
0, 
0, 
-1, -0.428418, 0, -1, 0.4799,-99) , 
4, 0.999864, 0, 0, 0.500492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450978,-99) , 
4, 0.998571, 0, 0, 0.499047,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0353104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49703,-99) , 
7, 0.761867, 0, 0, 0.500666,-99) , 
9, 0.105574, 0, 0, 0.507931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490484,-99) , 
8, -0.872833, 1, 0, 0.510344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461302,-99) , 
9, 1.47109, 0, 0, 0.483021,-99) , 
7, 0.714305, 1, 0, 0.497023,-99) , 
8, -1.81636, 1, 0, 0.503302,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0212266);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418703,-99) , 
4, 0.999728, 0, 0, 0.500687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418285,-99) , 
8, -2.19619, 1, 0, 0.477493,-99) , 
4, 0.999524, 0, 0, 0.498919,-99) , 
8, -4.10924, 1, 0, 0.501015,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0143937);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85705, 1, 1, 0.504172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485482,-99) , 
7, 2.02042, 1, 0, 0.505215,-99) , 
NN(
0, 
0, 
-1, 2.85637, 1, -1, 0.477248,-99) , 
7, 0.428613, 0, 0, 0.49182,-99) , 
8, -0.838483, 1, 0, 0.501294,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0278267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.146005, 0, 1, 0.532179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494349,-99) , 
7, -0.142745, 1, 0, 0.502478,-99) , 
6, 0.877635, 0, 0, 0.506022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477285,-99) , 
6, -946.347, 1, 0, 0.496919,-99) , 
NN(
0, 
0, 
-1, 1.88037, 0, -1, 0.459696,-99) , 
7, -0.142799, 0, 0, 0.485785,-99) , 
8, -0.726185, 1, 0, 0.501673,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0234502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497769,-99) , 
2, 0.00791669, 0, 0, 0.506515,-99) , 
NN(
0, 
0, 
-1, -0.428321, 0, -1, 0.480772,-99) , 
4, 0.999909, 0, 0, 0.502432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469522,-99) , 
4, 0.999048, 0, 0, 0.500932,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0175572);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.567157, 0, 1, 0.508438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465401,-99) , 
9, 3.40245, 1, 0, 0.495319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462903,-99) , 
7, 2.14287, 1, 0, 0.491524,-99) , 
8, -1.29058, 1, 0, 0.503197,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0300078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.779255, 0, 1, 0.557878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480904,-99) , 
8, -2.31176, 1, 0, 0.49868,-99) , 
9, 0.567157, 0, 0, 0.503487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47878,-99) , 
0, 0.499995, 1, 0, 0.494246,-99) , 
NN(
0, 
0, 
-1, -0.296402, 0, -1, 0.462645,-99) , 
9, 1.12408, 0, 0, 0.486115,-99) , 
8, -1.29058, 1, 0, 0.498144,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0389505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472802,-99) , 
6, -951.286, 0, 0, 0.523445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488395,-99) , 
6, -949.006, 1, 0, 0.496258,-99) , 
7, -0.428523, 1, 0, 0.501262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526794,-99) , 
NN(
0, 
0, 
-1, -3.64021, 1, -1, 0.465638,-99) , 
7, -0.76514, 0, 0, 0.482461,-99) , 
9, -1.35492, 0, 0, 0.498342,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0112638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.212117, 0, 1, 0.501746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446689,-99) , 
7, 0.428617, 0, 0, 0.476754,-99) , 
4, 0.99966, 0, 0, 0.500018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445153,-99) , 
4, 0.998571, 0, 0, 0.498442,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0256721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495647,-99) , 
8, -1.61578, 1, 0, 0.527864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472866,-99) , 
6, -949.846, 1, 0, 0.484094,-99) , 
9, -1.55135, 0, 0, 0.506824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489164,-99) , 
2, -0.0304693, 1, 0, 0.493525,-99) , 
2, 0.214407, 0, 0, 0.495052,-99) , 
7, -0.714211, 1, 0, 0.497636,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.00951884);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499758,-99) , 
3, 0.511847, 1, 0, 0.502185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473633,-99) , 
3, 9.27754, 1, 0, 0.501439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448996,-99) , 
0, 0.489519, 0, 0, 0.499783,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.016427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484236,-99) , 
9, -1.67717, 0, 0, 0.502786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456793,-99) , 
7, 0.428691, 0, 0, 0.475612,-99) , 
4, 0.999728, 0, 0, 0.500546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460326,-99) , 
4, 0.998572, 0, 0, 0.499355,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0216816);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49554,-99) , 
9, 0.321349, 0, 0, 0.502568,-99) , 
NN(
0, 
0, 
-1, 1.00003, 1, -1, 0.490497,-99) , 
8, -1.4014, 1, 0, 0.498246,-99) , 
8, -3.81139, 1, 0, 0.499973,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0215364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498489,-99) , 
8, -3.36161, 1, 0, 0.502416,-99) , 
9, 1.06604, 0, 0, 0.504853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481583,-99) , 
0, 0.500947, 0, 0, 0.489436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45091,-99) , 
2, -0.0715585, 0, 0, 0.482415,-99) , 
8, -0.968831, 1, 0, 0.499289,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0257892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485123,-99) , 
7, 0.844608, 1, 0, 0.50333,-99) , 
9, 0.877121, 0, 0, 0.505889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496639,-99) , 
7, 1.57163, 0, 0, 0.508727,-99) , 
NN(
0, 
0, 
-1, 1.85714, 1, -1, 0.479979,-99) , 
9, 2.01952, 0, 0, 0.492478,-99) , 
8, -1.14772, 1, 0, 0.502106,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0249776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.779282, 0, 1, 0.555942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4995,-99) , 
8, -4.09872, 1, 0, 0.50214,-99) , 
9, 0.567157, 0, 0, 0.506407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48892,-99) , 
8, -0.379363, 1, 0, 0.504794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426479,-99) , 
9, 1.69283, 0, 0, 0.471055,-99) , 
7, 1.57144, 1, 0, 0.496937,-99) , 
8, -1.29058, 1, 0, 0.503492,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0159727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999938, 1, 1, 0.506047,-99) , 
NN(
0, 
0, 
-1, -2.08172, 0, -1, 0.481951,-99) , 
9, -1.73438, 0, 0, 0.503962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462009,-99) , 
4, 0.998571, 0, 0, 0.50274,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0260674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496618,-99) , 
9, 0.152734, 0, 0, 0.506778,-99) , 
NN(
0, 
0, 
-1, 1.57143, 1, -1, 0.487504,-99) , 
8, -1.3607, 1, 0, 0.500087,-99) , 
NN(
0, 
0, 
-1, -1.48726, 0, -1, 0.477469,-99) , 
9, -1.82678, 0, 0, 0.498364,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0208316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.660347, 0, 1, 0.508368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457265,-99) , 
3, 3.1226, 1, 0, 0.486256,-99) , 
8, 0.298281, 1, 0, 0.505925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490176,-99) , 
9, 1.64567, 0, 0, 0.498376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465938,-99) , 
0, 0.500948, 1, 0, 0.490135,-99) , 
7, 1.28573, 1, 0, 0.503388,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0168005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496849,-99) , 
3, 1.38836, 1, 0, 0.502618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461538,-99) , 
3, 9.27754, 1, 0, 0.50154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467255,-99) , 
7, -1.85711, 0, 0, 0.500391,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0203311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0265634, 1, 1, 0.507194,-99) , 
NN(
0, 
0, 
-1, 0.544208, 1, -1, 0.479845,-99) , 
4, 0.999909, 0, 0, 0.50286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47043,-99) , 
4, 0.999048, 0, 0, 0.501397,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0201155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493767,-99) , 
2, -0.0307031, 1, 0, 0.499328,-99) , 
2, 0.214158, 0, 0, 0.500887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466182,-99) , 
4, 0.998571, 0, 0, 0.499883,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0157598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0714289, 0, 1, 0.506944,-99) , 
NN(
0, 
0, 
-1, 0.00109911, 0, -1, 0.487618,-99) , 
0, 0.504757, 1, 0, 0.505564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471091,-99) , 
5, 0.0237755, 1, 0, 0.504689,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0498071);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338311,-99) , 
6, -1.40273, 0, 0, 0.510043,-99) , 
NN(
0, 
0, 
-1, -1.47606, 0, -1, 0.494594,-99) , 
6, -949.006, 0, 0, 0.502301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518346,-99) , 
NN(
0, 
0, 
-1, -951.198, 1, -1, 0.48405,-99) , 
2, 0.0713744, 0, 0, 0.490559,-99) , 
7, 1.00006, 1, 0, 0.499636,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0334851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492649,-99) , 
6, -951.286, 0, 0, 0.526081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477709,-99) , 
9, -0.29542, 0, 0, 0.497741,-99) , 
7, -0.14277, 1, 0, 0.504205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489607,-99) , 
7, -0.315433, 0, 0, 0.499508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413469,-99) , 
8, -2.89031, 1, 0, 0.48954,-99) , 
9, -0.946776, 0, 0, 0.500496,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0241736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481348,-99) , 
9, -1.5242, 0, 0, 0.511572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495613,-99) , 
2, 0.214568, 0, 0, 0.49757,-99) , 
7, -0.714206, 1, 0, 0.50064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453585,-99) , 
4, 0.998572, 0, 0, 0.499302,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0242422);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494681,-99) , 
8, -0.963789, 1, 0, 0.520375,-99) , 
NN(
0, 
0, 
-1, 0.215503, 0, 1, 0.503517,-99) , 
3, 1.16003, 1, 0, 0.509273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490476,-99) , 
2, 0.0786209, 1, 0, 0.505865,-99) , 
NN(
0, 
0, 
-1, -2.1185, 1, -1, 0.466637,-99) , 
2, -0.0709931, 0, 0, 0.494188,-99) , 
3, 4.61402, 1, 0, 0.506374,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0187902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455298,-99) , 
8, -1.40423, 1, 0, 0.502235,-99) , 
9, 0.898039, 0, 0, 0.50466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474367,-99) , 
7, 1.85714, 1, 0, 0.500197,-99) , 
NN(
0, 
0, 
-1, -0.139417, 0, -1, 0.473767,-99) , 
2, -0.0713974, 0, 0, 0.495348,-99) , 
8, -1.15051, 1, 0, 0.502027,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0223667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494155,-99) , 
7, -1.97951, 0, 0, 0.515468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497805,-99) , 
8, -2.52119, 1, 0, 0.501677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479562,-99) , 
8, -3.73366, 1, 0, 0.489409,-99) , 
9, -0.670407, 0, 0, 0.49792,-99) , 
7, -1.57136, 1, 0, 0.498999,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0250572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.24504, 1, 1, 0.547596,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497219,-99) , 
8, -2.07668, 1, 0, 0.506291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48913,-99) , 
7, 0.434389, 0, 0, 0.493227,-99) , 
7, -1.81738, 1, 0, 0.496298,-99) , 
9, -0.367079, 0, 0, 0.502111,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0288802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472394,-99) , 
8, -1.49926, 1, 0, 0.54445,-99) , 
NN(
0, 
0, 
-1, -0.714229, 1, 1, 0.505037,-99) , 
8, -1.28232, 1, 0, 0.512221,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0678801, 0, 1, 0.510524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485478,-99) , 
7, -0.38467, 1, 0, 0.493179,-99) , 
8, -2.78982, 1, 0, 0.501091,-99) , 
9, 0.518622, 0, 0, 0.505017,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0285724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.131606, 0, 1, 0.542267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432716,-99) , 
4, 0.999524, 0, 0, 0.499491,-99) , 
8, -2.17226, 1, 0, 0.507381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487549,-99) , 
7, -1.77056, 1, 0, 0.491096,-99) , 
7, 0.226835, 0, 0, 0.495642,-99) , 
9, -0.497603, 0, 0, 0.502941,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0158545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484824,-99) , 
9, -1.13083, 0, 0, 0.501969,-99) , 
7, -1.28565, 1, 0, 0.503522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470166,-99) , 
7, -1.48815, 0, 0, 0.48642,-99) , 
9, -1.82697, 0, 0, 0.502214,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0197939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0108112, 1, 1, 0.522703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497331,-99) , 
2, 0.211277, 0, 0, 0.499392,-99) , 
3, 0.746764, 1, 0, 0.503646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494328,-99) , 
6, -951.286, 1, 0, 0.506668,-99) , 
NN(
0, 
0, 
-1, -0.0714937, 0, -1, 0.475229,-99) , 
8, -2.08545, 1, 0, 0.491641,-99) , 
3, 4.63176, 1, 0, 0.501341,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0147181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.5053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459476,-99) , 
6, -951.286, 0, 0, 0.47959,-99) , 
0, 0.491061, 0, 0, 0.503448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471581,-99) , 
0, 0.505709, 1, 0, 0.50211,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0264832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4871,-99) , 
8, -1.40995, 1, 0, 0.53157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493513,-99) , 
4, 0.999524, 1, 0, 0.496108,-99) , 
9, 0.653046, 0, 0, 0.499092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480937,-99) , 
8, -0.222592, 1, 0, 0.492033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448321,-99) , 
7, 2.14287, 1, 0, 0.487096,-99) , 
8, -1.13362, 1, 0, 0.495744,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0107741);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0101899, 0, 1, 0.504663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466928,-99) , 
5, 0.0237791, 1, 0, 0.503702,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0156007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.505136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434092,-99) , 
4, 0.999533, 1, 0, 0.470817,-99) , 
4, 0.999728, 0, 0, 0.502918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473653,-99) , 
4, 0.999048, 0, 0, 0.501593,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0142416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214688, 1, 1, 0.505209,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.473504,-99) , 
3, 6.66572, 1, 0, 0.503316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467992,-99) , 
3, 9.2955, 1, 0, 0.50243,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0236203);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491997,-99) , 
9, 0.87394, 0, 0, 0.533288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484495,-99) , 
8, -2.16537, 1, 0, 0.497126,-99) , 
9, 0.653557, 0, 0, 0.500094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472533,-99) , 
6, -946.347, 0, 0, 0.485793,-99) , 
8, 2.08436, 0, 0, 0.489388,-99) , 
8, -1.15051, 1, 0, 0.49706,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0235251);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495709,-99) , 
8, -2.34379, 1, 0, 0.502339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487465,-99) , 
7, 0.127762, 0, 0, 0.490898,-99) , 
9, -0.611819, 0, 0, 0.498157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470333,-99) , 
9, 3.18537, 1, 0, 0.496709,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0209536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492379,-99) , 
8, -0.497824, 1, 0, 0.5018,-99) , 
7, -0.42807, 1, 0, 0.510153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495391,-99) , 
4, 0.999524, 1, 0, 0.497556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438876,-99) , 
7, -0.168042, 0, 0, 0.473089,-99) , 
8, -0.925353, 1, 0, 0.495766,-99) , 
9, 1.38529, 0, 0, 0.498584,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0156956);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491739,-99) , 
9, -0.264681, 0, 0, 0.498788,-99) , 
8, 2.2112, 0, 0, 0.500053,-99) , 
8, -3.81451, 1, 0, 0.501714,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0212183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466699,-99) , 
8, -1.36333, 1, 0, 0.500496,-99) , 
9, 1.18123, 0, 0, 0.502347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488971,-99) , 
7, 1.57193, 0, 0, 0.499557,-99) , 
NN(
0, 
0, 
-1, 1.00003, 1, -1, 0.478803,-99) , 
9, 1.88972, 0, 0, 0.490848,-99) , 
8, -0.81715, 1, 0, 0.499684,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0259267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487339,-99) , 
7, 0.428469, 1, 0, 0.501211,-99) , 
NN(
0, 
0, 
-1, -0.999648, 0, -1, 0.484215,-99) , 
4, 0.999932, 0, 0, 0.497706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458267,-99) , 
4, 0.998572, 0, 0, 0.496559,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0187435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496105,-99) , 
7, -0.142794, 1, 0, 0.500543,-99) , 
8, -3.43151, 1, 0, 0.502582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456116,-99) , 
7, -1.33125, 0, 0, 0.480281,-99) , 
9, -1.74284, 0, 0, 0.500619,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0190981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49354,-99) , 
2, 0.0314771, 0, 0, 0.499089,-99) , 
2, -0.213221, 1, 0, 0.500207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467408,-99) , 
3, 9.27754, 1, 0, 0.499378,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0281464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498089,-99) , 
9, -0.314605, 0, 0, 0.530688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420716,-99) , 
4, 0.999524, 0, 0, 0.497495,-99) , 
8, -2.16984, 1, 0, 0.503591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47783,-99) , 
7, -1.09637, 0, 0, 0.505399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4628,-99) , 
6, -951.286, 0, 0, 0.483343,-99) , 
8, -3.26102, 1, 0, 0.493392,-99) , 
9, -0.497603, 0, 0, 0.499742,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.020986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495851,-99) , 
8, -1.00766, 1, 0, 0.500651,-99) , 
8, -1.95793, 1, 0, 0.506493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526874,-99) , 
NN(
0, 
0, 
-1, 0.123605, 1, -1, 0.491598,-99) , 
7, 0.644166, 0, 0, 0.494938,-99) , 
9, -0.0481506, 0, 0, 0.500675,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0174409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.931965, 1, 1, 0.504348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43249,-99) , 
7, -1.24177, 0, 0, 0.482097,-99) , 
9, -1.6736, 0, 0, 0.502553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457872,-99) , 
7, -1.85713, 0, 0, 0.501089,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0304853);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.13136, 0, 1, 0.521373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480422,-99) , 
3, 4.57975, 1, 0, 0.506982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482001,-99) , 
2, -0.0159837, 1, 0, 0.49337,-99) , 
2, 0.0306608, 0, 0, 0.497413,-99) , 
2, -0.214216, 1, 0, 0.49869,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.031637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462107,-99) , 
4, 0.999524, 0, 0, 0.506061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441804,-99) , 
7, -1.57139, 0, 0, 0.501672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483282,-99) , 
4, 0.999524, 1, 0, 0.486821,-99) , 
7, -0.999352, 1, 0, 0.49103,-99) , 
6, -946.347, 1, 0, 0.49642,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0184641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0619465, 1, 1, 0.505167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485257,-99) , 
0, 0.492377, 1, 0, 0.488796,-99) , 
3, 2.72829, 1, 0, 0.498994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472697,-99) , 
3, 9.3008, 1, 0, 0.498314,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0191838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49844,-99) , 
7, -0.859701, 1, 0, 0.505983,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.492325,-99) , 
8, -2.33643, 1, 0, 0.497454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457051,-99) , 
7, -1.33655, 0, 0, 0.479994,-99) , 
9, -1.73438, 0, 0, 0.495925,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0201819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493982,-99) , 
4, 0.999984, 0, 0, 0.50343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45164,-99) , 
7, 0.143322, 0, 0, 0.477806,-99) , 
4, 0.99966, 0, 0, 0.501689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453658,-99) , 
4, 0.998572, 0, 0, 0.500315,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.020828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.017082, 0, 1, 0.51328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493912,-99) , 
2, 0.0709182, 0, 0, 0.497365,-99) , 
3, 0.92668, 1, 0, 0.501403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493633,-99) , 
9, -0.513949, 0, 0, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0.0713482, 1, -1, 0.474242,-99) , 
8, -1.97194, 1, 0, 0.488927,-99) , 
3, 4.55235, 1, 0, 0.498953,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0279076);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492676,-99) , 
7, -0.428548, 1, 0, 0.497216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462288,-99) , 
7, -0.49329, 0, 0, 0.476694,-99) , 
9, -1.16029, 0, 0, 0.493873,-99) , 
8, -4.10179, 1, 0, 0.495356,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.00832847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499261,-99) , 
2, 0.0714191, 0, 0, 0.501575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474402,-99) , 
4, 0.999252, 0, 0, 0.500823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471623,-99) , 
4, 0.998571, 0, 0, 0.499962,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0197288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49945,-99) , 
4, 0.999524, 1, 0, 0.502182,-99) , 
9, 0.976834, 0, 0, 0.505114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444906,-99) , 
7, 2.2517, 1, 0, 0.499761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429476,-99) , 
9, 1.43769, 0, 0, 0.467564,-99) , 
7, -0.142836, 0, 0, 0.490534,-99) , 
8, -1.08498, 1, 0, 0.50118,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0246834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498325,-99) , 
7, 0.143728, 0, 0, 0.526788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485709,-99) , 
3, 4.5312, 1, 0, 0.514972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490313,-99) , 
2, 0.0228425, 0, 0, 0.497186,-99) , 
2, -0.0510127, 1, 0, 0.500426,-99) , 
2, -0.21427, 1, 0, 0.501852,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0133865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28565, 1, 1, 0.504155,-99) , 
NN(
0, 
0, 
-1, 0.142914, 0, -1, 0.477985,-99) , 
4, 0.999728, 0, 0, 0.502003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457496,-99) , 
4, 0.998571, 0, 0, 0.500713,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0150099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214515, 0, 1, 0.504852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457527,-99) , 
4, 0.999728, 0, 0, 0.503216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455137,-99) , 
6, -951.286, 0, 0, 0.485,-99) , 
4, 0.999524, 0, 0, 0.501819,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0202884);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497833,-99) , 
3, 4.80239, 1, 0, 0.522873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497311,-99) , 
2, 0.0286714, 0, 0, 0.501204,-99) , 
2, -0.153049, 1, 0, 0.503546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486131,-99) , 
2, 0.139463, 0, 0, 0.500153,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.458759,-99) , 
8, -1.13971, 1, 0, 0.488352,-99) , 
2, 0.0714289, 1, 0, 0.50078,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0131739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213518, 1, 1, 0.503177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427272,-99) , 
7, -0.142344, 0, 0, 0.479188,-99) , 
4, 0.999728, 0, 0, 0.501204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457722,-99) , 
4, 0.998571, 0, 0, 0.499943,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0189535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469377,-99) , 
8, -1.46441, 1, 0, 0.502942,-99) , 
9, 0.835874, 0, 0, 0.505569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496509,-99) , 
8, -0.128823, 1, 0, 0.501773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45475,-99) , 
8, -0.780479, 0, 0, 0.47371,-99) , 
9, 1.23841, 0, 0, 0.494041,-99) , 
8, -1.20998, 1, 0, 0.502174,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0246051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0185958, 0, 1, 0.508153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487351,-99) , 
0, 0.494281, 1, 0, 0.493077,-99) , 
3, 1.77974, 1, 0, 0.501222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476676,-99) , 
2, -0.0783049, 0, 0, 0.496904,-99) , 
NN(
0, 
0, 
-1, 0.143698, 1, -1, 0.471815,-99) , 
2, 0.0713482, 1, 0, 0.48915,-99) , 
3, 4.55235, 1, 0, 0.498823,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0267519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480779,-99) , 
8, -1.60714, 1, 0, 0.527195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493967,-99) , 
2, -0.214327, 1, 0, 0.495702,-99) , 
9, 0.316769, 0, 0, 0.500793,-99) , 
NN(
0, 
0, 
-1, 0.0729375, 1, -1, 0.487268,-99) , 
8, -1.20998, 1, 0, 0.496843,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.012985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214278, 0, 1, 0.504922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464385,-99) , 
3, 7.17622, 1, 0, 0.503496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478457,-99) , 
3, 8.8397, 1, 0, 0.502706,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0128418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476244,-99) , 
4, 0.999728, 0, 0, 0.500488,-99) , 
2, -0.214216, 1, 0, 0.501788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44597,-99) , 
4, 0.998571, 0, 0, 0.500197,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0116579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499354,-99) , 
2, -0.0732615, 1, 0, 0.501609,-99) , 
NN(
0, 
0, 
-1, -0.428272, 0, -1, 0.481293,-99) , 
4, 0.999796, 0, 0, 0.499527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442436,-99) , 
4, 0.998571, 0, 0, 0.497938,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.00724389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475618,-99) , 
9, 3.16277, 1, 0, 0.499339,-99) , 
7, 2.14287, 0, 0, 0.500338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469965,-99) , 
4, 0.998571, 0, 0, 0.499446,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0115327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498969,-99) , 
4, 0.999524, 1, 0, 0.501469,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490456,-99) , 
0, 0.495233, 0, 0, 0.49861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463866,-99) , 
5, 0.0237755, 1, 0, 0.497735,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0158216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.01599, 1, 1, 0.538574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472637,-99) , 
8, -1.4971, 1, 0, 0.497367,-99) , 
9, 1.02182, 0, 0, 0.500359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464685,-99) , 
2, -0.0711995, 0, 0, 0.494786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461093,-99) , 
0, 0.494281, 0, 0, 0.487426,-99) , 
8, -0.670327, 1, 0, 0.497662,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.00867799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498814,-99) , 
2, -0.213079, 1, 0, 0.499962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47902,-99) , 
4, 0.999637, 0, 0, 0.498923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470721,-99) , 
4, 0.999048, 0, 0, 0.497661,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0126754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497094,-99) , 
9, 1.45539, 0, 0, 0.499541,-99) , 
4, 0.998571, 1, 0, 0.500385,-99) , 
NN(
0, 
0, 
-1, 0.143103, 0, -1, 0.477882,-99) , 
0, 0.491424, 0, 0, 0.498595,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.00847903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471888,-99) , 
4, 0.999637, 0, 0, 0.499319,-99) , 
7, 2.14288, 0, 0, 0.500777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476788,-99) , 
4, 0.999048, 0, 0, 0.49969,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0280295);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493678,-99) , 
8, -1.75347, 1, 0, 0.512848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494209,-99) , 
7, 0.732119, 0, 0, 0.49682,-99) , 
9, 0.0570723, 0, 0, 0.501867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486059,-99) , 
0, 0.497139, 0, 0, 0.502884,-99) , 
NN(
0, 
0, 
-1, -0.428518, 0, -1, 0.462472,-99) , 
9, 1.74481, 0, 0, 0.489616,-99) , 
8, -0.743315, 1, 0, 0.499188,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0151744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.898629, 0, 1, 0.535933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473408,-99) , 
0, 0.490471, 0, 0, 0.499766,-99) , 
9, 0.684068, 0, 0, 0.502501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478002,-99) , 
2, 0.0708085, 1, 0, 0.496415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448677,-99) , 
6, -946.347, 0, 0, 0.473134,-99) , 
9, 1.28108, 0, 0, 0.490069,-99) , 
8, -1.15051, 1, 0, 0.498968,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0117693);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.680734, 0, 1, 0.504519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485114,-99) , 
9, 1.22614, 0, 0, 0.498695,-99) , 
NN(
0, 
0, 
-1, 0.14044, 1, -1, 0.476984,-99) , 
2, 0.0724665, 1, 0, 0.494669,-99) , 
8, -1.15051, 1, 0, 0.501716,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0284574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496475,-99) , 
8, -1.69221, 1, 0, 0.511734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492779,-99) , 
7, -1.65952, 1, 0, 0.495844,-99) , 
9, 0.164822, 0, 0, 0.501468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524425,-99) , 
NN(
0, 
0, 
-1, 0.500948, 0, -1, 0.470181,-99) , 
7, 1.28542, 0, 0, 0.481985,-99) , 
8, 0.125517, 1, 0, 0.498909,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.018786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468567,-99) , 
9, -1.69304, 0, 0, 0.501329,-99) , 
8, -4.09872, 1, 0, 0.502673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513261,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.466161,-99) , 
8, 2.09193, 0, 0, 0.481047,-99) , 
8, 0.0496582, 1, 0, 0.499727,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.015319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476901,-99) , 
7, -0.428487, 0, 0, 0.495499,-99) , 
2, 0.0713218, 1, 0, 0.503735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482741,-99) , 
9, 0.525429, 0, 0, 0.500132,-99) , 
NN(
0, 
0, 
-1, -0.605327, 1, -1, 0.475603,-99) , 
7, 0.142939, 0, 0, 0.488079,-99) , 
0, 0.492376, 0, 0, 0.501999,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0260796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493738,-99) , 
8, -0.983149, 1, 0, 0.507684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481925,-99) , 
8, -2.80269, 1, 0, 0.49557,-99) , 
8, -1.92049, 0, 0, 0.499839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510036,-99) , 
NN(
0, 
0, 
-1, -0.29501, 0, -1, 0.483016,-99) , 
2, -0.0709495, 1, 0, 0.488004,-99) , 
7, 1.00001, 1, 0, 0.497145,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0199723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492862,-99) , 
4, 0.999986, 0, 0, 0.500829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41777,-99) , 
4, 0.999705, 0, 0, 0.49849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440407,-99) , 
8, -2.10674, 1, 0, 0.483127,-99) , 
4, 0.999524, 0, 0, 0.497299,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0110237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.82617, 0, 1, 0.521932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497812,-99) , 
2, -0.214098, 1, 0, 0.49922,-99) , 
0, 0.504757, 0, 0, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466037,-99) , 
3, 9.27754, 1, 0, 0.500038,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0203792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496387,-99) , 
0, 0.495234, 1, 0, 0.501727,-99) , 
NN(
0, 
0, 
-1, -0.428313, 0, -1, 0.478825,-99) , 
4, 0.999909, 0, 0, 0.498109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47217,-99) , 
4, 0.999048, 0, 0, 0.496935,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.013274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495978,-99) , 
7, -1.28564, 1, 0, 0.497691,-99) , 
8, -3.81451, 1, 0, 0.4991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470615,-99) , 
5, 0.0237755, 1, 0, 0.498385,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0202205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497404,-99) , 
6, -949.006, 1, 0, 0.502529,-99) , 
9, -1.54983, 1, 0, 0.503918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399949,-99) , 
8, -2.13323, 1, 0, 0.457392,-99) , 
6, -949.846, 0, 0, 0.485172,-99) , 
7, -0.999972, 0, 0, 0.501172,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0165681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.518199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487123,-99) , 
7, 0.931978, 1, 0, 0.501629,-99) , 
7, 1.85713, 0, 0, 0.50281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456583,-99) , 
4, 0.998571, 0, 0, 0.501501,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0328682);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479045,-99) , 
6, -951.286, 0, 0, 0.521816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492184,-99) , 
9, 0.285511, 0, 0, 0.497825,-99) , 
7, -0.428511, 1, 0, 0.502152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484193,-99) , 
6, -951.286, 1, 0, 0.503595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417472,-99) , 
8, -3.26412, 1, 0, 0.490179,-99) , 
9, -1.31675, 0, 0, 0.500175,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0162689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485877,-99) , 
9, -1.73438, 0, 0, 0.503247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456527,-99) , 
7, 0.428539, 0, 0, 0.478377,-99) , 
4, 0.99966, 0, 0, 0.501571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456629,-99) , 
4, 0.998571, 0, 0, 0.500304,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.030925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494911,-99) , 
6, -951.286, 0, 0, 0.506703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482199,-99) , 
7, -0.43807, 0, 0, 0.490743,-99) , 
9, -1.12748, 0, 0, 0.50244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484063,-99) , 
2, 0.073282, 0, 0, 0.490236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454348,-99) , 
7, 2.33335, 1, 0, 0.485951,-99) , 
7, 1.00005, 1, 0, 0.498715,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0277577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48959,-99) , 
9, 1.14957, 0, 0, 0.5303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491095,-99) , 
8, -2.18001, 1, 0, 0.502206,-99) , 
9, 0.921578, 0, 0, 0.504342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468526,-99) , 
6, -946.347, 0, 0, 0.486466,-99) , 
8, 1.90026, 0, 0, 0.491706,-99) , 
8, -0.782658, 1, 0, 0.501516,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.024833);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498982,-99) , 
8, -2.21239, 1, 0, 0.508098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484358,-99) , 
8, -3.28693, 1, 0, 0.496046,-99) , 
9, -0.499273, 0, 0, 0.502886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483328,-99) , 
0, 0.49809, 1, 0, 0.492999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46018,-99) , 
0, 0.49428, 0, 0, 0.48589,-99) , 
8, 0.184117, 1, 0, 0.500744,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0228573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49324,-99) , 
9, -1.24865, 0, 0, 0.507072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475326,-99) , 
9, 3.18447, 1, 0, 0.505256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449813,-99) , 
7, -1.29221, 0, 0, 0.476975,-99) , 
9, -1.71534, 0, 0, 0.502689,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0105603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481863,-99) , 
8, 0.51471, 1, 0, 0.498951,-99) , 
7, 2.14286, 0, 0, 0.500532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45618,-99) , 
4, 0.998571, 0, 0, 0.49929,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0199873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492034,-99) , 
8, -0.819174, 1, 0, 0.502595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47953,-99) , 
8, -0.885634, 0, 0, 0.487402,-99) , 
5, 0.00112917, 0, 0, 0.499661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46446,-99) , 
5, 0.0237147, 1, 0, 0.498779,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0212983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48958,-99) , 
6, -946.347, 1, 0, 0.498435,-99) , 
7, -1.28564, 1, 0, 0.49998,-99) , 
NN(
0, 
0, 
-1, -2.17505, 0, -1, 0.478562,-99) , 
9, -1.82697, 0, 0, 0.498355,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0170109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496267,-99) , 
7, 0.143269, 0, 0, 0.51962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494955,-99) , 
7, -0.999882, 1, 0, 0.497396,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.479995,-99) , 
9, -1.79947, 0, 0, 0.496001,-99) , 
2, -0.214262, 1, 0, 0.497265,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.00849254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472479,-99) , 
9, -2.08165, 0, 0, 0.499126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47631,-99) , 
9, 3.12732, 1, 0, 0.497934,-99) , 
7, 2.14286, 0, 0, 0.499236,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.020753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488541,-99) , 
8, -1.68105, 1, 0, 0.523131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49352,-99) , 
9, 0.174924, 0, 0, 0.498032,-99) , 
7, -0.714261, 1, 0, 0.501069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460532,-99) , 
7, -1.56046, 1, 0, 0.474491,-99) , 
7, -0.841178, 0, 0, 0.487215,-99) , 
9, -1.43905, 0, 0, 0.499142,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.00728328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518099,-99) , 
NN(
0, 
0, 
-1, 2.30612, 1, -1, 0.49802,-99) , 
8, 2.12377, 0, 0, 0.498899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468995,-99) , 
7, -1.8571, 0, 0, 0.497889,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0110658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498543,-99) , 
2, 0.2151, 0, 0, 0.499826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452575,-99) , 
7, 0.428691, 0, 0, 0.475854,-99) , 
4, 0.999728, 0, 0, 0.497889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468268,-99) , 
4, 0.998571, 0, 0, 0.497041,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0167086);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.143224, 0, 1, 0.522782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47101,-99) , 
7, -1.97949, 0, 0, 0.503176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478547,-99) , 
9, 2.03018, 0, 0, 0.487527,-99) , 
7, 1.28573, 1, 0, 0.500677,-99) , 
2, -0.214257, 1, 0, 0.50188,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.050117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.0004, 0, 1, 0.532134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.191405,-99) , 
6, -2.16709, 0, 0, 0.489617,-99) , 
6, 0.31376, 0, 0, 0.505931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496204,-99) , 
8, 1.26973, 0, 0, 0.498992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437687,-99) , 
7, -1.57139, 0, 0, 0.494804,-99) , 
6, -949.398, 0, 0, 0.500334,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0229129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478159,-99) , 
8, -1.36083, 1, 0, 0.521765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492992,-99) , 
6, -946.347, 1, 0, 0.49852,-99) , 
7, -0.99993, 1, 0, 0.500245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524191,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.466968,-99) , 
7, -0.841375, 0, 0, 0.482798,-99) , 
9, -1.43905, 0, 0, 0.497794,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0193191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497172,-99) , 
7, -0.142806, 1, 0, 0.502942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47968,-99) , 
6, -951.286, 1, 0, 0.491903,-99) , 
9, -1.09553, 0, 0, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480906,-99) , 
9, 3.12836, 1, 0, 0.499357,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.00952861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46704,-99) , 
4, 0.998571, 0, 0, 0.500546,-99) , 
6, 1.39928, 0, 0, 0.501967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477101,-99) , 
9, 3.26817, 1, 0, 0.500732,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0200099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492491,-99) , 
8, -0.860031, 1, 0, 0.516348,-99) , 
NN(
0, 
0, 
-1, 1.31233, 1, -1, 0.495035,-99) , 
9, 1.11361, 0, 0, 0.497544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461291,-99) , 
7, -0.346945, 1, 0, 0.475635,-99) , 
7, 1.28575, 0, 0, 0.484425,-99) , 
8, 0.0496582, 1, 0, 0.495735,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0193619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487539,-99) , 
8, -1.65188, 1, 0, 0.521282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493913,-99) , 
6, -949.006, 1, 0, 0.500358,-99) , 
7, -0.999938, 1, 0, 0.502059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472761,-99) , 
6, -951.286, 1, 0, 0.486855,-99) , 
9, -1.67717, 0, 0, 0.500589,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0235874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.68975, 1, 1, 0.522134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45409,-99) , 
7, 2.34694, 1, 0, 0.499679,-99) , 
7, -0.428548, 1, 0, 0.503158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474884,-99) , 
7, -1.69592, 1, 0, 0.482899,-99) , 
7, -0.261715, 0, 0, 0.492117,-99) , 
9, -0.888047, 0, 0, 0.500187,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0250045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491808,-99) , 
8, -2.80459, 1, 0, 0.498799,-99) , 
9, 0.831193, 0, 0, 0.502327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472281,-99) , 
7, -0.0612165, 0, 0, 0.492907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453136,-99) , 
7, 2.14286, 1, 0, 0.488622,-99) , 
8, -1.03737, 1, 0, 0.498704,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.021207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45266,-99) , 
4, 0.999456, 0, 0, 0.500963,-99) , 
4, 0.998571, 1, 0, 0.502404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443602,-99) , 
8, -1.4763, 1, 0, 0.476974,-99) , 
9, 2.00609, 0, 0, 0.485687,-99) , 
7, 1.28566, 1, 0, 0.49975,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0142185);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49225,-99) , 
6, -951.286, 0, 0, 0.497266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472274,-99) , 
9, 3.12732, 1, 0, 0.495951,-99) , 
7, 2.14286, 0, 0, 0.497323,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0214631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493499,-99) , 
9, 0.84153, 0, 0, 0.49598,-99) , 
NN(
0, 
0, 
-1, 1.85715, 1, -1, 0.486659,-99) , 
8, -1.20998, 1, 0, 0.493242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464024,-99) , 
0, 0.489519, 0, 0, 0.492316,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0191523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495344,-99) , 
8, -1.81684, 1, 0, 0.518586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483729,-99) , 
2, 0.0713744, 1, 0, 0.49728,-99) , 
7, -0.42855, 1, 0, 0.500599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477163,-99) , 
7, -1.6139, 1, 0, 0.482674,-99) , 
7, -0.354388, 0, 0, 0.489541,-99) , 
9, -0.978164, 0, 0, 0.497879,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0221932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483642,-99) , 
7, 0.815771, 1, 0, 0.499287,-99) , 
9, 1.1867, 0, 0, 0.501113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486992,-99) , 
7, -0.142403, 1, 0, 0.495555,-99) , 
NN(
0, 
0, 
-1, -0.428554, 0, -1, 0.468541,-99) , 
9, 1.79309, 0, 0, 0.485555,-99) , 
8, -0.802044, 1, 0, 0.497584,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0250345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491606,-99) , 
6, -951.286, 0, 0, 0.521431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487976,-99) , 
6, -946.347, 1, 0, 0.494265,-99) , 
7, -0.428543, 1, 0, 0.499289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508859,-99) , 
NN(
0, 
0, 
-1, -1.0631, 0, -1, 0.471745,-99) , 
6, -949.846, 1, 0, 0.487176,-99) , 
9, -1.35492, 0, 0, 0.497397,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.014943);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486719,-99) , 
9, -0.898708, 0, 0, 0.498347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464143,-99) , 
4, 0.999637, 0, 0, 0.496754,-99) , 
4, 0.999048, 1, 0, 0.498119,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0398858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.700701, 0, 1, 0.507458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48568,-99) , 
6, -946.347, 0, 0, 0.493259,-99) , 
8, -1.10367, 1, 0, 0.503608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31152,-99) , 
6, -1.28567, 0, 0, 0.495886,-99) , 
NN(
0, 
0, 
-1, 1.28552, 1, -1, 0.483859,-99) , 
6, -951.286, 0, 0, 0.489807,-99) , 
0, 0.499043, 1, 0, 0.49784,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0230771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489493,-99) , 
7, 0.142934, 0, 0, 0.525379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494351,-99) , 
2, 0.136933, 0, 0, 0.496761,-99) , 
4, 0.999524, 1, 0, 0.499267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478467,-99) , 
8, -2.04471, 1, 0, 0.491208,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.46335,-99) , 
2, -0.0712632, 0, 0, 0.482784,-99) , 
3, 4.6823, 1, 0, 0.496196,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0149232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490273,-99) , 
7, 0.429459, 0, 0, 0.512141,-99) , 
NN(
0, 
0, 
-1, 1.57146, 1, -1, 0.496707,-99) , 
6, 0.877635, 0, 0, 0.498489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490805,-99) , 
0, 0.502127, 0, 0, 0.499585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46555,-99) , 
0, 0.497138, 0, 0, 0.485618,-99) , 
8, 0.343455, 1, 0, 0.497006,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0154982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489757,-99) , 
9, -0.434382, 0, 0, 0.498517,-99) , 
7, -1.28567, 1, 0, 0.500029,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.479345,-99) , 
9, -1.82678, 0, 0, 0.498423,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0144895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498198,-99) , 
7, -0.136295, 0, 0, 0.525627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473445,-99) , 
7, 1.57138, 1, 0, 0.498874,-99) , 
6, 0.877635, 0, 0, 0.502066,-99) , 
NN(
0, 
0, 
-1, -0.0716043, 0, -1, 0.489907,-99) , 
8, -0.686221, 1, 0, 0.499502,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0156839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0740045, 1, 1, 0.512517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495009,-99) , 
2, 0.214892, 0, 0, 0.496422,-99) , 
0, 0.502852, 0, 0, 0.498876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4739,-99) , 
4, 0.999048, 0, 0, 0.497757,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0326401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491671,-99) , 
7, 0.761754, 0, 0, 0.49522,-99) , 
9, 0.101651, 0, 0, 0.499844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475257,-99) , 
8, -0.0203846, 1, 0, 0.49898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464846,-99) , 
9, 1.42521, 0, 0, 0.481268,-99) , 
7, 0.714305, 1, 0, 0.490272,-99) , 
8, -1.89235, 1, 0, 0.49561,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0183729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496516,-99) , 
7, -0.42807, 1, 0, 0.505133,-99) , 
8, -0.497824, 1, 0, 0.511917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488832,-99) , 
6, -951.286, 0, 0, 0.521672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484031,-99) , 
7, 0.683327, 1, 0, 0.496503,-99) , 
4, 0.999524, 1, 0, 0.498812,-99) , 
9, 1.38529, 0, 0, 0.501372,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0169067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492627,-99) , 
4, 0.999974, 0, 0, 0.502079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457003,-99) , 
0, 0.497138, 0, 0, 0.480826,-99) , 
4, 0.999728, 0, 0, 0.500357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451614,-99) , 
4, 0.998571, 0, 0, 0.499016,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0149082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494488,-99) , 
8, -2.05643, 1, 0, 0.501441,-99) , 
8, 1.3899, 0, 0, 0.502377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476715,-99) , 
5, 0.0237147, 1, 0, 0.501733,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0204128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.549736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475854,-99) , 
8, -2.06389, 1, 0, 0.52472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496339,-99) , 
9, 0.55255, 0, 0, 0.501625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468783,-99) , 
4, 0.999773, 0, 0, 0.50008,-99) , 
4, 0.999524, 1, 0, 0.50208,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0144725);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476948,-99) , 
9, -1.8192, 0, 0, 0.521905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468074,-99) , 
9, 3.30175, 1, 0, 0.498613,-99) , 
7, -1.28564, 1, 0, 0.50095,-99) , 
4, 0.998571, 1, 0, 0.502031,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0290979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488611,-99) , 
8, -1.61203, 1, 0, 0.527204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494114,-99) , 
4, 0.999524, 1, 0, 0.497108,-99) , 
9, 0.278379, 0, 0, 0.502332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483578,-99) , 
7, 0.265335, 0, 0, 0.495562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425216,-99) , 
9, 1.72456, 0, 0, 0.466466,-99) , 
7, 1.57146, 1, 0, 0.489011,-99) , 
8, -1.20998, 1, 0, 0.498441,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0199981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.27992, 0, 1, 0.531145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482092,-99) , 
8, -1.5, 1, 0, 0.502905,-99) , 
9, 1.04214, 0, 0, 0.504777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474001,-99) , 
3, 4.09992, 1, 0, 0.495563,-99) , 
NN(
0, 
0, 
-1, 0.492694, 1, -1, 0.466594,-99) , 
0, 0.495234, 0, 0, 0.487759,-99) , 
8, -0.670213, 1, 0, 0.501254,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0150125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494237,-99) , 
3, 1.38836, 1, 0, 0.498402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46949,-99) , 
3, 9.27754, 1, 0, 0.497633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474885,-99) , 
9, 3.26817, 1, 0, 0.496494,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0207811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488682,-99) , 
9, 0.848453, 0, 0, 0.528559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489705,-99) , 
8, -2.22753, 1, 0, 0.500919,-99) , 
9, 0.629171, 0, 0, 0.503055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475313,-99) , 
3, 3.744, 1, 0, 0.493833,-99) , 
NN(
0, 
0, 
-1, 1.72456, 0, -1, 0.466267,-99) , 
7, 1.57144, 1, 0, 0.487604,-99) , 
8, -1.20998, 1, 0, 0.498563,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0131119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495943,-99) , 
7, 2.14285, 0, 0, 0.497006,-99) , 
2, -0.214262, 1, 0, 0.49823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461756,-99) , 
4, 0.998572, 0, 0, 0.497191,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.017826);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497165,-99) , 
7, -0.931895, 1, 0, 0.500954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442979,-99) , 
7, -1.24093, 0, 0, 0.48006,-99) , 
9, -1.69555, 0, 0, 0.499323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477772,-99) , 
7, -1.85705, 0, 0, 0.498596,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0196774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.96739, 1, 1, 0.506914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479774,-99) , 
8, -2.76491, 1, 0, 0.495143,-99) , 
9, -0.0820782, 0, 0, 0.501137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4558,-99) , 
4, 0.998571, 0, 0, 0.499878,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.017526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214201, 0, 1, 0.505126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453264,-99) , 
6, -949.846, 0, 0, 0.48681,-99) , 
7, -1.28568, 0, 0, 0.503399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476333,-99) , 
5, 0.023694, 1, 0, 0.502721,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.016708);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492002,-99) , 
8, -1.49118, 1, 0, 0.509832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498001,-99) , 
4, 0.999524, 1, 0, 0.500015,-99) , 
7, -0.428543, 1, 0, 0.502972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511827,-99) , 
NN(
0, 
0, 
-1, -2.01074, 1, -1, 0.483933,-99) , 
2, 0.0723583, 0, 0, 0.490469,-99) , 
0, 0.494281, 0, 0, 0.500445,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0113855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85713, 0, 1, 0.502086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445466,-99) , 
4, 0.999705, 0, 0, 0.50048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446512,-99) , 
9, -0.448576, 1, 0, 0.482212,-99) , 
4, 0.999524, 0, 0, 0.499093,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0141149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.90432, 1, 1, 0.525861,-99) , 
NN(
0, 
0, 
-1, 3.40276, 1, -1, 0.497518,-99) , 
7, -0.714199, 1, 0, 0.50091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501025,-99) , 
NN(
0, 
0, 
-1, -1.15969, 0, -1, 0.470081,-99) , 
6, -949.846, 1, 0, 0.482688,-99) , 
9, -1.43905, 0, 0, 0.498395,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0154548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499009,-99) , 
7, -0.931892, 1, 0, 0.502192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433275,-99) , 
7, -1.23355, 0, 0, 0.479063,-99) , 
9, -1.6736, 0, 0, 0.500302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471987,-99) , 
7, -1.85706, 0, 0, 0.499358,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0142866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213079, 1, 1, 0.504461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448802,-99) , 
4, 0.999705, 0, 0, 0.502852,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.476664,-99) , 
4, 0.999524, 0, 0, 0.500863,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0258913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.53205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487908,-99) , 
3, 4.59668, 1, 0, 0.511474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487057,-99) , 
2, 0.0228408, 0, 0, 0.494908,-99) , 
2, -0.0510107, 1, 0, 0.497903,-99) , 
2, -0.214261, 1, 0, 0.499762,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.018859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490139,-99) , 
9, -1.35492, 0, 0, 0.502936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439408,-99) , 
4, 0.999705, 0, 0, 0.501135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449432,-99) , 
8, -2.76308, 1, 0, 0.476789,-99) , 
4, 0.999524, 0, 0, 0.499298,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0147835);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494558,-99) , 
9, -0.324713, 0, 0, 0.500972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451079,-99) , 
4, 0.999508, 1, 0, 0.481018,-99) , 
4, 0.999728, 0, 0, 0.499334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469571,-99) , 
4, 0.998572, 0, 0, 0.498485,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0140919);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496594,-99) , 
9, 1.37201, 0, 0, 0.49847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466264,-99) , 
9, 3.1025, 1, 0, 0.496776,-99) , 
7, 2.14285, 0, 0, 0.498279,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0164597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.27992, 0, 1, 0.526657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485455,-99) , 
7, 0.990031, 1, 0, 0.49985,-99) , 
9, 1.04214, 0, 0, 0.501628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482186,-99) , 
7, -0.427748, 1, 0, 0.487643,-99) , 
9, 1.24759, 1, 0, 0.491114,-99) , 
8, -0.668845, 1, 0, 0.499424,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.00897529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522973,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.497355,-99) , 
7, 2.14288, 0, 0, 0.49845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474828,-99) , 
4, 0.999048, 0, 0, 0.497387,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0150812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499258,-99) , 
7, 1.22401, 0, 0, 0.501104,-99) , 
9, 0.659883, 0, 0, 0.504069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472161,-99) , 
2, 0.0719444, 1, 0, 0.498216,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.481973,-99) , 
7, 0.428613, 0, 0, 0.490857,-99) , 
8, -1.20998, 1, 0, 0.500169,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0225162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.764137, 0, 1, 0.536638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487075,-99) , 
8, -2.31175, 1, 0, 0.501588,-99) , 
9, 0.548462, 0, 0, 0.504456,-99) , 
NN(
0, 
0, 
-1, -0.42851, 0, -1, 0.489745,-99) , 
8, -1.29058, 1, 0, 0.499918,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0113226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498489,-99) , 
7, -1.57139, 1, 0, 0.49996,-99) , 
4, 0.999048, 1, 0, 0.50145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504859,-99) , 
NN(
0, 
0, 
-1, -2.04984, 1, -1, 0.483854,-99) , 
9, 1.58406, 0, 0, 0.487866,-99) , 
0, 0.493328, 0, 0, 0.499387,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00797594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493872,-99) , 
7, 0.713772, 1, 0, 0.511722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484915,-99) , 
0, 0.502772, 1, 0, 0.500076,-99) , 
0, 0.504167, 0, 0, 0.501233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48078,-99) , 
0, 0.489519, 0, 0, 0.500578,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0121462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41909, 0, 1, 0.503545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473707,-99) , 
7, 2.14286, 1, 0, 0.502407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51289,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.480504,-99) , 
8, 2.21363, 0, 0, 0.490603,-99) , 
8, 0.184117, 1, 0, 0.500902,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0230987);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493799,-99) , 
8, -1.42902, 1, 0, 0.547542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496215,-99) , 
7, 1.34676, 0, 0, 0.498351,-99) , 
9, 0.592046, 0, 0, 0.502667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482795,-99) , 
2, 0.00325891, 1, 0, 0.49232,-99) , 
NN(
0, 
0, 
-1, -0.139582, 0, -1, 0.46355,-99) , 
2, -0.0715585, 0, 0, 0.487063,-99) , 
8, -1.20998, 1, 0, 0.498133,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.022092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499633,-99) , 
7, 0.767165, 0, 0, 0.503436,-99) , 
9, 0.134772, 0, 0, 0.508138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498871,-99) , 
9, 0.175151, 1, 0, 0.506091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463598,-99) , 
9, 1.63594, 0, 0, 0.479308,-99) , 
7, 1.00002, 1, 0, 0.495408,-99) , 
8, -1.78604, 1, 0, 0.502855,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0266009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.517667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49031,-99) , 
6, -946.347, 1, 0, 0.49866,-99) , 
7, 0.142915, 1, 0, 0.50454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491124,-99) , 
7, -0.207433, 0, 0, 0.500198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457162,-99) , 
8, -2.8507, 1, 0, 0.494016,-99) , 
9, -0.819933, 0, 0, 0.501522,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0138798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28564, 1, 1, 0.504815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484346,-99) , 
7, -0.803452, 0, 0, 0.493708,-99) , 
9, -1.39422, 0, 0, 0.503105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486694,-99) , 
9, 3.26817, 1, 0, 0.50228,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0694401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378981,-99) , 
6, -0.9081, 0, 0, 0.508812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443053,-99) , 
7, -1.57135, 0, 0, 0.496504,-99) , 
6, -949.398, 0, 0, 0.502613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465384,-99) , 
5, 0.0237843, 1, 0, 0.501679,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0182673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495138,-99) , 
7, -1.97957, 0, 0, 0.515009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493024,-99) , 
3, 0.49124, 1, 0, 0.494796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470135,-99) , 
3, 8.84469, 1, 0, 0.494018,-99) , 
7, -1.57139, 1, 0, 0.495298,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0250126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69174, 1, 1, 0.532938,-99) , 
NN(
0, 
0, 
-1, -2.16147, 1, -1, 0.492688,-99) , 
9, -1.66686, 0, 0, 0.512641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494939,-99) , 
9, 0.100715, 0, 0, 0.502337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476388,-99) , 
7, 0.904783, 1, 0, 0.489392,-99) , 
8, -1.68854, 1, 0, 0.496928,-99) , 
7, -0.999972, 1, 0, 0.499296,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0238846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490912,-99) , 
8, -1.03809, 1, 0, 0.527993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49009,-99) , 
8, -2.39071, 1, 0, 0.499861,-99) , 
9, 0.973322, 0, 0, 0.501937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485895,-99) , 
6, -951.286, 0, 0, 0.494957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466063,-99) , 
2, -0.0704755, 0, 0, 0.48963,-99) , 
8, -0.726185, 1, 0, 0.499252,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0210934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498574,-99) , 
4, 0.999524, 1, 0, 0.501452,-99) , 
9, 0.77197, 0, 0, 0.504326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481533,-99) , 
9, 0.629584, 1, 0, 0.48711,-99) , 
8, 1.9643, 0, 0, 0.490947,-99) , 
8, -1.29058, 1, 0, 0.500194,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0281268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481806,-99) , 
8, -1.14477, 1, 0, 0.501738,-99) , 
7, -1.28527, 1, 0, 0.505493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477466,-99) , 
8, -1.81378, 1, 0, 0.491211,-99) , 
8, 1.68255, 0, 0, 0.495571,-99) , 
6, -946.347, 0, 0, 0.500456,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0154781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503843,-99) , 
NN(
0, 
0, 
-1, 0.0520936, 0, -1, 0.490061,-99) , 
0, 0.503487, 1, 0, 0.50159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487101,-99) , 
8, -2.21469, 1, 0, 0.496638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44064,-99) , 
4, 0.999524, 0, 0, 0.491031,-99) , 
0, 0.495233, 0, 0, 0.498825,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.017721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.72138, 0, 1, 0.534273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496225,-99) , 
8, -4.09874, 1, 0, 0.498332,-99) , 
9, 1.46466, 0, 0, 0.500517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503145,-99) , 
NN(
0, 
0, 
-1, 0.730345, 0, -1, 0.473565,-99) , 
8, 2.09193, 0, 0, 0.482723,-99) , 
8, 0.0496582, 1, 0, 0.498088,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0199383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49923,-99) , 
8, -2.351, 1, 0, 0.504915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484716,-99) , 
8, -3.68641, 1, 0, 0.493248,-99) , 
9, -0.676932, 0, 0, 0.500873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476672,-99) , 
9, 3.26817, 1, 0, 0.49968,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0178321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.23008, 1, 1, 0.508364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493021,-99) , 
7, 0.187864, 0, 0, 0.496372,-99) , 
9, -0.545818, 0, 0, 0.503772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482573,-99) , 
9, 3.36733, 1, 0, 0.502787,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.00876596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499921,-99) , 
9, -0.134497, 0, 0, 0.512415,-99) , 
2, -0.0713974, 1, 0, 0.518412,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57135, 1, 1, 0.501851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480771,-99) , 
4, 0.999048, 0, 0, 0.50095,-99) , 
0, 0.503805, 0, 0, 0.502918,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0153251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57134, 1, 1, 0.50412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432473,-99) , 
7, 0.143103, 0, 0, 0.469497,-99) , 
4, 0.99966, 0, 0, 0.501805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428818,-99) , 
4, 0.998571, 0, 0, 0.499861,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.00891961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498282,-99) , 
3, 0.417331, 1, 0, 0.4995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471773,-99) , 
3, 7.29236, 1, 0, 0.498524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468601,-99) , 
3, 8.99096, 1, 0, 0.497663,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0138179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483485,-99) , 
4, 0.999864, 0, 0, 0.507665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495966,-99) , 
2, -0.212959, 1, 0, 0.496935,-99) , 
0, 0.5019, 0, 0, 0.499153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477942,-99) , 
4, 0.999048, 0, 0, 0.498195,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0127263);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97954, 0, 1, 0.524031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478871,-99) , 
9, 3.08641, 1, 0, 0.501206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477744,-99) , 
9, 1.76946, 0, 0, 0.486073,-99) , 
7, 1.47623, 1, 0, 0.499224,-99) , 
7, -1.57134, 1, 0, 0.500739,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0735612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00018, 0, 1, 0.537378,-99) , 
NN(
0, 
0, 
-1, 0.441096, 1, -1, 0.398312,-99) , 
6, -0.885652, 0, 0, 0.503902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482702,-99) , 
8, -3.26796, 1, 0, 0.489126,-99) , 
8, 1.7223, 0, 0, 0.492916,-99) , 
6, -949.006, 0, 0, 0.498372,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.017005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.929331, 0, 1, 0.505094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476008,-99) , 
7, -0.850465, 0, 0, 0.488451,-99) , 
9, -1.44751, 0, 0, 0.502652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47878,-99) , 
9, 3.12836, 1, 0, 0.501342,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0172609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489507,-99) , 
9, -0.884909, 0, 0, 0.49998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443974,-99) , 
4, 0.999705, 0, 0, 0.498416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428405,-99) , 
0, 0.496185, 0, 0, 0.475015,-99) , 
4, 0.999524, 0, 0, 0.496659,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0276293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491716,-99) , 
7, 0.42861, 1, 0, 0.49642,-99) , 
8, -2.05215, 1, 0, 0.500896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483916,-99) , 
7, -1.15158, 0, 0, 0.501999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480381,-99) , 
8, -2.12048, 0, 0, 0.484309,-99) , 
8, -3.42911, 1, 0, 0.489502,-99) , 
9, -0.15686, 0, 0, 0.495459,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.013735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495224,-99) , 
2, 0.214318, 0, 0, 0.496225,-99) , 
0, 0.505709, 0, 0, 0.497363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465456,-99) , 
4, 0.998571, 0, 0, 0.496468,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0109987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.523505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498033,-99) , 
7, -1.61217, 1, 0, 0.499545,-99) , 
7, 1.85715, 0, 0, 0.50124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47687,-99) , 
4, 0.999048, 0, 0, 0.500152,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0221534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.519582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464221,-99) , 
9, 3.61456, 1, 0, 0.499461,-99) , 
7, -0.142831, 1, 0, 0.504162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484145,-99) , 
7, -0.363948, 0, 0, 0.494947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450716,-99) , 
8, -2.90752, 1, 0, 0.490114,-99) , 
9, -1.00355, 0, 0, 0.50083,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0223395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492562,-99) , 
9, -1.86942, 0, 0, 0.522768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491117,-99) , 
6, -946.347, 1, 0, 0.498857,-99) , 
7, -1.28568, 1, 0, 0.501222,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.471441,-99) , 
4, 0.999524, 0, 0, 0.499009,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0136353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.97952, 0, 1, 0.516435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495847,-99) , 
8, -2.89576, 1, 0, 0.499148,-99) , 
7, -1.57136, 1, 0, 0.500181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47545,-99) , 
0, 0.505709, 1, 0, 0.499138,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0235972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494215,-99) , 
0, 0.499995, 1, 0, 0.502839,-99) , 
9, 1.10821, 0, 0, 0.504996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46768,-99) , 
6, -946.347, 0, 0, 0.482965,-99) , 
8, 2.01613, 0, 0, 0.489595,-99) , 
8, -0.63303, 1, 0, 0.501846,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0209016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494516,-99) , 
6, -951.286, 0, 0, 0.51821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494473,-99) , 
6, -946.347, 1, 0, 0.500515,-99) , 
7, -0.428543, 1, 0, 0.503704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511331,-99) , 
NN(
0, 
0, 
-1, -3.28737, 1, -1, 0.482776,-99) , 
8, -4.04966, 1, 0, 0.491284,-99) , 
9, -1.31675, 0, 0, 0.501686,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0218147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495426,-99) , 
9, 1.19537, 0, 0, 0.497298,-99) , 
7, -1.85676, 1, 0, 0.499122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484469,-99) , 
7, 0.714312, 0, 0, 0.502475,-99) , 
NN(
0, 
0, 
-1, 0.503532, 1, -1, 0.473945,-99) , 
0, 0.49809, 1, 0, 0.488179,-99) , 
8, -0.706799, 1, 0, 0.496779,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.013368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501194, 0, 1, 0.505665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479919,-99) , 
7, 1.57143, 1, 0, 0.497137,-99) , 
8, -1.36747, 1, 0, 0.503222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480737,-99) , 
9, 3.21989, 1, 0, 0.502059,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0183123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.394754, 0, 1, 0.505704,-99) , 
NN(
0, 
0, 
-1, -0.355121, 1, -1, 0.481188,-99) , 
6, 0.877635, 1, 0, 0.502841,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486179,-99) , 
9, 1.63605, 0, 0, 0.49306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447823,-99) , 
7, 2.34694, 1, 0, 0.485692,-99) , 
7, 1.28573, 1, 0, 0.500158,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.00901219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498256,-99) , 
2, 0.0306608, 0, 0, 0.500099,-99) , 
2, -0.214216, 1, 0, 0.501124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45989,-99) , 
4, 0.998572, 0, 0, 0.499982,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.00904385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.16309, 1, 1, 0.501993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460365,-99) , 
7, -1.22564, 0, 0, 0.482671,-99) , 
9, -1.68217, 0, 0, 0.500427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467588,-99) , 
7, -1.85705, 0, 0, 0.499361,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.012022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499732,-99) , 
3, 2.5409, 1, 0, 0.51894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483294,-99) , 
0, 0.499043, 0, 0, 0.493297,-99) , 
3, 4.73105, 1, 0, 0.511017,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.496408,-99) , 
2, -0.0714351, 1, 0, 0.499092,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0203708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0812975, 1, 1, 0.50956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490533,-99) , 
3, 1.17628, 1, 0, 0.49552,-99) , 
0, 0.500947, 0, 0, 0.499232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467616,-99) , 
0, 0.500948, 1, 0, 0.495149,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.471376,-99) , 
2, 0.0714289, 1, 0, 0.487805,-99) , 
3, 4.6823, 1, 0, 0.4971,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.00791052);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517564,-99) , 
NN(
NN(
0, 
0, 
-1, -1.65457, 1, 1, 0.527157,-99) , 
NN(
0, 
0, 
-1, 3.60184, 1, -1, 0.498814,-99) , 
7, -1.28564, 1, 0, 0.500642,-99) , 
8, -3.81139, 1, 0, 0.501902,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0154122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493479,-99) , 
7, 1.6667, 1, 0, 0.505688,-99) , 
0, 0.493328, 1, 0, 0.510672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47865,-99) , 
4, 0.999841, 0, 0, 0.501199,-99) , 
NN(
0, 
0, 
-1, -0.142763, 0, -1, 0.479904,-99) , 
4, 0.999524, 0, 0, 0.499624,-99) , 
7, 1.00002, 0, 0, 0.502158,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0602019);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488908,-99) , 
9, -1.8693, 0, 0, 0.522874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455779,-99) , 
8, -1.89193, 1, 0, 0.491671,-99) , 
6, -951.286, 0, 0, 0.506058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486818,-99) , 
7, 1.23132, 1, 0, 0.501829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378829,-99) , 
6, -0.895786, 0, 0, 0.491347,-99) , 
6, -951.286, 1, 0, 0.496598,-99) , 
7, -0.714225, 1, 0, 0.498663,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0134016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476574,-99) , 
7, 2.34694, 1, 0, 0.512709,-99) , 
NN(
0, 
0, 
-1, 3.07124, 1, -1, 0.495068,-99) , 
7, 1.85716, 0, 0, 0.496309,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.027915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481186,-99) , 
8, -1.53597, 1, 0, 0.506977,-99) , 
9, 2.03018, 0, 0, 0.514135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481495,-99) , 
9, -1.8192, 0, 0, 0.510315,-99) , 
NN(
0, 
0, 
-1, 2.73628, 1, -1, 0.491628,-99) , 
7, -1.36734, 1, 0, 0.493559,-99) , 
7, 1.28564, 0, 0, 0.496878,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.00889317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214142, 1, 1, 0.502591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479293,-99) , 
4, 0.999048, 0, 0, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477044,-99) , 
9, 3.18444, 1, 0, 0.500237,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0218377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480803,-99) , 
0, 0.500947, 1, 0, 0.506461,-99) , 
2, 0.0709974, 0, 0, 0.514123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493546,-99) , 
9, 0.607018, 0, 0, 0.497415,-99) , 
NN(
0, 
0, 
-1, -0.346908, 1, -1, 0.477764,-99) , 
6, 0.877635, 1, 0, 0.495139,-99) , 
7, 1.28574, 0, 0, 0.498232,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0238632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472573,-99) , 
8, -1.42889, 1, 0, 0.509341,-99) , 
9, 1.54486, 0, 0, 0.518029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493929,-99) , 
6, -946.347, 0, 0, 0.50047,-99) , 
NN(
0, 
0, 
-1, 2.03729, 0, -1, 0.470903,-99) , 
8, 0.366343, 1, 0, 0.497237,-99) , 
7, 1.57143, 0, 0, 0.499542,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.016038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25655, 0, 1, 0.538273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489094,-99) , 
8, -1.54184, 1, 0, 0.500985,-99) , 
9, 1.02668, 0, 0, 0.503471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492843,-99) , 
9, 1.27392, 1, 0, 0.498492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465805,-99) , 
2, 0.0722389, 1, 0, 0.492608,-99) , 
8, -0.706799, 1, 0, 0.50113,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0120176);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496081,-99) , 
7, -0.714259, 1, 0, 0.498372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461162,-99) , 
4, 0.999252, 0, 0, 0.497362,-99) , 
4, 0.998571, 1, 0, 0.498199,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0140834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486809,-99) , 
7, 2.34694, 1, 0, 0.522257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472592,-99) , 
9, 3.12795, 1, 0, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475146,-99) , 
0, 0.490471, 0, 0, 0.499918,-99) , 
7, 1.85714, 0, 0, 0.50151,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0164821);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495157,-99) , 
9, 0.00626587, 0, 0, 0.506389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496282,-99) , 
2, -0.215616, 1, 0, 0.497578,-99) , 
0, 0.499043, 0, 0, 0.501328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465032,-99) , 
4, 0.998571, 0, 0, 0.500323,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0173967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.167555, 1, 1, 0.52186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492744,-99) , 
2, 0.0228943, 0, 0, 0.497694,-99) , 
2, -0.132575, 1, 0, 0.499064,-99) , 
NN(
0, 
0, 
-1, -0.205877, 1, -1, 0.477964,-99) , 
2, -0.214208, 0, 0, 0.497995,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0189651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491521,-99) , 
7, 0.155645, 1, 0, 0.500283,-99) , 
9, 0.984524, 0, 0, 0.502387,-99) , 
NN(
0, 
0, 
-1, -0.0691908, 0, -1, 0.489672,-99) , 
8, -0.782658, 1, 0, 0.499558,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0100856);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47741,-99) , 
9, 3.1111, 1, 0, 0.500572,-99) , 
7, 2.14287, 0, 0, 0.501836,-99) , 
4, 0.998571, 1, 0, 0.502777,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.00868038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85715, 0, 1, 0.501978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458876,-99) , 
7, -0.42851, 0, 0, 0.490482,-99) , 
4, 0.999909, 0, 0, 0.50016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482741,-99) , 
4, 0.999048, 0, 0, 0.499388,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.017232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49703,-99) , 
6, -951.286, 0, 0, 0.523176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496703,-99) , 
7, 2.25171, 1, 0, 0.515323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495735,-99) , 
9, 0.598583, 0, 0, 0.499253,-99) , 
NN(
0, 
0, 
-1, -2.12217, 1, -1, 0.479343,-99) , 
6, 0.877635, 1, 0, 0.496936,-99) , 
7, 1.57145, 0, 0, 0.498985,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0172008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.77599, 0, 1, 0.523447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49237,-99) , 
6, -946.347, 1, 0, 0.498257,-99) , 
7, -1.28563, 1, 0, 0.500762,-99) , 
NN(
0, 
0, 
-1, -2.11266, 1, -1, 0.478264,-99) , 
4, 0.999524, 0, 0, 0.49908,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0136734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492931,-99) , 
9, -0.848493, 0, 0, 0.500782,-99) , 
4, 0.998572, 1, 0, 0.502213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471395,-99) , 
8, -2.25026, 1, 0, 0.483917,-99) , 
0, 0.491424, 0, 0, 0.500765,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0116711);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538562,-99) , 
NN(
0, 
0, 
-1, 0.999252, 0, -1, 0.495248,-99) , 
4, 0.998571, 1, 0, 0.496636,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0138331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493306,-99) , 
8, -0.979983, 1, 0, 0.505919,-99) , 
0, 0.493329, 1, 0, 0.510615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496988,-99) , 
7, -1.35753, 1, 0, 0.498855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468762,-99) , 
7, -1.9795, 0, 0, 0.497911,-99) , 
7, 1.28573, 0, 0, 0.499977,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0163765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0668194, 1, 1, 0.505306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489568,-99) , 
9, 1.63432, 0, 0, 0.493968,-99) , 
3, 2.62134, 1, 0, 0.500846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473681,-99) , 
3, 8.99096, 1, 0, 0.500049,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0112743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497827,-99) , 
7, -0.238007, 1, 0, 0.501127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473407,-99) , 
0, 0.489519, 0, 0, 0.500252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466114,-99) , 
7, -1.85705, 0, 0, 0.499146,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0102173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46984,-99) , 
3, 6.48282, 1, 0, 0.49986,-99) , 
3, 9.02951, 0, 0, 0.500711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472052,-99) , 
4, 0.998571, 0, 0, 0.499906,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0148975);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494755,-99) , 
2, 0.00402492, 0, 0, 0.500835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457812,-99) , 
8, -0.977504, 1, 0, 0.490247,-99) , 
2, -0.0707669, 0, 0, 0.499029,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.483164,-99) , 
0, 0.491424, 0, 0, 0.497772,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0217445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491756,-99) , 
7, 1.13599, 1, 0, 0.518839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497549,-99) , 
7, -1.6184, 1, 0, 0.499913,-99) , 
9, 0.341374, 0, 0, 0.502722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476343,-99) , 
2, 0.0729104, 1, 0, 0.502337,-99) , 
NN(
0, 
0, 
-1, 1.54208, 0, -1, 0.471334,-99) , 
7, 0.142894, 0, 0, 0.491053,-99) , 
8, -1.20998, 1, 0, 0.499301,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0185323);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493144,-99) , 
8, -1.08638, 1, 0, 0.536539,-99) , 
NN(
0, 
0, 
-1, -3.29791, 1, 1, 0.505373,-99) , 
9, 0.923302, 0, 0, 0.507712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493561,-99) , 
8, 1.90026, 0, 0, 0.499274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471397,-99) , 
2, -0.0704297, 0, 0, 0.494227,-99) , 
8, -0.782658, 1, 0, 0.504693,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0148241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499686,-99) , 
8, -2.82606, 1, 0, 0.502631,-99) , 
NN(
0, 
0, 
-1, -3.26973, 1, -1, 0.488793,-99) , 
9, -1.25553, 0, 0, 0.500169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477101,-99) , 
4, 0.999977, 0, 0, 0.489071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448453,-99) , 
4, 0.999524, 0, 0, 0.482623,-99) , 
2, 0.0717627, 1, 0, 0.497027,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0168812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54514, 1, 1, 0.538331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496985,-99) , 
8, -4.09872, 1, 0, 0.49926,-99) , 
9, 0.532075, 0, 0, 0.502569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475819,-99) , 
9, 3.07358, 1, 0, 0.495265,-99) , 
NN(
0, 
0, 
-1, 1.13264, 0, -1, 0.471695,-99) , 
7, -0.428491, 0, 0, 0.490446,-99) , 
8, -1.29058, 1, 0, 0.498842,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0172306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238028, 1, 1, 0.508349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495951,-99) , 
4, 0.999524, 1, 0, 0.50003,-99) , 
9, -0.863753, 0, 0, 0.506157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474901,-99) , 
7, -1.85704, 0, 0, 0.505132,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.01632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496364,-99) , 
9, -0.955925, 0, 0, 0.505796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495466,-99) , 
4, 0.999524, 1, 0, 0.49777,-99) , 
7, -0.428502, 1, 0, 0.500181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473891,-99) , 
0, 0.505709, 1, 0, 0.499058,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0241493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.778582, 1, 1, 0.530032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496573,-99) , 
7, 0.498112, 0, 0, 0.502427,-99) , 
9, -0.202519, 0, 0, 0.507836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493413,-99) , 
9, 1.60425, 0, 0, 0.50104,-99) , 
NN(
0, 
0, 
-1, -0.94058, 1, -1, 0.479779,-99) , 
2, -0.0722436, 0, 0, 0.497206,-99) , 
8, -1.87583, 1, 0, 0.503159,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0185658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498757,-99) , 
9, 0.95536, 0, 0, 0.535152,-99) , 
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504157,-99) , 
9, 0.739865, 0, 0, 0.506603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478207,-99) , 
6, -951.286, 0, 0, 0.486983,-99) , 
8, 2.18133, 0, 0, 0.491989,-99) , 
8, -1.03737, 1, 0, 0.502746,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0185819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489815,-99) , 
6, 0.877635, 1, 0, 0.505451,-99) , 
7, 2.14285, 0, 0, 0.506704,-99) , 
NN(
0, 
0, 
-1, -0.142819, 0, -1, 0.485866,-99) , 
4, 0.999524, 0, 0, 0.505134,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0132013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.06211, 0, 1, 0.519828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490205,-99) , 
9, -1.53753, 0, 0, 0.500097,-99) , 
8, -3.71289, 1, 0, 0.507875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498954,-99) , 
0, 0.499043, 0, 0, 0.513457,-99) , 
NN(
0, 
0, 
-1, -0.0387459, 1, -1, 0.495713,-99) , 
7, 1.85714, 0, 0, 0.497336,-99) , 
8, -3.04487, 1, 0, 0.499732,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0168641);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.518273, 0, 1, 0.505752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483582,-99) , 
7, -0.0612165, 0, 0, 0.500227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460836,-99) , 
7, 2.14285, 1, 0, 0.495952,-99) , 
8, -1.29058, 1, 0, 0.502728,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0130551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.505085,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.4813,-99) , 
3, 6.38893, 1, 0, 0.503537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475486,-99) , 
3, 8.91537, 1, 0, 0.502696,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0178582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488836,-99) , 
7, 0.370463, 1, 0, 0.498912,-99) , 
9, 0.913472, 0, 0, 0.501713,-99) , 
NN(
0, 
0, 
-1, -0.0704755, 0, -1, 0.491603,-99) , 
8, -1.15051, 1, 0, 0.49887,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0136258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479869,-99) , 
9, -2.0343, 0, 0, 0.502172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474241,-99) , 
9, 3.13795, 1, 0, 0.500743,-99) , 
7, 2.14285, 0, 0, 0.502154,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0153602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.5706, 0, 1, 0.518986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494857,-99) , 
0, 0.502852, 0, 0, 0.496945,-99) , 
7, 1.85717, 0, 0, 0.498472,-99) , 
NN(
0, 
0, 
-1, -0.14233, 0, -1, 0.479022,-99) , 
4, 0.999524, 0, 0, 0.497013,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.02789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.08498, 1, 1, 0.510273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475732,-99) , 
2, 0.0108515, 0, 0, 0.493072,-99) , 
2, -0.00340202, 1, 0, 0.502759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475871,-99) , 
7, -0.428316, 0, 0, 0.500664,-99) , 
NN(
0, 
0, 
-1, 3.48011, 1, -1, 0.469465,-99) , 
2, 0.139454, 0, 0, 0.486612,-99) , 
2, 0.0714289, 1, 0, 0.499859,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0240384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479376,-99) , 
9, -1.8886, 0, 0, 0.507595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483901,-99) , 
8, -3.32953, 1, 0, 0.502748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489647,-99) , 
7, 1.57145, 0, 0, 0.491469,-99) , 
8, -3.01483, 1, 0, 0.493735,-99) , 
7, -1.28565, 1, 0, 0.495082,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.018379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495559,-99) , 
2, -0.100576, 0, 0, 0.506518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493402,-99) , 
2, 0.167606, 0, 0, 0.495201,-99) , 
2, -0.0306141, 1, 0, 0.498542,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.482896,-99) , 
2, 0.214249, 1, 0, 0.497734,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0169014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46926, 1, 1, 0.539244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497397,-99) , 
7, -1.78331, 1, 0, 0.498907,-99) , 
9, 0.592951, 0, 0, 0.502392,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492604,-99) , 
9, 0.815601, 1, 0, 0.496494,-99) , 
NN(
0, 
0, 
-1, -0.138246, 0, -1, 0.47566,-99) , 
2, -0.0702944, 0, 0, 0.492707,-99) , 
8, -1.20998, 1, 0, 0.499559,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00705819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489247, 0, 1, 0.518955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498819,-99) , 
2, 0.214314, 0, 0, 0.49954,-99) , 
0, 0.490471, 1, 0, 0.500573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467432,-99) , 
4, 0.998572, 0, 0, 0.499663,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.00798458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498363, 0, 1, 0.515632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499481,-99) , 
4, 0.999524, 1, 0, 0.501038,-99) , 
7, -1.57135, 1, 0, 0.50192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470739,-99) , 
7, 0.143074, 0, 0, 0.488793,-99) , 
0, 0.491424, 0, 0, 0.500879,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0181836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492948,-99) , 
7, -0.139205, 0, 0, 0.524253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480001,-99) , 
7, 1.57109, 1, 0, 0.503031,-99) , 
6, 0.877635, 0, 0, 0.505619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496858,-99) , 
7, 1.85715, 0, 0, 0.500566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474095,-99) , 
0, 0.503804, 1, 0, 0.497151,-99) , 
8, -0.822377, 1, 0, 0.503665,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0139125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495679,-99) , 
4, 0.999983, 0, 0, 0.502252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478311,-99) , 
4, 0.999637, 0, 0, 0.501098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477323,-99) , 
4, 0.999048, 0, 0, 0.500043,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0139145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491919,-99) , 
9, -1.05048, 0, 0, 0.502429,-99) , 
7, -1.28563, 1, 0, 0.503697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475443,-99) , 
7, -1.31281, 0, 0, 0.490179,-99) , 
9, -1.74265, 0, 0, 0.502507,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0117305);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522888,-99) , 
NN(
NN(
0, 
0, 
-1, -0.202381, 0, 1, 0.505457,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495595,-99) , 
0, 0.496185, 0, 0, 0.502203,-99) , 
7, 2.14287, 0, 0, 0.503081,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0173191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486104,-99) , 
6, -951.286, 0, 0, 0.514711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49014,-99) , 
9, -1.14008, 0, 0, 0.500125,-99) , 
3, 0.514384, 1, 0, 0.501468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488958,-99) , 
2, 0.0782395, 1, 0, 0.502127,-99) , 
NN(
0, 
0, 
-1, -0.260449, 1, -1, 0.468565,-99) , 
2, -0.0714203, 0, 0, 0.492029,-99) , 
3, 4.51339, 1, 0, 0.499582,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0242687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487923,-99) , 
8, -2.7015, 1, 0, 0.501056,-99) , 
9, 0.083031, 0, 0, 0.505511,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490335, 1, 1, 0.518013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486531,-99) , 
7, 0.428593, 1, 0, 0.493531,-99) , 
0, 0.492376, 1, 0, 0.496645,-99) , 
8, -1.81357, 1, 0, 0.501759,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.00880122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487056,-99) , 
9, -1.43332, 0, 0, 0.499038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469264,-99) , 
7, -1.85706, 0, 0, 0.498065,-99) , 
NN(
0, 
0, 
-1, -0.143035, 0, -1, 0.481151,-99) , 
0, 0.504757, 1, 0, 0.49685,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00640159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462398,-99) , 
4, 0.99932, 0, 0, 0.499246,-99) , 
4, 0.998571, 1, 0, 0.500151,-99) , 
NN(
0, 
0, 
-1, 0.505573, 1, -1, 0.485723,-99) , 
0, 0.504757, 1, 0, 0.499112,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.017942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494474,-99) , 
4, 0.999048, 1, 0, 0.49605,-99) , 
9, 0.659682, 0, 0, 0.497707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476124,-99) , 
7, 1.91157, 1, 0, 0.494996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449301,-99) , 
9, 1.35916, 0, 0, 0.478301,-99) , 
7, 0.142894, 0, 0, 0.488823,-99) , 
8, -1.20998, 1, 0, 0.495106,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0157817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494486,-99) , 
2, -0.0510048, 1, 0, 0.496746,-99) , 
2, -0.214261, 1, 0, 0.497864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443831,-99) , 
0, 0.495233, 0, 0, 0.485103,-99) , 
4, 0.999524, 0, 0, 0.496897,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0169135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496308,-99) , 
9, 1.28385, 0, 0, 0.498284,-99) , 
8, -4.09872, 1, 0, 0.499711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513374,-99) , 
NN(
0, 
0, 
-1, -0.551079, 1, -1, 0.473854,-99) , 
7, 1.28561, 0, 0, 0.482578,-99) , 
8, 0.0496582, 1, 0, 0.497348,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0154508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497226,-99) , 
8, -1.6275, 1, 0, 0.521853,-99) , 
NN(
0, 
0, 
-1, 1.15352, 0, 1, 0.502133,-99) , 
9, 0.387912, 0, 0, 0.505062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461155,-99) , 
7, -0.918391, 0, 0, 0.4959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449825,-99) , 
7, 1.85715, 1, 0, 0.48873,-99) , 
8, -1.15051, 1, 0, 0.500482,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.013173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496492,-99) , 
3, 4.47804, 0, 0, 0.501934,-99) , 
2, -0.0691286, 1, 0, 0.506431,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49476,-99) , 
7, 1.00005, 0, 0, 0.497429,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0165295);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491351,-99) , 
8, -0.687342, 1, 0, 0.511955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494336,-99) , 
2, -0.0228469, 1, 0, 0.499225,-99) , 
2, 0.0510111, 0, 0, 0.501559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483164,-99) , 
2, 0.214278, 1, 0, 0.500629,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0185711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479555,-99) , 
8, -1.37367, 1, 0, 0.50244,-99) , 
9, 1.19282, 0, 0, 0.504588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488066,-99) , 
7, 0.428621, 0, 0, 0.496981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470571,-99) , 
2, -0.0723283, 0, 0, 0.4922,-99) , 
8, -0.818052, 1, 0, 0.501791,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.011228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14287, 0, 1, 0.50279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456735,-99) , 
4, 0.999728, 0, 0, 0.501266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446717,-99) , 
9, -0.211631, 1, 0, 0.483476,-99) , 
4, 0.999524, 0, 0, 0.499923,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0173125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499557,-99) , 
8, -2.03639, 1, 0, 0.516283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484139,-99) , 
9, 1.70271, 0, 0, 0.497268,-99) , 
8, -1.38989, 1, 0, 0.505757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497881,-99) , 
6, -946.347, 0, 0, 0.503847,-99) , 
NN(
0, 
0, 
-1, -1.66663, 0, -1, 0.492838,-99) , 
0, 0.496185, 1, 0, 0.49653,-99) , 
7, 1.00001, 0, 0, 0.49864,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0188333);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465405,-99) , 
4, 0.999955, 0, 0, 0.509751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496491,-99) , 
4, 0.999955, 1, 0, 0.499326,-99) , 
7, -0.714254, 1, 0, 0.501631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485376,-99) , 
4, 0.999048, 0, 0, 0.500902,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0130603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498663,-99) , 
2, 0.193176, 0, 0, 0.500332,-99) , 
2, -0.214775, 1, 0, 0.501595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442533,-99) , 
6, -951.286, 0, 0, 0.489548,-99) , 
4, 0.999524, 0, 0, 0.500686,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0124893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482777,-99) , 
4, 0.999819, 0, 0, 0.501344,-99) , 
0, 0.489519, 1, 0, 0.502368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429645,-99) , 
7, -0.142584, 0, 0, 0.47849,-99) , 
4, 0.999524, 0, 0, 0.500572,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0117302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496434,-99) , 
4, 0.999955, 1, 0, 0.498798,-99) , 
7, 2.14285, 0, 0, 0.499769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473159,-99) , 
4, 0.999048, 0, 0, 0.498617,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0548232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57154, 0, 1, 0.530812,-99) , 
NN(
0, 
0, 
-1, 0.715977, 1, -1, 0.394377,-99) , 
6, -1.06734, 0, 0, 0.503443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496276,-99) , 
8, 1.13298, 0, 0, 0.499084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444194,-99) , 
7, -1.57139, 0, 0, 0.49541,-99) , 
6, -951.286, 0, 0, 0.4994,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.054866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461135,-99) , 
8, -0.292955, 1, 0, 0.507744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278685,-99) , 
6, -1.71231, 0, 0, 0.496702,-99) , 
6, -951.286, 1, 0, 0.502107,-99) , 
NN(
0, 
0, 
-1, 2.00895, 0, -1, 0.482075,-99) , 
8, 0.343455, 1, 0, 0.499819,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0340027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.752811, 0, 1, 0.506691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258417,-99) , 
6, -1.99082, 0, 0, 0.496604,-99) , 
6, -6.95896, 1, 0, 0.501726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470882,-99) , 
8, -0.559858, 1, 0, 0.494299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458391,-99) , 
7, -1.00001, 0, 0, 0.489146,-99) , 
2, 0.0713744, 1, 0, 0.499465,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0309794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491845,-99) , 
8, 2.40901, 0, 0, 0.496482,-99) , 
8, -1.25897, 1, 0, 0.505173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486614,-99) , 
7, -1.74663, 1, 0, 0.488192,-99) , 
8, -1.10798, 0, 0, 0.490101,-99) , 
9, 0.77886, 0, 0, 0.494581,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0170236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493164,-99) , 
2, 0.0176004, 0, 0, 0.498323,-99) , 
2, 0.302648, 0, 0, 0.499016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476057,-99) , 
3, 4.55716, 1, 0, 0.494967,-99) , 
NN(
0, 
0, 
-1, -1.04076, 1, -1, 0.474977,-99) , 
7, -0.428431, 0, 0, 0.488981,-99) , 
2, -0.0714699, 0, 0, 0.497209,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0179158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49499,-99) , 
9, -0.886292, 0, 0, 0.503625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494363,-99) , 
4, 0.999524, 1, 0, 0.496444,-99) , 
7, -0.142803, 1, 0, 0.499307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472363,-99) , 
2, -0.214327, 0, 0, 0.497955,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0278501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.48758, 0, 1, 0.52516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457798,-99) , 
7, -1.00001, 0, 0, 0.498931,-99) , 
8, -2.94601, 1, 0, 0.504198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482423,-99) , 
9, -1.78155, 0, 0, 0.510888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486799,-99) , 
4, 0.999524, 1, 0, 0.489173,-99) , 
7, -0.713676, 1, 0, 0.493672,-99) , 
6, -946.347, 1, 0, 0.499033,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0162823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448911,-99) , 
4, 0.99932, 0, 0, 0.499754,-99) , 
4, 0.998572, 1, 0, 0.501253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4076,-99) , 
8, -2.4793, 1, 0, 0.461294,-99) , 
6, -949.846, 0, 0, 0.485351,-99) , 
7, -0.999934, 0, 0, 0.498946,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0230473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482123,-99) , 
6, -946.347, 1, 0, 0.504453,-99) , 
7, 1.57144, 0, 0, 0.509091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492424,-99) , 
9, 0.808868, 0, 0, 0.493922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460233,-99) , 
7, 1.85706, 1, 0, 0.492262,-99) , 
8, -0.671473, 0, 0, 0.495877,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0175361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483951,-99) , 
8, 0.414573, 1, 0, 0.50199,-99) , 
7, 2.14287, 0, 0, 0.503073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476415,-99) , 
4, 0.999977, 0, 0, 0.491217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467432,-99) , 
4, 0.999524, 0, 0, 0.487353,-99) , 
2, 0.0713744, 1, 0, 0.50024,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0114259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490581,-99) , 
9, -0.543215, 0, 0, 0.497997,-99) , 
8, -3.74127, 1, 0, 0.49925,-99) , 
NN(
0, 
0, 
-1, 0.142877, 1, -1, 0.479452,-99) , 
0, 0.504757, 1, 0, 0.497828,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0108704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487838,-99) , 
0, 0.502852, 1, 0, 0.499086,-99) , 
NN(
0, 
0, 
-1, -1.31519, 1, -1, 0.486203,-99) , 
2, -0.0706935, 0, 0, 0.496767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467716,-99) , 
7, -1.8571, 0, 0, 0.495806,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0188807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496911,-99) , 
9, 0.975575, 0, 0, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474184,-99) , 
9, 3.07124, 1, 0, 0.498824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434602,-99) , 
8, -1.30117, 1, 0, 0.47394,-99) , 
9, 1.91928, 0, 0, 0.486075,-99) , 
7, 1.57145, 1, 0, 0.497466,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0159367);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214318, 1, -1, 0.497074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459437,-99) , 
8, -1.60689, 1, 0, 0.496653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436169,-99) , 
9, 2.00576, 0, 0, 0.466679,-99) , 
8, -1.15446, 1, 0, 0.481609,-99) , 
7, 1.28575, 1, 0, 0.494631,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0275061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492064,-99) , 
4, 0.999998, 0, 0, 0.501635,-99) , 
NN(
0, 
0, 
-1, 4.28953, 1, -1, 0.485875,-99) , 
4, 0.999955, 0, 0, 0.497799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469095,-99) , 
4, 0.999048, 0, 0, 0.496548,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0165874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488835,-99) , 
4, 0.999888, 0, 0, 0.503206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454624,-99) , 
4, 0.999705, 0, 0, 0.501866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450049,-99) , 
7, 0.428619, 0, 0, 0.479884,-99) , 
4, 0.999524, 0, 0, 0.500209,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0092994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496587,-99) , 
7, 0.142651, 1, 0, 0.506911,-99) , 
2, -0.0718018, 1, 0, 0.516942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498742,-99) , 
2, 0.214242, 0, 0, 0.499668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482836,-99) , 
9, 3.21989, 1, 0, 0.498834,-99) , 
0, 0.503805, 0, 0, 0.500851,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0166033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0708039, 1, 1, 0.507097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494234,-99) , 
7, -1.28554, 1, 0, 0.497315,-99) , 
0, 0.499043, 1, 0, 0.502999,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.479801,-99) , 
4, 0.999524, 0, 0, 0.501265,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0160367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.712998, 0, 1, 0.504588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468358,-99) , 
8, -2.81901, 1, 0, 0.486874,-99) , 
6, 0.877635, 1, 0, 0.502545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49033,-99) , 
7, 1.85715, 0, 0, 0.500983,-99) , 
NN(
0, 
0, 
-1, 1.32636, 1, -1, 0.48354,-99) , 
0, 0.499043, 0, 0, 0.490956,-99) , 
7, 1.28572, 1, 0, 0.500713,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0144267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49546,-99) , 
3, 0.540232, 1, 0, 0.497149,-99) , 
4, 0.999048, 1, 0, 0.498372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461927,-99) , 
3, 9.03111, 1, 0, 0.497345,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0115056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.150049, 0, 1, 0.505692,-99) , 
NN(
0, 
0, 
-1, 0.877635, 1, -1, 0.495728,-99) , 
8, -1.90415, 1, 0, 0.501262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473429,-99) , 
0, 0.489519, 0, 0, 0.500367,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0235885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.23899, 1, 1, 0.533326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495288,-99) , 
7, 0.556354, 0, 0, 0.498857,-99) , 
9, -0.184021, 0, 0, 0.505163,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499625,-99) , 
7, -0.426105, 1, 0, 0.505741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47274,-99) , 
7, 0.714257, 1, 0, 0.487956,-99) , 
9, 1.59014, 0, 0, 0.494649,-99) , 
8, -1.90415, 1, 0, 0.500496,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0139442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.82823, 1, 1, 0.522992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473944,-99) , 
7, -1.69379, 0, 0, 0.504279,-99) , 
7, 1.57144, 0, 0, 0.506357,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495552,-99) , 
0, 0.497138, 0, 0, 0.501952,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0299731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.16175, 1, 1, 0.521807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486169,-99) , 
8, 2.23463, 0, 0, 0.498673,-99) , 
9, 2.59049, 1, 0, 0.511146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496477,-99) , 
7, 0.443807, 0, 0, 0.504508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481765,-99) , 
9, -0.366481, 1, 0, 0.485996,-99) , 
8, -2.26819, 1, 0, 0.496213,-99) , 
9, 1.51669, 0, 0, 0.498884,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0153788);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522573,-99) , 
NN(
NN(
0, 
0, 
-1, -2.38827, 1, 1, 0.506396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482312,-99) , 
9, 3.04642, 1, 0, 0.505047,-99) , 
7, 2.14286, 0, 0, 0.505791,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0157325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.42282, 1, 1, 0.534819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498747,-99) , 
6, 0.877635, 0, 0, 0.501653,-99) , 
9, 0.65638, 0, 0, 0.504339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493654,-99) , 
9, 0.950214, 1, 0, 0.497458,-99) , 
NN(
0, 
0, 
-1, -0.138241, 0, -1, 0.472532,-99) , 
2, -0.0702686, 0, 0, 0.492886,-99) , 
8, -1.15051, 1, 0, 0.501112,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0222993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476774,-99) , 
0, 0.504756, 1, 0, 0.50775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488886,-99) , 
9, 1.48366, 0, 0, 0.493671,-99) , 
3, 2.23939, 1, 0, 0.502889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492396,-99) , 
9, 0.221464, 0, 0, 0.496941,-99) , 
NN(
0, 
0, 
-1, -1.52732, 1, -1, 0.480737,-99) , 
7, 0.713989, 1, 0, 0.492066,-99) , 
3, 4.61402, 1, 0, 0.500807,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.00883914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.503239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476952,-99) , 
4, 0.999705, 0, 0, 0.502496,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.488058,-99) , 
4, 0.999524, 0, 0, 0.501395,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0224212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494002,-99) , 
7, -0.122871, 1, 0, 0.502382,-99) , 
9, 0.151478, 0, 0, 0.505689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495438,-99) , 
9, 0.499684, 1, 0, 0.504378,-99) , 
NN(
0, 
0, 
-1, -0.999979, 0, -1, 0.487677,-99) , 
6, -949.006, 0, 0, 0.494159,-99) , 
8, -1.78503, 1, 0, 0.500909,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0117851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505573, 1, 1, 0.512725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498573,-99) , 
7, -0.714225, 1, 0, 0.500965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48096,-99) , 
8, -3.56458, 0, 0, 0.490371,-99) , 
9, -1.43905, 0, 0, 0.499457,-99) , 
0, 0.504757, 0, 0, 0.500443,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0114577);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516748,-99) , 
NN(
NN(
0, 
0, 
-1, 0.373926, 0, 1, 0.504982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459935,-99) , 
7, 2.14286, 1, 0, 0.495801,-99) , 
8, -1.48349, 1, 0, 0.502164,-99) , 
8, 1.55482, 0, 0, 0.502992,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0155112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.513129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498209,-99) , 
9, 1.48575, 0, 0, 0.500513,-99) , 
0, 0.497455, 1, 0, 0.504266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498446,-99) , 
0, 0.491423, 1, 0, 0.502637,-99) , 
NN(
0, 
0, 
-1, -0.428372, 0, -1, 0.477944,-99) , 
6, -949.006, 0, 0, 0.490088,-99) , 
0, 0.494281, 0, 0, 0.501416,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0144065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.13938, 0, 1, 0.521373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483057,-99) , 
7, 0.42851, 1, 0, 0.496561,-99) , 
8, -1.59139, 1, 0, 0.512142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498535,-99) , 
0, 0.500947, 0, 0, 0.501538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470555,-99) , 
4, 0.999048, 0, 0, 0.500576,-99) , 
2, 0.0713586, 0, 0, 0.502717,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0160804);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529447,-99) , 
NN(
NN(
0, 
0, 
-1, -0.85059, 1, 1, 0.505877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485778,-99) , 
9, -0.90519, 0, 0, 0.493806,-99) , 
7, -0.142789, 0, 0, 0.501447,-99) , 
8, -4.09508, 1, 0, 0.502703,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.025024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.920494, 0, 1, 0.531456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485941,-99) , 
8, -2.14778, 1, 0, 0.501936,-99) , 
9, 0.653046, 0, 0, 0.504409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461049,-99) , 
7, 2.02043, 1, 0, 0.498112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430842,-99) , 
9, 1.33605, 0, 0, 0.470034,-99) , 
7, -0.42855, 0, 0, 0.492186,-99) , 
8, -1.13362, 1, 0, 0.501013,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0101805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518306,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.498366,-99) , 
4, 0.999048, 1, 0, 0.499271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446046,-99) , 
6, -951.286, 1, 0, 0.473971,-99) , 
9, 1.79501, 0, 0, 0.489426,-99) , 
7, 1.57143, 1, 0, 0.498228,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0204085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.100647, 0, 1, 0.512042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489326,-99) , 
2, 0.0159595, 0, 0, 0.49682,-99) , 
2, -0.0306829, 1, 0, 0.501323,-99) , 
NN(
0, 
0, 
-1, 0.142842, 0, -1, 0.480999,-99) , 
2, 0.21419, 1, 0, 0.50028,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0202821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.906861, 0, 1, 0.538086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493117,-99) , 
8, -2.14778, 1, 0, 0.502518,-99) , 
9, 0.694237, 0, 0, 0.505187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514055,-99) , 
NN(
0, 
0, 
-1, 0.428613, 0, -1, 0.485902,-99) , 
8, 2.09882, 0, 0, 0.490274,-99) , 
8, -1.13362, 1, 0, 0.501048,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0204063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.219381, 1, 1, 0.516351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494257,-99) , 
2, -0.024673, 1, 0, 0.498886,-99) , 
2, -0.15293, 1, 0, 0.50077,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0354803, 1, 1, 0.513522,-99) , 
NN(
0, 
0, 
-1, 0.500947, 0, -1, 0.476464,-99) , 
2, 0.207546, 0, 0, 0.487929,-99) , 
2, 0.0715172, 1, 0, 0.498464,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0116279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498364,-99) , 
7, -1.28564, 1, 0, 0.500142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47471,-99) , 
9, -2.02405, 0, 0, 0.498697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467039,-99) , 
9, 3.32893, 1, 0, 0.497205,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0169875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28565, 1, 1, 0.507414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473948,-99) , 
7, -1.35046, 0, 0, 0.488767,-99) , 
9, -1.75289, 0, 0, 0.505714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486371,-99) , 
9, 3.26817, 1, 0, 0.504756,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0110365);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496889,-99) , 
4, 0.999048, 1, 0, 0.497797,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484119,-99) , 
0, 0.491424, 0, 0, 0.496717,-99) , 
7, 2.14286, 0, 0, 0.497864,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0176744);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.50576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479685,-99) , 
4, 0.999977, 0, 0, 0.495613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453125,-99) , 
4, 0.999524, 0, 0, 0.488775,-99) , 
2, -0.0714207, 0, 0, 0.502742,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.00637341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499703,-99) , 
2, 0.212117, 0, 0, 0.500678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476802,-99) , 
4, 0.999637, 0, 0, 0.499543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477549,-99) , 
4, 0.999048, 0, 0, 0.498566,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0124521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49811,-99) , 
0, 0.496185, 1, 0, 0.501329,-99) , 
4, 0.998571, 1, 0, 0.502162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478026,-99) , 
7, 2.2517, 1, 0, 0.494181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473143,-99) , 
9, 1.23535, 0, 0, 0.484865,-99) , 
7, 1.57141, 1, 0, 0.500346,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0177007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480788,-99) , 
7, -1.16323, 0, 0, 0.507811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493606,-99) , 
7, 0.22452, 1, 0, 0.499187,-99) , 
6, -946.347, 1, 0, 0.503544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476706,-99) , 
7, -1.8571, 0, 0, 0.502633,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.00598631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.739687, 0, 1, 0.501551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486426,-99) , 
9, 3.0345, 1, 0, 0.500637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476267,-99) , 
7, -1.85707, 0, 0, 0.499824,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0141239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497225,-99) , 
0, 0.497138, 1, 0, 0.501311,-99) , 
NN(
0, 
0, 
-1, -0.428586, 0, -1, 0.477668,-99) , 
4, 0.999796, 0, 0, 0.498966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468772,-99) , 
4, 0.998571, 0, 0, 0.498116,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0157392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495093,-99) , 
6, -951.286, 0, 0, 0.503979,-99) , 
9, 0.252095, 1, 0, 0.5089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474293,-99) , 
4, 0.999524, 0, 0, 0.502365,-99) , 
NN(
0, 
0, 
-1, 0.0617883, 1, -1, 0.493436,-99) , 
7, 0.0476368, 1, 0, 0.498835,-99) , 
7, 1.00002, 0, 0, 0.501135,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.013069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490303,-99) , 
2, -0.0714842, 0, 0, 0.517917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498415,-99) , 
0, 0.493329, 1, 0, 0.500627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465899,-99) , 
7, 0.142759, 0, 0, 0.485802,-99) , 
4, 0.999887, 0, 0, 0.499048,-99) , 
4, 0.999524, 1, 0, 0.500559,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0149882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499748,-99) , 
8, -1.9711, 0, 0, 0.505476,-99) , 
NN(
0, 
0, 
-1, 0.490879, 0, -1, 0.493393,-99) , 
0, 0.496185, 0, 0, 0.501504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490228,-99) , 
0, 0.498094, 1, 0, 0.498139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455833,-99) , 
8, -1.70668, 1, 0, 0.484965,-99) , 
6, 0.877635, 1, 0, 0.499637,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0198752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.76413, 0, 1, 0.5294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488176,-99) , 
8, -2.31175, 1, 0, 0.500132,-99) , 
9, 0.548462, 0, 0, 0.502524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495155,-99) , 
9, 0.687196, 1, 0, 0.499795,-99) , 
NN(
0, 
0, 
-1, 0.428613, 0, -1, 0.473445,-99) , 
2, -0.0704755, 0, 0, 0.49498,-99) , 
8, -1.29058, 1, 0, 0.500192,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.00935689);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.528656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478171,-99) , 
2, -0.214336, 0, 0, 0.499997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478325,-99) , 
0, 0.490471, 0, 0, 0.498847,-99) , 
7, -1.57136, 1, 0, 0.500722,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.00872357);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499183,-99) , 
7, -1.16322, 1, 0, 0.500507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462417,-99) , 
7, -1.22569, 0, 0, 0.486219,-99) , 
9, -1.6736, 0, 0, 0.499316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477361,-99) , 
7, -1.8571, 0, 0, 0.498585,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.00816598);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523756,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482782,-99) , 
2, -0.21439, 0, 0, 0.501473,-99) , 
7, 2.14286, 0, 0, 0.502418,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0175157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486253,-99) , 
9, -0.987903, 0, 0, 0.496017,-99) , 
7, -0.142853, 0, 0, 0.502039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50368,-99) , 
NN(
0, 
0, 
-1, 0.491534, 0, -1, 0.482348,-99) , 
0, 0.489428, 1, 0, 0.488311,-99) , 
0, 0.492376, 0, 0, 0.500498,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0188717);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478054,-99) , 
0, 0.505619, 1, 0, 0.503233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452213,-99) , 
8, -0.933838, 1, 0, 0.48206,-99) , 
7, 1.57143, 1, 0, 0.501011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494291,-99) , 
2, -0.151782, 1, 0, 0.497191,-99) , 
NN(
0, 
0, 
-1, -2.06804, 1, -1, 0.473783,-99) , 
2, 0.0725043, 1, 0, 0.492881,-99) , 
0, 0.497138, 0, 0, 0.497668,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0102414);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529315,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500312, 0, 1, 0.502829,-99) , 
NN(
0, 
0, 
-1, 4.18743, 1, -1, 0.492627,-99) , 
0, 0.500947, 1, 0, 0.500119,-99) , 
7, 2.14284, 0, 0, 0.501371,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0188255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.16074, 0, 1, 0.506655,-99) , 
NN(
0, 
0, 
-1, 0.502217, 0, -1, 0.490663,-99) , 
0, 0.500947, 1, 0, 0.502475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483749,-99) , 
9, -1.0785, 0, 0, 0.494549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46532,-99) , 
4, 0.999524, 0, 0, 0.492476,-99) , 
7, -0.142815, 0, 0, 0.498527,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0128209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497001,-99) , 
4, 0.999758, 1, 0, 0.497922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474318,-99) , 
4, 0.999637, 0, 0, 0.4968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457806,-99) , 
4, 0.999048, 0, 0, 0.495113,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.00655595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521621,-99) , 
NN(
0, 
0, 
-1, 3.1211, 1, -1, 0.498485,-99) , 
7, 2.14286, 0, 0, 0.499469,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.47995,-99) , 
2, 0.214278, 1, 0, 0.498466,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00868604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214568, 1, 1, 0.502589,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.493814,-99) , 
7, -0.428555, 0, 0, 0.499954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47263,-99) , 
4, 0.998571, 0, 0, 0.499177,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0100549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.86089, 1, 1, 0.502469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468074,-99) , 
9, 1.20895, 0, 0, 0.493781,-99) , 
8, -1.13362, 1, 0, 0.500001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464709,-99) , 
4, 0.998571, 0, 0, 0.499017,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0224844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477296,-99) , 
7, 1.50342, 1, 0, 0.499004,-99) , 
8, 0.847362, 0, 0, 0.501038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489474,-99) , 
9, -1.12062, 0, 0, 0.496329,-99) , 
NN(
0, 
0, 
-1, 0.746935, 0, -1, 0.475074,-99) , 
8, -1.85823, 1, 0, 0.490362,-99) , 
7, -0.142803, 0, 0, 0.496838,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.012654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489259,-99) , 
6, -951.286, 1, 0, 0.509649,-99) , 
NN(
0, 
0, 
-1, -0.541724, 0, -1, 0.495093,-99) , 
2, -0.214314, 1, 0, 0.495868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476294,-99) , 
7, -1.8571, 0, 0, 0.495215,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0163269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498544, 1, 1, 0.505892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480233,-99) , 
6, -951.286, 0, 0, 0.494309,-99) , 
2, -0.0718535, 0, 0, 0.503853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491557,-99) , 
7, 1.69399, 0, 0, 0.49338,-99) , 
7, -1.57105, 1, 0, 0.494716,-99) , 
0, 0.49809, 0, 0, 0.499366,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0112562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489475,-99) , 
7, -1.97956, 0, 0, 0.514032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497036,-99) , 
4, 0.999048, 1, 0, 0.498223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481576,-99) , 
7, 2.12926, 1, 0, 0.497508,-99) , 
7, -1.57139, 1, 0, 0.498497,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0163149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481138,-99) , 
0, 0.489519, 0, 0, 0.505973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485582,-99) , 
6, 1.39928, 1, 0, 0.50471,-99) , 
NN(
0, 
0, 
-1, 0.142948, 0, -1, 0.480807,-99) , 
2, 0.214278, 1, 0, 0.503486,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0170635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490335, 1, 1, 0.513414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490252,-99) , 
2, 0.0787909, 1, 0, 0.500286,-99) , 
0, 0.493329, 1, 0, 0.502173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478192,-99) , 
4, 0.999977, 0, 0, 0.496585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463764,-99) , 
4, 0.999524, 0, 0, 0.491394,-99) , 
2, -0.0707575, 0, 0, 0.50024,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0272931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.54206, 1, 1, 0.524358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463664,-99) , 
6, -0.714447, 0, 0, 0.498141,-99) , 
6, -951.286, 1, 0, 0.508749,-99) , 
NN(
NN(
0, 
0, 
-1, -1.82441, 1, 1, 0.505504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482348,-99) , 
8, -1.77891, 0, 0, 0.489275,-99) , 
9, 0.161835, 0, 0, 0.499006,-99) , 
8, -2.88401, 1, 0, 0.501633,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0163563);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499716,-99) , 
9, 0.702234, 0, 0, 0.507881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495131,-99) , 
2, -0.214311, 1, 0, 0.496211,-99) , 
7, 0.918376, 0, 0, 0.49809,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465397,-99) , 
7, 1.91156, 0, 0, 0.493839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458285,-99) , 
0, 0.496186, 0, 0, 0.48265,-99) , 
7, 1.57143, 1, 0, 0.496462,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.027588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.526689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48941,-99) , 
7, 0.47022, 0, 0, 0.493738,-99) , 
9, -0.225353, 0, 0, 0.500218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48492,-99) , 
7, 0.551104, 1, 0, 0.492282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452634,-99) , 
7, -1.28563, 0, 0, 0.489981,-99) , 
8, -1.90415, 1, 0, 0.495648,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0184683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.54643, 1, 1, 0.525683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478856,-99) , 
7, -0.966634, 0, 0, 0.492993,-99) , 
6, -949.846, 1, 0, 0.505861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49057,-99) , 
2, 0.0747331, 1, 0, 0.5083,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.493549,-99) , 
0, 0.493328, 1, 0, 0.495901,-99) , 
8, -3.0661, 1, 0, 0.498115,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0222799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491922,-99) , 
7, 0.917199, 1, 0, 0.522279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496555,-99) , 
7, 0.484262, 0, 0, 0.499956,-99) , 
9, -0.150049, 0, 0, 0.503599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49201,-99) , 
0, 0.500947, 0, 0, 0.497685,-99) , 
NN(
0, 
0, 
-1, 4.30446, 1, -1, 0.472638,-99) , 
2, -0.0714212, 0, 0, 0.493181,-99) , 
8, -1.90761, 1, 0, 0.498962,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0138941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497277,-99) , 
6, -951.387, 0, 0, 0.501603,-99) , 
8, 1.56489, 0, 0, 0.502682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465703,-99) , 
8, -2.03249, 1, 0, 0.491013,-99) , 
6, 0.877635, 1, 0, 0.501373,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.018495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482287,-99) , 
8, -2.83185, 1, 0, 0.525986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484025,-99) , 
6, -949.846, 1, 0, 0.498324,-99) , 
8, -3.14055, 0, 0, 0.506074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499026,-99) , 
4, 0.999864, 1, 0, 0.500571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470089,-99) , 
4, 0.999524, 0, 0, 0.498614,-99) , 
9, -0.924095, 1, 0, 0.500563,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0100984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.99993, 1, 1, 0.503855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469429,-99) , 
4, 0.999252, 0, 0, 0.502924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478827,-99) , 
4, 0.998572, 0, 0, 0.50224,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0153364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49679,-99) , 
4, 0.999991, 0, 0, 0.501975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473363,-99) , 
4, 0.999525, 1, 0, 0.490022,-99) , 
4, 0.999819, 0, 0, 0.500846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473735,-99) , 
4, 0.999048, 0, 0, 0.499674,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0158613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49938,-99) , 
8, -2.50845, 0, 0, 0.505143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49309,-99) , 
8, -2.02083, 1, 0, 0.496439,-99) , 
9, -0.127599, 1, 0, 0.50072,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484812,-99) , 
0, 0.491424, 0, 0, 0.499478,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.00897947);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.50333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466101,-99) , 
7, 2.14286, 1, 0, 0.501919,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0154238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485966,-99) , 
7, 1.85716, 1, 0, 0.502336,-99) , 
8, -4.09871, 1, 0, 0.503776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484478,-99) , 
0, 0.498093, 1, 0, 0.507598,-99) , 
NN(
0, 
0, 
-1, 2.20308, 0, -1, 0.479338,-99) , 
7, 0.714205, 0, 0, 0.490576,-99) , 
8, 0.0496582, 1, 0, 0.501968,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0145699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.20095, 0, 1, 0.517255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486851,-99) , 
0, 0.492693, 0, 0, 0.492604,-99) , 
7, 0.14307, 0, 0, 0.505117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492828,-99) , 
8, -0.571073, 1, 0, 0.50224,-99) , 
NN(
0, 
0, 
-1, 0.0719635, 1, -1, 0.493654,-99) , 
0, 0.49936, 0, 0, 0.49793,-99) , 
0, 0.494281, 1, 0, 0.499414,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.013614);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498308,-99) , 
2, -0.0268953, 1, 0, 0.502625,-99) , 
NN(
0, 
0, 
-1, -0.713736, 0, -1, 0.488726,-99) , 
4, 0.999909, 0, 0, 0.500423,-99) , 
4, 0.999048, 1, 0, 0.50139,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0109733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47828,-99) , 
9, 3.1111, 1, 0, 0.50114,-99) , 
7, 2.14285, 0, 0, 0.502223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458826,-99) , 
4, 0.998571, 0, 0, 0.501045,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0201207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494654,-99) , 
7, -0.714225, 1, 0, 0.499483,-99) , 
8, -1.30051, 1, 0, 0.504813,-99) , 
NN(
NN(
0, 
0, 
-1, -1.09955, 0, 1, 0.515027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49314,-99) , 
7, 1.25864, 0, 0, 0.495031,-99) , 
8, -3.66269, 1, 0, 0.497782,-99) , 
9, 0.734552, 0, 0, 0.499936,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0579298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338615,-99) , 
6, -1.50025, 0, 0, 0.509512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494458,-99) , 
8, -2.84165, 1, 0, 0.500095,-99) , 
6, -949.846, 0, 0, 0.504756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475473,-99) , 
5, 0.0236953, 1, 0, 0.504022,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0396099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46596,-99) , 
4, 0.999524, 0, 0, 0.504752,-99) , 
8, 1.73421, 0, 0, 0.508496,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28597, 0, 1, 0.511912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339285,-99) , 
7, 0.438437, 1, 0, 0.426675,-99) , 
6, -0.885652, 0, 0, 0.491593,-99) , 
6, -949.006, 1, 0, 0.500229,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.044291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476159,-99) , 
7, -0.714229, 0, 0, 0.495733,-99) , 
8, 1.36164, 0, 0, 0.498984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48907,-99) , 
7, 1.00056, 0, 0, 0.503842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296295,-99) , 
6, -1.76289, 0, 0, 0.470571,-99) , 
6, -0.172453, 0, 0, 0.488914,-99) , 
6, -946.347, 1, 0, 0.494031,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0163214);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494459,-99) , 
0, 0.503804, 0, 0, 0.496514,-99) , 
NN(
0, 
0, 
-1, -0.355121, 1, -1, 0.481939,-99) , 
6, 0.877635, 1, 0, 0.494845,-99) , 
7, 2.14286, 0, 0, 0.495855,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0128536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428185, 1, 1, 0.511884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497758,-99) , 
4, 0.998571, 1, 0, 0.49908,-99) , 
9, 1.4997, 0, 0, 0.501439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471866,-99) , 
7, 0.434463, 0, 0, 0.482565,-99) , 
6, 0.877635, 1, 0, 0.49935,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0382454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471294,-99) , 
9, 2.15481, 1, 0, 0.498091,-99) , 
8, 1.63299, 0, 0, 0.500184,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28619, 0, 1, 0.513708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315276,-99) , 
6, -1.56141, 0, 0, 0.462392,-99) , 
6, -0.284644, 0, 0, 0.492754,-99) , 
6, -15.9238, 1, 0, 0.49653,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0153394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494933,-99) , 
0, 0.490471, 1, 0, 0.496152,-99) , 
NN(
0, 
0, 
-1, 0.999508, 1, -1, 0.478236,-99) , 
4, 0.999728, 0, 0, 0.494726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471145,-99) , 
4, 0.998571, 0, 0, 0.49406,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0185449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482359,-99) , 
0, 0.490879, 0, 0, 0.49974,-99) , 
2, 0.214407, 0, 0, 0.50088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477968,-99) , 
8, -2.99751, 0, 0, 0.495856,-99) , 
NN(
0, 
0, 
-1, 0.0718757, 0, -1, 0.482394,-99) , 
7, 0.14289, 1, 0, 0.489207,-99) , 
0, 0.499043, 1, 0, 0.495983,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0297484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97954, 0, 1, 0.512177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498297,-99) , 
8, 1.18396, 0, 0, 0.500509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398742,-99) , 
6, -1.10527, 0, 0, 0.488069,-99) , 
6, -951.286, 1, 0, 0.49434,-99) , 
7, -1.57134, 1, 0, 0.495419,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0132135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495511,-99) , 
9, 1.08749, 0, 0, 0.497269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474925,-99) , 
9, 3.16337, 1, 0, 0.496111,-99) , 
7, 2.14285, 0, 0, 0.497331,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.034414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485419,-99) , 
0, 0.492376, 0, 0, 0.504255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466483,-99) , 
7, -1.57134, 0, 0, 0.501661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496827,-99) , 
7, 1.57154, 0, 0, 0.506717,-99) , 
NN(
0, 
0, 
-1, -2.06842, 0, -1, 0.436262,-99) , 
6, -0.826423, 0, 0, 0.48905,-99) , 
6, -6.95896, 1, 0, 0.49545,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0266372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473518,-99) , 
9, -1.98061, 0, 0, 0.512253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493639,-99) , 
9, 0.353734, 1, 0, 0.501296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48598,-99) , 
4, 0.999524, 1, 0, 0.488704,-99) , 
6, -946.347, 1, 0, 0.495024,-99) , 
7, -1.28561, 1, 0, 0.496701,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0135962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498791,-99) , 
7, -0.71427, 1, 0, 0.501558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481762,-99) , 
7, -0.746041, 0, 0, 0.492456,-99) , 
9, -1.31033, 0, 0, 0.499978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482497,-99) , 
9, 3.32893, 1, 0, 0.499141,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0174666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496166,-99) , 
2, -0.0678421, 1, 0, 0.505182,-99) , 
0, 0.491696, 0, 0, 0.513334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495623,-99) , 
8, -3.12318, 0, 0, 0.505608,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49402,-99) , 
9, -0.935125, 1, 0, 0.497044,-99) , 
0, 0.492376, 1, 0, 0.498932,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0118778);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530546,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.503967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466557,-99) , 
7, 0.428621, 0, 0, 0.483853,-99) , 
4, 0.99966, 0, 0, 0.502617,-99) , 
4, 0.998572, 1, 0, 0.503483,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0117889);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497506,-99) , 
7, 0.102049, 0, 0, 0.501305,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.478378,-99) , 
7, 1.65306, 1, 0, 0.500044,-99) , 
7, 2.14285, 0, 0, 0.501201,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0166782);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499453,-99) , 
6, -951.286, 0, 0, 0.521384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496744,-99) , 
7, -0.42855, 1, 0, 0.501167,-99) , 
3, 0.531628, 1, 0, 0.503156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476221,-99) , 
2, 0.153065, 1, 0, 0.495759,-99) , 
NN(
0, 
0, 
-1, 0.143323, 0, -1, 0.474855,-99) , 
2, -0.0714203, 0, 0, 0.489361,-99) , 
3, 4.69447, 1, 0, 0.500594,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0110725);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499042, 0, 1, 0.519692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497536,-99) , 
9, 0.66869, 0, 0, 0.500007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471851,-99) , 
7, 1.62584, 1, 0, 0.499115,-99) , 
7, 1.85716, 0, 0, 0.500566,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0105212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214318, 0, 1, 0.504259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479631,-99) , 
4, 0.99932, 0, 0, 0.503488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477264,-99) , 
4, 0.998571, 0, 0, 0.502763,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0114073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493109,-99) , 
8, -1.68346, 0, 0, 0.502975,-99) , 
6, -946.347, 0, 0, 0.512759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497302,-99) , 
8, 0.684198, 0, 0, 0.49876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473498,-99) , 
7, -1.85706, 0, 0, 0.497953,-99) , 
0, 0.492376, 1, 0, 0.499647,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.00889057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487077,-99) , 
0, 0.496185, 0, 0, 0.517927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499995,-99) , 
7, -1.28568, 1, 0, 0.501657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471743,-99) , 
4, 0.999705, 0, 0, 0.500805,-99) , 
4, 0.999524, 1, 0, 0.502159,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.00937807);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.50276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511109,-99) , 
NN(
0, 
0, 
-1, -1.69384, 0, -1, 0.467584,-99) , 
6, -949.846, 0, 0, 0.486647,-99) , 
7, -1.28564, 0, 0, 0.501231,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.00879465);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0999299, 1, 1, 0.523485,-99) , 
NN(
NN(
0, 
0, 
-1, -0.167502, 1, 1, 0.521193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486533,-99) , 
7, 1.57144, 1, 0, 0.499433,-99) , 
2, -0.132521, 1, 0, 0.500654,-99) , 
2, -0.214143, 1, 0, 0.501884,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0212875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497359,-99) , 
7, 0.354828, 0, 0, 0.502145,-99) , 
7, -1.61807, 1, 0, 0.50588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491779,-99) , 
9, -0.148486, 1, 0, 0.495695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460789,-99) , 
7, -1.28562, 0, 0, 0.493843,-99) , 
8, -2.47955, 1, 0, 0.498578,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0246505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49708,-99) , 
7, 0.688247, 1, 0, 0.513681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493794,-99) , 
8, -3.43087, 1, 0, 0.499363,-99) , 
9, 0.0691948, 0, 0, 0.50297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482762,-99) , 
7, 2.04764, 1, 0, 0.503888,-99) , 
NN(
0, 
0, 
-1, 3.29233, 1, -1, 0.47552,-99) , 
7, 0.142906, 0, 0, 0.493426,-99) , 
8, -1.14772, 1, 0, 0.500286,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0200323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0678519, 1, 1, 0.508604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487161,-99) , 
0, 0.494281, 1, 0, 0.492642,-99) , 
3, 2.63208, 1, 0, 0.504484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494654,-99) , 
9, -1.14495, 1, 0, 0.499489,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.4772,-99) , 
8, -1.29058, 1, 0, 0.493079,-99) , 
3, 4.5261, 1, 0, 0.502217,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0125163);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.77889, 0, 1, 0.506308,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.493856,-99) , 
8, -1.29058, 1, 0, 0.502481,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0151056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47719, 1, 1, 0.53472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498996,-99) , 
7, -0.714232, 1, 0, 0.503321,-99) , 
8, -1.20695, 1, 0, 0.50891,-99) , 
NN(
NN(
0, 
0, 
-1, -1.52913, 0, 1, 0.503936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435192,-99) , 
8, -1.82405, 1, 0, 0.495158,-99) , 
7, -0.567236, 0, 0, 0.501093,-99) , 
9, 0.592763, 0, 0, 0.503713,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0125508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49549,-99) , 
2, -0.275438, 1, 0, 0.496436,-99) , 
2, 0.214318, 0, 0, 0.497347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469272,-99) , 
3, 9.27754, 1, 0, 0.496637,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0125805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.157539, 0, 1, 0.503328,-99) , 
NN(
0, 
0, 
-1, -0.428106, 0, -1, 0.483139,-99) , 
4, 0.999887, 0, 0, 0.5012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461466,-99) , 
7, 0.142881, 0, 0, 0.489835,-99) , 
4, 0.999524, 0, 0, 0.500342,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00798535);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499269,-99) , 
4, 0.999524, 1, 0, 0.500284,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, -1, 0.479181,-99) , 
0, 0.491424, 0, 0, 0.498639,-99) , 
7, 2.14285, 0, 0, 0.49968,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0121838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49844,-99) , 
7, -0.347065, 1, 0, 0.506627,-99) , 
7, 1.28548, 0, 0, 0.513114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49407,-99) , 
7, -0.714127, 0, 0, 0.506372,-99) , 
NN(
0, 
0, 
-1, 1.85715, 1, -1, 0.497168,-99) , 
0, 0.499995, 0, 0, 0.500323,-99) , 
8, 0.418417, 0, 0, 0.501791,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.014613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.071688, 1, 1, 0.504098,-99) , 
NN(
0, 
0, 
-1, -1.90463, 0, -1, 0.483036,-99) , 
3, 3.69924, 1, 0, 0.502155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485053,-99) , 
2, 0.078241, 1, 0, 0.50041,-99) , 
NN(
0, 
0, 
-1, -2.1185, 1, -1, 0.478722,-99) , 
2, -0.0714203, 0, 0, 0.493863,-99) , 
3, 4.55235, 1, 0, 0.500523,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.00962058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497537,-99) , 
2, 0.21433, 0, 0, 0.498724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472435,-99) , 
3, 8.90656, 1, 0, 0.497938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475215,-99) , 
7, -1.85711, 0, 0, 0.49719,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0122882);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.21439, 1, 1, 0.504367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492752,-99) , 
0, 0.504349, 0, 0, 0.501471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461289,-99) , 
8, -2.72345, 1, 0, 0.48287,-99) , 
7, -0.142636, 0, 0, 0.494061,-99) , 
0, 0.5019, 1, 0, 0.502283,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0141333);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.234771, 0, 1, 0.519451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496465,-99) , 
9, 1.55118, 0, 0, 0.499459,-99) , 
NN(
0, 
0, 
-1, -2.38603, 1, -1, 0.485238,-99) , 
6, 0.877635, 1, 0, 0.497866,-99) , 
0, 0.490471, 1, 0, 0.499065,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0128019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.71423, 0, 1, 0.512307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468291,-99) , 
4, 0.999048, 0, 0, 0.502279,-99) , 
2, 0.0708992, 0, 0, 0.504133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482448,-99) , 
9, 3.24249, 1, 0, 0.503025,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0145073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49594,-99) , 
2, 0.0312756, 0, 0, 0.499814,-99) , 
2, -0.213496, 1, 0, 0.50087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456168,-99) , 
7, -0.142819, 0, 0, 0.484766,-99) , 
4, 0.999524, 0, 0, 0.499659,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0176095);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495645,-99) , 
9, 1.0362, 1, 0, 0.512014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48945,-99) , 
7, -0.999855, 0, 0, 0.508755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49374,-99) , 
0, 0.49351, 0, 0, 0.504406,-99) , 
NN(
0, 
0, 
-1, -951.198, 0, -1, 0.493264,-99) , 
0, 0.497138, 1, 0, 0.497839,-99) , 
2, 0.0715353, 0, 0, 0.499849,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.00941913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.441601, 1, 1, 0.516394,-99) , 
NN(
NN(
0, 
0, 
-1, -0.214208, 1, 1, 0.503002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481666,-99) , 
4, 0.998572, 0, 0, 0.502348,-99) , 
9, 2.39216, 0, 0, 0.503693,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0108469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499027,-99) , 
9, 0.420679, 0, 0, 0.503034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485353,-99) , 
9, 3.18293, 1, 0, 0.502082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47521,-99) , 
4, 0.998571, 0, 0, 0.501338,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0127375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.506145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495369,-99) , 
0, 0.5019, 0, 0, 0.498093,-99) , 
6, -946.347, 1, 0, 0.502171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477512,-99) , 
7, -1.85705, 0, 0, 0.501362,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0120375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.54237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482164,-99) , 
9, -1.96806, 0, 0, 0.514466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498256,-99) , 
2, 0.214347, 0, 0, 0.499406,-99) , 
4, 0.998571, 1, 0, 0.500059,-99) , 
7, -1.28571, 1, 0, 0.501482,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0232302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.53228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488282,-99) , 
6, -951.286, 1, 0, 0.505147,-99) , 
8, -0.303859, 0, 0, 0.511607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458583,-99) , 
4, 0.999751, 0, 0, 0.503435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442795,-99) , 
9, -1.01977, 1, 0, 0.476901,-99) , 
4, 0.999524, 0, 0, 0.501526,-99) , 
7, 1, 0, 0, 0.50382,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0064094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.131932, 1, 1, 0.502095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475826,-99) , 
2, -0.213521, 0, 0, 0.500774,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0306468);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449998,-99) , 
6, -1.06728, 0, 0, 0.503303,-99) , 
NN(
0, 
0, 
-1, -1.53053, 0, -1, 0.493008,-99) , 
6, -951.286, 0, 0, 0.498094,-99) , 
7, 2.14286, 0, 0, 0.499443,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0123249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498161,-99) , 
0, 0.500539, 1, 0, 0.503881,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494954,-99) , 
0, 0.496185, 0, 0, 0.500946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482153,-99) , 
6, 1.39928, 1, 0, 0.49974,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0158292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49684,-99) , 
7, -0.428506, 1, 0, 0.500935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473389,-99) , 
7, 0.438267, 0, 0, 0.483389,-99) , 
6, 0.877635, 1, 0, 0.498936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46872,-99) , 
2, 0.214259, 1, 0, 0.497441,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0099631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49155,-99) , 
6, -951.286, 0, 0, 0.519662,-99) , 
NN(
0, 
0, 
-1, 1.62585, 1, -1, 0.497464,-99) , 
7, 1.85714, 0, 0, 0.499007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47234,-99) , 
4, 0.998571, 0, 0, 0.498268,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0151846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486908,-99) , 
9, -0.0895753, 1, 0, 0.520998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497496,-99) , 
6, -6.95896, 1, 0, 0.502629,-99) , 
4, 0.999524, 1, 0, 0.504073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46683,-99) , 
7, -1.97956, 0, 0, 0.487115,-99) , 
7, -1.57139, 0, 0, 0.503092,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0243512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714267, 0, 1, 0.520703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491257,-99) , 
8, -0.678427, 1, 0, 0.514378,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.524844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492633,-99) , 
2, -0.00728251, 1, 0, 0.499093,-99) , 
2, 0.153059, 0, 0, 0.501911,-99) , 
2, -0.0714203, 1, 0, 0.504204,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0141252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00356468, 0, 1, 0.509937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480962,-99) , 
3, 4.54997, 1, 0, 0.497042,-99) , 
2, -0.0712632, 0, 0, 0.507608,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500293, 0, 1, 0.504782,-99) , 
NN(
0, 
0, 
-1, 0.501459, 0, -1, 0.495977,-99) , 
0, 0.500811, 1, 0, 0.499947,-99) , 
0, 0.49809, 1, 0, 0.503766,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0255223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4968,-99) , 
4, 0.999998, 0, 0, 0.507677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474371,-99) , 
7, -0.142803, 0, 0, 0.494383,-99) , 
4, 0.999955, 0, 0, 0.504461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48161,-99) , 
4, 0.999048, 0, 0, 0.50346,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0148176);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495335,-99) , 
0, 0.505437, 1, 0, 0.515142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493027,-99) , 
6, -951.286, 0, 0, 0.503435,-99) , 
9, 0.00586078, 0, 0, 0.509182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496103,-99) , 
6, -949.846, 0, 0, 0.49965,-99) , 
2, -0.214098, 1, 0, 0.500776,-99) , 
0, 0.499995, 0, 0, 0.503654,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0402845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.09346, 1, 1, 0.50778,-99) , 
NN(
0, 
0, 
-1, -1.6938, 0, -1, 0.477946,-99) , 
7, -1.28563, 0, 0, 0.504606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49736,-99) , 
7, 1.0003, 0, 0, 0.510297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34719,-99) , 
6, -1.56139, 0, 0, 0.472255,-99) , 
6, -0.284644, 0, 0, 0.494811,-99) , 
6, -15.9238, 1, 0, 0.499805,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0168165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28566, 1, 1, 0.507529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482229,-99) , 
4, 0.999524, 0, 0, 0.505199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492744,-99) , 
7, -1.57135, 1, 0, 0.494191,-99) , 
4, 0.999524, 1, 0, 0.495684,-99) , 
0, 0.496185, 1, 0, 0.498877,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0130563);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.520048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493331,-99) , 
9, -0.746463, 0, 0, 0.508546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490812,-99) , 
2, 0.0715717, 1, 0, 0.500152,-99) , 
0, 0.500947, 0, 0, 0.502423,-99) , 
7, -1.57136, 1, 0, 0.503498,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0163484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495135,-99) , 
8, -0.837291, 1, 0, 0.508869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487187,-99) , 
0, 0.500267, 0, 0, 0.499549,-99) , 
9, 0.0844178, 0, 0, 0.503887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495098,-99) , 
3, 4.58377, 0, 0, 0.498036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478458,-99) , 
4, 0.999524, 0, 0, 0.496558,-99) , 
0, 0.499043, 0, 0, 0.499655,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00950257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494657,-99) , 
8, -2.15373, 1, 0, 0.523246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492116,-99) , 
9, -1.87756, 0, 0, 0.509959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499945,-99) , 
4, 0.999048, 1, 0, 0.501096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474754,-99) , 
7, 2.23811, 1, 0, 0.500103,-99) , 
7, -0.99991, 1, 0, 0.501568,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0169914);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.2381, 1, 1, 0.516866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487925,-99) , 
7, -0.687023, 0, 0, 0.50703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487242,-99) , 
8, -2.40362, 1, 0, 0.49971,-99) , 
8, -1.95643, 0, 0, 0.502823,-99) , 
7, 1.85715, 0, 0, 0.503799,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0194497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.424462, 1, 1, 0.508167,-99) , 
NN(
0, 
0, 
-1, -1.28563, 0, -1, 0.493848,-99) , 
6, -949.006, 0, 0, 0.500474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482207,-99) , 
7, -0.692306, 0, 0, 0.494847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469653,-99) , 
8, -3.2979, 1, 0, 0.490059,-99) , 
8, -3.13021, 0, 0, 0.498344,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0175989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475192,-99) , 
9, -2.01045, 0, 0, 0.520682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492598,-99) , 
8, -0.14993, 1, 0, 0.50177,-99) , 
7, -1.28569, 1, 0, 0.503633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45997,-99) , 
4, 0.998571, 0, 0, 0.502431,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0262003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47074,-99) , 
7, -1.57136, 0, 0, 0.501195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286922,-99) , 
6, -1.99082, 0, 0, 0.492639,-99) , 
6, -6.95896, 1, 0, 0.497008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4699,-99) , 
0, 0.505709, 1, 0, 0.495868,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0122367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493775,-99) , 
8, -2.59473, 0, 0, 0.50017,-99) , 
7, -1.85705, 1, 0, 0.500885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479873,-99) , 
8, 1.52839, 1, 0, 0.499694,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0171178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999941, 1, 1, 0.510112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48771,-99) , 
0, 0.500125, 0, 0, 0.49794,-99) , 
0, 0.498362, 1, 0, 0.50136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491993,-99) , 
7, 1.57147, 0, 0, 0.49559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465648,-99) , 
4, 0.999524, 0, 0, 0.492871,-99) , 
0, 0.496185, 0, 0, 0.498556,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0189149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.53561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48157,-99) , 
9, -2.0304, 0, 0, 0.511713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498353,-99) , 
0, 0.5019, 1, 0, 0.503005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491981,-99) , 
4, 0.999524, 1, 0, 0.493376,-99) , 
0, 0.500947, 0, 0, 0.495971,-99) , 
7, -1.28568, 1, 0, 0.497506,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0148132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485863,-99) , 
9, -1.8192, 0, 0, 0.510221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495769,-99) , 
4, 0.998572, 1, 0, 0.496694,-99) , 
7, -1.28563, 1, 0, 0.498004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474838,-99) , 
0, 0.489519, 0, 0, 0.497261,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0117777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498449,-99) , 
2, -0.110524, 1, 0, 0.500369,-99) , 
NN(
0, 
0, 
-1, 4.5635, 1, -1, 0.489241,-99) , 
4, 0.999932, 0, 0, 0.498095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452672,-99) , 
4, 0.998572, 0, 0, 0.49688,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.008023);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.520821,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502243,-99) , 
NN(
0, 
0, 
-1, 0.112263, 1, -1, 0.492195,-99) , 
0, 0.493328, 0, 0, 0.500771,-99) , 
2, -0.214261, 1, 0, 0.501848,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0134093);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.32109, 1, 1, 0.514643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495019,-99) , 
9, 0.443798, 0, 0, 0.49765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467359,-99) , 
7, 2.14286, 1, 0, 0.496629,-99) , 
9, 2.32673, 0, 0, 0.498447,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.00886435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499094,-99) , 
0, 0.505709, 0, 0, 0.499817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461729,-99) , 
4, 0.999705, 0, 0, 0.498738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432979,-99) , 
2, 0.0715014, 1, 0, 0.477837,-99) , 
4, 0.999524, 0, 0, 0.497165,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0113089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.502592,-99) , 
NN(
0, 
0, 
-1, 0.534369, 1, -1, 0.484358,-99) , 
4, 0.999909, 0, 0, 0.499744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471726,-99) , 
4, 0.999048, 0, 0, 0.49853,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.00628358);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498293,-99) , 
2, -0.167545, 1, 0, 0.520522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499611,-99) , 
4, 0.999048, 1, 0, 0.500267,-99) , 
2, -0.132565, 1, 0, 0.501385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4789,-99) , 
2, -0.214186, 0, 0, 0.500256,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0101794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999938, 1, 1, 0.503194,-99) , 
NN(
0, 
0, 
-1, -0.521814, 1, -1, 0.480859,-99) , 
4, 0.99966, 0, 0, 0.501723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464808,-99) , 
4, 0.998571, 0, 0, 0.500715,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00759283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499354,-99) , 
4, 0.999048, 1, 0, 0.500264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481359,-99) , 
6, -951.362, 0, 0, 0.490782,-99) , 
0, 0.502852, 1, 0, 0.498841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483657,-99) , 
6, 1.39928, 1, 0, 0.497861,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.019463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499822,-99) , 
6, -951.286, 0, 0, 0.506881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470568,-99) , 
2, -0.214212, 0, 0, 0.505112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486706,-99) , 
8, -0.825985, 0, 0, 0.492155,-99) , 
9, -0.259688, 1, 0, 0.496861,-99) , 
7, 0.428593, 1, 0, 0.50183,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0204577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478041,-99) , 
8, -1.48909, 1, 0, 0.518217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497244,-99) , 
8, -1.65509, 0, 0, 0.498542,-99) , 
9, 0.364325, 0, 0, 0.501593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491442,-99) , 
8, 0.675705, 0, 0, 0.49881,-99) , 
NN(
0, 
0, 
-1, -0.0695324, 0, -1, 0.481244,-99) , 
6, -951.286, 1, 0, 0.492731,-99) , 
8, -1.14772, 1, 0, 0.499098,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.013192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.87787, 0, 1, 0.519567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481338,-99) , 
8, 1.52732, 1, 0, 0.500886,-99) , 
7, -0.999934, 1, 0, 0.503732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475341,-99) , 
4, 0.999048, 0, 0, 0.502511,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0195954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459375,-99) , 
8, -1.42434, 1, 0, 0.504234,-99) , 
8, -4.09872, 1, 0, 0.506215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495669,-99) , 
9, 0.687196, 1, 0, 0.49956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462115,-99) , 
8, -0.205623, 0, 0, 0.478205,-99) , 
7, 1.57143, 1, 0, 0.494752,-99) , 
8, -1.29058, 1, 0, 0.502695,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0146033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.105251, 0, 1, 0.504602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480826,-99) , 
6, -951.286, 1, 0, 0.494868,-99) , 
4, 0.999932, 0, 0, 0.502617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475008,-99) , 
4, 0.998571, 0, 0, 0.501862,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00929283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498034,-99) , 
0, 0.490471, 1, 0, 0.499338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467915,-99) , 
4, 0.99932, 0, 0, 0.498352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472038,-99) , 
4, 0.998571, 0, 0, 0.497622,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0114643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.50902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497125,-99) , 
2, -0.152998, 1, 0, 0.49923,-99) , 
2, 0.0714736, 0, 0, 0.501034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478863,-99) , 
7, -1.85711, 0, 0, 0.500312,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0129466);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497879,-99) , 
9, -1.8886, 0, 0, 0.517028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489084,-99) , 
7, 1.77551, 1, 0, 0.501935,-99) , 
7, -1.28568, 1, 0, 0.503416,-99) , 
4, 0.999048, 1, 0, 0.504714,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0159945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49741, 0, 1, 0.505256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491417,-99) , 
2, -0.0713719, 1, 0, 0.49427,-99) , 
0, 0.499043, 1, 0, 0.500662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508117,-99) , 
NN(
0, 
0, 
-1, 0.00318156, 0, -1, 0.481922,-99) , 
2, -0.0707197, 1, 0, 0.486811,-99) , 
7, 1.28575, 1, 0, 0.498501,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.012701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55233, 0, 1, 0.504701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494478,-99) , 
4, 0.999773, 1, 0, 0.496245,-99) , 
0, 0.499043, 0, 0, 0.499835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478359,-99) , 
4, 0.999048, 0, 0, 0.498898,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.014283);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.17505, 0, 1, 0.518589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498232,-99) , 
8, -2.44035, 1, 0, 0.502617,-99) , 
NN(
0, 
0, 
-1, -0.0709931, 0, -1, 0.488392,-99) , 
3, 4.67556, 1, 0, 0.49995,-99) , 
9, -1.82697, 1, 0, 0.501414,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0148428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.81599, 0, 1, 0.510264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493836,-99) , 
7, 0.42868, 1, 0, 0.499424,-99) , 
0, 0.499043, 0, 0, 0.504039,-99) , 
NN(
0, 
0, 
-1, -0.195071, 1, -1, 0.488306,-99) , 
6, 0.877635, 1, 0, 0.502285,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0082625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498511,-99) , 
7, 1.85715, 0, 0, 0.499566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463527,-99) , 
4, 0.999252, 0, 0, 0.498599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464451,-99) , 
4, 0.998571, 0, 0, 0.497676,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0170777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491254,-99) , 
8, -1.56103, 1, 0, 0.508203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494498,-99) , 
7, 1.85714, 0, 0, 0.495855,-99) , 
3, 0.95011, 1, 0, 0.498519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470995,-99) , 
3, 9.27754, 1, 0, 0.497808,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.034034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 1, 1, 0.506025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397327,-99) , 
6, -1.27461, 0, 0, 0.496499,-99) , 
6, -15.9238, 1, 0, 0.501446,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.474832,-99) , 
4, 0.999524, 0, 0, 0.499494,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0133965);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497972,-99) , 
9, 0.606561, 0, 0, 0.501623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445506,-99) , 
7, -0.428499, 0, 0, 0.487935,-99) , 
4, 0.999864, 0, 0, 0.499826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465557,-99) , 
4, 0.998572, 0, 0, 0.498907,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0149029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495652,-99) , 
7, -1.28563, 1, 0, 0.496937,-99) , 
7, 2.14286, 0, 0, 0.497704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476171,-99) , 
7, 1.0409, 1, 0, 0.497361,-99) , 
NN(
0, 
0, 
-1, -0.555322, 0, -1, 0.480808,-99) , 
7, 0.428738, 0, 0, 0.487457,-99) , 
0, 0.502852, 1, 0, 0.496154,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.012068);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491886,-99) , 
6, 0.877635, 1, 0, 0.503195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471497,-99) , 
8, -1.68346, 1, 0, 0.490304,-99) , 
0, 0.491424, 0, 0, 0.50218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500509,-99) , 
NN(
0, 
0, 
-1, 2.04764, 1, -1, 0.481526,-99) , 
6, -951.286, 0, 0, 0.490459,-99) , 
7, 1.57144, 1, 0, 0.500953,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00989974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499507,-99) , 
7, 0.142665, 0, 0, 0.522398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499315,-99) , 
2, -0.215592, 1, 0, 0.500132,-99) , 
3, 0.505255, 1, 0, 0.502155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494919,-99) , 
0, 0.496185, 1, 0, 0.499345,-99) , 
NN(
0, 
0, 
-1, -0.0974444, 1, -1, 0.477393,-99) , 
2, -0.0714699, 0, 0, 0.492723,-99) , 
3, 4.53901, 1, 0, 0.500292,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0117207);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481364,-99) , 
7, 1.91159, 1, 0, 0.501649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480747,-99) , 
7, -1.57136, 0, 0, 0.500832,-99) , 
8, -4.10179, 1, 0, 0.502157,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0296982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499681,-99) , 
8, -3.35415, 1, 0, 0.502598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450281,-99) , 
7, -1.57142, 0, 0, 0.499275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498728,-99) , 
7, 1.28597, 0, 0, 0.50875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322863,-99) , 
6, -1.76289, 0, 0, 0.472013,-99) , 
6, -0.172453, 0, 0, 0.49236,-99) , 
6, -946.347, 1, 0, 0.495886,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0098705);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51713,-99) , 
NN(
NN(
0, 
0, 
-1, -0.999919, 1, 1, 0.502745,-99) , 
NN(
0, 
0, 
-1, -0.259558, 1, -1, 0.479814,-99) , 
4, 0.999819, 0, 0, 0.500643,-99) , 
4, 0.999048, 1, 0, 0.501406,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00932608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497665,-99) , 
7, 2.14286, 0, 0, 0.498676,-99) , 
2, 0.214314, 0, 0, 0.49978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473033,-99) , 
4, 0.998572, 0, 0, 0.499061,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0154449);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532945,-99) , 
NN(
NN(
0, 
0, 
-1, -1.83337, 0, 1, 0.518615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492167,-99) , 
6, -946.347, 1, 0, 0.49794,-99) , 
7, -1.28568, 1, 0, 0.499974,-99) , 
4, 0.998571, 1, 0, 0.500979,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0162434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.771197, 1, 1, 0.506134,-99) , 
NN(
0, 
0, 
-1, 0.499996, 0, -1, 0.47945,-99) , 
3, 3.70598, 1, 0, 0.5037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489051,-99) , 
7, -0.142706, 0, 0, 0.499191,-99) , 
NN(
0, 
0, 
-1, -2.14762, 1, -1, 0.482234,-99) , 
2, -0.0712632, 0, 0, 0.494024,-99) , 
3, 4.55908, 1, 0, 0.50179,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.00835547);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512103,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.510429,-99) , 
NN(
0, 
0, 
-1, 1.85716, 1, -1, 0.497297,-99) , 
8, 0.343455, 0, 0, 0.498873,-99) , 
6, 1.39928, 0, 0, 0.499727,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.00686046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480971,-99) , 
8, -0.51703, 0, 0, 0.48894,-99) , 
7, 1.57144, 1, 0, 0.499896,-99) , 
NN(
0, 
0, 
-1, 0.144763, 0, -1, 0.481447,-99) , 
0, 0.490471, 0, 0, 0.498925,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0102539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497791,-99) , 
8, -4.09418, 1, 0, 0.499289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480075,-99) , 
9, 3.08565, 1, 0, 0.498258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476048,-99) , 
7, 2.14287, 1, 0, 0.4974,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0156638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.10308, 0, 1, 0.530542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491974,-99) , 
7, 0.600678, 1, 0, 0.501009,-99) , 
9, 0.879753, 0, 0, 0.503099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519603,-99) , 
NN(
0, 
0, 
-1, 1.65037, 0, -1, 0.49054,-99) , 
9, 1.08368, 1, 0, 0.494113,-99) , 
8, -0.880045, 1, 0, 0.500937,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0112406);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49814,-99) , 
4, 0.999524, 1, 0, 0.500203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477155,-99) , 
7, 2.18368, 1, 0, 0.499289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466929,-99) , 
9, -1.96806, 0, 0, 0.485643,-99) , 
7, -1.28563, 0, 0, 0.49799,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0232415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475941,-99) , 
8, -1.6085, 1, 0, 0.515921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488069,-99) , 
9, -0.107611, 1, 0, 0.500402,-99) , 
9, 0.314826, 0, 0, 0.502858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483612,-99) , 
7, 0.673448, 0, 0, 0.492135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462159,-99) , 
7, 2.14285, 1, 0, 0.488911,-99) , 
8, -1.20998, 1, 0, 0.498806,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0196213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.551134, 0, 1, 0.526218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494058,-99) , 
7, 0.877575, 1, 0, 0.501529,-99) , 
4, 0.999524, 1, 0, 0.503536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481684,-99) , 
9, -1.23342, 0, 0, 0.493612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467234,-99) , 
7, -1.8979, 0, 0, 0.491022,-99) , 
7, -0.428523, 0, 0, 0.499777,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.00926161);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.2381, 1, 1, 0.523317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484966,-99) , 
7, -1.3809, 0, 0, 0.498953,-99) , 
NN(
0, 
0, 
-1, 2.31389, 1, -1, 0.481975,-99) , 
9, 2.35544, 1, 0, 0.497469,-99) , 
7, 1.85716, 0, 0, 0.499292,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0147891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497637, 0, 1, 0.515612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495858,-99) , 
9, 1.45539, 0, 0, 0.498371,-99) , 
4, 0.999524, 1, 0, 0.499661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4873,-99) , 
8, -1.04564, 1, 0, 0.499624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471543,-99) , 
9, -0.151139, 0, 0, 0.487447,-99) , 
0, 0.503804, 1, 0, 0.498355,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0134251);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495229,-99) , 
9, -0.418148, 0, 0, 0.501195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475828,-99) , 
4, 0.999456, 0, 0, 0.500133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459135,-99) , 
4, 0.998571, 0, 0, 0.499024,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0121748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494914,-99) , 
0, 0.489266, 0, 0, 0.506143,-99) , 
0, 0.491469, 0, 0, 0.511626,-99) , 
NN(
NN(
0, 
0, 
-1, -0.847639, 1, 1, 0.505251,-99) , 
NN(
0, 
0, 
-1, 2.45526, 1, -1, 0.494991,-99) , 
3, 4.61402, 0, 0, 0.496994,-99) , 
0, 0.492376, 1, 0, 0.498673,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00581996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.513725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477586,-99) , 
7, 1.62587, 1, 0, 0.500263,-99) , 
7, 1.85716, 0, 0, 0.501182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481968,-99) , 
4, 0.998571, 0, 0, 0.500638,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0138875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48305,-99) , 
8, -0.34819, 1, 0, 0.5082,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.495373,-99) , 
2, 0.0510124, 0, 0, 0.497702,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.483281,-99) , 
2, 0.214278, 1, 0, 0.496967,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0108847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489922,-99) , 
9, -1.85256, 0, 0, 0.512094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475652,-99) , 
8, -0.893304, 1, 0, 0.507723,-99) , 
NN(
0, 
0, 
-1, 1.51311, 1, -1, 0.498332,-99) , 
7, 1.9796, 0, 0, 0.498913,-99) , 
7, -1.28568, 1, 0, 0.500203,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0197519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492605,-99) , 
0, 0.493329, 0, 0, 0.506268,-99) , 
8, -1.95793, 1, 0, 0.509068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496303,-99) , 
8, -2.40309, 0, 0, 0.501941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469528,-99) , 
8, -2.68822, 1, 0, 0.489038,-99) , 
0, 0.500947, 1, 0, 0.498658,-99) , 
9, -0.0340133, 0, 0, 0.503732,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0169147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496844,-99) , 
9, 0.504332, 0, 0, 0.499107,-99) , 
7, 1.55973, 0, 0, 0.500747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510797,-99) , 
NN(
0, 
0, 
-1, 1.85715, 1, -1, 0.485196,-99) , 
8, 2.09884, 0, 0, 0.489188,-99) , 
8, -1.13362, 1, 0, 0.497537,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0105887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491999,-99) , 
4, 0.999955, 0, 0, 0.51775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48934,-99) , 
0, 0.492966, 0, 0, 0.501965,-99) , 
0, 0.491424, 1, 0, 0.503203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483794,-99) , 
4, 0.999048, 0, 0, 0.502362,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0163325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0668194, 1, 1, 0.505469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491591,-99) , 
0, 0.494282, 1, 0, 0.495533,-99) , 
3, 2.23939, 1, 0, 0.502024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49612,-99) , 
0, 0.499043, 1, 0, 0.509662,-99) , 
NN(
0, 
0, 
-1, 0.768525, 1, -1, 0.484618,-99) , 
7, -0.428702, 1, 0, 0.492324,-99) , 
3, 4.61402, 1, 0, 0.500156,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.00973586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.91837, 0, 1, 0.503234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483024,-99) , 
9, 3.10173, 1, 0, 0.502149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4725,-99) , 
7, 2.14285, 1, 0, 0.501019,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0122482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.275663, 1, 1, 0.508107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493536,-99) , 
2, 0.00312742, 0, 0, 0.499395,-99) , 
2, -0.0716698, 1, 0, 0.500945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480125,-99) , 
0, 0.489519, 0, 0, 0.500272,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0132722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.848883, 0, 1, 0.504641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476288,-99) , 
3, 0.707111, 0, 0, 0.499846,-99) , 
NN(
0, 
0, 
-1, -0.128847, 1, -1, 0.475692,-99) , 
3, 4.46587, 1, 0, 0.495218,-99) , 
8, -1.20998, 1, 0, 0.501879,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0195783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495449,-99) , 
7, 0.780913, 0, 0, 0.498373,-99) , 
9, 0.172489, 0, 0, 0.501788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484027,-99) , 
7, 1.0953, 1, 0, 0.495248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465694,-99) , 
7, -0.999919, 0, 0, 0.492621,-99) , 
8, -1.79948, 1, 0, 0.497943,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0142568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496888,-99) , 
7, -1.28327, 0, 0, 0.511173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489597,-99) , 
3, 2.92928, 1, 0, 0.500805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480727,-99) , 
7, 0.428604, 0, 0, 0.489599,-99) , 
3, 4.6823, 1, 0, 0.498724,-99) , 
9, -1.66217, 1, 0, 0.499994,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0407622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.0001, 0, 1, 0.516571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417491,-99) , 
6, -1.16695, 0, 0, 0.494582,-99) , 
6, 0.314623, 0, 0, 0.503164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535713,-99) , 
NN(
0, 
0, 
-1, -0.262456, 1, -1, 0.492117,-99) , 
8, 1.66433, 0, 0, 0.494912,-99) , 
6, -949.006, 0, 0, 0.49899,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.032972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.114023, 0, 1, 0.514503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464728,-99) , 
7, -0.999934, 0, 0, 0.499932,-99) , 
8, -1.83009, 1, 0, 0.507016,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28574, 0, 1, 0.511794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347926,-99) , 
6, -1.70977, 0, 0, 0.458542,-99) , 
6, -0.508482, 0, 0, 0.49402,-99) , 
6, -946.347, 1, 0, 0.500663,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488813,-99) , 
7, 0.714298, 0, 0, 0.493081,-99) , 
9, -1.55934, 1, 0, 0.494292,-99) , 
8, -3.76886, 1, 0, 0.495495,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0329317);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499818,-99) , 
8, -2.18005, 0, 0, 0.504844,-99) , 
NN(
0, 
0, 
-1, 2.88125, 1, -1, 0.488026,-99) , 
8, -0.782658, 1, 0, 0.50179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46655,-99) , 
9, 2.27234, 1, 0, 0.499284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349319,-99) , 
6, -1.06729, 0, 0, 0.48172,-99) , 
6, -951.286, 1, 0, 0.490658,-99) , 
7, 0.428623, 1, 0, 0.497395,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0166762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488717,-99) , 
8, -2.43093, 1, 0, 0.503355,-99) , 
9, 1.0648, 0, 0, 0.508097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493564,-99) , 
6, -951.286, 1, 0, 0.499086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47484,-99) , 
9, -0.472004, 1, 0, 0.486451,-99) , 
0, 0.495369, 0, 0, 0.497353,-99) , 
0, 0.493328, 1, 0, 0.499009,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.013267);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493343,-99) , 
6, -949.006, 1, 0, 0.498037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463695,-99) , 
9, -1.63652, 0, 0, 0.480898,-99) , 
7, -1.16319, 0, 0, 0.496601,-99) , 
7, -1.85707, 1, 0, 0.497501,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0241401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.679735, 1, 1, 0.521917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494098,-99) , 
7, -1.57444, 1, 0, 0.498798,-99) , 
7, -0.00697865, 0, 0, 0.505963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498285,-99) , 
7, 0.484185, 0, 0, 0.513144,-99) , 
NN(
0, 
0, 
-1, 0.428586, 1, -1, 0.489425,-99) , 
9, -0.11069, 1, 0, 0.493777,-99) , 
8, -2.48251, 1, 0, 0.498541,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.017995);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493984,-99) , 
9, -0.76883, 0, 0, 0.50067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487469,-99) , 
8, -2.25145, 1, 0, 0.492195,-99) , 
7, -0.142806, 1, 0, 0.495594,-99) , 
4, 0.999048, 1, 0, 0.496452,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0193676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499796,-99) , 
9, -0.0982481, 1, 0, 0.508716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491445,-99) , 
7, -0.387532, 1, 0, 0.498199,-99) , 
8, -2.11065, 0, 0, 0.501932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519366,-99) , 
NN(
0, 
0, 
-1, 1.28575, 0, -1, 0.486813,-99) , 
9, -0.323496, 1, 0, 0.490113,-99) , 
7, 0.428607, 1, 0, 0.497238,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0115568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497162,-99) , 
9, -0.896561, 1, 0, 0.500063,-99) , 
7, 2.14286, 0, 0, 0.500905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460357,-99) , 
4, 0.998571, 0, 0, 0.499817,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00940268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495234, 1, 1, 0.518257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463515,-99) , 
4, 0.99932, 0, 0, 0.500084,-99) , 
7, 1.57143, 0, 0, 0.502049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472104,-99) , 
4, 0.998572, 0, 0, 0.501232,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0136356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498556,-99) , 
6, -949.846, 1, 0, 0.513685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492065,-99) , 
8, -1.65284, 1, 0, 0.514937,-99) , 
NN(
0, 
0, 
-1, -0.618951, 0, -1, 0.495577,-99) , 
7, -0.999925, 1, 0, 0.497169,-99) , 
9, -1.71534, 1, 0, 0.498733,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0229795);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499468,-99) , 
6, -949.006, 0, 0, 0.510367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483162,-99) , 
6, -951.286, 1, 0, 0.494867,-99) , 
8, -2.9819, 0, 0, 0.504297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492604,-99) , 
8, -0.720727, 0, 0, 0.497654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473596,-99) , 
7, 2.26532, 1, 0, 0.495858,-99) , 
7, 0.428593, 1, 0, 0.500958,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0103304);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.12755, 0, 1, 0.504458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481493,-99) , 
9, 3.21989, 1, 0, 0.503303,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.012815);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496949,-99) , 
9, -0.207973, 0, 0, 0.502027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467088,-99) , 
7, 2.30612, 1, 0, 0.501051,-99) , 
7, -1.8571, 1, 0, 0.50194,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0107882);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494086,-99) , 
7, 0.428586, 1, 0, 0.499043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479419,-99) , 
2, 0.214219, 1, 0, 0.498074,-99) , 
0, 0.489519, 1, 0, 0.499129,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0126432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498314,-99) , 
9, -0.184099, 0, 0, 0.501473,-99) , 
8, -4.09872, 1, 0, 0.502519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482018,-99) , 
7, 0.714735, 0, 0, 0.497129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47837,-99) , 
0, 0.499995, 1, 0, 0.490302,-99) , 
8, 0.0496582, 1, 0, 0.500835,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0346337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490949,-99) , 
9, -1.45078, 0, 0, 0.500646,-99) , 
9, 0.280534, 0, 0, 0.513111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498133,-99) , 
0, 0.49809, 1, 0, 0.504118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398028,-99) , 
6, -1.25478, 0, 0, 0.493654,-99) , 
6, -6.95896, 1, 0, 0.498936,-99) , 
7, -0.999966, 1, 0, 0.501079,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0190241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483901,-99) , 
4, 0.999977, 0, 0, 0.511278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494681,-99) , 
2, 0.00527636, 0, 0, 0.499052,-99) , 
3, 4.58123, 0, 0, 0.50154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441804,-99) , 
9, -0.267406, 1, 0, 0.47987,-99) , 
4, 0.999524, 0, 0, 0.499938,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.00802016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213518, 1, 1, 0.501666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46078,-99) , 
4, 0.999252, 0, 0, 0.500587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445462,-99) , 
4, 0.998572, 0, 0, 0.49915,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0129078);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.517047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499409,-99) , 
8, -3.80723, 1, 0, 0.507966,-99) , 
NN(
0, 
0, 
-1, 0.877635, 1, -1, 0.494759,-99) , 
8, -3.27609, 1, 0, 0.496726,-99) , 
7, -1.57139, 1, 0, 0.497979,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0174905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.232679, 0, 1, 0.507873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466629,-99) , 
8, -1.50446, 1, 0, 0.492789,-99) , 
3, 4.23747, 1, 0, 0.504491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484741,-99) , 
9, 2.0797, 1, 0, 0.500649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483251,-99) , 
7, 0.55106, 1, 0, 0.488622,-99) , 
6, -946.347, 1, 0, 0.494672,-99) , 
7, 0.142881, 1, 0, 0.499625,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0165524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503805, 0, 1, 0.504894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467542,-99) , 
9, 0.56271, 1, 0, 0.494278,-99) , 
2, 0.0714808, 1, 0, 0.503107,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489247, 0, 1, 0.511182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4761,-99) , 
8, -2.51067, 1, 0, 0.486439,-99) , 
0, 0.490471, 1, 0, 0.493199,-99) , 
0, 0.494281, 0, 0, 0.501116,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0129425);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496271,-99) , 
7, -1.28563, 1, 0, 0.49808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474797,-99) , 
9, -1.86383, 0, 0, 0.497242,-99) , 
8, -4.09508, 1, 0, 0.49825,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0135239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495835,-99) , 
9, 0.766359, 0, 0, 0.499367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476548,-99) , 
4, 0.999456, 0, 0, 0.498426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461408,-99) , 
4, 0.998571, 0, 0, 0.49743,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0100172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.16314, 1, 1, 0.502707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462517,-99) , 
7, -1.23604, 0, 0, 0.486456,-99) , 
9, -1.6736, 0, 0, 0.501364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473031,-99) , 
7, -1.857, 0, 0, 0.500419,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.012337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497663,-99) , 
7, -1.61213, 1, 0, 0.498997,-99) , 
7, 1.85694, 0, 0, 0.500709,-99) , 
NN(
0, 
0, 
-1, -0.0704297, 0, -1, 0.489344,-99) , 
8, -0.782658, 1, 0, 0.49816,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0192587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.663109, 0, 1, 0.541639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495251,-99) , 
8, 1.84825, 0, 0, 0.499866,-99) , 
8, -1.426, 1, 0, 0.506149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517362,-99) , 
NN(
0, 
0, 
-1, 0.464386, 1, -1, 0.493119,-99) , 
7, 1.04177, 0, 0, 0.495023,-99) , 
9, 0.443841, 0, 0, 0.499127,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.00952052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480789,-99) , 
7, 1.65306, 1, 0, 0.500667,-99) , 
7, 2.14286, 0, 0, 0.501764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45523,-99) , 
9, -0.100072, 1, 0, 0.486295,-99) , 
4, 0.999524, 0, 0, 0.500621,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0159209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999848, 0, 1, 0.511422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497198,-99) , 
3, 0.721251, 1, 0, 0.50007,-99) , 
3, 4.60728, 0, 0, 0.501961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480705,-99) , 
2, 0.139498, 0, 0, 0.498783,-99) , 
NN(
0, 
0, 
-1, 0.143415, 0, -1, 0.478855,-99) , 
8, -1.83009, 1, 0, 0.49012,-99) , 
2, 0.0714736, 1, 0, 0.499831,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0131916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498254,-99) , 
7, 0.428586, 1, 0, 0.503336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475823,-99) , 
4, 0.99932, 0, 0, 0.502487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444636,-99) , 
4, 0.998571, 0, 0, 0.501004,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.00980732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486728,-99) , 
0, 0.506351, 1, 0, 0.503921,-99) , 
NN(
0, 
0, 
-1, 0.503889, 0, -1, 0.481066,-99) , 
0, 0.504666, 0, 0, 0.492775,-99) , 
0, 0.502852, 1, 0, 0.501406,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.00897928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48335,-99) , 
7, -1.57135, 0, 0, 0.500134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479699,-99) , 
0, 0.506163, 0, 0, 0.486494,-99) , 
0, 0.503805, 1, 0, 0.498691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476119,-99) , 
9, 3.3565, 1, 0, 0.497636,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.011947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498644,-99) , 
9, 0.319339, 0, 0, 0.503397,-99) , 
NN(
0, 
0, 
-1, -0.999938, 0, -1, 0.496329,-99) , 
8, -1.59586, 1, 0, 0.501045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48052,-99) , 
8, 1.51534, 1, 0, 0.49986,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0130207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714292, 0, 1, 0.511321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493533,-99) , 
0, 0.499995, 1, 0, 0.500482,-99) , 
2, 0.0510123, 0, 0, 0.502447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483008,-99) , 
2, 0.214259, 1, 0, 0.501474,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0165661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494927,-99) , 
2, 0.0709642, 1, 0, 0.504017,-99) , 
7, 1.85713, 0, 0, 0.505346,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0721377, 0, 1, 0.505848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490917,-99) , 
4, 0.999524, 1, 0, 0.493003,-99) , 
0, 0.492512, 1, 0, 0.49565,-99) , 
0, 0.499043, 0, 0, 0.499779,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.014902);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.514821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476072,-99) , 
8, -0.958045, 1, 0, 0.512897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490225,-99) , 
0, 0.496185, 0, 0, 0.498157,-99) , 
2, -0.111592, 1, 0, 0.500118,-99) , 
2, 0.214772, 0, 0, 0.500891,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0230396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498449,-99) , 
8, -1.77812, 1, 0, 0.517878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484185,-99) , 
2, -0.110312, 1, 0, 0.497483,-99) , 
2, -0.139463, 1, 0, 0.50855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482112,-99) , 
7, -0.428558, 0, 0, 0.511096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490639,-99) , 
2, -0.00731295, 1, 0, 0.495881,-99) , 
2, 0.153015, 0, 0, 0.497523,-99) , 
2, -0.0714445, 1, 0, 0.499543,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0104524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428244, 1, 1, 0.516516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490994,-99) , 
0, 0.494871, 1, 0, 0.501237,-99) , 
0, 0.497138, 0, 0, 0.510113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498067,-99) , 
2, -0.152786, 1, 0, 0.499336,-99) , 
4, 0.999524, 1, 0, 0.500215,-99) , 
2, 0.0715014, 0, 0, 0.502062,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0210775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493194,-99) , 
9, -1.08088, 0, 0, 0.530962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48169,-99) , 
8, -3.61616, 1, 0, 0.498587,-99) , 
8, -3.11026, 0, 0, 0.507368,-99) , 
NN(
NN(
0, 
0, 
-1, -0.142723, 1, 1, 0.509471,-99) , 
NN(
0, 
0, 
-1, -0.0708116, 0, -1, 0.494511,-99) , 
0, 0.5019, 0, 0, 0.497718,-99) , 
9, -0.898708, 1, 0, 0.500334,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.016936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.18368, 0, 1, 0.510734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491796,-99) , 
8, -1.70097, 1, 0, 0.499055,-99) , 
7, 0.142909, 0, 0, 0.504957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486614,-99) , 
9, -0.74486, 0, 0, 0.49965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474045,-99) , 
8, -1.82869, 1, 0, 0.487784,-99) , 
0, 0.503805, 1, 0, 0.503114,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0100439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499949,-99) , 
7, 2.29251, 0, 0, 0.500745,-99) , 
4, 0.999048, 1, 0, 0.502616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51044,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.485751,-99) , 
9, 0.0995986, 0, 0, 0.491173,-99) , 
7, -0.714259, 0, 0, 0.500144,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.011313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.49397, 0, 1, 0.51722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472632,-99) , 
9, 3.39663, 1, 0, 0.499103,-99) , 
7, -0.99997, 1, 0, 0.501888,-99) , 
NN(
0, 
0, 
-1, -0.448576, 1, -1, 0.478598,-99) , 
4, 0.999524, 0, 0, 0.500184,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.017699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499874,-99) , 
0, 0.497138, 1, 0, 0.513437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492477,-99) , 
7, 0.142903, 0, 0, 0.50337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493051,-99) , 
2, 0.0189025, 0, 0, 0.494756,-99) , 
2, 0.0305644, 0, 0, 0.497313,-99) , 
2, -0.214314, 1, 0, 0.498174,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0221167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486253,-99) , 
7, -0.428563, 0, 0, 0.504822,-99) , 
0, 0.492376, 1, 0, 0.507121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499601,-99) , 
7, 0.622366, 0, 0, 0.504397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475385,-99) , 
7, 0.385664, 1, 0, 0.489247,-99) , 
8, -2.31173, 1, 0, 0.498978,-99) , 
8, -1.29058, 0, 0, 0.501519,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00871055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14287, 0, 1, 0.502792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468635,-99) , 
4, 0.999705, 0, 0, 0.501824,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.486278,-99) , 
4, 0.999524, 0, 0, 0.500667,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0129087);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47808,-99) , 
8, -2.82541, 1, 0, 0.505736,-99) , 
NN(
0, 
0, 
-1, -0.213004, 0, -1, 0.497725,-99) , 
8, -2.70411, 1, 0, 0.500074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440095,-99) , 
8, -2.2462, 1, 0, 0.485179,-99) , 
7, -1.28563, 0, 0, 0.498667,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0110536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238001, 1, 1, 0.503427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477193,-99) , 
7, -0.962248, 0, 0, 0.488405,-99) , 
9, -1.41994, 0, 0, 0.501491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471918,-99) , 
7, -1.857, 0, 0, 0.500529,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0197778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.515173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494444,-99) , 
8, -2.26154, 0, 0, 0.500807,-99) , 
9, -0.272893, 0, 0, 0.505284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494777,-99) , 
0, 0.490471, 1, 0, 0.49598,-99) , 
9, -0.523666, 1, 0, 0.498716,-99) , 
7, 0.142924, 1, 0, 0.502006,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0100309);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527696,-99) , 
NN(
NN(
0, 
0, 
-1, -0.203666, 1, 1, 0.502199,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.488718,-99) , 
3, 4.71567, 1, 0, 0.499671,-99) , 
4, 0.999048, 1, 0, 0.500981,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0131786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.504749,-99) , 
NN(
0, 
0, 
-1, -1.29058, 1, -1, 0.490719,-99) , 
3, 4.67556, 1, 0, 0.502123,-99) , 
NN(
0, 
0, 
-1, 0.142886, 0, -1, 0.475425,-99) , 
0, 0.490471, 0, 0, 0.500728,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0099353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99987, 1, 1, 0.502172,-99) , 
NN(
0, 
0, 
-1, 0.143322, 0, -1, 0.481432,-99) , 
4, 0.999819, 0, 0, 0.50086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454692,-99) , 
9, -0.448576, 1, 0, 0.485996,-99) , 
4, 0.999524, 0, 0, 0.499755,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0130829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.526756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477527,-99) , 
9, 1.31602, 1, 0, 0.491725,-99) , 
0, 0.498091, 1, 0, 0.509737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526401,-99) , 
NN(
0, 
0, 
-1, 0.99932, 0, -1, 0.495789,-99) , 
4, 0.998571, 1, 0, 0.496681,-99) , 
7, 1.57143, 0, 0, 0.498083,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0103178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489659,-99) , 
7, 1.85715, 1, 0, 0.502629,-99) , 
8, 1.68025, 0, 0, 0.503405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488455,-99) , 
6, 1.39928, 1, 0, 0.502463,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0172536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494269,-99) , 
7, -0.553349, 0, 0, 0.502687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488447,-99) , 
8, -1.31785, 1, 0, 0.492042,-99) , 
9, 0.679927, 1, 0, 0.49967,-99) , 
7, 2.14287, 0, 0, 0.500468,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00602543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.88739, 0, 1, 0.501284,-99) , 
NN(
0, 
0, 
-1, 0.9993, 0, -1, 0.48119,-99) , 
4, 0.999592, 0, 0, 0.500147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470584,-99) , 
4, 0.998571, 0, 0, 0.499344,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498342,-99) , 
0, 0.505709, 0, 0, 0.499163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473774,-99) , 
4, 0.999456, 0, 0, 0.498128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461809,-99) , 
4, 0.998571, 0, 0, 0.497146,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.00719736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499285,-99) , 
7, 2.14285, 0, 0, 0.500591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463709,-99) , 
4, 0.999252, 0, 0, 0.499621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470045,-99) , 
4, 0.998571, 0, 0, 0.498822,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0121268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.375655, 0, 1, 0.507903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496667,-99) , 
4, 0.999524, 1, 0, 0.498277,-99) , 
7, -0.714261, 1, 0, 0.500385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467019,-99) , 
4, 0.998571, 0, 0, 0.499486,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0111541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49679,-99) , 
0, 0.493328, 1, 0, 0.498735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474643,-99) , 
4, 0.999388, 0, 0, 0.497871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472878,-99) , 
4, 0.998571, 0, 0, 0.49718,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00852602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483562,-99) , 
0, 0.499041, 1, 0, 0.519685,-99) , 
NN(
0, 
0, 
-1, 0.489519, 1, 1, 0.501512,-99) , 
3, 0.518904, 1, 0, 0.502925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480488,-99) , 
3, 9.28394, 1, 0, 0.502363,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0106025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478147,-99) , 
4, 0.999637, 0, 0, 0.502105,-99) , 
4, 0.999048, 1, 0, 0.503025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481835,-99) , 
0, 0.489519, 0, 0, 0.502361,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00893519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482546,-99) , 
6, 1.39928, 1, 0, 0.500307,-99) , 
7, 2.14285, 0, 0, 0.501529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467686,-99) , 
4, 0.998571, 0, 0, 0.50062,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0202798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488454,-99) , 
9, -1.38515, 0, 0, 0.504491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473234,-99) , 
7, -1.57136, 0, 0, 0.502723,-99) , 
NN(
NN(
0, 
0, 
-1, 0.503986, 0, 1, 0.50816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48575,-99) , 
3, 4.42867, 0, 0, 0.489541,-99) , 
2, -0.0727581, 1, 0, 0.492891,-99) , 
0, 0.49809, 1, 0, 0.49778,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0149461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.540587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488878,-99) , 
8, -3.79526, 1, 0, 0.498128,-99) , 
8, -3.12318, 0, 0, 0.507883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478894,-99) , 
4, 0.999909, 0, 0, 0.497876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474465,-99) , 
4, 0.999524, 0, 0, 0.496361,-99) , 
9, -1.00355, 1, 0, 0.49916,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0130479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497534,-99) , 
9, 0.190549, 0, 0, 0.501291,-99) , 
NN(
0, 
0, 
-1, -0.999934, 0, -1, 0.493667,-99) , 
8, -1.7419, 1, 0, 0.498425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483016,-99) , 
9, 3.32893, 1, 0, 0.497681,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.021158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483195,-99) , 
9, -1.07469, 0, 0, 0.5294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490066,-99) , 
8, -3.53415, 1, 0, 0.499825,-99) , 
8, -3.03118, 0, 0, 0.506546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493987,-99) , 
8, -2.70059, 1, 0, 0.495821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470302,-99) , 
4, 0.999524, 0, 0, 0.494223,-99) , 
9, -0.884909, 1, 0, 0.497612,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0152221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499159,-99) , 
3, 4.44818, 1, 0, 0.516985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488596,-99) , 
7, -0.360986, 0, 0, 0.498215,-99) , 
9, -0.202381, 0, 0, 0.50851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498487,-99) , 
4, 0.999524, 1, 0, 0.499985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483947,-99) , 
8, 0.952294, 0, 0, 0.491328,-99) , 
8, -1.20998, 1, 0, 0.497471,-99) , 
2, 0.0715353, 0, 0, 0.499529,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0160277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470109,-99) , 
3, 6.04869, 1, 0, 0.5021,-99) , 
3, 9.02021, 0, 0, 0.502821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476623,-99) , 
4, 0.998571, 0, 0, 0.502107,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0179035);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499273,-99) , 
0, 0.499995, 0, 0, 0.503812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481662,-99) , 
2, -0.0144085, 1, 0, 0.493498,-99) , 
2, 0.00340712, 0, 0, 0.499243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51242,-99) , 
NN(
0, 
0, 
-1, -0.142786, 0, -1, 0.486897,-99) , 
9, -1.17248, 1, 0, 0.491999,-99) , 
2, -0.0714203, 0, 0, 0.49795,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00657908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526615,-99) , 
NN(
0, 
0, 
-1, 0.391118, 1, -1, 0.498382,-99) , 
7, 2.14286, 0, 0, 0.49954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473399,-99) , 
4, 0.998572, 0, 0, 0.498836,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.019514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48146,-99) , 
4, 0.999955, 0, 0, 0.506426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491666,-99) , 
9, 0.879316, 0, 0, 0.496098,-99) , 
7, -0.428515, 1, 0, 0.499277,-99) , 
NN(
0, 
0, 
-1, -0.142455, 0, -1, 0.482014,-99) , 
4, 0.999524, 0, 0, 0.498012,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0131399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.517576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496082,-99) , 
8, -1.14772, 1, 0, 0.502729,-99) , 
0, 0.503986, 0, 0, 0.503651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47275,-99) , 
0, 0.505709, 1, 0, 0.502379,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0133864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487333,-99) , 
8, -3.86146, 0, 0, 0.50904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497897,-99) , 
7, 1.40816, 0, 0, 0.499951,-99) , 
7, -0.714261, 1, 0, 0.501972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47273,-99) , 
4, 0.998571, 0, 0, 0.501183,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0202643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.27422, 1, 1, 0.521875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475638,-99) , 
7, 2.02043, 1, 0, 0.501865,-99) , 
8, -1.49907, 1, 0, 0.511153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486322,-99) , 
8, -1.51473, 1, 0, 0.499447,-99) , 
9, 2.69516, 0, 0, 0.500591,-99) , 
7, 0.714332, 0, 0, 0.503846,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.00898888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495256,-99) , 
2, 0.0713586, 1, 0, 0.517987,-99) , 
NN(
0, 
0, 
-1, -1.63192, 0, -1, 0.497752,-99) , 
4, 0.999524, 1, 0, 0.499331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473741,-99) , 
7, -1.8571, 0, 0, 0.498491,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0132625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493055,-99) , 
7, -0.926731, 0, 0, 0.501965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482154,-99) , 
7, 1.35376, 1, 0, 0.501151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485793,-99) , 
9, 1.24242, 0, 0, 0.496707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465218,-99) , 
7, 2.25172, 1, 0, 0.487631,-99) , 
7, 1.57145, 1, 0, 0.49974,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0150173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49975,-99) , 
9, 2.56945, 1, 0, 0.517218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494949,-99) , 
0, 0.500811, 1, 0, 0.501324,-99) , 
8, -0.654319, 0, 0, 0.50475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484854,-99) , 
2, -0.0707575, 0, 0, 0.498078,-99) , 
NN(
0, 
0, 
-1, 0.4936, 1, -1, 0.485447,-99) , 
7, 1.00004, 1, 0, 0.495305,-99) , 
0, 0.49809, 0, 0, 0.500106,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00641637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494655,-99) , 
0, 0.499042, 0, 0, 0.511893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528326,-99) , 
NN(
0, 
0, 
-1, 3.08565, 1, -1, 0.498648,-99) , 
4, 0.998571, 1, 0, 0.499509,-99) , 
7, 1.85716, 0, 0, 0.500351,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0100829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00156, 0, 1, 0.522453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494349,-99) , 
7, -0.142403, 1, 0, 0.503171,-99) , 
0, 0.496186, 1, 0, 0.509847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488492,-99) , 
2, 0.0713929, 1, 0, 0.498114,-99) , 
4, 0.999048, 1, 0, 0.499216,-99) , 
9, 1.54175, 0, 0, 0.50107,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0156269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499532,-99) , 
8, -2.78295, 0, 0, 0.507519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493335,-99) , 
0, 0.49487, 1, 0, 0.499068,-99) , 
0, 0.497773, 0, 0, 0.502893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475844,-99) , 
8, -2.70071, 1, 0, 0.486042,-99) , 
9, 1.28527, 0, 0, 0.492851,-99) , 
0, 0.502852, 1, 0, 0.501377,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0149458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504038, 0, 1, 0.505919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471122,-99) , 
7, -0.143075, 0, 0, 0.492339,-99) , 
0, 0.504712, 1, 0, 0.503009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496245,-99) , 
8, -3.20521, 1, 0, 0.502097,-99) , 
NN(
0, 
0, 
-1, 0.0678378, 0, -1, 0.491759,-99) , 
8, -2.63082, 1, 0, 0.495439,-99) , 
0, 0.499995, 0, 0, 0.498044,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0115431);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496112,-99) , 
0, 0.498771, 1, 0, 0.499665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487696,-99) , 
0, 0.489247, 1, 0, 0.491773,-99) , 
0, 0.493328, 0, 0, 0.49848,-99) , 
7, -1.85706, 1, 0, 0.499515,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0131002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491198,-99) , 
7, -0.142855, 0, 0, 0.510944,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.497217,-99) , 
2, -0.0714351, 1, 0, 0.499732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473651,-99) , 
9, 3.32893, 1, 0, 0.498509,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00577403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85716, 0, 1, 0.50145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474066,-99) , 
4, 0.999252, 0, 0, 0.500729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468155,-99) , 
4, 0.998571, 0, 0, 0.499862,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00520698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481086,-99) , 
4, 0.999456, 0, 0, 0.499631,-99) , 
2, 0.213592, 0, 0, 0.500809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478462,-99) , 
4, 0.998571, 0, 0, 0.500204,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0107597);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522059,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489496,-99) , 
8, -2.77059, 1, 0, 0.493557,-99) , 
0, 0.497138, 0, 0, 0.498829,-99) , 
7, 2.14285, 0, 0, 0.499789,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0101511);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49127,-99) , 
7, -0.795916, 0, 0, 0.49994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480279,-99) , 
9, 3.16277, 1, 0, 0.498928,-99) , 
7, 2.14284, 0, 0, 0.499751,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0120537);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493918,-99) , 
0, 0.496231, 1, 0, 0.496686,-99) , 
0, 0.505709, 0, 0, 0.49751,-99) , 
4, 0.998571, 1, 0, 0.498661,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0119418);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497183,-99) , 
7, -1.85986, 1, 0, 0.498437,-99) , 
NN(
0, 
0, 
-1, -0.99995, 0, -1, 0.490358,-99) , 
8, -1.20998, 1, 0, 0.496103,-99) , 
0, 0.489519, 1, 0, 0.496863,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.010844);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496443,-99) , 
0, 0.505709, 0, 0, 0.497329,-99) , 
2, 0.21379, 0, 0, 0.498233,-99) , 
7, 2.14286, 0, 0, 0.499241,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.00751362);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499515,-99) , 
4, 0.999524, 1, 0, 0.501061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479306,-99) , 
6, -949.846, 0, 0, 0.490394,-99) , 
0, 0.491922, 0, 0, 0.500007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476706,-99) , 
0, 0.505709, 1, 0, 0.499025,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0131754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.504085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4642,-99) , 
4, 0.999456, 0, 0, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447068,-99) , 
4, 0.998571, 0, 0, 0.501052,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0141665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485405,-99) , 
9, 2.94376, 1, 0, 0.503849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480248,-99) , 
8, -3.71226, 0, 0, 0.496439,-99) , 
7, -0.551, 0, 0, 0.501808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480154,-99) , 
7, 2.14285, 1, 0, 0.500973,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0265113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481209,-99) , 
7, -1.57129, 0, 0, 0.50312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477459,-99) , 
0, 0.504757, 1, 0, 0.501258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494338,-99) , 
7, 1.28619, 0, 0, 0.503657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44132,-99) , 
6, -1.15934, 0, 0, 0.486174,-99) , 
6, 0.0358326, 0, 0, 0.494606,-99) , 
6, -946.347, 1, 0, 0.498005,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0138318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488087,-99) , 
8, 0.685566, 0, 0, 0.50447,-99) , 
8, -0.3549, 1, 0, 0.50882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497029,-99) , 
2, -0.132647, 1, 0, 0.498179,-99) , 
2, -0.214273, 1, 0, 0.499436,-99) , 
9, 1.4872, 0, 0, 0.50115,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0155835);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49385,-99) , 
9, 1.10699, 0, 0, 0.519371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467453,-99) , 
8, -1.39211, 1, 0, 0.499018,-99) , 
9, 0.88083, 0, 0, 0.500542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495098,-99) , 
9, 2.23879, 1, 0, 0.51078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473138,-99) , 
8, 0.933139, 0, 0, 0.483574,-99) , 
0, 0.495233, 1, 0, 0.491452,-99) , 
8, -0.838483, 1, 0, 0.498427,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00859367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495777, 0, 1, 0.519833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497764,-99) , 
0, 0.499043, 1, 0, 0.510785,-99) , 
NN(
0, 
0, 
-1, -1.91149, 0, -1, 0.496711,-99) , 
7, 1.57144, 0, 0, 0.49823,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0127222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.700498, 0, 1, 0.503681,-99) , 
NN(
0, 
0, 
-1, -1.81636, 1, -1, 0.49417,-99) , 
0, 0.494281, 0, 0, 0.501747,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493963, 1, 1, 0.511914,-99) , 
NN(
0, 
0, 
-1, -951.198, 0, -1, 0.476572,-99) , 
0, 0.497138, 1, 0, 0.491488,-99) , 
7, 1.28575, 1, 0, 0.500154,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0111598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499441,-99) , 
8, -3.44603, 0, 0, 0.507222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496388,-99) , 
8, -2.91813, 1, 0, 0.498275,-99) , 
9, -1.35492, 1, 0, 0.499725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480048,-99) , 
0, 0.489519, 0, 0, 0.499098,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0162662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.58212, 1, 1, 0.529231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475021,-99) , 
6, -949.846, 1, 0, 0.492216,-99) , 
9, -1.5874, 0, 0, 0.509484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521367,-99) , 
NN(
0, 
0, 
-1, 3.334, 1, -1, 0.495738,-99) , 
9, -1.53524, 1, 0, 0.496984,-99) , 
7, -0.999923, 1, 0, 0.498865,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0325967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57181, 0, 1, 0.513059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384911,-99) , 
7, 0.716067, 1, 0, 0.468064,-99) , 
6, -0.9081, 0, 0, 0.502823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493604,-99) , 
8, 1.25853, 0, 0, 0.496536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454166,-99) , 
7, -1.57134, 0, 0, 0.49377,-99) , 
6, -949.398, 0, 0, 0.498228,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.00937154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.090666, 0, 1, 0.514014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487466,-99) , 
0, 0.501491, 1, 0, 0.499562,-99) , 
0, 0.503804, 0, 0, 0.501102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484762,-99) , 
2, 0.214121, 1, 0, 0.500282,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0299671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499292,-99) , 
9, 1.64567, 1, 0, 0.530005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42425,-99) , 
6, -0.351649, 0, 0, 0.511254,-99) , 
6, -951.286, 1, 0, 0.521306,-99) , 
NN(
NN(
0, 
0, 
-1, -0.755055, 1, 1, 0.509075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491757,-99) , 
0, 0.499995, 0, 0, 0.496027,-99) , 
9, 0.406145, 0, 0, 0.499673,-99) , 
7, 1.28574, 0, 0, 0.503145,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.015774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490091,-99) , 
7, 1.85716, 1, 0, 0.501832,-99) , 
2, -0.0712632, 1, 0, 0.508076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494555,-99) , 
6, -949.398, 1, 0, 0.499196,-99) , 
NN(
0, 
0, 
-1, -1.10428, 1, -1, 0.487287,-99) , 
7, -0.904703, 0, 0, 0.496617,-99) , 
7, 1.00002, 0, 0, 0.499211,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.00514531);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499461,-99) , 
4, 0.999048, 1, 0, 0.500148,-99) , 
NN(
0, 
0, 
-1, 0.489247, 0, -1, 0.485616,-99) , 
0, 0.490471, 0, 0, 0.499377,-99) , 
7, 2.14286, 0, 0, 0.50017,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.00841037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499678,-99) , 
3, 0.794023, 1, 0, 0.50221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473171,-99) , 
3, 7.32299, 1, 0, 0.501212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47423,-99) , 
3, 9.02099, 1, 0, 0.500441,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0106543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497526,-99) , 
0, 0.497047, 0, 0, 0.509037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498891,-99) , 
2, 0.211277, 0, 0, 0.499985,-99) , 
3, 4.61402, 0, 0, 0.501699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48312,-99) , 
0, 0.505346, 1, 0, 0.499172,-99) , 
NN(
0, 
0, 
-1, -2.83069, 1, -1, 0.483146,-99) , 
9, -0.15686, 0, 0, 0.492112,-99) , 
0, 0.502852, 1, 0, 0.500245,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0130076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489262,-99) , 
7, 2.29252, 1, 0, 0.52206,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499405, 0, 1, 0.50397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493216,-99) , 
8, -2.86475, 1, 0, 0.496417,-99) , 
0, 0.499995, 1, 0, 0.501393,-99) , 
7, 1.85714, 0, 0, 0.502827,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00769046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142646, 1, 1, 0.520537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49923,-99) , 
2, -0.132694, 1, 0, 0.500234,-99) , 
0, 0.504757, 0, 0, 0.501724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481304,-99) , 
2, -0.214327, 0, 0, 0.500716,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.016851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495723,-99) , 
7, -0.306091, 0, 0, 0.505428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491762,-99) , 
8, -1.98821, 0, 0, 0.496214,-99) , 
6, -946.347, 1, 0, 0.50093,-99) , 
7, 2.14286, 0, 0, 0.501939,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0163711);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486765,-99) , 
7, -1.69381, 0, 0, 0.505765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490922,-99) , 
6, -951.286, 1, 0, 0.499632,-99) , 
7, 0.428587, 1, 0, 0.503339,-99) , 
NN(
0, 
0, 
-1, 0.489247, 1, -1, 0.490113,-99) , 
0, 0.491424, 0, 0, 0.502297,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.010227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481308,-99) , 
2, -0.214261, 0, 0, 0.502161,-99) , 
4, 0.998572, 1, 0, 0.503186,-99) , 
NN(
0, 
0, 
-1, 0.275803, 0, -1, 0.489923,-99) , 
0, 0.491424, 0, 0, 0.502133,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0113527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490789, 0, 1, 0.515986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498048,-99) , 
0, 0.506163, 0, 0, 0.499046,-99) , 
0, 0.492376, 1, 0, 0.500838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468831,-99) , 
8, -2.9699, 1, 0, 0.484321,-99) , 
4, 0.999524, 0, 0, 0.49962,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0164088);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.518486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495919,-99) , 
9, -0.873026, 0, 0, 0.503375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491062,-99) , 
8, -2.09552, 1, 0, 0.496368,-99) , 
7, 0.00683924, 1, 0, 0.499783,-99) , 
7, 1.85714, 0, 0, 0.501094,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0167155);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491782,-99) , 
3, 8.69643, 1, 0, 0.511991,-99) , 
NN(
0, 
0, 
-1, 0.2158, 0, 1, 0.504766,-99) , 
3, 4.49361, 0, 0, 0.506256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460381,-99) , 
8, -1.39967, 1, 0, 0.478033,-99) , 
8, -0.51703, 0, 0, 0.490064,-99) , 
7, 1.57133, 1, 0, 0.504585,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_6_8_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_6_8_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_6_8_noPCts *ReadBDT_maker_LHC19c2a_6_8_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_6_8_noPCts(theInpVar);
  }
}
