#include "LHC19c2b_TMVAClassification_BDT_2_4_noNsigma.class.h"

double ReadBDT_LHC19c2b_2_4_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_2_4_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.229996699231294);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999905, 0, 1, 0.706815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426239,-99) , 
4, 0.999955, 0, 0, 0.481473,-99) , 
NN(
0, 
0, 
-1, 0.99771, 0, -1, 0.203355,-99) , 
4, 0.999524, 0, 0, 0.432914,-99) , 
5, -0.458352, 1, 0, 0.500069,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.177518);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237977, 1, 1, 0.718194,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.4414,-99) , 
5, -0.550372, 1, 0, 0.492111,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.18292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.640658, 1, 1, 0.68745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426575,-99) , 
0, 0.5019, 1, 0, 0.497403,-99) , 
5, -0.461037, 1, 0, 0.547543,-99) , 
NN(
0, 
0, 
-1, 0.998163, 0, -1, 0.247294,-99) , 
4, 0.999524, 0, 0, 0.506372,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.146007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.693093,-99) , 
NN(
0, 
0, 
-1, 0.0237852, 1, -1, 0.483101,-99) , 
5, -0.550826, 1, 0, 0.52361,-99) , 
NN(
0, 
0, 
-1, 4.69972, 1, -1, 0.207879,-99) , 
4, 0.999048, 0, 0, 0.49534,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.204752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477416,-99) , 
6, 0.00680039, 0, 0, 0.546492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.11716,-99) , 
6, 0.0476027, 1, 0, 0.534329,-99) , 
NN(
0, 
0, 
-1, 4.72486, 1, -1, 0.220027,-99) , 
4, 0.999048, 0, 0, 0.506505,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.150539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 0, 1, 0.652356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427087,-99) , 
4, 0.999773, 0, 0, 0.503423,-99) , 
5, -0.458387, 1, 0, 0.541173,-99) , 
NN(
0, 
0, 
-1, 4.74718, 1, -1, 0.236499,-99) , 
4, 0.999048, 0, 0, 0.514927,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.130738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.640672, 1, 1, 0.538582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.118679,-99) , 
6, 0.0476135, 1, 0, 0.526652,-99) , 
NN(
0, 
0, 
-1, 4.68452, 1, -1, 0.256988,-99) , 
4, 0.999048, 0, 0, 0.50355,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.136322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.691432, 1, 1, 0.646373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451855,-99) , 
4, 0.999905, 0, 0, 0.616494,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.451636,-99) , 
5, -0.46006, 1, 0, 0.490162,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.176911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459202,-99) , 
6, 0.00453209, 0, 0, 0.529822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.134274,-99) , 
6, 0.047595, 1, 0, 0.518896,-99) , 
NN(
0, 
0, 
-1, 0.996939, 0, -1, 0.239836,-99) , 
4, 0.998571, 0, 0, 0.50174,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.104878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499996, 1, 1, 0.659555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251572,-99) , 
6, 0.0237853, 1, 0, 0.499501,-99) , 
5, -0.641053, 1, 0, 0.520224,-99) , 
NN(
0, 
0, 
-1, 4.68452, 1, -1, 0.28995,-99) , 
4, 0.999048, 0, 0, 0.501264,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.093094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.760158, 1, 1, 0.674297,-99) , 
NN(
0, 
0, 
-1, 0.998095, 0, -1, 0.480203,-99) , 
5, -0.640274, 1, 0, 0.502592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.12792,-99) , 
6, 0.0476027, 1, 0, 0.492741,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0827899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.640016, 1, 1, 0.521902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242026,-99) , 
4, 0.998095, 0, 0, 0.509181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.13598,-99) , 
6, 0.0475568, 1, 0, 0.499418,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.095336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.640672, 1, 1, 0.523552,-99) , 
NN(
0, 
0, 
-1, 4.82095, 1, -1, 0.351317,-99) , 
4, 0.999524, 0, 0, 0.501772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.145101,-99) , 
6, 0.0476134, 1, 0, 0.492561,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0895371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.760698, 1, 1, 0.615199,-99) , 
NN(
0, 
0, 
-1, 0.0238067, 1, -1, 0.477484,-99) , 
5, -0.641053, 1, 0, 0.494709,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.28594,-99) , 
4, 0.998571, 0, 0, 0.482481,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.100714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.372256, 1, 1, 0.590348,-99) , 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.47254,-99) , 
6, 0.00905639, 0, 0, 0.500861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.157884,-99) , 
6, 0.0475462, 1, 0, 0.492149,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.088692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454163,-99) , 
4, 0.999905, 0, 0, 0.564915,-99) , 
NN(
0, 
0, 
-1, 9.33836, 1, -1, 0.482803,-99) , 
5, -0.371278, 1, 0, 0.507938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.248198,-99) , 
4, 0.997619, 0, 0, 0.49847,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.115993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472273,-99) , 
6, 0.00340067, 0, 0, 0.523977,-99) , 
NN(
0, 
0, 
-1, -0.55744, 1, -1, 0.358545,-99) , 
6, 0.0238067, 1, 0, 0.514374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251327,-99) , 
4, 0.997619, 0, 0, 0.50495,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0673243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0101987, 0, 1, 0.520231,-99) , 
NN(
0, 
0, 
-1, -0.556451, 1, -1, 0.372067,-99) , 
6, 0.0237975, 1, 0, 0.511692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.238293,-99) , 
4, 0.997143, 0, 0, 0.503356,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.052257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.810851, 1, 1, 0.591942,-99) , 
NN(
0, 
0, 
-1, 0.0237918, 1, -1, 0.49083,-99) , 
5, -0.638917, 1, 0, 0.503214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253508,-99) , 
4, 0.997143, 0, 0, 0.495743,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0605911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0101964, 0, 1, 0.516961,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.386783,-99) , 
6, 0.0237918, 1, 0, 0.509451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292983,-99) , 
4, 0.998095, 0, 0, 0.500365,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0546065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.610029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321607,-99) , 
6, 0.0237975, 1, 0, 0.495432,-99) , 
5, -0.72914, 1, 0, 0.504226,-99) , 
NN(
0, 
0, 
-1, 0.0799719, 1, -1, 0.318634,-99) , 
3, 9.44308, 1, 0, 0.494016,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0623433);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496751,-99) , 
5, -0.640681, 1, 0, 0.509425,-99) , 
NN(
0, 
0, 
-1, 4.65879, 1, -1, 0.437285,-99) , 
4, 0.999841, 0, 0, 0.494035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245476,-99) , 
4, 0.996667, 0, 0, 0.48761,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0628498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495089,-99) , 
6, 0.0102006, 0, 0, 0.51054,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.395113,-99) , 
6, 0.0238014, 1, 0, 0.504036,-99) , 
NN(
0, 
0, 
-1, 0.0799478, 1, -1, 0.33154,-99) , 
3, 9.4861, 1, 0, 0.494703,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0760474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.464517, 1, 1, 0.524536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420151,-99) , 
5, 0.167108, 0, 0, 0.461378,-99) , 
4, 0.999887, 0, 0, 0.508679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273026,-99) , 
4, 0.997619, 0, 0, 0.500717,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0613408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494525,-99) , 
6, 0.00906545, 0, 0, 0.509039,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.392514,-99) , 
6, 0.0237975, 1, 0, 0.502442,-99) , 
NN(
0, 
0, 
-1, 0.0733017, 1, -1, 0.336087,-99) , 
3, 9.34175, 1, 0, 0.49315,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0545375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498095, 1, 1, 0.594608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343428,-99) , 
6, 0.0237852, 1, 0, 0.500285,-99) , 
5, -0.730254, 1, 0, 0.507418,-99) , 
NN(
0, 
0, 
-1, 0.0814941, 1, -1, 0.336698,-99) , 
3, 9.5109, 1, 0, 0.49834,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0607561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495836,-99) , 
5, -0.460094, 1, 0, 0.512173,-99) , 
NN(
0, 
0, 
-1, 4.57207, 1, -1, 0.454478,-99) , 
4, 0.999864, 0, 0, 0.499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272083,-99) , 
4, 0.997143, 0, 0, 0.492486,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0592202);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408902,-99) , 
3, 9.11225, 1, 0, 0.509859,-99) , 
NN(
0, 
0, 
-1, -0.556694, 1, -1, 0.400426,-99) , 
6, 0.0237918, 1, 0, 0.503661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284797,-99) , 
4, 0.997143, 0, 0, 0.497389,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0393002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.575281,-99) , 
NN(
0, 
0, 
-1, 0.0237918, 1, -1, 0.490904,-99) , 
5, -0.729182, 1, 0, 0.49734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29239,-99) , 
4, 0.997143, 0, 0, 0.491519,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0595892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492276,-99) , 
6, 0.00566771, 0, 0, 0.510422,-99) , 
NN(
0, 
0, 
-1, 0.498093, 1, -1, 0.421191,-99) , 
6, 0.0238067, 1, 0, 0.505332,-99) , 
NN(
0, 
0, 
-1, 0.438659, 0, -1, 0.350132,-99) , 
4, 0.998572, 0, 0, 0.496883,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0679738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476676,-99) , 
4, 0.999864, 0, 0, 0.519244,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.472484,-99) , 
0, 0.499995, 1, 0, 0.504505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29297,-99) , 
4, 0.997143, 0, 0, 0.498542,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.042185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499738,-99) , 
5, 0.347249, 0, 0, 0.510277,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.417766,-99) , 
6, 0.0237918, 1, 0, 0.505104,-99) , 
NN(
0, 
0, 
-1, 0.0739507, 1, -1, 0.365035,-99) , 
3, 9.46967, 1, 0, 0.49768,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0635239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478416,-99) , 
6, 0.00226731, 0, 0, 0.51293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339642,-99) , 
5, -0.556457, 1, 0, 0.422334,-99) , 
6, 0.0238067, 1, 0, 0.507823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31514,-99) , 
4, 0.997143, 0, 0, 0.502388,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0489235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425449,-99) , 
6, 0.0237975, 1, 0, 0.507556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409698,-99) , 
3, 9.34175, 1, 0, 0.502718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307243,-99) , 
4, 0.997143, 0, 0, 0.497217,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0386627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.671776, 0, 1, 0.551598,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49271,-99) , 
5, 0.436617, 0, 0, 0.500129,-99) , 
NN(
0, 
0, 
-1, 0.0780627, 1, -1, 0.36913,-99) , 
3, 9.29639, 1, 0, 0.492969,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0294281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819399, 1, 1, 0.571439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389443,-99) , 
6, 0.0237852, 1, 0, 0.49557,-99) , 
5, -0.729131, 1, 0, 0.501386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307243,-99) , 
4, 0.997143, 0, 0, 0.496108,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0530659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494516,-99) , 
4, 0.999994, 0, 0, 0.510662,-99) , 
NN(
0, 
0, 
-1, 4.67798, 1, -1, 0.464689,-99) , 
4, 0.999864, 0, 0, 0.500169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315127,-99) , 
4, 0.997143, 0, 0, 0.495082,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0322893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.82035, 1, 1, 0.568974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398772,-99) , 
6, 0.0237918, 1, 0, 0.498242,-99) , 
5, -0.730535, 1, 0, 0.503628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315462,-99) , 
4, 0.997143, 0, 0, 0.498466,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0331697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819367, 1, 1, 0.56872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393969,-99) , 
6, 0.0237852, 1, 0, 0.497272,-99) , 
5, -0.729102, 1, 0, 0.502651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37117,-99) , 
3, 9.4861, 1, 0, 0.495879,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0377392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.557749,-99) , 
NN(
0, 
0, 
-1, 0.0237852, 1, -1, 0.489165,-99) , 
5, -0.729131, 1, 0, 0.49442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324253,-99) , 
4, 0.997143, 0, 0, 0.489747,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0465007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.368089, 1, 1, 0.514113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473412,-99) , 
5, 0.255938, 0, 0, 0.481006,-99) , 
0, 0.499043, 1, 0, 0.500625,-99) , 
NN(
0, 
0, 
-1, 0.996939, 0, -1, 0.386042,-99) , 
4, 0.998571, 0, 0, 0.494489,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0315746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.820517, 1, 1, 0.55406,-99) , 
NN(
0, 
0, 
-1, 0.0237975, 1, -1, 0.493983,-99) , 
5, -0.730811, 1, 0, 0.498575,-99) , 
NN(
0, 
0, 
-1, 0.996939, 0, -1, 0.374696,-99) , 
4, 0.998571, 0, 0, 0.492047,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0550357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.558335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484227,-99) , 
5, -0.41725, 1, 0, 0.496594,-99) , 
5, 0.529691, 0, 0, 0.501683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378044,-99) , 
3, 9.45752, 1, 0, 0.495341,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0414982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449227,-99) , 
6, 0.0237975, 1, 0, 0.508675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432291,-99) , 
2, -0.214003, 0, 0, 0.504797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349421,-99) , 
4, 0.997143, 0, 0, 0.500551,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0293661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497077,-99) , 
6, 0.011323, 0, 0, 0.502564,-99) , 
NN(
0, 
0, 
-1, 0.0237826, 1, -1, 0.43595,-99) , 
6, 0.0237785, 1, 0, 0.498878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340788,-99) , 
4, 0.997143, 0, 0, 0.494679,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0304639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.682175, 0, 1, 0.537326,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.495299,-99) , 
5, 0.348322, 0, 0, 0.502568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394871,-99) , 
3, 9.50017, 1, 0, 0.497021,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0311213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497998,-99) , 
5, 0.173498, 0, 0, 0.50621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440331,-99) , 
3, 9.26643, 1, 0, 0.502904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345347,-99) , 
4, 0.997143, 0, 0, 0.498641,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0321212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432359,-99) , 
6, 0.0237975, 1, 0, 0.503098,-99) , 
5, -0.819393, 1, 0, 0.506022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367979,-99) , 
4, 0.997619, 0, 0, 0.501646,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0435922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468802,-99) , 
6, 0.00113363, 0, 0, 0.506978,-99) , 
NN(
0, 
0, 
-1, -0.0238602, 0, -1, 0.448953,-99) , 
6, 0.0238067, 1, 0, 0.503824,-99) , 
NN(
0, 
0, 
-1, -0.0130271, 1, -1, 0.396797,-99) , 
3, 9.21402, 1, 0, 0.497952,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0495408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471319,-99) , 
4, 0.999955, 0, 0, 0.522458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47764,-99) , 
5, -0.0119709, 0, 0, 0.492571,-99) , 
5, -0.371208, 1, 0, 0.501852,-99) , 
NN(
0, 
0, 
-1, 0.437662, 0, -1, 0.413695,-99) , 
4, 0.999048, 0, 0, 0.495333,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0344552);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498223,-99) , 
5, -0.371226, 1, 0, 0.507208,-99) , 
NN(
0, 
0, 
-1, 0.99966, 0, -1, 0.477314,-99) , 
0, 0.500947, 1, 0, 0.50023,-99) , 
NN(
0, 
0, 
-1, 0.996939, 0, -1, 0.401502,-99) , 
4, 0.998572, 0, 0, 0.495061,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0198995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819377, 1, 1, 0.503721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446341,-99) , 
2, -0.214463, 0, 0, 0.500807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354229,-99) , 
4, 0.997143, 0, 0, 0.496928,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0542699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.26607, 0, 1, 0.517267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474452,-99) , 
5, 0.0778183, 0, 0, 0.486797,-99) , 
4, 0.999977, 0, 0, 0.502628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449621,-99) , 
5, 0.345697, 0, 0, 0.493901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265353,-99) , 
3, 4.66297, 1, 0, 0.438633,-99) , 
4, 0.999524, 0, 0, 0.494955,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0324092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.5457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492186,-99) , 
5, 0.61968, 0, 0, 0.494781,-99) , 
3, 0.56586, 1, 0, 0.497976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402675,-99) , 
3, 9.50017, 1, 0, 0.493156,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0430229);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468159,-99) , 
6, 0.0237746, 1, 0, 0.51483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484466,-99) , 
2, 0.0753029, 0, 0, 0.489514,-99) , 
0, 0.49809, 1, 0, 0.502161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396714,-99) , 
3, 9.5109, 1, 0, 0.496924,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0354555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497131,-99) , 
4, 0.999994, 0, 0, 0.507138,-99) , 
NN(
0, 
0, 
-1, 4.62185, 1, -1, 0.474503,-99) , 
4, 0.999864, 0, 0, 0.499756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355211,-99) , 
4, 0.997143, 0, 0, 0.495975,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0244802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438093,-99) , 
6, 0.0237975, 1, 0, 0.500141,-99) , 
5, -0.819972, 1, 0, 0.502564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411659,-99) , 
4, 0.998571, 0, 0, 0.497859,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0181143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562342,-99) , 
NN(
0, 
0, 
-1, 0.0237781, 1, -1, 0.496477,-99) , 
5, -0.819447, 1, 0, 0.498889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385189,-99) , 
4, 0.997619, 0, 0, 0.495369,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0264146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.434342, 1, 1, 0.54782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496333,-99) , 
5, 0.529748, 0, 0, 0.499755,-99) , 
3, 0.560258, 1, 0, 0.502729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409292,-99) , 
3, 9.3748, 1, 0, 0.497926,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0200927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.807654, 1, 1, 0.543838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446571,-99) , 
6, 0.0237975, 1, 0, 0.499833,-99) , 
5, -0.730722, 1, 0, 0.503132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382849,-99) , 
4, 0.997143, 0, 0, 0.499932,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0332645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496039,-99) , 
4, 0.999987, 0, 0, 0.506711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38255,-99) , 
3, 4.63705, 1, 0, 0.475073,-99) , 
4, 0.999728, 0, 0, 0.502093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371251,-99) , 
4, 0.997143, 0, 0, 0.498713,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0278889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495467,-99) , 
5, 0.242246, 0, 0, 0.501494,-99) , 
5, -0.819447, 1, 0, 0.503466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412149,-99) , 
3, 9.51561, 1, 0, 0.498917,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0290486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0675177, 0, 1, 0.508658,-99) , 
NN(
0, 
0, 
-1, 4.69279, 1, -1, 0.471109,-99) , 
4, 0.999728, 0, 0, 0.50319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376366,-99) , 
4, 0.997143, 0, 0, 0.49989,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0170432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.806557, 1, 1, 0.538075,-99) , 
NN(
0, 
0, 
-1, 0.0238067, 1, -1, 0.497107,-99) , 
5, -0.729182, 1, 0, 0.500246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380934,-99) , 
4, 0.997143, 0, 0, 0.497162,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0255178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999523, 0, 1, 0.526307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496518,-99) , 
3, 0.56421, 1, 0, 0.499465,-99) , 
2, 0.0712636, 0, 0, 0.503324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41432,-99) , 
3, 9.45752, 1, 0, 0.498807,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0257278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.249267, 0, 1, 0.52528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497834,-99) , 
2, 0.0720518, 0, 0, 0.501862,-99) , 
3, 0.993066, 1, 0, 0.506417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420306,-99) , 
3, 9.44308, 1, 0, 0.502077,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0306488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.75067, 0, 1, 0.509969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385543,-99) , 
3, 4.56525, 1, 0, 0.478632,-99) , 
4, 0.999728, 0, 0, 0.505382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394843,-99) , 
4, 0.997143, 0, 0, 0.502488,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0218095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453129,-99) , 
4, 0.998571, 0, 0, 0.501965,-99) , 
5, 0.617979, 0, 0, 0.504096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427486,-99) , 
3, 9.36036, 1, 0, 0.500139,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0285249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496213,-99) , 
5, -0.280104, 1, 0, 0.504475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408238,-99) , 
5, 0.0797393, 0, 0, 0.464312,-99) , 
4, 0.999456, 0, 0, 0.501079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38421,-99) , 
4, 0.997143, 0, 0, 0.498078,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0161259);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499966,-99) , 
3, 0.575613, 1, 0, 0.502484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458307,-99) , 
0, 0.504757, 1, 0, 0.500291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424869,-99) , 
3, 9.46788, 1, 0, 0.496477,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0208727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496748,-99) , 
5, -0.768556, 1, 0, 0.498863,-99) , 
5, 0.619678, 0, 0, 0.501118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424536,-99) , 
3, 9.38746, 1, 0, 0.497207,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0286312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.615814, 0, 1, 0.509248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461208,-99) , 
3, 3.71853, 0, 0, 0.477415,-99) , 
0, 0.502852, 1, 0, 0.505535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427533,-99) , 
3, 9.52444, 1, 0, 0.501692,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0189533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466141,-99) , 
4, 0.999048, 0, 0, 0.500655,-99) , 
5, 0.617965, 0, 0, 0.502568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430914,-99) , 
3, 9.4861, 1, 0, 0.498972,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0259808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496875,-99) , 
3, 4.7512, 0, 0, 0.502211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421999,-99) , 
5, 0.0773575, 0, 0, 0.472566,-99) , 
4, 0.999592, 0, 0, 0.498999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393339,-99) , 
4, 0.997143, 0, 0, 0.496307,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0257829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0725326, 0, 1, 0.507592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383741,-99) , 
3, 4.67798, 1, 0, 0.475424,-99) , 
4, 0.999728, 0, 0, 0.502877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388788,-99) , 
4, 0.997143, 0, 0, 0.499962,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0268236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459997,-99) , 
6, 0.0238067, 1, 0, 0.499359,-99) , 
5, -0.819962, 1, 0, 0.501135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459635,-99) , 
5, 0.257074, 0, 0, 0.49768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297677,-99) , 
3, 4.78815, 1, 0, 0.452564,-99) , 
4, 0.999524, 0, 0, 0.495392,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0247747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495885,-99) , 
2, 0.0720248, 0, 0, 0.499464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460836,-99) , 
0, 0.504757, 1, 0, 0.497554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345821,-99) , 
5, -0.00991732, 1, 0, 0.43473,-99) , 
3, 9.36036, 1, 0, 0.494325,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0191525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498739,-99) , 
5, -0.729994, 1, 0, 0.501321,-99) , 
NN(
0, 
0, 
-1, 4.62185, 1, -1, 0.472365,-99) , 
4, 0.999728, 0, 0, 0.49712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395825,-99) , 
4, 0.997143, 0, 0, 0.494553,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0211093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497745,-99) , 
6, 0.0124672, 0, 0, 0.502031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420536,-99) , 
5, -0.556694, 1, 0, 0.466968,-99) , 
6, 0.0238014, 1, 0, 0.500083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424261,-99) , 
4, 0.998095, 0, 0, 0.497257,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0180452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0113363, 0, 1, 0.504738,-99) , 
NN(
0, 
0, 
-1, 0.498093, 1, -1, 0.468311,-99) , 
6, 0.0238067, 1, 0, 0.502756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436708,-99) , 
3, 9.50054, 1, 0, 0.499496,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0236514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.506366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412238,-99) , 
3, 4.69279, 1, 0, 0.481739,-99) , 
4, 0.999864, 0, 0, 0.500787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398897,-99) , 
4, 0.997143, 0, 0, 0.498202,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0176993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498575,-99) , 
3, 9.17389, 0, 0, 0.500836,-99) , 
NN(
0, 
0, 
-1, 4.67798, 1, -1, 0.475402,-99) , 
4, 0.999728, 0, 0, 0.497157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404499,-99) , 
4, 0.997143, 0, 0, 0.494805,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0209763);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485971,-99) , 
4, 0.999819, 0, 0, 0.501531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464436,-99) , 
0, 0.504757, 1, 0, 0.4997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420923,-99) , 
4, 0.998095, 0, 0, 0.496791,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.020653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.520457,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494395,-99) , 
5, 0.438194, 0, 0, 0.497641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43372,-99) , 
3, 9.4861, 1, 0, 0.494522,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0232182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.579554, 1, 1, 0.507865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486132,-99) , 
3, 3.70422, 0, 0, 0.491354,-99) , 
0, 0.499043, 1, 0, 0.501202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438804,-99) , 
3, 9.5109, 1, 0, 0.498184,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0146401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819494, 1, 1, 0.502293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437818,-99) , 
5, 0.354501, 0, 0, 0.466805,-99) , 
4, 0.99932, 0, 0, 0.499847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409381,-99) , 
4, 0.997143, 0, 0, 0.497563,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0248604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493371,-99) , 
3, 0.543505, 1, 0, 0.495456,-99) , 
5, 0.624805, 0, 0, 0.497559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431379,-99) , 
3, 9.34175, 1, 0, 0.494212,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.025862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475678,-99) , 
6, 0.00113364, 0, 0, 0.502762,-99) , 
NN(
0, 
0, 
-1, 0.0237053, 1, -1, 0.466462,-99) , 
6, 0.0238067, 1, 0, 0.500792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438321,-99) , 
3, 9.4861, 1, 0, 0.497748,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0224631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493811,-99) , 
2, 0.071708, 0, 0, 0.496742,-99) , 
3, 0.550378, 1, 0, 0.498601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434299,-99) , 
3, 9.4861, 1, 0, 0.495504,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0342483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499664,-99) , 
3, 4.70173, 0, 0, 0.509768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484934,-99) , 
5, -0.00994177, 0, 0, 0.493637,-99) , 
4, 0.999977, 0, 0, 0.502029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471352,-99) , 
5, 0.345079, 0, 0, 0.503519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310759,-99) , 
3, 4.83939, 1, 0, 0.461654,-99) , 
4, 0.999524, 0, 0, 0.497303,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0222626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.506126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441912,-99) , 
3, 4.60283, 1, 0, 0.488609,-99) , 
4, 0.999909, 0, 0, 0.501285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426549,-99) , 
4, 0.998095, 0, 0, 0.498552,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0276634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492754,-99) , 
4, 0.999984, 0, 0, 0.502523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399873,-99) , 
3, 4.54129, 1, 0, 0.479396,-99) , 
4, 0.99966, 0, 0, 0.499753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419192,-99) , 
4, 0.997619, 0, 0, 0.497364,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0183481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.503431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456299,-99) , 
5, 0.264059, 0, 0, 0.476428,-99) , 
4, 0.999683, 0, 0, 0.501106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414419,-99) , 
5, 0.438718, 0, 0, 0.453312,-99) , 
4, 0.999048, 0, 0, 0.497688,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0192274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495224,-99) , 
5, -0.729116, 1, 0, 0.496923,-99) , 
3, 0.544386, 1, 0, 0.498581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439613,-99) , 
3, 9.36036, 1, 0, 0.495619,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0144101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.517721,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497433,-99) , 
5, 0.444276, 0, 0, 0.499913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437691,-99) , 
3, 9.50054, 1, 0, 0.496921,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0133028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499727,-99) , 
2, -0.0711075, 1, 0, 0.502357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459076,-99) , 
0, 0.505709, 1, 0, 0.501164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440329,-99) , 
3, 9.35582, 1, 0, 0.498133,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0168158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.3738, 0, 1, 0.50434,-99) , 
NN(
0, 
0, 
-1, 4.55726, 1, -1, 0.479697,-99) , 
4, 0.999728, 0, 0, 0.500787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423399,-99) , 
4, 0.997143, 0, 0, 0.498834,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0126817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477807,-99) , 
0, 0.490879, 0, 0, 0.501495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471455,-99) , 
0, 0.504757, 1, 0, 0.499995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430411,-99) , 
4, 0.997143, 0, 0, 0.498215,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0169439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498358,-99) , 
6, 0.0124692, 0, 0, 0.502,-99) , 
NN(
0, 
0, 
-1, 0.0237479, 1, -1, 0.475434,-99) , 
6, 0.0238067, 1, 0, 0.500551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442665,-99) , 
3, 9.4861, 1, 0, 0.497764,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.015012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.23701, 0, 1, 0.503484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452907,-99) , 
5, -0.0123806, 0, 0, 0.484838,-99) , 
4, 0.999637, 0, 0, 0.501495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435519,-99) , 
4, 0.998095, 0, 0, 0.499121,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0145512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.514509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452523,-99) , 
4, 0.999048, 0, 0, 0.49873,-99) , 
5, 0.259765, 0, 0, 0.502278,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.449276,-99) , 
3, 9.29639, 1, 0, 0.499584,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0181056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497378,-99) , 
3, 9.32298, 0, 0, 0.49948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460415,-99) , 
5, 0.256859, 0, 0, 0.479636,-99) , 
4, 0.99966, 0, 0, 0.49713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423621,-99) , 
4, 0.997619, 0, 0, 0.494989,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0200615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489975,-99) , 
0, 0.499995, 1, 0, 0.50862,-99) , 
NN(
0, 
0, 
-1, 0.0237918, 1, -1, 0.494907,-99) , 
3, 1.4378, 1, 0, 0.499361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44981,-99) , 
3, 9.44308, 1, 0, 0.496942,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0190122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497069,-99) , 
5, 0.318352, 0, 0, 0.500437,-99) , 
5, -0.820206, 1, 0, 0.501585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386778,-99) , 
5, -0.00960681, 1, 0, 0.457026,-99) , 
3, 9.26643, 1, 0, 0.499273,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0235238);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479023,-99) , 
4, 0.999728, 0, 0, 0.509668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493368,-99) , 
2, -0.0711775, 1, 0, 0.497044,-99) , 
5, -0.27782, 1, 0, 0.501879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442875,-99) , 
4, 0.998095, 0, 0, 0.499749,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0173337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497708,-99) , 
6, 0.0101987, 0, 0, 0.501986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445525,-99) , 
5, -0.556694, 1, 0, 0.475982,-99) , 
6, 0.0237975, 1, 0, 0.500552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447363,-99) , 
4, 0.998095, 0, 0, 0.49862,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0166163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0135985, 0, 1, 0.505294,-99) , 
NN(
0, 
0, 
-1, 0.0239888, 1, -1, 0.47346,-99) , 
6, 0.0237975, 1, 0, 0.503565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455617,-99) , 
3, 9.45752, 1, 0, 0.501215,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0210588);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49399,-99) , 
3, 5.86053, 1, 0, 0.51923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497197,-99) , 
3, 0.983366, 1, 0, 0.500154,-99) , 
2, 0.0704145, 0, 0, 0.502943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382219,-99) , 
5, -0.0120152, 1, 0, 0.456977,-99) , 
3, 9.34175, 1, 0, 0.500629,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0163482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32349, 0, 1, 0.504344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463259,-99) , 
5, 0.0846118, 0, 0, 0.485283,-99) , 
4, 0.999637, 0, 0, 0.502307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431682,-99) , 
4, 0.998095, 0, 0, 0.499807,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0135512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461759,-99) , 
0, 0.505709, 1, 0, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450662,-99) , 
3, 9.50017, 1, 0, 0.500046,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0117542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498394,-99) , 
3, 0.550379, 1, 0, 0.499891,-99) , 
2, 0.213864, 0, 0, 0.501178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458542,-99) , 
3, 9.4861, 1, 0, 0.499102,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.015707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0723915, 1, 1, 0.512426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470463,-99) , 
4, 0.999524, 0, 0, 0.499316,-99) , 
5, 0.167721, 0, 0, 0.503045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452482,-99) , 
3, 9.44308, 1, 0, 0.500595,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0163358);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496232,-99) , 
0, 0.497002, 1, 0, 0.50036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458675,-99) , 
0, 0.490472, 0, 0, 0.49901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429603,-99) , 
4, 0.997619, 0, 0, 0.497036,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0176836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.345333, 0, 1, 0.514782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49541,-99) , 
2, -0.0781242, 1, 0, 0.498265,-99) , 
2, 0.0715136, 0, 0, 0.500647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45905,-99) , 
3, 9.45715, 1, 0, 0.498605,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0131046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49531,-99) , 
4, 0.999524, 1, 0, 0.522709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481613,-99) , 
0, 0.503805, 1, 0, 0.499512,-99) , 
5, 0.526873, 0, 0, 0.50149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456723,-99) , 
3, 9.50054, 1, 0, 0.499351,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0180061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483966,-99) , 
6, 0.00113366, 0, 0, 0.502306,-99) , 
NN(
0, 
0, 
-1, 0.0237053, 1, -1, 0.474305,-99) , 
6, 0.0238067, 1, 0, 0.500776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450819,-99) , 
4, 0.998095, 0, 0, 0.498976,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.00964941);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.495175,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0150246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494816,-99) , 
5, 0.00266053, 0, 0, 0.498032,-99) , 
5, 0.619671, 0, 0, 0.499499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45758,-99) , 
3, 9.3748, 1, 0, 0.497427,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0122517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487134,-99) , 
6, 0.0238014, 1, 0, 0.502187,-99) , 
NN(
0, 
0, 
-1, 0.505748, 1, -1, 0.477647,-99) , 
0, 0.504349, 1, 0, 0.500588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457909,-99) , 
0, 0.490471, 0, 0, 0.499089,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0182588);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499517,-99) , 
3, 9.36885, 0, 0, 0.503845,-99) , 
NN(
0, 
0, 
-1, 4.64026, 1, -1, 0.48756,-99) , 
4, 0.999932, 0, 0, 0.498784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452495,-99) , 
4, 0.998571, 0, 0, 0.496515,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0161594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499069,-99) , 
3, 9.32298, 0, 0, 0.502767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445172,-99) , 
3, 4.59552, 1, 0, 0.488825,-99) , 
4, 0.999887, 0, 0, 0.499334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450323,-99) , 
4, 0.997619, 0, 0, 0.497885,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0136772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4799,-99) , 
0, 0.491424, 0, 0, 0.501971,-99) , 
2, 0.215049, 0, 0, 0.503053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455844,-99) , 
3, 9.50054, 1, 0, 0.500811,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0211585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498787,-99) , 
2, 0.0584073, 0, 0, 0.500515,-99) , 
3, 9.36834, 0, 0, 0.502777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485578,-99) , 
5, 0.256007, 0, 0, 0.511449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345546,-99) , 
3, 4.81005, 1, 0, 0.47571,-99) , 
4, 0.999524, 0, 0, 0.499612,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.00906744);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.61566, 0, 1, 0.502789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4611,-99) , 
3, 9.4861, 1, 0, 0.500774,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0172247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.94651, 0, 1, 0.50555,-99) , 
NN(
0, 
0, 
-1, -0.0123779, 0, -1, 0.480622,-99) , 
4, 0.99966, 0, 0, 0.502607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44332,-99) , 
4, 0.997619, 0, 0, 0.500895,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0147481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499472,-99) , 
3, 9.36834, 0, 0, 0.502038,-99) , 
NN(
0, 
0, 
-1, 0.264059, 0, -1, 0.475762,-99) , 
4, 0.999683, 0, 0, 0.499776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432648,-99) , 
5, 0.438718, 0, 0, 0.460351,-99) , 
4, 0.999048, 0, 0, 0.497018,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0188818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.7121, 0, 1, 0.506483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442393,-99) , 
3, 4.69318, 1, 0, 0.487535,-99) , 
4, 0.999887, 0, 0, 0.501813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444895,-99) , 
4, 0.997619, 0, 0, 0.500156,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0168299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488942,-99) , 
4, 0.999524, 1, 0, 0.517699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496734,-99) , 
3, 0.550378, 1, 0, 0.497979,-99) , 
5, 0.534529, 0, 0, 0.49958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451282,-99) , 
3, 9.4861, 1, 0, 0.497285,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0141841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.730185, 1, 1, 0.504113,-99) , 
NN(
0, 
0, 
-1, 0.505411, 1, -1, 0.484888,-99) , 
0, 0.502988, 1, 0, 0.501834,-99) , 
NN(
0, 
0, 
-1, -0.103204, 1, -1, 0.463465,-99) , 
0, 0.491424, 0, 0, 0.499769,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0141541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32298, 0, 1, 0.503453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460111,-99) , 
3, 4.62545, 1, 0, 0.491348,-99) , 
4, 0.999909, 0, 0, 0.500119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441325,-99) , 
4, 0.998095, 0, 0, 0.498056,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0111056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527254,-99) , 
NN(
0, 
0, 
-1, 7.67874, 1, -1, 0.497193,-99) , 
5, 0.619718, 0, 0, 0.498659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463932,-99) , 
3, 9.45752, 1, 0, 0.496978,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0112209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49795,-99) , 
2, 0.225998, 0, 0, 0.498801,-99) , 
4, 0.998571, 1, 0, 0.499886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456654,-99) , 
3, 9.35619, 1, 0, 0.497775,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0194588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36885, 0, 1, 0.506639,-99) , 
NN(
0, 
0, 
-1, 4.65652, 1, -1, 0.488235,-99) , 
4, 0.999932, 0, 0, 0.500904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461359,-99) , 
4, 0.998572, 0, 0, 0.498964,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0181239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483518,-99) , 
5, 0.435922, 0, 0, 0.519231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49536,-99) , 
2, 0.0270089, 0, 0, 0.498174,-99) , 
4, 0.999048, 1, 0, 0.499595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46136,-99) , 
3, 9.45715, 1, 0, 0.497763,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0115174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.503303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47947,-99) , 
4, 0.999388, 0, 0, 0.502091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463615,-99) , 
4, 0.998572, 0, 0, 0.500204,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0155819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.348424, 0, 1, 0.517144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497305,-99) , 
2, 0.153317, 0, 0, 0.499004,-99) , 
2, -0.0711075, 1, 0, 0.501806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456893,-99) , 
3, 9.34175, 1, 0, 0.499611,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0146582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492956,-99) , 
5, 0.437327, 0, 0, 0.527494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497123,-99) , 
5, -0.28217, 1, 0, 0.500334,-99) , 
4, 0.999048, 1, 0, 0.502184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46694,-99) , 
3, 9.4861, 1, 0, 0.500501,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0118901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.510918,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.498072,-99) , 
5, 0.169769, 0, 0, 0.501693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4655,-99) , 
3, 9.36036, 1, 0, 0.499906,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0121996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499599,-99) , 
3, 1.45928, 1, 0, 0.50267,-99) , 
2, -0.214134, 1, 0, 0.50418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4653,-99) , 
3, 9.50017, 1, 0, 0.502341,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0187023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.505714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449137,-99) , 
3, 4.67798, 1, 0, 0.494069,-99) , 
4, 0.999887, 0, 0, 0.502838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455947,-99) , 
4, 0.997619, 0, 0, 0.501483,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0169915);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496259,-99) , 
6, 0.00793535, 0, 0, 0.50057,-99) , 
NN(
0, 
0, 
-1, -0.0241159, 0, -1, 0.476472,-99) , 
6, 0.0238067, 1, 0, 0.499252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461859,-99) , 
3, 9.4861, 1, 0, 0.497478,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0125488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.17389, 0, 1, 0.503411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466892,-99) , 
5, -0.00690543, 0, 0, 0.491406,-99) , 
4, 0.99966, 0, 0, 0.501973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449815,-99) , 
4, 0.997619, 0, 0, 0.500495,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0120741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49812,-99) , 
2, -0.060315, 1, 0, 0.500442,-99) , 
3, 9.32119, 0, 0, 0.501749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469331,-99) , 
4, 0.998572, 0, 0, 0.500159,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0109368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498977,-99) , 
3, 3.67111, 0, 0, 0.501428,-99) , 
4, 0.998571, 1, 0, 0.50268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467974,-99) , 
3, 9.44308, 1, 0, 0.501005,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0119851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485429,-99) , 
6, 0.0238067, 1, 0, 0.501712,-99) , 
4, 0.998095, 1, 0, 0.503101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466834,-99) , 
3, 9.4861, 1, 0, 0.501396,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0173247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492385,-99) , 
6, 0.00226679, 0, 0, 0.502461,-99) , 
NN(
0, 
0, 
-1, 0.0239326, 1, -1, 0.481449,-99) , 
6, 0.0238014, 1, 0, 0.501321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459621,-99) , 
4, 0.998571, 0, 0, 0.499303,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0132825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49928,-99) , 
5, 0.436695, 0, 0, 0.527379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4975,-99) , 
0, 0.5019, 0, 0, 0.499469,-99) , 
4, 0.999048, 1, 0, 0.501367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468211,-99) , 
3, 9.2668, 1, 0, 0.499705,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0116862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478196,-99) , 
3, 7.21937, 1, 0, 0.501301,-99) , 
5, 0.6162, 0, 0, 0.502789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471374,-99) , 
3, 9.44308, 1, 0, 0.501291,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0130464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493163,-99) , 
5, 0.441787, 0, 0, 0.522272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497534,-99) , 
2, 0.0458856, 0, 0, 0.499459,-99) , 
4, 0.999048, 1, 0, 0.500989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469948,-99) , 
3, 9.5132, 1, 0, 0.499525,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0223341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491448,-99) , 
4, 0.999977, 0, 0, 0.497956,-99) , 
3, 9.36834, 0, 0, 0.500288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530599,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.46435,-99) , 
5, 0.529518, 0, 0, 0.481397,-99) , 
4, 0.999524, 0, 0, 0.498106,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0107542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.50244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466092,-99) , 
5, 0.0850846, 0, 0, 0.488652,-99) , 
4, 0.999637, 0, 0, 0.500979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464445,-99) , 
4, 0.998095, 0, 0, 0.499678,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.00782357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521958,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.498221,-99) , 
5, 0.61848, 0, 0, 0.499444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458646,-99) , 
0, 0.505709, 1, 0, 0.498287,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0104357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498057,-99) , 
2, -0.205834, 1, 0, 0.498785,-99) , 
3, 9.35619, 0, 0, 0.500148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464953,-99) , 
4, 0.998571, 0, 0, 0.498448,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.00911945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499636,-99) , 
3, 9.03573, 0, 0, 0.501621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477878,-99) , 
4, 0.99932, 0, 0, 0.500599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468191,-99) , 
4, 0.998572, 0, 0, 0.49902,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0101116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497435,-99) , 
5, 0.434802, 0, 0, 0.526649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499317,-99) , 
2, 0.0339299, 0, 0, 0.50088,-99) , 
4, 0.999048, 1, 0, 0.502617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471332,-99) , 
3, 9.35619, 1, 0, 0.501079,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.00873771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472652,-99) , 
3, 9.4861, 1, 0, 0.501763,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.00860535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.436223, 0, 1, 0.529261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499744,-99) , 
2, 0.167511, 0, 0, 0.500596,-99) , 
4, 0.999048, 1, 0, 0.502532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468809,-99) , 
3, 9.50054, 1, 0, 0.500957,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0116832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498753,-99) , 
5, 0.440271, 0, 0, 0.530663,-99) , 
NN(
0, 
0, 
-1, 1.00822, 1, 1, 0.502809,-99) , 
4, 0.999048, 1, 0, 0.504704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474094,-99) , 
3, 9.34175, 1, 0, 0.503201,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.00988678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0786512, 0, 1, 0.503162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477278,-99) , 
0, 0.505301, 1, 0, 0.502135,-99) , 
NN(
0, 
0, 
-1, -0.101977, 1, -1, 0.477758,-99) , 
0, 0.491424, 0, 0, 0.500797,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0125027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.99098, 0, 1, 0.503837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482576,-99) , 
5, 0.355627, 0, 0, 0.491166,-99) , 
4, 0.99966, 0, 0, 0.502578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467792,-99) , 
4, 0.998571, 0, 0, 0.500906,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0132163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496299,-99) , 
3, 1.45965, 1, 0, 0.499253,-99) , 
4, 0.998095, 1, 0, 0.50068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470172,-99) , 
3, 9.50054, 1, 0, 0.499256,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0207052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493941,-99) , 
3, 2.66177, 0, 0, 0.498078,-99) , 
3, 8.98399, 0, 0, 0.500697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459936,-99) , 
0, 0.494598, 0, 0, 0.491414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445067,-99) , 
0, 0.500947, 1, 0, 0.47869,-99) , 
4, 0.999524, 0, 0, 0.498186,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0141483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490678,-99) , 
3, 2.3272, 1, 0, 0.526056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497157,-99) , 
3, 0.574439, 1, 0, 0.498442,-99) , 
4, 0.999048, 1, 0, 0.500313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466673,-99) , 
3, 9.44308, 1, 0, 0.498716,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0111511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473976,-99) , 
5, 0.261506, 0, 0, 0.5213,-99) , 
NN(
0, 
0, 
-1, 0.184818, 0, 1, 0.501434,-99) , 
4, 0.999048, 1, 0, 0.502755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465619,-99) , 
3, 9.5109, 1, 0, 0.501043,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0102354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493001,-99) , 
5, 0.261951, 0, 0, 0.528386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486489,-99) , 
3, 7.51529, 1, 0, 0.500716,-99) , 
4, 0.999048, 1, 0, 0.502582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471125,-99) , 
3, 9.25236, 1, 0, 0.501009,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0144848);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498959,-99) , 
3, 9.32349, 0, 0, 0.503121,-99) , 
NN(
0, 
0, 
-1, 4.64026, 1, -1, 0.492537,-99) , 
4, 0.999932, 0, 0, 0.499826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465225,-99) , 
4, 0.998572, 0, 0, 0.498148,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.014866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482437,-99) , 
6, 0.0237975, 1, 0, 0.503707,-99) , 
NN(
0, 
0, 
-1, 0.505817, 1, -1, 0.481629,-99) , 
0, 0.504712, 1, 0, 0.502454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504407,-99) , 
NN(
0, 
0, 
-1, 0.161572, 1, -1, 0.47053,-99) , 
5, -0.282521, 1, 0, 0.483004,-99) , 
0, 0.492376, 0, 0, 0.500874,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0184089);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49442,-99) , 
5, 0.0731563, 0, 0, 0.49997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4691,-99) , 
3, 9.3748, 1, 0, 0.498464,-99) , 
5, -0.82002, 1, 0, 0.499762,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0120193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493873,-99) , 
3, 4.75126, 1, 0, 0.508747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497891,-99) , 
3, 9.09825, 0, 0, 0.499353,-99) , 
2, -0.0715191, 1, 0, 0.500823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463877,-99) , 
4, 0.997619, 0, 0, 0.499753,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0186964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495334,-99) , 
4, 0.999909, 0, 0, 0.504788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480634,-99) , 
4, 0.999819, 1, 0, 0.492677,-99) , 
5, 0.444264, 1, 0, 0.50346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45784,-99) , 
4, 0.998095, 0, 0, 0.501865,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0114999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499821,-99) , 
3, 9.36834, 0, 0, 0.502716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454205,-99) , 
3, 4.69318, 1, 0, 0.493265,-99) , 
4, 0.999819, 0, 0, 0.501024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46716,-99) , 
4, 0.998095, 0, 0, 0.499845,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0105497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496264,-99) , 
3, 1.92364, 1, 0, 0.53123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49967,-99) , 
3, 1.02432, 1, 0, 0.501677,-99) , 
4, 0.999048, 1, 0, 0.503674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476815,-99) , 
3, 9.5109, 1, 0, 0.502429,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.00884881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36948, 0, 1, 0.502318,-99) , 
NN(
0, 
0, 
-1, -0.00202097, 0, -1, 0.483404,-99) , 
4, 0.999433, 0, 0, 0.500905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459732,-99) , 
4, 0.997619, 0, 0, 0.499745,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0127576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 0, 1, 0.506597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496599,-99) , 
3, 9.1473, 0, 0, 0.498004,-99) , 
0, 0.49809, 1, 0, 0.502258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469722,-99) , 
4, 0.998095, 0, 0, 0.501105,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0130331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495816,-99) , 
3, 1.86653, 1, 0, 0.527784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497713,-99) , 
2, -0.181993, 1, 0, 0.49925,-99) , 
4, 0.999048, 1, 0, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473899,-99) , 
3, 9.36036, 1, 0, 0.499828,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0102845);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465666,-99) , 
3, 9.50017, 1, 0, 0.501944,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.009783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0715405, 0, 1, 0.503935,-99) , 
NN(
0, 
0, 
-1, 0.3467, 1, -1, 0.494207,-99) , 
0, 0.494281, 0, 0, 0.502319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470615,-99) , 
1, 0.0242534, 1, 0, 0.501503,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.00867676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.536191, 0, 1, 0.518674,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.49876,-99) , 
4, 0.999524, 1, 0, 0.501011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47251,-99) , 
3, 9.51398, 1, 0, 0.499688,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0102676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481172,-99) , 
6, 0.0238067, 1, 0, 0.502082,-99) , 
5, -0.819403, 1, 0, 0.502727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474372,-99) , 
0, 0.490471, 0, 0, 0.501729,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.014391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489799,-99) , 
5, 0.435815, 1, 0, 0.500309,-99) , 
3, 9.37523, 0, 0, 0.502856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512304,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.469639,-99) , 
5, 0.535365, 0, 0, 0.480191,-99) , 
4, 0.999524, 0, 0, 0.500273,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.00673262);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.16137, 0, 1, 0.502375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477207,-99) , 
4, 0.998571, 0, 0, 0.501152,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0142102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495661,-99) , 
5, 0.437327, 0, 0, 0.524409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495798,-99) , 
2, -0.107235, 1, 0, 0.496815,-99) , 
4, 0.999048, 1, 0, 0.498661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473455,-99) , 
3, 9.38746, 1, 0, 0.497446,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0128495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498395,-99) , 
3, 9.23701, 0, 0, 0.501351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45105,-99) , 
3, 4.69318, 1, 0, 0.490283,-99) , 
4, 0.999819, 0, 0, 0.499373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469801,-99) , 
4, 0.998095, 0, 0, 0.498343,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0113357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499516,-99) , 
5, -0.0128996, 0, 0, 0.502418,-99) , 
4, 0.998095, 1, 0, 0.5038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46765,-99) , 
3, 9.44308, 1, 0, 0.502118,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0065382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49988,-99) , 
4, 0.999093, 1, 0, 0.501241,-99) , 
3, 9.36963, 0, 0, 0.502147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465656,-99) , 
4, 0.997619, 0, 0, 0.501116,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.012393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484696,-99) , 
4, 0.999705, 0, 0, 0.500408,-99) , 
3, 9.32298, 0, 0, 0.502669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47702,-99) , 
0, 0.493964, 0, 0, 0.499407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456579,-99) , 
0, 0.500947, 1, 0, 0.487519,-99) , 
4, 0.999524, 0, 0, 0.500921,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.00711824);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472611,-99) , 
3, 9.5109, 1, 0, 0.501032,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.013178);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494343,-99) , 
3, 2.34277, 1, 0, 0.527895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496317,-99) , 
0, 0.5019, 0, 0, 0.497719,-99) , 
4, 0.999048, 1, 0, 0.499777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47761,-99) , 
3, 9.45752, 1, 0, 0.49873,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0083084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44372, 1, 1, 0.520484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498973,-99) , 
2, 0.169466, 0, 0, 0.499728,-99) , 
4, 0.999048, 1, 0, 0.501133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470986,-99) , 
3, 9.4861, 1, 0, 0.499748,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.007082);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480231,-99) , 
3, 9.29024, 1, 0, 0.50158,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0148682);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498901,-99) , 
3, 8.69723, 0, 0, 0.502527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458831,-99) , 
3, 4.62721, 1, 0, 0.493367,-99) , 
4, 0.999887, 0, 0, 0.500262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454019,-99) , 
4, 0.997619, 0, 0, 0.498979,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.00721023);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.502463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472797,-99) , 
3, 9.5109, 1, 0, 0.501094,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.018051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496038,-99) , 
4, 0.999977, 0, 0, 0.500707,-99) , 
3, 9.17519, 0, 0, 0.503008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523118,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.471235,-99) , 
5, 0.528415, 0, 0, 0.484772,-99) , 
4, 0.999524, 0, 0, 0.5009,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.013987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.640284, 1, 1, 0.505077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486938,-99) , 
0, 0.490789, 0, 0, 0.504101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472533,-99) , 
4, 0.999524, 0, 0, 0.499043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476004,-99) , 
5, -0.461685, 0, 0, 0.493564,-99) , 
0, 0.500947, 1, 0, 0.501622,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0149366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497523,-99) , 
2, -0.0402169, 1, 0, 0.500252,-99) , 
3, 9.15418, 0, 0, 0.502031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453528,-99) , 
5, 0.439137, 0, 0, 0.475401,-99) , 
4, 0.999048, 0, 0, 0.5002,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.00665745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49924,-99) , 
2, 0.214284, 0, 0, 0.500036,-99) , 
4, 0.997619, 1, 0, 0.501029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478915,-99) , 
3, 9.4861, 1, 0, 0.49999,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0075819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499117,-99) , 
5, -0.820295, 1, 0, 0.499857,-99) , 
4, 0.998095, 1, 0, 0.50099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472478,-99) , 
3, 9.4861, 1, 0, 0.499666,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0147036);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.3259, 0, 1, 0.5052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515311,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.472736,-99) , 
5, 0.525896, 0, 0, 0.483976,-99) , 
4, 0.999524, 0, 0, 0.502785,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.00771031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486273,-99) , 
6, 0.0237918, 1, 0, 0.50116,-99) , 
5, -0.819403, 1, 0, 0.501916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472074,-99) , 
4, 0.997619, 0, 0, 0.501064,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0104834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492521,-99) , 
5, 0.258532, 0, 0, 0.526334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499105,-99) , 
2, 0.188104, 0, 0, 0.499931,-99) , 
4, 0.999048, 1, 0, 0.501711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464918,-99) , 
3, 9.29254, 1, 0, 0.499934,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.00811894);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469856,-99) , 
3, 9.44308, 1, 0, 0.501234,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0135828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.37523, 0, 1, 0.504683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464269,-99) , 
3, 4.69279, 1, 0, 0.494841,-99) , 
4, 0.999887, 0, 0, 0.502259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470554,-99) , 
4, 0.997619, 0, 0, 0.501354,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0106127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497689,-99) , 
0, 0.490472, 1, 0, 0.498338,-99) , 
4, 0.998095, 1, 0, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477209,-99) , 
3, 9.50017, 1, 0, 0.499066,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0135554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498909,-99) , 
3, 9.36834, 0, 0, 0.502546,-99) , 
NN(
0, 
0, 
-1, 4.59552, 1, -1, 0.491135,-99) , 
4, 0.999887, 0, 0, 0.499742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454463,-99) , 
4, 0.997619, 0, 0, 0.498483,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.00905833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.97147, 0, 1, 0.502607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487305,-99) , 
2, -0.214086, 0, 0, 0.50193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465784,-99) , 
4, 0.998572, 0, 0, 0.500219,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.00788627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498505,-99) , 
3, 0.56381, 1, 0, 0.499141,-99) , 
4, 0.998095, 1, 0, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475694,-99) , 
3, 9.45715, 1, 0, 0.499105,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0117762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498601,-99) , 
3, 2.3272, 1, 0, 0.521448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497769,-99) , 
5, -0.27782, 1, 0, 0.500583,-99) , 
4, 0.999048, 1, 0, 0.501987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467486,-99) , 
3, 9.44308, 1, 0, 0.50039,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0117886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36948, 0, 1, 0.504744,-99) , 
NN(
0, 
0, 
-1, -0.100331, 0, -1, 0.492112,-99) , 
4, 0.99966, 0, 0, 0.503251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467057,-99) , 
4, 0.997619, 0, 0, 0.502238,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.00989204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497734,-99) , 
5, -0.100816, 0, 0, 0.501236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481333,-99) , 
0, 0.505165, 1, 0, 0.500403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474003,-99) , 
0, 0.490471, 0, 0, 0.499496,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.00891451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237976, 0, 1, 0.505191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454407,-99) , 
3, 9.30944, 1, 0, 0.497703,-99) , 
5, -0.187592, 1, 0, 0.501036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470847,-99) , 
0, 0.505709, 1, 0, 0.500176,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0108529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49843,-99) , 
3, 9.23752, 0, 0, 0.500797,-99) , 
NN(
0, 
0, 
-1, -0.185714, 0, -1, 0.490065,-99) , 
4, 0.99966, 0, 0, 0.49953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462862,-99) , 
4, 0.997619, 0, 0, 0.498506,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.00703957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498926,-99) , 
2, 0.0716932, 0, 0, 0.500233,-99) , 
5, -0.819962, 1, 0, 0.500916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46751,-99) , 
4, 0.997619, 0, 0, 0.49998,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0125839);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499335,-99) , 
5, 0.349411, 0, 0, 0.528109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480456,-99) , 
3, 7.1491, 1, 0, 0.501995,-99) , 
4, 0.999048, 1, 0, 0.503747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477523,-99) , 
3, 9.34175, 1, 0, 0.502487,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0096415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499899,-99) , 
3, 8.99227, 0, 0, 0.502387,-99) , 
NN(
0, 
0, 
-1, 4.71132, 1, -1, 0.488921,-99) , 
4, 0.999773, 0, 0, 0.500273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463521,-99) , 
4, 0.997619, 0, 0, 0.499249,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0132091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32349, 0, 1, 0.504916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472794,-99) , 
3, 4.64026, 1, 0, 0.495992,-99) , 
4, 0.999887, 0, 0, 0.502721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461319,-99) , 
4, 0.997619, 0, 0, 0.501571,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.00699007);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.35619, 0, 1, 0.502574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478048,-99) , 
4, 0.998571, 0, 0, 0.501409,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.00872274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.440997, 0, 1, 0.522939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49854,-99) , 
2, -0.227599, 1, 0, 0.499172,-99) , 
4, 0.999048, 1, 0, 0.500757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475743,-99) , 
3, 9.50054, 1, 0, 0.499602,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.00942455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498085,-99) , 
4, 0.999524, 1, 0, 0.498929,-99) , 
4, 0.998571, 1, 0, 0.500406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476628,-99) , 
3, 9.45715, 1, 0, 0.499304,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.00803788);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493141,-99) , 
3, 2.33742, 1, 0, 0.525942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499532,-99) , 
2, -0.214167, 1, 0, 0.500142,-99) , 
4, 0.999048, 1, 0, 0.501885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477013,-99) , 
3, 9.4861, 1, 0, 0.500727,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.00644145);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499987,-99) , 
4, 0.999048, 1, 0, 0.501703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483666,-99) , 
3, 9.50054, 1, 0, 0.500855,-99) , 
5, -0.820403, 1, 0, 0.501715,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0108254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27716, 0, 1, 0.503749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48116,-99) , 
4, 0.99932, 0, 0, 0.502767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474442,-99) , 
4, 0.998572, 0, 0, 0.501418,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0125753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.510082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49774,-99) , 
2, 0.213864, 0, 0, 0.499004,-99) , 
3, 1.43256, 1, 0, 0.502599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477518,-99) , 
3, 9.31083, 1, 0, 0.501383,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0126851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498681,-99) , 
2, 0.121029, 0, 0, 0.499916,-99) , 
3, 9.11518, 0, 0, 0.502281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515663,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.478986,-99) , 
5, 0.528616, 0, 0, 0.488394,-99) , 
4, 0.999524, 0, 0, 0.500691,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0132795);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472689,-99) , 
4, 0.999773, 0, 0, 0.511895,-99) , 
NN(
0, 
0, 
-1, -0.0353843, 1, 1, 0.502517,-99) , 
3, 4.73749, 0, 0, 0.504401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47775,-99) , 
4, 0.997619, 0, 0, 0.503643,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.00830703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487405,-99) , 
3, 7.26677, 1, 0, 0.501143,-99) , 
4, 0.998095, 1, 0, 0.502005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473954,-99) , 
3, 9.50054, 1, 0, 0.500721,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.00967138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498555,-99) , 
2, -0.060315, 1, 0, 0.500296,-99) , 
3, 9.17404, 0, 0, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475211,-99) , 
4, 0.998571, 0, 0, 0.500243,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0104153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495977,-99) , 
3, 1.88231, 1, 0, 0.521891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49804,-99) , 
0, 0.495233, 1, 0, 0.499567,-99) , 
4, 0.999048, 1, 0, 0.501053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473625,-99) , 
3, 9.3748, 1, 0, 0.49976,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.00971203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36963, 0, 1, 0.502979,-99) , 
NN(
0, 
0, 
-1, -0.0956055, 0, -1, 0.488134,-99) , 
4, 0.99966, 0, 0, 0.501242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465785,-99) , 
4, 0.997619, 0, 0, 0.50026,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.00801367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491608,-99) , 
5, 0.26133, 0, 0, 0.525382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499928,-99) , 
2, 0.179954, 0, 0, 0.500838,-99) , 
4, 0.999048, 1, 0, 0.502493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476814,-99) , 
3, 9.5109, 1, 0, 0.501315,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.00820662);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.36963, 0, 1, 0.503182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477541,-99) , 
4, 0.998571, 0, 0, 0.501956,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.00712093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499081,-99) , 
2, 0.219504, 0, 0, 0.499697,-99) , 
4, 0.998571, 1, 0, 0.500989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4783,-99) , 
3, 9.50017, 1, 0, 0.499943,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0079);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480742,-99) , 
3, 9.4861, 1, 0, 0.502172,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.00782448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.440271, 0, 1, 0.525081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482412,-99) , 
3, 7.59639, 1, 0, 0.50027,-99) , 
4, 0.999048, 1, 0, 0.501929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479241,-99) , 
3, 9.35582, 1, 0, 0.500843,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.00963435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.346923, 0, 1, 0.526387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497987,-99) , 
2, -0.201398, 1, 0, 0.498578,-99) , 
4, 0.999048, 1, 0, 0.500451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4802,-99) , 
3, 9.35582, 1, 0, 0.49948,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.00795553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498639,-99) , 
2, -0.0626658, 1, 0, 0.499779,-99) , 
3, 9.36655, 0, 0, 0.500823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47708,-99) , 
4, 0.998572, 0, 0, 0.499685,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0152625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498177,-99) , 
4, 0.999977, 0, 0, 0.502144,-99) , 
3, 9.36834, 0, 0, 0.504214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47079,-99) , 
0, 0.494598, 0, 0, 0.493594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466161,-99) , 
0, 0.500947, 1, 0, 0.486022,-99) , 
4, 0.999524, 0, 0, 0.50215,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0121599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.17389, 0, 1, 0.504565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473443,-99) , 
5, -0.0130156, 0, 0, 0.49041,-99) , 
4, 0.99966, 0, 0, 0.502906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463745,-99) , 
4, 0.997619, 0, 0, 0.501829,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0074812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46302, 1, 1, 0.527682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483271,-99) , 
3, 7.60735, 1, 0, 0.500174,-99) , 
4, 0.999048, 1, 0, 0.502037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48362,-99) , 
3, 9.36655, 1, 0, 0.501152,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0139249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495545,-99) , 
3, 3.50173, 0, 0, 0.497538,-99) , 
3, 8.97596, 0, 0, 0.499697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50115,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.472753,-99) , 
5, 0.349755, 0, 0, 0.485163,-99) , 
4, 0.999524, 0, 0, 0.498042,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0102699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36963, 0, 1, 0.503541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469247,-99) , 
3, 4.62545, 1, 0, 0.495362,-99) , 
4, 0.999819, 0, 0, 0.502074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475921,-99) , 
4, 0.998095, 0, 0, 0.501162,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0106743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498173,-99) , 
3, 1.0143, 1, 0, 0.500422,-99) , 
4, 0.997619, 1, 0, 0.501623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477131,-99) , 
3, 9.38695, 1, 0, 0.500463,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.00951855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497722,-99) , 
2, 0.221502, 0, 0, 0.498403,-99) , 
4, 0.998571, 1, 0, 0.499893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481969,-99) , 
3, 9.37443, 1, 0, 0.499041,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.00741612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486667,-99) , 
3, 7.66707, 1, 0, 0.500769,-99) , 
4, 0.998571, 1, 0, 0.501804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474725,-99) , 
3, 9.44308, 1, 0, 0.500563,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0126774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497391,-99) , 
2, 0.0530396, 0, 0, 0.498996,-99) , 
3, 9.35582, 0, 0, 0.500516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460505,-99) , 
5, 0.438718, 0, 0, 0.482364,-99) , 
4, 0.999048, 0, 0, 0.499266,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.00608729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483243,-99) , 
3, 7.15631, 1, 0, 0.499607,-99) , 
3, 9.35582, 0, 0, 0.500731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480771,-99) , 
4, 0.998571, 0, 0, 0.499766,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.00791271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498662,-99) , 
5, -0.0107316, 0, 0, 0.501043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482356,-99) , 
0, 0.505301, 1, 0, 0.500304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466515,-99) , 
5, -0.102879, 1, 0, 0.484091,-99) , 
0, 0.491424, 0, 0, 0.499418,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.00744605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.95267, 0, 1, 0.501397,-99) , 
NN(
0, 
0, 
-1, 0.663734, 0, -1, 0.48228,-99) , 
5, 0.526878, 1, 0, 0.499979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464733,-99) , 
4, 0.998095, 0, 0, 0.498776,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.00707424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498614,-99) , 
4, 0.999093, 1, 0, 0.49916,-99) , 
4, 0.998095, 1, 0, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48293,-99) , 
3, 9.44308, 1, 0, 0.499492,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.00989579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499847,-99) , 
3, 9.32298, 0, 0, 0.502827,-99) , 
NN(
0, 
0, 
-1, 4.67798, 1, -1, 0.493559,-99) , 
4, 0.999887, 0, 0, 0.500541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459146,-99) , 
4, 0.997619, 0, 0, 0.499409,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0122461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.442439, 1, 1, 0.504526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485888,-99) , 
3, 7.21937, 1, 0, 0.503675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469728,-99) , 
3, 9.44308, 1, 0, 0.502121,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.00711611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27716, 0, 1, 0.502094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467912,-99) , 
5, 0.083051, 0, 0, 0.486906,-99) , 
4, 0.99932, 0, 0, 0.501133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470279,-99) , 
4, 0.997619, 0, 0, 0.50028,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0147581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495207,-99) , 
2, 0.0178611, 0, 0, 0.498461,-99) , 
3, 9.36885, 0, 0, 0.500323,-99) , 
NN(
0, 
0, 
-1, 0.256486, 0, -1, 0.485785,-99) , 
4, 0.999048, 0, 0, 0.49932,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.00599855);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477511,-99) , 
3, 9.45715, 1, 0, 0.500933,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0109819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4972,-99) , 
4, 0.999977, 0, 0, 0.499873,-99) , 
3, 9.23815, 0, 0, 0.501596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474265,-99) , 
0, 0.493737, 0, 0, 0.494221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461823,-99) , 
0, 0.5019, 1, 0, 0.487044,-99) , 
4, 0.999524, 0, 0, 0.499941,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0106361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484301,-99) , 
5, -0.459906, 0, 0, 0.509768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498874,-99) , 
3, 9.08572, 0, 0, 0.499828,-99) , 
2, -0.0712535, 1, 0, 0.501388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462439,-99) , 
4, 0.997619, 0, 0, 0.500328,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0100594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.86645, 1, 1, 0.524928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498634,-99) , 
0, 0.496186, 1, 0, 0.500667,-99) , 
4, 0.999048, 1, 0, 0.502309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476243,-99) , 
3, 9.36036, 1, 0, 0.501062,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.00782767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499292,-99) , 
2, -0.204335, 1, 0, 0.500074,-99) , 
4, 0.998571, 1, 0, 0.50152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474198,-99) , 
3, 9.31083, 1, 0, 0.500214,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.00954188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32119, 0, 1, 0.503665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487385,-99) , 
4, 0.998095, 0, 0, 0.503151,-99) , 
NN(
0, 
0, 
-1, -0.102275, 1, -1, 0.480715,-99) , 
0, 0.491424, 0, 0, 0.501946,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.00771147);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.820378, 1, 1, 0.503014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479468,-99) , 
4, 0.998572, 0, 0, 0.501884,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0066366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498985,-99) , 
2, -0.201754, 1, 0, 0.499681,-99) , 
3, 9.08609, 0, 0, 0.500936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486036,-99) , 
4, 0.998571, 0, 0, 0.500222,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0072404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498725,-99) , 
0, 0.5019, 0, 0, 0.500163,-99) , 
5, -0.820305, 1, 0, 0.500824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470066,-99) , 
4, 0.997619, 0, 0, 0.499966,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0113476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.48258, 1, 1, 0.518554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497129,-99) , 
4, 0.999955, 1, 0, 0.49938,-99) , 
4, 0.999524, 1, 0, 0.501547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478393,-99) , 
3, 9.5132, 1, 0, 0.500491,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0106292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.44308, 0, 1, 0.504669,-99) , 
NN(
0, 
0, 
-1, 0.256472, 1, -1, 0.49474,-99) , 
0, 0.493328, 0, 0, 0.503434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483948,-99) , 
0, 0.504757, 1, 0, 0.502449,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.00591159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487937,-99) , 
3, 6.69829, 1, 0, 0.499631,-99) , 
3, 9.32412, 0, 0, 0.5006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477643,-99) , 
4, 0.998571, 0, 0, 0.499499,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.00648903);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499456,-99) , 
5, 0.169792, 0, 0, 0.501386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482916,-99) , 
0, 0.490472, 0, 0, 0.500745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475555,-99) , 
1, 0.0240263, 1, 0, 0.500087,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0104875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535495,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.498113,-99) , 
3, 9.32349, 0, 0, 0.499822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50552,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.475798,-99) , 
5, 0.528888, 0, 0, 0.483411,-99) , 
4, 0.999524, 0, 0, 0.497955,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.00826973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498763,-99) , 
3, 1.46484, 1, 0, 0.50073,-99) , 
4, 0.997619, 1, 0, 0.501703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478872,-99) , 
3, 9.46788, 1, 0, 0.500649,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.00642581);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480339,-99) , 
3, 9.50017, 1, 0, 0.501393,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.00699923);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469411,-99) , 
3, 9.38746, 1, 0, 0.500633,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.00783179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498482,-99) , 
5, -0.820349, 1, 0, 0.499207,-99) , 
3, 9.26643, 0, 0, 0.500102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47547,-99) , 
4, 0.998571, 0, 0, 0.498931,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.00558131);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.501738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476584,-99) , 
3, 9.27951, 1, 0, 0.500517,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.010194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476597,-99) , 
4, 0.99966, 0, 0, 0.499573,-99) , 
3, 9.32298, 0, 0, 0.501641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508614,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.474167,-99) , 
5, 0.526383, 0, 0, 0.483146,-99) , 
4, 0.999524, 0, 0, 0.499554,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.00760758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498947,-99) , 
2, -0.206135, 1, 0, 0.499842,-99) , 
4, 0.998571, 1, 0, 0.500908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476621,-99) , 
3, 9.38695, 1, 0, 0.499764,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0241435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476173,-99) , 
5, -0.555669, 0, 0, 0.516612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493994,-99) , 
5, 0.166525, 0, 0, 0.499812,-99) , 
6, 0.0113339, 0, 0, 0.502086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452417,-99) , 
5, -0.556112, 1, 0, 0.482477,-99) , 
6, 0.0238014, 1, 0, 0.501025,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.00793203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499335,-99) , 
2, 0.205672, 0, 0, 0.499968,-99) , 
3, 9.35582, 0, 0, 0.501468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470151,-99) , 
4, 0.998572, 0, 0, 0.499997,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0114716);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.23701, 0, 1, 0.503934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514935,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.478608,-99) , 
5, 0.534591, 0, 0, 0.487824,-99) , 
4, 0.999524, 0, 0, 0.502099,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0107051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484963,-99) , 
5, 0.534549, 1, 0, 0.501346,-99) , 
4, 0.997619, 1, 0, 0.502384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475631,-99) , 
3, 9.5132, 1, 0, 0.501166,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0132755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495009,-99) , 
4, 0.999977, 0, 0, 0.498712,-99) , 
3, 9.36885, 0, 0, 0.500401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505569,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.475701,-99) , 
5, 0.534864, 0, 0, 0.483298,-99) , 
4, 0.999524, 0, 0, 0.498461,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0108636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494163,-99) , 
3, 1.90623, 1, 0, 0.521481,-99) , 
NN(
0, 
0, 
-1, 0.0797883, 1, -1, 0.497255,-99) , 
4, 0.999048, 1, 0, 0.498893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472706,-99) , 
3, 9.50017, 1, 0, 0.497693,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0104777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496535,-99) , 
0, 0.500948, 1, 0, 0.501704,-99) , 
4, 0.998095, 1, 0, 0.502859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477274,-99) , 
3, 9.4861, 1, 0, 0.501687,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.00830234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499524,-99) , 
2, 0.0302791, 0, 0, 0.501102,-99) , 
3, 9.31046, 0, 0, 0.502204,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.479031,-99) , 
4, 0.999048, 0, 0, 0.500618,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0129646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497197,-99) , 
5, -0.0101636, 1, 0, 0.501303,-99) , 
3, 9.37185, 0, 0, 0.503013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463033,-99) , 
0, 0.493736, 0, 0, 0.49187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465921,-99) , 
0, 0.501899, 1, 0, 0.486115,-99) , 
4, 0.999524, 0, 0, 0.501106,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.00882551);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213923, 1, 1, 0.50361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478709,-99) , 
3, 9.46788, 1, 0, 0.502479,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0139947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478604,-99) , 
4, 0.999932, 0, 0, 0.509388,-99) , 
NN(
0, 
0, 
-1, 0.43971, 1, -1, 0.498327,-99) , 
3, 4.73787, 0, 0, 0.500555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477003,-99) , 
4, 0.998571, 0, 0, 0.499443,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0121803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.504026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461593,-99) , 
3, 4.58762, 1, 0, 0.494722,-99) , 
4, 0.999819, 0, 0, 0.502359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472512,-99) , 
4, 0.998095, 0, 0, 0.501338,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0159596);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478148,-99) , 
5, -0.461442, 0, 0, 0.510193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494259,-99) , 
5, -0.192131, 1, 0, 0.498438,-99) , 
2, -0.0707498, 1, 0, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476031,-99) , 
3, 9.36036, 1, 0, 0.499093,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0124655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496822,-99) , 
0, 0.5019, 0, 0, 0.498187,-99) , 
3, 9.37126, 0, 0, 0.500255,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.486902,-99) , 
4, 0.999524, 0, 0, 0.498731,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.00662239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.89813, 1, 1, 0.51788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484277,-99) , 
4, 0.99966, 0, 0, 0.499512,-99) , 
4, 0.999524, 1, 0, 0.50159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479258,-99) , 
3, 9.45752, 1, 0, 0.50056,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0081087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498591,-99) , 
2, 0.211765, 0, 0, 0.499412,-99) , 
4, 0.998095, 1, 0, 0.500459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476265,-99) , 
3, 9.37443, 1, 0, 0.499319,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0119032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.23752, 0, 1, 0.504949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478595,-99) , 
3, 4.65713, 1, 0, 0.495913,-99) , 
4, 0.999864, 0, 0, 0.503099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475077,-99) , 
4, 0.998572, 0, 0, 0.501787,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.00797031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498353,-99) , 
2, -0.207742, 1, 0, 0.49928,-99) , 
4, 0.997619, 1, 0, 0.500123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479219,-99) , 
3, 9.51398, 1, 0, 0.499176,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0098877);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498007,-99) , 
4, 0.999932, 0, 0, 0.502355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482978,-99) , 
5, 0.615552, 1, 0, 0.501555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478066,-99) , 
4, 0.998572, 0, 0, 0.500439,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.00697415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499907,-99) , 
5, 0.624807, 0, 0, 0.501036,-99) , 
NN(
0, 
0, 
-1, -0.103177, 1, -1, 0.482804,-99) , 
0, 0.491469, 0, 0, 0.499953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478504,-99) , 
5, -0.332732, 0, 0, 0.491339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470611,-99) , 
5, 0.0776417, 1, 0, 0.484771,-99) , 
0, 0.503804, 1, 0, 0.498743,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.00868877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36655, 0, 1, 0.502861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485769,-99) , 
4, 0.999252, 0, 0, 0.502228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474086,-99) , 
4, 0.998571, 0, 0, 0.500908,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0116761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499316,-99) , 
3, 1.9064, 1, 0, 0.52116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495633,-99) , 
4, 0.999955, 1, 0, 0.498516,-99) , 
4, 0.999048, 1, 0, 0.500024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48036,-99) , 
3, 9.50054, 1, 0, 0.499141,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.00942939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497868,-99) , 
0, 0.491424, 1, 0, 0.498951,-99) , 
4, 0.998571, 1, 0, 0.500199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481821,-99) , 
3, 9.45715, 1, 0, 0.499348,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.00803927);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.35582, 0, 1, 0.50295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456492,-99) , 
4, 0.997619, 0, 0, 0.501725,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.00472716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619692, 0, 1, 0.501601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489396,-99) , 
0, 0.490199, 0, 0, 0.501215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481344,-99) , 
0, 0.505709, 1, 0, 0.500649,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.00666151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480777,-99) , 
3, 7.72418, 1, 0, 0.500307,-99) , 
4, 0.998095, 1, 0, 0.501209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477906,-99) , 
3, 9.5109, 1, 0, 0.500148,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.00573752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.62559, 0, 1, 0.501062,-99) , 
NN(
0, 
0, 
-1, 0.495232, 0, -1, 0.490473,-99) , 
5, 0.436293, 1, 0, 0.499852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467025,-99) , 
4, 0.997619, 0, 0, 0.498962,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0078888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498577,-99) , 
3, 7.20618, 0, 0, 0.499707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454443,-99) , 
4, 0.998095, 0, 0, 0.498514,-99) , 
5, 0.619678, 0, 0, 0.499261,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0119058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.90621, 1, 1, 0.527934,-99) , 
NN(
0, 
0, 
-1, -0.461058, 0, -1, 0.496452,-99) , 
4, 0.999048, 1, 0, 0.498578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478324,-99) , 
3, 9.50017, 1, 0, 0.497647,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.012687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495491,-99) , 
5, -0.461092, 0, 0, 0.502425,-99) , 
4, 0.998095, 1, 0, 0.503546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479204,-99) , 
3, 9.26544, 1, 0, 0.502373,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0148774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49693,-99) , 
6, 0.01247, 0, 0, 0.500256,-99) , 
6, 0.0238069, 0, 0, 0.501764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51094,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.491076,-99) , 
2, -0.0711952, 1, 0, 0.494648,-99) , 
5, 0.169769, 1, 0, 0.499752,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.00907105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.3738, 0, 1, 0.503178,-99) , 
NN(
0, 
0, 
-1, 4.67798, 1, -1, 0.49217,-99) , 
4, 0.999819, 0, 0, 0.501221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4805,-99) , 
4, 0.998095, 0, 0, 0.500511,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.00538176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.071533, 0, 1, 0.501572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479488,-99) , 
1, 0.0240341, 1, 0, 0.500988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476147,-99) , 
0, 0.505709, 1, 0, 0.500283,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.00604545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499463,-99) , 
0, 0.490472, 1, 0, 0.500062,-99) , 
4, 0.998095, 1, 0, 0.501285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48208,-99) , 
3, 9.38746, 1, 0, 0.500385,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.00597311);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.35619, 0, 1, 0.502308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477758,-99) , 
4, 0.998095, 0, 0, 0.501473,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0104059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.86307, 1, 1, 0.521067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497831,-99) , 
0, 0.491425, 1, 0, 0.498463,-99) , 
4, 0.999524, 1, 0, 0.501024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484578,-99) , 
3, 9.34175, 1, 0, 0.500243,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.02562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486784,-99) , 
5, -0.458387, 0, 0, 0.504575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486006,-99) , 
5, -0.460628, 1, 0, 0.49132,-99) , 
6, 0.00226668, 0, 0, 0.501136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455789,-99) , 
5, -0.556694, 1, 0, 0.48642,-99) , 
6, 0.0238014, 1, 0, 0.500343,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0111993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.45715, 0, 1, 0.503605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483524,-99) , 
2, -0.0718544, 1, 0, 0.48987,-99) , 
0, 0.502988, 1, 0, 0.50198,-99) , 
NN(
0, 
0, 
-1, -0.101999, 1, -1, 0.482105,-99) , 
0, 0.491424, 0, 0, 0.500905,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.00768291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499087,-99) , 
2, 0.219504, 0, 0, 0.499533,-99) , 
3, 9.36834, 0, 0, 0.500851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469502,-99) , 
4, 0.998571, 0, 0, 0.499388,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.00806299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.89066, 1, 1, 0.519919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487475,-99) , 
3, 7.25909, 1, 0, 0.501109,-99) , 
4, 0.999048, 1, 0, 0.50237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483387,-99) , 
3, 9.4861, 1, 0, 0.501502,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.00960098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496775,-99) , 
4, 0.999546, 1, 0, 0.498001,-99) , 
3, 9.35582, 0, 0, 0.498616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473944,-99) , 
4, 0.997619, 0, 0, 0.497936,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.00873094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498876,-99) , 
0, 0.491424, 1, 0, 0.499421,-99) , 
3, 9.36885, 0, 0, 0.501192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503944,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.481945,-99) , 
5, 0.439059, 0, 0, 0.489723,-99) , 
4, 0.999524, 0, 0, 0.499879,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0160764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497416,-99) , 
2, -0.037265, 1, 0, 0.499926,-99) , 
4, 0.998572, 1, 0, 0.501771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470053,-99) , 
2, 0.193804, 1, 0, 0.499638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454201,-99) , 
2, -0.214267, 0, 0, 0.492339,-99) , 
3, 4.79944, 1, 0, 0.499918,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0150406);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476712,-99) , 
1, 0.0246499, 1, 0, 0.506431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496209,-99) , 
6, 0.0137263, 0, 0, 0.498252,-99) , 
1, 0.000907951, 0, 0, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473589,-99) , 
1, -0.0240223, 0, 0, 0.501264,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0122973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498639,-99) , 
2, -0.00418294, 1, 0, 0.502332,-99) , 
3, 9.36834, 0, 0, 0.503908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487711,-99) , 
2, 0.0714798, 1, 0, 0.496687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470854,-99) , 
0, 0.500947, 1, 0, 0.489653,-99) , 
4, 0.999524, 0, 0, 0.502285,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.00842341);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.32806, 0, 1, 0.502802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504482,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.477803,-99) , 
2, 0.0715866, 0, 0, 0.488298,-99) , 
4, 0.999524, 0, 0, 0.501156,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0101374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497917,-99) , 
3, 1.45609, 1, 0, 0.500419,-99) , 
4, 0.998571, 1, 0, 0.501641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479692,-99) , 
3, 9.37185, 1, 0, 0.500605,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.010448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.24246, 0, 1, 0.503483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460635,-99) , 
3, 4.67798, 1, 0, 0.494419,-99) , 
4, 0.999773, 0, 0, 0.502051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472343,-99) , 
4, 0.997619, 0, 0, 0.501229,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0126718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489847,-99) , 
3, 2.30862, 1, 0, 0.512298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497303,-99) , 
2, 0.0398182, 0, 0, 0.498916,-99) , 
4, 0.999524, 1, 0, 0.500415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473076,-99) , 
3, 9.27716, 1, 0, 0.499104,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.00820946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484846,-99) , 
3, 9.29639, 1, 0, 0.501984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470396,-99) , 
1, 0.0245941, 1, 0, 0.50119,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.00529176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531686,-99) , 
NN(
0, 
0, 
-1, 7.26651, 1, -1, 0.498979,-99) , 
4, 0.997619, 1, 0, 0.499849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480066,-99) , 
3, 9.50017, 1, 0, 0.498965,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.00564672);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.31046, 0, 1, 0.501755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475667,-99) , 
4, 0.998571, 0, 0, 0.50052,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.00865546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498432,-99) , 
0, 0.501899, 0, 0, 0.499597,-99) , 
3, 9.32427, 0, 0, 0.501095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476053,-99) , 
5, 0.436223, 0, 0, 0.486242,-99) , 
4, 0.999048, 0, 0, 0.500073,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0101029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.24403, 0, 1, 0.503171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482927,-99) , 
5, 0.0762277, 0, 0, 0.492076,-99) , 
4, 0.999819, 0, 0, 0.501196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468124,-99) , 
4, 0.998095, 0, 0, 0.500081,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.00650774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.97596, 0, 1, 0.501097,-99) , 
NN(
0, 
0, 
-1, -0.46369, 0, -1, 0.490897,-99) , 
2, -0.0712535, 0, 0, 0.499531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470136,-99) , 
4, 0.998095, 0, 0, 0.498541,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0102254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498109,-99) , 
6, 0.0238014, 0, 0, 0.498779,-99) , 
3, 9.36834, 0, 0, 0.50073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490278,-99) , 
5, 0.436901, 0, 0, 0.49618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475766,-99) , 
0, 0.494281, 0, 0, 0.490862,-99) , 
4, 0.999524, 0, 0, 0.499608,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.00724485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494896,-99) , 
3, 5.36037, 1, 0, 0.500459,-99) , 
3, 9.2801, 0, 0, 0.501548,-99) , 
NN(
0, 
0, 
-1, 0.258212, 0, -1, 0.484343,-99) , 
4, 0.999048, 0, 0, 0.500368,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.00597032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36655, 0, 1, 0.501805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480922,-99) , 
4, 0.998912, 0, 0, 0.501227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476923,-99) , 
4, 0.998095, 0, 0, 0.500407,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0134417);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477191,-99) , 
5, -0.461306, 0, 0, 0.507475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491034,-99) , 
4, 0.999909, 0, 0, 0.498662,-99) , 
0, 0.5019, 0, 0, 0.500168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474145,-99) , 
4, 0.998095, 0, 0, 0.499293,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.00958461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497682,-99) , 
2, -0.213651, 1, 0, 0.498348,-99) , 
4, 0.998095, 1, 0, 0.499366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472359,-99) , 
3, 9.3748, 1, 0, 0.498102,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.00939929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496629,-99) , 
5, -0.192371, 0, 0, 0.499722,-99) , 
3, 9.31046, 0, 0, 0.500789,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.482764,-99) , 
4, 0.999048, 0, 0, 0.499564,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.00735263);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.502315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46802,-99) , 
3, 9.37443, 1, 0, 0.500741,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.00961641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497206,-99) , 
0, 0.490471, 1, 0, 0.497768,-99) , 
4, 0.998571, 1, 0, 0.498616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474393,-99) , 
3, 9.36036, 1, 0, 0.497473,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.00597986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483922,-99) , 
1, -0.0238602, 0, 0, 0.500306,-99) , 
4, 0.997619, 1, 0, 0.501157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476905,-99) , 
3, 9.36036, 1, 0, 0.500026,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.00882987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497501,-99) , 
0, 0.493328, 1, 0, 0.498528,-99) , 
2, -0.215391, 1, 0, 0.499436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47961,-99) , 
3, 9.46788, 1, 0, 0.498533,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.00783023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498716,-99) , 
2, 0.210195, 0, 0, 0.499205,-99) , 
3, 9.17389, 0, 0, 0.500576,-99) , 
NN(
0, 
0, 
-1, 0.435902, 0, -1, 0.482657,-99) , 
4, 0.999048, 0, 0, 0.499366,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0080702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43896, 1, 1, 0.526226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490661,-99) , 
3, 7.15655, 1, 0, 0.500719,-99) , 
4, 0.999048, 1, 0, 0.502448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480532,-99) , 
3, 9.35582, 1, 0, 0.501415,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.00614216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499617,-99) , 
5, 0.263765, 0, 0, 0.501288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479457,-99) , 
0, 0.490471, 0, 0, 0.500542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476568,-99) , 
1, 0.0237826, 1, 0, 0.499906,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.00790447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.21041, 0, 1, 0.50284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488393,-99) , 
0, 0.491424, 0, 0, 0.502106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477066,-99) , 
4, 0.998095, 0, 0, 0.501256,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.00585222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516887,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.499027,-99) , 
5, 0.619671, 0, 0, 0.499911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480864,-99) , 
3, 2.39853, 0, 0, 0.490966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47379,-99) , 
5, 0.0764118, 1, 0, 0.484649,-99) , 
0, 0.492376, 0, 0, 0.498675,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.00813366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493054,-99) , 
5, -0.459712, 0, 0, 0.506789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498775,-99) , 
3, 4.67221, 0, 0, 0.500289,-99) , 
2, 0.071533, 0, 0, 0.501267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479113,-99) , 
0, 0.490471, 0, 0, 0.500507,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.00610449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499799,-99) , 
4, 0.99966, 1, 0, 0.50102,-99) , 
4, 0.997619, 1, 0, 0.502065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483467,-99) , 
3, 9.50017, 1, 0, 0.501219,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.014473);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498508,-99) , 
4, 0.999997, 0, 0, 0.505376,-99) , 
NN(
0, 
0, 
-1, -0.550029, 0, -1, 0.496556,-99) , 
4, 0.999932, 0, 0, 0.50263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474873,-99) , 
4, 0.998571, 0, 0, 0.501335,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0113093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496112,-99) , 
6, 0.00226717, 0, 0, 0.502727,-99) , 
NN(
0, 
0, 
-1, 0.0232602, 1, -1, 0.487946,-99) , 
6, 0.0238067, 1, 0, 0.501936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47122,-99) , 
5, -0.108108, 1, 0, 0.486064,-99) , 
0, 0.491424, 0, 0, 0.501087,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.00648393);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4836,-99) , 
3, 9.36036, 1, 0, 0.501707,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0113594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497463,-99) , 
4, 0.999955, 1, 0, 0.499847,-99) , 
3, 9.11404, 0, 0, 0.50152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502865,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.483018,-99) , 
5, 0.526111, 0, 0, 0.488259,-99) , 
4, 0.999524, 0, 0, 0.50001,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.010773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497457,-99) , 
5, -0.280134, 1, 0, 0.499861,-99) , 
3, 9.36885, 0, 0, 0.501489,-99) , 
NN(
0, 
0, 
-1, 0.500947, 1, -1, 0.486873,-99) , 
4, 0.999524, 0, 0, 0.499848,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0153871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.42585, 1, 1, 0.527399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498938,-99) , 
5, -0.190119, 1, 0, 0.503133,-99) , 
4, 0.999048, 1, 0, 0.504804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484578,-99) , 
2, 0.112394, 1, 0, 0.500373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459138,-99) , 
2, -0.214085, 0, 0, 0.493826,-99) , 
3, 4.73198, 1, 0, 0.502595,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0138161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495532,-99) , 
3, 3.67782, 1, 0, 0.503131,-99) , 
2, -0.214156, 1, 0, 0.504251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479328,-99) , 
3, 9.4861, 1, 0, 0.503127,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.00640344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36655, 0, 1, 0.501638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483893,-99) , 
4, 0.999252, 0, 0, 0.500982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475836,-99) , 
4, 0.998571, 0, 0, 0.499806,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.00612113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499908,-99) , 
4, 0.999524, 1, 0, 0.500975,-99) , 
3, 9.31083, 0, 0, 0.501877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476245,-99) , 
4, 0.998572, 0, 0, 0.500673,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.00956337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498319,-99) , 
2, -0.0724948, 1, 0, 0.499489,-99) , 
3, 9.11533, 0, 0, 0.500888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478536,-99) , 
0, 0.50063, 1, 0, 0.492721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477678,-99) , 
0, 0.494281, 0, 0, 0.488787,-99) , 
4, 0.999524, 0, 0, 0.499515,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0118778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493549,-99) , 
3, 5.41152, 1, 0, 0.501782,-99) , 
3, 9.36948, 0, 0, 0.503187,-99) , 
NN(
0, 
0, 
-1, 0.99771, 0, -1, 0.483985,-99) , 
4, 0.999524, 0, 0, 0.501044,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0105385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.435922, 0, 1, 0.522505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496152,-99) , 
5, -0.0971697, 0, 0, 0.499079,-99) , 
4, 0.999048, 1, 0, 0.50065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481007,-99) , 
3, 9.29254, 1, 0, 0.499707,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.00923335);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490954,-99) , 
2, -0.214085, 0, 0, 0.502271,-99) , 
NN(
0, 
0, 
-1, 0.999819, 1, -1, 0.485416,-99) , 
5, 0.525815, 1, 0, 0.501023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47618,-99) , 
4, 0.998095, 0, 0, 0.500192,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.00668231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498696,-99) , 
2, -0.212152, 1, 0, 0.499293,-99) , 
4, 0.997619, 1, 0, 0.500125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479877,-99) , 
3, 9.5132, 1, 0, 0.499222,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.00748779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91322, 1, 1, 0.519068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498815,-99) , 
0, 0.490472, 1, 0, 0.499339,-99) , 
4, 0.999048, 1, 0, 0.500658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476283,-99) , 
3, 9.45715, 1, 0, 0.49956,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.00689177);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473715,-99) , 
3, 9.26544, 1, 0, 0.500978,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.00602029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485441,-99) , 
3, 7.12201, 1, 0, 0.49998,-99) , 
5, 0.619671, 0, 0, 0.500954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481134,-99) , 
3, 9.31046, 1, 0, 0.500019,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.00726353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.23752, 0, 1, 0.502604,-99) , 
NN(
0, 
0, 
-1, 4.64026, 1, -1, 0.495639,-99) , 
4, 0.999887, 0, 0, 0.50089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475028,-99) , 
4, 0.997619, 0, 0, 0.500188,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.00928268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470539,-99) , 
3, 9.52807, 1, 0, 0.501952,-99) , 
NN(
0, 
0, 
-1, -0.0681339, 0, -1, 0.496405,-99) , 
5, -0.190945, 0, 0, 0.499546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484896,-99) , 
1, 0.0239326, 1, 0, 0.499163,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00699175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499172,-99) , 
4, 0.999524, 1, 0, 0.49998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486691,-99) , 
0, 0.505437, 1, 0, 0.499483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479337,-99) , 
3, 2.40843, 0, 0, 0.495072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468443,-99) , 
5, 0.077311, 1, 0, 0.485455,-99) , 
0, 0.492376, 0, 0, 0.49835,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.00582699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499523,-99) , 
2, 0.221502, 0, 0, 0.500189,-99) , 
3, 9.36885, 0, 0, 0.501265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481432,-99) , 
4, 0.998571, 0, 0, 0.500339,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.00487379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27951, 0, 1, 0.500827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485646,-99) , 
0, 0.505301, 1, 0, 0.500237,-99) , 
NN(
0, 
0, 
-1, -0.103177, 1, -1, 0.478087,-99) , 
0, 0.491424, 0, 0, 0.499069,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.00682515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493714,-99) , 
3, 9.21041, 1, 0, 0.502336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478997,-99) , 
1, 0.0243815, 1, 0, 0.501742,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0125598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497207,-99) , 
3, 9.2439, 0, 0, 0.499787,-99) , 
NN(
0, 
0, 
-1, 4.62545, 1, -1, 0.49235,-99) , 
4, 0.999887, 0, 0, 0.497963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474046,-99) , 
4, 0.997619, 0, 0, 0.497317,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.008282);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481011,-99) , 
3, 9.50054, 1, 0, 0.502454,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.00849379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499037,-99) , 
2, 0.132326, 0, 0, 0.499894,-99) , 
3, 9.32412, 0, 0, 0.501347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488009,-99) , 
2, -0.0712034, 1, 0, 0.494293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474052,-99) , 
5, -0.0100905, 0, 0, 0.488636,-99) , 
4, 0.999524, 0, 0, 0.499905,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0104845);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494667,-99) , 
0, 0.492377, 0, 0, 0.503112,-99) , 
NN(
0, 
0, 
-1, 0.637703, 0, -1, 0.487387,-99) , 
5, 0.534544, 1, 0, 0.50199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474533,-99) , 
4, 0.998095, 0, 0, 0.50108,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.00886898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498221,-99) , 
2, -0.207075, 1, 0, 0.499269,-99) , 
4, 0.998095, 1, 0, 0.500621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484895,-99) , 
3, 9.36655, 1, 0, 0.499884,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.00964643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32119, 0, 1, 0.503669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483437,-99) , 
4, 0.99932, 0, 0, 0.50279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483153,-99) , 
4, 0.998572, 0, 0, 0.501866,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.00881475);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493091,-99) , 
4, 0.999932, 0, 0, 0.498901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474042,-99) , 
4, 0.998571, 0, 0, 0.497938,-99) , 
5, 0.624794, 0, 0, 0.498719,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.00962428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478421,-99) , 
2, -0.214086, 0, 0, 0.50133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487704,-99) , 
0, 0.499133, 1, 0, 0.497158,-99) , 
5, 0.173504, 1, 0, 0.500165,-99) , 
NN(
0, 
0, 
-1, -0.105653, 1, -1, 0.485271,-99) , 
0, 0.491424, 0, 0, 0.49937,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.00749826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497834,-99) , 
2, 0.215639, 0, 0, 0.498499,-99) , 
3, 8.97184, 0, 0, 0.499177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47411,-99) , 
4, 0.997619, 0, 0, 0.498499,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.00476388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499885,-99) , 
0, 0.491424, 1, 0, 0.500438,-99) , 
4, 0.997619, 1, 0, 0.50176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489452,-99) , 
3, 9.29639, 1, 0, 0.501172,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0123868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.684973, 0, 1, 0.508332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497011,-99) , 
6, 0.0136008, 0, 0, 0.499206,-99) , 
5, 0.263734, 0, 0, 0.501345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465858,-99) , 
5, -0.556684, 1, 0, 0.486296,-99) , 
6, 0.0238014, 1, 0, 0.500533,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.00687889);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497035,-99) , 
4, 0.999886, 0, 0, 0.505929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491755,-99) , 
5, 0.347249, 1, 0, 0.498942,-99) , 
2, 0.0711709, 0, 0, 0.499971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468488,-99) , 
4, 0.997619, 0, 0, 0.499137,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.00872568);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513562,-99) , 
NN(
NN(
0, 
0, 
-1, 8.44929, 0, 1, 0.502402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44431,-99) , 
3, 11.0574, 1, 0, 0.500788,-99) , 
5, 0.61968, 0, 0, 0.501421,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.00729234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498747,-99) , 
2, 0.213641, 0, 0, 0.499421,-99) , 
4, 0.998095, 1, 0, 0.500568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480692,-99) , 
3, 9.4861, 1, 0, 0.499667,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.00595937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499483,-99) , 
3, 9.53758, 0, 0, 0.500382,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.492671,-99) , 
5, 0.437072, 1, 0, 0.499521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469281,-99) , 
4, 0.998095, 0, 0, 0.498529,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.00739713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.08744, 0, 1, 0.502492,-99) , 
NN(
0, 
0, 
-1, -0.0122412, 1, -1, 0.4906,-99) , 
0, 0.492376, 0, 0, 0.501574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471678,-99) , 
4, 0.997619, 0, 0, 0.500778,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.00929964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44372, 1, 1, 0.519537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497677,-99) , 
0, 0.504757, 0, 0, 0.498564,-99) , 
4, 0.999048, 1, 0, 0.499951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483257,-99) , 
3, 9.4861, 1, 0, 0.499204,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0101526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.22577, 0, 1, 0.503102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489136,-99) , 
2, -0.214085, 0, 0, 0.502426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525134,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.489932,-99) , 
5, 0.682691, 0, 0, 0.495986,-99) , 
5, 0.348726, 1, 0, 0.501305,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.00948576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49763,-99) , 
0, 0.490471, 1, 0, 0.498425,-99) , 
3, 9.31046, 0, 0, 0.499287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472833,-99) , 
4, 0.998572, 0, 0, 0.498069,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.00596148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488957,-99) , 
0, 0.491061, 0, 0, 0.500759,-99) , 
5, -0.820016, 1, 0, 0.501496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480109,-99) , 
0, 0.505709, 1, 0, 0.500889,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.00803568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498306,-99) , 
2, 0.0767159, 0, 0, 0.499332,-99) , 
4, 0.998095, 1, 0, 0.500285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477692,-99) , 
3, 9.45752, 1, 0, 0.499253,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.00729137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497214,-99) , 
5, -0.466867, 0, 0, 0.515129,-99) , 
NN(
0, 
0, 
-1, -0.730036, 1, 1, 0.501299,-99) , 
6, 0.0136038, 0, 0, 0.502492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459003,-99) , 
5, -0.557101, 1, 0, 0.481202,-99) , 
6, 0.0238067, 1, 0, 0.50136,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.00627489);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47872,-99) , 
3, 9.36036, 1, 0, 0.501165,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0107484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498472,-99) , 
3, 1.88245, 1, 0, 0.514671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496853,-99) , 
6, 0.0238014, 0, 0, 0.497686,-99) , 
4, 0.999048, 1, 0, 0.498812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474966,-99) , 
3, 9.44308, 1, 0, 0.497744,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.00662927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.2801, 0, 1, 0.50186,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.489381,-99) , 
4, 0.99932, 0, 0, 0.501074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463553,-99) , 
4, 0.997619, 0, 0, 0.500079,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.00951181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497404,-99) , 
4, 0.999728, 1, 0, 0.499078,-99) , 
3, 9.35582, 0, 0, 0.49989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478837,-99) , 
4, 0.998095, 0, 0, 0.499176,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0119352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485375,-99) , 
4, 0.999932, 0, 0, 0.50836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499391,-99) , 
2, -0.0874709, 1, 0, 0.500275,-99) , 
3, 4.73749, 0, 0, 0.501902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469969,-99) , 
4, 0.998571, 0, 0, 0.500447,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0122287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0199524, 1, 1, 0.506947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496994,-99) , 
0, 0.493329, 1, 0, 0.499093,-99) , 
3, 1.89073, 1, 0, 0.502578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481439,-99) , 
3, 9.4861, 1, 0, 0.501627,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.00779428);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.35582, 0, 1, 0.503193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481739,-99) , 
4, 0.998571, 0, 0, 0.502191,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.00926077);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48198,-99) , 
3, 9.19958, 1, 0, 0.502881,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0082586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483128,-99) , 
6, 0.0238067, 1, 0, 0.501439,-99) , 
5, -0.820016, 1, 0, 0.502059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479794,-99) , 
0, 0.490472, 0, 0, 0.501298,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0117476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88248, 1, 1, 0.527722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496744,-99) , 
2, -0.20818, 1, 0, 0.49729,-99) , 
4, 0.999048, 1, 0, 0.499371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480437,-99) , 
3, 9.44308, 1, 0, 0.498505,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.00725882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498485,-99) , 
2, 0.215639, 0, 0, 0.499063,-99) , 
4, 0.997619, 1, 0, 0.500038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481346,-99) , 
3, 9.26544, 1, 0, 0.499147,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.00660424);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.35582, 0, 1, 0.502751,-99) , 
NN(
0, 
0, 
-1, 0.34882, 0, -1, 0.489139,-99) , 
4, 0.999048, 0, 0, 0.501827,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0154713);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497432,-99) , 
5, -0.467592, 0, 0, 0.51512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493388,-99) , 
5, -0.0973265, 0, 0, 0.49947,-99) , 
6, 0.0136033, 0, 0, 0.500825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459867,-99) , 
5, -0.556122, 1, 0, 0.485704,-99) , 
6, 0.0238067, 1, 0, 0.500008,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.00674837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499511,-99) , 
0, 0.492376, 1, 0, 0.500614,-99) , 
3, 9.36885, 0, 0, 0.501758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476716,-99) , 
5, 0.439137, 0, 0, 0.486349,-99) , 
4, 0.999048, 0, 0, 0.500711,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.00793647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.32427, 0, 1, 0.503018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485578,-99) , 
0, 0.495777, 0, 0, 0.494614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475989,-99) , 
0, 0.5019, 1, 0, 0.490482,-99) , 
4, 0.999524, 0, 0, 0.501601,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.00467923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499273,-99) , 
4, 0.999093, 1, 0, 0.499935,-99) , 
3, 9.29639, 0, 0, 0.500543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480656,-99) , 
4, 0.997619, 0, 0, 0.500005,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.00623911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.11225, 0, 1, 0.501531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475952,-99) , 
4, 0.99941, 0, 0, 0.500724,-99) , 
NN(
0, 
0, 
-1, 0.499044, 1, -1, 0.484783,-99) , 
4, 0.999048, 0, 0, 0.499644,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.00557453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499278,-99) , 
4, 0.999184, 1, 0, 0.499835,-99) , 
3, 9.36655, 0, 0, 0.500456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476451,-99) , 
4, 0.998571, 0, 0, 0.499356,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.00725451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499688,-99) , 
3, 9.24052, 0, 0, 0.501068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46913,-99) , 
5, 0.168288, 1, 0, 0.486364,-99) , 
4, 0.999456, 0, 0, 0.500011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468999,-99) , 
4, 0.998095, 0, 0, 0.498989,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0048788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499898,-99) , 
0, 0.490472, 1, 0, 0.500621,-99) , 
3, 9.025, 0, 0, 0.501602,-99) , 
NN(
0, 
0, 
-1, -0.0712969, 1, -1, 0.488631,-99) , 
4, 0.999048, 0, 0, 0.500722,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.00600199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499621,-99) , 
2, -0.0649022, 1, 0, 0.500929,-99) , 
4, 0.998095, 1, 0, 0.501753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483666,-99) , 
3, 9.45752, 1, 0, 0.50094,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.00987182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494246,-99) , 
5, 0.439722, 1, 0, 0.501947,-99) , 
4, 0.998571, 1, 0, 0.502797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473748,-99) , 
3, 9.50017, 1, 0, 0.501525,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.00867616);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.503632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489996,-99) , 
2, -0.0711707, 0, 0, 0.497902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483804,-99) , 
0, 0.499043, 1, 0, 0.492217,-99) , 
4, 0.999524, 0, 0, 0.502344,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.00566691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32349, 0, 1, 0.50154,-99) , 
NN(
0, 
0, 
-1, 0.354093, 1, -1, 0.489844,-99) , 
4, 0.999433, 0, 0, 0.500661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473497,-99) , 
4, 0.997619, 0, 0, 0.499939,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0136345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238016, 0, 1, 0.506568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494288,-99) , 
2, 0.0305725, 0, 0, 0.496987,-99) , 
5, -0.27782, 1, 0, 0.500583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462955,-99) , 
5, 0.0789283, 0, 0, 0.483813,-99) , 
2, -0.214267, 0, 0, 0.499674,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0119232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492388,-99) , 
4, 0.999932, 0, 0, 0.505884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495169,-99) , 
3, 2.27241, 1, 0, 0.500136,-99) , 
3, 4.64065, 0, 0, 0.501332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478875,-99) , 
4, 0.998571, 0, 0, 0.500297,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.00779249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492972,-99) , 
5, -0.551263, 0, 0, 0.499766,-99) , 
4, 0.998095, 1, 0, 0.500659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477866,-99) , 
3, 9.50017, 1, 0, 0.499645,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.00564543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513165,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.498265,-99) , 
5, 0.619682, 0, 0, 0.499022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478615,-99) , 
1, -0.0239558, 0, 0, 0.498479,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.00803196);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488269,-99) , 
3, 1.92373, 1, 0, 0.515716,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.498447,-99) , 
4, 0.999048, 1, 0, 0.499601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479042,-99) , 
3, 9.5109, 1, 0, 0.498684,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0100723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48623,-99) , 
0, 0.495233, 0, 0, 0.50614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497759,-99) , 
5, -0.614347, 1, 0, 0.499076,-99) , 
5, 0.34973, 0, 0, 0.500194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476017,-99) , 
4, 0.998095, 0, 0, 0.499386,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00522685);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.501992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484328,-99) , 
3, 9.44308, 1, 0, 0.50119,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.00730944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49831,-99) , 
0, 0.492376, 1, 0, 0.498981,-99) , 
3, 9.27895, 0, 0, 0.500001,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.487165,-99) , 
4, 0.999048, 0, 0, 0.499127,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.00647637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49763,-99) , 
3, 4.7148, 1, 0, 0.501152,-99) , 
NN(
0, 
0, 
-1, 0.167, 1, -1, 0.491006,-99) , 
0, 0.492784, 0, 0, 0.500167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480068,-99) , 
0, 0.505709, 1, 0, 0.4996,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.00668758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32298, 0, 1, 0.50226,-99) , 
NN(
0, 
0, 
-1, 0.0776347, 0, -1, 0.492228,-99) , 
4, 0.99966, 0, 0, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480638,-99) , 
4, 0.997619, 0, 0, 0.500542,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0101448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.47098, 1, 1, 0.519899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498172,-99) , 
4, 0.999955, 1, 0, 0.500409,-99) , 
4, 0.999524, 1, 0, 0.5026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487837,-99) , 
3, 9.5109, 1, 0, 0.501942,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.00745337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498718,-99) , 
2, -0.213901, 1, 0, 0.499312,-99) , 
3, 9.27716, 0, 0, 0.500235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469747,-99) , 
2, 0.0715136, 0, 0, 0.484266,-99) , 
4, 0.999048, 0, 0, 0.49916,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.00749673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489084,-99) , 
3, 9.4861, 1, 0, 0.502293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478982,-99) , 
1, 0.0239915, 1, 0, 0.501678,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0164659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494894,-99) , 
4, 0.999995, 0, 0, 0.501518,-99) , 
NN(
0, 
0, 
-1, 4.5488, 1, -1, 0.495596,-99) , 
4, 0.999887, 0, 0, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47039,-99) , 
4, 0.997619, 0, 0, 0.499275,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.00681455);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484673,-99) , 
3, 9.38746, 1, 0, 0.501992,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.00712772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495718,-99) , 
2, 0.0713725, 1, 0, 0.504239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486341,-99) , 
1, -3.83337e-05, 1, 0, 0.4984,-99) , 
1, 0.00114773, 0, 0, 0.501016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489254,-99) , 
1, -0.0237628, 0, 0, 0.500695,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.00541087);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498667,-99) , 
5, 0.26375, 0, 0, 0.499901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486092,-99) , 
1, 0.0240341, 1, 0, 0.49954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484833,-99) , 
0, 0.490471, 0, 0, 0.49904,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0112066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493007,-99) , 
5, 0.349744, 1, 0, 0.501426,-99) , 
4, 0.998095, 1, 0, 0.502466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48994,-99) , 
5, -0.0967996, 0, 0, 0.496618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470992,-99) , 
0, 0.493329, 0, 0, 0.493411,-99) , 
3, 4.72267, 1, 0, 0.500652,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0051296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.689277, 0, 1, 0.509694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48199,-99) , 
4, 0.998572, 0, 0, 0.499935,-99) , 
5, 0.534541, 0, 0, 0.500741,-99) , 
NN(
0, 
0, 
-1, -0.101977, 1, -1, 0.483207,-99) , 
0, 0.491424, 0, 0, 0.499806,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0253573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467877,-99) , 
5, -0.641202, 0, 0, 0.505523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492985,-99) , 
5, -0.640658, 1, 0, 0.496608,-99) , 
6, 0.00566679, 0, 0, 0.500291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45856,-99) , 
5, -0.556694, 1, 0, 0.48403,-99) , 
6, 0.0238014, 1, 0, 0.499421,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0131919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487675,-99) , 
4, 0.999887, 0, 0, 0.508971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496875,-99) , 
2, 0.0883827, 0, 0, 0.498022,-99) , 
3, 4.72267, 0, 0, 0.500226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474991,-99) , 
4, 0.997619, 0, 0, 0.499553,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.00543899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486345,-99) , 
4, 0.998572, 0, 0, 0.500741,-99) , 
5, 0.624801, 0, 0, 0.501343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483296,-99) , 
0, 0.505709, 1, 0, 0.500831,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.00762813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49885,-99) , 
2, 0.275062, 0, 0, 0.499841,-99) , 
2, -0.214521, 1, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482142,-99) , 
3, 9.51383, 1, 0, 0.500211,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.00845788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499668,-99) , 
5, -0.010169, 1, 0, 0.502196,-99) , 
4, 0.998571, 1, 0, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477536,-99) , 
3, 9.4861, 1, 0, 0.502013,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0126463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489877,-99) , 
3, 4.83374, 1, 0, 0.502654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49587,-99) , 
6, 0.0238067, 0, 0, 0.497835,-99) , 
5, -0.0122956, 0, 0, 0.499839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479233,-99) , 
0, 0.505709, 1, 0, 0.499257,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0100338);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498311,-99) , 
5, -0.0997618, 0, 0, 0.508392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497268,-99) , 
2, -0.0326773, 1, 0, 0.498821,-99) , 
3, 4.62545, 0, 0, 0.500819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483417,-99) , 
4, 0.997619, 0, 0, 0.500352,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.00991112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619682, 0, 1, 0.504268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489142,-99) , 
6, 0.0238014, 1, 0, 0.50346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502184,-99) , 
NN(
0, 
0, 
-1, -0.102313, 1, -1, 0.490795,-99) , 
2, -0.0718544, 1, 0, 0.493594,-99) , 
0, 0.502852, 1, 0, 0.502302,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.00945845);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496151,-99) , 
3, 4.87749, 1, 0, 0.505652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498096,-99) , 
5, -0.691993, 1, 0, 0.49954,-99) , 
5, 0.0778183, 0, 0, 0.50171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48254,-99) , 
1, 0.0236427, 1, 0, 0.501195,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.00722275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238067, 0, 1, 0.505624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499956,-99) , 
2, 0.214346, 0, 0, 0.501526,-99) , 
5, -0.190755, 1, 0, 0.503349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484159,-99) , 
5, 0.0772504, 1, 0, 0.494624,-99) , 
0, 0.492376, 0, 0, 0.502648,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.010729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498309,-99) , 
0, 0.504757, 0, 0, 0.499236,-99) , 
3, 9.17389, 0, 0, 0.501333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502563,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.483357,-99) , 
5, 0.529044, 0, 0, 0.488257,-99) , 
4, 0.999524, 0, 0, 0.499879,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0193458);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470007,-99) , 
4, 0.999048, 0, 0, 0.507336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464853,-99) , 
5, -0.730713, 0, 0, 0.500507,-99) , 
6, 0.00453343, 1, 0, 0.503892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468936,-99) , 
5, -0.556112, 1, 0, 0.487394,-99) , 
6, 0.0238014, 1, 0, 0.503004,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.00780352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01047, 1, 1, 0.518985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485018,-99) , 
4, 0.99966, 0, 0, 0.500227,-99) , 
4, 0.999524, 1, 0, 0.502331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480916,-99) , 
3, 9.36655, 1, 0, 0.501356,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.00778013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499914,-99) , 
5, 0.252513, 0, 0, 0.504819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498043,-99) , 
4, 0.999093, 1, 0, 0.498985,-99) , 
3, 4.63705, 0, 0, 0.500194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46988,-99) , 
4, 0.997619, 0, 0, 0.499394,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.00506071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499886,-99) , 
3, 0.536721, 1, 0, 0.500535,-99) , 
4, 0.997619, 1, 0, 0.501198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475137,-99) , 
3, 9.19958, 1, 0, 0.499951,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00502753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499396,-99) , 
4, 0.999093, 1, 0, 0.499964,-99) , 
3, 9.35582, 0, 0, 0.500956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484451,-99) , 
4, 0.998095, 0, 0, 0.500404,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0103472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496968,-99) , 
0, 0.49809, 0, 0, 0.499823,-99) , 
3, 9.32349, 0, 0, 0.50122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509904,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.48474,-99) , 
5, 0.534591, 0, 0, 0.491103,-99) , 
4, 0.999524, 0, 0, 0.500086,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.00893003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499239,-99) , 
4, 0.999955, 1, 0, 0.50191,-99) , 
3, 9.27716, 0, 0, 0.502904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4804,-99) , 
2, 0.0715405, 0, 0, 0.490531,-99) , 
4, 0.999048, 0, 0, 0.502069,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0101568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999146, 1, 1, 0.515063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498826,-99) , 
4, 0.999977, 0, 0, 0.50197,-99) , 
4, 0.999524, 1, 0, 0.503431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481699,-99) , 
3, 9.35619, 1, 0, 0.502422,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.00881142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485555,-99) , 
4, 0.999683, 0, 0, 0.501034,-99) , 
3, 9.23752, 0, 0, 0.502247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482543,-99) , 
0, 0.495868, 0, 0, 0.492724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478869,-99) , 
0, 0.500947, 1, 0, 0.488888,-99) , 
4, 0.999524, 0, 0, 0.500751,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.00689994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498705,-99) , 
5, 0.43971, 0, 0, 0.499728,-99) , 
3, 9.36834, 0, 0, 0.500526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478221,-99) , 
5, 0.438718, 0, 0, 0.487723,-99) , 
4, 0.999048, 0, 0, 0.499658,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.00830403);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.502889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504225,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.482355,-99) , 
5, 0.529389, 0, 0, 0.487957,-99) , 
4, 0.999524, 0, 0, 0.501224,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.00436202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26643, 0, 1, 0.501367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488777,-99) , 
4, 0.998866, 0, 0, 0.500961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479748,-99) , 
4, 0.997619, 0, 0, 0.500395,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.00488215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49966,-99) , 
4, 0.999547, 1, 0, 0.500518,-99) , 
4, 0.997619, 1, 0, 0.501406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488467,-99) , 
3, 9.46788, 1, 0, 0.500817,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.00670774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49893,-99) , 
4, 0.999637, 1, 0, 0.499804,-99) , 
4, 0.998095, 1, 0, 0.500877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483778,-99) , 
3, 9.36036, 1, 0, 0.500084,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0058533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.501926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48964,-99) , 
6, 0.0237785, 1, 0, 0.50127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486575,-99) , 
0, 0.504757, 1, 0, 0.500537,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.00657562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498892,-99) , 
0, 0.503805, 0, 0, 0.499561,-99) , 
4, 0.997619, 1, 0, 0.500462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478922,-99) , 
3, 9.45752, 1, 0, 0.499496,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.00321762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.50017, 0, 1, 0.500646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490645,-99) , 
2, -0.214032, 0, 0, 0.500124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481203,-99) , 
0, 0.505709, 1, 0, 0.49958,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.00734745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494583,-99) , 
5, 0.256572, 1, 0, 0.49972,-99) , 
4, 0.998572, 1, 0, 0.500911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483105,-99) , 
3, 9.27988, 1, 0, 0.500063,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.00384544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.13263, 0, 1, 0.500683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48047,-99) , 
0, 0.505709, 1, 0, 0.500144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484016,-99) , 
2, 0.214243, 1, 0, 0.49934,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.00671075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496837,-99) , 
0, 0.49809, 1, 0, 0.498552,-99) , 
3, 9.35582, 0, 0, 0.499434,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.484524,-99) , 
4, 0.999048, 0, 0, 0.498432,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0100158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49662,-99) , 
0, 0.49428, 1, 0, 0.497807,-99) , 
4, 0.998095, 1, 0, 0.498845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481088,-99) , 
3, 9.29639, 1, 0, 0.498011,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.00572183);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483906,-99) , 
3, 9.36036, 1, 0, 0.50138,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0105565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496711,-99) , 
5, -0.194514, 0, 0, 0.499881,-99) , 
3, 9.32412, 0, 0, 0.500954,-99) , 
NN(
0, 
0, 
-1, 0.99771, 0, -1, 0.483922,-99) , 
4, 0.999524, 0, 0, 0.49906,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0114397);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495782,-99) , 
2, -0.0712945, 0, 0, 0.503358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48004,-99) , 
5, -0.376323, 0, 0, 0.495497,-99) , 
0, 0.50326, 1, 0, 0.502494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484024,-99) , 
3, 2.39339, 0, 0, 0.49392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477587,-99) , 
5, 0.0768276, 1, 0, 0.487916,-99) , 
0, 0.492376, 0, 0, 0.50133,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0103257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.21244, 0, 1, 0.501542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473153,-99) , 
2, -0.214102, 0, 0, 0.500221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521753,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.487791,-99) , 
5, 0.679658, 0, 0, 0.49245,-99) , 
5, 0.259749, 1, 0, 0.498463,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0122835);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498951,-99) , 
6, 0.0237787, 0, 0, 0.501946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491736,-99) , 
5, 0.328211, 0, 0, 0.495238,-99) , 
5, -0.187592, 1, 0, 0.498257,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.488955,-99) , 
0, 0.494281, 0, 0, 0.496731,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.00639697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499261,-99) , 
4, 0.99966, 1, 0, 0.500222,-99) , 
4, 0.997619, 1, 0, 0.501141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479585,-99) , 
3, 9.50054, 1, 0, 0.5002,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.00967696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36885, 0, 1, 0.502668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488955,-99) , 
0, 0.5019, 0, 0, 0.492089,-99) , 
4, 0.999864, 0, 0, 0.500517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479194,-99) , 
4, 0.998571, 0, 0, 0.499534,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.00924113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497689,-99) , 
2, 0.273974, 0, 0, 0.498598,-99) , 
2, -0.215312, 1, 0, 0.499822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484113,-99) , 
3, 9.50054, 1, 0, 0.499124,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0058313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32298, 0, 1, 0.501634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478533,-99) , 
5, 0.263843, 1, 0, 0.491009,-99) , 
4, 0.99932, 0, 0, 0.500969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467752,-99) , 
4, 0.997619, 0, 0, 0.500105,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.00599306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499468,-99) , 
2, -0.0661331, 1, 0, 0.50046,-99) , 
4, 0.997619, 1, 0, 0.501401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481396,-99) , 
3, 9.4861, 1, 0, 0.500521,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.00832982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489609,-99) , 
4, 0.999887, 0, 0, 0.505802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499267,-99) , 
3, 0.541343, 1, 0, 0.500318,-99) , 
3, 4.69999, 0, 0, 0.501433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47539,-99) , 
4, 0.997619, 0, 0, 0.500752,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00934478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497953,-99) , 
0, 0.5019, 0, 0, 0.499213,-99) , 
3, 9.36834, 0, 0, 0.500365,-99) , 
NN(
0, 
0, 
-1, 0.500947, 1, -1, 0.487176,-99) , 
4, 0.999524, 0, 0, 0.498895,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.00660012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32298, 0, 1, 0.501425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488743,-99) , 
5, 0.525278, 0, 0, 0.493713,-99) , 
4, 0.999524, 0, 0, 0.500617,-99) , 
NN(
0, 
0, 
-1, -0.10415, 1, -1, 0.479741,-99) , 
0, 0.491424, 0, 0, 0.49951,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00469864);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.501752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48495,-99) , 
3, 9.4861, 1, 0, 0.500997,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.00595129);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.35582, 0, 1, 0.502248,-99) , 
NN(
0, 
0, 
-1, 0.258506, 0, -1, 0.486791,-99) , 
4, 0.999048, 0, 0, 0.501223,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0103619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49388,-99) , 
1, -0.00339914, 0, 0, 0.500842,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.492461,-99) , 
6, 0.0238067, 1, 0, 0.500391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481162,-99) , 
4, 0.997619, 0, 0, 0.499878,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.010436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496323,-99) , 
2, 0.0288013, 0, 0, 0.498088,-99) , 
3, 9.23701, 0, 0, 0.49915,-99) , 
NN(
0, 
0, 
-1, 0.259886, 0, -1, 0.485965,-99) , 
4, 0.999048, 0, 0, 0.498274,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.00840531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495551,-99) , 
5, -0.0120215, 1, 0, 0.499191,-99) , 
4, 0.998572, 1, 0, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477901,-99) , 
3, 9.51383, 1, 0, 0.499135,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.00545312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525954,-99) , 
NN(
0, 
0, 
-1, 7.26651, 1, -1, 0.498815,-99) , 
4, 0.998571, 1, 0, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488539,-99) , 
3, 9.50017, 1, 0, 0.499547,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0050437);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.36655, 0, 1, 0.501892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476409,-99) , 
5, 0.257152, 0, 0, 0.492689,-99) , 
4, 0.999048, 0, 0, 0.501272,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0141221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.516925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496036,-99) , 
2, -0.0201128, 1, 0, 0.499306,-99) , 
4, 0.999048, 1, 0, 0.50049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489973,-99) , 
0, 0.496188, 1, 0, 0.493632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473667,-99) , 
2, -0.214134, 0, 0, 0.490362,-99) , 
3, 4.81005, 1, 0, 0.498514,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.00770522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49562,-99) , 
5, 0.169804, 1, 0, 0.499809,-99) , 
4, 0.998572, 1, 0, 0.501193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485211,-99) , 
3, 9.4861, 1, 0, 0.500477,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0143095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497151,-99) , 
2, -0.0178895, 1, 0, 0.499464,-99) , 
4, 0.998571, 1, 0, 0.501244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479724,-99) , 
2, -0.112255, 0, 0, 0.498841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469328,-99) , 
2, 0.214202, 1, 0, 0.494499,-99) , 
3, 4.80966, 1, 0, 0.499926,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.00886436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498079,-99) , 
3, 3.17255, 1, 0, 0.501676,-99) , 
4, 0.997619, 1, 0, 0.502698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484433,-99) , 
3, 9.27951, 1, 0, 0.50184,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.00405581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49214,-99) , 
5, 0.525801, 1, 0, 0.499575,-99) , 
3, 9.31083, 0, 0, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477657,-99) , 
4, 0.998095, 0, 0, 0.499503,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0108287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498439,-99) , 
3, 0.763461, 1, 0, 0.500397,-99) , 
4, 0.998095, 1, 0, 0.501454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482574,-99) , 
2, -0.112067, 0, 0, 0.49622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470346,-99) , 
2, 0.214401, 1, 0, 0.49249,-99) , 
3, 4.72267, 1, 0, 0.499655,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.016184);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490188,-99) , 
6, 0.0101987, 1, 0, 0.506765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494762,-99) , 
6, 0.0136006, 0, 0, 0.49784,-99) , 
5, -0.0070614, 0, 0, 0.501642,-99) , 
NN(
0, 
0, 
-1, -0.556694, 1, -1, 0.48492,-99) , 
6, 0.0238014, 1, 0, 0.500747,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00577817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499724,-99) , 
0, 0.491424, 1, 0, 0.500281,-99) , 
3, 9.27716, 0, 0, 0.501604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478013,-99) , 
5, 0.440717, 0, 0, 0.48806,-99) , 
4, 0.999048, 0, 0, 0.500694,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.00565381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.31083, 0, 1, 0.5022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484221,-99) , 
4, 0.998571, 0, 0, 0.501371,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.00997467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0714265, 1, 1, 0.505963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497751,-99) , 
6, 0.0136006, 0, 0, 0.499792,-99) , 
5, 0.257059, 0, 0, 0.501257,-99) , 
NN(
0, 
0, 
-1, -0.556694, 1, -1, 0.483365,-99) , 
6, 0.0238014, 1, 0, 0.500302,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.00759822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.35582, 0, 1, 0.503042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490638,-99) , 
4, 0.99898, 0, 0, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477266,-99) , 
4, 0.997619, 0, 0, 0.501901,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0077015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498909,-99) , 
5, -0.331442, 1, 0, 0.501149,-99) , 
5, -0.819887, 1, 0, 0.501826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47711,-99) , 
0, 0.505709, 1, 0, 0.501129,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.00746692);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.502259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489229,-99) , 
2, 0.0715985, 0, 0, 0.499759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480766,-99) , 
0, 0.499042, 1, 0, 0.492142,-99) , 
4, 0.999524, 0, 0, 0.501126,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.00755734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47609,-99) , 
3, 9.48142, 1, 0, 0.500639,-99) , 
NN(
0, 
0, 
-1, -0.0721482, 0, -1, 0.495291,-99) , 
5, -0.371246, 0, 0, 0.499114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483007,-99) , 
1, -0.0240223, 0, 0, 0.498686,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.00624453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499184,-99) , 
2, -0.201398, 1, 0, 0.499925,-99) , 
3, 9.23815, 0, 0, 0.500922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479776,-99) , 
2, -0.0712462, 1, 0, 0.489687,-99) , 
4, 0.999048, 0, 0, 0.500164,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.00703034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496861,-99) , 
5, 0.173504, 1, 0, 0.500496,-99) , 
4, 0.998572, 1, 0, 0.501532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486897,-99) , 
3, 9.4861, 1, 0, 0.500881,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.00400352);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.501513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487774,-99) , 
3, 9.3748, 1, 0, 0.500886,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.00955158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497326,-99) , 
5, 0.347265, 0, 0, 0.49832,-99) , 
3, 9.36834, 0, 0, 0.499424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472393,-99) , 
2, 0.0715592, 0, 0, 0.487054,-99) , 
4, 0.999048, 0, 0, 0.498596,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00705468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498293,-99) , 
0, 0.491424, 1, 0, 0.499039,-99) , 
3, 9.32119, 0, 0, 0.499782,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.487496,-99) , 
4, 0.999048, 0, 0, 0.498959,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.00486826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237434, 0, 1, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489276,-99) , 
1, 0.0242763, 1, 0, 0.501358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483096,-99) , 
0, 0.490471, 0, 0, 0.500728,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00458737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499515,-99) , 
2, -0.211294, 1, 0, 0.50015,-99) , 
4, 0.997619, 1, 0, 0.500993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489252,-99) , 
3, 9.50017, 1, 0, 0.500468,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.00850987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36885, 0, 1, 0.502219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481481,-99) , 
5, 0.0766277, 0, 0, 0.493142,-99) , 
4, 0.999819, 0, 0, 0.500605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480384,-99) , 
4, 0.998095, 0, 0, 0.499934,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.00772728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497971,-99) , 
2, 0.275567, 0, 0, 0.498498,-99) , 
2, -0.214156, 1, 0, 0.499248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478074,-99) , 
3, 9.3748, 1, 0, 0.498283,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0144948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492875,-99) , 
5, 0.256256, 1, 0, 0.501563,-99) , 
4, 0.998095, 1, 0, 0.502891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489021,-99) , 
2, 0.0783906, 1, 0, 0.499984,-99) , 
NN(
0, 
0, 
-1, -0.190636, 0, -1, 0.482665,-99) , 
2, -0.0712467, 0, 0, 0.493884,-99) , 
3, 4.72267, 1, 0, 0.501078,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00398557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499564,-99) , 
3, 9.32427, 0, 0, 0.500189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488523,-99) , 
4, 0.99898, 0, 0, 0.499751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476774,-99) , 
4, 0.997619, 0, 0, 0.499141,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.00791961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499314,-99) , 
3, 9.32427, 0, 0, 0.501315,-99) , 
NN(
0, 
0, 
-1, -0.00703285, 0, -1, 0.492239,-99) , 
4, 0.999819, 0, 0, 0.499719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483502,-99) , 
4, 0.998095, 0, 0, 0.499177,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.00768536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.99149, 0, 1, 0.503011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487904,-99) , 
0, 0.494145, 0, 0, 0.49808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486498,-99) , 
0, 0.499043, 1, 0, 0.493402,-99) , 
4, 0.999524, 0, 0, 0.501942,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00590806);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499106,-99) , 
3, 9.32412, 0, 0, 0.499977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470756,-99) , 
5, 0.263843, 1, 0, 0.488457,-99) , 
4, 0.99932, 0, 0, 0.499264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476861,-99) , 
4, 0.997619, 0, 0, 0.498674,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.012892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495671,-99) , 
3, 4.80269, 1, 0, 0.503687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493877,-99) , 
2, -0.071253, 1, 0, 0.499073,-99) , 
0, 0.501083, 1, 0, 0.502615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480882,-99) , 
0, 0.490471, 0, 0, 0.501888,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.00532685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237479, 0, 1, 0.50138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48624,-99) , 
5, 0.66681, 0, 0, 0.494679,-99) , 
5, 0.5297, 1, 0, 0.500888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481545,-99) , 
4, 0.998095, 0, 0, 0.500246,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.00636624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496714,-99) , 
3, 1.86653, 1, 0, 0.516662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499384,-99) , 
0, 0.490472, 1, 0, 0.499847,-99) , 
4, 0.999048, 1, 0, 0.500958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477883,-99) , 
3, 9.36036, 1, 0, 0.499908,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0105925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.657007, 0, 1, 0.505675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497082,-99) , 
6, 0.0238014, 0, 0, 0.499127,-99) , 
5, 0.0790064, 0, 0, 0.501401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484161,-99) , 
0, 0.490471, 0, 0, 0.500823,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.00461019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499731,-99) , 
3, 9.2668, 0, 0, 0.500503,-99) , 
2, 0.214683, 0, 0, 0.501173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48442,-99) , 
4, 0.998571, 0, 0, 0.500407,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0100679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238067, 0, 1, 0.507644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482962,-99) , 
3, 9.48142, 1, 0, 0.501786,-99) , 
5, -0.368089, 1, 0, 0.503527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48345,-99) , 
0, 0.490471, 0, 0, 0.502843,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.00705492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44389, 1, 1, 0.518204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498662,-99) , 
0, 0.491424, 1, 0, 0.49931,-99) , 
4, 0.999048, 1, 0, 0.500562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483749,-99) , 
3, 9.4861, 1, 0, 0.499819,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.00803188);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.31083, 0, 1, 0.50355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486416,-99) , 
4, 0.998572, 0, 0, 0.502754,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.00727261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498251,-99) , 
4, 0.999093, 1, 0, 0.498885,-99) , 
3, 9.36834, 0, 0, 0.499849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479409,-99) , 
4, 0.998095, 0, 0, 0.499177,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0125116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484616,-99) , 
5, -0.461464, 0, 0, 0.508386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492659,-99) , 
4, 0.999887, 0, 0, 0.500061,-99) , 
0, 0.5019, 0, 0, 0.501482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471166,-99) , 
4, 0.997619, 0, 0, 0.500685,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.00908321);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496994,-99) , 
4, 0.998095, 1, 0, 0.498135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488902,-99) , 
3, 9.50017, 1, 0, 0.497746,-99) , 
0, 0.504757, 0, 0, 0.498367,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.00825575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.683952, 0, 1, 0.50952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465394,-99) , 
3, 10.7309, 1, 0, 0.50119,-99) , 
5, 0.529705, 0, 0, 0.501918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481051,-99) , 
1, 0.0240314, 1, 0, 0.50138,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0133835);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499618,-99) , 
3, 1.86391, 1, 0, 0.512493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495409,-99) , 
2, -0.0107384, 1, 0, 0.499255,-99) , 
4, 0.999524, 1, 0, 0.500723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480839,-99) , 
3, 9.27951, 1, 0, 0.499792,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.00576646);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999093, 1, 1, 0.502323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476237,-99) , 
4, 0.997619, 0, 0, 0.501642,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.00422839);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.820401, 1, 1, 0.501645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480539,-99) , 
4, 0.997619, 0, 0, 0.501088,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.00687396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498534,-99) , 
2, 0.215639, 0, 0, 0.499286,-99) , 
4, 0.997619, 1, 0, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483868,-99) , 
3, 9.44308, 1, 0, 0.499374,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.00950207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215692, 1, 1, 0.502955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486438,-99) , 
3, 9.39196, 1, 0, 0.502178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491289,-99) , 
0, 0.495777, 0, 0, 0.500898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469794,-99) , 
0, 0.501899, 1, 0, 0.495119,-99) , 
5, -0.548652, 0, 0, 0.500975,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0104773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496237,-99) , 
2, 0.020402, 0, 0, 0.498543,-99) , 
3, 9.23752, 0, 0, 0.499473,-99) , 
NN(
0, 
0, 
-1, -0.0713037, 1, -1, 0.487878,-99) , 
4, 0.999048, 0, 0, 0.4987,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0105247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491957,-99) , 
5, 0.0701059, 0, 0, 0.510493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49746,-99) , 
0, 0.499995, 0, 0, 0.502801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496882,-99) , 
2, 0.0191699, 0, 0, 0.498151,-99) , 
2, 0.0308295, 0, 0, 0.499331,-99) , 
2, -0.214019, 1, 0, 0.499947,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.00808991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32427, 0, 1, 0.503039,-99) , 
NN(
0, 
0, 
-1, 4.63429, 1, -1, 0.496495,-99) , 
4, 0.999728, 0, 0, 0.502175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467644,-99) , 
4, 0.998095, 0, 0, 0.501061,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.00947478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489,-99) , 
3, 7.15655, 1, 0, 0.502361,-99) , 
3, 9.35582, 0, 0, 0.503156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482554,-99) , 
4, 0.998571, 0, 0, 0.502217,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.011163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495288,-99) , 
3, 2.30255, 1, 0, 0.516993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497989,-99) , 
3, 4.95717, 0, 0, 0.499529,-99) , 
4, 0.999524, 1, 0, 0.50149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481446,-99) , 
3, 9.34175, 1, 0, 0.500567,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.009891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214316, 1, 1, 0.502739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494918,-99) , 
6, 0.0238067, 0, 0, 0.497667,-99) , 
5, -0.187592, 0, 0, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483068,-99) , 
4, 0.997619, 0, 0, 0.499968,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0111547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498883,-99) , 
3, 2.28466, 1, 0, 0.514261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496369,-99) , 
0, 0.492376, 1, 0, 0.497122,-99) , 
4, 0.999524, 1, 0, 0.499038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485554,-99) , 
3, 9.26544, 1, 0, 0.498392,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.00808833);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213901, 1, 1, 0.503388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481796,-99) , 
3, 9.44308, 1, 0, 0.502433,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0105838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238075, 0, 1, 0.504807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496184,-99) , 
2, 0.0712783, 0, 0, 0.498073,-99) , 
5, -0.368089, 1, 0, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471002,-99) , 
4, 0.997619, 0, 0, 0.499378,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.00951351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.349848, 0, 1, 0.503081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487232,-99) , 
2, -0.0712103, 1, 0, 0.492791,-99) , 
0, 0.493419, 0, 0, 0.501682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491501,-99) , 
5, -0.074885, 1, 0, 0.495397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485209,-99) , 
5, -0.459074, 0, 0, 0.492805,-99) , 
0, 0.502852, 1, 0, 0.500627,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.00745922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497434,-99) , 
5, -0.190125, 1, 0, 0.499469,-99) , 
3, 9.35582, 0, 0, 0.500508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478946,-99) , 
2, 0.0715866, 0, 0, 0.48791,-99) , 
4, 0.999048, 0, 0, 0.49967,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0101434);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498177,-99) , 
3, 1.86189, 1, 0, 0.513486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497063,-99) , 
0, 0.504757, 0, 0, 0.49766,-99) , 
4, 0.999524, 1, 0, 0.499435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485833,-99) , 
3, 9.2668, 1, 0, 0.498789,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.00555912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498927,-99) , 
2, -0.207075, 1, 0, 0.499656,-99) , 
3, 9.21041, 0, 0, 0.500296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481614,-99) , 
4, 0.998095, 0, 0, 0.499688,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.00620137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.501433,-99) , 
NN(
0, 
0, 
-1, 0.494961, 0, -1, 0.493436,-99) , 
3, 4.79485, 1, 0, 0.499916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483829,-99) , 
0, 0.504757, 1, 0, 0.499105,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.00745396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489981,-99) , 
3, 10.3589, 1, 0, 0.501887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481924,-99) , 
4, 0.999887, 1, 0, 0.493277,-99) , 
5, 0.534538, 1, 0, 0.501251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473787,-99) , 
4, 0.997619, 0, 0, 0.500541,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.00892387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498168,-99) , 
3, 0.775663, 1, 0, 0.499275,-99) , 
4, 0.998095, 1, 0, 0.500497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485266,-99) , 
5, 0.169593, 1, 0, 0.497165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472542,-99) , 
2, 0.214349, 1, 0, 0.493683,-99) , 
3, 4.7148, 1, 0, 0.499126,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.00433896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499694,-99) , 
5, 0.624801, 0, 0, 0.500241,-99) , 
NN(
0, 
0, 
-1, 0.0775927, 1, -1, 0.491392,-99) , 
0, 0.49224, 0, 0, 0.499513,-99) , 
NN(
0, 
0, 
-1, -0.0126494, 1, -1, 0.489683,-99) , 
0, 0.503804, 1, 0, 0.498729,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.00928618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497219,-99) , 
3, 1.87023, 1, 0, 0.500247,-99) , 
2, -0.213896, 1, 0, 0.501276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485095,-99) , 
3, 9.31083, 1, 0, 0.50053,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.00694882);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.50319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490625,-99) , 
3, 9.3748, 1, 0, 0.502613,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.00494879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214079, 1, 1, 0.501668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487778,-99) , 
1, 0.0239888, 1, 0, 0.5013,-99) , 
NN(
0, 
0, 
-1, -0.102275, 1, -1, 0.488201,-99) , 
0, 0.491424, 0, 0, 0.500599,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.00731683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497853,-99) , 
2, -0.207742, 1, 0, 0.498566,-99) , 
3, 9.15455, 0, 0, 0.499099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477235,-99) , 
4, 0.998095, 0, 0, 0.498387,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.00794946);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.36948, 0, 1, 0.503013,-99) , 
NN(
0, 
0, 
-1, 0.998163, 1, -1, 0.488293,-99) , 
4, 0.999524, 0, 0, 0.501384,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.00607854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4996,-99) , 
0, 0.504757, 0, 0, 0.500375,-99) , 
3, 9.36834, 0, 0, 0.501531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48761,-99) , 
2, -0.0713504, 0, 0, 0.496397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481932,-99) , 
0, 0.500947, 1, 0, 0.492427,-99) , 
4, 0.999524, 0, 0, 0.500514,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.00503716);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.501836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483926,-99) , 
3, 9.22486, 1, 0, 0.500977,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.00903183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498112,-99) , 
2, 0.00855523, 0, 0, 0.500033,-99) , 
3, 9.32298, 0, 0, 0.501115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486102,-99) , 
0, 0.497138, 1, 0, 0.495052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478324,-99) , 
5, -0.010397, 0, 0, 0.490373,-99) , 
4, 0.999524, 0, 0, 0.499919,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0151606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496307,-99) , 
4, 0.999996, 0, 0, 0.501654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492621,-99) , 
0, 0.5019, 0, 0, 0.495638,-99) , 
4, 0.999909, 0, 0, 0.500006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479821,-99) , 
4, 0.998095, 0, 0, 0.499353,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.00764839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.281434, 1, 1, 0.502353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478006,-99) , 
5, -0.281237, 0, 0, 0.495214,-99) , 
2, 0.0714798, 1, 0, 0.501341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491738,-99) , 
5, -0.461306, 0, 0, 0.498937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488057,-99) , 
0, 0.501582, 0, 0, 0.496892,-99) , 
0, 0.500947, 1, 0, 0.500296,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00709679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49886,-99) , 
4, 0.999773, 1, 0, 0.500244,-99) , 
4, 0.997619, 1, 0, 0.501167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485557,-99) , 
3, 9.44308, 1, 0, 0.500466,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0105462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.504171,-99) , 
NN(
0, 
0, 
-1, -0.103621, 0, -1, 0.493161,-99) , 
4, 0.999864, 0, 0, 0.501942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482926,-99) , 
4, 0.998571, 0, 0, 0.501078,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0057793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.534538, 0, 1, 0.502396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482823,-99) , 
0, 0.490471, 0, 0, 0.501742,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00642793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495156,-99) , 
4, 0.999932, 0, 0, 0.499111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47583,-99) , 
4, 0.998571, 0, 0, 0.498249,-99) , 
5, 0.615552, 0, 0, 0.498891,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.00683441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491242,-99) , 
5, 0.599701, 1, 0, 0.499028,-99) , 
5, 0.68033, 0, 0, 0.511129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49959,-99) , 
3, 10.1756, 0, 0, 0.50024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476267,-99) , 
4, 0.999048, 0, 0, 0.499044,-99) , 
5, 0.526413, 0, 0, 0.500099,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.00695088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.263754, 0, 1, 0.501957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489041,-99) , 
6, 0.0238068, 1, 0, 0.501268,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484691,-99) , 
0, 0.503986, 0, 0, 0.497206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481348,-99) , 
5, 0.166678, 1, 0, 0.493113,-99) , 
0, 0.502852, 1, 0, 0.500307,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.00764452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498052,-99) , 
0, 0.491424, 1, 0, 0.498861,-99) , 
4, 0.998571, 1, 0, 0.499665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483119,-99) , 
3, 9.35619, 1, 0, 0.49891,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.00523951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490507,-99) , 
3, 6.72995, 1, 0, 0.500171,-99) , 
4, 0.998095, 1, 0, 0.500978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486028,-99) , 
3, 9.37443, 1, 0, 0.500298,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.00648732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498764,-99) , 
0, 0.492377, 1, 0, 0.499633,-99) , 
4, 0.998095, 1, 0, 0.50077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49124,-99) , 
3, 9.36036, 1, 0, 0.500329,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.00832814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494604,-99) , 
5, -0.461657, 0, 0, 0.500473,-99) , 
3, 9.35582, 0, 0, 0.501358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484514,-99) , 
4, 0.998095, 0, 0, 0.500804,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00562809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499399,-99) , 
2, 0.073043, 0, 0, 0.500445,-99) , 
4, 0.998095, 1, 0, 0.501236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484622,-99) , 
3, 9.51398, 1, 0, 0.500514,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.00560154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44372, 1, 1, 0.512316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498976,-99) , 
2, 0.19648, 0, 0, 0.499475,-99) , 
4, 0.999048, 1, 0, 0.500323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483459,-99) , 
3, 9.4861, 1, 0, 0.499577,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.00446889);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517674,-99) , 
NN(
NN(
0, 
0, 
-1, 0.645381, 0, 1, 0.501065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485808,-99) , 
3, 9.35619, 1, 0, 0.500358,-99) , 
5, -0.820016, 1, 0, 0.500965,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.00908262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497346,-99) , 
6, 0.0237975, 0, 0, 0.498296,-99) , 
4, 0.998095, 1, 0, 0.499367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488162,-99) , 
3, 9.50017, 1, 0, 0.498876,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.00757486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.35582, 0, 1, 0.503023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488383,-99) , 
4, 0.999206, 0, 0, 0.502256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48445,-99) , 
4, 0.997619, 0, 0, 0.501792,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.00611754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.682181, 0, 1, 0.513694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478394,-99) , 
4, 0.998572, 0, 0, 0.500081,-99) , 
5, 0.528089, 0, 0, 0.501279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479285,-99) , 
1, 0.0237479, 1, 0, 0.500698,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.00787751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.348339, 0, 1, 0.504109,-99) , 
NN(
0, 
0, 
-1, -0.191593, 0, -1, 0.492426,-99) , 
0, 0.504349, 1, 0, 0.501822,-99) , 
NN(
0, 
0, 
-1, 0.0716415, 1, -1, 0.496457,-99) , 
0, 0.499995, 0, 0, 0.498163,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0058951);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498666,-99) , 
5, -0.166062, 1, 0, 0.500596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490065,-99) , 
0, 0.504757, 1, 0, 0.500069,-99) , 
5, -0.819393, 1, 0, 0.50063,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0071217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499385,-99) , 
4, 0.999909, 1, 0, 0.500866,-99) , 
3, 9.32412, 0, 0, 0.501627,-99) , 
NN(
0, 
0, 
-1, 0.496187, 0, -1, 0.481504,-99) , 
4, 0.999048, 0, 0, 0.500305,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.00776375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52304,-99) , 
NN(
0, 
0, 
-1, 0.499994, 1, -1, 0.497531,-99) , 
4, 0.998095, 1, 0, 0.498361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480922,-99) , 
3, 9.29639, 1, 0, 0.497548,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.00808804);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.34175, 0, 1, 0.503623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483497,-99) , 
4, 0.998095, 0, 0, 0.502966,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.00790021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499101,-99) , 
2, -0.111752, 1, 0, 0.499881,-99) , 
3, 9.32349, 0, 0, 0.50155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505493,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.486842,-99) , 
5, 0.444342, 0, 0, 0.493265,-99) , 
4, 0.999524, 0, 0, 0.500629,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0036753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32298, 0, 1, 0.500661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485815,-99) , 
0, 0.505709, 1, 0, 0.500267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480775,-99) , 
4, 0.998571, 0, 0, 0.499391,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.00832874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0713328, 1, 1, 0.506937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480628,-99) , 
2, 0.214411, 1, 0, 0.501341,-99) , 
5, 0.25978, 0, 0, 0.50261,-99) , 
NN(
0, 
0, 
-1, -0.101977, 1, -1, 0.489405,-99) , 
0, 0.491424, 0, 0, 0.501906,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.00663138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49941,-99) , 
4, 0.999773, 1, 0, 0.500588,-99) , 
4, 0.997619, 1, 0, 0.501915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487626,-99) , 
3, 9.36036, 1, 0, 0.501261,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.00782619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.02433, 1, 1, 0.515583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493189,-99) , 
2, 0.0709595, 1, 0, 0.500101,-99) , 
4, 0.999524, 1, 0, 0.501832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480881,-99) , 
3, 9.5109, 1, 0, 0.50093,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0150837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49601,-99) , 
4, 0.99999, 0, 0, 0.501721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48636,-99) , 
0, 0.499043, 0, 0, 0.49353,-99) , 
4, 0.999796, 0, 0, 0.50048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48286,-99) , 
4, 0.998571, 0, 0, 0.499681,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00376952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499651,-99) , 
3, 9.35582, 0, 0, 0.500294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487261,-99) , 
4, 0.998866, 0, 0, 0.499879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477366,-99) , 
4, 0.997619, 0, 0, 0.499299,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.00649721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499846,-99) , 
3, 8.9845, 0, 0, 0.501251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488763,-99) , 
5, 0.354149, 0, 0, 0.493663,-99) , 
4, 0.999796, 0, 0, 0.500099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485703,-99) , 
4, 0.998571, 0, 0, 0.499449,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.00621201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485841,-99) , 
4, 0.998571, 0, 0, 0.501422,-99) , 
5, 0.617972, 0, 0, 0.501794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486562,-99) , 
1, -0.0237526, 0, 0, 0.501378,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00950994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482682,-99) , 
0, 0.494598, 0, 0, 0.494333,-99) , 
3, 4.73787, 1, 0, 0.502751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492976,-99) , 
5, -0.128476, 1, 0, 0.497271,-99) , 
5, 0.525083, 0, 0, 0.498456,-99) , 
0, 0.49809, 1, 0, 0.500578,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.00743019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499438,-99) , 
3, 2.76184, 0, 0, 0.500842,-99) , 
3, 9.3259, 0, 0, 0.501855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490847,-99) , 
4, 0.998617, 1, 0, 0.495918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476091,-99) , 
0, 0.499042, 1, 0, 0.487994,-99) , 
4, 0.999524, 0, 0, 0.50032,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.00722005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.31046, 0, 1, 0.502186,-99) , 
NN(
0, 
0, 
-1, 0.437203, 1, -1, 0.496318,-99) , 
0, 0.49487, 0, 0, 0.500843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488809,-99) , 
5, -0.0719888, 1, 0, 0.495721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4843,-99) , 
5, -0.371249, 0, 0, 0.492038,-99) , 
0, 0.502852, 1, 0, 0.499802,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.00398958);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499758,-99) , 
0, 0.490472, 1, 0, 0.500377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480242,-99) , 
4, 0.998571, 0, 0, 0.499629,-99) , 
5, 0.618467, 0, 0, 0.500173,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0071545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498733,-99) , 
2, -0.0307115, 1, 0, 0.500506,-99) , 
2, 0.214152, 0, 0, 0.501213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474856,-99) , 
4, 0.997619, 0, 0, 0.500535,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.00978898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0716145, 0, 1, 0.50828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489099,-99) , 
2, -0.0692971, 0, 0, 0.500557,-99) , 
5, -0.0125121, 0, 0, 0.503895,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497467,-99) , 
3, 9.26643, 0, 0, 0.498661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483937,-99) , 
4, 0.999048, 0, 0, 0.497803,-99) , 
0, 0.497138, 1, 0, 0.500231,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.00996436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0971549, 0, 1, 0.517682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495697,-99) , 
3, 3.68046, 1, 0, 0.500643,-99) , 
4, 0.999524, 1, 0, 0.502546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484989,-99) , 
3, 9.44308, 1, 0, 0.501775,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.00658883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499856,-99) , 
2, 0.0783318, 0, 0, 0.501003,-99) , 
3, 9.38516, 0, 0, 0.501552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488299,-99) , 
2, -0.139321, 1, 0, 0.499148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480377,-99) , 
5, -0.460553, 0, 0, 0.494921,-99) , 
2, -0.0713037, 0, 0, 0.500477,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.00547048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486593,-99) , 
3, 7.67808, 1, 0, 0.500565,-99) , 
4, 0.998571, 1, 0, 0.501482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488718,-99) , 
3, 9.45715, 1, 0, 0.500917,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00482147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499837,-99) , 
0, 0.502852, 0, 0, 0.500842,-99) , 
4, 0.998095, 1, 0, 0.501649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487082,-99) , 
3, 9.50054, 1, 0, 0.501009,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.00444233);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214378, 0, 1, 0.50158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483486,-99) , 
3, 9.50017, 1, 0, 0.500803,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00607655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.2143, 1, 1, 0.503473,-99) , 
NN(
0, 
0, 
-1, -0.0711275, 0, -1, 0.497844,-99) , 
5, -0.0070614, 0, 0, 0.500199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485074,-99) , 
1, -0.023657, 0, 0, 0.499789,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0034235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513435,-99) , 
NN(
0, 
0, 
-1, 0.998753, 0, -1, 0.499454,-99) , 
5, -0.819921, 1, 0, 0.499956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471983,-99) , 
4, 0.997619, 0, 0, 0.499228,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.00875268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.29639, 0, 1, 0.502617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49118,-99) , 
4, 0.998095, 0, 0, 0.502293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480686,-99) , 
2, -0.0789375, 1, 0, 0.486924,-99) , 
2, 0.0706075, 0, 0, 0.494518,-99) , 
0, 0.493328, 0, 0, 0.501385,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00861486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523448,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.498188,-99) , 
3, 9.36834, 0, 0, 0.499326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479847,-99) , 
0, 0.501718, 1, 0, 0.498993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47513,-99) , 
0, 0.495233, 0, 0, 0.49153,-99) , 
4, 0.999524, 0, 0, 0.498456,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.00662282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492034,-99) , 
4, 0.999637, 0, 0, 0.500182,-99) , 
4, 0.998095, 1, 0, 0.501252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486957,-99) , 
3, 9.29203, 1, 0, 0.500592,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.00631607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499704,-99) , 
6, 0.0238067, 0, 0, 0.500299,-99) , 
3, 9.37568, 0, 0, 0.501318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492542,-99) , 
0, 0.494689, 0, 0, 0.501166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478279,-99) , 
0, 0.499043, 1, 0, 0.492036,-99) , 
4, 0.999524, 0, 0, 0.500289,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.00943143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487269,-99) , 
4, 0.999683, 0, 0, 0.501894,-99) , 
3, 9.36834, 0, 0, 0.50302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507063,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.48656,-99) , 
2, -0.0713037, 1, 0, 0.494867,-99) , 
4, 0.999524, 0, 0, 0.50211,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.00753895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485792,-99) , 
3, 5.16406, 1, 0, 0.511317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499218,-99) , 
2, 0.0307773, 0, 0, 0.501016,-99) , 
2, -0.214079, 1, 0, 0.501589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486895,-99) , 
1, 0.02389, 1, 0, 0.501203,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.00633082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.501676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475717,-99) , 
1, -0.0236957, 0, 0, 0.500984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477455,-99) , 
3, 9.45715, 1, 0, 0.499956,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00581859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499284,-99) , 
3, 9.23701, 0, 0, 0.500055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476913,-99) , 
4, 0.99941, 0, 0, 0.499327,-99) , 
NN(
0, 
0, 
-1, -0.0716246, 1, -1, 0.485625,-99) , 
4, 0.999048, 0, 0, 0.498426,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.00563607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481797,-99) , 
4, 0.999252, 0, 0, 0.499882,-99) , 
4, 0.998571, 1, 0, 0.501061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48611,-99) , 
3, 9.50017, 1, 0, 0.500409,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0111305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496584,-99) , 
2, 0.0954103, 0, 0, 0.497574,-99) , 
4, 0.998571, 1, 0, 0.498708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480178,-99) , 
2, -0.227689, 0, 0, 0.497025,-99) , 
NN(
0, 
0, 
-1, 0.499996, 0, -1, 0.485146,-99) , 
2, 0.0715791, 1, 0, 0.493074,-99) , 
3, 4.79485, 1, 0, 0.497606,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0109277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494011,-99) , 
3, 5.83704, 1, 0, 0.502648,-99) , 
3, 9.35582, 0, 0, 0.503608,-99) , 
NN(
0, 
0, 
-1, 0.438272, 0, -1, 0.484046,-99) , 
4, 0.999048, 0, 0, 0.502329,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.00925045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.33879, 0, 1, 0.516692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497553,-99) , 
4, 0.999524, 1, 0, 0.49899,-99) , 
0, 0.491424, 1, 0, 0.499948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484312,-99) , 
3, 9.35582, 1, 0, 0.499233,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.00715838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498389,-99) , 
0, 0.494281, 1, 0, 0.499889,-99) , 
4, 0.998571, 1, 0, 0.500736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490745,-99) , 
3, 9.4861, 1, 0, 0.500297,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.00792657);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.503548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486936,-99) , 
3, 9.51561, 1, 0, 0.502822,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.00531841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36885, 0, 1, 0.501517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482444,-99) , 
4, 0.998912, 0, 0, 0.501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476091,-99) , 
4, 0.998095, 0, 0, 0.500197,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.00764561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496067,-99) , 
3, 1.86979, 1, 0, 0.515335,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.497804,-99) , 
4, 0.999048, 1, 0, 0.498977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485892,-99) , 
3, 9.31046, 1, 0, 0.498369,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00949903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.64065, 0, 1, 0.503828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486487,-99) , 
4, 0.997619, 0, 0, 0.503309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495336,-99) , 
5, -0.760057, 1, 0, 0.50156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485226,-99) , 
3, 2.82821, 1, 0, 0.495086,-99) , 
5, -0.64026, 0, 0, 0.502342,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.00543882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43888, 1, 1, 0.51722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499923,-99) , 
6, 0.0237785, 0, 0, 0.500739,-99) , 
4, 0.999048, 1, 0, 0.501839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481701,-99) , 
3, 9.35582, 1, 0, 0.500921,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.00427375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488591,-99) , 
2, 0.214378, 1, 0, 0.500201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487123,-99) , 
0, 0.490471, 0, 0, 0.499754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480959,-99) , 
1, -0.023899, 0, 0, 0.499249,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.00741283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487056,-99) , 
3, 10.6271, 1, 0, 0.501856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486391,-99) , 
5, 0.619678, 1, 0, 0.50119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473127,-99) , 
4, 0.997619, 0, 0, 0.500471,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.00668976);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497675,-99) , 
2, -0.0712034, 1, 0, 0.507988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49809,-99) , 
3, 9.23522, 0, 0, 0.498918,-99) , 
4, 0.999048, 1, 0, 0.499518,-99) , 
0, 0.505709, 0, 0, 0.499866,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.00831672);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493636,-99) , 
4, 0.999909, 0, 0, 0.499215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486789,-99) , 
3, 4.82089, 0, 0, 0.490737,-99) , 
5, 0.346328, 1, 0, 0.497869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483612,-99) , 
4, 0.998095, 0, 0, 0.497403,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.00732085);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497831,-99) , 
3, 9.3259, 0, 0, 0.498767,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.491601,-99) , 
4, 0.999048, 0, 0, 0.498286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48183,-99) , 
1, 0.0242108, 1, 0, 0.497859,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.00426458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499806,-99) , 
2, 0.222563, 0, 0, 0.500515,-99) , 
3, 9.31046, 0, 0, 0.501305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488104,-99) , 
4, 0.998571, 0, 0, 0.5007,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.011284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.689275, 0, 1, 0.506662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496297,-99) , 
6, 0.0136035, 0, 0, 0.497942,-99) , 
5, 0.173487, 0, 0, 0.5005,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.486005,-99) , 
6, 0.0238067, 1, 0, 0.499721,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00464365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499847,-99) , 
6, 0.0237918, 0, 0, 0.500515,-99) , 
4, 0.997619, 1, 0, 0.501455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484677,-99) , 
3, 9.5109, 1, 0, 0.50073,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0106749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47246,-99) , 
3, 10.3354, 1, 0, 0.50249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484422,-99) , 
5, 0.689277, 0, 0, 0.493138,-99) , 
5, 0.534541, 1, 0, 0.501721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482311,-99) , 
0, 0.505709, 1, 0, 0.501166,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.00324476);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.730036, 1, 1, 0.501168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481699,-99) , 
1, 0.023929, 1, 0, 0.500652,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00392478);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.36655, 0, 1, 0.501487,-99) , 
NN(
0, 
0, 
-1, 0.43719, 0, -1, 0.49138,-99) , 
4, 0.999048, 0, 0, 0.500814,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.014037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498203,-99) , 
5, -0.550409, 1, 0, 0.501851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493738,-99) , 
4, 0.999048, 1, 0, 0.496495,-99) , 
6, 0.00453174, 1, 0, 0.49914,-99) , 
NN(
0, 
0, 
-1, -0.023644, 0, -1, 0.487485,-99) , 
6, 0.0237918, 1, 0, 0.498515,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.00483938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499613,-99) , 
2, 0.216283, 0, 0, 0.500216,-99) , 
4, 0.997619, 1, 0, 0.501342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489962,-99) , 
3, 9.44308, 1, 0, 0.500836,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.00862792);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.496185, 0, 1, 0.510217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496011,-99) , 
4, 0.999932, 0, 0, 0.500481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466906,-99) , 
4, 0.998571, 0, 0, 0.49941,-99) , 
5, 0.525571, 0, 0, 0.500357,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.00618257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36655, 0, 1, 0.50222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485132,-99) , 
4, 0.997619, 0, 0, 0.50177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47666,-99) , 
1, 0.0241552, 1, 0, 0.50112,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.00753308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482896,-99) , 
3, 9.52003, 1, 0, 0.500055,-99) , 
5, -0.482063, 1, 0, 0.501193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488078,-99) , 
3, 1.15418, 0, 0, 0.498152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47939,-99) , 
3, 4.42204, 1, 0, 0.493995,-99) , 
5, -0.550549, 0, 0, 0.499984,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0040099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499973,-99) , 
0, 0.492376, 1, 0, 0.50075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484518,-99) , 
5, 0.619678, 1, 0, 0.500091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485309,-99) , 
4, 0.998571, 0, 0, 0.499415,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.00954063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501718, 0, 1, 0.505091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485548,-99) , 
0, 0.501718, 1, 0, 0.496805,-99) , 
5, -0.460094, 0, 0, 0.503171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498059,-99) , 
3, 4.73106, 0, 0, 0.499949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487365,-99) , 
4, 0.999048, 0, 0, 0.499059,-99) , 
0, 0.49809, 0, 0, 0.501143,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00451813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499776,-99) , 
2, 0.221277, 0, 0, 0.50022,-99) , 
4, 0.998095, 1, 0, 0.501116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482534,-99) , 
3, 9.35619, 1, 0, 0.500271,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00988821);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497251,-99) , 
3, 1.44389, 1, 0, 0.51256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495952,-99) , 
3, 1.9145, 0, 0, 0.499681,-99) , 
4, 0.999524, 1, 0, 0.501123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488492,-99) , 
3, 9.4861, 1, 0, 0.500581,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.00940175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498172,-99) , 
5, -0.461557, 1, 0, 0.500176,-99) , 
4, 0.998095, 1, 0, 0.500853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489037,-99) , 
2, 0.152949, 1, 0, 0.499065,-99) , 
NN(
0, 
0, 
-1, -0.190775, 0, -1, 0.484773,-99) , 
2, -0.0714693, 0, 0, 0.494075,-99) , 
3, 4.75808, 1, 0, 0.499513,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0108951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49714, 1, 1, 0.517884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487958,-99) , 
4, 0.999637, 0, 0, 0.501967,-99) , 
4, 0.999048, 1, 0, 0.503058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494517,-99) , 
5, 0.354026, 0, 0, 0.497607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483856,-99) , 
0, 0.495233, 0, 0, 0.494612,-99) , 
3, 4.81005, 1, 0, 0.501411,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0070616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496024,-99) , 
5, -0.657162, 0, 0, 0.502346,-99) , 
5, -0.820016, 1, 0, 0.502658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486571,-99) , 
0, 0.505709, 1, 0, 0.502202,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00761086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498345,-99) , 
0, 0.493328, 1, 0, 0.499513,-99) , 
3, 9.32298, 0, 0, 0.500395,-99) , 
NN(
0, 
0, 
-1, 0.26172, 0, -1, 0.487772,-99) , 
4, 0.999048, 0, 0, 0.499555,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0079057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.663483, 0, 1, 0.508412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498865,-99) , 
3, 9.58655, 0, 0, 0.499802,-99) , 
5, 0.353999, 0, 0, 0.501257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509823,-99) , 
NN(
0, 
0, 
-1, -0.00289387, 1, -1, 0.489153,-99) , 
2, 0.0718984, 0, 0, 0.493635,-99) , 
0, 0.493328, 0, 0, 0.500367,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00707235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49915,-99) , 
0, 0.504757, 0, 0, 0.499715,-99) , 
3, 9.36885, 0, 0, 0.501025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496128,-99) , 
5, 0.265422, 0, 0, 0.502285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481017,-99) , 
0, 0.499042, 1, 0, 0.49377,-99) , 
4, 0.999524, 0, 0, 0.500216,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0121303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497772,-99) , 
0, 0.5019, 0, 0, 0.500157,-99) , 
3, 3.2785, 1, 0, 0.503388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491404,-99) , 
3, 1.10416, 1, 0, 0.497916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479478,-99) , 
3, 4.88011, 1, 0, 0.494251,-99) , 
5, 0.349744, 1, 0, 0.501821,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.00754761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997111, 1, 1, 0.511883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489853,-99) , 
3, 0.578374, 0, 0, 0.501024,-99) , 
4, 0.999524, 1, 0, 0.502237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48753,-99) , 
3, 9.4861, 1, 0, 0.501596,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.00645843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214305, 0, 1, 0.50232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495909,-99) , 
2, -0.0713037, 1, 0, 0.497644,-99) , 
0, 0.499995, 1, 0, 0.500847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485772,-99) , 
1, -0.0238857, 0, 0, 0.500441,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00693903);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499225,-99) , 
5, 0.665565, 0, 0, 0.510573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486466,-99) , 
4, 0.999524, 0, 0, 0.498938,-99) , 
5, 0.528553, 0, 0, 0.499918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488373,-99) , 
5, -0.230515, 0, 0, 0.496457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47555,-99) , 
5, 0.346538, 1, 0, 0.492482,-99) , 
0, 0.494281, 0, 0, 0.4987,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.00969306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495999,-99) , 
4, 0.999955, 1, 0, 0.498949,-99) , 
3, 9.31046, 0, 0, 0.499561,-99) , 
NN(
0, 
0, 
-1, 0.348402, 0, -1, 0.488199,-99) , 
4, 0.999048, 0, 0, 0.498804,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00671562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496843,-99) , 
1, 0.00104324, 0, 0, 0.498982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481959,-99) , 
1, -0.023899, 0, 0, 0.498528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482005,-99) , 
0, 0.490471, 0, 0, 0.497967,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.00626171);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498784,-99) , 
5, -0.587265, 1, 0, 0.500138,-99) , 
NN(
0, 
0, 
-1, 0.99966, 0, -1, 0.492028,-99) , 
5, 0.444286, 1, 0, 0.499236,-99) , 
4, 0.997619, 1, 0, 0.499666,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00376054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237479, 0, 1, 0.501119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489184,-99) , 
5, 0.619671, 1, 0, 0.500624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487545,-99) , 
4, 0.998095, 0, 0, 0.500195,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.00540725);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498719,-99) , 
3, 9.36834, 0, 0, 0.49939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486877,-99) , 
4, 0.998912, 0, 0, 0.499049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48067,-99) , 
4, 0.998095, 0, 0, 0.498453,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00690184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.680674, 0, 1, 0.506444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496866,-99) , 
3, 3.64604, 1, 0, 0.500947,-99) , 
5, 0.444264, 0, 0, 0.501645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488943,-99) , 
1, 0.0239915, 1, 0, 0.501309,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.00799416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.24879, 0, 1, 0.503513,-99) , 
NN(
0, 
0, 
-1, -0.460858, 0, -1, 0.495667,-99) , 
4, 0.999932, 0, 0, 0.501084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491235,-99) , 
4, 0.998571, 0, 0, 0.500631,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00801237);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.503259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494236,-99) , 
0, 0.499996, 1, 0, 0.500792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481536,-99) , 
5, -0.614636, 1, 0, 0.496516,-99) , 
5, -0.550409, 0, 0, 0.502123,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00753335);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498294,-99) , 
3, 8.34115, 0, 0, 0.499087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45334,-99) , 
3, 10.9106, 1, 0, 0.497839,-99) , 
5, 0.624803, 0, 0, 0.49829,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.00506443);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.35582, 0, 1, 0.501829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477405,-99) , 
5, 0.346923, 0, 0, 0.490682,-99) , 
4, 0.999048, 0, 0, 0.501089,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0156412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493452,-99) , 
5, -0.207076, 0, 0, 0.511195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495256,-99) , 
5, -0.371003, 1, 0, 0.498154,-99) , 
3, 0.7707, 1, 0, 0.500088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48709,-99) , 
5, -0.0971147, 0, 0, 0.497855,-99) , 
NN(
0, 
0, 
-1, -0.189067, 1, -1, 0.486844,-99) , 
0, 0.497138, 0, 0, 0.493973,-99) , 
3, 4.77334, 1, 0, 0.498882,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.00432312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499879,-99) , 
2, 0.201324, 0, 0, 0.500438,-99) , 
3, 9.35619, 0, 0, 0.50129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484131,-99) , 
4, 0.998572, 0, 0, 0.500515,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.00882496);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499458,-99) , 
2, -0.00321624, 1, 0, 0.502223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488032,-99) , 
3, 4.69984, 1, 0, 0.4965,-99) , 
2, 0.0715985, 1, 0, 0.501418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493959,-99) , 
0, 0.503487, 0, 0, 0.499219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483265,-99) , 
4, 0.999524, 0, 0, 0.497132,-99) , 
0, 0.500947, 1, 0, 0.500413,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.00815884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214198, 0, 1, 0.502327,-99) , 
NN(
0, 
0, 
-1, -0.0716752, 0, -1, 0.495239,-99) , 
5, -0.100842, 0, 0, 0.49872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477276,-99) , 
1, -0.0241159, 0, 0, 0.498145,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0116669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49373,-99) , 
4, 0.999909, 0, 0, 0.504538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495974,-99) , 
3, 0.776062, 1, 0, 0.497836,-99) , 
3, 4.71519, 0, 0, 0.499187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480889,-99) , 
4, 0.998095, 0, 0, 0.498595,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0103261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0189167, 1, 1, 0.505368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497144,-99) , 
0, 0.491424, 1, 0, 0.498791,-99) , 
3, 2.31832, 1, 0, 0.502354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487569,-99) , 
3, 9.35582, 1, 0, 0.501685,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0090796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.34277, 1, 1, 0.520303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494134,-99) , 
3, 0.56381, 0, 0, 0.502176,-99) , 
4, 0.999048, 1, 0, 0.503384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484697,-99) , 
3, 9.45715, 1, 0, 0.502573,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.00620228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495173,-99) , 
5, -0.367922, 0, 0, 0.499771,-99) , 
NN(
0, 
0, 
-1, 0.497956, 0, -1, 0.491369,-99) , 
6, 0.0238067, 1, 0, 0.499324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48509,-99) , 
0, 0.505709, 1, 0, 0.498922,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.00860079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491866,-99) , 
3, 0.438222, 1, 0, 0.515869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498443,-99) , 
2, -0.213521, 1, 0, 0.499434,-99) , 
3, 0.56586, 1, 0, 0.500489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484513,-99) , 
3, 9.50017, 1, 0, 0.499795,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.00763388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214309, 1, 1, 0.503586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49465,-99) , 
0, 0.504109, 1, 0, 0.497466,-99) , 
0, 0.503124, 1, 0, 0.503095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486885,-99) , 
0, 0.505709, 1, 0, 0.50263,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.00801622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46335, 1, 1, 0.517361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497751,-99) , 
0, 0.493329, 1, 0, 0.498764,-99) , 
4, 0.999048, 1, 0, 0.499999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490255,-99) , 
3, 9.36885, 1, 0, 0.499555,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0101797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27895, 0, 1, 0.50437,-99) , 
NN(
0, 
0, 
-1, 0.167222, 1, -1, 0.493831,-99) , 
0, 0.493328, 0, 0, 0.503175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475426,-99) , 
4, 0.997619, 0, 0, 0.50246,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.00749023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496719,-99) , 
3, 1.43356, 0, 0, 0.50021,-99) , 
3, 9.23701, 0, 0, 0.500787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502323,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.485211,-99) , 
5, 0.534591, 0, 0, 0.489548,-99) , 
4, 0.999524, 0, 0, 0.499543,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.00812678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496108,-99) , 
5, 0.0765424, 1, 0, 0.500234,-99) , 
3, 9.32119, 0, 0, 0.501046,-99) , 
NN(
0, 
0, 
-1, -0.0712462, 1, -1, 0.486574,-99) , 
4, 0.999048, 0, 0, 0.500093,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.00383427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49984,-99) , 
5, 0.5297, 0, 0, 0.500421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487929,-99) , 
0, 0.505437, 1, 0, 0.499964,-99) , 
NN(
0, 
0, 
-1, 0.0768276, 1, -1, 0.489003,-99) , 
0, 0.492376, 0, 0, 0.499089,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0108489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43774, 1, 1, 0.516291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496482,-99) , 
2, -0.0216806, 1, 0, 0.498534,-99) , 
4, 0.999524, 1, 0, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488537,-99) , 
3, 9.44308, 1, 0, 0.499994,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.00663758);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.263734, 0, 1, 0.50269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484012,-99) , 
3, 9.22044, 1, 0, 0.501808,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.00950215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490131,-99) , 
4, 0.999524, 0, 0, 0.501871,-99) , 
5, 0.684979, 0, 0, 0.50398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497301,-99) , 
1, 0.0124665, 0, 0, 0.498138,-99) , 
6, 0.0238014, 0, 0, 0.499062,-99) , 
5, 0.26375, 0, 0, 0.500171,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.00511665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476519,-99) , 
3, 10.7575, 1, 0, 0.500086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485878,-99) , 
5, 0.619678, 1, 0, 0.499492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478861,-99) , 
4, 0.998095, 0, 0, 0.498828,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.00540953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499426,-99) , 
2, 0.174232, 0, 0, 0.500019,-99) , 
3, 8.97147, 0, 0, 0.500938,-99) , 
NN(
0, 
0, 
-1, 0.348402, 0, -1, 0.487036,-99) , 
4, 0.999048, 0, 0, 0.50002,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0108088);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0238067, 0, 1, 0.503837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495903,-99) , 
3, 4.90567, 1, 0, 0.508413,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.493178,-99) , 
2, -0.0714062, 1, 0, 0.49579,-99) , 
5, -0.0070383, 1, 0, 0.500552,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0070254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499874,-99) , 
2, -0.214156, 1, 0, 0.501226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480593,-99) , 
3, 9.51958, 1, 0, 0.500301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480538,-99) , 
2, -0.0703613, 0, 0, 0.497979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472857,-99) , 
5, -0.509912, 1, 0, 0.494196,-99) , 
5, -0.458331, 0, 0, 0.498903,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0086421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492339,-99) , 
4, 0.999932, 0, 0, 0.503571,-99) , 
NN(
0, 
0, 
-1, 0.493329, 0, -1, 0.497557,-99) , 
3, 4.63666, 0, 0, 0.498807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484195,-99) , 
4, 0.998571, 0, 0, 0.498149,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0106002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237919, 0, 1, 0.503858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480437,-99) , 
2, -0.21442, 0, 0, 0.502798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522093,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.494662,-99) , 
5, 0.68084, 0, 0, 0.497616,-99) , 
5, 0.16763, 1, 0, 0.501326,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.00955221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497499,-99) , 
3, 1.46484, 1, 0, 0.50038,-99) , 
2, -0.214134, 1, 0, 0.501358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488284,-99) , 
3, 9.46788, 1, 0, 0.500788,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.00486917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0712969, 1, 1, 0.505751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48936,-99) , 
2, -0.214276, 0, 0, 0.499532,-99) , 
5, 0.173469, 0, 0, 0.501322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482807,-99) , 
1, -0.0236957, 0, 0, 0.500819,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00783454);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498878,-99) , 
3, 6.91679, 0, 0, 0.500358,-99) , 
NN(
0, 
0, 
-1, 0.998163, 0, -1, 0.486201,-99) , 
4, 0.999524, 0, 0, 0.498978,-99) , 
5, 0.624803, 0, 0, 0.499617,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0115081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.672076, 0, 1, 0.504346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495411,-99) , 
6, 0.0238014, 0, 0, 0.498315,-99) , 
5, -0.277857, 0, 0, 0.502114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491201,-99) , 
3, 2.99653, 0, 0, 0.496166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478984,-99) , 
5, 0.256997, 1, 0, 0.491914,-99) , 
0, 0.493329, 0, 0, 0.500943,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.00808107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.9845, 0, 1, 0.503157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484417,-99) , 
2, -0.0709845, 0, 0, 0.496499,-99) , 
4, 0.999796, 0, 0, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490047,-99) , 
4, 0.998572, 0, 0, 0.501599,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.00871002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497142,-99) , 
0, 0.491424, 1, 0, 0.497776,-99) , 
4, 0.998572, 1, 0, 0.498661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484829,-99) , 
3, 9.37443, 1, 0, 0.498038,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00925525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.507055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497793,-99) , 
6, 0.0238068, 0, 0, 0.498809,-99) , 
5, 0.16856, 0, 0, 0.501129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48329,-99) , 
3, 9.46788, 1, 0, 0.500362,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00445215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499934,-99) , 
3, 9.31046, 0, 0, 0.500758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483522,-99) , 
4, 0.998572, 0, 0, 0.499976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474721,-99) , 
1, -0.023657, 0, 0, 0.4993,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.00558208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497985,-99) , 
0, 0.496186, 0, 0, 0.500628,-99) , 
4, 0.998095, 1, 0, 0.501037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485036,-99) , 
3, 9.37443, 1, 0, 0.50032,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00722325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36655, 0, 1, 0.503026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487865,-99) , 
4, 0.997619, 0, 0, 0.502626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483719,-99) , 
1, 0.0240314, 1, 0, 0.502124,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00623188);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513145,-99) , 
NN(
NN(
0, 
0, 
-1, 9.58689, 0, 1, 0.501998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476986,-99) , 
4, 0.999524, 0, 0, 0.494714,-99) , 
5, 0.349747, 1, 0, 0.500778,-99) , 
2, 0.214378, 0, 0, 0.501396,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.00479927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.501626,-99) , 
NN(
0, 
0, 
-1, -0.21414, 0, -1, 0.496086,-99) , 
3, 4.80966, 1, 0, 0.500554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485693,-99) , 
1, -0.0236957, 0, 0, 0.500152,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0124549);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484594,-99) , 
2, 0.152162, 1, 0, 0.502977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476178,-99) , 
2, -0.140123, 0, 0, 0.489861,-99) , 
2, -0.0721482, 0, 0, 0.500926,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.494588,-99) , 
5, -0.0972951, 1, 0, 0.497898,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.00704085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0712467, 1, 1, 0.50274,-99) , 
NN(
0, 
0, 
-1, -0.0816516, 0, -1, 0.495712,-99) , 
5, -0.460094, 0, 0, 0.501197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479997,-99) , 
1, -0.0241431, 0, 0, 0.500645,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.00726488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.465437, 0, 1, 0.502414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490735,-99) , 
5, 0.619684, 1, 0, 0.501788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493523,-99) , 
0, 0.501083, 0, 0, 0.50345,-99) , 
NN(
0, 
0, 
-1, 0.504349, 1, -1, 0.495807,-99) , 
2, -0.0715652, 1, 0, 0.49719,-99) , 
0, 0.499043, 1, 0, 0.499917,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.00793539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499848,-99) , 
3, 0.587712, 1, 0, 0.501556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47724,-99) , 
3, 9.52003, 1, 0, 0.500459,-99) , 
NN(
0, 
0, 
-1, -0.509969, 1, -1, 0.49204,-99) , 
5, -0.458387, 0, 0, 0.498533,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.00937319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496311,-99) , 
0, 0.496186, 0, 0, 0.499683,-99) , 
4, 0.998571, 1, 0, 0.501089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48828,-99) , 
5, -0.191662, 0, 0, 0.501289,-99) , 
NN(
0, 
0, 
-1, 0.49351, 0, -1, 0.489882,-99) , 
0, 0.499995, 0, 0, 0.494382,-99) , 
3, 4.77334, 1, 0, 0.499774,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00930066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492881, 1, 1, 0.503638,-99) , 
NN(
0, 
0, 
-1, 0.490821, 1, -1, 0.494224,-99) , 
0, 0.492104, 0, 0, 0.501423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514697,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.495605,-99) , 
2, 0.214169, 0, 0, 0.496496,-99) , 
0, 0.496185, 1, 0, 0.498005,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.00797322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490447,-99) , 
5, -0.460803, 0, 0, 0.504229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494642,-99) , 
0, 0.497818, 1, 0, 0.497823,-99) , 
0, 0.5019, 0, 0, 0.498922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480998,-99) , 
1, -0.023899, 0, 0, 0.498436,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00660819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26643, 0, 1, 0.501465,-99) , 
NN(
0, 
0, 
-1, 0.496684, 1, -1, 0.49548,-99) , 
0, 0.497138, 0, 0, 0.499105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47243,-99) , 
4, 0.997619, 0, 0, 0.498425,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.00827365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496594,-99) , 
5, -0.381019, 1, 0, 0.498604,-99) , 
5, 0.624794, 0, 0, 0.499165,-99) , 
NN(
0, 
0, 
-1, -0.102275, 1, -1, 0.488037,-99) , 
0, 0.491424, 0, 0, 0.498569,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.00373561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491754, 0, 1, 0.508815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499312,-99) , 
2, 0.214186, 0, 0, 0.499747,-99) , 
0, 0.49292, 1, 0, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49039,-99) , 
0, 0.490471, 0, 0, 0.500024,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00694464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.36948, 0, 1, 0.502875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.485926,-99) , 
5, 0.354093, 0, 0, 0.492359,-99) , 
4, 0.999524, 0, 0, 0.501718,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0087336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497532,-99) , 
6, 0.0238014, 0, 0, 0.498412,-99) , 
3, 9.35619, 0, 0, 0.499161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479483,-99) , 
4, 0.998571, 0, 0, 0.498281,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.00831085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.549542, 1, 1, 0.504463,-99) , 
NN(
0, 
0, 
-1, -0.728307, 0, -1, 0.49666,-99) , 
6, 0.00453462, 1, 0, 0.50052,-99) , 
NN(
0, 
0, 
-1, -0.0239558, 0, -1, 0.491218,-99) , 
6, 0.0238068, 1, 0, 0.500026,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.00660503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01931, 1, 1, 0.513336,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.498504,-99) , 
4, 0.999524, 1, 0, 0.500157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48629,-99) , 
3, 9.38695, 1, 0, 0.499537,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0048836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18092, 0, 1, 0.501579,-99) , 
NN(
0, 
0, 
-1, 0.0725325, 0, -1, 0.490263,-99) , 
4, 0.999365, 0, 0, 0.500902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486343,-99) , 
4, 0.998095, 0, 0, 0.500432,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.00549234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499733,-99) , 
5, 0.0058554, 0, 0, 0.501586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487149,-99) , 
5, 0.624803, 1, 0, 0.500995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483211,-99) , 
4, 0.997619, 0, 0, 0.500539,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00618786);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497888,-99) , 
2, 0.214452, 0, 0, 0.498431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484859,-99) , 
0, 0.505709, 1, 0, 0.498049,-99) , 
5, -0.820206, 1, 0, 0.498503,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.00967592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.507046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496461,-99) , 
2, -0.00330681, 1, 0, 0.500903,-99) , 
2, 0.0715136, 0, 0, 0.501847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485945,-99) , 
1, -0.0243036, 0, 0, 0.501429,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.00993817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40199, 1, 1, 0.51556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497438,-99) , 
2, 0.00836929, 0, 0, 0.499981,-99) , 
4, 0.999524, 1, 0, 0.501729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488042,-99) , 
3, 9.19271, 1, 0, 0.501077,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.00941124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36834, 0, 1, 0.504156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493928,-99) , 
4, 0.998571, 0, 0, 0.503681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478557,-99) , 
1, -0.0238602, 0, 0, 0.503008,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.00672026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499871,-99) , 
2, -0.214309, 1, 0, 0.501312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492871,-99) , 
5, -0.588945, 1, 0, 0.496581,-99) , 
5, -0.280669, 0, 0, 0.499621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480545,-99) , 
1, 0.0240314, 1, 0, 0.499122,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.00616028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44387, 1, 1, 0.51618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493168,-99) , 
4, 0.999819, 0, 0, 0.499713,-99) , 
4, 0.999524, 1, 0, 0.501559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491327,-99) , 
3, 9.4861, 1, 0, 0.501112,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.00653136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.370777, 1, 1, 0.501611,-99) , 
NN(
0, 
0, 
-1, -0.369933, 0, -1, 0.492079,-99) , 
2, 0.0715438, 1, 0, 0.500244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491601,-99) , 
5, -0.16245, 0, 0, 0.494933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479357,-99) , 
5, 0.256282, 1, 0, 0.491107,-99) , 
0, 0.493328, 0, 0, 0.499188,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.00852953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497234,-99) , 
5, 0.696651, 0, 0, 0.50115,-99) , 
5, 0.431398, 1, 0, 0.504986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497913,-99) , 
3, 9.40923, 0, 0, 0.498618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481068,-99) , 
2, -0.21407, 0, 0, 0.497787,-99) , 
5, 0.354026, 0, 0, 0.499034,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.00423958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499789,-99) , 
2, -0.275131, 1, 0, 0.500216,-99) , 
2, 0.214523, 0, 0, 0.50123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487509,-99) , 
3, 9.36036, 1, 0, 0.5006,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0082691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49302,-99) , 
4, 0.999524, 0, 0, 0.50567,-99) , 
NN(
0, 
0, 
-1, 0.620499, 1, -1, 0.499042,-99) , 
0, 0.499043, 0, 0, 0.501739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496204,-99) , 
3, 1.52448, 0, 0, 0.500332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476561,-99) , 
0, 0.5019, 1, 0, 0.495955,-99) , 
5, -0.548652, 0, 0, 0.500757,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00661937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498129,-99) , 
5, -0.00701695, 1, 0, 0.500959,-99) , 
0, 0.504757, 0, 0, 0.501538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488588,-99) , 
4, 0.998572, 0, 0, 0.50095,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.00908379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49365,-99) , 
5, 0.546886, 1, 0, 0.502848,-99) , 
NN(
0, 
0, 
-1, -0.614109, 1, -1, 0.495381,-99) , 
5, -0.549847, 0, 0, 0.501539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479231,-99) , 
4, 0.998095, 0, 0, 0.500828,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00462324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36655, 0, 1, 0.501678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48694,-99) , 
4, 0.998912, 0, 0, 0.501277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488087,-99) , 
4, 0.998095, 0, 0, 0.500846,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0144965);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49654,-99) , 
6, 0.00340075, 0, 0, 0.503202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489324,-99) , 
6, 0.00453461, 1, 0, 0.495631,-99) , 
5, -0.280639, 0, 0, 0.500561,-99) , 
NN(
0, 
0, 
-1, -0.556684, 1, -1, 0.489433,-99) , 
6, 0.0238067, 1, 0, 0.499966,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.015129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499056,-99) , 
5, 0.341349, 1, 0, 0.502856,-99) , 
5, 0.693158, 0, 0, 0.504537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493408,-99) , 
6, 0.0147239, 0, 0, 0.495438,-99) , 
6, 0.0237852, 0, 0, 0.497646,-99) , 
5, 0.0774892, 0, 0, 0.500049,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.00735271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.518418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48845,-99) , 
4, 0.99941, 0, 0, 0.501552,-99) , 
4, 0.999048, 1, 0, 0.502673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48898,-99) , 
3, 9.5177, 1, 0, 0.502082,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0100164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498923,-99) , 
2, 0.139532, 0, 0, 0.508256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487558,-99) , 
5, -0.460856, 0, 0, 0.503652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496915,-99) , 
2, 0.0180701, 0, 0, 0.498705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486081,-99) , 
2, -0.30258, 0, 0, 0.498264,-99) , 
2, 0.0715136, 0, 0, 0.499095,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.00762403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49075,-99) , 
0, 0.49496, 0, 0, 0.507255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486947,-99) , 
2, 0.21437, 1, 0, 0.501174,-99) , 
5, 0.438665, 0, 0, 0.501951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489947,-99) , 
0, 0.504757, 1, 0, 0.501351,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.00646686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498755,-99) , 
3, 9.32349, 0, 0, 0.499462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48461,-99) , 
4, 0.99941, 0, 0, 0.498995,-99) , 
NN(
0, 
0, 
-1, 0.071533, 0, -1, 0.482774,-99) , 
4, 0.999048, 0, 0, 0.497945,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.00668869);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487766,-99) , 
3, 9.26544, 1, 0, 0.502218,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.00417629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.494712, 1, 1, 0.5011,-99) , 
NN(
0, 
0, 
-1, 3.03552, 1, -1, 0.493695,-99) , 
5, -0.640284, 0, 0, 0.500235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48461,-99) , 
0, 0.505709, 1, 0, 0.499802,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.00659166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.68927, 0, 1, 0.509235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482061,-99) , 
4, 0.998572, 0, 0, 0.501025,-99) , 
5, 0.534529, 0, 0, 0.501724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478097,-99) , 
1, -0.0237526, 0, 0, 0.501102,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.00597307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.68068, 0, 1, 0.506625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481667,-99) , 
2, -0.214421, 0, 0, 0.4997,-99) , 
5, 0.444278, 0, 0, 0.500553,-99) , 
NN(
0, 
0, 
-1, -0.2818, 1, -1, 0.485596,-99) , 
0, 0.492376, 0, 0, 0.499376,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.00789098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493641,-99) , 
0, 0.490517, 0, 0, 0.502005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497453,-99) , 
4, 0.999524, 1, 0, 0.498534,-99) , 
0, 0.497773, 1, 0, 0.500353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488864,-99) , 
5, -0.447673, 0, 0, 0.497518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475228,-99) , 
5, 0.159758, 1, 0, 0.491699,-99) , 
0, 0.502852, 1, 0, 0.499333,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0162985);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495768,-99) , 
4, 0.999955, 1, 0, 0.505725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483692,-99) , 
5, 0.558052, 0, 0, 0.492129,-99) , 
4, 0.999524, 0, 0, 0.502306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492256,-99) , 
6, 0.0113336, 0, 0, 0.494395,-99) , 
6, 0.0238014, 0, 0, 0.495451,-99) , 
5, 0.258439, 0, 0, 0.497012,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.00688545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497054,-99) , 
1, -0.00113348, 1, 0, 0.499073,-99) , 
0, 0.490471, 1, 0, 0.499636,-99) , 
NN(
0, 
0, 
-1, -0.556684, 1, -1, 0.485575,-99) , 
6, 0.0238067, 1, 0, 0.498883,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.00847667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.508677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497765,-99) , 
6, 0.0136038, 0, 0, 0.498775,-99) , 
5, 0.354013, 0, 0, 0.500551,-99) , 
NN(
0, 
0, 
-1, -0.557101, 1, -1, 0.489016,-99) , 
6, 0.0238067, 1, 0, 0.499932,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00950862);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0238068, 0, 1, 0.503127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497994,-99) , 
4, 0.998572, 1, 0, 0.501352,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.479853,-99) , 
3, 4.86556, 1, 0, 0.497226,-99) , 
5, 0.0798283, 1, 0, 0.501098,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0055367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500312, 0, 1, 0.501614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495438,-99) , 
0, 0.505709, 0, 0, 0.496361,-99) , 
0, 0.500947, 1, 0, 0.500379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478382,-99) , 
1, -0.023899, 0, 0, 0.499804,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.00569585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498045,-99) , 
0, 0.505165, 0, 0, 0.498411,-99) , 
0, 0.490471, 1, 0, 0.498834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482475,-99) , 
1, 0.02389, 1, 0, 0.498399,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.010343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214349, 0, 1, 0.502948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493345,-99) , 
6, 0.0238071, 0, 0, 0.495831,-99) , 
5, -0.27782, 0, 0, 0.500296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485795,-99) , 
3, 9.23522, 1, 0, 0.499622,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00529656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484079,-99) , 
4, 0.999388, 0, 0, 0.499677,-99) , 
4, 0.998572, 1, 0, 0.500262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510252,-99) , 
NN(
0, 
0, 
-1, 2.11428, 0, -1, 0.485154,-99) , 
3, 4.73064, 0, 0, 0.493054,-99) , 
0, 0.503804, 1, 0, 0.499686,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.00792234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.86772, 1, 1, 0.520256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489212,-99) , 
0, 0.503804, 1, 0, 0.499357,-99) , 
2, -0.1103, 1, 0, 0.500962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492128,-99) , 
0, 0.502535, 1, 0, 0.501374,-99) , 
NN(
0, 
0, 
-1, 0.0716254, 1, -1, 0.487555,-99) , 
0, 0.499995, 0, 0, 0.492983,-99) , 
3, 4.79485, 1, 0, 0.499412,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0101434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505845, 1, 1, 0.509356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499092,-99) , 
0, 0.49741, 0, 0, 0.506669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496203,-99) , 
3, 9.32119, 0, 0, 0.497385,-99) , 
4, 0.999048, 1, 0, 0.497979,-99) , 
0, 0.504757, 0, 0, 0.498568,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00406274);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.16137, 0, 1, 0.501619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485313,-99) , 
4, 0.998186, 1, 0, 0.494261,-99) , 
4, 0.999048, 0, 0, 0.501129,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.010727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489325,-99) , 
2, 0.0778465, 1, 0, 0.504505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49745,-99) , 
2, 0.153198, 0, 0, 0.4984,-99) , 
5, -0.461602, 1, 0, 0.499804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487553,-99) , 
4, 0.999523, 0, 0, 0.498647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471368,-99) , 
5, -0.460429, 0, 0, 0.492503,-99) , 
2, -0.071253, 0, 0, 0.49862,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.00582458);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496486,-99) , 
5, -0.461179, 0, 0, 0.505485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494983,-99) , 
5, -0.371278, 0, 0, 0.498702,-99) , 
0, 0.5019, 0, 0, 0.499863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480636,-99) , 
1, 0.0239326, 1, 0, 0.499356,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.00844575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499958,-99) , 
6, 0.0238069, 0, 0, 0.501959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495898,-99) , 
2, -0.214038, 1, 0, 0.49684,-99) , 
5, -0.277827, 1, 0, 0.498799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47304,-99) , 
4, 0.997619, 0, 0, 0.49815,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.00524136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48324,-99) , 
3, 10.7712, 1, 0, 0.500903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489234,-99) , 
5, 0.624794, 1, 0, 0.500418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482534,-99) , 
4, 0.997619, 0, 0, 0.499954,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00838425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.729182, 1, 1, 0.503188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483876,-99) , 
6, 0.0170048, 1, 0, 0.502388,-99) , 
NN(
0, 
0, 
-1, -0.556904, 1, -1, 0.487578,-99) , 
6, 0.0238067, 1, 0, 0.50159,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.00806684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0715125, 1, 1, 0.513025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497494,-99) , 
0, 0.490472, 1, 0, 0.497961,-99) , 
4, 0.999048, 1, 0, 0.498957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484639,-99) , 
3, 9.35582, 1, 0, 0.498309,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.00548853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499035,-99) , 
0, 0.490471, 1, 0, 0.499468,-99) , 
3, 9.35582, 0, 0, 0.500454,-99) , 
NN(
0, 
0, 
-1, 0.998186, 1, -1, 0.490171,-99) , 
4, 0.999048, 0, 0, 0.499772,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.00639377);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511434,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0511348, 0, 1, 0.501563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49142,-99) , 
5, 0.682176, 0, 0, 0.49446,-99) , 
5, 0.348322, 1, 0, 0.500367,-99) , 
2, 0.214378, 0, 0, 0.500924,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.00950511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0712969, 1, 1, 0.503364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496377,-99) , 
6, 0.0237918, 0, 0, 0.497991,-99) , 
5, 0.0797883, 0, 0, 0.499815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494767,-99) , 
2, -0.15283, 1, 0, 0.49596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490801,-99) , 
2, 0.0716145, 1, 0, 0.495105,-99) , 
0, 0.496185, 0, 0, 0.498382,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.00943018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499078,-99) , 
3, 1.43774, 1, 0, 0.511307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495858,-99) , 
0, 0.494281, 1, 0, 0.49682,-99) , 
4, 0.999048, 1, 0, 0.497771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487497,-99) , 
3, 9.44308, 1, 0, 0.497322,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.006428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48986,-99) , 
3, 7.12236, 1, 0, 0.501042,-99) , 
4, 0.998571, 1, 0, 0.501887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487796,-99) , 
3, 9.31083, 1, 0, 0.501238,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00724226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214134, 1, 1, 0.503399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488258,-99) , 
2, -0.0709727, 0, 0, 0.499394,-99) , 
5, -0.101095, 0, 0, 0.501368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482726,-99) , 
1, 0.0240263, 1, 0, 0.500882,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.010145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496577,-99) , 
5, 0.346297, 0, 0, 0.497551,-99) , 
3, 9.36885, 0, 0, 0.498751,-99) , 
NN(
0, 
0, 
-1, 0.170209, 1, -1, 0.489248,-99) , 
4, 0.999524, 0, 0, 0.497698,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00909781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498403,-99) , 
6, 0.00226552, 0, 0, 0.504356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497633,-99) , 
6, 0.0135923, 0, 0, 0.49918,-99) , 
5, -0.0973265, 0, 0, 0.501756,-99) , 
NN(
0, 
0, 
-1, 0.0236811, 1, -1, 0.491258,-99) , 
6, 0.0237883, 1, 0, 0.501195,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.00893851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496643,-99) , 
5, -0.190153, 1, 0, 0.499748,-99) , 
4, 0.998095, 1, 0, 0.500449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489698,-99) , 
5, -0.00686888, 1, 0, 0.495976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480125,-99) , 
2, -0.214085, 0, 0, 0.493453,-99) , 
3, 4.79485, 1, 0, 0.499084,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.00569726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32298, 0, 1, 0.501801,-99) , 
NN(
0, 
0, 
-1, 0.999384, 0, -1, 0.491008,-99) , 
4, 0.999637, 0, 0, 0.50103,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.489643,-99) , 
4, 0.999048, 0, 0, 0.500274,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00719962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0715592, 0, 1, 0.509053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498823,-99) , 
3, 9.36948, 0, 0, 0.500212,-99) , 
4, 0.999524, 1, 0, 0.501177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488434,-99) , 
0, 0.504757, 1, 0, 0.500542,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0081537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496287,-99) , 
2, 0.0715405, 1, 0, 0.502332,-99) , 
NN(
0, 
0, 
-1, 0.167013, 1, -1, 0.494153,-99) , 
0, 0.493328, 0, 0, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481286,-99) , 
1, 0.0240263, 1, 0, 0.500857,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.00800917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498295,-99) , 
6, 0.00453461, 1, 0, 0.50116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486244,-99) , 
0, 0.490471, 0, 0, 0.500658,-99) , 
NN(
0, 
0, 
-1, 0.498094, 1, -1, 0.482516,-99) , 
6, 0.0238067, 1, 0, 0.499698,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.00617997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498598,-99) , 
0, 0.502852, 0, 0, 0.499627,-99) , 
3, 9.27946, 0, 0, 0.500148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484737,-99) , 
4, 0.998572, 0, 0, 0.499457,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0055731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484285,-99) , 
5, 0.619671, 1, 0, 0.500485,-99) , 
4, 0.998095, 1, 0, 0.501149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488452,-99) , 
3, 9.36036, 1, 0, 0.500567,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.00672337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.460256, 1, 1, 0.504518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493534,-99) , 
0, 0.490141, 1, 0, 0.498218,-99) , 
0, 0.491696, 0, 0, 0.503553,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0715791, 0, 1, 0.501316,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.495009,-99) , 
0, 0.499133, 0, 0, 0.499176,-99) , 
0, 0.497138, 1, 0, 0.500913,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.00716347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492398,-99) , 
5, -0.36807, 0, 0, 0.505312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497688,-99) , 
0, 0.499043, 0, 0, 0.499337,-99) , 
2, 0.0713494, 0, 0, 0.500257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483368,-99) , 
1, 0.024381, 1, 0, 0.49982,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00628749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498424,-99) , 
0, 0.490472, 1, 0, 0.498964,-99) , 
3, 9.36655, 0, 0, 0.499549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482425,-99) , 
4, 0.998572, 0, 0, 0.498781,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0109275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491897,-99) , 
2, -0.0695542, 0, 0, 0.503351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496777,-99) , 
2, 0.214254, 0, 0, 0.498079,-99) , 
5, -0.190153, 1, 0, 0.50041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48393,-99) , 
0, 0.504757, 1, 0, 0.499591,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0142035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497867,-99) , 
6, 0.00226751, 1, 0, 0.499715,-99) , 
6, 0.0238069, 0, 0, 0.50269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495437,-99) , 
3, 0.598794, 1, 0, 0.497985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458592,-99) , 
3, 9.5301, 1, 0, 0.49616,-99) , 
5, -0.187592, 1, 0, 0.499087,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0106199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999994, 0, 1, 0.504474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493131,-99) , 
3, 4.65105, 0, 0, 0.495822,-99) , 
4, 0.999864, 0, 0, 0.502874,-99) , 
NN(
0, 
0, 
-1, 0.0713269, 0, -1, 0.487987,-99) , 
4, 0.999048, 0, 0, 0.501903,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00704686);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214151, 0, 1, 0.503265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491016,-99) , 
4, 0.998572, 0, 0, 0.502711,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00492181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499049,-99) , 
4, 0.998571, 1, 0, 0.499831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489987,-99) , 
3, 9.32427, 1, 0, 0.499383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481717,-99) , 
1, -0.0240223, 0, 0, 0.498913,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00813313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.42589, 1, 1, 0.517834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498235,-99) , 
0, 0.492376, 1, 0, 0.499092,-99) , 
4, 0.999048, 1, 0, 0.500339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48162,-99) , 
3, 9.36036, 1, 0, 0.499494,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0114954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490598,-99) , 
5, -0.550426, 0, 0, 0.506651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497558,-99) , 
5, 0.258829, 0, 0, 0.499654,-99) , 
1, 0.00339993, 0, 0, 0.501799,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.48755,-99) , 
6, 0.0237975, 1, 0, 0.501036,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.00559901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499668,-99) , 
2, -0.193201, 1, 0, 0.500877,-99) , 
2, 0.214564, 0, 0, 0.50167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485891,-99) , 
3, 9.36036, 1, 0, 0.500961,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00926979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496353,-99) , 
5, -0.641355, 0, 0, 0.507007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499965,-99) , 
5, -0.640434, 1, 0, 0.501471,-99) , 
1, 0.00151925, 0, 0, 0.503838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482692,-99) , 
1, -0.0233965, 0, 0, 0.503258,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0118692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493809,-99) , 
2, 0.139641, 0, 0, 0.510338,-99) , 
NN(
0, 
0, 
-1, 0.496594, 0, 1, 0.504986,-99) , 
2, 0.0716283, 0, 0, 0.505788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498168,-99) , 
3, 1.40233, 0, 0, 0.50367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493489,-99) , 
5, 0.258844, 0, 0, 0.496509,-99) , 
3, 4.61033, 1, 0, 0.502025,-99) , 
0, 0.49809, 1, 0, 0.503886,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00584763);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498174,-99) , 
5, -0.37173, 0, 0, 0.507081,-99) , 
NN(
0, 
0, 
-1, 9.32298, 0, 1, 0.501137,-99) , 
0, 0.5019, 0, 0, 0.502145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479583,-99) , 
4, 0.998095, 0, 0, 0.50143,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.00805214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484344,-99) , 
3, 10.7827, 1, 0, 0.502141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482852,-99) , 
5, 0.624794, 1, 0, 0.501428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481425,-99) , 
2, -0.0712969, 1, 0, 0.489606,-99) , 
4, 0.999048, 0, 0, 0.500653,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00565233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.17389, 0, 1, 0.501204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481708,-99) , 
4, 0.99966, 0, 0, 0.500593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484785,-99) , 
5, 0.168309, 1, 0, 0.494188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481879,-99) , 
4, 0.998163, 0, 0, 0.490443,-99) , 
4, 0.999524, 0, 0, 0.499477,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0130552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486519,-99) , 
4, 0.999982, 0, 0, 0.502401,-99) , 
4, 0.999876, 1, 0, 0.50477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498301,-99) , 
2, -0.213304, 1, 0, 0.499793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478624,-99) , 
3, 9.53133, 1, 0, 0.498838,-99) , 
5, -0.370582, 1, 0, 0.500594,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00437402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.501315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48997,-99) , 
3, 9.21751, 1, 0, 0.500782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480729,-99) , 
1, -0.0239558, 0, 0, 0.500254,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0131235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.21452, 1, 1, 0.504205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489372,-99) , 
3, 9.48142, 1, 0, 0.503515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489212,-99) , 
6, 0.00340096, 1, 0, 0.494945,-99) , 
6, 0.0238067, 0, 0, 0.497912,-99) , 
5, -0.370582, 0, 0, 0.50186,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00834858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493644,-99) , 
6, 0.00113307, 0, 0, 0.506234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499076,-99) , 
1, 0.0101998, 0, 0, 0.500126,-99) , 
5, 0.259749, 0, 0, 0.501561,-99) , 
NN(
0, 
0, 
-1, -0.0234122, 0, -1, 0.480991,-99) , 
6, 0.0238014, 1, 0, 0.500467,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.00811105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493701,-99) , 
0, 0.504893, 1, 0, 0.502646,-99) , 
NN(
0, 
0, 
-1, -0.728925, 0, -1, 0.495684,-99) , 
0, 0.49809, 0, 0, 0.499216,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00760582);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237976, 0, 1, 0.502378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496382,-99) , 
5, 0.674128, 0, 0, 0.49734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478902,-99) , 
0, 0.502852, 1, 0, 0.495347,-99) , 
5, -0.010928, 1, 0, 0.499492,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.00597661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.19503, 0, 1, 0.51058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493721,-99) , 
0, 0.504089, 0, 0, 0.501791,-99) , 
0, 0.50326, 1, 0, 0.505444,-99) , 
NN(
0, 
0, 
-1, 0.0238067, 1, -1, 0.49799,-99) , 
0, 0.5019, 0, 0, 0.499283,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00864471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492478,-99) , 
5, -0.460561, 0, 0, 0.506944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497219,-99) , 
1, 0.00104121, 1, 0, 0.500384,-99) , 
2, -0.0712535, 1, 0, 0.501456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486816,-99) , 
1, -0.023899, 0, 0, 0.501065,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00589958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.620499, 1, 1, 0.509389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487644,-99) , 
3, 8.37691, 1, 0, 0.50029,-99) , 
5, 0.534529, 0, 0, 0.501079,-99) , 
NN(
0, 
0, 
-1, -0.557694, 1, -1, 0.487507,-99) , 
6, 0.0238067, 1, 0, 0.500346,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.00995011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492952,-99) , 
0, 0.491605, 0, 0, 0.501444,-99) , 
2, -0.0712279, 1, 0, 0.502951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495801,-99) , 
2, -0.214521, 1, 0, 0.496447,-99) , 
3, 9.46967, 0, 0, 0.497119,-99) , 
0, 0.495233, 1, 0, 0.498457,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00842605);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498383,-99) , 
5, -0.0972859, 0, 0, 0.501931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489014,-99) , 
6, 0.0170009, 1, 0, 0.501399,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.489022,-99) , 
6, 0.0238014, 1, 0, 0.500737,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.006967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495481,-99) , 
5, 0.263754, 1, 0, 0.500681,-99) , 
0, 0.505709, 0, 0, 0.501157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480742,-99) , 
2, 0.0715405, 0, 0, 0.489467,-99) , 
4, 0.999048, 0, 0, 0.500388,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00580499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498387,-99) , 
5, -0.277671, 0, 0, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487189,-99) , 
1, 0.0239326, 1, 0, 0.500741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4845,-99) , 
0, 0.505709, 1, 0, 0.500282,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0125585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496959,-99) , 
2, -0.016377, 1, 0, 0.503798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493066,-99) , 
5, -0.0126064, 1, 0, 0.49796,-99) , 
3, 1.88206, 1, 0, 0.50055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485147,-99) , 
3, 9.37443, 1, 0, 0.499859,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00755411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497855,-99) , 
0, 0.491424, 1, 0, 0.498651,-99) , 
3, 9.36655, 0, 0, 0.499249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482774,-99) , 
4, 0.998572, 0, 0, 0.498509,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0102013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.09875, 0, 1, 0.503223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486147,-99) , 
4, 0.999932, 0, 0, 0.496309,-99) , 
2, -0.0714698, 0, 0, 0.502193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486768,-99) , 
4, 0.998571, 0, 0, 0.501498,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.00321725);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.528565, 0, 1, 0.501366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489354,-99) , 
1, 0.0240263, 1, 0, 0.501053,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.011214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486895,-99) , 
1, -0.0101907, 0, 0, 0.501729,-99) , 
6, 0.0237788, 0, 0, 0.504206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496604,-99) , 
2, 0.0307846, 0, 0, 0.49858,-99) , 
2, -0.21407, 1, 0, 0.499848,-99) , 
5, -0.281434, 1, 0, 0.501462,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.00497733);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.15418, 0, 1, 0.502076,-99) , 
NN(
0, 
0, 
-1, 0.25995, 0, -1, 0.491632,-99) , 
4, 0.999048, 0, 0, 0.50139,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00894393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496652,-99) , 
3, 4.73749, 0, 0, 0.498291,-99) , 
4, 0.997619, 1, 0, 0.498732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475634,-99) , 
1, -0.0239127, 0, 0, 0.498121,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0103156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.903, 0, 1, 0.502575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485489,-99) , 
2, -0.214102, 0, 0, 0.501779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491995,-99) , 
3, 1.09208, 1, 0, 0.497721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480632,-99) , 
3, 4.83476, 1, 0, 0.49432,-99) , 
5, 0.257558, 1, 0, 0.500092,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00784238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496593,-99) , 
5, 0.611319, 1, 0, 0.500499,-99) , 
5, 0.701092, 0, 0, 0.50685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497411,-99) , 
3, 7.05335, 0, 0, 0.498195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487345,-99) , 
2, -0.21407, 0, 0, 0.497657,-99) , 
5, 0.529708, 0, 0, 0.498443,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0100191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4375, 1, 1, 0.513374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497275,-99) , 
4, 0.999909, 1, 0, 0.498928,-99) , 
4, 0.999524, 1, 0, 0.500545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482067,-99) , 
3, 9.17503, 1, 0, 0.499671,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00384647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499804,-99) , 
3, 9.23522, 0, 0, 0.500479,-99) , 
4, 0.998571, 1, 0, 0.501162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483273,-99) , 
1, -0.0238602, 0, 0, 0.500685,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.00773583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494985,-99) , 
3, 4.82284, 1, 0, 0.500748,-99) , 
NN(
0, 
0, 
-1, 0.504666, 0, -1, 0.49208,-99) , 
0, 0.502852, 1, 0, 0.499731,-99) , 
NN(
0, 
0, 
-1, -0.0238602, 0, -1, 0.484265,-99) , 
6, 0.0238067, 1, 0, 0.498909,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00859676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494449,-99) , 
4, 0.999524, 0, 0, 0.50796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497496,-99) , 
4, 0.999524, 1, 0, 0.498438,-99) , 
5, 0.529691, 0, 0, 0.499228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483557,-99) , 
3, 9.20715, 1, 0, 0.498489,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0097195);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214439, 0, 1, 0.503175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494868,-99) , 
5, -0.614347, 1, 0, 0.497195,-99) , 
6, 0.0238067, 0, 0, 0.49917,-99) , 
5, -0.100173, 0, 0, 0.501105,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.00468885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.132792, 0, 1, 0.501646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488206,-99) , 
0, 0.490471, 0, 0, 0.501218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490438,-99) , 
2, 0.214411, 1, 0, 0.500685,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.00697548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498004,-99) , 
0, 0.504757, 0, 0, 0.498579,-99) , 
4, 0.998571, 1, 0, 0.499569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490351,-99) , 
3, 9.36834, 1, 0, 0.499153,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.00621247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.50462,-99) , 
NN(
0, 
0, 
-1, 0.999433, 0, -1, 0.498645,-99) , 
0, 0.499042, 0, 0, 0.501094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481163,-99) , 
4, 0.997619, 0, 0, 0.500583,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0113331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.99149, 0, 1, 0.504303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488905,-99) , 
5, 0.346004, 0, 0, 0.493721,-99) , 
4, 0.999819, 0, 0, 0.502759,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.485461,-99) , 
4, 0.999048, 0, 0, 0.50162,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0102386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481784,-99) , 
5, -0.37211, 0, 0, 0.506116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491669,-99) , 
5, 0.259749, 1, 0, 0.499738,-99) , 
2, -0.112158, 1, 0, 0.500523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489555,-99) , 
2, 0.214278, 1, 0, 0.499981,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.00890167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237468, 0, 1, 0.502601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495729,-99) , 
2, 0.112325, 0, 0, 0.49735,-99) , 
5, -0.277857, 1, 0, 0.499326,-99) , 
NN(
0, 
0, 
-1, -0.0101221, 0, -1, 0.487621,-99) , 
2, -0.214156, 0, 0, 0.498701,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.00883928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494535,-99) , 
4, 0.999048, 0, 0, 0.502134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489582,-99) , 
2, -0.213997, 0, 0, 0.501536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506481,-99) , 
NN(
0, 
0, 
-1, 0.502217, 1, -1, 0.490455,-99) , 
2, -0.0712535, 1, 0, 0.49384,-99) , 
0, 0.500947, 1, 0, 0.499731,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.00700059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496972,-99) , 
5, -0.0112114, 0, 0, 0.499185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485136,-99) , 
0, 0.505709, 1, 0, 0.498789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478704,-99) , 
1, 0.0240689, 1, 0, 0.498274,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.00482506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499548,-99) , 
0, 0.504757, 0, 0, 0.500279,-99) , 
4, 0.998095, 1, 0, 0.500833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481929,-99) , 
3, 9.29892, 1, 0, 0.49997,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00998873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497147,-99) , 
0, 0.49487, 0, 0, 0.503344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496616,-99) , 
6, 0.0237919, 0, 0, 0.498019,-99) , 
5, -0.0070614, 0, 0, 0.500231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486053,-99) , 
5, -0.102306, 1, 0, 0.4946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483793,-99) , 
2, -0.0710636, 0, 0, 0.492007,-99) , 
0, 0.502852, 1, 0, 0.499259,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00518126);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.34175, 0, 1, 0.501979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478838,-99) , 
4, 0.998095, 0, 0, 0.50124,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.00579544);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48442,-99) , 
2, 0.214011, 1, 0, 0.500779,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.496531,-99) , 
5, 0.173498, 1, 0, 0.499672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482282,-99) , 
4, 0.998095, 0, 0, 0.499115,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.00803101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498952,-99) , 
3, 0.789626, 1, 0, 0.50045,-99) , 
4, 0.998095, 1, 0, 0.501229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511257,-99) , 
NN(
0, 
0, 
-1, -0.0713037, 0, -1, 0.491959,-99) , 
5, 0.444286, 0, 0, 0.494575,-99) , 
3, 4.81005, 1, 0, 0.499941,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.00700086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.74748, 0, 1, 0.504571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497695,-99) , 
1, 0.0235696, 0, 0, 0.498351,-99) , 
5, 0.347235, 0, 0, 0.499356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481231,-99) , 
4, 0.997619, 0, 0, 0.498889,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00277508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49992,-99) , 
3, 9.1721, 0, 0, 0.5006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489492,-99) , 
4, 0.998866, 0, 0, 0.500251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486153,-99) , 
4, 0.997619, 0, 0, 0.499888,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0065554);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.502667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483824,-99) , 
3, 9.34175, 1, 0, 0.501814,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.00678644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494719,-99) , 
3, 5.30761, 1, 0, 0.519583,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.50526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495131,-99) , 
0, 0.499995, 1, 0, 0.498743,-99) , 
2, 0.0515147, 0, 0, 0.499685,-99) , 
2, 0.214721, 0, 0, 0.5007,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0102174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497768,-99) , 
2, -0.0154903, 1, 0, 0.500547,-99) , 
3, 9.17389, 0, 0, 0.501422,-99) , 
NN(
0, 
0, 
-1, 0.0715405, 0, -1, 0.489049,-99) , 
4, 0.999524, 0, 0, 0.500072,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0114118);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489896,-99) , 
3, 1.906, 1, 0, 0.51247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49717,-99) , 
5, 0.437061, 0, 0, 0.498312,-99) , 
4, 0.999524, 1, 0, 0.499916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50455,-99) , 
NN(
0, 
0, 
-1, -0.367691, 1, -1, 0.49184,-99) , 
0, 0.5019, 0, 0, 0.49485,-99) , 
3, 4.80966, 1, 0, 0.498931,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00844534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36885, 0, 1, 0.503971,-99) , 
NN(
0, 
0, 
-1, -0.548402, 0, -1, 0.496656,-99) , 
4, 0.999932, 0, 0, 0.501709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486326,-99) , 
4, 0.998571, 0, 0, 0.501017,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.00618694);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514201,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482941,-99) , 
3, 10.7708, 1, 0, 0.501035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483361,-99) , 
4, 0.998572, 0, 0, 0.500382,-99) , 
5, 0.624801, 0, 0, 0.501053,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.00672752);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498875,-99) , 
4, 0.998572, 1, 0, 0.499946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481805,-99) , 
5, 0.0789283, 1, 0, 0.49454,-99) , 
3, 4.73787, 1, 0, 0.498983,-99) , 
2, 0.214243, 0, 0, 0.499654,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00972194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.012086, 0, 1, 0.512051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49796,-99) , 
5, -0.0129151, 1, 0, 0.502007,-99) , 
2, 0.0715985, 0, 0, 0.503596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496915,-99) , 
2, -0.0671997, 1, 0, 0.498407,-99) , 
NN(
0, 
0, 
-1, 0.501627, 0, -1, 0.492041,-99) , 
3, 4.68636, 1, 0, 0.497023,-99) , 
0, 0.497138, 1, 0, 0.499639,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.00493715);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.618023, 0, 1, 0.501755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483535,-99) , 
2, 0.214425, 1, 0, 0.500872,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0103477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497993,-99) , 
3, 1.67335, 1, 0, 0.501248,-99) , 
4, 0.998095, 1, 0, 0.501999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486893,-99) , 
2, 0.0711704, 1, 0, 0.499404,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.486997,-99) , 
5, 0.0778859, 1, 0, 0.495068,-99) , 
3, 4.75808, 1, 0, 0.500633,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0045968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49965,-99) , 
2, -0.275079, 1, 0, 0.500245,-99) , 
2, 0.214574, 0, 0, 0.500966,-99) , 
NN(
0, 
0, 
-1, -0.806726, 1, -1, 0.48895,-99) , 
5, -0.729682, 0, 0, 0.500083,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.00819811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214454, 0, 1, 0.502998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4936,-99) , 
5, -0.520933, 1, 0, 0.498227,-99) , 
5, -0.281434, 0, 0, 0.501288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477685,-99) , 
1, -0.0236027, 0, 0, 0.50065,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.00777384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477158,-99) , 
3, 10.781, 1, 0, 0.50183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487984,-99) , 
5, 0.624794, 1, 0, 0.501263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48055,-99) , 
4, 0.997619, 0, 0, 0.500732,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.00398017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499955,-99) , 
5, 0.46432, 0, 0, 0.500562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490012,-99) , 
5, 0.618467, 1, 0, 0.500058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470845,-99) , 
3, 5.25768, 1, 0, 0.487978,-99) , 
2, -0.21408, 0, 0, 0.499413,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.00977413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495253,-99) , 
4, 0.999932, 0, 0, 0.500683,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.485608,-99) , 
5, 0.534538, 1, 0, 0.499637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480046,-99) , 
4, 0.998571, 0, 0, 0.498761,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.00673529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495693,-99) , 
5, -0.187404, 0, 0, 0.498588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48434,-99) , 
4, 0.998095, 0, 0, 0.498127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478952,-99) , 
1, 0.0245941, 1, 0, 0.497636,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.00693009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.46788, 0, 1, 0.501568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489193,-99) , 
5, 0.0784797, 0, 0, 0.495776,-99) , 
0, 0.494281, 0, 0, 0.500611,-99) , 
NN(
0, 
0, 
-1, -0.556122, 1, -1, 0.4852,-99) , 
6, 0.0238067, 1, 0, 0.499794,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.00542948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494029,-99) , 
5, -0.548615, 0, 0, 0.499297,-99) , 
3, 9.31046, 0, 0, 0.500011,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.487995,-99) , 
4, 0.999048, 0, 0, 0.499224,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0108972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496555, 1, 1, 0.502147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495761,-99) , 
4, 0.999524, 1, 0, 0.497559,-99) , 
0, 0.495777, 0, 0, 0.500058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488201,-99) , 
5, -0.460879, 0, 0, 0.50248,-99) , 
NN(
0, 
0, 
-1, -0.072173, 0, -1, 0.491335,-99) , 
0, 0.502308, 0, 0, 0.495386,-99) , 
0, 0.499043, 1, 0, 0.498155,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00692619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498005,-99) , 
5, -0.639939, 1, 0, 0.498809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477636,-99) , 
0, 0.49809, 1, 0, 0.491164,-99) , 
2, -0.214079, 0, 0, 0.4984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479561,-99) , 
1, -0.0233965, 0, 0, 0.497885,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0059177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00057, 1, 1, 0.511481,-99) , 
NN(
0, 
0, 
-1, 0.573592, 0, -1, 0.498608,-99) , 
4, 0.999524, 1, 0, 0.500039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487498,-99) , 
3, 9.37443, 1, 0, 0.499479,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00774807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490712,-99) , 
5, 0.439722, 1, 0, 0.499605,-99) , 
3, 0.536727, 1, 0, 0.500894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494247,-99) , 
5, 0.354312, 0, 0, 0.496096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48503,-99) , 
0, 0.493328, 0, 0, 0.494742,-99) , 
3, 4.65159, 1, 0, 0.499629,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.00445712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499364,-99) , 
2, 0.275062, 0, 0, 0.499759,-99) , 
2, -0.21452, 1, 0, 0.500517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486325,-99) , 
3, 9.37443, 1, 0, 0.499885,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0127929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497637,-99) , 
6, 0.00339828, 1, 0, 0.500665,-99) , 
6, 0.0237883, 0, 0, 0.502338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493976,-99) , 
2, -0.112277, 1, 0, 0.496266,-99) , 
2, 0.214169, 0, 0, 0.497417,-99) , 
5, -0.190727, 1, 0, 0.499612,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.00436464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0713213, 1, 1, 0.503191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486327,-99) , 
4, 0.999619, 0, 0, 0.499198,-99) , 
5, -0.00703285, 0, 0, 0.50087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488078,-99) , 
1, 0.0236427, 1, 0, 0.500529,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.00517396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487104,-99) , 
0, 0.490471, 0, 0, 0.500749,-99) , 
2, 0.214378, 0, 0, 0.501323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478438,-99) , 
1, 0.0242108, 1, 0, 0.500739,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_2_4_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_2_4_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_2_4_noNsigma *ReadBDT_maker_LHC19c2b_2_4_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_2_4_noNsigma(theInpVar);
  }
}
