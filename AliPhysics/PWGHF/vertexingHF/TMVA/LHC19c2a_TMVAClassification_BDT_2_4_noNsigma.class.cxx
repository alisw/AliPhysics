#include "LHC19c2a_TMVAClassification_BDT_2_4_noNsigma.class.h"

double ReadBDT_LHC19c2a_2_4_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_2_4_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.254411904361596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.678315, 1, 1, 0.775226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28694,-99) , 
6, 0.0238036, 1, 0, 0.51255,-99) , 
5, -0.549649, 1, 0, 0.569528,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.204854,-99) , 
4, 0.999524, 0, 0, 0.499265,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.232465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.678764, 1, 1, 0.744677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401542,-99) , 
4, 0.999909, 0, 0, 0.477359,-99) , 
5, -0.550451, 1, 0, 0.531699,-99) , 
NN(
0, 
0, 
-1, 0.996893, 0, -1, 0.167508,-99) , 
4, 0.999048, 0, 0, 0.48303,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.217394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.771488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460128,-99) , 
5, -0.493569, 1, 0, 0.473861,-99) , 
5, -0.639363, 1, 0, 0.515566,-99) , 
NN(
0, 
0, 
-1, 0.996893, 0, -1, 0.186364,-99) , 
4, 0.999048, 0, 0, 0.472587,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.153623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.752721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331246,-99) , 
6, 0.023809, 1, 0, 0.49512,-99) , 
5, -0.64026, 1, 0, 0.530435,-99) , 
NN(
0, 
0, 
-1, 0.996463, 0, -1, 0.196673,-99) , 
4, 0.999048, 0, 0, 0.488264,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.16356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.737637,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.47656,-99) , 
5, -0.63962, 1, 0, 0.51196,-99) , 
NN(
0, 
0, 
-1, 0.996463, 0, -1, 0.218796,-99) , 
4, 0.999048, 0, 0, 0.475333,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.154766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.722027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432306,-99) , 
4, 0.999819, 0, 0, 0.498139,-99) , 
5, -0.641064, 1, 0, 0.527637,-99) , 
NN(
0, 
0, 
-1, 0.996893, 0, -1, 0.230925,-99) , 
4, 0.999048, 0, 0, 0.491139,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.132901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.726085, 1, 1, 0.702476,-99) , 
NN(
0, 
0, 
-1, 0.500947, 1, -1, 0.480783,-99) , 
5, -0.640526, 1, 0, 0.509322,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.201609,-99) , 
4, 0.998572, 0, 0, 0.481326,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.112217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.742842, 1, 1, 0.688075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359928,-99) , 
6, 0.023809, 1, 0, 0.497591,-99) , 
5, -0.640195, 1, 0, 0.521887,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.20931,-99) , 
4, 0.998571, 0, 0, 0.493689,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.117858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.708737, 1, 1, 0.675258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433603,-99) , 
0, 0.500947, 1, 0, 0.485365,-99) , 
5, -0.640298, 1, 0, 0.509368,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.222616,-99) , 
4, 0.998572, 0, 0, 0.48388,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.152408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485987,-99) , 
4, 0.999909, 0, 0, 0.634312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460377,-99) , 
5, 0.200684, 0, 0, 0.476231,-99) , 
5, -0.551335, 1, 0, 0.505671,-99) , 
NN(
0, 
0, 
-1, 0.996463, 0, -1, 0.263918,-99) , 
4, 0.999048, 0, 0, 0.477549,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0940224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819855, 1, 1, 0.700365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421843,-99) , 
4, 0.99966, 0, 0, 0.491316,-99) , 
5, -0.729781, 1, 0, 0.507468,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.23753,-99) , 
4, 0.998571, 0, 0, 0.484486,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.118997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819742, 1, 1, 0.692065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470829,-99) , 
5, -0.575284, 1, 0, 0.478951,-99) , 
5, -0.72968, 1, 0, 0.495027,-99) , 
NN(
0, 
0, 
-1, 0.996168, 0, -1, 0.215486,-99) , 
4, 0.998095, 0, 0, 0.477138,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0728151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819742, 1, 1, 0.672632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400779,-99) , 
4, 0.999274, 0, 0, 0.49233,-99) , 
5, -0.72968, 1, 0, 0.505865,-99) , 
NN(
0, 
0, 
-1, 0.995783, 0, -1, 0.226736,-99) , 
4, 0.998095, 0, 0, 0.488159,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.200897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439687,-99) , 
6, 0.00680011, 0, 0, 0.50477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.150154,-99) , 
6, 0.0476072, 1, 0, 0.495145,-99) , 
NN(
0, 
0, 
-1, 0.99508, 0, -1, 0.208229,-99) , 
4, 0.997619, 0, 0, 0.479758,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.072613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819941, 1, 1, 0.669028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373378,-99) , 
6, 0.0238036, 1, 0, 0.495618,-99) , 
5, -0.730119, 1, 0, 0.508577,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.2807,-99) , 
4, 0.998571, 0, 0, 0.489772,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0820797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.806981, 1, 1, 0.655971,-99) , 
NN(
0, 
0, 
-1, 0.023809, 1, -1, 0.481604,-99) , 
5, -0.729781, 1, 0, 0.494489,-99) , 
NN(
0, 
0, 
-1, 0.416094, 0, -1, 0.232849,-99) , 
4, 0.997619, 0, 0, 0.480906,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0588244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.820396, 1, 1, 0.644341,-99) , 
NN(
0, 
0, 
-1, 0.0238036, 1, -1, 0.492205,-99) , 
5, -0.730601, 1, 0, 0.503132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.220986,-99) , 
4, 0.997143, 0, 0, 0.490422,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0638702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819555, 1, 1, 0.638153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385404,-99) , 
6, 0.0238036, 1, 0, 0.500477,-99) , 
5, -0.729501, 1, 0, 0.510372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.218485,-99) , 
4, 0.997143, 0, 0, 0.497461,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0570034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.832902, 1, 1, 0.627719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419024,-99) , 
4, 0.99932, 0, 0, 0.492455,-99) , 
5, -0.730328, 1, 0, 0.502119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.228237,-99) , 
4, 0.997143, 0, 0, 0.490033,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0657612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.820302, 1, 1, 0.623824,-99) , 
NN(
0, 
0, 
-1, 0.023809, 1, -1, 0.484893,-99) , 
5, -0.730461, 1, 0, 0.494726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.214926,-99) , 
4, 0.996667, 0, 0, 0.484025,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.05656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.776961, 1, 1, 0.588958,-99) , 
NN(
0, 
0, 
-1, 0.0238036, 1, -1, 0.491743,-99) , 
5, -0.639715, 1, 0, 0.503149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.240745,-99) , 
4, 0.997143, 0, 0, 0.491715,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0527457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819742, 1, 1, 0.60966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398318,-99) , 
6, 0.023809, 1, 0, 0.50023,-99) , 
5, -0.72968, 1, 0, 0.507923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.229406,-99) , 
4, 0.996667, 0, 0, 0.497335,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.161919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381509,-99) , 
4, 0.998571, 0, 0, 0.561588,-99) , 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.430178,-99) , 
6, 0.00453468, 0, 0, 0.499649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.166478,-99) , 
6, 0.0476179, 1, 0, 0.491051,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0679118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.832853, 1, 1, 0.593871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485431,-99) , 
5, 0.424698, 0, 0, 0.494185,-99) , 
5, -0.730181, 1, 0, 0.501161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231426,-99) , 
4, 0.996667, 0, 0, 0.491287,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0738252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.462019, 1, 1, 0.51799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38677,-99) , 
5, 0.168605, 0, 0, 0.452142,-99) , 
4, 0.999683, 0, 0, 0.506634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255038,-99) , 
4, 0.996667, 0, 0, 0.497356,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.1085);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484229,-99) , 
4, 0.999524, 0, 0, 0.59315,-99) , 
NN(
0, 
0, 
-1, 0.996667, 0, -1, 0.469241,-99) , 
6, 0.00906804, 0, 0, 0.499648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.176752,-99) , 
6, 0.0476079, 1, 0, 0.491464,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0669987);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495094,-99) , 
6, 0.010189, 0, 0, 0.513963,-99) , 
NN(
0, 
0, 
-1, -0.467347, 1, -1, 0.417818,-99) , 
6, 0.0237745, 1, 0, 0.508229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282841,-99) , 
4, 0.997143, 0, 0, 0.498999,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.101519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46849,-99) , 
6, 0.00340022, 0, 0, 0.518333,-99) , 
NN(
0, 
0, 
-1, -0.466772, 1, -1, 0.423397,-99) , 
6, 0.0238036, 1, 0, 0.512737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273251,-99) , 
4, 0.996667, 0, 0, 0.504153,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0782559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424322,-99) , 
4, 0.99981, 0, 0, 0.548248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484966,-99) , 
5, 0.307535, 0, 0, 0.498343,-99) , 
5, -0.461522, 1, 0, 0.510313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274699,-99) , 
4, 0.996191, 0, 0, 0.502938,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0514437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430199,-99) , 
6, 0.0238036, 1, 0, 0.50923,-99) , 
5, -0.82044, 1, 0, 0.512818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264372,-99) , 
4, 0.995714, 0, 0, 0.506081,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0503485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.729408, 1, 1, 0.515191,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.459456,-99) , 
0, 0.502852, 1, 0, 0.508003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28878,-99) , 
4, 0.996667, 0, 0, 0.500392,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0367926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41631,-99) , 
6, 0.0238036, 1, 0, 0.499611,-99) , 
5, -0.820301, 1, 0, 0.503017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314144,-99) , 
4, 0.997143, 0, 0, 0.49541,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0280923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602442,-99) , 
NN(
0, 
0, 
-1, 0.023809, 1, -1, 0.495619,-99) , 
5, -0.819552, 1, 0, 0.499024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304794,-99) , 
4, 0.996667, 0, 0, 0.492262,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0733234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490086,-99) , 
4, 0.999985, 0, 0, 0.513619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426365,-99) , 
5, 0.0783753, 0, 0, 0.473073,-99) , 
4, 0.999841, 0, 0, 0.503303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301119,-99) , 
4, 0.996667, 0, 0, 0.496349,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0477869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.730181, 1, 1, 0.514928,-99) , 
NN(
0, 
0, 
-1, 0.0809996, 0, -1, 0.478184,-99) , 
0, 0.499995, 1, 0, 0.503228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336007,-99) , 
4, 0.997619, 0, 0, 0.495538,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0485918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.729781, 1, 1, 0.509213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439945,-99) , 
5, 0.347095, 0, 0, 0.467688,-99) , 
4, 0.999796, 0, 0, 0.499676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291835,-99) , 
4, 0.995714, 0, 0, 0.494174,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0355327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.832773, 1, 1, 0.560931,-99) , 
NN(
0, 
0, 
-1, 0.0237926, 1, -1, 0.492242,-99) , 
5, -0.730119, 1, 0, 0.496988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328427,-99) , 
4, 0.997143, 0, 0, 0.490329,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0518376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493568,-99) , 
6, 0.0113374, 0, 0, 0.50554,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.437769,-99) , 
6, 0.023809, 1, 0, 0.501541,-99) , 
NN(
0, 
0, 
-1, 0.44023, 0, -1, 0.361749,-99) , 
4, 0.998095, 0, 0, 0.493756,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0302025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.612195, 0, 1, 0.507739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427563,-99) , 
3, 9.37648, 1, 0, 0.504357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312216,-99) , 
4, 0.995714, 0, 0, 0.499342,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0549418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489957,-99) , 
4, 0.999971, 0, 0, 0.506927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399733,-99) , 
5, 0.257921, 0, 0, 0.456044,-99) , 
4, 0.999388, 0, 0, 0.501002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307804,-99) , 
4, 0.995714, 0, 0, 0.495984,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0589957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489973,-99) , 
6, 0.00793619, 0, 0, 0.506865,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.443687,-99) , 
6, 0.023809, 1, 0, 0.503123,-99) , 
NN(
0, 
0, 
-1, 0.435924, 0, -1, 0.367386,-99) , 
4, 0.998095, 0, 0, 0.495671,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.042025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493153,-99) , 
5, 0.0739674, 0, 0, 0.503393,-99) , 
5, -0.820004, 1, 0, 0.506074,-99) , 
NN(
0, 
0, 
-1, 0.443768, 0, -1, 0.378001,-99) , 
4, 0.998095, 0, 0, 0.499034,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0549298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491816,-99) , 
6, 0.00566737, 0, 0, 0.511097,-99) , 
NN(
0, 
0, 
-1, 0.498093, 1, -1, 0.443014,-99) , 
6, 0.0238036, 1, 0, 0.507104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371446,-99) , 
4, 0.997619, 0, 0, 0.501009,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0462547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.820266, 1, 1, 0.512878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430909,-99) , 
5, 0.438251, 0, 0, 0.465688,-99) , 
4, 0.999388, 0, 0, 0.507408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324956,-99) , 
4, 0.995714, 0, 0, 0.502805,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0439216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453249,-99) , 
4, 0.999905, 0, 0, 0.532131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492202,-99) , 
5, 0.544425, 0, 0, 0.49674,-99) , 
5, -0.550693, 1, 0, 0.502786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34323,-99) , 
4, 0.996191, 0, 0, 0.498185,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.03285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.621226, 0, 1, 0.510036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439724,-99) , 
3, 9.23409, 1, 0, 0.506919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342745,-99) , 
4, 0.99619, 0, 0, 0.502213,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0539069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473996,-99) , 
6, 0.00226749, 0, 0, 0.507513,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.452359,-99) , 
6, 0.023809, 1, 0, 0.504271,-99) , 
NN(
0, 
0, 
-1, 0.444208, 0, -1, 0.392173,-99) , 
4, 0.998095, 0, 0, 0.498231,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0261165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499806,-99) , 
6, 0.0124711, 0, 0, 0.505434,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.455604,-99) , 
6, 0.023809, 1, 0, 0.502474,-99) , 
NN(
0, 
0, 
-1, 0.443768, 0, -1, 0.399501,-99) , 
4, 0.998095, 0, 0, 0.496923,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0224542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.615188, 0, 1, 0.505848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44567,-99) , 
3, 9.22081, 1, 0, 0.503156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365529,-99) , 
4, 0.995714, 0, 0, 0.499664,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0371612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465895,-99) , 
6, 0.00113348, 0, 0, 0.503912,-99) , 
NN(
0, 
0, 
-1, -0.466772, 1, -1, 0.454432,-99) , 
6, 0.0238036, 1, 0, 0.501008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395343,-99) , 
4, 0.997619, 0, 0, 0.496304,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0198275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556167,-99) , 
NN(
0, 
0, 
-1, 0.99898, 0, -1, 0.495268,-99) , 
5, 0.617147, 0, 0, 0.497788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372944,-99) , 
4, 0.995714, 0, 0, 0.494618,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0356795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488377,-99) , 
5, -0.00941205, 0, 0, 0.497634,-99) , 
5, -0.820226, 1, 0, 0.499915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395146,-99) , 
4, 0.997619, 0, 0, 0.495315,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0448253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456476,-99) , 
4, 0.999875, 0, 0, 0.516559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474934,-99) , 
5, -0.0715698, 0, 0, 0.493477,-99) , 
5, -0.37102, 1, 0, 0.500841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390822,-99) , 
4, 0.997143, 0, 0, 0.496706,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0194582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558891,-99) , 
NN(
0, 
0, 
-1, 9.33032, 1, -1, 0.497321,-99) , 
5, -0.819552, 1, 0, 0.499331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315159,-99) , 
5, 0.440744, 0, 0, 0.410949,-99) , 
4, 0.998095, 0, 0, 0.494596,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0186162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.621226, 0, 1, 0.503719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451599,-99) , 
3, 9.23016, 1, 0, 0.501417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381477,-99) , 
4, 0.996667, 0, 0, 0.497575,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0341903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.461522, 1, 1, 0.509808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481724,-99) , 
2, 0.0685396, 0, 0, 0.487133,-99) , 
0, 0.499043, 1, 0, 0.500592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336375,-99) , 
5, 0.443768, 0, 0, 0.422133,-99) , 
4, 0.998095, 0, 0, 0.496303,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0354743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486842,-99) , 
4, 0.999948, 0, 0, 0.501751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395954,-99) , 
5, 0.160157, 0, 0, 0.457876,-99) , 
4, 0.998912, 0, 0, 0.498838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381764,-99) , 
4, 0.99619, 0, 0, 0.495536,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.031856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492958,-99) , 
6, 0.0113374, 0, 0, 0.499038,-99) , 
NN(
0, 
0, 
-1, -0.465399, 1, -1, 0.45572,-99) , 
6, 0.023809, 1, 0, 0.496501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386483,-99) , 
4, 0.996191, 0, 0, 0.493395,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0185233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462049,-99) , 
3, 9.22081, 1, 0, 0.499647,-99) , 
5, -0.820394, 1, 0, 0.501392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330525,-99) , 
5, 0.439586, 0, 0, 0.415752,-99) , 
4, 0.998095, 0, 0, 0.49682,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0183212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553727,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.496818,-99) , 
5, -0.820299, 1, 0, 0.49863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345883,-99) , 
5, 0.437001, 0, 0, 0.427241,-99) , 
4, 0.998095, 0, 0, 0.49479,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0175811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461287,-99) , 
6, 0.023809, 1, 0, 0.498328,-99) , 
5, -0.819906, 1, 0, 0.500229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336387,-99) , 
5, 0.440744, 0, 0, 0.423519,-99) , 
4, 0.998095, 0, 0, 0.496089,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0233396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496654,-99) , 
5, -0.73036, 1, 0, 0.499082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412846,-99) , 
5, 0.261067, 0, 0, 0.462561,-99) , 
4, 0.998912, 0, 0, 0.49664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390335,-99) , 
4, 0.99619, 0, 0, 0.493652,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0238036);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498041,-99) , 
6, 0.0113372, 0, 0, 0.502624,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.467369,-99) , 
6, 0.023809, 1, 0, 0.500534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33897,-99) , 
5, 0.444208, 0, 0, 0.421399,-99) , 
4, 0.998095, 0, 0, 0.496306,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0324502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485752,-99) , 
6, 0.00226592, 0, 0, 0.504893,-99) , 
NN(
0, 
0, 
-1, -0.465347, 1, -1, 0.462898,-99) , 
6, 0.0237926, 1, 0, 0.502444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396731,-99) , 
4, 0.99619, 0, 0, 0.49946,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0212587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498825,-99) , 
5, -0.370881, 1, 0, 0.50398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458477,-99) , 
4, 0.998821, 0, 0, 0.502378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351768,-99) , 
5, 0.439073, 0, 0, 0.424923,-99) , 
4, 0.998095, 0, 0, 0.498243,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.018803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498048,-99) , 
5, -0.769084, 1, 0, 0.50008,-99) , 
5, 0.616291, 0, 0, 0.501719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340503,-99) , 
5, 0.444362, 0, 0, 0.417341,-99) , 
4, 0.998095, 0, 0, 0.49724,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0245823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.614037, 0, 1, 0.507282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465974,-99) , 
3, 9.31837, 1, 0, 0.505534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352672,-99) , 
5, 0.440304, 0, 0, 0.429702,-99) , 
4, 0.998095, 0, 0, 0.501472,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0264643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476795,-99) , 
0, 0.491469, 0, 0, 0.504933,-99) , 
NN(
0, 
0, 
-1, 4.1899, 0, -1, 0.477756,-99) , 
0, 0.503804, 1, 0, 0.50257,-99) , 
NN(
0, 
0, 
-1, 0.435924, 0, -1, 0.418244,-99) , 
4, 0.998095, 0, 0, 0.498067,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0280004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492921,-99) , 
0, 0.49809, 1, 0, 0.500233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41291,-99) , 
5, 0.0795851, 0, 0, 0.470171,-99) , 
4, 0.999274, 0, 0, 0.497299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387362,-99) , 
4, 0.99619, 0, 0, 0.494264,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0166086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442419,-99) , 
1, -0.0253111, 0, 0, 0.500276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459322,-99) , 
1, 0.0245025, 1, 0, 0.499124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352616,-99) , 
5, 0.439073, 0, 0, 0.426845,-99) , 
4, 0.998095, 0, 0, 0.495314,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0161668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534945,-99) , 
NN(
0, 
0, 
-1, 0.999456, 0, -1, 0.496871,-99) , 
5, 0.617143, 0, 0, 0.498261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350871,-99) , 
5, 0.439073, 0, 0, 0.426599,-99) , 
4, 0.998095, 0, 0, 0.494489,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0133932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499435,-99) , 
5, -0.820194, 1, 0, 0.500676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463758,-99) , 
0, 0.490471, 0, 0, 0.499137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416637,-99) , 
4, 0.997619, 0, 0, 0.495547,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0175507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819552, 1, 1, 0.502786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417507,-99) , 
5, 0.25216, 0, 0, 0.464178,-99) , 
4, 0.998912, 0, 0, 0.500229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396054,-99) , 
4, 0.996191, 0, 0, 0.497355,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0199576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496166,-99) , 
5, -0.459298, 1, 0, 0.49967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464846,-99) , 
4, 0.998821, 0, 0, 0.49844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35812,-99) , 
5, 0.440304, 0, 0, 0.428097,-99) , 
4, 0.998095, 0, 0, 0.4947,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0144988);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498653,-99) , 
5, 0.617147, 0, 0, 0.500605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460423,-99) , 
3, 9.32771, 1, 0, 0.498883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40553,-99) , 
4, 0.996191, 0, 0, 0.496282,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.01646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0124711, 0, 1, 0.503779,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.475791,-99) , 
6, 0.023809, 1, 0, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0.435924, 0, -1, 0.433976,-99) , 
4, 0.998095, 0, 0, 0.498505,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0185783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497399,-99) , 
2, 0.0708099, 0, 0, 0.500339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462024,-99) , 
4, 0.998821, 0, 0, 0.498987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36689,-99) , 
5, 0.447677, 0, 0, 0.43147,-99) , 
4, 0.998095, 0, 0, 0.495415,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0172361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.212663, 0, 1, 0.504139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464359,-99) , 
3, 9.32771, 1, 0, 0.502468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420723,-99) , 
4, 0.997619, 0, 0, 0.498975,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0373811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498267,-99) , 
4, 0.999996, 0, 0, 0.507543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47576,-99) , 
5, -0.098992, 0, 0, 0.494045,-99) , 
4, 0.999955, 0, 0, 0.502018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539689,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.41656,-99) , 
5, 0.527279, 0, 0, 0.449324,-99) , 
4, 0.999048, 0, 0, 0.496696,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0176922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477205,-99) , 
6, 0.0238036, 1, 0, 0.501825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464644,-99) , 
0, 0.490471, 0, 0, 0.500316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374062,-99) , 
5, 0.439791, 0, 0, 0.43598,-99) , 
4, 0.998095, 0, 0, 0.496916,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0173616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497771,-99) , 
2, -0.071299, 1, 0, 0.500407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465673,-99) , 
4, 0.998821, 0, 0, 0.499187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371017,-99) , 
5, 0.444362, 0, 0, 0.439095,-99) , 
4, 0.998095, 0, 0, 0.495972,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0172102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497427,-99) , 
2, 0.0711445, 0, 0, 0.500207,-99) , 
5, -0.820004, 1, 0, 0.501343,-99) , 
NN(
0, 
0, 
-1, 0.44455, 0, -1, 0.435585,-99) , 
4, 0.998095, 0, 0, 0.497867,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0275485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495077,-99) , 
4, 0.999974, 0, 0, 0.503574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4288,-99) , 
5, -0.0134248, 0, 0, 0.479341,-99) , 
4, 0.999456, 0, 0, 0.500628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413517,-99) , 
4, 0.996191, 0, 0, 0.498207,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0131731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.212664, 0, 1, 0.502643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473642,-99) , 
3, 9.31837, 1, 0, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0.448685, 0, -1, 0.440466,-99) , 
4, 0.998095, 0, 0, 0.498209,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0216285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.107775, 0, 1, 0.513104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494796,-99) , 
2, -0.0781015, 1, 0, 0.498342,-99) , 
2, 0.0715463, 0, 0, 0.500808,-99) , 
NN(
0, 
0, 
-1, 0.444208, 0, -1, 0.435616,-99) , 
4, 0.998095, 0, 0, 0.497395,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0223543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479955,-99) , 
6, 0.00113353, 0, 0, 0.503037,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.472113,-99) , 
6, 0.023804, 1, 0, 0.501251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432222,-99) , 
4, 0.996667, 0, 0, 0.499051,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0175176);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482025,-99) , 
0, 0.491469, 0, 0, 0.501776,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.478155,-99) , 
0, 0.503804, 1, 0, 0.499727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386259,-99) , 
5, 0.44023, 0, 0, 0.446285,-99) , 
4, 0.998095, 0, 0, 0.496897,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0198005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492266,-99) , 
4, 0.999944, 0, 0, 0.50009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462199,-99) , 
4, 0.998821, 0, 0, 0.498765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384517,-99) , 
5, 0.446519, 0, 0, 0.44149,-99) , 
4, 0.998095, 0, 0, 0.495742,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0180309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496896,-99) , 
0, 0.496185, 1, 0, 0.500788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429748,-99) , 
5, 0.16972, 0, 0, 0.47189,-99) , 
4, 0.998912, 0, 0, 0.498872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427037,-99) , 
4, 0.99619, 0, 0, 0.49688,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0152202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548455,-99) , 
NN(
0, 
0, 
-1, 0.998095, 0, -1, 0.497009,-99) , 
5, 0.621271, 0, 0, 0.499329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435888,-99) , 
3, 9.32771, 1, 0, 0.496571,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0139487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444962,-99) , 
4, 0.998095, 0, 0, 0.49844,-99) , 
5, 0.621209, 0, 0, 0.50025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441192,-99) , 
3, 9.37264, 1, 0, 0.497717,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0135042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498398,-99) , 
2, 0.213601, 0, 0, 0.500291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465142,-99) , 
3, 8.99531, 1, 0, 0.49861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425946,-99) , 
4, 0.996191, 0, 0, 0.496601,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0170008);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.820643, 1, 1, 0.502758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537253,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.43184,-99) , 
5, 0.528775, 0, 0, 0.460021,-99) , 
4, 0.999048, 0, 0, 0.498464,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0126348);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498407,-99) , 
2, 0.213542, 0, 0, 0.49961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469043,-99) , 
4, 0.998821, 0, 0, 0.498534,-99) , 
NN(
0, 
0, 
-1, 0.444801, 0, -1, 0.444718,-99) , 
4, 0.998095, 0, 0, 0.49574,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0158291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432439,-99) , 
4, 0.998095, 0, 0, 0.497751,-99) , 
5, 0.616702, 0, 0, 0.500235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435328,-99) , 
3, 9.37657, 1, 0, 0.497485,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0188339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547736,-99) , 
NN(
0, 
0, 
-1, 0.998095, 0, -1, 0.494777,-99) , 
5, 0.617131, 0, 0, 0.497227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441358,-99) , 
3, 9.31837, 1, 0, 0.494809,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0182509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.104123, 0, 1, 0.512112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496296,-99) , 
2, 0.0783493, 0, 0, 0.499391,-99) , 
2, -0.071299, 1, 0, 0.501437,-99) , 
NN(
0, 
0, 
-1, 0.348325, 0, -1, 0.457438,-99) , 
4, 0.998572, 0, 0, 0.498262,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0141289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440316,-99) , 
4, 0.997619, 0, 0, 0.49928,-99) , 
5, 0.617143, 0, 0, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450809,-99) , 
3, 9.23016, 1, 0, 0.499157,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0229219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999998, 0, 1, 0.504315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482895,-99) , 
5, -0.0990328, 0, 0, 0.494974,-99) , 
4, 0.999955, 0, 0, 0.500496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531766,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.441897,-99) , 
5, 0.527534, 0, 0, 0.465868,-99) , 
4, 0.999048, 0, 0, 0.497001,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0156455);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498434,-99) , 
2, -0.202782, 1, 0, 0.4997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438201,-99) , 
5, -0.101069, 0, 0, 0.481222,-99) , 
4, 0.999456, 0, 0, 0.497866,-99) , 
NN(
0, 
0, 
-1, 0.437514, 0, -1, 0.449142,-99) , 
4, 0.998095, 0, 0, 0.495347,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0122181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539559,-99) , 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.497896,-99) , 
5, 0.621209, 0, 0, 0.499785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448522,-99) , 
3, 8.98995, 1, 0, 0.497306,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0139708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435177,-99) , 
4, 0.997619, 0, 0, 0.498998,-99) , 
5, 0.617206, 0, 0, 0.500932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446428,-99) , 
3, 9.32771, 1, 0, 0.498582,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0112932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499952,-99) , 
5, -0.819446, 1, 0, 0.501217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430527,-99) , 
5, -0.0108627, 0, 0, 0.477983,-99) , 
4, 0.999274, 0, 0, 0.498962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43878,-99) , 
4, 0.99619, 0, 0, 0.49731,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0121953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449473,-99) , 
4, 0.997619, 0, 0, 0.499138,-99) , 
5, 0.617177, 0, 0, 0.500991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449484,-99) , 
3, 9.37264, 1, 0, 0.498785,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.016404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461128,-99) , 
0, 0.490199, 0, 0, 0.501926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459042,-99) , 
0, 0.505709, 1, 0, 0.500505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446945,-99) , 
3, 9.37648, 1, 0, 0.498228,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0102888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477432,-99) , 
0, 0.50453, 1, 0, 0.498619,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.474153,-99) , 
0, 0.491424, 0, 0, 0.497032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427047,-99) , 
4, 0.996191, 0, 0, 0.495149,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0187721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4953,-99) , 
5, -0.461738, 1, 0, 0.498522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429892,-99) , 
5, -0.00897485, 0, 0, 0.475806,-99) , 
4, 0.999274, 0, 0, 0.496321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432058,-99) , 
4, 0.99619, 0, 0, 0.494593,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0250706);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494862,-99) , 
4, 0.999996, 0, 0, 0.502032,-99) , 
NN(
0, 
0, 
-1, -0.640263, 0, -1, 0.491082,-99) , 
4, 0.999955, 0, 0, 0.497554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47531,-99) , 
5, 0.528778, 0, 0, 0.497016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43295,-99) , 
5, 0.260326, 0, 0, 0.467382,-99) , 
4, 0.999048, 0, 0, 0.494505,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0112248);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499317,-99) , 
2, -0.214645, 1, 0, 0.500522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442169,-99) , 
5, -0.00897485, 0, 0, 0.48189,-99) , 
4, 0.999274, 0, 0, 0.498686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442915,-99) , 
4, 0.996191, 0, 0, 0.497169,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0139959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.72968, 1, 1, 0.503473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446675,-99) , 
5, -0.105117, 0, 0, 0.48087,-99) , 
4, 0.999274, 0, 0, 0.501796,-99) , 
NN(
0, 
0, 
-1, 0.44023, 0, -1, 0.456136,-99) , 
4, 0.998095, 0, 0, 0.49942,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0136825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498901,-99) , 
2, -0.071688, 1, 0, 0.501125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454413,-99) , 
5, -0.0143893, 0, 0, 0.48066,-99) , 
4, 0.999433, 0, 0, 0.498983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449348,-99) , 
4, 0.997619, 0, 0, 0.496894,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0117246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.82, 1, 1, 0.501481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457018,-99) , 
5, 0.161693, 0, 0, 0.480797,-99) , 
4, 0.999456, 0, 0, 0.498958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44327,-99) , 
4, 0.996191, 0, 0, 0.497452,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0183091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495351,-99) , 
3, 0.571383, 1, 0, 0.497469,-99) , 
5, 0.621299, 0, 0, 0.499397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457523,-99) , 
3, 9.33164, 1, 0, 0.497591,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0128721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497751,-99) , 
3, 0.552139, 1, 0, 0.499375,-99) , 
5, 0.617237, 0, 0, 0.500804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458841,-99) , 
3, 9.22081, 1, 0, 0.498929,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0146288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.820394, 1, 1, 0.503685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446537,-99) , 
5, -0.191077, 0, 0, 0.485429,-99) , 
4, 0.999365, 0, 0, 0.502123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409525,-99) , 
5, 0.44023, 0, 0, 0.455284,-99) , 
4, 0.998095, 0, 0, 0.499713,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.019275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0110511, 0, 1, 0.532284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495497,-99) , 
2, -0.112728, 1, 0, 0.498385,-99) , 
2, 0.213601, 0, 0, 0.500409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44851,-99) , 
3, 9.37697, 1, 0, 0.498212,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0162475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.89807, 0, 1, 0.506518,-99) , 
NN(
0, 
0, 
-1, -0.639356, 0, -1, 0.495628,-99) , 
4, 0.999955, 0, 0, 0.50207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505849,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.448742,-99) , 
5, 0.340834, 0, 0, 0.475183,-99) , 
4, 0.999048, 0, 0, 0.499357,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0171915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0722467, 0, 1, 0.504343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47687,-99) , 
4, 0.99941, 0, 0, 0.503198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520472,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.45341,-99) , 
5, 0.525032, 0, 0, 0.47143,-99) , 
4, 0.999048, 0, 0, 0.499999,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0149859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499636,-99) , 
5, -0.310925, 0, 0, 0.529759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497156,-99) , 
2, 0.214749, 0, 0, 0.499065,-99) , 
3, 0.54114, 1, 0, 0.500876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461508,-99) , 
3, 8.98995, 1, 0, 0.498971,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0151647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.51633, 1, 1, 0.527903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497631,-99) , 
2, -0.111916, 1, 0, 0.50052,-99) , 
2, 0.214411, 0, 0, 0.502105,-99) , 
NN(
0, 
0, 
-1, -0.10446, 1, -1, 0.462906,-99) , 
3, 8.80287, 1, 0, 0.500108,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0166677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496185, 1, 1, 0.505052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452566,-99) , 
5, 0.0805899, 0, 0, 0.482724,-99) , 
4, 0.999274, 0, 0, 0.502891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440719,-99) , 
4, 0.996191, 0, 0, 0.50124,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0139041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.229434, 0, 1, 0.527152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497321,-99) , 
2, -0.214238, 1, 0, 0.499022,-99) , 
3, 0.56548, 1, 0, 0.500887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464118,-99) , 
3, 9.20939, 1, 0, 0.499226,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0142364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.371799, 1, 1, 0.504127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451188,-99) , 
5, -0.100459, 0, 0, 0.486322,-99) , 
4, 0.99932, 0, 0, 0.502547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462286,-99) , 
4, 0.997619, 0, 0, 0.500843,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0130999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0112739, 0, 1, 0.528913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497739,-99) , 
3, 0.569197, 1, 0, 0.499447,-99) , 
2, 0.214478, 0, 0, 0.501192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461729,-99) , 
3, 9.37264, 1, 0, 0.499515,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.012211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0707414, 0, 1, 0.503352,-99) , 
NN(
0, 
0, 
-1, -0.101346, 0, -1, 0.482884,-99) , 
4, 0.999365, 0, 0, 0.501225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452297,-99) , 
4, 0.996667, 0, 0, 0.499716,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0158929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498176,-99) , 
5, 0.351011, 0, 0, 0.501922,-99) , 
NN(
0, 
0, 
-1, 0.0238589, 1, -1, 0.47355,-99) , 
6, 0.023809, 1, 0, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451947,-99) , 
3, 9.37264, 1, 0, 0.498265,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0133496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0102016, 0, 1, 0.503948,-99) , 
NN(
0, 
0, 
-1, -0.0238244, 0, -1, 0.473195,-99) , 
6, 0.023804, 1, 0, 0.502174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462002,-99) , 
3, 9.36329, 1, 0, 0.500447,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0128464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.730899, 1, 1, 0.503311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433993,-99) , 
3, 4.6796, 1, 0, 0.490535,-99) , 
4, 0.999728, 0, 0, 0.501146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438672,-99) , 
5, 0.439791, 0, 0, 0.470707,-99) , 
4, 0.998095, 0, 0, 0.499553,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0102227);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499353,-99) , 
5, 0.617159, 0, 0, 0.500887,-99) , 
NN(
0, 
0, 
-1, 0.505973, 1, -1, 0.474846,-99) , 
0, 0.504167, 1, 0, 0.498841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450174,-99) , 
0, 0.489519, 0, 0, 0.497588,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.00895533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.550966, 1, 1, 0.501959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471674,-99) , 
3, 9.19619, 1, 0, 0.500612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444498,-99) , 
0, 0.489519, 0, 0, 0.49917,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0173282);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492497,-99) , 
3, 4.51987, 1, 0, 0.510206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489997,-99) , 
2, -0.0027094, 1, 0, 0.496712,-99) , 
2, 0.0720865, 0, 0, 0.498993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46438,-99) , 
4, 0.997619, 0, 0, 0.497513,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.00878374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.101101, 0, 1, 0.525141,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.4983,-99) , 
2, 0.213615, 0, 0, 0.49988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466236,-99) , 
3, 9.37657, 1, 0, 0.498442,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0179535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0782667, 0, 1, 0.512123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492836,-99) , 
5, -0.372225, 1, 0, 0.496938,-99) , 
2, 0.0719534, 0, 0, 0.499535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463723,-99) , 
3, 9.37599, 1, 0, 0.498014,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0134222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498774,-99) , 
3, 0.994851, 1, 0, 0.502392,-99) , 
NN(
0, 
0, 
-1, 2.75761, 0, -1, 0.476311,-99) , 
0, 0.504757, 1, 0, 0.500897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465131,-99) , 
3, 9.31837, 1, 0, 0.499373,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0127078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49894,-99) , 
0, 0.49809, 1, 0, 0.502799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47682,-99) , 
4, 0.998821, 0, 0, 0.501895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428685,-99) , 
5, 0.444362, 0, 0, 0.468143,-99) , 
4, 0.998095, 0, 0, 0.500165,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0145053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498102,-99) , 
5, -0.103237, 0, 0, 0.502613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438323,-99) , 
4, 0.999637, 0, 0, 0.482993,-99) , 
0, 0.492376, 0, 0, 0.500767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448388,-99) , 
4, 0.99619, 0, 0, 0.499376,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.00997924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819824, 1, 1, 0.502692,-99) , 
NN(
0, 
0, 
-1, 0.506137, 1, -1, 0.480193,-99) , 
0, 0.504167, 1, 0, 0.500939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459318,-99) , 
0, 0.489519, 0, 0, 0.499844,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0110379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497513,-99) , 
2, -0.0719604, 1, 0, 0.499238,-99) , 
5, -0.819847, 1, 0, 0.500031,-99) , 
NN(
0, 
0, 
-1, 0.439073, 0, -1, 0.467424,-99) , 
4, 0.998095, 0, 0, 0.498359,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.00711051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.180196, 1, 1, 0.501733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468068,-99) , 
2, -0.35707, 0, 0, 0.500861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457415,-99) , 
0, 0.489519, 0, 0, 0.499734,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0216199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.104122, 1, 1, 0.526683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494799,-99) , 
5, -0.730453, 1, 0, 0.497018,-99) , 
6, 0.0124686, 0, 0, 0.500304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42716,-99) , 
5, -0.467106, 1, 0, 0.471552,-99) , 
6, 0.023804, 1, 0, 0.498673,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0192661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48454,-99) , 
6, 0.00113256, 0, 0, 0.503998,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.481709,-99) , 
6, 0.0237836, 1, 0, 0.502715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450698,-99) , 
4, 0.996191, 0, 0, 0.501341,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.011995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498623,-99) , 
5, -0.0136634, 0, 0, 0.502357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478347,-99) , 
1, -0.0240946, 0, 0, 0.501669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436788,-99) , 
5, 0.439586, 0, 0, 0.468692,-99) , 
4, 0.998095, 0, 0, 0.49999,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0101176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214492, 1, 1, 0.503151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4758,-99) , 
3, 9.37264, 1, 0, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455767,-99) , 
0, 0.489519, 0, 0, 0.500825,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0117097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470707,-99) , 
4, 0.998095, 0, 0, 0.500084,-99) , 
5, 0.614062, 0, 0, 0.501098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481774,-99) , 
4, 0.999932, 0, 0, 0.498583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427657,-99) , 
4, 0.999524, 0, 0, 0.477729,-99) , 
0, 0.492376, 0, 0, 0.498826,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0154529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495217,-99) , 
2, 0.0709239, 0, 0, 0.497444,-99) , 
5, 0.617206, 0, 0, 0.499045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46677,-99) , 
3, 9.37264, 1, 0, 0.497677,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0175017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496215,-99) , 
4, 0.999987, 0, 0, 0.501835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4472,-99) , 
3, 4.38671, 1, 0, 0.49151,-99) , 
4, 0.999728, 0, 0, 0.500089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464809,-99) , 
4, 0.998095, 0, 0, 0.498296,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0156503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.89807, 0, 1, 0.505851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454376,-99) , 
5, -0.639199, 0, 0, 0.497776,-99) , 
4, 0.999955, 0, 0, 0.502549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492641,-99) , 
5, 0.526772, 0, 0, 0.50147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449006,-99) , 
5, 0.257958, 0, 0, 0.477529,-99) , 
4, 0.999048, 0, 0, 0.500052,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.00884167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.617147, 0, 1, 0.501569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440196,-99) , 
4, 0.999524, 0, 0, 0.484552,-99) , 
0, 0.492784, 0, 0, 0.499578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468979,-99) , 
0, 0.505709, 1, 0, 0.498541,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0140799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496704,-99) , 
6, 0.0102015, 0, 0, 0.499622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450337,-99) , 
5, -0.465399, 1, 0, 0.481043,-99) , 
6, 0.0238036, 1, 0, 0.498554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465666,-99) , 
0, 0.489519, 0, 0, 0.497703,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0092097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498444,-99) , 
5, 0.531166, 0, 0, 0.49988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471742,-99) , 
0, 0.50589, 1, 0, 0.499018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454301,-99) , 
0, 0.489519, 0, 0, 0.49788,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.00905428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48664,-99) , 
6, 0.023804, 1, 0, 0.501135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470603,-99) , 
0, 0.50589, 1, 0, 0.500194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456819,-99) , 
0, 0.489519, 0, 0, 0.499085,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0088409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.25599, 1, 1, 0.526987,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.497939,-99) , 
2, -0.180236, 1, 0, 0.499542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459771,-99) , 
2, -0.357105, 0, 0, 0.498478,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.00875864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499616,-99) , 
3, 9.33156, 0, 0, 0.500955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445906,-99) , 
0, 0.494281, 0, 0, 0.485993,-99) , 
4, 0.999433, 0, 0, 0.499407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466537,-99) , 
4, 0.997619, 0, 0, 0.498048,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0123636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.310925, 0, 1, 0.529254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498661,-99) , 
2, -0.0713929, 1, 0, 0.501447,-99) , 
3, 0.541109, 1, 0, 0.5031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473869,-99) , 
3, 8.98995, 1, 0, 0.501695,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0183764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.33207, 0, 1, 0.504403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466126,-99) , 
0, 0.493328, 0, 0, 0.503995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386609,-99) , 
3, 4.68423, 1, 0, 0.484771,-99) , 
4, 0.999524, 0, 0, 0.501333,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0086732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819741, 1, 1, 0.501764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429385,-99) , 
3, 4.6796, 1, 0, 0.488985,-99) , 
4, 0.999637, 0, 0, 0.499725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462078,-99) , 
4, 0.99619, 0, 0, 0.498733,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0110769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519673,-99) , 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.496481,-99) , 
5, 0.621226, 0, 0, 0.497528,-99) , 
NN(
0, 
0, 
-1, -0.0170347, 1, -1, 0.476649,-99) , 
0, 0.491424, 0, 0, 0.496118,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0158296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.97302, 1, 1, 0.516539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494102,-99) , 
5, -0.37102, 1, 0, 0.497588,-99) , 
2, -0.091742, 1, 0, 0.50005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464526,-99) , 
2, -0.35702, 0, 0, 0.4991,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.013022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.100427, 0, 1, 0.527262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49733,-99) , 
3, 0.552117, 1, 0, 0.499052,-99) , 
2, 0.213505, 0, 0, 0.500726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470051,-99) , 
3, 9.22081, 1, 0, 0.499356,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0168086);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.33483, 0, 1, 0.503552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48687,-99) , 
5, 0.25814, 0, 0, 0.505829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398104,-99) , 
3, 4.56417, 1, 0, 0.487534,-99) , 
4, 0.999524, 0, 0, 0.501047,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.00811111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499974,-99) , 
3, 8.1916, 0, 0, 0.501449,-99) , 
NN(
0, 
0, 
-1, 4.68737, 1, -1, 0.488101,-99) , 
4, 0.999637, 0, 0, 0.499324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462883,-99) , 
4, 0.99619, 0, 0, 0.498357,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.014926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.31944, 1, 1, 0.525393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497046,-99) , 
2, 0.112275, 0, 0, 0.50017,-99) , 
2, -0.214238, 1, 0, 0.501592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469343,-99) , 
3, 9.33107, 1, 0, 0.500229,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0103874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.621226, 0, 1, 0.502913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459539,-99) , 
1, -0.0245903, 0, 0, 0.501736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470186,-99) , 
3, 8.91811, 1, 0, 0.500198,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0108661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496508,-99) , 
5, -0.19117, 0, 0, 0.500743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478483,-99) , 
1, 0.0238589, 1, 0, 0.500106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459595,-99) , 
4, 0.996191, 0, 0, 0.499049,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.00784029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214298, 0, 1, 0.502016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475244,-99) , 
3, 7.56591, 1, 0, 0.501107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47105,-99) , 
3, 9.31837, 1, 0, 0.499807,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.00954027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499608,-99) , 
3, 8.75518, 0, 0, 0.501196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438197,-99) , 
3, 4.19432, 1, 0, 0.490249,-99) , 
4, 0.999637, 0, 0, 0.499444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463631,-99) , 
4, 0.996191, 0, 0, 0.498507,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.00935034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487732,-99) , 
0, 0.492512, 0, 0, 0.500399,-99) , 
NN(
0, 
0, 
-1, -0.193503, 1, -1, 0.482321,-99) , 
0, 0.504757, 1, 0, 0.49937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463916,-99) , 
2, -0.357066, 0, 0, 0.498418,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0112367);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.502472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449327,-99) , 
0, 0.50326, 1, 0, 0.494148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438854,-99) , 
0, 0.492376, 0, 0, 0.484247,-99) , 
4, 0.999524, 0, 0, 0.499634,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0123072);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495524,-99) , 
3, 4.341, 1, 0, 0.517596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496563,-99) , 
3, 0.558921, 1, 0, 0.497612,-99) , 
2, -0.213638, 1, 0, 0.498761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469003,-99) , 
3, 9.36329, 1, 0, 0.497507,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0111114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32771, 0, 1, 0.502476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479837,-99) , 
4, 0.99941, 0, 0, 0.501522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491194,-99) , 
5, 0.525031, 0, 0, 0.502351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454626,-99) , 
5, 0.256926, 0, 0, 0.480675,-99) , 
4, 0.999048, 0, 0, 0.499452,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.00805864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520169,-99) , 
NN(
0, 
0, 
-1, 9.23016, 1, -1, 0.497263,-99) , 
5, -0.820415, 1, 0, 0.497959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467021,-99) , 
0, 0.489519, 0, 0, 0.497165,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0128394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4996,-99) , 
3, 4.68583, 1, 0, 0.519235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496798,-99) , 
2, -0.112727, 1, 0, 0.498907,-99) , 
2, 0.213601, 0, 0, 0.50009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471112,-99) , 
3, 9.22081, 1, 0, 0.498795,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0101522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0114552, 0, 1, 0.515773,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.497465,-99) , 
2, 0.0921195, 0, 0, 0.499856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465498,-99) , 
2, 0.357379, 1, 0, 0.498934,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0127301);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470023,-99) , 
0, 0.501899, 1, 0, 0.510505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499171,-99) , 
2, -0.214345, 1, 0, 0.500488,-99) , 
3, 0.985561, 1, 0, 0.502443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471759,-99) , 
3, 9.22081, 1, 0, 0.501083,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.00990975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0714527, 0, 1, 0.503388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483906,-99) , 
3, 7.06322, 1, 0, 0.502476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474088,-99) , 
3, 9.23016, 1, 0, 0.501218,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0125694);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498063,-99) , 
5, -0.016435, 0, 0, 0.517341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497223,-99) , 
2, 0.112089, 0, 0, 0.499862,-99) , 
2, -0.214132, 1, 0, 0.500863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47682,-99) , 
3, 9.36329, 1, 0, 0.499829,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.01715);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.75602, 0, 1, 0.504315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487649,-99) , 
5, 0.0821705, 0, 0, 0.507284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397843,-99) , 
3, 4.68374, 1, 0, 0.489562,-99) , 
4, 0.999524, 0, 0, 0.50201,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0142453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.76078, 0, 1, 0.50599,-99) , 
NN(
0, 
0, 
-1, -0.63921, 0, -1, 0.495132,-99) , 
4, 0.999955, 0, 0, 0.501559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487751,-99) , 
2, 0.0704319, 0, 0, 0.497724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45763,-99) , 
5, 0.0797544, 0, 0, 0.485036,-99) , 
4, 0.999048, 0, 0, 0.499912,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0120302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.54072, 0, 1, 0.503134,-99) , 
NN(
0, 
0, 
-1, -0.192166, 0, -1, 0.489884,-99) , 
4, 0.999728, 0, 0, 0.501495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508077,-99) , 
NN(
0, 
0, 
-1, 0.0286152, 0, -1, 0.462189,-99) , 
5, 0.348232, 0, 0, 0.483117,-99) , 
4, 0.999048, 0, 0, 0.499664,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0101809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.06295, 0, 1, 0.502024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46627,-99) , 
5, -0.190861, 0, 0, 0.489616,-99) , 
4, 0.999728, 0, 0, 0.499935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447498,-99) , 
5, 0.440744, 0, 0, 0.47726,-99) , 
4, 0.998095, 0, 0, 0.498777,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0126614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489399,-99) , 
6, 0.00226592, 0, 0, 0.499042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457831,-99) , 
5, -0.465499, 1, 0, 0.483267,-99) , 
6, 0.0237926, 1, 0, 0.498123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459567,-99) , 
4, 0.996191, 0, 0, 0.497122,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.00527355);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481331,-99) , 
0, 0.490063, 0, 0, 0.49948,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.481368,-99) , 
0, 0.504757, 1, 0, 0.498455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467975,-99) , 
2, -0.357066, 0, 0, 0.497652,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0154615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491708,-99) , 
5, -0.191099, 0, 0, 0.498579,-99) , 
NN(
0, 
0, 
-1, -0.0240035, 0, -1, 0.480954,-99) , 
6, 0.0238036, 1, 0, 0.497579,-99) , 
NN(
0, 
0, 
-1, 0.506117, 1, -1, 0.47493,-99) , 
0, 0.504757, 1, 0, 0.496263,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0157163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494513,-99) , 
3, 1.00795, 1, 0, 0.497416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477997,-99) , 
3, 9.33032, 1, 0, 0.496597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46986,-99) , 
0, 0.490472, 0, 0, 0.495422,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0107927);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493906,-99) , 
4, 0.999948, 0, 0, 0.498903,-99) , 
NN(
0, 
0, 
-1, 0.170443, 0, -1, 0.482686,-99) , 
4, 0.998912, 0, 0, 0.497853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462818,-99) , 
4, 0.99619, 0, 0, 0.496943,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0198267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478287,-99) , 
5, -0.104171, 1, 0, 0.513091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494571,-99) , 
5, -0.730453, 1, 0, 0.496523,-99) , 
6, 0.0124687, 0, 0, 0.498351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446554,-99) , 
5, -0.465122, 1, 0, 0.478682,-99) , 
6, 0.023804, 1, 0, 0.497227,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0138027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494732,-99) , 
3, 4.30425, 1, 0, 0.519524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496578,-99) , 
2, 0.11227, 0, 0, 0.499099,-99) , 
2, -0.214238, 1, 0, 0.500259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47755,-99) , 
3, 9.23401, 1, 0, 0.499262,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0110875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00919695, 0, 1, 0.503866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457913,-99) , 
5, -0.46672, 1, 0, 0.484387,-99) , 
6, 0.023783, 1, 0, 0.502748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471271,-99) , 
0, 0.489519, 0, 0, 0.501935,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.00816258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214645, 1, 1, 0.501723,-99) , 
NN(
0, 
0, 
-1, 0.99966, 0, -1, 0.495244,-99) , 
5, -0.191424, 0, 0, 0.498612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475028,-99) , 
4, 0.997619, 0, 0, 0.497636,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0103897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473816,-99) , 
1, -0.0253064, 0, 0, 0.502353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474935,-99) , 
1, 0.0245062, 1, 0, 0.501601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471987,-99) , 
4, 0.997143, 0, 0, 0.500561,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0109258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499887,-99) , 
5, -0.011141, 0, 0, 0.51738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497588,-99) , 
2, -0.112815, 1, 0, 0.499589,-99) , 
2, 0.213382, 0, 0, 0.50062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478463,-99) , 
3, 8.80287, 1, 0, 0.49949,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.00905924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499655,-99) , 
6, 0.0144214, 0, 0, 0.502155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45747,-99) , 
1, -0.0252389, 0, 0, 0.500951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47147,-99) , 
1, 0.0245535, 1, 0, 0.500153,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0134347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.39199, 1, 1, 0.511988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496774,-99) , 
2, -0.153974, 1, 0, 0.499034,-99) , 
2, 0.0703391, 0, 0, 0.501291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478057,-99) , 
3, 9.36329, 1, 0, 0.500312,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.00882534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.212861, 0, 1, 0.502843,-99) , 
NN(
0, 
0, 
-1, 7.72823, 1, -1, 0.483022,-99) , 
3, 6.72193, 1, 0, 0.501659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479023,-99) , 
3, 9.36329, 1, 0, 0.50071,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.00656181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491154,-99) , 
3, 4.44752, 1, 0, 0.51822,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.498922,-99) , 
2, -0.18012, 1, 0, 0.499986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467379,-99) , 
2, -0.35699, 0, 0, 0.499127,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0126697);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.22574, 0, 1, 0.502742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461095,-99) , 
0, 0.501265, 1, 0, 0.503429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446086,-99) , 
0, 0.494281, 0, 0, 0.486956,-99) , 
4, 0.999048, 0, 0, 0.501175,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0133091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.18723, 0, 1, 0.503577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45202,-99) , 
3, 4.72838, 1, 0, 0.493952,-99) , 
4, 0.999864, 0, 0, 0.500986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468026,-99) , 
4, 0.997143, 0, 0, 0.499845,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0096548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498798,-99) , 
3, 8.7415, 0, 0, 0.500742,-99) , 
NN(
0, 
0, 
-1, 4.68234, 1, -1, 0.491546,-99) , 
4, 0.999728, 0, 0, 0.499198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478282,-99) , 
4, 0.998095, 0, 0, 0.498142,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.00982737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498918,-99) , 
2, -0.211765, 1, 0, 0.499684,-99) , 
3, 9.23449, 0, 0, 0.500687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517677,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.471846,-99) , 
5, 0.527534, 0, 0, 0.484183,-99) , 
4, 0.999048, 0, 0, 0.499056,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0106671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496502,-99) , 
3, 1.89254, 1, 0, 0.49983,-99) , 
5, 0.621256, 0, 0, 0.500825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475308,-99) , 
3, 9.37525, 1, 0, 0.49976,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0117488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49865,-99) , 
2, -0.0201546, 1, 0, 0.504539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494728,-99) , 
2, 0.0682757, 0, 0, 0.498237,-99) , 
2, -0.00331065, 1, 0, 0.501019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472489,-99) , 
2, -0.357035, 0, 0, 0.500264,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0115747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498808,-99) , 
3, 0.552139, 1, 0, 0.499595,-99) , 
3, 9.22081, 0, 0, 0.50074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46843,-99) , 
0, 0.501265, 1, 0, 0.499459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447796,-99) , 
0, 0.494281, 0, 0, 0.484477,-99) , 
4, 0.999048, 0, 0, 0.49913,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.017476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.7415, 0, 1, 0.504634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463735,-99) , 
5, -0.280864, 0, 0, 0.493225,-99) , 
4, 0.999728, 0, 0, 0.503218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460923,-99) , 
0, 0.501265, 1, 0, 0.500894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448678,-99) , 
0, 0.494281, 0, 0, 0.485676,-99) , 
4, 0.999048, 0, 0, 0.501481,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.00837265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.50291,-99) , 
NN(
0, 
0, 
-1, 0.214506, 1, -1, 0.493615,-99) , 
3, 4.75437, 1, 0, 0.501137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478172,-99) , 
0, 0.505709, 1, 0, 0.500366,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0113248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49716,-99) , 
3, 1.01359, 1, 0, 0.499593,-99) , 
5, 0.617247, 0, 0, 0.50073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47958,-99) , 
3, 9.37648, 1, 0, 0.499837,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0128572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75521, 0, 1, 0.505293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457377,-99) , 
5, -0.63921, 0, 0, 0.496746,-99) , 
4, 0.999955, 0, 0, 0.501802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494424,-99) , 
4, 0.996893, 1, 0, 0.502673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459473,-99) , 
5, 0.258971, 0, 0, 0.482923,-99) , 
4, 0.999048, 0, 0, 0.499936,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0112481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0108389, 0, 1, 0.524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497163,-99) , 
2, -0.276036, 1, 0, 0.498099,-99) , 
2, 0.213505, 0, 0, 0.499632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475638,-99) , 
3, 9.20815, 1, 0, 0.498574,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.00578116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.501414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471567,-99) , 
0, 0.496185, 0, 0, 0.488643,-99) , 
4, 0.999206, 0, 0, 0.500458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480283,-99) , 
4, 0.997619, 0, 0, 0.499619,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.017021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496813,-99) , 
0, 0.496186, 1, 0, 0.499216,-99) , 
3, 9.33156, 0, 0, 0.500701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494116,-99) , 
5, 0.347935, 0, 0, 0.507065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404905,-99) , 
3, 4.5677, 1, 0, 0.489908,-99) , 
4, 0.999524, 0, 0, 0.499027,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.00683208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490585,-99) , 
6, 0.023809, 1, 0, 0.500623,-99) , 
5, 0.621266, 0, 0, 0.50153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478696,-99) , 
3, 9.22081, 1, 0, 0.500519,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.00668622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.681389, 0, 1, 0.514126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499124,-99) , 
5, -0.781503, 1, 0, 0.499758,-99) , 
5, 0.5274, 0, 0, 0.5009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476998,-99) , 
0, 0.490471, 0, 0, 0.499846,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.00798877);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488588,-99) , 
5, 0.259527, 0, 0, 0.516947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498892,-99) , 
3, 0.569202, 1, 0, 0.499619,-99) , 
4, 0.998571, 1, 0, 0.500851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482176,-99) , 
3, 9.37264, 1, 0, 0.500067,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0104448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.95219, 1, 1, 0.510192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498058,-99) , 
2, 0.152418, 0, 0, 0.49992,-99) , 
2, -0.0719307, 1, 0, 0.501658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478961,-99) , 
3, 9.36329, 1, 0, 0.500708,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.00803508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0471616, 0, 1, 0.503119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486458,-99) , 
2, 0.350365, 1, 0, 0.502631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47401,-99) , 
2, -0.357105, 0, 0, 0.501878,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.00726961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499753,-99) , 
4, 0.999524, 1, 0, 0.502183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485189,-99) , 
3, 9.37599, 1, 0, 0.501474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478744,-99) , 
1, -0.0235227, 0, 0, 0.500814,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0108848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.33156, 0, 1, 0.503532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465447,-99) , 
3, 4.44349, 1, 0, 0.495455,-99) , 
4, 0.999819, 0, 0, 0.50161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474017,-99) , 
4, 0.996191, 0, 0, 0.500883,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0175515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.90259, 0, 1, 0.506769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469277,-99) , 
5, -0.549163, 0, 0, 0.496169,-99) , 
4, 0.999955, 0, 0, 0.502435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464357,-99) , 
0, 0.499995, 1, 0, 0.499221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451427,-99) , 
0, 0.494281, 0, 0, 0.485418,-99) , 
4, 0.999048, 0, 0, 0.500745,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0133716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498136,-99) , 
5, 0.0747921, 0, 0, 0.503352,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.49431,-99) , 
6, 0.00340056, 0, 0, 0.49993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45809,-99) , 
5, -0.465399, 1, 0, 0.4827,-99) , 
6, 0.023804, 1, 0, 0.498942,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0119395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497435,-99) , 
5, 0.347653, 0, 0, 0.50019,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.483537,-99) , 
6, 0.0238019, 1, 0, 0.499237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474829,-99) , 
3, 9.37264, 1, 0, 0.498215,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.00785105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498547,-99) , 
5, -0.370818, 1, 0, 0.500576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484019,-99) , 
0, 0.505029, 1, 0, 0.499718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471445,-99) , 
0, 0.489519, 0, 0, 0.499005,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.00476039);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.820299, 1, 1, 0.501805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477807,-99) , 
1, 0.0238948, 1, 0, 0.501129,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.016617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.09916, 0, 1, 0.50645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479043,-99) , 
5, -0.550683, 0, 0, 0.497317,-99) , 
4, 0.999977, 0, 0, 0.501757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478565,-99) , 
0, 0.5019, 1, 0, 0.505411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405765,-99) , 
3, 4.56417, 1, 0, 0.488977,-99) , 
4, 0.999524, 0, 0, 0.499777,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0105161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491443,-99) , 
3, 1.45164, 1, 0, 0.512104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497159,-99) , 
2, 0.212654, 0, 0, 0.49781,-99) , 
4, 0.998571, 1, 0, 0.498821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478546,-99) , 
3, 9.37264, 1, 0, 0.497975,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0138329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.35442, 1, 1, 0.511081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495878,-99) , 
2, -0.153143, 1, 0, 0.497932,-99) , 
2, 0.0712657, 0, 0, 0.500205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479599,-99) , 
3, 9.20554, 1, 0, 0.499297,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0096074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477159,-99) , 
4, 0.999674, 0, 0, 0.504991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498695,-99) , 
5, 0.643986, 0, 0, 0.499691,-99) , 
5, -0.372037, 1, 0, 0.501311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478686,-99) , 
0, 0.489519, 0, 0, 0.500728,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.00759002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.507098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487985,-99) , 
4, 0.999637, 0, 0, 0.499368,-99) , 
2, 0.0712315, 0, 0, 0.500725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470677,-99) , 
4, 0.996191, 0, 0, 0.499942,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0077311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499498,-99) , 
4, 0.999524, 1, 0, 0.501865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487928,-99) , 
3, 9.37525, 1, 0, 0.501282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467243,-99) , 
0, 0.489519, 0, 0, 0.500411,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.00736477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487056,-99) , 
3, 9.22081, 1, 0, 0.50146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48049,-99) , 
1, 0.0238589, 1, 0, 0.500872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472606,-99) , 
0, 0.489519, 0, 0, 0.500149,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0105229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.7415, 0, 1, 0.503169,-99) , 
NN(
0, 
0, 
-1, 4.68313, 1, -1, 0.490216,-99) , 
4, 0.999728, 0, 0, 0.500815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470049,-99) , 
4, 0.997143, 0, 0, 0.499745,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.00984499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.247703, 0, 1, 0.517904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497127,-99) , 
2, 0.020307, 0, 0, 0.499326,-99) , 
2, 0.180327, 0, 0, 0.500374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476304,-99) , 
2, 0.3572, 1, 0, 0.49973,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.00802285);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498626,-99) , 
2, 0.0034662, 0, 0, 0.501587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483109,-99) , 
1, 0.0238589, 1, 0, 0.501062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478173,-99) , 
2, 0.3572, 1, 0, 0.500439,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0134716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.74036, 1, 1, 0.516749,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.488589,-99) , 
3, 4.80412, 1, 0, 0.505994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497734,-99) , 
3, 8.75518, 0, 0, 0.499152,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.483664,-99) , 
4, 0.999524, 0, 0, 0.497358,-99) , 
2, -0.0713161, 1, 0, 0.498905,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0107125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497935,-99) , 
4, 0.99994, 0, 0, 0.502654,-99) , 
NN(
0, 
0, 
-1, 0.256145, 0, -1, 0.487228,-99) , 
4, 0.99873, 0, 0, 0.50183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467438,-99) , 
4, 0.996191, 0, 0, 0.500952,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0110259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.75995, 1, 1, 0.51925,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.490907,-99) , 
3, 4.82303, 1, 0, 0.508541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498963,-99) , 
3, 8.7547, 0, 0, 0.499951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46281,-99) , 
5, 0.257308, 0, 0, 0.487428,-99) , 
4, 0.999048, 0, 0, 0.499041,-99) , 
2, -0.0713008, 1, 0, 0.50074,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0178344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0619709, 1, 1, 0.511117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495546,-99) , 
4, 0.999955, 0, 0, 0.503363,-99) , 
0, 0.500947, 0, 0, 0.50523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499342,-99) , 
5, 0.525032, 0, 0, 0.50718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46923,-99) , 
5, 0.256527, 0, 0, 0.490004,-99) , 
4, 0.999048, 0, 0, 0.503725,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.00837786);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493097,-99) , 
5, -0.100827, 0, 0, 0.516737,-99) , 
NN(
0, 
0, 
-1, 1.01628, 1, 1, 0.502234,-99) , 
2, 0.214298, 0, 0, 0.503086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478953,-99) , 
3, 9.37895, 1, 0, 0.502073,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0104267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478436,-99) , 
5, -0.640168, 0, 0, 0.505879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490786,-99) , 
0, 0.499677, 1, 0, 0.499625,-99) , 
0, 0.500947, 0, 0, 0.501152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475899,-99) , 
4, 0.997619, 0, 0, 0.500114,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0119061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0890997, 1, 1, 0.504686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493521,-99) , 
0, 0.500947, 0, 0, 0.496552,-99) , 
3, 1.88969, 1, 0, 0.500193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481944,-99) , 
3, 9.37264, 1, 0, 0.499439,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.00765461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499665,-99) , 
4, 0.999524, 1, 0, 0.501592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473679,-99) , 
3, 7.61579, 1, 0, 0.500665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475971,-99) , 
3, 9.37657, 1, 0, 0.499645,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.00709595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.614092, 0, 1, 0.502316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466129,-99) , 
4, 0.999524, 0, 0, 0.493265,-99) , 
0, 0.502444, 1, 0, 0.500919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479309,-99) , 
0, 0.489519, 0, 0, 0.500362,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.00481737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.500776,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.48634,-99) , 
4, 0.998912, 0, 0, 0.499845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467168,-99) , 
4, 0.996191, 0, 0, 0.499005,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0144943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496525,-99) , 
5, -0.0123041, 0, 0, 0.509438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495241,-99) , 
2, 0.152301, 0, 0, 0.49693,-99) , 
2, -0.0720653, 1, 0, 0.499042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482531,-99) , 
3, 9.19619, 1, 0, 0.498312,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.01309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498897,-99) , 
3, 0.508091, 1, 0, 0.499862,-99) , 
3, 8.29602, 0, 0, 0.50124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482348,-99) , 
0, 0.5019, 1, 0, 0.505325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419755,-99) , 
3, 4.47416, 1, 0, 0.490572,-99) , 
4, 0.999524, 0, 0, 0.499586,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.00835216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485306,-99) , 
1, 0.0245856, 1, 0, 0.502001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479743,-99) , 
4, 0.998821, 0, 0, 0.501235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48161,-99) , 
4, 0.998095, 0, 0, 0.500241,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0190804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482155,-99) , 
5, -0.641311, 0, 0, 0.511254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494903,-99) , 
5, -0.640611, 1, 0, 0.497097,-99) , 
6, 0.00906812, 0, 0, 0.500166,-99) , 
NN(
0, 
0, 
-1, -0.464962, 1, -1, 0.481762,-99) , 
6, 0.023804, 1, 0, 0.499115,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.00921503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0676701, 1, 1, 0.503541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483907,-99) , 
3, 7.17445, 1, 0, 0.502659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483871,-99) , 
3, 9.37525, 1, 0, 0.501874,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.00902032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.502811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49021,-99) , 
2, -0.0720638, 1, 0, 0.496276,-99) , 
0, 0.502444, 1, 0, 0.5018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479565,-99) , 
0, 0.489519, 0, 0, 0.501239,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.00734954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.09721, 1, 1, 0.517791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498801,-99) , 
2, -0.193439, 1, 0, 0.499971,-99) , 
2, 0.214597, 0, 0, 0.501004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48564,-99) , 
3, 8.78659, 1, 0, 0.50023,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0076303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.7597, 0, 1, 0.502272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456579,-99) , 
3, 4.45333, 1, 0, 0.493364,-99) , 
4, 0.999637, 0, 0, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478155,-99) , 
4, 0.99619, 0, 0, 0.50026,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0108524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498718,-99) , 
2, -0.130127, 1, 0, 0.499935,-99) , 
2, -0.210778, 1, 0, 0.501274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486809,-99) , 
2, 0.0715234, 1, 0, 0.498536,-99) , 
NN(
0, 
0, 
-1, -0.104915, 1, -1, 0.475799,-99) , 
0, 0.496186, 0, 0, 0.49186,-99) , 
3, 4.6796, 1, 0, 0.499404,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.00875465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0113531, 0, 1, 0.517797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497956,-99) , 
2, -0.194046, 1, 0, 0.499085,-99) , 
2, 0.213804, 0, 0, 0.500181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481562,-99) , 
3, 9.31837, 1, 0, 0.499399,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.00835039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503532,-99) , 
NN(
0, 
0, 
-1, 0.214304, 1, -1, 0.495262,-99) , 
3, 4.72838, 1, 0, 0.501915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480033,-99) , 
0, 0.489519, 0, 0, 0.501364,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0101254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0133749, 0, 1, 0.503561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457833,-99) , 
1, -0.0255343, 0, 0, 0.502353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477656,-99) , 
1, 0.0243022, 1, 0, 0.501684,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.00717556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.29245, 0, 1, 0.501742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459575,-99) , 
0, 0.494281, 0, 0, 0.491045,-99) , 
4, 0.999274, 0, 0, 0.500717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469438,-99) , 
4, 0.996191, 0, 0, 0.499908,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0150433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494815,-99) , 
0, 0.499043, 1, 0, 0.499087,-99) , 
3, 9.31837, 0, 0, 0.500247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480265,-99) , 
3, 2.24365, 1, 0, 0.50353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424073,-99) , 
3, 4.5657, 1, 0, 0.490095,-99) , 
4, 0.999524, 0, 0, 0.498668,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.00818198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499343,-99) , 
3, 8.7415, 0, 0, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.489656,-99) , 
4, 0.999637, 0, 0, 0.499104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470699,-99) , 
4, 0.99619, 0, 0, 0.498377,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.00944043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49977,-99) , 
3, 8.75797, 0, 0, 0.501939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465224,-99) , 
3, 4.6796, 1, 0, 0.494189,-99) , 
4, 0.999887, 0, 0, 0.499687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475074,-99) , 
4, 0.997619, 0, 0, 0.498682,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.00793973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498161,-99) , 
5, -0.01612, 0, 0, 0.519364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49858,-99) , 
2, 0.193863, 0, 0, 0.49959,-99) , 
2, -0.214093, 1, 0, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480516,-99) , 
3, 9.38003, 1, 0, 0.499881,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0061976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497083,-99) , 
5, -0.0159756, 0, 0, 0.516034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499437,-99) , 
2, 0.275112, 0, 0, 0.500417,-99) , 
2, -0.214243, 1, 0, 0.501302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48272,-99) , 
3, 9.37264, 1, 0, 0.500536,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0105021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0512773, 0, 1, 0.502232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469382,-99) , 
3, 4.97664, 1, 0, 0.490993,-99) , 
2, 0.214506, 1, 0, 0.501566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496675,-99) , 
4, 0.999955, 0, 0, 0.506911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446797,-99) , 
4, 0.999524, 0, 0, 0.489932,-99) , 
0, 0.492376, 0, 0, 0.500443,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0105129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0222234, 0, 1, 0.516993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497291,-99) , 
2, -0.0299674, 1, 0, 0.499914,-99) , 
2, 0.214816, 0, 0, 0.500902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481099,-99) , 
3, 8.98995, 1, 0, 0.499971,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.00959335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.33204, 0, 1, 0.502239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470135,-99) , 
5, -0.194387, 0, 0, 0.492608,-99) , 
4, 0.999728, 0, 0, 0.500622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480363,-99) , 
4, 0.998095, 0, 0, 0.499609,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0170092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49592,-99) , 
4, 0.999987, 0, 0, 0.501575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479328,-99) , 
5, 0.0783673, 0, 0, 0.49218,-99) , 
4, 0.999728, 0, 0, 0.499994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478938,-99) , 
4, 0.998095, 0, 0, 0.498935,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0120006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476832,-99) , 
3, 2.33503, 1, 0, 0.511177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490369,-99) , 
4, 0.999683, 0, 0, 0.50095,-99) , 
4, 0.999048, 1, 0, 0.50197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480933,-99) , 
3, 9.37784, 1, 0, 0.5011,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.00685052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489195,-99) , 
4, 0.999524, 0, 0, 0.499557,-99) , 
5, 0.621226, 0, 0, 0.500058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474681,-99) , 
0, 0.489519, 0, 0, 0.499414,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0138708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496728,-99) , 
2, 0.0468266, 0, 0, 0.498531,-99) , 
3, 8.54072, 0, 0, 0.499961,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0720053, 1, 1, 0.51028,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.476773,-99) , 
5, 0.257755, 0, 0, 0.492512,-99) , 
4, 0.999524, 0, 0, 0.498804,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.00776106);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497346,-99) , 
5, -0.0991098, 0, 0, 0.500031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483541,-99) , 
1, -0.0241748, 0, 0, 0.499565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474001,-99) , 
4, 0.996191, 0, 0, 0.498908,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.00695435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214833, 1, 1, 0.502392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481577,-99) , 
3, 7.48706, 1, 0, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484774,-99) , 
3, 9.22081, 1, 0, 0.500942,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.00832078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499029,-99) , 
3, 8.7415, 0, 0, 0.500872,-99) , 
NN(
0, 
0, 
-1, 4.56492, 1, -1, 0.492533,-99) , 
4, 0.999728, 0, 0, 0.49947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483501,-99) , 
4, 0.998095, 0, 0, 0.498669,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.00854322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499585,-99) , 
3, 9.33156, 0, 0, 0.501224,-99) , 
NN(
0, 
0, 
-1, 4.68234, 1, -1, 0.490465,-99) , 
4, 0.999728, 0, 0, 0.499419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476702,-99) , 
4, 0.998095, 0, 0, 0.498291,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.00777061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494503,-99) , 
5, 0.260984, 1, 0, 0.500513,-99) , 
4, 0.997619, 1, 0, 0.501433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485136,-99) , 
3, 9.36329, 1, 0, 0.50075,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.00574882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.21384, 1, 1, 0.501664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483709,-99) , 
3, 7.566, 1, 0, 0.501058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480936,-99) , 
3, 9.31837, 1, 0, 0.500206,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.00716688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49845,-99) , 
2, -0.213788, 1, 0, 0.499293,-99) , 
4, 0.996667, 1, 0, 0.500061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48127,-99) , 
3, 9.32771, 1, 0, 0.499268,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0063735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.33107, 0, 1, 0.502074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485256,-99) , 
4, 0.998866, 0, 0, 0.501294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484542,-99) , 
4, 0.997619, 0, 0, 0.500607,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0122194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498908,-99) , 
6, 0.023809, 0, 0, 0.499876,-99) , 
3, 8.7415, 0, 0, 0.501269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468293,-99) , 
0, 0.502535, 1, 0, 0.501376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452189,-99) , 
0, 0.492376, 0, 0, 0.492697,-99) , 
4, 0.999524, 0, 0, 0.49994,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0069731);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489263,-99) , 
5, 0.255216, 0, 0, 0.517871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499514,-99) , 
2, -0.211765, 1, 0, 0.50013,-99) , 
4, 0.998571, 1, 0, 0.501392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481123,-99) , 
3, 9.37264, 1, 0, 0.500556,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0114572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490205,-99) , 
3, 2.24342, 1, 0, 0.523075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497153,-99) , 
4, 0.999864, 0, 0, 0.501898,-99) , 
4, 0.998572, 1, 0, 0.503425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484332,-99) , 
3, 9.00191, 1, 0, 0.502527,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.00771027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.015611, 0, 1, 0.502274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473925,-99) , 
1, -0.0252193, 0, 0, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461823,-99) , 
1, 0.0245856, 1, 0, 0.500453,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.00977136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496641,-99) , 
2, -0.00366282, 1, 0, 0.500509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485742,-99) , 
2, -0.357309, 0, 0, 0.500118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483575,-99) , 
1, -0.0238205, 0, 0, 0.499643,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0130179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.26208, 0, 1, 0.504086,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.485162,-99) , 
4, 0.999728, 0, 0, 0.502863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474965,-99) , 
0, 0.502534, 1, 0, 0.499774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464938,-99) , 
0, 0.492376, 0, 0, 0.493495,-99) , 
4, 0.999524, 0, 0, 0.501411,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.00860262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0702294, 0, 1, 0.510481,-99) , 
NN(
0, 
0, 
-1, 0.999456, 0, -1, 0.497557,-99) , 
0, 0.502852, 0, 0, 0.499197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46445,-99) , 
5, 0.440744, 0, 0, 0.484804,-99) , 
4, 0.998095, 0, 0, 0.498469,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.00597848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498985,-99) , 
0, 0.500947, 0, 0, 0.500443,-99) , 
4, 0.997143, 1, 0, 0.501096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488208,-99) , 
3, 9.22081, 1, 0, 0.500527,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0143538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.17471, 1, 1, 0.515238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496398,-99) , 
2, -0.125724, 1, 0, 0.49827,-99) , 
2, 0.0927254, 0, 0, 0.500152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48275,-99) , 
2, 0.112372, 1, 0, 0.49673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472792,-99) , 
2, -0.214146, 0, 0, 0.492658,-99) , 
3, 4.75084, 1, 0, 0.498692,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.00840937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.33156, 0, 1, 0.503067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48281,-99) , 
5, -0.0115271, 0, 0, 0.494791,-99) , 
4, 0.999456, 0, 0, 0.502073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476411,-99) , 
4, 0.996191, 0, 0, 0.501404,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.00468147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.501052,-99) , 
NN(
0, 
0, 
-1, 0.998126, 1, -1, 0.487686,-99) , 
4, 0.99873, 0, 0, 0.500338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471453,-99) , 
4, 0.996191, 0, 0, 0.4996,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0100191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213163, 0, 1, 0.502295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495616,-99) , 
6, 0.023809, 0, 0, 0.498043,-99) , 
5, -0.099148, 0, 0, 0.49993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478056,-99) , 
4, 0.997143, 0, 0, 0.499171,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.00530452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499647,-99) , 
3, 0.481795, 1, 0, 0.500504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478236,-99) , 
3, 7.47933, 1, 0, 0.499743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480381,-99) , 
3, 9.20815, 1, 0, 0.498902,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.00862183);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485903,-99) , 
5, 0.6172, 1, 0, 0.502249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487188,-99) , 
4, 0.998866, 0, 0, 0.501548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480036,-99) , 
4, 0.997619, 0, 0, 0.500676,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.00844808);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497413,-99) , 
5, 0.64285, 0, 0, 0.498253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482707,-99) , 
3, 9.20554, 1, 0, 0.497575,-99) , 
5, -0.820295, 1, 0, 0.498152,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.010286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.668401, 0, 1, 0.513825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495774,-99) , 
3, 2.28585, 1, 0, 0.499973,-99) , 
5, 0.531166, 0, 0, 0.501056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48386,-99) , 
3, 9.22081, 1, 0, 0.500309,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.00451504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.768962, 1, 1, 0.501227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488367,-99) , 
5, 0.617143, 1, 0, 0.500708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474653,-99) , 
4, 0.996191, 0, 0, 0.500037,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0131063);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49797,-99) , 
5, -0.195415, 0, 0, 0.502827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481753,-99) , 
5, -0.279791, 1, 0, 0.487364,-99) , 
6, 0.00113341, 0, 0, 0.500838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462284,-99) , 
5, -0.465399, 1, 0, 0.485271,-99) , 
6, 0.023802, 1, 0, 0.499949,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.00394862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75085, 0, 1, 0.500752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486364,-99) , 
4, 0.998753, 0, 0, 0.500183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481227,-99) , 
4, 0.997619, 0, 0, 0.499411,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.00582728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499707,-99) , 
3, 0.412178, 1, 0, 0.500573,-99) , 
NN(
0, 
0, 
-1, -0.103473, 0, -1, 0.483401,-99) , 
3, 6.28172, 1, 0, 0.499273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483316,-99) , 
3, 9.36329, 1, 0, 0.498606,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0109815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48589,-99) , 
3, 9.19619, 1, 0, 0.502777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489509,-99) , 
3, 3.83673, 0, 0, 0.496745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476904,-99) , 
4, 0.999524, 0, 0, 0.49286,-99) , 
0, 0.5019, 1, 0, 0.500983,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.00738789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49547,-99) , 
3, 4.56116, 1, 0, 0.505889,-99) , 
NN(
0, 
0, 
-1, 0.998912, 0, -1, 0.498258,-99) , 
2, 0.0715463, 0, 0, 0.499579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474682,-99) , 
4, 0.99619, 0, 0, 0.498941,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.00446456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499975,-99) , 
3, 9.33207, 0, 0, 0.500804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485804,-99) , 
4, 0.998912, 0, 0, 0.500196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481764,-99) , 
4, 0.998095, 0, 0, 0.499278,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.00578589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49895,-99) , 
0, 0.490471, 1, 0, 0.499692,-99) , 
4, 0.996667, 1, 0, 0.500436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486853,-99) , 
3, 8.98995, 1, 0, 0.499798,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0110842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0234557, 0, 1, 0.523326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499841,-99) , 
6, 0.0136012, 0, 0, 0.502435,-99) , 
6, 0.0238036, 0, 0, 0.503884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529241,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.492832,-99) , 
5, 0.685543, 0, 0, 0.496391,-99) , 
5, 0.170879, 1, 0, 0.501867,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.00939815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495986,-99) , 
5, -0.0113531, 0, 0, 0.516626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498601,-99) , 
2, -0.0311725, 1, 0, 0.501178,-99) , 
2, 0.213446, 0, 0, 0.502074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486455,-99) , 
3, 8.75346, 1, 0, 0.50128,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.00873875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497496,-99) , 
5, -0.0187083, 0, 0, 0.519694,-99) , 
NN(
0, 
0, 
-1, 0.049635, 0, 1, 0.50288,-99) , 
2, 0.21274, 0, 0, 0.503881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487901,-99) , 
3, 9.31837, 1, 0, 0.50321,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0193634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0444968, 0, 1, 0.509995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492105,-99) , 
5, 0.0755396, 0, 0, 0.496749,-99) , 
4, 0.999977, 0, 0, 0.50318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497133,-99) , 
4, 0.996803, 1, 0, 0.502429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435784,-99) , 
3, 4.46492, 1, 0, 0.49091,-99) , 
4, 0.999524, 0, 0, 0.501294,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.012207);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492183,-99) , 
4, 0.999909, 0, 0, 0.507585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498123,-99) , 
2, 0.0586841, 0, 0, 0.500654,-99) , 
3, 4.68234, 0, 0, 0.502049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485043,-99) , 
4, 0.998095, 0, 0, 0.5012,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.00894697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01506, 1, 1, 0.503676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487947,-99) , 
3, 9.37784, 1, 0, 0.50303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479727,-99) , 
1, -0.0239738, 0, 0, 0.502381,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.00772093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492211,-99) , 
5, -0.459452, 0, 0, 0.509722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49979,-99) , 
5, -0.371877, 1, 0, 0.50152,-99) , 
0, 0.502852, 0, 0, 0.502561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473299,-99) , 
5, 0.440744, 0, 0, 0.486759,-99) , 
4, 0.998095, 0, 0, 0.50177,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0117576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497283,-99) , 
6, 0.0147358, 0, 0, 0.500851,-99) , 
6, 0.023804, 0, 0, 0.503659,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.496723,-99) , 
5, -0.099319, 1, 0, 0.500443,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0197836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.71227, 1, 1, 0.51832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494332,-99) , 
2, -0.00981933, 1, 0, 0.501614,-99) , 
2, 0.064479, 0, 0, 0.504094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493632,-99) , 
0, 0.499995, 0, 0, 0.500503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475336,-99) , 
2, -0.21429, 0, 0, 0.496268,-99) , 
3, 4.741, 1, 0, 0.502568,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.00834863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.820046, 1, 1, 0.503509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487028,-99) , 
1, 0.0242006, 1, 0, 0.503049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480564,-99) , 
4, 0.996191, 0, 0, 0.502473,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.00644426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.79252, 0, 1, 0.502471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4917,-99) , 
4, 0.998753, 0, 0, 0.502044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484547,-99) , 
4, 0.997619, 0, 0, 0.501331,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.00743968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488862,-99) , 
3, 9.37264, 1, 0, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0.506117, 1, -1, 0.490903,-99) , 
0, 0.504757, 1, 0, 0.501816,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0051033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499503,-99) , 
2, 0.213601, 0, 0, 0.500199,-99) , 
3, 9.23016, 0, 0, 0.501059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483577,-99) , 
4, 0.997619, 0, 0, 0.500346,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0072879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496302,-99) , 
4, 0.999819, 0, 0, 0.501131,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.493213,-99) , 
5, 0.437566, 1, 0, 0.500281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476446,-99) , 
4, 0.996191, 0, 0, 0.499671,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0109038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496769,-99) , 
4, 0.999909, 1, 0, 0.49995,-99) , 
3, 9.33032, 0, 0, 0.500707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483923,-99) , 
4, 0.998095, 0, 0, 0.49987,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0127705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44739, 1, 1, 0.528367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49865,-99) , 
3, 0.790806, 1, 0, 0.500558,-99) , 
4, 0.998572, 1, 0, 0.502639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479339,-99) , 
2, 0.227866, 1, 0, 0.499513,-99) , 
NN(
0, 
0, 
-1, 0.499995, 0, -1, 0.480745,-99) , 
2, -0.0714402, 0, 0, 0.492888,-99) , 
3, 4.73251, 1, 0, 0.50074,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0095591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0713929, 1, 1, 0.506699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491474,-99) , 
1, -5.3313e-05, 1, 0, 0.500199,-99) , 
1, 0.00113437, 0, 0, 0.50303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471426,-99) , 
5, -0.467134, 1, 0, 0.488686,-99) , 
6, 0.023809, 1, 0, 0.502211,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.00668803);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49976,-99) , 
3, 8.75521, 0, 0, 0.501276,-99) , 
NN(
0, 
0, 
-1, 4.46353, 1, -1, 0.491785,-99) , 
4, 0.999637, 0, 0, 0.499781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47392,-99) , 
4, 0.996191, 0, 0, 0.499124,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.00686202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.483561, 1, 1, 0.502495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482543,-99) , 
3, 7.49995, 1, 0, 0.501817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487159,-99) , 
3, 9.23351, 1, 0, 0.501181,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.00927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502326,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.490897,-99) , 
6, 0.00226749, 0, 0, 0.499392,-99) , 
NN(
0, 
0, 
-1, -0.465499, 1, -1, 0.486044,-99) , 
6, 0.023809, 1, 0, 0.498624,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.00826156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.23016, 0, 1, 0.502768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480082,-99) , 
0, 0.493964, 0, 0, 0.498058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476164,-99) , 
0, 0.500947, 1, 0, 0.491787,-99) , 
4, 0.999048, 0, 0, 0.501688,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.00750138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492615,-99) , 
4, 0.999819, 0, 0, 0.502171,-99) , 
NN(
0, 
0, 
-1, -0.551245, 0, -1, 0.498099,-99) , 
0, 0.496185, 1, 0, 0.499404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48051,-99) , 
4, 0.99619, 0, 0, 0.498917,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.00902447);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488248,-99) , 
3, 1.86173, 1, 0, 0.517255,-99) , 
NN(
0, 
0, 
-1, 7.48698, 1, -1, 0.497803,-99) , 
4, 0.998571, 1, 0, 0.499174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484176,-99) , 
3, 9.22081, 1, 0, 0.498528,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.00466452);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.32771, 0, 1, 0.501834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488137,-99) , 
4, 0.998095, 0, 0, 0.501153,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.00682363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496758,-99) , 
4, 0.999819, 0, 0, 0.501055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484817,-99) , 
5, 0.617189, 1, 0, 0.500405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481903,-99) , 
4, 0.996191, 0, 0, 0.499929,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.00662326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495899,-99) , 
5, 0.167451, 1, 0, 0.500547,-99) , 
4, 0.996667, 1, 0, 0.500973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484167,-99) , 
2, -0.357049, 0, 0, 0.500542,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.00564024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499545,-99) , 
0, 0.5019, 0, 0, 0.505068,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.498289,-99) , 
2, 0.0712012, 0, 0, 0.499463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48373,-99) , 
4, 0.996667, 0, 0, 0.499001,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.00366897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.23016, 0, 1, 0.500801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487291,-99) , 
4, 0.998367, 0, 0, 0.500324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474507,-99) , 
4, 0.996191, 0, 0, 0.499671,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.00833729);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496068,-99) , 
3, 4.86467, 1, 0, 0.512374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497569,-99) , 
2, 0.0304247, 0, 0, 0.499659,-99) , 
2, -0.214392, 1, 0, 0.500382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486332,-99) , 
4, 0.996191, 0, 0, 0.500018,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0187803);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487939,-99) , 
3, 1.78086, 1, 0, 0.516401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497192,-99) , 
4, 0.999909, 1, 0, 0.499481,-99) , 
4, 0.999048, 1, 0, 0.501253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488314,-99) , 
4, 0.999977, 0, 0, 0.502208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430771,-99) , 
4, 0.999524, 0, 0, 0.493517,-99) , 
3, 4.46079, 1, 0, 0.49959,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0107457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493414,-99) , 
3, 2.10724, 1, 0, 0.520663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495659,-99) , 
5, 0.260984, 1, 0, 0.500586,-99) , 
4, 0.999048, 1, 0, 0.502703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497967,-99) , 
5, -0.0990901, 0, 0, 0.504254,-99) , 
NN(
0, 
0, 
-1, -0.195396, 1, -1, 0.490022,-99) , 
0, 0.500947, 0, 0, 0.494414,-99) , 
3, 4.741, 1, 0, 0.501088,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.00696412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491464,-99) , 
3, 1.88385, 1, 0, 0.510697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498937,-99) , 
2, -0.214242, 1, 0, 0.499449,-99) , 
4, 0.999048, 1, 0, 0.500566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488968,-99) , 
3, 9.33032, 1, 0, 0.500082,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.00938088);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.54075, 0, 1, 0.502749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499662,-99) , 
5, 0.587358, 0, 0, 0.511515,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.48174,-99) , 
5, 0.258111, 0, 0, 0.495689,-99) , 
4, 0.999524, 0, 0, 0.501657,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0106255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.681375, 0, 1, 0.512568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497733,-99) , 
6, 0.0147386, 0, 0, 0.498904,-99) , 
5, 0.347772, 0, 0, 0.501256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467882,-99) , 
5, -0.465347, 1, 0, 0.486436,-99) , 
6, 0.023809, 1, 0, 0.50041,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.00906951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0122464, 0, 1, 0.503177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46186,-99) , 
1, 0.025718, 1, 0, 0.502107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479695,-99) , 
1, -0.0241238, 0, 0, 0.501483,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.00858865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491054,-99) , 
2, 0.0728837, 1, 0, 0.499445,-99) , 
3, 9.23401, 0, 0, 0.500435,-99) , 
NN(
NN(
0, 
0, 
-1, 0.996894, 1, 1, 0.508131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471176,-99) , 
5, 0.260799, 0, 0, 0.491431,-99) , 
4, 0.999048, 0, 0, 0.499552,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.01354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495176,-99) , 
4, 0.999992, 0, 0, 0.500226,-99) , 
NN(
0, 
0, 
-1, 4.68234, 1, -1, 0.494561,-99) , 
4, 0.999841, 0, 0, 0.498802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482991,-99) , 
4, 0.996667, 0, 0, 0.498335,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.00437555);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.996667, 1, 1, 0.501884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491102,-99) , 
0, 0.490471, 0, 0, 0.501418,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.00757528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499334,-99) , 
3, 8.7415, 0, 0, 0.50074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47744,-99) , 
5, -0.189261, 0, 0, 0.492541,-99) , 
4, 0.999728, 0, 0, 0.499368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480642,-99) , 
4, 0.998095, 0, 0, 0.498453,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0120483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497999,-99) , 
5, -0.016233, 0, 0, 0.51787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496467,-99) , 
2, 0.0295603, 0, 0, 0.49965,-99) , 
2, -0.21515, 1, 0, 0.500681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483261,-99) , 
3, 9.37525, 1, 0, 0.499971,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.00925629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495372,-99) , 
5, -0.550689, 0, 0, 0.501629,-99) , 
4, 0.997143, 1, 0, 0.502639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484925,-99) , 
3, 9.36329, 1, 0, 0.501909,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0090252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487894,-99) , 
0, 0.499451, 1, 0, 0.510298,-99) , 
NN(
0, 
0, 
-1, 9.22081, 0, 1, 0.501392,-99) , 
4, 0.998572, 1, 0, 0.501938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485708,-99) , 
4, 0.999887, 0, 0, 0.502903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468644,-99) , 
4, 0.999524, 0, 0, 0.494133,-99) , 
0, 0.493328, 0, 0, 0.50088,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.00834988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497398,-99) , 
2, -0.214142, 1, 0, 0.498289,-99) , 
3, 9.33107, 0, 0, 0.498956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48466,-99) , 
4, 0.997619, 0, 0, 0.498374,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.00960244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477279,-99) , 
0, 0.492784, 0, 0, 0.508065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498958,-99) , 
3, 8.54072, 0, 0, 0.500032,-99) , 
4, 0.999524, 1, 0, 0.50125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482437,-99) , 
0, 0.505709, 1, 0, 0.500626,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0081721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.502574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490271,-99) , 
0, 0.496185, 0, 0, 0.502979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465668,-99) , 
5, 0.0771957, 0, 0, 0.491479,-99) , 
4, 0.999048, 0, 0, 0.501492,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.00676719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.518356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498817,-99) , 
2, 0.275522, 0, 0, 0.499708,-99) , 
2, -0.214238, 1, 0, 0.500763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485495,-99) , 
3, 9.33032, 1, 0, 0.500131,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0102685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499705,-99) , 
3, 0.77582, 1, 0, 0.501376,-99) , 
2, 0.200364, 0, 0, 0.502435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487985,-99) , 
2, 0.0783157, 1, 0, 0.499383,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.482264,-99) , 
2, -0.0713494, 0, 0, 0.49336,-99) , 
3, 4.71854, 1, 0, 0.500646,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0080725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479517,-99) , 
3, 7.60237, 1, 0, 0.502299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487545,-99) , 
3, 9.36329, 1, 0, 0.501679,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.00976234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97208, 1, 1, 0.519858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499371,-99) , 
2, 0.192877, 0, 0, 0.500908,-99) , 
2, -0.0970913, 1, 0, 0.502912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498584,-99) , 
0, 0.503532, 0, 0, 0.503196,-99) , 
NN(
0, 
0, 
-1, -0.0714402, 0, -1, 0.488382,-99) , 
0, 0.499043, 0, 0, 0.495372,-99) , 
3, 4.71854, 1, 0, 0.501436,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.00963713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45067, 1, 1, 0.521512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498772,-99) , 
3, 0.779022, 1, 0, 0.500313,-99) , 
4, 0.998571, 1, 0, 0.501883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499182,-99) , 
5, -0.102213, 0, 0, 0.506029,-99) , 
NN(
0, 
0, 
-1, -0.0713929, 0, -1, 0.49008,-99) , 
0, 0.500947, 0, 0, 0.494998,-99) , 
3, 4.741, 1, 0, 0.500538,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0128558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.50614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492481,-99) , 
0, 0.499178, 0, 0, 0.495503,-99) , 
3, 4.66976, 1, 0, 0.504169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484553,-99) , 
4, 0.999524, 0, 0, 0.498562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48159,-99) , 
5, -0.550481, 0, 0, 0.495522,-99) , 
0, 0.5019, 1, 0, 0.502607,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.00801327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.52704, 0, 1, 0.502994,-99) , 
NN(
0, 
0, 
-1, 4.56881, 1, -1, 0.493985,-99) , 
4, 0.999683, 0, 0, 0.50147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479382,-99) , 
4, 0.996667, 0, 0, 0.500823,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.00466656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499296,-99) , 
0, 0.490471, 1, 0, 0.499821,-99) , 
3, 9.31837, 0, 0, 0.500557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488537,-99) , 
4, 0.998095, 0, 0, 0.499956,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0100596);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497671,-99) , 
0, 0.497138, 0, 0, 0.50522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497788,-99) , 
5, -0.691182, 1, 0, 0.499705,-99) , 
5, 0.0808131, 0, 0, 0.501559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487919,-99) , 
1, -0.0238205, 0, 0, 0.501166,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.00465671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39673, 1, 1, 0.515487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499512,-99) , 
0, 0.504757, 0, 0, 0.500048,-99) , 
4, 0.998571, 1, 0, 0.501133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490769,-99) , 
3, 8.98596, 1, 0, 0.50065,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.00648997);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214238, 1, 1, 0.502774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485794,-99) , 
3, 9.36329, 1, 0, 0.502076,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0109108);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477205,-99) , 
1, 0.0249395, 1, 0, 0.505231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497519,-99) , 
5, 0.167978, 0, 0, 0.49958,-99) , 
1, 0.00118704, 0, 0, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489203,-99) , 
1, -0.023754, 0, 0, 0.501749,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.005037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.501849,-99) , 
NN(
0, 
0, 
-1, 0.214002, 1, -1, 0.497042,-99) , 
3, 4.741, 1, 0, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484463,-99) , 
0, 0.505709, 1, 0, 0.500369,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.00770289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.502885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471294,-99) , 
5, -0.370803, 0, 0, 0.494183,-99) , 
4, 0.999728, 0, 0, 0.501423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487987,-99) , 
4, 0.998095, 0, 0, 0.50075,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0066432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023809, 0, 1, 0.502926,-99) , 
NN(
0, 
0, 
-1, 0.493329, 0, -1, 0.496802,-99) , 
5, 0.167933, 1, 0, 0.501367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484305,-99) , 
4, 0.996191, 0, 0, 0.500929,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0118754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497857,-99) , 
4, 0.999994, 0, 0, 0.502277,-99) , 
NN(
0, 
0, 
-1, -0.550441, 0, -1, 0.494112,-99) , 
4, 0.999864, 0, 0, 0.500074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480361,-99) , 
4, 0.997143, 0, 0, 0.499396,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.00535359);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499623,-99) , 
6, 0.023809, 0, 0, 0.500705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487414,-99) , 
4, 0.998095, 0, 0, 0.500006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481405,-99) , 
5, -0.833028, 1, 0, 0.489276,-99) , 
5, -0.730358, 0, 0, 0.499294,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.00841733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491018,-99) , 
3, 1.89254, 1, 0, 0.51157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493233,-99) , 
4, 0.999728, 0, 0, 0.500471,-99) , 
4, 0.999048, 1, 0, 0.501574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48848,-99) , 
3, 9.37525, 1, 0, 0.501032,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.00436518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507551,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.498547,-99) , 
5, 0.617189, 0, 0, 0.498969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484993,-99) , 
0, 0.505709, 1, 0, 0.498501,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.00579228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486328,-99) , 
3, 7.57532, 1, 0, 0.501084,-99) , 
3, 9.32771, 0, 0, 0.501747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492317,-99) , 
4, 0.998095, 0, 0, 0.501276,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.00370471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499692,-99) , 
4, 0.999093, 1, 0, 0.500458,-99) , 
3, 8.75085, 0, 0, 0.500932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491096,-99) , 
4, 0.998095, 0, 0, 0.500443,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00923591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494567,-99) , 
5, -0.460394, 0, 0, 0.508272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494897,-99) , 
4, 0.999887, 0, 0, 0.500511,-99) , 
0, 0.502852, 0, 0, 0.50151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48886,-99) , 
4, 0.997619, 0, 0, 0.501002,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.00635825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475338,-99) , 
4, 0.997619, 0, 0, 0.500773,-99) , 
5, 0.617197, 0, 0, 0.501346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484914,-99) , 
1, -0.0241129, 0, 0, 0.500885,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.00783739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492831,-99) , 
3, 3.07836, 1, 0, 0.500576,-99) , 
5, 0.251425, 0, 0, 0.504956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494612,-99) , 
0, 0.493419, 0, 0, 0.49971,-99) , 
NN(
0, 
0, 
-1, 0.00332222, 0, -1, 0.490838,-99) , 
0, 0.502852, 1, 0, 0.498662,-99) , 
2, -0.0713374, 1, 0, 0.499779,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.00862405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498348,-99) , 
6, 0.0183167, 0, 0, 0.499646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455119,-99) , 
1, -0.025645, 0, 0, 0.498493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482203,-99) , 
1, 0.0242006, 1, 0, 0.498038,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.00867946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498746,-99) , 
3, 5.15248, 1, 0, 0.51306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497465,-99) , 
2, 0.0301784, 0, 0, 0.499818,-99) , 
2, -0.2146, 1, 0, 0.500571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48508,-99) , 
4, 0.99619, 0, 0, 0.500179,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.00738301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499799,-99) , 
5, -0.422194, 1, 0, 0.50126,-99) , 
2, 0.357186, 0, 0, 0.501905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490722,-99) , 
5, -0.760117, 1, 0, 0.500534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474006,-99) , 
0, 0.499995, 1, 0, 0.491593,-99) , 
5, -0.640346, 0, 0, 0.500765,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0144083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.8682, 1, 1, 0.518518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492124,-99) , 
5, -0.49899, 0, 0, 0.499779,-99) , 
5, -0.191384, 0, 0, 0.510255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49212,-99) , 
3, 4.84203, 1, 0, 0.508868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497205,-99) , 
2, -0.0075983, 1, 0, 0.50067,-99) , 
2, 0.152713, 0, 0, 0.50165,-99) , 
2, -0.0717215, 1, 0, 0.503183,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0109413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494269,-99) , 
0, 0.495778, 0, 0, 0.512702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497159,-99) , 
4, 0.999932, 0, 0, 0.501908,-99) , 
4, 0.998571, 1, 0, 0.502613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489434,-99) , 
2, 0.0766444, 0, 0, 0.492577,-99) , 
2, -0.0728381, 1, 0, 0.497139,-99) , 
0, 0.5019, 1, 0, 0.501625,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.00802756);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487466,-99) , 
4, 0.999206, 0, 0, 0.500906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470297,-99) , 
4, 0.997619, 0, 0, 0.499944,-99) , 
5, 0.621226, 0, 0, 0.500657,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0103206);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486795,-99) , 
5, -0.46105, 0, 0, 0.504119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495898,-99) , 
2, 0.0197545, 0, 0, 0.498644,-99) , 
2, -0.0854833, 1, 0, 0.499535,-99) , 
2, 0.356515, 0, 0, 0.499934,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.00551907);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499056,-99) , 
0, 0.492376, 1, 0, 0.499701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467967,-99) , 
4, 0.997143, 0, 0, 0.498857,-99) , 
5, 0.621226, 0, 0, 0.499544,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0076334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497042,-99) , 
5, 0.258399, 0, 0, 0.509017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49877,-99) , 
0, 0.490471, 1, 0, 0.499509,-99) , 
4, 0.999524, 1, 0, 0.500987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488669,-99) , 
3, 9.36329, 1, 0, 0.500477,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0115318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997143, 1, 1, 0.507992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496607,-99) , 
6, 0.0124686, 0, 0, 0.498612,-99) , 
5, 0.257937, 0, 0, 0.500711,-99) , 
NN(
0, 
0, 
-1, -0.466772, 1, -1, 0.486275,-99) , 
6, 0.023804, 1, 0, 0.499894,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0103748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.29602, 0, 1, 0.5032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488141,-99) , 
4, 0.99941, 0, 0, 0.502573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488535,-99) , 
0, 0.496503, 0, 0, 0.501333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466733,-99) , 
0, 0.500947, 1, 0, 0.491553,-99) , 
4, 0.999048, 0, 0, 0.501497,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.00551445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.50258,-99) , 
NN(
0, 
0, 
-1, -0.639264, 0, -1, 0.497949,-99) , 
0, 0.499451, 1, 0, 0.500794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488789,-99) , 
0, 0.490471, 0, 0, 0.500275,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.00793753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0184156, 0, 1, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455739,-99) , 
1, -0.0257891, 0, 0, 0.501288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481788,-99) , 
1, 0.0240692, 1, 0, 0.500748,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.00547393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.54677, 1, 1, 0.521326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49996,-99) , 
2, 0.27552, 0, 0, 0.501009,-99) , 
2, -0.214238, 1, 0, 0.502153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487053,-99) , 
3, 8.93186, 1, 0, 0.501432,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.00327444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.500764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487189,-99) , 
5, 0.616291, 1, 0, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485427,-99) , 
4, 0.996667, 0, 0, 0.499787,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.00680753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0138016, 1, 1, 0.502175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464701,-99) , 
1, -0.025654, 0, 0, 0.501199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483728,-99) , 
1, 0.0241235, 1, 0, 0.500716,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.00840078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498852,-99) , 
3, 1.45174, 1, 0, 0.513076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497664,-99) , 
0, 0.490471, 1, 0, 0.498261,-99) , 
4, 0.999048, 1, 0, 0.499734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489044,-99) , 
3, 9.37264, 1, 0, 0.499296,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0127715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.83363, 1, 1, 0.514463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474516,-99) , 
3, 4.49711, 1, 0, 0.493446,-99) , 
0, 0.49809, 0, 0, 0.504255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498538,-99) , 
5, -0.191146, 0, 0, 0.500861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482253,-99) , 
2, -0.00716163, 1, 0, 0.495086,-99) , 
2, 0.00352752, 0, 0, 0.498283,-99) , 
2, -0.071299, 1, 0, 0.499348,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.00369197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499794,-99) , 
0, 0.502852, 0, 0, 0.500606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48396,-99) , 
4, 0.999819, 1, 0, 0.492198,-99) , 
5, 0.527325, 1, 0, 0.500011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483993,-99) , 
4, 0.996191, 0, 0, 0.4996,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.00662015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023809, 0, 1, 0.50183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48851,-99) , 
4, 0.999524, 1, 0, 0.496835,-99) , 
5, 0.437557, 1, 0, 0.501231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486003,-99) , 
0, 0.505709, 1, 0, 0.500713,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.00535931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499906,-99) , 
3, 0.995812, 1, 0, 0.501492,-99) , 
3, 9.23016, 0, 0, 0.502043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487833,-99) , 
4, 0.998095, 0, 0, 0.501341,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0120532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492379,-99) , 
0, 0.492376, 0, 0, 0.514743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497371,-99) , 
6, 0.0237926, 0, 0, 0.49834,-99) , 
4, 0.999524, 1, 0, 0.500918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483146,-99) , 
3, 8.98995, 1, 0, 0.500096,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.00957448);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486327,-99) , 
5, -0.64137, 0, 0, 0.504895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496845,-99) , 
5, -0.369439, 1, 0, 0.49887,-99) , 
0, 0.500947, 0, 0, 0.500342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481537,-99) , 
4, 0.996191, 0, 0, 0.499867,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.010467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495832,-99) , 
0, 0.491424, 1, 0, 0.49781,-99) , 
3, 2.33271, 1, 0, 0.501325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486018,-99) , 
3, 9.37525, 1, 0, 0.500701,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.00949378);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.502946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476641,-99) , 
0, 0.502534, 1, 0, 0.499455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466106,-99) , 
0, 0.492376, 0, 0, 0.493619,-99) , 
4, 0.999524, 0, 0, 0.501509,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.00753613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499491,-99) , 
3, 4.66976, 0, 0, 0.501769,-99) , 
NN(
0, 
0, 
-1, 0.0708354, 0, -1, 0.487523,-99) , 
4, 0.998912, 0, 0, 0.50086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474677,-99) , 
4, 0.99619, 0, 0, 0.500199,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.00587487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479985,-99) , 
1, -0.0247291, 0, 0, 0.500842,-99) , 
4, 0.998095, 1, 0, 0.501696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492458,-99) , 
3, 9.36329, 1, 0, 0.501318,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.00661909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0181756, 0, 1, 0.501909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462182,-99) , 
1, -0.0254463, 0, 0, 0.500887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479771,-99) , 
1, 0.0243659, 1, 0, 0.500309,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.00706869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496542,-99) , 
2, -0.0718111, 0, 0, 0.501318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495301,-99) , 
2, -0.0721581, 1, 0, 0.497312,-99) , 
0, 0.499859, 1, 0, 0.49995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485576,-99) , 
0, 0.489519, 0, 0, 0.499588,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.00652721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495684,-99) , 
4, 0.999841, 0, 0, 0.500151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48658,-99) , 
5, 0.617159, 1, 0, 0.499622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476365,-99) , 
4, 0.996667, 0, 0, 0.498945,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.00557498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499289,-99) , 
1, -0.0111512, 1, 0, 0.500296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469696,-99) , 
1, -0.0253816, 0, 0, 0.499484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482426,-99) , 
1, 0.024425, 1, 0, 0.49902,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0115513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.527479, 0, 1, 0.509466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495911,-99) , 
6, 0.0237926, 0, 0, 0.4968,-99) , 
4, 0.999524, 1, 0, 0.498771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482056,-99) , 
3, 9.37525, 1, 0, 0.498089,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0108556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498004,-99) , 
6, 0.0237927, 0, 0, 0.498756,-99) , 
3, 9.33204, 0, 0, 0.500289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49181,-99) , 
5, 0.52749, 0, 0, 0.497728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473982,-99) , 
0, 0.493328, 0, 0, 0.492352,-99) , 
4, 0.999524, 0, 0, 0.499073,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.00637844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78317, 0, 1, 0.502072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481106,-99) , 
4, 0.99873, 0, 0, 0.501467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484648,-99) , 
4, 0.998095, 0, 0, 0.500636,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.00646117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023809, 0, 1, 0.502414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489659,-99) , 
4, 0.999841, 1, 0, 0.495502,-99) , 
5, 0.43748, 1, 0, 0.50168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482546,-99) , 
4, 0.996667, 0, 0, 0.501123,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.00499543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499398,-99) , 
6, 0.023809, 0, 0, 0.500273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477536,-99) , 
0, 0.499043, 1, 0, 0.491501,-99) , 
5, -0.730459, 0, 0, 0.49968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480176,-99) , 
4, 0.99619, 0, 0, 0.499191,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.00732509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494524,-99) , 
5, -0.463749, 0, 0, 0.507429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498937,-99) , 
2, 0.153173, 0, 0, 0.500031,-99) , 
2, -0.071299, 1, 0, 0.501308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483533,-99) , 
4, 0.99619, 0, 0, 0.500856,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.00565975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997143, 1, 1, 0.501898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489608,-99) , 
3, 9.37525, 1, 0, 0.5014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480248,-99) , 
0, 0.505709, 1, 0, 0.500689,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.00794044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498257,-99) , 
5, -0.106568, 0, 0, 0.515248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498585,-99) , 
2, 0.0497489, 0, 0, 0.500512,-99) , 
2, 0.212738, 0, 0, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489903,-99) , 
3, 9.37264, 1, 0, 0.500913,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.00656539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.819894, 1, 1, 0.502958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492029,-99) , 
1, 0.0240692, 1, 0, 0.502651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489763,-99) , 
2, -0.35708, 0, 0, 0.502319,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.00604949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487936,-99) , 
3, 5.25962, 1, 0, 0.511606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48119,-99) , 
0, 0.505709, 1, 0, 0.499945,-99) , 
2, -0.214238, 1, 0, 0.500689,-99) , 
NN(
0, 
0, 
-1, -0.806877, 1, -1, 0.489594,-99) , 
5, -0.72968, 0, 0, 0.499949,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.01487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.50377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488372,-99) , 
2, 0.0110113, 0, 0, 0.498204,-99) , 
2, -0.00324049, 1, 0, 0.501317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484615,-99) , 
3, 4.82274, 1, 0, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0.100736, 0, -1, 0.485972,-99) , 
2, 0.139604, 0, 0, 0.494473,-99) , 
2, 0.0715838, 1, 0, 0.500091,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0106959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494393,-99) , 
5, -0.0992574, 1, 0, 0.497921,-99) , 
3, 9.33156, 0, 0, 0.499288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479566,-99) , 
5, -0.0119791, 0, 0, 0.49712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468691,-99) , 
0, 0.492376, 0, 0, 0.492148,-99) , 
4, 0.999524, 0, 0, 0.498194,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0121908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.681315, 0, 1, 0.502528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491708,-99) , 
6, 0.0147355, 0, 0, 0.494499,-99) , 
5, -0.191357, 0, 0, 0.498968,-99) , 
NN(
0, 
0, 
-1, -0.465499, 1, -1, 0.484358,-99) , 
6, 0.0238036, 1, 0, 0.498139,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.00609136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499189,-99) , 
6, 0.0184201, 0, 0, 0.500103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462487,-99) , 
1, -0.0257891, 0, 0, 0.499121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481297,-99) , 
1, 0.0240692, 1, 0, 0.498632,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.00644628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481361,-99) , 
4, 0.998095, 0, 0, 0.499759,-99) , 
5, 0.672714, 0, 0, 0.500607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49243,-99) , 
5, -0.793826, 1, 0, 0.496571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478325,-99) , 
0, 0.500947, 1, 0, 0.491701,-99) , 
5, -0.639451, 0, 0, 0.499626,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.010224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498321,-99) , 
0, 0.490471, 1, 0, 0.499174,-99) , 
3, 9.31837, 0, 0, 0.500741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491077,-99) , 
5, 0.347935, 0, 0, 0.49853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481038,-99) , 
0, 0.49428, 0, 0, 0.493594,-99) , 
4, 0.999524, 0, 0, 0.499641,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.00477728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.23452, 0, 1, 0.500959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478125,-99) , 
2, 0.0714831, 0, 0, 0.488452,-99) , 
4, 0.998912, 0, 0, 0.500159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475219,-99) , 
4, 0.996191, 0, 0, 0.499532,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0119228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497426,-99) , 
2, 0.0536412, 0, 0, 0.498555,-99) , 
2, -0.302685, 1, 0, 0.49926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491333,-99) , 
3, 1.69057, 1, 0, 0.500588,-99) , 
NN(
0, 
0, 
-1, -0.280598, 0, -1, 0.482182,-99) , 
3, 4.64464, 1, 0, 0.493251,-99) , 
2, 0.0714574, 1, 0, 0.498182,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.00980321);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489805,-99) , 
4, 0.999864, 0, 0, 0.501007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476212,-99) , 
0, 0.501899, 1, 0, 0.496227,-99) , 
4, 0.999524, 0, 0, 0.500333,-99) , 
2, -0.35714, 1, 0, 0.500729,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.00754876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023804, 0, 1, 0.502109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491685,-99) , 
4, 0.999909, 1, 0, 0.496605,-99) , 
5, 0.0781019, 1, 0, 0.500448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485481,-99) , 
4, 0.998095, 0, 0, 0.499711,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0106083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493916,-99) , 
6, 0.00366359, 0, 0, 0.499027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459949,-99) , 
1, -0.025645, 0, 0, 0.498012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478581,-99) , 
1, 0.0242006, 1, 0, 0.497481,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.00791436);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497326,-99) , 
3, 9.22081, 0, 0, 0.498199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484338,-99) , 
2, 0.35031, 1, 0, 0.497817,-99) , 
2, -0.35714, 1, 0, 0.498232,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00728497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498568,-99) , 
4, 0.998095, 1, 0, 0.499496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474936,-99) , 
3, 7.57542, 1, 0, 0.498679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480987,-99) , 
3, 9.32771, 1, 0, 0.497944,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.00840889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.668392, 0, 1, 0.511667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493495,-99) , 
3, 4.09057, 1, 0, 0.500298,-99) , 
5, 0.531143, 0, 0, 0.501178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484862,-99) , 
3, 9.37264, 1, 0, 0.5005,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0049211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.7415, 0, 1, 0.501299,-99) , 
NN(
0, 
0, 
-1, -0.280168, 0, -1, 0.4944,-99) , 
4, 0.999637, 0, 0, 0.500207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479056,-99) , 
4, 0.996191, 0, 0, 0.499671,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0108181);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49891,-99) , 
2, 0.0850258, 0, 0, 0.500762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494933,-99) , 
6, 0.023804, 0, 0, 0.497494,-99) , 
5, -0.011548, 0, 0, 0.498779,-99) , 
2, -0.357136, 1, 0, 0.499214,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.00831208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213093, 0, 1, 0.503111,-99) , 
NN(
0, 
0, 
-1, -0.0720538, 0, -1, 0.489979,-99) , 
3, 5.82613, 1, 0, 0.501853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487084,-99) , 
3, 9.33032, 1, 0, 0.501234,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.00690967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499831,-99) , 
6, 0.0237745, 0, 0, 0.500659,-99) , 
3, 8.29239, 0, 0, 0.501558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491123,-99) , 
5, 0.527422, 0, 0, 0.495862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475397,-99) , 
0, 0.492376, 0, 0, 0.492221,-99) , 
4, 0.999524, 0, 0, 0.50012,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0097576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.336837, 0, 1, 0.520033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497598,-99) , 
3, 1.45381, 1, 0, 0.500386,-99) , 
2, 0.214408, 0, 0, 0.501544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48572,-99) , 
3, 9.37657, 1, 0, 0.500897,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.00762307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75085, 0, 1, 0.503041,-99) , 
NN(
0, 
0, 
-1, -0.194016, 0, -1, 0.492536,-99) , 
4, 0.99932, 0, 0, 0.502069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486019,-99) , 
4, 0.997143, 0, 0, 0.501518,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.00578264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.72968, 1, 1, 0.501524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47436,-99) , 
6, 0.0181273, 1, 0, 0.500651,-99) , 
NN(
0, 
0, 
-1, -0.466893, 1, -1, 0.487374,-99) , 
6, 0.0237926, 1, 0, 0.49989,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.008553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490657,-99) , 
3, 1.86108, 1, 0, 0.513006,-99) , 
NN(
0, 
0, 
-1, 0.999252, 0, -1, 0.49748,-99) , 
4, 0.998571, 1, 0, 0.498569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486304,-99) , 
3, 9.20554, 1, 0, 0.498041,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.00840962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.3097, 0, 1, 0.501757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478386,-99) , 
5, -0.0100893, 0, 0, 0.489819,-99) , 
4, 0.999728, 0, 0, 0.500976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476638,-99) , 
0, 0.502534, 1, 0, 0.496209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471041,-99) , 
0, 0.494281, 0, 0, 0.48924,-99) , 
4, 0.999524, 0, 0, 0.499185,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.00670188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498522,-99) , 
5, 0.654788, 0, 0, 0.499386,-99) , 
5, -0.7305, 1, 0, 0.500113,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.487692,-99) , 
6, 0.023804, 1, 0, 0.4994,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.00719879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499215,-99) , 
2, -0.18822, 1, 0, 0.499867,-99) , 
3, 8.7415, 0, 0, 0.500657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488187,-99) , 
0, 0.499995, 1, 0, 0.498696,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.481818,-99) , 
5, 0.170152, 0, 0, 0.490925,-99) , 
4, 0.999524, 0, 0, 0.499166,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0104505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497869,-99) , 
6, 0.0136022, 0, 0, 0.499688,-99) , 
6, 0.023804, 0, 0, 0.50167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513491,-99) , 
NN(
0, 
0, 
-1, 0.997143, 0, -1, 0.495628,-99) , 
5, 0.655684, 0, 0, 0.497518,-99) , 
5, 0.0781268, 1, 0, 0.500291,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.00434703);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499718,-99) , 
3, 9.23016, 0, 0, 0.500771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487754,-99) , 
4, 0.998095, 0, 0, 0.500221,-99) , 
2, 0.357144, 0, 0, 0.500661,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.00972734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.33204, 0, 1, 0.504477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482508,-99) , 
3, 4.19018, 1, 0, 0.498842,-99) , 
4, 0.999637, 0, 0, 0.503702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490847,-99) , 
4, 0.998095, 0, 0, 0.503062,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.00635472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213505, 0, 1, 0.502207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487457,-99) , 
3, 9.33107, 1, 0, 0.501592,-99) , 
NN(
0, 
0, 
-1, -0.466688, 1, -1, 0.488001,-99) , 
6, 0.0237829, 1, 0, 0.50081,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.00630932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496163,-99) , 
5, -0.460912, 0, 0, 0.50028,-99) , 
4, 0.997619, 1, 0, 0.501024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488728,-99) , 
3, 9.32771, 1, 0, 0.500519,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.00588769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498734,-99) , 
0, 0.494281, 1, 0, 0.49997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487211,-99) , 
5, 0.617143, 1, 0, 0.499453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479097,-99) , 
4, 0.996191, 0, 0, 0.498936,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.00457758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0701903, 0, 1, 0.507813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499436,-99) , 
0, 0.491968, 1, 0, 0.499989,-99) , 
0, 0.502852, 0, 0, 0.501002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482462,-99) , 
4, 0.99619, 0, 0, 0.500532,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.00759962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496669,-99) , 
5, -0.100827, 0, 0, 0.516195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498797,-99) , 
3, 1.00938, 1, 0, 0.500463,-99) , 
2, 0.214298, 0, 0, 0.501388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485496,-99) , 
3, 9.37264, 1, 0, 0.500739,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.00707339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499477,-99) , 
0, 0.492376, 1, 0, 0.500401,-99) , 
3, 9.31837, 0, 0, 0.501583,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498763,-99) , 
4, 0.996893, 1, 0, 0.506631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480514,-99) , 
5, 0.257416, 0, 0, 0.494853,-99) , 
4, 0.999048, 0, 0, 0.500926,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.00810385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.65344, 1, 1, 0.503216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485034,-99) , 
5, -0.833136, 1, 0, 0.492347,-99) , 
5, -0.730459, 0, 0, 0.502473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483092,-99) , 
4, 0.996191, 0, 0, 0.501985,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0086671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495881,-99) , 
5, 0.347749, 1, 0, 0.502115,-99) , 
4, 0.997143, 1, 0, 0.502655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484747,-99) , 
3, 8.9993, 1, 0, 0.501825,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0061971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488058,-99) , 
4, 0.997619, 0, 0, 0.50132,-99) , 
5, 0.616702, 0, 0, 0.501912,-99) , 
NN(
0, 
0, 
-1, -0.0148587, 1, -1, 0.489425,-99) , 
0, 0.491424, 0, 0, 0.501085,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.00939578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213679, 0, 1, 0.504717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497275,-99) , 
5, -0.690908, 1, 0, 0.499131,-99) , 
5, 0.080953, 0, 0, 0.501014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47867,-99) , 
1, -0.0238672, 0, 0, 0.500377,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.00836632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497967,-99) , 
4, 0.999887, 0, 0, 0.502056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484378,-99) , 
5, 0.616291, 1, 0, 0.501397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483024,-99) , 
4, 0.997619, 0, 0, 0.500668,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0101449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496728,-99) , 
5, -0.63962, 1, 0, 0.498168,-99) , 
1, 0.00340007, 0, 0, 0.50044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472903,-99) , 
5, -0.465347, 1, 0, 0.489424,-99) , 
6, 0.023804, 1, 0, 0.499808,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00511765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.501896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483995,-99) , 
4, 0.997143, 0, 0, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491644,-99) , 
5, 0.61718, 1, 0, 0.50096,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0111486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495381,-99) , 
3, 1.8643, 1, 0, 0.51945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496613,-99) , 
0, 0.500947, 0, 0, 0.498572,-99) , 
4, 0.998571, 1, 0, 0.500042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484541,-99) , 
3, 9.23016, 1, 0, 0.499376,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.00657039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480979,-99) , 
4, 0.999206, 0, 0, 0.498713,-99) , 
4, 0.997619, 1, 0, 0.499256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483362,-99) , 
2, -0.0782221, 1, 0, 0.488935,-99) , 
2, 0.0711266, 0, 0, 0.492234,-99) , 
0, 0.5019, 1, 0, 0.49799,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0103823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497282,-99) , 
2, 0.0389301, 0, 0, 0.49898,-99) , 
3, 8.53639, 0, 0, 0.499764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48687,-99) , 
0, 0.496503, 0, 0, 0.499053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474201,-99) , 
0, 0.500947, 1, 0, 0.491899,-99) , 
4, 0.999048, 0, 0, 0.498996,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0125659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499707,-99) , 
3, 2.20173, 1, 0, 0.51238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490793,-99) , 
0, 0.499994, 0, 0, 0.496867,-99) , 
3, 4.82711, 1, 0, 0.50651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497872,-99) , 
6, 0.023783, 0, 0, 0.50094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494533,-99) , 
2, 0.15313, 0, 0, 0.496132,-99) , 
5, -0.1914, 1, 0, 0.498364,-99) , 
2, -0.0713494, 1, 0, 0.499821,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.00695449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499467,-99) , 
5, 0.347745, 0, 0, 0.501357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480277,-99) , 
6, 0.0181362, 1, 0, 0.500685,-99) , 
NN(
0, 
0, 
-1, -0.467054, 1, -1, 0.485106,-99) , 
6, 0.023804, 1, 0, 0.499807,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.00539355);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488922,-99) , 
3, 8.81483, 1, 0, 0.501596,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.00602107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.996667, 1, 1, 0.501909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476381,-99) , 
3, 7.60232, 1, 0, 0.501076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487864,-99) , 
3, 9.36329, 1, 0, 0.500531,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.00744871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0161107, 1, 1, 0.502428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463493,-99) , 
1, -0.0256029, 0, 0, 0.50142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481548,-99) , 
1, 0.0242247, 1, 0, 0.500876,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0144917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490742,-99) , 
4, 0.999932, 0, 0, 0.507233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495673,-99) , 
2, -0.0145517, 1, 0, 0.49859,-99) , 
3, 4.46078, 0, 0, 0.500477,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.485157,-99) , 
4, 0.998571, 0, 0, 0.499431,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.00713648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.54632, 0, 1, 0.502153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463031,-99) , 
3, 4.56217, 1, 0, 0.496077,-99) , 
4, 0.999637, 0, 0, 0.501198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47894,-99) , 
4, 0.996191, 0, 0, 0.500639,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.011605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497248,-99) , 
4, 0.999909, 1, 0, 0.49954,-99) , 
3, 9.33204, 0, 0, 0.500617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492978,-99) , 
5, 0.527422, 0, 0, 0.497399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468944,-99) , 
0, 0.492376, 0, 0, 0.492381,-99) , 
4, 0.999524, 0, 0, 0.499357,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.00499867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498839,-99) , 
5, -0.0213353, 0, 0, 0.514954,-99) , 
NN(
0, 
0, 
-1, 0.556782, 1, 1, 0.5011,-99) , 
2, -0.214092, 1, 0, 0.501885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484994,-99) , 
3, 9.31837, 1, 0, 0.501178,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0121362);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478963,-99) , 
6, 0.0136022, 1, 0, 0.501891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492841,-99) , 
5, -0.69156, 1, 0, 0.496824,-99) , 
5, -0.280953, 0, 0, 0.500037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475122,-99) , 
5, -0.465499, 1, 0, 0.48917,-99) , 
6, 0.023804, 1, 0, 0.499414,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0073048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497297,-99) , 
5, -0.0141196, 0, 0, 0.515765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498374,-99) , 
2, 0.275174, 0, 0, 0.49907,-99) , 
2, -0.214492, 1, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483946,-99) , 
3, 9.36329, 1, 0, 0.499361,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.00736682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237733, 0, 1, 0.502449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483438,-99) , 
5, -0.83317, 1, 0, 0.493219,-99) , 
5, -0.730839, 0, 0, 0.501811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486982,-99) , 
4, 0.998095, 0, 0, 0.501087,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.00776997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0161776, 0, 1, 0.514152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497845,-99) , 
2, 0.274697, 0, 0, 0.498561,-99) , 
2, -0.214833, 1, 0, 0.499436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484175,-99) , 
3, 9.19619, 1, 0, 0.498768,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0050239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499863,-99) , 
6, 0.0156012, 0, 0, 0.500793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466887,-99) , 
1, 0.0252033, 1, 0, 0.499897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475572,-99) , 
1, -0.0245903, 0, 0, 0.499232,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0105085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498561,-99) , 
1, 0.0124562, 0, 0, 0.500761,-99) , 
6, 0.0237836, 0, 0, 0.503899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497952,-99) , 
3, 0.584184, 1, 0, 0.500006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47798,-99) , 
3, 9.38625, 1, 0, 0.499075,-99) , 
5, -0.282635, 1, 0, 0.500917,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0086164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.659824, 0, 1, 0.503497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487488,-99) , 
3, 9.37264, 1, 0, 0.502836,-99) , 
NN(
0, 
0, 
-1, -0.832607, 1, -1, 0.489532,-99) , 
5, -0.72968, 0, 0, 0.501952,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0126971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49767,-99) , 
4, 0.999992, 0, 0, 0.502573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489919,-99) , 
0, 0.49809, 0, 0, 0.496904,-99) , 
4, 0.999841, 0, 0, 0.501151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48701,-99) , 
4, 0.996667, 0, 0, 0.500738,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0100237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499201,-99) , 
6, 0.023809, 0, 0, 0.49991,-99) , 
3, 8.54075, 0, 0, 0.501118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483215,-99) , 
3, 2.60184, 1, 0, 0.504613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447747,-99) , 
3, 4.45651, 1, 0, 0.495124,-99) , 
4, 0.999524, 0, 0, 0.500199,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.00841618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497719,-99) , 
2, 0.336851, 0, 0, 0.515737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491617,-99) , 
0, 0.491424, 0, 0, 0.501963,-99) , 
2, 0.214478, 0, 0, 0.502768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489344,-99) , 
3, 8.99531, 1, 0, 0.502146,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0074558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.50294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484751,-99) , 
5, 0.617159, 1, 0, 0.502207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484973,-99) , 
4, 0.99619, 0, 0, 0.501773,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.00401338);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497382,-99) , 
5, -0.0161776, 0, 0, 0.512173,-99) , 
NN(
0, 
0, 
-1, 0.274802, 0, 1, 0.500701,-99) , 
2, -0.214686, 1, 0, 0.501338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4858,-99) , 
3, 9.36329, 1, 0, 0.500702,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0104236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488687,-99) , 
4, 0.999705, 0, 0, 0.501135,-99) , 
3, 9.3351, 0, 0, 0.502505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485474,-99) , 
5, 0.252876, 0, 0, 0.495139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471716,-99) , 
0, 0.502852, 1, 0, 0.490921,-99) , 
4, 0.999524, 0, 0, 0.500744,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.00571805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476066,-99) , 
4, 0.997143, 0, 0, 0.499741,-99) , 
5, 0.67269, 0, 0, 0.500227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503117,-99) , 
NN(
0, 
0, 
-1, -0.698434, 1, -1, 0.483447,-99) , 
5, -0.794011, 1, 0, 0.490431,-99) , 
5, -0.63962, 0, 0, 0.499144,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.00438901);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491856,-99) , 
6, 0.000863561, 0, 0, 0.499369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482076,-99) , 
6, 0.0181349, 1, 0, 0.498819,-99) , 
NN(
0, 
0, 
-1, -0.46672, 1, -1, 0.487228,-99) , 
6, 0.0238036, 1, 0, 0.498162,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00815228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.22125, 0, 1, 0.50357,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.491824,-99) , 
4, 0.999524, 0, 0, 0.501098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507536,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.496239,-99) , 
5, 0.621226, 0, 0, 0.496725,-99) , 
0, 0.495233, 1, 0, 0.497806,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0109531);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497755,-99) , 
4, 0.999994, 0, 0, 0.500822,-99) , 
NN(
0, 
0, 
-1, -0.460622, 0, -1, 0.493919,-99) , 
4, 0.999864, 0, 0, 0.49932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489592,-99) , 
4, 0.996893, 1, 0, 0.496529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475242,-99) , 
5, 0.260965, 0, 0, 0.486822,-99) , 
4, 0.999048, 0, 0, 0.498115,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00617862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.018287, 0, 1, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4556,-99) , 
1, -0.0256026, 0, 0, 0.499903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46547,-99) , 
1, 0.0242247, 1, 0, 0.498977,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.00526105);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499316,-99) , 
4, 0.998572, 1, 0, 0.500371,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.496115,-99) , 
0, 0.499995, 1, 0, 0.499013,-99) , 
2, 0.357116, 0, 0, 0.499366,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.00589814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498624,-99) , 
6, 0.023809, 0, 0, 0.499425,-99) , 
5, 0.655179, 0, 0, 0.499973,-99) , 
NN(
0, 
0, 
-1, -0.833182, 1, -1, 0.490735,-99) , 
5, -0.730535, 0, 0, 0.499362,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.00377558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499965,-99) , 
4, 0.998571, 1, 0, 0.501164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490518,-99) , 
3, 9.37525, 1, 0, 0.500728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487464,-99) , 
1, -0.0234486, 0, 0, 0.50034,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.00472966);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.213601, 0, 1, 0.501799,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.487364,-99) , 
3, 8.65294, 1, 0, 0.501045,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.00732499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496265,-99) , 
5, 0.260945, 1, 0, 0.501323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489506,-99) , 
4, 0.998095, 0, 0, 0.500734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477667,-99) , 
1, -0.0240985, 0, 0, 0.500094,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.00940066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485248,-99) , 
3, 5.07863, 1, 0, 0.505706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497708,-99) , 
2, -0.0513446, 1, 0, 0.499009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478599,-99) , 
5, 0.663732, 0, 0, 0.48817,-99) , 
5, 0.526871, 1, 0, 0.498196,-99) , 
2, -0.214567, 1, 0, 0.498672,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.00733111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499358,-99) , 
0, 0.490472, 1, 0, 0.499952,-99) , 
3, 9.31837, 0, 0, 0.501038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475889,-99) , 
0, 0.492693, 0, 0, 0.497349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474683,-99) , 
0, 0.502852, 1, 0, 0.493312,-99) , 
4, 0.999524, 0, 0, 0.499855,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.00649977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490301,-99) , 
4, 0.998821, 0, 0, 0.501268,-99) , 
4, 0.998095, 1, 0, 0.502174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486507,-99) , 
3, 9.37599, 1, 0, 0.501536,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.00777272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.677126, 0, 1, 0.504247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498506,-99) , 
6, 0.023804, 0, 0, 0.499441,-99) , 
5, 0.257959, 0, 0, 0.500468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493128,-99) , 
3, 2.84672, 0, 0, 0.502185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472597,-99) , 
5, 0.161318, 1, 0, 0.493518,-99) , 
0, 0.492376, 0, 0, 0.499799,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.00545075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479195,-99) , 
4, 0.998413, 0, 0, 0.500646,-99) , 
4, 0.996667, 1, 0, 0.501142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488546,-99) , 
1, -0.0240946, 0, 0, 0.500786,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.00684249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490779,-99) , 
3, 5.16531, 1, 0, 0.509254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499998,-99) , 
6, 0.0237927, 0, 0, 0.501918,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.496537,-99) , 
5, 0.0782731, 1, 0, 0.500171,-99) , 
2, 0.214314, 0, 0, 0.50076,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0091689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0160378, 1, 1, 0.502952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456264,-99) , 
1, -0.0255328, 0, 0, 0.50174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474786,-99) , 
1, 0.0243022, 1, 0, 0.50101,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.00461604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499772,-99) , 
4, 0.998572, 1, 0, 0.501124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49451,-99) , 
3, 8.98596, 1, 0, 0.500816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477856,-99) , 
1, 0.0239723, 1, 0, 0.500167,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00725038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498855,-99) , 
3, 9.31837, 0, 0, 0.500216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489327,-99) , 
1, -0.00144225, 1, 0, 0.495285,-99) , 
4, 0.999524, 0, 0, 0.499448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482,-99) , 
1, 0.0234799, 1, 0, 0.498943,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.00648223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499594,-99) , 
2, -0.211765, 1, 0, 0.500234,-99) , 
3, 9.33204, 0, 0, 0.501449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49503,-99) , 
4, 0.996893, 1, 0, 0.501704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479655,-99) , 
5, 0.259752, 0, 0, 0.491723,-99) , 
4, 0.999048, 0, 0, 0.500505,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0104215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497336,-99) , 
4, 0.999841, 0, 0, 0.503002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486095,-99) , 
5, 0.617131, 1, 0, 0.502336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475813,-99) , 
4, 0.996667, 0, 0, 0.501577,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.00504394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498385,-99) , 
3, 1.45951, 1, 0, 0.513504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499796,-99) , 
0, 0.504757, 0, 0, 0.500352,-99) , 
4, 0.999048, 1, 0, 0.501664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489715,-99) , 
3, 9.37697, 1, 0, 0.501176,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.00659293);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511955,-99) , 
NN(
NN(
0, 
0, 
-1, 7.36999, 0, 1, 0.501706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486053,-99) , 
5, 0.235492, 0, 0, 0.493726,-99) , 
4, 0.999524, 0, 0, 0.500598,-99) , 
5, 0.621271, 0, 0, 0.501113,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0124409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496661,-99) , 
3, 3.63793, 1, 0, 0.500493,-99) , 
3, 9.33207, 0, 0, 0.501687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478197,-99) , 
3, 2.38017, 1, 0, 0.504271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446864,-99) , 
3, 4.42411, 1, 0, 0.494584,-99) , 
4, 0.999524, 0, 0, 0.500601,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.00566881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499106,-99) , 
5, -0.0348312, 0, 0, 0.500613,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.49448,-99) , 
5, 0.351104, 1, 0, 0.499704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480866,-99) , 
4, 0.996191, 0, 0, 0.499231,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.00545825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499559,-99) , 
1, 0.0138542, 0, 0, 0.500452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454584,-99) , 
1, 0.0257213, 1, 0, 0.499267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48694,-99) , 
1, -0.0241199, 0, 0, 0.498924,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0078355);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488792,-99) , 
3, 5.21792, 1, 0, 0.510371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498305,-99) , 
1, 0.000780503, 1, 0, 0.500872,-99) , 
2, -0.214567, 1, 0, 0.501471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485348,-99) , 
1, -0.0241395, 0, 0, 0.501022,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.00742145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.50286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487285,-99) , 
3, 8.98995, 1, 0, 0.502143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482899,-99) , 
1, 0.0234521, 1, 0, 0.50159,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0104457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498689,-99) , 
6, 0.00340055, 1, 0, 0.501397,-99) , 
6, 0.023804, 0, 0, 0.502829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495324,-99) , 
5, 0.654823, 0, 0, 0.497009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480451,-99) , 
0, 0.492376, 0, 0, 0.495343,-99) , 
5, 0.0777052, 1, 0, 0.500353,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00663167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498598,-99) , 
2, -0.21384, 1, 0, 0.499698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488603,-99) , 
3, 9.31837, 1, 0, 0.499234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475515,-99) , 
1, 0.0242247, 1, 0, 0.498588,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.00878843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489084,-99) , 
3, 2.77286, 1, 0, 0.512458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493984,-99) , 
5, -0.639715, 0, 0, 0.50114,-99) , 
4, 0.999048, 1, 0, 0.502257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490359,-99) , 
3, 9.37525, 1, 0, 0.50177,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0113474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49586,-99) , 
4, 0.999909, 0, 0, 0.505628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496516,-99) , 
2, 0.0361497, 0, 0, 0.498839,-99) , 
3, 4.45094, 0, 0, 0.500314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487007,-99) , 
4, 0.998095, 0, 0, 0.49966,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.00671973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486204,-99) , 
1, -0.0240074, 0, 0, 0.502167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487136,-99) , 
3, 9.32771, 1, 0, 0.501543,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0027639);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.261931, 0, 1, 0.501018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484723,-99) , 
2, -0.35707, 0, 0, 0.500601,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0046306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.336741, 0, 1, 0.519569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499831,-99) , 
2, -0.275462, 1, 0, 0.500555,-99) , 
2, 0.214298, 0, 0, 0.501679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489904,-99) , 
3, 9.37264, 1, 0, 0.501198,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00668101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49208,-99) , 
4, 0.999705, 0, 0, 0.500234,-99) , 
3, 9.31837, 0, 0, 0.501492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491697,-99) , 
5, 0.252257, 0, 0, 0.499325,-99) , 
NN(
0, 
0, 
-1, 0.998163, 0, -1, 0.49051,-99) , 
2, -0.0719238, 1, 0, 0.493896,-99) , 
4, 0.999524, 0, 0, 0.500328,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.00531581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499961,-99) , 
6, 0.023809, 0, 0, 0.502108,-99) , 
NN(
0, 
0, 
-1, 0.504349, 1, -1, 0.497703,-99) , 
5, -0.191238, 1, 0, 0.499741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488232,-99) , 
0, 0.490471, 0, 0, 0.499239,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0112556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496451,-99) , 
4, 0.999932, 0, 0, 0.502565,-99) , 
4, 0.998572, 1, 0, 0.503231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497198,-99) , 
0, 0.504711, 0, 0, 0.500192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484899,-99) , 
4, 0.999048, 0, 0, 0.498586,-99) , 
0, 0.499995, 1, 0, 0.501747,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00694597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.685602, 0, 1, 0.507736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498978,-99) , 
5, -0.677862, 1, 0, 0.500034,-99) , 
5, 0.351167, 0, 0, 0.50134,-99) , 
NN(
0, 
0, 
-1, -0.467598, 1, -1, 0.486744,-99) , 
6, 0.023809, 1, 0, 0.500509,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.00351152);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499966,-99) , 
2, -0.214435, 1, 0, 0.500948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49121,-99) , 
3, 9.22081, 1, 0, 0.500536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484137,-99) , 
1, 0.0236902, 1, 0, 0.500068,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.00728113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0180868, 0, 1, 0.502672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469625,-99) , 
1, -0.0253251, 0, 0, 0.501804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487822,-99) , 
1, 0.02449, 1, 0, 0.501422,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.00724608);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498066,-99) , 
5, 0.16815, 1, 0, 0.504167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498649,-99) , 
2, -0.282935, 1, 0, 0.499419,-99) , 
2, 0.00341859, 0, 0, 0.501512,-99) , 
2, 0.357166, 0, 0, 0.501823,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0102551);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495339,-99) , 
3, 2.32983, 1, 0, 0.500273,-99) , 
3, 9.37264, 0, 0, 0.500866,-99) , 
2, -0.357386, 1, 0, 0.501229,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.00754238);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515962,-99) , 
NN(
NN(
0, 
0, 
-1, 0.023804, 0, 1, 0.503261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496909,-99) , 
4, 0.997143, 1, 0, 0.497875,-99) , 
5, -0.101578, 1, 0, 0.500783,-99) , 
2, -0.357457, 1, 0, 0.501181,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.007414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499901,-99) , 
5, -0.691445, 1, 0, 0.501491,-99) , 
6, 0.023809, 0, 0, 0.503422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512603,-99) , 
NN(
0, 
0, 
-1, 0.573234, 1, -1, 0.497062,-99) , 
5, 0.655733, 0, 0, 0.498691,-99) , 
5, 0.078298, 1, 0, 0.501852,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0059796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023809, 0, 1, 0.501967,-99) , 
NN(
0, 
0, 
-1, -0.832607, 1, -1, 0.491276,-99) , 
5, -0.72968, 0, 0, 0.501232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480983,-99) , 
4, 0.997143, 0, 0, 0.50055,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.00452308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.50132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48544,-99) , 
5, 0.617143, 1, 0, 0.500696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483689,-99) , 
4, 0.996667, 0, 0, 0.5002,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.00608187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486368,-99) , 
5, -0.82016, 0, 0, 0.500733,-99) , 
0, 0.505709, 0, 0, 0.501364,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.48557,-99) , 
4, 0.998571, 0, 0, 0.500288,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00896739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0729999, 1, 1, 0.503685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494873,-99) , 
5, -0.0114966, 0, 0, 0.498443,-99) , 
1, 0.00198446, 0, 0, 0.500573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482355,-99) , 
1, -0.022916, 0, 0, 0.500023,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.00749463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498341,-99) , 
4, 0.999048, 1, 0, 0.500073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489119,-99) , 
3, 9.37697, 1, 0, 0.499626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483869,-99) , 
1, 0.023467, 1, 0, 0.49917,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.008541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486918,-99) , 
5, -0.309122, 0, 0, 0.511018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497981,-99) , 
5, -0.281011, 1, 0, 0.500203,-99) , 
3, 0.542516, 1, 0, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490184,-99) , 
3, 8.81222, 1, 0, 0.500324,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0133708);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494246,-99) , 
4, 0.999955, 0, 0, 0.505722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496473,-99) , 
4, 0.999909, 1, 0, 0.498614,-99) , 
3, 4.14831, 0, 0, 0.500372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483649,-99) , 
5, 0.259752, 0, 0, 0.499886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474267,-99) , 
0, 0.494281, 0, 0, 0.492554,-99) , 
4, 0.999048, 0, 0, 0.499614,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.00336817);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499606,-99) , 
4, 0.999048, 1, 0, 0.500064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482057,-99) , 
5, -0.193503, 1, 0, 0.492829,-99) , 
0, 0.504757, 1, 0, 0.499655,-99) , 
2, -0.357084, 1, 0, 0.500024,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.00558769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497503,-99) , 
0, 0.502852, 1, 0, 0.501409,-99) , 
2, 0.357166, 0, 0, 0.501822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484615,-99) , 
1, -0.0240946, 0, 0, 0.50135,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.00409912);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515746,-99) , 
NN(
NN(
0, 
0, 
-1, -0.794114, 1, 1, 0.500592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488611,-99) , 
5, 0.676965, 0, 0, 0.492711,-99) , 
5, 0.441077, 1, 0, 0.499692,-99) , 
2, 0.357109, 0, 0, 0.500125,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.00515282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023772, 0, 1, 0.50133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482371,-99) , 
4, 0.996667, 0, 0, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.487067,-99) , 
5, -0.730179, 0, 0, 0.499829,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.00967134);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488787,-99) , 
4, 0.999728, 0, 0, 0.506715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497169,-99) , 
3, 1.2139, 1, 0, 0.499406,-99) , 
3, 4.71854, 0, 0, 0.500854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490344,-99) , 
4, 0.998095, 0, 0, 0.500334,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.00529881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468298,-99) , 
4, 0.997143, 0, 0, 0.499086,-99) , 
5, 0.668526, 0, 0, 0.499759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495289,-99) , 
0, 0.499043, 1, 0, 0.500294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477342,-99) , 
5, -0.708736, 1, 0, 0.493064,-99) , 
5, -0.640296, 0, 0, 0.499018,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0100866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499974,-99) , 
2, -0.214645, 1, 0, 0.501644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494401,-99) , 
6, 0.0238036, 0, 0, 0.496976,-99) , 
5, -0.101357, 0, 0, 0.499079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483208,-99) , 
4, 0.996191, 0, 0, 0.498677,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.00510609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499774,-99) , 
2, 0.214495, 0, 0, 0.500833,-99) , 
NN(
0, 
0, 
-1, 7.86326, 1, -1, 0.48517,-99) , 
3, 6.7314, 1, 0, 0.499898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486113,-99) , 
3, 9.37264, 1, 0, 0.499337,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0130119);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477254,-99) , 
6, 0.011333, 1, 0, 0.506568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497259,-99) , 
6, 0.0124686, 0, 0, 0.499181,-99) , 
5, -0.00903108, 0, 0, 0.502203,-99) , 
NN(
0, 
0, 
-1, -0.465499, 1, -1, 0.490814,-99) , 
6, 0.023804, 1, 0, 0.501549,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.00613737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495459,-99) , 
4, 0.999524, 0, 0, 0.501262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489991,-99) , 
5, 0.617143, 1, 0, 0.500756,-99) , 
2, 0.357159, 0, 0, 0.501133,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00770298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483637,-99) , 
5, -0.640168, 0, 0, 0.504545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494271,-99) , 
4, 0.999637, 0, 0, 0.500324,-99) , 
0, 0.500947, 0, 0, 0.501353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487114,-99) , 
4, 0.996191, 0, 0, 0.500991,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0049104);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.501988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48842,-99) , 
4, 0.998095, 0, 0, 0.501327,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.00543301);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488123,-99) , 
6, 0.0147358, 1, 0, 0.50023,-99) , 
NN(
0, 
0, 
-1, -0.0240074, 0, -1, 0.490301,-99) , 
6, 0.023804, 1, 0, 0.499667,-99) , 
2, -0.356941, 1, 0, 0.500121,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.00480251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213505, 0, 1, 0.501283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482937,-99) , 
3, 7.566, 1, 0, 0.500658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48407,-99) , 
3, 9.31837, 1, 0, 0.499975,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.00324153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499911,-99) , 
4, 0.999048, 1, 0, 0.500499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487075,-99) , 
5, 0.617206, 1, 0, 0.499972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482476,-99) , 
4, 0.996667, 0, 0, 0.499466,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.00879835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.86067, 1, 1, 0.514657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497448,-99) , 
0, 0.500947, 0, 0, 0.498965,-99) , 
4, 0.999048, 1, 0, 0.500528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487403,-99) , 
3, 9.19619, 1, 0, 0.499963,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.00496778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0180138, 0, 1, 0.501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466252,-99) , 
1, -0.0252193, 0, 0, 0.500075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475298,-99) , 
1, 0.0245856, 1, 0, 0.49941,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.00736835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49784,-99) , 
4, 0.999909, 1, 0, 0.499519,-99) , 
3, 9.22081, 0, 0, 0.500168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482275,-99) , 
4, 0.998095, 0, 0, 0.499297,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.00595323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513992,-99) , 
NN(
0, 
0, 
-1, 7.5808, 1, -1, 0.499128,-99) , 
3, 9.33288, 0, 0, 0.499753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477702,-99) , 
0, 0.50063, 1, 0, 0.495707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475965,-99) , 
0, 0.494281, 0, 0, 0.490006,-99) , 
4, 0.999048, 0, 0, 0.498811,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.00704187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497547,-99) , 
0, 0.502852, 0, 0, 0.498252,-99) , 
3, 9.23401, 0, 0, 0.498847,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.48884,-99) , 
4, 0.998571, 0, 0, 0.498164,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.00933215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497142,-99) , 
6, 0.00226592, 1, 0, 0.500303,-99) , 
6, 0.0237926, 0, 0, 0.50344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515579,-99) , 
NN(
0, 
0, 
-1, 7.83182, 1, -1, 0.498502,-99) , 
5, 0.685578, 0, 0, 0.499347,-99) , 
5, -0.189198, 1, 0, 0.501242,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0064352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.441202, 0, 1, 0.502224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483322,-99) , 
1, 0.0240644, 1, 0, 0.501703,-99) , 
NN(
0, 
0, 
-1, -0.102527, 1, -1, 0.487059,-99) , 
0, 0.504757, 1, 0, 0.500858,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.00920656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492758,-99) , 
6, 0.0012282, 0, 0, 0.501581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466529,-99) , 
1, -0.0257962, 0, 0, 0.500671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48719,-99) , 
1, 0.0240692, 1, 0, 0.500297,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.004003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499839,-99) , 
2, 0.213615, 0, 0, 0.500674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483486,-99) , 
3, 7.566, 1, 0, 0.500095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486465,-99) , 
3, 9.31837, 1, 0, 0.499529,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.00772885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498602,-99) , 
4, 0.999994, 0, 0, 0.501446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481889,-99) , 
3, 4.71854, 1, 0, 0.496885,-99) , 
4, 0.999864, 0, 0, 0.500215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48392,-99) , 
4, 0.997143, 0, 0, 0.499664,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.00366933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.996667, 1, 1, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490914,-99) , 
0, 0.505029, 1, 0, 0.500553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484966,-99) , 
0, 0.489519, 0, 0, 0.500163,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0105912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75797, 0, 1, 0.503404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473587,-99) , 
5, -0.550678, 0, 0, 0.497758,-99) , 
4, 0.999955, 0, 0, 0.5011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482625,-99) , 
5, 0.346791, 0, 0, 0.495749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467,-99) , 
0, 0.500947, 1, 0, 0.487631,-99) , 
4, 0.999048, 0, 0, 0.499797,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.00401279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.356481, 0, 1, 0.500692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469275,-99) , 
1, -0.0256031, 0, 0, 0.499882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478661,-99) , 
1, 0.0242247, 1, 0, 0.499305,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0103273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495777, 0, 1, 0.51343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492016,-99) , 
4, 0.999932, 0, 0, 0.498205,-99) , 
4, 0.998571, 1, 0, 0.499205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491251,-99) , 
3, 2.38091, 0, 0, 0.49884,-99) , 
NN(
0, 
0, 
-1, 0.504349, 1, -1, 0.486766,-99) , 
5, -0.0137286, 1, 0, 0.494325,-99) , 
0, 0.5019, 1, 0, 0.498326,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.00271886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509903,-99) , 
NN(
0, 
0, 
-1, 7.5659, 1, -1, 0.499266,-99) , 
3, 9.31837, 0, 0, 0.499711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491826,-99) , 
4, 0.997143, 0, 0, 0.499442,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.00667973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45174, 1, 1, 0.512302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498209,-99) , 
6, 0.023809, 0, 0, 0.498816,-99) , 
4, 0.998571, 1, 0, 0.499754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486097,-99) , 
3, 9.37264, 1, 0, 0.499196,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00444036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.437952, 1, 1, 0.500945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484523,-99) , 
3, 6.82291, 1, 0, 0.500126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486725,-99) , 
3, 8.91811, 1, 0, 0.49949,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.00952599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497045,-99) , 
5, -0.0177392, 0, 0, 0.512241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496892,-99) , 
2, -0.275462, 1, 0, 0.497739,-99) , 
2, 0.214298, 0, 0, 0.498581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48644,-99) , 
3, 9.33032, 1, 0, 0.498078,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00501559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75525, 0, 1, 0.501108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483495,-99) , 
0, 0.496186, 0, 0, 0.493713,-99) , 
4, 0.999274, 0, 0, 0.500569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477812,-99) , 
4, 0.998095, 0, 0, 0.499473,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0118591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496536,-99) , 
5, -0.691949, 1, 0, 0.499968,-99) , 
6, 0.0237745, 0, 0, 0.502914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522879,-99) , 
NN(
0, 
0, 
-1, 0.59823, 1, -1, 0.497047,-99) , 
5, 0.681355, 0, 0, 0.498357,-99) , 
5, -0.1914, 1, 0, 0.500458,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.00462596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503805, 0, 1, 0.501135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484355,-99) , 
5, 0.621226, 1, 0, 0.500533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481826,-99) , 
4, 0.997619, 0, 0, 0.499789,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.00833108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486028,-99) , 
3, 9.33164, 1, 0, 0.501893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48864,-99) , 
5, -0.777227, 1, 0, 0.495911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475841,-99) , 
0, 0.500947, 1, 0, 0.49068,-99) , 
5, -0.640346, 0, 0, 0.500658,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.00984411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49674,-99) , 
6, 0.00793362, 0, 0, 0.499067,-99) , 
6, 0.0238019, 0, 0, 0.499611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491694,-99) , 
5, -0.792145, 1, 0, 0.497493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480059,-99) , 
5, -0.709053, 1, 0, 0.492049,-99) , 
5, -0.640625, 0, 0, 0.498776,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0097399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486976,-99) , 
4, 0.999048, 0, 0, 0.500577,-99) , 
5, 0.681337, 0, 0, 0.50118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481619,-99) , 
0, 0.500947, 1, 0, 0.497741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47443,-99) , 
4, 0.999905, 0, 0, 0.493082,-99) , 
5, -0.550533, 0, 0, 0.499839,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.00736658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482288,-99) , 
4, 0.998753, 0, 0, 0.500285,-99) , 
4, 0.997619, 1, 0, 0.500763,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491875,-99) , 
2, 0.0718906, 0, 0, 0.496276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477462,-99) , 
5, 0.346728, 1, 0, 0.492876,-99) , 
0, 0.494281, 0, 0, 0.499309,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.00794349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497944,-99) , 
6, 0.023809, 0, 0, 0.498884,-99) , 
NN(
0, 
0, 
-1, -0.0714351, 1, -1, 0.488656,-99) , 
4, 0.998571, 0, 0, 0.498147,-99) , 
NN(
0, 
0, 
-1, 0.499044, 1, -1, 0.488483,-99) , 
5, -0.729408, 0, 0, 0.497495,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00726125);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497363,-99) , 
5, -0.652315, 1, 0, 0.497916,-99) , 
NN(
0, 
0, 
-1, -0.83242, 1, -1, 0.491041,-99) , 
5, -0.729501, 0, 0, 0.497454,-99) , 
2, 0.3572, 0, 0, 0.49787,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.00512646);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499648,-99) , 
3, 8.18723, 0, 0, 0.50078,-99) , 
NN(
0, 
0, 
-1, -0.550444, 0, -1, 0.496235,-99) , 
4, 0.999887, 0, 0, 0.499459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486518,-99) , 
4, 0.997619, 0, 0, 0.498947,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.00809159);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498961,-99) , 
5, 0.0781268, 0, 0, 0.501752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482547,-99) , 
6, 0.0181395, 1, 0, 0.50113,-99) , 
NN(
0, 
0, 
-1, -0.465447, 1, -1, 0.487992,-99) , 
6, 0.023809, 1, 0, 0.500383,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.00510094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.501493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480559,-99) , 
3, 7.57822, 1, 0, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486769,-99) , 
3, 9.33032, 1, 0, 0.500217,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.00500086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489333,-99) , 
2, 0.21443, 1, 0, 0.499424,-99) , 
0, 0.499178, 0, 0, 0.500695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493288,-99) , 
5, -0.386773, 0, 0, 0.500472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478863,-99) , 
5, -0.0107114, 1, 0, 0.492529,-99) , 
0, 0.503804, 1, 0, 0.499969,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.00501849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499127,-99) , 
0, 0.494281, 1, 0, 0.500033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484775,-99) , 
5, 0.615141, 1, 0, 0.499465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487118,-99) , 
4, 0.998095, 0, 0, 0.498862,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.00485355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0158221, 1, 1, 0.501071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466099,-99) , 
1, -0.0253111, 0, 0, 0.500152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479767,-99) , 
1, 0.0245025, 1, 0, 0.499603,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.00618261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494505,-99) , 
5, -0.280881, 0, 0, 0.503429,-99) , 
NN(
0, 
0, 
-1, 0.167933, 1, -1, 0.498273,-99) , 
2, 0.0715005, 0, 0, 0.499202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485317,-99) , 
1, 0.023467, 1, 0, 0.498802,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00895731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0239856, 1, 1, 0.502276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488598,-99) , 
3, 4.51082, 0, 0, 0.493145,-99) , 
5, 0.257882, 1, 0, 0.500533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48197,-99) , 
4, 0.997619, 0, 0, 0.499804,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.00383759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517174,-99) , 
NN(
0, 
0, 
-1, 0.0180871, 1, -1, 0.499313,-99) , 
6, 0.0237396, 0, 0, 0.499875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472175,-99) , 
1, 0.0245025, 1, 0, 0.499133,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.00631426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497548,-99) , 
4, 0.999841, 0, 0, 0.500798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482162,-99) , 
5, 0.613958, 1, 0, 0.500041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478075,-99) , 
4, 0.996667, 0, 0, 0.49942,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.00667488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498583,-99) , 
4, 0.999048, 1, 0, 0.499376,-99) , 
4, 0.996667, 1, 0, 0.500362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487211,-99) , 
3, 9.22081, 1, 0, 0.499797,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.00726909);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487145,-99) , 
3, 5.24746, 1, 0, 0.511355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498867,-99) , 
6, 0.023809, 0, 0, 0.499595,-99) , 
2, -0.214234, 1, 0, 0.500345,-99) , 
NN(
0, 
0, 
-1, -0.832839, 1, -1, 0.489198,-99) , 
5, -0.730181, 0, 0, 0.499608,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.00505635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.501817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490901,-99) , 
2, -0.0714351, 0, 0, 0.497167,-99) , 
3, 4.741, 1, 0, 0.500917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48927,-99) , 
0, 0.490471, 0, 0, 0.500412,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0114567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495981,-99) , 
5, -0.657638, 1, 0, 0.500068,-99) , 
6, 0.023804, 0, 0, 0.502543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497783,-99) , 
3, 0.592839, 1, 0, 0.499234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47627,-99) , 
3, 9.39412, 1, 0, 0.49828,-99) , 
5, -0.281191, 1, 0, 0.499921,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0066051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0137887, 0, 1, 0.502225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464665,-99) , 
1, 0.0256572, 1, 0, 0.501256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488874,-99) , 
1, -0.0241788, 0, 0, 0.500911,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.00757625);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513153,-99) , 
NN(
NN(
0, 
0, 
-1, 0.023809, 0, 1, 0.502724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496402,-99) , 
2, -0.173448, 1, 0, 0.497721,-99) , 
5, -0.191424, 1, 0, 0.500047,-99) , 
2, 0.357166, 0, 0, 0.500394,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00504037);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485873,-99) , 
3, 9.32771, 1, 0, 0.501365,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0106519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497033,-99) , 
5, -0.139883, 0, 0, 0.502591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488076,-99) , 
6, 0.0238036, 1, 0, 0.50211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48902,-99) , 
0, 0.500948, 1, 0, 0.499176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484288,-99) , 
2, 0.0672348, 1, 0, 0.496463,-99) , 
5, -0.460693, 0, 0, 0.500802,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.00848109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482027,-99) , 
4, 0.99873, 0, 0, 0.50163,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.494658,-99) , 
5, -0.55053, 0, 0, 0.500436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483746,-99) , 
4, 0.996667, 0, 0, 0.499954,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00541431);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499599,-99) , 
4, 0.999524, 1, 0, 0.501098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483816,-99) , 
3, 7.6118, 1, 0, 0.500519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486627,-99) , 
3, 9.37264, 1, 0, 0.499956,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.00819979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499396,-99) , 
4, 0.999048, 1, 0, 0.501556,-99) , 
NN(
0, 
0, 
-1, 10.5548, 1, -1, 0.495018,-99) , 
3, 3.72066, 1, 0, 0.49974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482107,-99) , 
5, 0.681397, 0, 0, 0.490123,-99) , 
5, 0.527414, 1, 0, 0.498983,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.00675046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499754,-99) , 
3, 1.70999, 0, 0, 0.506151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493289,-99) , 
4, 0.999048, 0, 0, 0.500124,-99) , 
5, -0.422127, 1, 0, 0.50117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484649,-99) , 
0, 0.495868, 0, 0, 0.496101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485564,-99) , 
0, 0.500947, 1, 0, 0.493349,-99) , 
5, -0.64026, 0, 0, 0.500303,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.00484998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.73006, 1, 1, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487334,-99) , 
6, 0.0181395, 1, 0, 0.501225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4816,-99) , 
5, -0.466772, 1, 0, 0.492446,-99) , 
6, 0.023809, 1, 0, 0.500723,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.00627732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49813,-99) , 
4, 0.996667, 1, 0, 0.498882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491336,-99) , 
3, 8.80287, 1, 0, 0.498511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486347,-99) , 
5, -0.819847, 0, 0, 0.498141,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.00556561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49774,-99) , 
0, 0.499043, 0, 0, 0.499353,-99) , 
5, -0.653121, 1, 0, 0.499842,-99) , 
NN(
0, 
0, 
-1, -0.807107, 1, -1, 0.492187,-99) , 
5, -0.730117, 0, 0, 0.499334,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.00860218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499346,-99) , 
5, -0.670559, 1, 0, 0.501089,-99) , 
6, 0.023804, 0, 0, 0.502995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498825,-99) , 
4, 0.998095, 1, 0, 0.501098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478676,-99) , 
0, 0.503804, 1, 0, 0.499223,-99) , 
5, -0.0117154, 1, 0, 0.501503,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.00629736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49343,-99) , 
5, -0.640888, 0, 0, 0.505984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499439,-99) , 
3, 8.75521, 0, 0, 0.499975,-99) , 
0, 0.500947, 0, 0, 0.50144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482452,-99) , 
4, 0.997143, 0, 0, 0.500801,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.00917637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497166,-99) , 
6, 0.00680235, 1, 0, 0.502046,-99) , 
4, 0.997619, 1, 0, 0.502607,-99) , 
NN(
0, 
0, 
-1, -0.465347, 1, -1, 0.49316,-99) , 
6, 0.023809, 1, 0, 0.502065,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00860254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482417,-99) , 
3, 7.46703, 1, 0, 0.502595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490614,-99) , 
3, 9.19619, 1, 0, 0.502088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48781,-99) , 
0, 0.505709, 1, 0, 0.501605,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.00551301);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515707,-99) , 
NN(
NN(
0, 
0, 
-1, -0.173464, 1, 1, 0.503205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49819,-99) , 
3, 9.22081, 0, 0, 0.49865,-99) , 
0, 0.495233, 1, 0, 0.499776,-99) , 
2, 0.356332, 0, 0, 0.500215,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00791027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491747,-99) , 
6, 0.000862852, 0, 0, 0.501481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483887,-99) , 
6, 0.01812, 1, 0, 0.500914,-99) , 
NN(
0, 
0, 
-1, -0.465321, 1, -1, 0.489686,-99) , 
6, 0.0237829, 1, 0, 0.500274,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.00490082);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.22081, 0, 1, 0.502062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489984,-99) , 
4, 0.998095, 0, 0, 0.501473,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.00843111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49532,-99) , 
3, 2.77274, 1, 0, 0.511723,-99) , 
NN(
0, 
0, 
-1, 0.999365, 0, -1, 0.497308,-99) , 
4, 0.999048, 1, 0, 0.498727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487104,-99) , 
3, 9.37525, 1, 0, 0.498256,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00450043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477073,-99) , 
4, 0.997143, 0, 0, 0.499531,-99) , 
5, 0.67269, 0, 0, 0.500155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49361,-99) , 
5, -0.776862, 1, 0, 0.497469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488078,-99) , 
3, 1.60082, 0, 0, 0.493927,-99) , 
5, -0.63962, 0, 0, 0.499463,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.011475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495729,-99) , 
6, 0.00566706, 0, 0, 0.499975,-99) , 
6, 0.0238036, 0, 0, 0.500582,-99) , 
NN(
0, 
0, 
-1, 0.499045, 1, -1, 0.490134,-99) , 
5, -0.729439, 0, 0, 0.499886,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.00573097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498717,-99) , 
5, 0.257782, 0, 0, 0.500013,-99) , 
2, 0.357166, 0, 0, 0.500488,-99) , 
NN(
0, 
0, 
-1, -0.465447, 1, -1, 0.490012,-99) , 
6, 0.023804, 1, 0, 0.499893,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.00952409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0713161, 1, 1, 0.504731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496765,-99) , 
4, 0.999977, 0, 0, 0.501114,-99) , 
NN(
0, 
0, 
-1, 0.4936, 0, -1, 0.493187,-99) , 
4, 0.999524, 0, 0, 0.499903,-99) , 
0, 0.499043, 0, 0, 0.501877,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.00591826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498479,-99) , 
2, -0.214048, 1, 0, 0.499072,-99) , 
3, 9.33032, 0, 0, 0.499609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485924,-99) , 
4, 0.998095, 0, 0, 0.498942,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0132445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499683,-99) , 
6, 0.00340055, 1, 0, 0.503892,-99) , 
6, 0.023804, 0, 0, 0.505851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499985,-99) , 
2, -0.139892, 1, 0, 0.508419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494304,-99) , 
2, 0.152496, 0, 0, 0.496902,-99) , 
2, -0.0718934, 1, 0, 0.499048,-99) , 
5, -0.101414, 1, 0, 0.502689,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00888553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490669,-99) , 
3, 10.585, 1, 0, 0.503615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491846,-99) , 
5, 0.617131, 1, 0, 0.503138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48944,-99) , 
4, 0.996191, 0, 0, 0.502791,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.00810981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.023804, 0, 1, 0.503032,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.49387,-99) , 
5, 0.0781268, 1, 0, 0.500006,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.00716166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214713, 1, 1, 0.502695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490233,-99) , 
5, -0.678218, 1, 0, 0.496867,-99) , 
5, -0.54956, 0, 0, 0.501724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492778,-99) , 
5, -0.372659, 0, 0, 0.497876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479793,-99) , 
0, 0.489836, 0, 0, 0.494923,-99) , 
0, 0.494281, 0, 0, 0.500476,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.00525665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499034,-99) , 
3, 0.440414, 1, 0, 0.499835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487835,-99) , 
3, 6.87464, 1, 0, 0.499238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488941,-99) , 
3, 8.98596, 1, 0, 0.498764,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.00441268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.501703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488105,-99) , 
5, -0.459425, 0, 0, 0.497492,-99) , 
0, 0.502262, 1, 0, 0.501155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489639,-99) , 
0, 0.505709, 1, 0, 0.500768,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.002843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499966,-99) , 
2, 0.213601, 0, 0, 0.500478,-99) , 
3, 8.99866, 0, 0, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490133,-99) , 
4, 0.998095, 0, 0, 0.500405,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.00745804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499496,-99) , 
5, 0.260945, 0, 0, 0.501578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461592,-99) , 
1, 0.0253994, 1, 0, 0.50053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481111,-99) , 
1, -0.0244131, 0, 0, 0.500004,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.00450737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.501533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488506,-99) , 
5, 0.621226, 1, 0, 0.501027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484787,-99) , 
4, 0.996191, 0, 0, 0.50062,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.00515819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498555,-99) , 
5, 0.479826, 0, 0, 0.499349,-99) , 
5, -0.82035, 1, 0, 0.499718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485756,-99) , 
1, 0.0234836, 1, 0, 0.499316,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00622423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.72968, 1, 1, 0.502264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489817,-99) , 
6, 0.0170058, 1, 0, 0.501741,-99) , 
NN(
0, 
0, 
-1, -0.46672, 1, -1, 0.488276,-99) , 
6, 0.023809, 1, 0, 0.50098,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.00640208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.199935, 1, 1, 0.511626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494347,-99) , 
4, 0.999637, 0, 0, 0.500627,-99) , 
0, 0.504757, 0, 0, 0.501252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485926,-99) , 
4, 0.998095, 0, 0, 0.500511,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0063968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75797, 0, 1, 0.502039,-99) , 
NN(
0, 
0, 
-1, 4.38946, 1, -1, 0.495342,-99) , 
4, 0.999887, 0, 0, 0.500095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487127,-99) , 
4, 0.997619, 0, 0, 0.499581,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0142189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486434,-99) , 
3, 4.86467, 1, 0, 0.508802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492137,-99) , 
3, 4.7595, 1, 0, 0.502025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493644,-99) , 
2, -0.0393273, 1, 0, 0.496443,-99) , 
2, 0.0306432, 0, 0, 0.498067,-99) , 
2, -0.214251, 1, 0, 0.498745,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0048735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.996667, 1, 1, 0.501759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489157,-99) , 
3, 9.36329, 1, 0, 0.501249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486785,-99) , 
1, 0.0239723, 1, 0, 0.500844,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0072293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499166,-99) , 
5, -0.495484, 0, 0, 0.505291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497847,-99) , 
2, 0.0715115, 0, 0, 0.49892,-99) , 
5, -0.422161, 1, 0, 0.500274,-99) , 
NN(
0, 
0, 
-1, -0.832773, 1, -1, 0.4919,-99) , 
5, -0.730119, 0, 0, 0.499719,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.00714033);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513149,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484476,-99) , 
4, 0.999905, 0, 0, 0.503166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498256,-99) , 
5, 0.680875, 0, 0, 0.498761,-99) , 
5, -0.550657, 1, 0, 0.499498,-99) , 
2, -0.357309, 1, 0, 0.499852,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.00552591);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492201,-99) , 
2, -0.261825, 0, 0, 0.501072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490379,-99) , 
5, 0.677012, 0, 0, 0.493275,-99) , 
5, 0.441172, 1, 0, 0.500179,-99) , 
2, 0.3572, 0, 0, 0.500568,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.00484101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214959, 0, 1, 0.500973,-99) , 
NN(
0, 
0, 
-1, -0.37034, 0, -1, 0.489582,-99) , 
3, 5.82685, 1, 0, 0.499885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484663,-99) , 
3, 9.33107, 1, 0, 0.499268,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00770555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998096, 1, 1, 0.501083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478749,-99) , 
5, -0.0117041, 1, 0, 0.492401,-99) , 
0, 0.503804, 1, 0, 0.500344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477746,-99) , 
4, 0.999905, 0, 0, 0.499349,-99) , 
NN(
0, 
0, 
-1, 0.496186, 1, -1, 0.488641,-99) , 
5, -0.589272, 1, 0, 0.495135,-99) , 
5, -0.460926, 0, 0, 0.49913,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0102431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49735,-99) , 
2, 0.0180651, 0, 0, 0.499096,-99) , 
2, -0.302616, 1, 0, 0.499582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485623,-99) , 
0, 0.502852, 0, 0, 0.489024,-99) , 
0, 0.493328, 1, 0, 0.493308,-99) , 
2, 0.0715115, 1, 0, 0.498458,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.00334551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0238827, 1, 1, 0.500794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488093,-99) , 
5, 0.621209, 1, 0, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483113,-99) , 
4, 0.996667, 0, 0, 0.499809,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00794911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499428,-99) , 
5, 0.037025, 0, 0, 0.504117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496634,-99) , 
5, -0.345345, 1, 0, 0.498329,-99) , 
2, -0.0714351, 1, 0, 0.499362,-99) , 
NN(
0, 
0, 
-1, -0.833034, 1, -1, 0.488446,-99) , 
5, -0.730358, 0, 0, 0.498638,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.00690076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497014,-99) , 
3, 1.89214, 1, 0, 0.510199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498389,-99) , 
0, 0.490471, 1, 0, 0.499103,-99) , 
4, 0.998571, 1, 0, 0.499872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484333,-99) , 
3, 9.37525, 1, 0, 0.499247,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.00503998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32771, 0, 1, 0.501496,-99) , 
NN(
0, 
0, 
-1, 0.348616, 1, -1, 0.493564,-99) , 
4, 0.999206, 0, 0, 0.50083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476677,-99) , 
4, 0.996667, 0, 0, 0.500143,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0060993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498637,-99) , 
2, -0.21379, 1, 0, 0.499101,-99) , 
4, 0.997143, 1, 0, 0.499972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485957,-99) , 
3, 8.75421, 1, 0, 0.499278,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.00783136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45182, 1, 1, 0.514323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497578,-99) , 
0, 0.500947, 0, 0, 0.498848,-99) , 
4, 0.998571, 1, 0, 0.499925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482648,-99) , 
3, 9.36329, 1, 0, 0.49923,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.00692871);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49052,-99) , 
0, 0.489655, 0, 0, 0.502105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494417,-99) , 
2, -0.0849481, 1, 0, 0.496457,-99) , 
0, 0.5019, 1, 0, 0.501095,-99) , 
2, 0.357166, 0, 0, 0.501468,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0063952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499257,-99) , 
5, -0.279204, 0, 0, 0.502185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488764,-99) , 
1, -0.0240074, 0, 0, 0.501808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490618,-99) , 
0, 0.505709, 1, 0, 0.501428,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.00484498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499963,-99) , 
3, 8.12799, 0, 0, 0.500679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491727,-99) , 
0, 0.493329, 1, 0, 0.494597,-99) , 
2, 0.0708234, 1, 0, 0.499649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488255,-99) , 
4, 0.997619, 0, 0, 0.499188,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00524545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.23016, 0, 1, 0.501586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485444,-99) , 
5, -0.819826, 0, 0, 0.501077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481892,-99) , 
4, 0.997619, 0, 0, 0.50033,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00691562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498043,-99) , 
4, 0.999524, 1, 0, 0.499252,-99) , 
6, 0.0238019, 0, 0, 0.499942,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.491206,-99) , 
5, -0.730181, 0, 0, 0.499364,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.00642186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.501788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489089,-99) , 
3, 9.23277, 1, 0, 0.50131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49681,-99) , 
2, -0.0738069, 1, 0, 0.498686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481201,-99) , 
4, 0.999048, 0, 0, 0.496855,-99) , 
0, 0.499995, 1, 0, 0.499886,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.00461383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.501277,-99) , 
NN(
0, 
0, 
-1, 0.0715416, 1, -1, 0.49101,-99) , 
3, 7.60889, 1, 0, 0.500537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48786,-99) , 
5, 0.617143, 1, 0, 0.499954,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.00670747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498278,-99) , 
3, 9.32771, 0, 0, 0.499144,-99) , 
NN(
0, 
0, 
-1, 0.999063, 1, -1, 0.491806,-99) , 
4, 0.999365, 0, 0, 0.49853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488252,-99) , 
4, 0.998095, 0, 0, 0.498028,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00547247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.500951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48535,-99) , 
4, 0.999365, 0, 0, 0.500405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4796,-99) , 
5, 0.257308, 0, 0, 0.493462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476191,-99) , 
0, 0.494281, 0, 0, 0.488534,-99) , 
4, 0.999048, 0, 0, 0.499264,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00415515);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499956,-99) , 
6, 0.0168826, 0, 0, 0.500716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475694,-99) , 
1, -0.0253248, 0, 0, 0.500049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473808,-99) , 
1, 0.02449, 1, 0, 0.49936,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00610161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.996667, 1, 1, 0.501982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479918,-99) , 
1, 0.0245062, 1, 0, 0.501388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484748,-99) , 
3, 8.98995, 1, 0, 0.50063,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.00628888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493426,-99) , 
2, 0.0715887, 1, 0, 0.50004,-99) , 
0, 0.505709, 0, 0, 0.500524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483962,-99) , 
4, 0.997619, 0, 0, 0.499868,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.00627765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498355,-99) , 
2, 0.214864, 0, 0, 0.499013,-99) , 
3, 8.64874, 0, 0, 0.499901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482417,-99) , 
5, 0.253146, 0, 0, 0.493572,-99) , 
4, 0.998571, 0, 0, 0.499468,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.00688823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486509,-99) , 
5, -0.0148587, 1, 0, 0.495473,-99) , 
0, 0.493056, 0, 0, 0.501129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504228,-99) , 
NN(
0, 
0, 
-1, 0.504349, 1, -1, 0.492982,-99) , 
2, -0.0724023, 1, 0, 0.49558,-99) , 
0, 0.5019, 1, 0, 0.500133,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00396845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498869,-99) , 
0, 0.505709, 0, 0, 0.499177,-99) , 
2, 0.357166, 0, 0, 0.499513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485914,-99) , 
1, 0.0239918, 1, 0, 0.499137,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.00730717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512795,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.498854,-99) , 
5, 0.681302, 0, 0, 0.499307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482977,-99) , 
5, -0.67913, 1, 0, 0.496687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476367,-99) , 
4, 0.999905, 0, 0, 0.492582,-99) , 
5, -0.550782, 0, 0, 0.498193,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00772732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023804, 0, 1, 0.502685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493147,-99) , 
4, 0.999887, 1, 0, 0.497147,-99) , 
5, 0.0808131, 1, 0, 0.50099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485048,-99) , 
4, 0.997619, 0, 0, 0.500363,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.00458738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498261,-99) , 
0, 0.496185, 1, 0, 0.499299,-99) , 
2, 0.357144, 0, 0, 0.499673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486424,-99) , 
1, -0.0241199, 0, 0, 0.499301,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00588052);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.30921, 0, 1, 0.501786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48871,-99) , 
0, 0.499995, 1, 0, 0.498851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484962,-99) , 
5, -0.0112761, 0, 0, 0.494255,-99) , 
4, 0.999524, 0, 0, 0.500638,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.00550055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488753,-99) , 
3, 7.05355, 1, 0, 0.50003,-99) , 
3, 9.22081, 0, 0, 0.500881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502554,-99) , 
NN(
0, 
0, 
-1, 0.257958, 0, -1, 0.484055,-99) , 
2, 0.0714583, 0, 0, 0.491808,-99) , 
4, 0.999048, 0, 0, 0.499999,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00597706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.15466, 0, 1, 0.506884,-99) , 
NN(
0, 
0, 
-1, -0.0235227, 0, -1, 0.498014,-99) , 
0, 0.503804, 0, 0, 0.498788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483033,-99) , 
4, 0.997619, 0, 0, 0.498166,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0061528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495055,-99) , 
3, 1.42805, 1, 0, 0.514338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498843,-99) , 
2, -0.218245, 1, 0, 0.499335,-99) , 
4, 0.998571, 1, 0, 0.500383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491785,-99) , 
3, 9.19619, 1, 0, 0.500008,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00673751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490478,-99) , 
0, 0.503804, 1, 0, 0.502552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495516,-99) , 
3, 2.52341, 1, 0, 0.498425,-99) , 
5, -0.0116594, 0, 0, 0.500089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4872,-99) , 
1, -0.023748, 0, 0, 0.499729,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00881638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497959,-99) , 
6, 0.0237836, 0, 0, 0.498802,-99) , 
3, 9.33204, 0, 0, 0.500173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495262,-99) , 
4, 0.997256, 1, 0, 0.498749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487432,-99) , 
0, 0.493329, 0, 0, 0.496195,-99) , 
4, 0.999524, 0, 0, 0.499565,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.00863271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491506,-99) , 
3, 1.82112, 1, 0, 0.506181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498429,-99) , 
0, 0.491424, 1, 0, 0.499114,-99) , 
4, 0.999524, 1, 0, 0.500208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488192,-99) , 
3, 9.00191, 1, 0, 0.499651,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0074957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485883,-99) , 
3, 2.60467, 1, 0, 0.510808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499474,-99) , 
3, 3.8418, 0, 0, 0.500819,-99) , 
4, 0.999048, 1, 0, 0.501812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489275,-99) , 
3, 8.78659, 1, 0, 0.501196,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.00634326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493447,-99) , 
3, 5.41504, 1, 0, 0.500611,-99) , 
4, 0.997143, 1, 0, 0.501243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486417,-99) , 
3, 9.37648, 1, 0, 0.500646,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0105391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75518, 0, 1, 0.503733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489593,-99) , 
5, 0.261127, 0, 0, 0.494014,-99) , 
4, 0.999887, 0, 0, 0.501837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494846,-99) , 
0, 0.495278, 1, 0, 0.498657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486831,-99) , 
0, 0.492376, 0, 0, 0.49658,-99) , 
4, 0.999524, 0, 0, 0.501033,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.00631144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497766,-99) , 
2, 0.00343866, 0, 0, 0.500209,-99) , 
2, 0.357153, 0, 0, 0.50051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489366,-99) , 
1, 0.0237815, 1, 0, 0.500197,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.00558374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499029,-99) , 
0, 0.490471, 1, 0, 0.499649,-99) , 
3, 9.22081, 0, 0, 0.500491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490882,-99) , 
4, 0.997755, 1, 0, 0.497111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486162,-99) , 
5, 0.08272, 0, 0, 0.493669,-99) , 
4, 0.999048, 0, 0, 0.499825,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.00822359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.503623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488485,-99) , 
5, 0.617189, 1, 0, 0.50303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489884,-99) , 
4, 0.996667, 0, 0, 0.502649,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.00634427);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499156,-99) , 
6, 0.0237836, 0, 0, 0.500894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490868,-99) , 
5, 0.270767, 0, 0, 0.496925,-99) , 
5, 0.0782919, 1, 0, 0.499597,-99) , 
2, 0.357209, 0, 0, 0.499961,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.00791404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0171208, 0, 1, 0.502761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467918,-99) , 
1, -0.0256843, 0, 0, 0.501855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480423,-99) , 
1, 0.0240897, 1, 0, 0.501275,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0112391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0603624, 0, 1, 0.505636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495672,-99) , 
0, 0.491424, 1, 0, 0.497167,-99) , 
3, 1.82224, 1, 0, 0.500841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489935,-99) , 
3, 9.00266, 1, 0, 0.500341,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.00585115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490397,-99) , 
4, 0.999456, 0, 0, 0.500293,-99) , 
0, 0.505709, 0, 0, 0.50081,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.487438,-99) , 
4, 0.998571, 0, 0, 0.499898,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.00410482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0158866, 1, 1, 0.501123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477225,-99) , 
1, -0.0253761, 0, 0, 0.500491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484963,-99) , 
1, 0.0244434, 1, 0, 0.500075,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00610923);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499789,-99) , 
3, 7.93152, 0, 0, 0.500927,-99) , 
NN(
0, 
0, 
-1, -0.547124, 0, -1, 0.494956,-99) , 
4, 0.999887, 0, 0, 0.499197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48096,-99) , 
4, 0.997619, 0, 0, 0.498478,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.00600122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499569,-99) , 
3, 9.33156, 0, 0, 0.500747,-99) , 
NN(
0, 
0, 
-1, -0.0716328, 1, -1, 0.490041,-99) , 
4, 0.999365, 0, 0, 0.499654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477426,-99) , 
4, 0.996667, 0, 0, 0.499023,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.00483802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.668403, 0, 1, 0.508163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499269,-99) , 
0, 0.503804, 0, 0, 0.499872,-99) , 
5, 0.531166, 0, 0, 0.500511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483497,-99) , 
3, 8.98995, 1, 0, 0.499729,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.00555149);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.50194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479018,-99) , 
2, -0.0717478, 1, 0, 0.48985,-99) , 
4, 0.998571, 0, 0, 0.501115,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.00482462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512797,-99) , 
NN(
0, 
0, 
-1, 0.256798, 1, -1, 0.49854,-99) , 
4, 0.996667, 1, 0, 0.498958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482712,-99) , 
3, 9.37525, 1, 0, 0.498309,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0098273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237733, 0, 1, 0.50355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48563,-99) , 
0, 0.500629, 1, 0, 0.494936,-99) , 
5, -0.639363, 0, 0, 0.502599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493237,-99) , 
3, 4.1906, 0, 0, 0.49679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471968,-99) , 
4, 0.999048, 0, 0, 0.493096,-99) , 
0, 0.494281, 0, 0, 0.500846,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.00557865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47826,-99) , 
1, -0.0253761, 0, 0, 0.500654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484419,-99) , 
1, 0.0244434, 1, 0, 0.500205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483017,-99) , 
4, 0.997619, 0, 0, 0.499529,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.00738943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498863,-99) , 
2, -0.0407149, 1, 0, 0.500631,-99) , 
NN(
0, 
0, 
-1, -0.548898, 0, -1, 0.49511,-99) , 
4, 0.999887, 0, 0, 0.499029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484723,-99) , 
4, 0.997619, 0, 0, 0.498462,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.00563588);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498462,-99) , 
3, 4.44348, 0, 0, 0.49967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489511,-99) , 
4, 0.998776, 0, 0, 0.499201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486854,-99) , 
4, 0.997143, 0, 0, 0.498782,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.00669787);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997755, 0, 1, 0.510973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498348,-99) , 
3, 0.556782, 1, 0, 0.499126,-99) , 
3, 9.31837, 0, 0, 0.499806,-99) , 
4, 0.998571, 1, 0, 0.500589,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.00411428);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997143, 1, 1, 0.50153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486934,-99) , 
3, 8.98995, 1, 0, 0.500864,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.00706231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498639,-99) , 
2, 0.140488, 0, 0, 0.499422,-99) , 
2, 0.221567, 0, 0, 0.500026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485296,-99) , 
2, 0.112282, 1, 0, 0.494879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480154,-99) , 
2, -0.214251, 0, 0, 0.492422,-99) , 
3, 4.741, 1, 0, 0.498551,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.00818066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49358,-99) , 
3, 2.3327, 1, 0, 0.509911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497013,-99) , 
0, 0.499042, 1, 0, 0.500227,-99) , 
4, 0.999048, 1, 0, 0.50118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488806,-99) , 
3, 9.37525, 1, 0, 0.500681,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.00811162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.77127, 1, 1, 0.50952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498159,-99) , 
6, 0.023772, 0, 0, 0.49898,-99) , 
4, 0.999524, 1, 0, 0.500626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486279,-99) , 
3, 8.75085, 1, 0, 0.499907,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.00923105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0145566, 1, 1, 0.5041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495676,-99) , 
0, 0.499995, 0, 0, 0.498999,-99) , 
3, 3.21433, 1, 0, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48575,-99) , 
3, 9.37648, 1, 0, 0.501837,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0058236);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519423,-99) , 
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.501897,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.49415,-99) , 
4, 0.999524, 0, 0, 0.500816,-99) , 
2, 0.3572, 0, 0, 0.501324,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00632417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.50435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489756,-99) , 
4, 0.999751, 0, 0, 0.499797,-99) , 
0, 0.499043, 0, 0, 0.501653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490095,-99) , 
4, 0.996803, 0, 0, 0.49775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485621,-99) , 
5, -0.0983371, 0, 0, 0.494292,-99) , 
4, 0.999524, 0, 0, 0.50053,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.00433532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511108,-99) , 
NN(
0, 
0, 
-1, 0.99873, 0, -1, 0.498694,-99) , 
4, 0.998095, 1, 0, 0.499309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488965,-99) , 
3, 9.37525, 1, 0, 0.498888,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.00354299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499883,-99) , 
3, 9.33032, 0, 0, 0.50044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484226,-99) , 
4, 0.998254, 0, 0, 0.500012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473748,-99) , 
4, 0.996667, 0, 0, 0.499275,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00763584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496216,-99) , 
5, 0.191363, 1, 0, 0.501146,-99) , 
NN(
0, 
0, 
-1, -0.807731, 1, -1, 0.490649,-99) , 
5, -0.730876, 0, 0, 0.500416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488874,-99) , 
4, 0.998095, 0, 0, 0.499852,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00450034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.112505, 1, 1, 0.509051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499285,-99) , 
3, 9.22081, 0, 0, 0.499923,-99) , 
0, 0.491424, 1, 0, 0.500496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48853,-99) , 
4, 0.998095, 0, 0, 0.499914,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.00545789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495488,-99) , 
5, -0.640622, 0, 0, 0.500503,-99) , 
4, 0.997143, 1, 0, 0.501451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490693,-99) , 
3, 9.33032, 1, 0, 0.501007,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00428396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495151,-99) , 
5, -0.494507, 0, 0, 0.499776,-99) , 
5, -0.819495, 1, 0, 0.500076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483265,-99) , 
1, -0.0239856, 0, 0, 0.499608,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00668105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498828,-99) , 
4, 0.999524, 1, 0, 0.500717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490971,-99) , 
3, 9.37264, 1, 0, 0.500321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4833,-99) , 
1, 0.023467, 1, 0, 0.499837,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.00993667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.356301, 0, 1, 0.507946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494746,-99) , 
3, 3.30134, 1, 0, 0.500168,-99) , 
0, 0.502852, 0, 0, 0.501202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510083,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.490228,-99) , 
5, 0.685594, 0, 0, 0.493449,-99) , 
5, 0.351144, 1, 0, 0.499951,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0114713);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47922,-99) , 
6, 0.0113371, 1, 0, 0.504969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497841,-99) , 
6, 0.0170061, 0, 0, 0.499092,-99) , 
5, -0.0115163, 0, 0, 0.501496,-99) , 
NN(
0, 
0, 
-1, -0.465017, 1, -1, 0.484973,-99) , 
6, 0.023809, 1, 0, 0.500555,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.00965176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498486,-99) , 
5, -0.691182, 1, 0, 0.501644,-99) , 
6, 0.023783, 0, 0, 0.504451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497197,-99) , 
2, -0.132928, 1, 0, 0.497846,-99) , 
2, -0.214543, 1, 0, 0.498718,-99) , 
5, -0.279451, 1, 0, 0.500933,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0048944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499952,-99) , 
0, 0.500947, 0, 0, 0.50127,-99) , 
3, 9.31837, 0, 0, 0.501841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475326,-99) , 
5, 0.258814, 0, 0, 0.491353,-99) , 
4, 0.998571, 0, 0, 0.501122,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.00720095);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.023804, 0, 1, 0.503566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510596,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.496915,-99) , 
5, 0.672798, 0, 0, 0.49795,-99) , 
5, -0.0117154, 1, 0, 0.501348,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.00752102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496316,-99) , 
5, -0.550447, 0, 0, 0.501184,-99) , 
3, 9.23016, 0, 0, 0.501761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487019,-99) , 
0, 0.50063, 1, 0, 0.495178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478614,-99) , 
0, 0.494281, 0, 0, 0.49041,-99) , 
4, 0.999048, 0, 0, 0.500665,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00769949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497138,-99) , 
4, 0.999932, 0, 0, 0.506611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496131,-99) , 
3, 1.15911, 0, 0, 0.499835,-99) , 
3, 4.44348, 0, 0, 0.501334,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.492678,-99) , 
4, 0.998572, 0, 0, 0.500742,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.00494483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.212031, 0, 1, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486759,-99) , 
3, 7.60234, 1, 0, 0.501192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487832,-99) , 
3, 9.36329, 1, 0, 0.500648,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00453939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484268,-99) , 
4, 0.998912, 0, 0, 0.499577,-99) , 
4, 0.997143, 1, 0, 0.500038,-99) , 
NN(
0, 
0, 
-1, -0.189983, 1, -1, 0.490885,-99) , 
0, 0.503805, 1, 0, 0.499228,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.00700273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.75518, 0, 1, 0.501426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489553,-99) , 
5, 0.172318, 0, 0, 0.494058,-99) , 
4, 0.999864, 0, 0, 0.499658,-99) , 
NN(
0, 
0, 
-1, -0.0717215, 1, -1, 0.487223,-99) , 
4, 0.998571, 0, 0, 0.498813,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.00655645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497131,-99) , 
0, 0.499994, 1, 0, 0.504514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498724,-99) , 
6, 0.023804, 0, 0, 0.499503,-99) , 
5, 0.437084, 0, 0, 0.500071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497515,-99) , 
0, 0.492512, 1, 0, 0.499536,-99) , 
NN(
0, 
0, 
-1, 0.34157, 0, -1, 0.491289,-99) , 
5, 0.0733606, 1, 0, 0.496657,-99) , 
0, 0.496185, 0, 0, 0.498973,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00397519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32771, 0, 1, 0.500993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484223,-99) , 
4, 0.998821, 0, 0, 0.500423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488456,-99) , 
4, 0.998095, 0, 0, 0.499837,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0101881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497917,-99) , 
5, -0.691628, 1, 0, 0.501145,-99) , 
6, 0.023809, 0, 0, 0.502673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497441,-99) , 
3, 0.596408, 1, 0, 0.498953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473117,-99) , 
3, 9.39737, 1, 0, 0.497895,-99) , 
5, -0.281192, 1, 0, 0.499734,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.00646847);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49937,-99) , 
6, 0.023809, 0, 0, 0.501422,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.496885,-99) , 
5, -0.281242, 1, 0, 0.498646,-99) , 
2, -0.357035, 1, 0, 0.499093,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.00633021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498619,-99) , 
4, 0.999909, 1, 0, 0.500357,-99) , 
3, 9.23277, 0, 0, 0.500742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484239,-99) , 
4, 0.998095, 0, 0, 0.499955,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00665455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484843,-99) , 
4, 0.998753, 0, 0, 0.501437,-99) , 
4, 0.997619, 1, 0, 0.501978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490418,-99) , 
0, 0.490471, 0, 0, 0.501477,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.00425069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488345,-99) , 
4, 0.998095, 0, 0, 0.500603,-99) , 
5, 0.615216, 0, 0, 0.501004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489342,-99) , 
1, 0.0235801, 1, 0, 0.50067,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00712103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
4, 0.999909, 1, 0, 0.499576,-99) , 
3, 8.54072, 0, 0, 0.500419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494354,-99) , 
4, 0.997256, 1, 0, 0.497469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480217,-99) , 
0, 0.502852, 1, 0, 0.494346,-99) , 
4, 0.999524, 0, 0, 0.499497,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.00504511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.681303, 0, 1, 0.506341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499314,-99) , 
0, 0.503804, 0, 0, 0.500175,-99) , 
5, 0.347612, 0, 0, 0.501213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488124,-99) , 
1, -0.02375, 0, 0, 0.500843,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.00429476);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.501705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487534,-99) , 
3, 9.31837, 1, 0, 0.501121,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.00955328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496491,-99) , 
2, 0.0717981, 1, 0, 0.50294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493093,-99) , 
5, -0.191081, 1, 0, 0.497181,-99) , 
0, 0.502172, 1, 0, 0.501539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488014,-99) , 
0, 0.49292, 1, 0, 0.501841,-99) , 
NN(
0, 
0, 
-1, 0.491287, 0, -1, 0.495721,-99) , 
2, -0.0714402, 1, 0, 0.496897,-99) , 
0, 0.496185, 0, 0, 0.500049,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.00940882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474331,-99) , 
6, 0.0124674, 1, 0, 0.503999,-99) , 
NN(
0, 
0, 
-1, 0.999654, 0, -1, 0.498229,-99) , 
5, -0.101292, 0, 0, 0.500997,-99) , 
NN(
0, 
0, 
-1, -0.465447, 1, -1, 0.489131,-99) , 
6, 0.0238036, 1, 0, 0.500329,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.00483734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4999,-99) , 
6, 0.0238036, 0, 0, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0.999433, 0, -1, 0.495845,-99) , 
5, 0.16575, 1, 0, 0.499665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483919,-99) , 
4, 0.997619, 0, 0, 0.499048,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.00793545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499088,-99) , 
1, 0.0124559, 0, 0, 0.500687,-99) , 
6, 0.0237836, 0, 0, 0.502323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497887,-99) , 
4, 0.997619, 1, 0, 0.499125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484058,-99) , 
0, 0.503804, 1, 0, 0.497869,-99) , 
5, -0.099148, 1, 0, 0.500265,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.00727561);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.503085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477945,-99) , 
5, 0.259527, 0, 0, 0.494942,-99) , 
4, 0.998571, 0, 0, 0.50253,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.00878681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493602,-99) , 
4, 0.999864, 0, 0, 0.506979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490988,-99) , 
5, 0.257906, 1, 0, 0.498905,-99) , 
3, 4.38946, 0, 0, 0.500694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487456,-99) , 
4, 0.997143, 0, 0, 0.500249,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.00557948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499105,-99) , 
5, -0.00746647, 1, 0, 0.501324,-99) , 
2, 0.356486, 0, 0, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486276,-99) , 
5, -0.820301, 0, 0, 0.501278,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00348094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488965,-99) , 
6, 0.0158693, 1, 0, 0.499557,-99) , 
2, 0.357166, 0, 0, 0.500035,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.489623,-99) , 
6, 0.023804, 1, 0, 0.499447,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.00610411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498413,-99) , 
3, 2.29566, 1, 0, 0.514163,-99) , 
NN(
0, 
0, 
-1, 0.99941, 0, -1, 0.49886,-99) , 
4, 0.999048, 1, 0, 0.500385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485602,-99) , 
3, 9.21074, 1, 0, 0.499759,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00432333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.23456, 0, 1, 0.501125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488829,-99) , 
4, 0.998912, 0, 0, 0.500631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485404,-99) , 
4, 0.998095, 0, 0, 0.499894,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.00545264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214781, 1, 1, 0.501268,-99) , 
NN(
0, 
0, 
-1, -0.708976, 1, -1, 0.492162,-99) , 
5, -0.640526, 0, 0, 0.500218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479973,-99) , 
4, 0.997619, 0, 0, 0.49943,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.00433752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514301,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.498711,-99) , 
4, 0.996191, 1, 0, 0.499126,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.488866,-99) , 
6, 0.023804, 1, 0, 0.49855,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.00414402);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514335,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.50097,-99) , 
NN(
0, 
0, 
-1, -0.0143606, 1, -1, 0.493,-99) , 
0, 0.502852, 1, 0, 0.499958,-99) , 
2, 0.357237, 0, 0, 0.500343,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.00757065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0186365, 0, 1, 0.512859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496946,-99) , 
2, -0.0302254, 1, 0, 0.498417,-99) , 
2, 0.214597, 0, 0, 0.499248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487215,-99) , 
3, 9.33156, 1, 0, 0.498756,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.00713302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498993,-99) , 
2, 0.0287879, 0, 0, 0.501195,-99) , 
NN(
0, 
0, 
-1, -0.104129, 0, -1, 0.496482,-99) , 
4, 0.999887, 0, 0, 0.499824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482679,-99) , 
4, 0.997619, 0, 0, 0.499152,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.00304334);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511389,-99) , 
NN(
0, 
0, 
-1, -0.209612, 0, -1, 0.499365,-99) , 
2, 0.262006, 0, 0, 0.499944,-99) , 
2, -0.356992, 1, 0, 0.500345,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.00646459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0183924, 0, 1, 0.501889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459969,-99) , 
1, 0.0257498, 1, 0, 0.500809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48424,-99) , 
1, -0.0240946, 0, 0, 0.500346,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.00508648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498559,-99) , 
0, 0.500675, 1, 0, 0.509642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499499,-99) , 
3, 9.32771, 0, 0, 0.500364,-99) , 
4, 0.999048, 1, 0, 0.501199,-99) , 
NN(
0, 
0, 
-1, -0.0171039, 1, -1, 0.492126,-99) , 
0, 0.491424, 0, 0, 0.500598,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.00464359);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.501988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491211,-99) , 
3, 8.79513, 1, 0, 0.50146,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.00642967);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492313,-99) , 
4, 0.999841, 0, 0, 0.504952,-99) , 
NN(
0, 
0, 
-1, 0.614054, 1, -1, 0.498531,-99) , 
3, 4.66976, 0, 0, 0.499818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485169,-99) , 
4, 0.996667, 0, 0, 0.4994,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.00388477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49425,-99) , 
5, -0.012494, 0, 0, 0.512596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499952,-99) , 
2, 0.275598, 0, 0, 0.500545,-99) , 
2, -0.213891, 1, 0, 0.501231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491126,-99) , 
3, 9.37264, 1, 0, 0.500821,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0061268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495179,-99) , 
3, 1.45233, 1, 0, 0.510613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49927,-99) , 
2, -0.242234, 1, 0, 0.499855,-99) , 
4, 0.999048, 1, 0, 0.500905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488257,-99) , 
3, 9.37525, 1, 0, 0.500404,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.00696284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237733, 0, 1, 0.502552,-99) , 
NN(
0, 
0, 
-1, -0.807368, 1, -1, 0.492102,-99) , 
5, -0.73036, 0, 0, 0.501817,-99) , 
NN(
0, 
0, 
-1, 0.351139, 0, -1, 0.488864,-99) , 
4, 0.998571, 0, 0, 0.500945,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.00492726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214298, 0, 1, 0.50148,-99) , 
NN(
0, 
0, 
-1, -0.105956, 0, -1, 0.48979,-99) , 
3, 6.70348, 1, 0, 0.500778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486726,-99) , 
3, 9.33156, 1, 0, 0.500204,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00721487);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498187,-99) , 
2, -0.071073, 0, 0, 0.502679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496452,-99) , 
5, -0.279451, 1, 0, 0.498423,-99) , 
2, -0.00371014, 1, 0, 0.500284,-99) , 
2, -0.357365, 1, 0, 0.50068,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.00728266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499961,-99) , 
5, -0.61472, 1, 0, 0.502724,-99) , 
6, 0.023804, 0, 0, 0.504025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483465,-99) , 
0, 0.504711, 1, 0, 0.499949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486071,-99) , 
0, 0.492376, 0, 0, 0.498591,-99) , 
5, -0.101661, 1, 0, 0.5015,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.00467815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482317,-99) , 
4, 0.997619, 0, 0, 0.500422,-99) , 
5, 0.655695, 0, 0, 0.500762,-99) , 
NN(
0, 
0, 
-1, -0.807107, 1, -1, 0.492277,-99) , 
5, -0.730117, 0, 0, 0.500196,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.00711081);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497973,-99) , 
5, 0.167612, 0, 0, 0.499997,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.490664,-99) , 
6, 0.0237926, 1, 0, 0.499467,-99) , 
2, -0.35707, 1, 0, 0.499833,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00779344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4442, 1, 1, 0.514383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496478,-99) , 
5, 0.0782651, 1, 0, 0.500688,-99) , 
4, 0.998571, 1, 0, 0.501641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48902,-99) , 
3, 9.31837, 1, 0, 0.50112,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.00506257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499355,-99) , 
5, -0.550768, 1, 0, 0.500702,-99) , 
NN(
0, 
0, 
-1, 0.497955, 0, -1, 0.49092,-99) , 
6, 0.023809, 1, 0, 0.500147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488349,-99) , 
0, 0.505709, 1, 0, 0.499753,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0105444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494282, 1, 1, 0.50434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497182,-99) , 
2, 0.0714693, 0, 0, 0.499239,-99) , 
5, -0.0117116, 1, 0, 0.501708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490589,-99) , 
5, -0.614945, 1, 0, 0.500228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48892,-99) , 
4, 0.999905, 0, 0, 0.497838,-99) , 
5, -0.460926, 0, 0, 0.500806,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00545414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499245,-99) , 
4, 0.999909, 1, 0, 0.500853,-99) , 
3, 9.22081, 0, 0, 0.501435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491138,-99) , 
4, 0.998095, 0, 0, 0.500936,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.00818997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498086,-99) , 
5, 0.0808131, 0, 0, 0.500708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4818,-99) , 
6, 0.0181398, 1, 0, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.488931,-99) , 
6, 0.023809, 1, 0, 0.499466,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.00681881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01358, 1, 1, 0.515064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489134,-99) , 
4, 0.999365, 0, 0, 0.501122,-99) , 
4, 0.999048, 1, 0, 0.502512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491427,-99) , 
3, 9.37648, 1, 0, 0.502066,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.00445693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496095, 0, 1, 0.512744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499994,-99) , 
3, 9.22081, 0, 0, 0.500746,-99) , 
4, 0.998571, 1, 0, 0.501533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493228,-99) , 
3, 2.63065, 0, 0, 0.499298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483317,-99) , 
5, 0.0673844, 1, 0, 0.494262,-99) , 
0, 0.503804, 1, 0, 0.500885,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.00730833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492233,-99) , 
3, 7.05358, 1, 0, 0.501232,-99) , 
3, 9.22081, 0, 0, 0.501949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483449,-99) , 
5, 0.257035, 1, 0, 0.494499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47733,-99) , 
4, 0.996893, 0, 0, 0.489025,-99) , 
4, 0.999048, 0, 0, 0.50071,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00610695);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493802,-99) , 
4, 0.999905, 0, 0, 0.507188,-99) , 
NN(
0, 
0, 
-1, 0.680429, 0, 1, 0.50157,-99) , 
5, -0.551015, 1, 0, 0.502448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489502,-99) , 
1, -0.0240074, 0, 0, 0.502089,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0111303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487251,-99) , 
4, 0.999524, 0, 0, 0.500882,-99) , 
2, 0.0710713, 0, 0, 0.504177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495818,-99) , 
5, 0.351045, 0, 0, 0.49735,-99) , 
NN(
0, 
0, 
-1, -0.191081, 1, -1, 0.487017,-99) , 
0, 0.504439, 1, 0, 0.496503,-99) , 
0, 0.494281, 1, 0, 0.497932,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.00723217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498465,-99) , 
3, 0.523141, 1, 0, 0.499205,-99) , 
3, 8.3097, 0, 0, 0.500167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494034,-99) , 
4, 0.998617, 0, 0, 0.499227,-99) , 
NN(
0, 
0, 
-1, -0.0782389, 1, -1, 0.490904,-99) , 
2, 0.0714152, 0, 0, 0.494176,-99) , 
4, 0.999524, 0, 0, 0.499249,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0112409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499725,-99) , 
4, 0.999998, 0, 0, 0.503095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493336,-99) , 
5, 0.344604, 0, 0, 0.495879,-99) , 
4, 0.999955, 0, 0, 0.500436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492219,-99) , 
5, 0.257959, 1, 0, 0.499734,-99) , 
NN(
0, 
0, 
-1, -0.0782031, 1, -1, 0.48652,-99) , 
2, 0.0714574, 0, 0, 0.491778,-99) , 
4, 0.999524, 0, 0, 0.499121,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.00524784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00347298, 0, 1, 0.506731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496975,-99) , 
2, 0.071288, 1, 0, 0.505018,-99) , 
NN(
NN(
0, 
0, 
-1, 0.577347, 1, 1, 0.501182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48936,-99) , 
3, 9.38003, 1, 0, 0.500692,-99) , 
5, -0.460926, 1, 0, 0.5017,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.00624943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499284,-99) , 
5, -0.0990911, 1, 0, 0.501125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491884,-99) , 
0, 0.491424, 0, 0, 0.500583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508512,-99) , 
NN(
0, 
0, 
-1, 0.0973241, 0, -1, 0.492629,-99) , 
2, 0.343505, 0, 0, 0.495164,-99) , 
2, 0.0714097, 1, 0, 0.499606,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0042167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499408,-99) , 
3, 1.01196, 1, 0, 0.508456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499525,-99) , 
2, 0.231365, 0, 0, 0.500044,-99) , 
4, 0.999048, 1, 0, 0.50087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490225,-99) , 
3, 9.33402, 1, 0, 0.500432,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00727665);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.819847, 1, 1, 0.502188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489836,-99) , 
2, -0.0509806, 1, 0, 0.49567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482748,-99) , 
2, -0.214234, 0, 0, 0.493159,-99) , 
4, 0.999524, 0, 0, 0.500815,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0128922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479758,-99) , 
6, 0.00453147, 0, 0, 0.513997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495989,-99) , 
6, 0.00680023, 1, 0, 0.501389,-99) , 
4, 0.998572, 1, 0, 0.502287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487981,-99) , 
0, 0.498091, 0, 0, 0.494448,-99) , 
6, 0.0238019, 1, 0, 0.501845,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00557451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502988, 1, 1, 0.504654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493599,-99) , 
2, -0.0716237, 0, 0, 0.499934,-99) , 
0, 0.5019, 0, 0, 0.500785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484995,-99) , 
4, 0.996667, 0, 0, 0.500336,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0107196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498079,-99) , 
5, -0.691748, 1, 0, 0.500274,-99) , 
6, 0.023809, 0, 0, 0.501697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496159,-99) , 
4, 0.997619, 1, 0, 0.498418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48199,-99) , 
0, 0.503804, 1, 0, 0.497072,-99) , 
5, 0.0774297, 1, 0, 0.500162,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.011037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497365,-99) , 
5, -0.640139, 1, 0, 0.500363,-99) , 
6, 0.00566758, 0, 0, 0.502382,-99) , 
NN(
0, 
0, 
-1, 0.0235801, 1, -1, 0.490134,-99) , 
6, 0.023804, 1, 0, 0.501697,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00618483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495856,-99) , 
4, 0.999456, 0, 0, 0.501674,-99) , 
4, 0.998095, 1, 0, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485974,-99) , 
1, -0.0241238, 0, 0, 0.501569,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.00509184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214408, 0, 1, 0.501571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487764,-99) , 
3, 8.93139, 1, 0, 0.500924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481178,-99) , 
1, 0.023467, 1, 0, 0.500363,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.00623703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.023754, 0, 1, 0.513124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499695,-99) , 
6, 0.0136049, 0, 0, 0.500991,-99) , 
6, 0.023809, 0, 0, 0.50183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510342,-99) , 
NN(
0, 
0, 
-1, 0.502851, 1, -1, 0.49534,-99) , 
5, 0.681338, 0, 0, 0.496848,-99) , 
5, 0.168058, 1, 0, 0.500483,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0035081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213724, 0, 1, 0.500766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489662,-99) , 
5, 0.617218, 1, 0, 0.500352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48271,-99) , 
4, 0.997619, 0, 0, 0.499663,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.00574332);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498463,-99) , 
4, 0.998572, 1, 0, 0.499207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489657,-99) , 
0, 0.490471, 0, 0, 0.498809,-99) , 
2, -0.35714, 1, 0, 0.499327,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0054167);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.372482, 0, 1, 0.501634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487657,-99) , 
4, 0.999909, 1, 0, 0.498509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489116,-99) , 
4, 0.999048, 0, 0, 0.495737,-99) , 
5, 0.441105, 1, 0, 0.500948,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.00536983);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518099,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502584,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.498446,-99) , 
0, 0.499995, 1, 0, 0.501266,-99) , 
2, 0.356778, 0, 0, 0.501721,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00983626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.461837, 0, 1, 0.508281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498642,-99) , 
0, 0.505437, 1, 0, 0.506172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497096,-99) , 
0, 0.495777, 0, 0, 0.506255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496273,-99) , 
3, 9.31837, 0, 0, 0.497018,-99) , 
4, 0.998572, 1, 0, 0.497612,-99) , 
0, 0.5019, 0, 0, 0.499172,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.00816211);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488737,-99) , 
3, 5.07192, 1, 0, 0.510422,-99) , 
NN(
0, 
0, 
-1, 0.023772, 0, 1, 0.502005,-99) , 
2, -0.21429, 1, 0, 0.502548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489626,-99) , 
3, 1.6492, 0, 0, 0.497891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479065,-99) , 
5, -0.708974, 1, 0, 0.491934,-99) , 
5, -0.640526, 0, 0, 0.501373,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.00434457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997324, 1, 1, 0.511042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499686,-99) , 
0, 0.500947, 1, 0, 0.507785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499749,-99) , 
0, 0.504757, 0, 0, 0.500399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483025,-99) , 
4, 0.99941, 0, 0, 0.499681,-99) , 
4, 0.999048, 1, 0, 0.500479,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.00773702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48342,-99) , 
5, 0.621226, 1, 0, 0.501228,-99) , 
4, 0.997143, 1, 0, 0.501996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492039,-99) , 
5, 0.0782418, 1, 0, 0.500236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485903,-99) , 
2, -0.214179, 0, 0, 0.497855,-99) , 
3, 4.75084, 1, 0, 0.501196,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00475032);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498688,-99) , 
4, 0.997619, 1, 0, 0.499088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48627,-99) , 
0, 0.490472, 0, 0, 0.498553,-99) , 
2, -0.356999, 1, 0, 0.498887,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00619102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495776,-99) , 
0, 0.499995, 1, 0, 0.503086,-99) , 
NN(
0, 
0, 
-1, -0.214093, 0, -1, 0.498567,-99) , 
5, 0.0780213, 0, 0, 0.500095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488656,-99) , 
1, -0.02375, 0, 0, 0.499771,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00456169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486941,-99) , 
4, 0.998776, 0, 0, 0.500423,-99) , 
4, 0.997143, 1, 0, 0.500756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0.490789, 1, -1, 0.490718,-99) , 
4, 0.999524, 1, 0, 0.493444,-99) , 
0, 0.492376, 0, 0, 0.500058,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00582951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499344,-99) , 
6, 0.00793453, 0, 0, 0.501171,-99) , 
6, 0.0238036, 0, 0, 0.501697,-99) , 
NN(
0, 
0, 
-1, -0.819449, 0, -1, 0.493096,-99) , 
5, -0.729401, 0, 0, 0.501127,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.00569337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.514931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499823,-99) , 
5, -0.760406, 1, 0, 0.500653,-99) , 
6, 0.023783, 0, 0, 0.501605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511027,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.494478,-99) , 
5, 0.677037, 0, 0, 0.496688,-99) , 
5, 0.257782, 1, 0, 0.500551,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00704374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492122,-99) , 
0, 0.502308, 1, 0, 0.500911,-99) , 
0, 0.504757, 0, 0, 0.501597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488964,-99) , 
0, 0.502852, 1, 0, 0.499005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479635,-99) , 
0, 0.493328, 0, 0, 0.496171,-99) , 
5, 0.260984, 1, 0, 0.500444,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.00695057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498188,-99) , 
3, 9.32771, 0, 0, 0.498989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488206,-99) , 
4, 0.99873, 0, 0, 0.498466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477138,-99) , 
4, 0.996667, 0, 0, 0.497864,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0056704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489485,-99) , 
3, 9.36329, 1, 0, 0.501378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475672,-99) , 
1, -0.0243381, 0, 0, 0.500674,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.00552447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.511053, 0, 1, 0.50475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489969,-99) , 
4, 0.998866, 0, 0, 0.500108,-99) , 
5, -0.459583, 1, 0, 0.501237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47926,-99) , 
4, 0.997619, 0, 0, 0.500385,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00522897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499345,-99) , 
4, 0.999048, 1, 0, 0.500585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490987,-99) , 
3, 8.9993, 1, 0, 0.500146,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.489992,-99) , 
5, -0.730453, 0, 0, 0.499473,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00681984);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493349,-99) , 
2, 0.335444, 0, 0, 0.510593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496814,-99) , 
5, 0.261054, 1, 0, 0.500786,-99) , 
2, 0.213083, 0, 0, 0.501358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48727,-99) , 
3, 9.37264, 1, 0, 0.500792,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00371093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.132679, 0, 1, 0.500749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481895,-99) , 
4, 0.999522, 0, 0, 0.492623,-99) , 
2, 0.214312, 1, 0, 0.500234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48014,-99) , 
1, -0.0241238, 0, 0, 0.499681,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.00660847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213743, 1, 1, 0.500983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494023,-99) , 
6, 0.023809, 0, 0, 0.496264,-99) , 
5, -0.369439, 0, 0, 0.499527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476623,-99) , 
0, 0.489519, 0, 0, 0.498948,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00755074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496902,-99) , 
0, 0.49809, 0, 0, 0.503061,-99) , 
2, -0.0718279, 1, 0, 0.506546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509686,-99) , 
NN(
0, 
0, 
-1, 0.0711433, 1, -1, 0.497244,-99) , 
0, 0.490471, 1, 0, 0.497778,-99) , 
5, 0.441105, 0, 0, 0.498811,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.00407088);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499721,-99) , 
4, 0.998571, 1, 0, 0.500662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488752,-99) , 
3, 9.23456, 1, 0, 0.500165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482435,-99) , 
1, -0.0241063, 0, 0, 0.499683,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00758214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491918,-99) , 
0, 0.495233, 0, 0, 0.504287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497752,-99) , 
5, -0.587909, 1, 0, 0.498796,-99) , 
5, 0.441181, 0, 0, 0.499455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479745,-99) , 
1, 0.0242247, 1, 0, 0.49893,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.00723711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0715041, 0, 1, 0.502744,-99) , 
NN(
0, 
0, 
-1, 2.63598, 0, -1, 0.494041,-99) , 
5, -0.640897, 0, 0, 0.501768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496902,-99) , 
0, 0.491696, 1, 0, 0.498444,-99) , 
NN(
0, 
0, 
-1, 0.49351, 0, -1, 0.491727,-99) , 
5, 0.347726, 1, 0, 0.497255,-99) , 
0, 0.497138, 0, 0, 0.499926,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0111555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484823,-99) , 
0, 0.493328, 0, 0, 0.502743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49679,-99) , 
0, 0.491424, 1, 0, 0.497934,-99) , 
3, 1.89336, 1, 0, 0.500091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486497,-99) , 
3, 9.37599, 1, 0, 0.499542,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00539208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498561,-99) , 
4, 0.999547, 1, 0, 0.499421,-99) , 
3, 9.22081, 0, 0, 0.499829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48884,-99) , 
4, 0.998095, 0, 0, 0.499294,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.00575855);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479889,-99) , 
3, 5.18069, 1, 0, 0.493344,-99) , 
2, 0.21439, 1, 0, 0.501702,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00588823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0752796, 1, 1, 0.506156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495105,-99) , 
4, 0.999841, 0, 0, 0.499491,-99) , 
0, 0.5019, 0, 0, 0.500689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485366,-99) , 
4, 0.996667, 0, 0, 0.50025,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0065566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498684,-99) , 
0, 0.504757, 0, 0, 0.499283,-99) , 
3, 8.75085, 0, 0, 0.50007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489732,-99) , 
5, 0.348232, 0, 0, 0.497377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48342,-99) , 
0, 0.499995, 1, 0, 0.492572,-99) , 
4, 0.999048, 0, 0, 0.499346,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00479223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0158861, 1, 1, 0.501456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481034,-99) , 
1, -0.0253758, 0, 0, 0.500912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480396,-99) , 
1, 0.0244434, 1, 0, 0.500362,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.004138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99864, 1, 1, 0.501091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481067,-99) , 
4, 0.997619, 0, 0, 0.500475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488719,-99) , 
5, 0.621209, 1, 0, 0.499953,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00528031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0108389, 0, 1, 0.513291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499056,-99) , 
2, 0.133219, 0, 0, 0.499869,-99) , 
2, 0.214816, 0, 0, 0.500641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490493,-99) , 
3, 9.19619, 1, 0, 0.500205,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0064051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493537,-99) , 
3, 4.56692, 1, 0, 0.503535,-99) , 
NN(
0, 
0, 
-1, 0.506098, 1, -1, 0.499018,-99) , 
0, 0.497002, 1, 0, 0.500678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487345,-99) , 
0, 0.490471, 0, 0, 0.500103,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0068842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497309,-99) , 
3, 1.46042, 1, 0, 0.510829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498497,-99) , 
0, 0.499995, 0, 0, 0.500333,-99) , 
4, 0.998572, 1, 0, 0.501057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490376,-99) , 
3, 9.37264, 1, 0, 0.500625,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.00599243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.89377, 1, 1, 0.510503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499058,-99) , 
2, -0.184184, 1, 0, 0.499509,-99) , 
4, 0.999524, 1, 0, 0.501224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491027,-99) , 
3, 9.37657, 1, 0, 0.500815,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.00880614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.57989, 0, 1, 0.503682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495608,-99) , 
5, 0.34675, 0, 0, 0.498138,-99) , 
4, 0.999887, 0, 0, 0.50207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485485,-99) , 
4, 0.997619, 0, 0, 0.501421,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00633565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237836, 0, 1, 0.501916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492417,-99) , 
4, 0.999048, 0, 0, 0.501375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50616,-99) , 
NN(
0, 
0, 
-1, 4.63569, 1, -1, 0.493282,-99) , 
2, -0.0718279, 1, 0, 0.495865,-99) , 
5, 0.260984, 1, 0, 0.500202,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.00402295);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214144, 1, 1, 0.501744,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.494323,-99) , 
4, 0.998571, 0, 0, 0.50124,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00647562);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497341,-99) , 
5, -0.279451, 1, 0, 0.49943,-99) , 
2, 0.350411, 0, 0, 0.499794,-99) , 
2, -0.357035, 1, 0, 0.500183,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00740034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490223,-99) , 
3, 9.00323, 1, 0, 0.50247,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.491683,-99) , 
5, -0.729781, 0, 0, 0.501753,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00615738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0183923, 0, 1, 0.501722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458635,-99) , 
1, 0.0257493, 1, 0, 0.500612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48526,-99) , 
1, -0.0240946, 0, 0, 0.500182,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.00948834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493038,-99) , 
4, 0.997755, 0, 0, 0.505228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496829,-99) , 
3, 8.53639, 0, 0, 0.497589,-99) , 
4, 0.999048, 1, 0, 0.498339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480899,-99) , 
1, 0.0234349, 1, 0, 0.497843,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00492059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498812,-99) , 
0, 0.495233, 1, 0, 0.499801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485974,-99) , 
4, 0.998413, 0, 0, 0.499346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482281,-99) , 
4, 0.996667, 0, 0, 0.498862,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.006038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497081,-99) , 
5, 0.0802932, 0, 0, 0.511921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499432,-99) , 
6, 0.023809, 0, 0, 0.500213,-99) , 
4, 0.999048, 1, 0, 0.501372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48529,-99) , 
3, 9.37525, 1, 0, 0.500713,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.00721911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0173658, 0, 1, 0.516261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498375,-99) , 
2, -0.274731, 1, 0, 0.499216,-99) , 
2, 0.214826, 0, 0, 0.500207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485833,-99) , 
3, 9.23277, 1, 0, 0.4996,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.00792455);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498105,-99) , 
4, 0.999932, 0, 0, 0.50687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499129,-99) , 
4, 0.999524, 1, 0, 0.500074,-99) , 
3, 4.71854, 0, 0, 0.501436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475992,-99) , 
2, -0.0713757, 1, 0, 0.490043,-99) , 
4, 0.998571, 0, 0, 0.500669,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.00639658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497997,-99) , 
0, 0.499042, 1, 0, 0.500559,-99) , 
3, 8.54351, 0, 0, 0.501067,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.493365,-99) , 
4, 0.999524, 0, 0, 0.499901,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00838286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.503926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491096,-99) , 
2, -0.0714402, 0, 0, 0.497905,-99) , 
3, 4.73112, 1, 0, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488564,-99) , 
1, -0.023754, 0, 0, 0.502359,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.00528455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.018238, 0, 1, 0.5015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469002,-99) , 
1, -0.025534, 0, 0, 0.500655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483913,-99) , 
1, 0.0243022, 1, 0, 0.5002,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.00656496);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487718,-99) , 
3, 0.982549, 0, 0, 0.506848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495093,-99) , 
3, 4.65411, 1, 0, 0.50448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489342,-99) , 
4, 0.999048, 0, 0, 0.499078,-99) , 
5, 0.68559, 0, 0, 0.499519,-99) , 
5, -0.549318, 1, 0, 0.500342,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.00746644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214621, 1, 1, 0.503335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496695,-99) , 
2, 0.0712085, 0, 0, 0.498136,-99) , 
5, 0.0809996, 0, 0, 0.499884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488766,-99) , 
1, 0.023467, 1, 0, 0.499568,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.00467324);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493831,-99) , 
3, 1.82142, 1, 0, 0.509471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499496,-99) , 
6, 0.023809, 0, 0, 0.500132,-99) , 
4, 0.998571, 1, 0, 0.500781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491956,-99) , 
3, 9.00191, 1, 0, 0.500376,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.00761628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498386,-99) , 
2, 0.051109, 0, 0, 0.499339,-99) , 
3, 8.2301, 0, 0, 0.50028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492703,-99) , 
0, 0.499949, 0, 0, 0.495881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48213,-99) , 
0, 0.502852, 1, 0, 0.493411,-99) , 
4, 0.999524, 0, 0, 0.499234,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00473212);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.42244, 1, 1, 0.501821,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.490026,-99) , 
5, -0.730461, 0, 0, 0.501032,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00795235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498672,-99) , 
4, 0.999523, 0, 0, 0.510168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489182,-99) , 
0, 0.492376, 0, 0, 0.500915,-99) , 
2, -0.153031, 1, 0, 0.501988,-99) , 
NN(
0, 
0, 
-1, -0.552952, 0, -1, 0.494423,-99) , 
2, 0.0714574, 1, 0, 0.50063,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.00624705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.676965, 0, 1, 0.50431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493604,-99) , 
3, 3.77614, 1, 0, 0.498755,-99) , 
5, 0.441077, 0, 0, 0.499412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -1, 0.498529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468137,-99) , 
3, 1.69314, 0, 0, 0.487289,-99) , 
3, 4.19591, 0, 0, 0.490937,-99) , 
0, 0.503804, 1, 0, 0.49866,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.00804233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.64873, 1, 1, 0.510582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489703,-99) , 
5, -0.106061, 0, 0, 0.497151,-99) , 
3, 4.52907, 1, 0, 0.505048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498252,-99) , 
2, 0.302742, 0, 0, 0.498702,-99) , 
NN(
0, 
0, 
-1, 0.00338262, 0, -1, 0.488688,-99) , 
0, 0.492376, 0, 0, 0.49784,-99) , 
2, -0.0713757, 1, 0, 0.49912,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0033104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49943,-99) , 
2, 0.214009, 0, 0, 0.499781,-99) , 
4, 0.996667, 1, 0, 0.500211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489615,-99) , 
3, 9.19619, 1, 0, 0.499753,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00610773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493328, 1, 1, 0.502247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488566,-99) , 
4, 0.998753, 0, 0, 0.501713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485985,-99) , 
4, 0.997619, 0, 0, 0.501094,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00495352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49921,-99) , 
0, 0.492376, 1, 0, 0.499933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482658,-99) , 
5, 0.621209, 1, 0, 0.499269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480595,-99) , 
4, 0.996667, 0, 0, 0.498735,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.00416008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493831,-99) , 
5, 0.621209, 1, 0, 0.500979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490074,-99) , 
1, 0.0240692, 1, 0, 0.500669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484904,-99) , 
4, 0.996667, 0, 0, 0.500222,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.00641339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499043,-99) , 
3, 3.00394, 0, 0, 0.500593,-99) , 
4, 0.998095, 1, 0, 0.501457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48622,-99) , 
3, 8.77463, 1, 0, 0.500705,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0109824);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497197,-99) , 
0, 0.502852, 1, 0, 0.506253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49639,-99) , 
5, -0.137696, 0, 0, 0.500801,-99) , 
5, -0.459298, 1, 0, 0.502074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480102,-99) , 
2, -0.0786297, 1, 0, 0.487182,-99) , 
2, 0.0709649, 0, 0, 0.492244,-99) , 
0, 0.493328, 0, 0, 0.500751,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0096126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499096,-99) , 
5, -0.785132, 1, 0, 0.50031,-99) , 
6, 0.0237926, 0, 0, 0.502026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494304,-99) , 
2, 0.112335, 0, 0, 0.496127,-99) , 
2, -0.214156, 1, 0, 0.497311,-99) , 
5, -0.0991098, 1, 0, 0.499848,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.00973989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498118,-99) , 
4, 0.999984, 0, 0, 0.502974,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.491548,-99) , 
4, 0.999666, 0, 0, 0.501754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490038,-99) , 
0, 0.504439, 1, 0, 0.500867,-99) , 
NN(
0, 
0, 
-1, 0.0716766, 1, -1, 0.494617,-99) , 
0, 0.49809, 0, 0, 0.497688,-99) , 
5, -0.101832, 1, 0, 0.499863,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0065645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491449,-99) , 
2, 0.214312, 1, 0, 0.501154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475775,-99) , 
1, -0.0253251, 0, 0, 0.500481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480098,-99) , 
1, 0.02449, 1, 0, 0.499934,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00831859);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.023809, 0, 1, 0.502063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494782,-99) , 
3, 0.835708, 1, 0, 0.499093,-99) , 
NN(
0, 
0, 
-1, 0.387916, 0, -1, 0.490272,-99) , 
3, 4.73389, 1, 0, 0.497355,-99) , 
5, 0.0809843, 1, 0, 0.500512,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.00592233);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499834,-99) , 
6, 0.023804, 0, 0, 0.501475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496186,-99) , 
5, 0.672758, 0, 0, 0.49693,-99) , 
5, -0.0117382, 1, 0, 0.499698,-99) , 
2, -0.356976, 1, 0, 0.500086,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0055922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999905, 1, 1, 0.507944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487707,-99) , 
3, 9.38448, 1, 0, 0.499962,-99) , 
5, -0.420902, 1, 0, 0.501351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49651,-99) , 
0, 0.499043, 1, 0, 0.501276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484539,-99) , 
5, -0.70824, 1, 0, 0.496021,-99) , 
5, -0.63962, 0, 0, 0.500762,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.00329183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492178,-99) , 
4, 0.998889, 0, 0, 0.499866,-99) , 
1, -0.023754, 1, 0, 0.500289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482555,-99) , 
4, 0.996667, 0, 0, 0.499786,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0045379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0727864, 0, 1, 0.50218,-99) , 
NN(
0, 
0, 
-1, -0.460628, 0, -1, 0.498489,-99) , 
0, 0.497138, 1, 0, 0.499988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485723,-99) , 
4, 0.997619, 0, 0, 0.499432,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.00734109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498924,-99) , 
3, 1.89827, 1, 0, 0.505915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498147,-99) , 
2, 0.302791, 0, 0, 0.498936,-99) , 
2, -0.0711234, 1, 0, 0.500121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489977,-99) , 
3, 8.99531, 1, 0, 0.499658,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.00482443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499018,-99) , 
0, 0.502852, 0, 0, 0.499961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487432,-99) , 
5, 0.621271, 1, 0, 0.499482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48634,-99) , 
4, 0.996667, 0, 0, 0.49911,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.00655234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491961,-99) , 
3, 9.37264, 1, 0, 0.502372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48801,-99) , 
1, 0.0238948, 1, 0, 0.501973,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.00418604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0181755, 0, 1, 0.501027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470758,-99) , 
1, -0.0254461, 0, 0, 0.500224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486564,-99) , 
1, 0.0243659, 1, 0, 0.499853,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.00335869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497378,-99) , 
4, 0.999864, 0, 0, 0.499599,-99) , 
0, 0.505709, 0, 0, 0.499953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48695,-99) , 
4, 0.997143, 0, 0, 0.499517,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.00578723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498915,-99) , 
6, 0.0237837, 0, 0, 0.499474,-99) , 
0, 0.504757, 0, 0, 0.500007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510811,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.492623,-99) , 
5, 0.685556, 0, 0, 0.495567,-99) , 
5, 0.351045, 1, 0, 0.499288,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.00480307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.501575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487905,-99) , 
3, 9.37525, 1, 0, 0.501019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483812,-99) , 
1, 0.0237851, 1, 0, 0.500536,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00419409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499512,-99) , 
6, 0.023772, 0, 0, 0.500205,-99) , 
NN(
0, 
0, 
-1, -0.709069, 1, -1, 0.493843,-99) , 
5, -0.640619, 0, 0, 0.499477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488532,-99) , 
4, 0.997619, 0, 0, 0.499049,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00393979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0107114, 0, 1, 0.508499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499269,-99) , 
2, -0.275046, 1, 0, 0.499857,-99) , 
2, 0.214597, 0, 0, 0.500343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492162,-99) , 
3, 8.79252, 1, 0, 0.499943,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00498756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485094,-99) , 
5, 0.617159, 1, 0, 0.500552,-99) , 
4, 0.997143, 1, 0, 0.500931,-99) , 
NN(
0, 
0, 
-1, 0.999522, 0, -1, 0.49061,-99) , 
2, -0.214251, 0, 0, 0.500293,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.00397913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.31837, 0, 1, 0.50137,-99) , 
NN(
0, 
0, 
-1, 0.350964, 0, -1, 0.489454,-99) , 
4, 0.998571, 0, 0, 0.500567,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.00554747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497911,-99) , 
3, 4.52062, 0, 0, 0.498797,-99) , 
4, 0.997143, 1, 0, 0.499197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491124,-99) , 
3, 9.36329, 1, 0, 0.498871,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0058625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.018197, 0, 1, 0.501903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473277,-99) , 
1, 0.0254771, 1, 0, 0.501163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483397,-99) , 
1, -0.0243421, 0, 0, 0.500675,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.00531798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45779, 1, 1, 0.513388,-99) , 
NN(
0, 
0, 
-1, 6.72193, 1, -1, 0.498441,-99) , 
4, 0.998571, 1, 0, 0.499477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490674,-99) , 
3, 9.36329, 1, 0, 0.499122,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_2_4_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_2_4_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_2_4_noNsigma *ReadBDT_maker_LHC19c2a_2_4_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_2_4_noNsigma(theInpVar);
  }
}
