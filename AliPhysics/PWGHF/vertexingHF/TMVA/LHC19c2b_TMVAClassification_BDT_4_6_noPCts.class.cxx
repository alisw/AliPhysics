#include "LHC19c2b_TMVAClassification_BDT_4_6_noPCts.class.h"

double ReadBDT_LHC19c2b_4_6_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_4_6_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.366959182764097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.707094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28981,-99) , 
4, 0.999524, 0, 0, 0.673578,-99) , 
NN(
NN(
0, 
0, 
-1, 0.430496, 1, 1, 0.629746,-99) , 
NN(
0, 
0, 
-1, -1.41492, 1, -1, 0.344218,-99) , 
9, 3.80033, 0, 0, 0.37645,-99) , 
6, -951.286, 0, 0, 0.500871,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.257341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.668479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329709,-99) , 
4, 0.999524, 0, 0, 0.641161,-99) , 
NN(
0, 
0, 
-1, 1.57139, 1, -1, 0.404738,-99) , 
6, -951.286, 0, 0, 0.503483,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.207672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.637225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36205,-99) , 
4, 0.999524, 0, 0, 0.614751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.185186,-99) , 
7, -1.69385, 0, 0, 0.472301,-99) , 
NN(
0, 
0, 
-1, 2.25167, 1, -1, 0.188635,-99) , 
7, 1.57137, 1, 0, 0.439007,-99) , 
6, -951.286, 0, 0, 0.511731,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.199227);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434067,-99) , 
4, 0.999524, 0, 0, 0.617273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381434,-99) , 
6, -1.57142, 0, 0, 0.596526,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.421493,-99) , 
6, -951.286, 0, 0, 0.493888,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.184266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303542,-99) , 
4, 0.999524, 0, 0, 0.538227,-99) , 
NN(
0, 
0, 
-1, -0.195297, 1, -1, 0.268852,-99) , 
7, -1.84351, 0, 0, 0.520417,-99) , 
NN(
0, 
0, 
-1, 2.23809, 1, -1, 0.236276,-99) , 
7, 1.8571, 1, 0, 0.50199,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.149592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469779,-99) , 
4, 0.999524, 0, 0, 0.5804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383693,-99) , 
6, -1.57155, 0, 0, 0.563164,-99) , 
NN(
0, 
0, 
-1, 1.85714, 1, -1, 0.435128,-99) , 
6, -951.286, 0, 0, 0.48776,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.127221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266174,-99) , 
4, 0.999048, 0, 0, 0.520907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.248419,-99) , 
7, -2.07483, 0, 0, 0.508697,-99) , 
NN(
0, 
0, 
-1, 2.29249, 1, -1, 0.255733,-99) , 
7, 1.8571, 1, 0, 0.492793,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.0836247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.270817,-99) , 
4, 0.999048, 0, 0, 0.503045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.208933,-99) , 
7, -2.2653, 0, 0, 0.493967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215206,-99) , 
7, 2.1428, 1, 0, 0.482846,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.218103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414981,-99) , 
5, 0.00453499, 0, 0, 0.495324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251141,-99) , 
5, 0.0238087, 1, 0, 0.485178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.221534,-99) , 
7, 2.14278, 1, 0, 0.474657,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.0701902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274852,-99) , 
5, 0.0238062, 1, 0, 0.499263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.210074,-99) , 
7, -2.26531, 0, 0, 0.490485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.238484,-99) , 
7, 2.14274, 1, 0, 0.480699,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.194401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484531,-99) , 
2, -0.0706912, 0, 0, 0.543097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378126,-99) , 
6, -1.57141, 0, 0, 0.529012,-99) , 
NN(
NN(
0, 
0, 
-1, -3.81698, 1, 1, 0.56893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351059,-99) , 
9, 3.71473, 0, 0, 0.390045,-99) , 
8, -2.73684, 1, 0, 0.429865,-99) , 
6, -951.286, 0, 0, 0.470822,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.128193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278776,-99) , 
7, -2.14285, 0, 0, 0.516206,-99) , 
NN(
0, 
0, 
-1, -0.272046, 1, -1, 0.382367,-99) , 
4, 0.999955, 0, 0, 0.481467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254891,-99) , 
4, 0.999048, 0, 0, 0.471118,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0964475);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275413,-99) , 
5, 0.0237841, 1, 0, 0.498079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.203684,-99) , 
9, -0.734089, 1, 0, 0.347872,-99) , 
7, -1.47619, 0, 0, 0.481314,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.325843,-99) , 
7, 1.57138, 1, 0, 0.467059,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0905144);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277872,-99) , 
7, -2.14282, 0, 0, 0.493749,-99) , 
NN(
0, 
0, 
-1, -0.108223, 1, -1, 0.39046,-99) , 
4, 0.999955, 0, 0, 0.4671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261574,-99) , 
4, 0.999048, 0, 0, 0.457769,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.179343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42053,-99) , 
5, 0.00566814, 0, 0, 0.468435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27564,-99) , 
5, 0.0238087, 1, 0, 0.46041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255305,-99) , 
7, 2.1428, 1, 0, 0.45263,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.151892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450334,-99) , 
4, 0.999864, 0, 0, 0.520348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355272,-99) , 
4, 0.999048, 0, 0, 0.509358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462209,-99) , 
0, 0.500948, 1, 0, 0.512274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327956,-99) , 
9, 3.34391, 0, 0, 0.375446,-99) , 
6, -951.286, 0, 0, 0.42468,-99) , 
9, 0.327366, 1, 0, 0.462603,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0879588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023792, 1, -1, 0.479557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.202477,-99) , 
9, -0.97548, 1, 0, 0.345204,-99) , 
7, -1.53063, 0, 0, 0.466713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.269463,-99) , 
7, 2.14277, 1, 0, 0.459541,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0839096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297064,-99) , 
5, 0.0237435, 1, 0, 0.497734,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.370252,-99) , 
7, 1.47616, 1, 0, 0.483226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.205168,-99) , 
9, -0.97548, 1, 0, 0.345802,-99) , 
7, -1.57143, 0, 0, 0.471271,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0809357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.12925, 1, -1, 0.480713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.217624,-99) , 
9, -0.874883, 1, 0, 0.349796,-99) , 
7, -1.57142, 0, 0, 0.469316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295936,-99) , 
4, 0.999048, 0, 0, 0.461706,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.057314);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314356,-99) , 
5, 0.0238062, 1, 0, 0.492949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296301,-99) , 
7, 2.1292, 1, 0, 0.485037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.217734,-99) , 
9, -0.871234, 1, 0, 0.346427,-99) , 
7, -1.57142, 0, 0, 0.473078,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0842732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430406,-99) , 
4, 0.999955, 0, 0, 0.487896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31103,-99) , 
4, 0.999048, 0, 0, 0.479945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.226117,-99) , 
9, -0.871234, 1, 0, 0.347796,-99) , 
7, -1.57141, 0, 0, 0.468685,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0744254);
  fForest.push_back( 
NN(
0, 
0, 
-1, -1.57142, 0, -1, 0.462856,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0544545);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14284, 0, -1, 0.4728,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0525405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317179,-99) , 
5, 0.0237841, 1, 0, 0.49473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281256,-99) , 
4, 0.998572, 0, 0, 0.488476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.236885,-99) , 
9, -0.770638, 1, 0, 0.359954,-99) , 
7, -1.57142, 0, 0, 0.477616,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0632787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238087, 1, -1, 0.492028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287686,-99) , 
9, -1.16252, 1, 0, 0.391228,-99) , 
7, -1.2857, 0, 0, 0.478563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301032,-99) , 
7, 2.14285, 1, 0, 0.472362,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.041399);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14284, 0, -1, 0.479312,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0506783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352603,-99) , 
5, 0.023792, 1, 0, 0.499965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274493,-99) , 
7, 2.30612, 1, 0, 0.493849,-99) , 
NN(
0, 
0, 
-1, -2.23809, 0, -1, 0.335784,-99) , 
7, -1.85712, 0, 0, 0.485512,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0725732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360401,-99) , 
5, 0.0238087, 1, 0, 0.502226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299895,-99) , 
7, 2.18367, 1, 0, 0.494824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423882,-99) , 
8, -3.88748, 1, 0, 0.502218,-99) , 
NN(
0, 
0, 
-1, -1.93876, 0, -1, 0.286556,-99) , 
9, -0.756155, 1, 0, 0.389513,-99) , 
7, -1.2857, 0, 0, 0.481362,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0542459);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.472904,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0374939);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14284, 0, -1, 0.481262,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.130966);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.579944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370755,-99) , 
3, 9.1301, 1, 0, 0.513053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339986,-99) , 
6, -951.286, 0, 0, 0.408902,-99) , 
8, -1.17373, 1, 0, 0.476474,-99) , 
8, 2.97512, 0, 0, 0.487944,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0691426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434813,-99) , 
4, 0.999932, 0, 0, 0.493494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3048,-99) , 
4, 0.998572, 0, 0, 0.487977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263568,-99) , 
9, -0.871234, 1, 0, 0.373579,-99) , 
7, -1.57143, 0, 0, 0.478588,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0525496);
  fForest.push_back( 
NN(
0, 
0, 
-1, 1.28566, 1, -1, 0.473749,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0511136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346743,-99) , 
7, 2.18367, 1, 0, 0.49786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319428,-99) , 
9, -0.802372, 1, 0, 0.409665,-99) , 
7, -1.2857, 0, 0, 0.486679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303228,-99) , 
4, 0.998572, 0, 0, 0.481479,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.071481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458185,-99) , 
9, 0.705192, 1, 0, 0.485877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315753,-99) , 
4, 0.998572, 0, 0, 0.480921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307215,-99) , 
7, -2.14285, 0, 0, 0.475597,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0942409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.560985,-99) , 
NN(
NN(
0, 
0, 
-1, 9.19077, 1, -1, 0.492095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361421,-99) , 
6, -951.286, 0, 0, 0.418983,-99) , 
8, -1.3174, 1, 0, 0.465009,-99) , 
8, 2.72239, 0, 0, 0.47608,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.111507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714275, 0, 1, 0.602205,-99) , 
NN(
0, 
0, 
-1, 0.00226697, 0, -1, 0.460747,-99) , 
5, 0.00793456, 0, 0, 0.487923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339028,-99) , 
5, 0.0238062, 1, 0, 0.48225,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0698288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382775,-99) , 
5, 0.0237842, 1, 0, 0.511326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392967,-99) , 
6, -951.286, 0, 0, 0.434091,-99) , 
7, 1.2585, 1, 0, 0.499742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294871,-99) , 
9, -0.802372, 1, 0, 0.400444,-99) , 
7, -1.57142, 0, 0, 0.491766,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0992105);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.561271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382198,-99) , 
3, 9.13737, 1, 0, 0.508574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38564,-99) , 
6, -951.286, 0, 0, 0.433108,-99) , 
8, -1.47255, 1, 0, 0.478093,-99) , 
8, 3.20265, 0, 0, 0.48698,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0418332);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14284, 0, -1, 0.479096,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0331371);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.483438,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0577218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389376,-99) , 
5, 0.023792, 1, 0, 0.506245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350483,-99) , 
8, -1.76266, 1, 0, 0.439147,-99) , 
7, -0.999989, 0, 0, 0.493935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361935,-99) , 
4, 0.999048, 0, 0, 0.488458,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0416313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442727,-99) , 
0, 0.5019, 1, 0, 0.491253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344743,-99) , 
7, 2.2653, 1, 0, 0.487276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338883,-99) , 
7, -2.14284, 0, 0, 0.482898,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.040221);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.4799,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0466734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451744,-99) , 
4, 0.999932, 0, 0, 0.494683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341723,-99) , 
4, 0.998572, 0, 0, 0.490461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326483,-99) , 
7, -2.14284, 0, 0, 0.48582,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.125159);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439167,-99) , 
5, 0.0034012, 0, 0, 0.495935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37737,-99) , 
5, 0.0238087, 1, 0, 0.491364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548994,-99) , 
NN(
0, 
0, 
-1, -2.02042, 0, -1, 0.37139,-99) , 
8, -3.90487, 1, 0, 0.420758,-99) , 
7, -1.28573, 0, 0, 0.482709,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0671175);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.543868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39782,-99) , 
3, 9.28556, 1, 0, 0.50243,-99) , 
NN(
0, 
0, 
-1, -1, 0, -1, 0.438604,-99) , 
8, -1.48306, 1, 0, 0.477323,-99) , 
8, 2.43264, 0, 0, 0.485559,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0398143);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37202,-99) , 
7, 2.23802, 1, 0, 0.496684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380279,-99) , 
9, -0.802372, 1, 0, 0.44394,-99) , 
7, -1.00001, 0, 0, 0.487045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355145,-99) , 
4, 0.998572, 0, 0, 0.48344,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0510002);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.16327, 1, -1, 0.484294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520055,-99) , 
NN(
0, 
0, 
-1, -0.872375, 1, -1, 0.364549,-99) , 
6, -951.286, 0, 0, 0.419312,-99) , 
7, -1.2857, 0, 0, 0.476267,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0482852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442845,-99) , 
7, -1.57143, 0, 0, 0.501292,-99) , 
NN(
0, 
0, 
-1, 0.504122, 1, -1, 0.452385,-99) , 
0, 0.500948, 1, 0, 0.489236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384327,-99) , 
2, -0.214589, 0, 0, 0.484117,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0680691);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.537833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473242,-99) , 
0, 0.500948, 1, 0, 0.503234,-99) , 
NN(
0, 
0, 
-1, -1.00003, 0, -1, 0.453871,-99) , 
9, -0.0327673, 1, 0, 0.474672,-99) , 
8, 3.12661, 0, 0, 0.481605,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0359488);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14284, 0, -1, 0.482033,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.083185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471559,-99) , 
4, 0.999996, 0, 0, 0.503496,-99) , 
NN(
0, 
0, 
-1, 0.716995, 1, -1, 0.455147,-99) , 
4, 0.999955, 0, 0, 0.491284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388698,-99) , 
4, 0.999048, 0, 0, 0.487077,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0851515);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475358,-99) , 
5, 0.00679606, 0, 0, 0.500188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391041,-99) , 
5, 0.0237868, 1, 0, 0.495942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365219,-99) , 
4, 0.998572, 0, 0, 0.492395,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0344054);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422048,-99) , 
5, 0.023792, 1, 0, 0.505119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391722,-99) , 
4, 0.998572, 0, 0, 0.502013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368769,-99) , 
7, -2.14285, 0, 0, 0.498298,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0604452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426661,-99) , 
5, 0.0238062, 1, 0, 0.511803,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.45791,-99) , 
7, 1.16324, 1, 0, 0.5024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301178,-99) , 
9, -0.770638, 1, 0, 0.388377,-99) , 
6, -951.286, 0, 0, 0.437115,-99) , 
7, -1.28571, 0, 0, 0.494401,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0454154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428269,-99) , 
3, 9.25868, 1, 0, 0.501959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395223,-99) , 
7, 2.23801, 1, 0, 0.498454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431876,-99) , 
8, -3.40621, 1, 0, 0.490645,-99) , 
NN(
0, 
0, 
-1, 1.43619, 0, -1, 0.384769,-99) , 
8, -1.37678, 1, 0, 0.453172,-99) , 
7, -1.00002, 0, 0, 0.4902,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.04326);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484278,-99) , 
2, -0.0509943, 0, 0, 0.523591,-99) , 
NN(
0, 
0, 
-1, -0.811366, 1, -1, 0.483898,-99) , 
8, 0.990198, 0, 0, 0.491309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419019,-99) , 
2, -0.214244, 0, 0, 0.487732,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0212414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428314,-99) , 
5, 0.0238087, 1, 0, 0.498178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410266,-99) , 
3, 9.41001, 1, 0, 0.494403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378909,-99) , 
7, -2.14284, 0, 0, 0.491192,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0432917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467381,-99) , 
4, 0.999909, 0, 0, 0.499728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422729,-99) , 
4, 0.999048, 0, 0, 0.496513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322012,-99) , 
9, -0.872375, 1, 0, 0.402387,-99) , 
6, -951.286, 0, 0, 0.442954,-99) , 
7, -1.28572, 0, 0, 0.490027,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.038888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23804, 1, -1, 0.489985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345663,-99) , 
9, -0.80329, 1, 0, 0.411295,-99) , 
6, -951.286, 0, 0, 0.448177,-99) , 
7, -1, 0, 0, 0.482432,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0398649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426323,-99) , 
5, 0.0238087, 1, 0, 0.500232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399814,-99) , 
7, 2.23804, 1, 0, 0.496976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443422,-99) , 
8, -3.71799, 1, 0, 0.489898,-99) , 
NN(
0, 
0, 
-1, 0.301239, 0, -1, 0.393024,-99) , 
8, -1.88064, 1, 0, 0.450212,-99) , 
7, -1.00001, 0, 0, 0.48855,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0350332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453029,-99) , 
0, 0.503805, 1, 0, 0.496582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432577,-99) , 
8, -3.86271, 1, 0, 0.458546,-99) , 
7, -0.99999, 0, 0, 0.489765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412269,-99) , 
2, -0.214186, 0, 0, 0.486033,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0345769);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.482718,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0440985);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477673,-99) , 
9, 1.47637, 1, 0, 0.496966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41863,-99) , 
6, -951.286, 0, 0, 0.455995,-99) , 
7, -1.28571, 0, 0, 0.492014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410111,-99) , 
2, -0.214281, 0, 0, 0.488115,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0516949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419893,-99) , 
4, 0.999955, 0, 0, 0.517823,-99) , 
NN(
0, 
0, 
-1, -0.811374, 1, -1, 0.48176,-99) , 
8, 0.990198, 0, 0, 0.488649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395088,-99) , 
4, 0.999048, 0, 0, 0.4849,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0758437);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445759,-99) , 
5, 0.00226722, 0, 0, 0.499577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426633,-99) , 
5, 0.0238062, 1, 0, 0.496763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390833,-99) , 
4, 0.998572, 0, 0, 0.493994,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0377603);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481113,-99) , 
9, 0.534787, 1, 0, 0.494109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393011,-99) , 
7, -2.14285, 0, 0, 0.491374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408862,-99) , 
3, 9.52224, 1, 0, 0.487992,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0533559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468409,-99) , 
4, 0.999864, 0, 0, 0.503491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423532,-99) , 
4, 0.999048, 0, 0, 0.500206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449336,-99) , 
8, -3.345, 1, 0, 0.50676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376611,-99) , 
6, -951.286, 0, 0, 0.423843,-99) , 
9, -0.773149, 1, 0, 0.464063,-99) , 
7, -0.714275, 0, 0, 0.491063,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0316265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476043,-99) , 
0, 0.499043, 1, 0, 0.491372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410871,-99) , 
4, 0.998572, 0, 0, 0.489217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39799,-99) , 
7, -2.14285, 0, 0, 0.486729,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0305644);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.484723,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0356162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480674,-99) , 
9, 1.74829, 1, 0, 0.49875,-99) , 
NN(
0, 
0, 
-1, -1.52338, 1, -1, 0.464418,-99) , 
7, -0.99999, 0, 0, 0.492606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402951,-99) , 
4, 0.998572, 0, 0, 0.490283,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0398729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486399,-99) , 
6, -951.286, 1, 0, 0.523897,-99) , 
NN(
NN(
0, 
0, 
-1, 2.12924, 1, -1, 0.487121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340316,-99) , 
8, -2.49281, 1, 0, 0.425784,-99) , 
7, -1.57141, 0, 0, 0.482185,-99) , 
8, 3.12661, 0, 0, 0.486763,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0422722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489773,-99) , 
6, -951.286, 1, 0, 0.52408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479062,-99) , 
9, -0.183107, 1, 0, 0.491143,-99) , 
8, 3.2358, 0, 0, 0.49468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431324,-99) , 
2, -0.213964, 0, 0, 0.491678,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0258413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49495,-99) , 
2, 0.071083, 0, 0, 0.499084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447923,-99) , 
3, 9.1652, 1, 0, 0.49672,-99) , 
NN(
0, 
0, 
-1, -0.770638, 1, -1, 0.448952,-99) , 
7, -1.57137, 0, 0, 0.493043,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.048976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447054,-99) , 
5, 0.0238088, 1, 0, 0.508315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440999,-99) , 
7, 1.93877, 1, 0, 0.504233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382081,-99) , 
8, -2.40043, 1, 0, 0.455493,-99) , 
8, 1.39583, 0, 0, 0.469971,-99) , 
7, -0.714277, 0, 0, 0.495594,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0243868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442673,-99) , 
5, 0.0238088, 1, 0, 0.501267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436326,-99) , 
6, -951.286, 0, 0, 0.463238,-99) , 
7, -1.2857, 0, 0, 0.496715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416956,-99) , 
4, 0.998572, 0, 0, 0.494625,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0220183);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483309,-99) , 
7, -0.428587, 0, 0, 0.495366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438913,-99) , 
3, 9.12253, 1, 0, 0.492746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401234,-99) , 
7, -2.14285, 0, 0, 0.490361,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0303249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484016,-99) , 
9, 1.41442, 1, 0, 0.496703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43733,-99) , 
6, -951.286, 0, 0, 0.467945,-99) , 
7, -1.2857, 0, 0, 0.493247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435443,-99) , 
3, 9.50853, 1, 0, 0.490856,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0373012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142946, 1, 1, 0.525393,-99) , 
NN(
0, 
0, 
-1, 1.28562, 1, -1, 0.491806,-99) , 
8, 2.46622, 0, 0, 0.495803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468833,-99) , 
8, -1.42911, 0, 0, 0.490783,-99) , 
NN(
0, 
0, 
-1, 0.442445, 1, -1, 0.458634,-99) , 
6, -951.286, 0, 0, 0.47253,-99) , 
0, 0.499995, 1, 0, 0.488171,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0313451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.64146, 1, 1, 0.523168,-99) , 
NN(
0, 
0, 
-1, -0.486785, 1, -1, 0.488736,-99) , 
8, 0.955207, 0, 0, 0.495171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41923,-99) , 
0, 0.505709, 1, 0, 0.492712,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0231157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495276,-99) , 
8, 0.874947, 0, 0, 0.500175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448018,-99) , 
3, 9.52224, 1, 0, 0.498106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42834,-99) , 
0, 0.505709, 1, 0, 0.495828,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0189479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452923,-99) , 
5, 0.023792, 1, 0, 0.502544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43948,-99) , 
7, -2.14284, 0, 0, 0.500846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446005,-99) , 
3, 9.50466, 1, 0, 0.498621,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0194637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43377,-99) , 
2, -0.275478, 0, 0, 0.501367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451175,-99) , 
2, 0.214289, 1, 0, 0.499371,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.461978,-99) , 
0, 0.503804, 1, 0, 0.496017,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0282369);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489031,-99) , 
6, -951.286, 1, 0, 0.518266,-99) , 
NN(
0, 
0, 
-1, 1.72291, 1, -1, 0.49114,-99) , 
8, 1.46522, 0, 0, 0.495576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403285,-99) , 
7, -2.14285, 0, 0, 0.493215,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0201598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487001,-99) , 
7, -0.55106, 0, 0, 0.49907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448889,-99) , 
7, 2.14276, 1, 0, 0.497499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444532,-99) , 
0, 0.505709, 1, 0, 0.495753,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.026962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491654,-99) , 
9, -0.86111, 1, 0, 0.496535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454137,-99) , 
3, 9.27626, 1, 0, 0.494676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421067,-99) , 
7, -2.14284, 0, 0, 0.492752,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0256851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714282, 1, 1, 0.522154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459164,-99) , 
8, -0.396604, 1, 0, 0.496033,-99) , 
8, 1.04356, 0, 0, 0.500884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457515,-99) , 
2, -0.214238, 0, 0, 0.498835,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0284289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487415,-99) , 
9, 1.4831, 1, 0, 0.499881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450051,-99) , 
6, -951.286, 0, 0, 0.476722,-99) , 
7, -1.2857, 0, 0, 0.497149,-99) , 
NN(
0, 
0, 
-1, 0.505845, 1, -1, 0.455796,-99) , 
0, 0.504757, 1, 0, 0.494746,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0218016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499827,-99) , 
9, 3.77237, 1, 0, 0.515027,-99) , 
NN(
0, 
0, 
-1, -0.451042, 1, -1, 0.492221,-99) , 
8, 0.990198, 0, 0, 0.496523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450972,-99) , 
2, 0.214293, 1, 0, 0.494568,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0603655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473352,-99) , 
4, 0.999994, 0, 0, 0.503738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404846,-99) , 
9, 1.32061, 1, 0, 0.479035,-99) , 
4, 0.999932, 0, 0, 0.498625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437257,-99) , 
4, 0.998572, 0, 0, 0.49699,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0493142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487017,-99) , 
5, 0.00906335, 0, 0, 0.500928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458556,-99) , 
5, 0.023792, 1, 0, 0.499306,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.465771,-99) , 
0, 0.503805, 1, 0, 0.496352,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0225816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.72776, 1, 1, 0.51167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48471,-99) , 
0, 0.49088, 0, 0, 0.509452,-99) , 
NN(
0, 
0, 
-1, -1.57138, 0, -1, 0.489663,-99) , 
0, 0.499043, 1, 0, 0.50121,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0374221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498753,-99) , 
7, 0.71426, 1, 0, 0.509565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45919,-99) , 
9, -0.504147, 1, 0, 0.48935,-99) , 
7, -0.428583, 0, 0, 0.502701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432963,-99) , 
3, 9.50466, 1, 0, 0.499978,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0545289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478462,-99) , 
4, 0.999987, 0, 0, 0.507122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414099,-99) , 
9, 0.0713564, 1, 0, 0.46292,-99) , 
4, 0.999864, 0, 0, 0.501991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454292,-99) , 
4, 0.999048, 0, 0, 0.500094,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0196852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.8298, 0, 1, 0.510297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493917,-99) , 
2, 0.0715678, 0, 0, 0.496897,-99) , 
0, 0.498091, 1, 0, 0.503451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448749,-99) , 
7, -2.14284, 0, 0, 0.501989,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0388577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489406,-99) , 
4, 0.999997, 0, 0, 0.503657,-99) , 
NN(
0, 
0, 
-1, -0.999989, 0, -1, 0.480358,-99) , 
4, 0.999932, 0, 0, 0.498834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435604,-99) , 
4, 0.998572, 0, 0, 0.497201,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0388517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485337,-99) , 
4, 0.999981, 0, 0, 0.506194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437829,-99) , 
9, -0.0764888, 1, 0, 0.47852,-99) , 
4, 0.999864, 0, 0, 0.502605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448288,-99) , 
4, 0.998572, 0, 0, 0.501227,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0302217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478307,-99) , 
6, -951.286, 1, 0, 0.528705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475416,-99) , 
7, -0.70058, 0, 0, 0.499427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385196,-99) , 
7, -1.85714, 0, 0, 0.496083,-99) , 
9, -1.3261, 1, 0, 0.49987,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.026802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477102,-99) , 
6, -951.286, 1, 0, 0.525033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484296,-99) , 
9, 1.75199, 1, 0, 0.496452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402025,-99) , 
7, -1.85714, 0, 0, 0.493611,-99) , 
9, -1.43229, 1, 0, 0.496752,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.028899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484739,-99) , 
4, 0.999909, 0, 0, 0.521433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491754,-99) , 
8, 3.12661, 0, 0, 0.494785,-99) , 
2, 0.0719689, 0, 0, 0.498614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44017,-99) , 
4, 0.999048, 0, 0, 0.496397,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0319933);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484896,-99) , 
6, -951.286, 0, 0, 0.517918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489491,-99) , 
8, 0.440139, 0, 0, 0.494548,-99) , 
2, -0.0715884, 1, 0, 0.49849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441374,-99) , 
7, -2.14282, 0, 0, 0.496997,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0242939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481926,-99) , 
6, -951.286, 1, 0, 0.528974,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476877,-99) , 
7, -0.93197, 0, 0, 0.500349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392197,-99) , 
7, -1.85713, 0, 0, 0.497242,-99) , 
9, -1.43229, 1, 0, 0.50036,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0172244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492175,-99) , 
6, -951.286, 1, 0, 0.529162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451037,-99) , 
4, 0.999048, 0, 0, 0.499472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41122,-99) , 
7, -1.85714, 0, 0, 0.49683,-99) , 
9, -1.43229, 1, 0, 0.500011,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0208005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48906,-99) , 
6, -951.286, 1, 0, 0.528705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486014,-99) , 
9, 1.64843, 1, 0, 0.49544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411571,-99) , 
7, -1.85713, 0, 0, 0.492946,-99) , 
9, -1.48659, 1, 0, 0.496211,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.019904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489706,-99) , 
6, -951.286, 1, 0, 0.532501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482974,-99) , 
7, -0.46932, 0, 0, 0.496403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424674,-99) , 
7, -1.85713, 0, 0, 0.494239,-99) , 
9, -1.48659, 1, 0, 0.497692,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0144673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494992,-99) , 
6, -951.286, 1, 0, 0.533109,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.495896,-99) , 
9, -1.48659, 1, 0, 0.499285,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0150526);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.533399,-99) , 
NN(
0, 
0, 
-1, -1.85711, 0, -1, 0.49584,-99) , 
9, -1.3261, 1, 0, 0.500164,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0163474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490764,-99) , 
6, -951.286, 1, 0, 0.52426,-99) , 
NN(
0, 
0, 
-1, -1.85705, 0, -1, 0.494663,-99) , 
9, -1.43229, 1, 0, 0.497575,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0332504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490636,-99) , 
4, 0.999989, 0, 0, 0.504345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44079,-99) , 
4, 0.999532, 1, 0, 0.478446,-99) , 
4, 0.999773, 0, 0, 0.502378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461673,-99) , 
4, 0.999048, 0, 0, 0.500806,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0294376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484757,-99) , 
3, 5.51058, 1, 0, 0.525392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488813,-99) , 
2, -0.00332835, 1, 0, 0.499587,-99) , 
2, 0.0714928, 0, 0, 0.503431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451018,-99) , 
3, 9.52452, 1, 0, 0.501337,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0664549);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480492,-99) , 
9, 4.1579, 1, 0, 0.564263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46002,-99) , 
5, 0.00264507, 0, 0, 0.486542,-99) , 
5, 0.00793527, 0, 0, 0.50151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464923,-99) , 
5, 0.0238062, 1, 0, 0.500099,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0196402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499622,-99) , 
6, -951.286, 1, 0, 0.531778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486492,-99) , 
7, -0.23805, 0, 0, 0.496462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426886,-99) , 
7, -1.85714, 0, 0, 0.494376,-99) , 
9, -1.28911, 1, 0, 0.498829,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0230177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498316,-99) , 
6, -951.286, 1, 0, 0.52453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493226,-99) , 
2, -0.0714407, 1, 0, 0.497039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4348,-99) , 
7, -1.85713, 0, 0, 0.495152,-99) , 
9, -1.48659, 1, 0, 0.497826,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0138465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499703,-99) , 
6, -951.286, 1, 0, 0.527214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456992,-99) , 
3, 9.50466, 1, 0, 0.499224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43238,-99) , 
7, -1.85713, 0, 0, 0.497227,-99) , 
9, -1.36224, 1, 0, 0.500436,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0199902);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.5239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445407,-99) , 
4, 0.999773, 0, 0, 0.498988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436178,-99) , 
4, 0.999048, 0, 0, 0.496912,-99) , 
9, -1.3596, 1, 0, 0.499811,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0238005);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.529266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492477,-99) , 
8, 1.94928, 0, 0, 0.495382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432559,-99) , 
7, -1.85714, 0, 0, 0.49349,-99) , 
9, -1.3596, 1, 0, 0.497328,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0161995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.503197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434632,-99) , 
6, -951.286, 0, 0, 0.472336,-99) , 
4, 0.999819, 0, 0, 0.50035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45671,-99) , 
4, 0.999048, 0, 0, 0.498687,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0171791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.526134,-99) , 
NN(
0, 
0, 
-1, -1.85712, 0, -1, 0.495286,-99) , 
9, -1.36224, 1, 0, 0.498522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452487,-99) , 
3, 9.50466, 1, 0, 0.496675,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0384298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425775,-99) , 
6, -951.286, 0, 0, 0.546115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493125,-99) , 
2, 0.0200063, 0, 0, 0.500969,-99) , 
4, 0.999524, 1, 0, 0.504021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46185,-99) , 
3, 9.27626, 1, 0, 0.502227,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0220796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.21213, 1, 1, 0.535782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495711,-99) , 
2, -0.0752593, 1, 0, 0.500435,-99) , 
3, 0.55889, 1, 0, 0.503191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460814,-99) , 
3, 9.27626, 1, 0, 0.501382,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0144635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.439299, 1, 1, 0.534125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498698,-99) , 
9, -1.47422, 1, 0, 0.501347,-99) , 
3, 0.55126, 1, 0, 0.503846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464049,-99) , 
3, 9.50466, 1, 0, 0.502246,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.032459);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427317,-99) , 
6, -951.286, 0, 0, 0.543982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436404,-99) , 
4, 0.999751, 0, 0, 0.503533,-99) , 
4, 0.999524, 1, 0, 0.506245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472414,-99) , 
3, 9.41001, 1, 0, 0.504837,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.039047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.91362, 1, 1, 0.564853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45502,-99) , 
5, 0.00129448, 0, 0, 0.490829,-99) , 
5, 0.0090614, 0, 0, 0.501862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460554,-99) , 
5, 0.0237868, 1, 0, 0.500306,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0130745);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.52222,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.495036,-99) , 
9, -1.48659, 1, 0, 0.497513,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.023668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399594,-99) , 
6, -951.286, 0, 0, 0.530592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4313,-99) , 
4, 0.999728, 0, 0, 0.498092,-99) , 
4, 0.999524, 1, 0, 0.500224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463528,-99) , 
3, 9.52351, 1, 0, 0.498787,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0217406);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469136,-99) , 
9, 2.09087, 1, 0, 0.512969,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.493765,-99) , 
2, 0.0712035, 0, 0, 0.496758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442243,-99) , 
7, -2.14285, 0, 0, 0.495381,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0473567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486148,-99) , 
5, 0.0079353, 0, 0, 0.499971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462926,-99) , 
5, 0.0238062, 1, 0, 0.498599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447272,-99) , 
7, -2.14285, 0, 0, 0.497292,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0214189);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494134,-99) , 
6, -951.286, 0, 0, 0.520772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495749,-99) , 
6, -951.286, 1, 0, 0.502577,-99) , 
2, -0.0715402, 1, 0, 0.505627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454977,-99) , 
7, -2.14285, 0, 0, 0.504342,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0197421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.91813, 1, 1, 0.571963,-99) , 
NN(
0, 
0, 
-1, -0.799318, 1, -1, 0.48036,-99) , 
6, -951.286, 1, 0, 0.522194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464833,-99) , 
4, 0.999048, 0, 0, 0.500184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441322,-99) , 
7, -1.85713, 0, 0, 0.498159,-99) , 
8, -3.4751, 1, 0, 0.501517,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0330961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475892,-99) , 
6, -951.286, 1, 0, 0.511957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487394,-99) , 
6, -951.286, 0, 0, 0.496126,-99) , 
8, -3.30908, 1, 0, 0.498805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456073,-99) , 
0, 0.505709, 1, 0, 0.497435,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0219229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.88232, 1, 1, 0.562874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471517,-99) , 
7, -0.776435, 1, 0, 0.492954,-99) , 
6, -951.286, 1, 0, 0.524736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44553,-99) , 
4, 0.999048, 0, 0, 0.499993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413097,-99) , 
7, -1.85713, 0, 0, 0.497141,-99) , 
8, -3.42687, 1, 0, 0.501239,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0316986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493817,-99) , 
6, -951.286, 1, 0, 0.526237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492913,-99) , 
8, -2.8086, 0, 0, 0.513984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478063,-99) , 
7, 0.142837, 0, 0, 0.493199,-99) , 
9, -0.394384, 1, 0, 0.497416,-99) , 
8, -3.6123, 1, 0, 0.500799,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0489442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474739,-99) , 
6, -951.286, 1, 0, 0.50135,-99) , 
4, 0.999524, 1, 0, 0.507674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464674,-99) , 
4, 0.999977, 0, 0, 0.497607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428871,-99) , 
4, 0.999524, 0, 0, 0.494544,-99) , 
9, -0.0158783, 1, 0, 0.499546,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0299643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.54234, 1, 1, 0.553694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435575,-99) , 
2, -0.207567, 0, 0, 0.4863,-99) , 
6, -951.286, 0, 0, 0.515295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495461,-99) , 
8, 0.874947, 0, 0, 0.498894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478848,-99) , 
9, -1.18943, 1, 0, 0.483118,-99) , 
0, 0.499995, 1, 0, 0.493876,-99) , 
2, -0.0715932, 1, 0, 0.497481,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0248915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.43103, 1, 1, 0.54511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450617,-99) , 
2, -0.207407, 0, 0, 0.487139,-99) , 
6, -951.286, 0, 0, 0.512194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484651,-99) , 
0, 0.502852, 1, 0, 0.502305,-99) , 
NN(
0, 
0, 
-1, -0.00726311, 1, -1, 0.48769,-99) , 
2, 0.00342605, 0, 0, 0.495422,-99) , 
2, -0.0713995, 1, 0, 0.498253,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0542853);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475584,-99) , 
7, -0.7789, 0, 0, 0.543381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46243,-99) , 
9, -0.426195, 1, 0, 0.500453,-99) , 
8, -2.19651, 0, 0, 0.506693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461427,-99) , 
9, 4.02049, 1, 0, 0.508455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464549,-99) , 
8, 0.876153, 0, 0, 0.479123,-99) , 
6, -951.286, 0, 0, 0.490236,-99) , 
9, 0.314772, 1, 0, 0.497728,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0208597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.82003, 1, 1, 0.542394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482647,-99) , 
9, -1.53064, 1, 0, 0.494258,-99) , 
6, -951.286, 1, 0, 0.516131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486334,-99) , 
9, 1.61574, 1, 0, 0.495802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450377,-99) , 
7, -1.85713, 0, 0, 0.494245,-99) , 
8, -3.35418, 1, 0, 0.497773,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0202477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142562, 0, 1, 0.530683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494099,-99) , 
4, 0.999524, 1, 0, 0.496289,-99) , 
3, 0.555518, 1, 0, 0.498927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466445,-99) , 
3, 9.50853, 1, 0, 0.497623,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0210077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477089,-99) , 
8, -3.55671, 0, 0, 0.50064,-99) , 
8, -4.1834, 1, 0, 0.51475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472088,-99) , 
4, 0.999864, 0, 0, 0.499199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44807,-99) , 
4, 0.999048, 0, 0, 0.497619,-99) , 
9, -1.11129, 1, 0, 0.500137,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0207185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488179,-99) , 
3, 4.65587, 1, 0, 0.501836,-99) , 
8, -3.67739, 1, 0, 0.504403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491165,-99) , 
9, -1.4139, 1, 0, 0.493876,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.481454,-99) , 
0, 0.502625, 1, 0, 0.49042,-99) , 
0, 0.49809, 1, 0, 0.497265,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0419436);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48551,-99) , 
9, 2.91926, 1, 0, 0.541016,-99) , 
NN(
0, 
0, 
-1, 0.00188958, 0, -1, 0.486962,-99) , 
5, 0.00793623, 0, 0, 0.497323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457717,-99) , 
5, 0.0238087, 1, 0, 0.495854,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0293537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493261,-99) , 
4, 0.99999, 0, 0, 0.503889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432917,-99) , 
6, -951.286, 0, 0, 0.477882,-99) , 
4, 0.999796, 0, 0, 0.501449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464876,-99) , 
4, 0.998572, 0, 0, 0.500518,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0467367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486706,-99) , 
6, -951.286, 1, 0, 0.504778,-99) , 
4, 0.999524, 1, 0, 0.509923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483571,-99) , 
9, 1.82671, 1, 0, 0.500739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441109,-99) , 
8, 0.864248, 0, 0, 0.47718,-99) , 
7, -0.142855, 0, 0, 0.493837,-99) , 
9, 0.346506, 1, 0, 0.501289,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0265399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421201,-99) , 
6, -951.286, 0, 0, 0.538143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474357,-99) , 
4, 0.999841, 0, 0, 0.501173,-99) , 
4, 0.999524, 1, 0, 0.503613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465424,-99) , 
3, 9.50853, 1, 0, 0.502105,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.014659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.89242, 1, 1, 0.534699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494766,-99) , 
6, -0.143496, 1, 0, 0.500022,-99) , 
6, -951.286, 1, 0, 0.515625,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.494663,-99) , 
8, -3.43867, 1, 0, 0.497706,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0386948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483661,-99) , 
8, -1.05922, 0, 0, 0.500289,-99) , 
4, 0.999524, 1, 0, 0.508492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433151,-99) , 
7, -1.85712, 0, 0, 0.499267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393653,-99) , 
4, 0.999524, 0, 0, 0.49292,-99) , 
6, -951.286, 0, 0, 0.499667,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0372608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49052,-99) , 
7, -0.210104, 0, 0, 0.539373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435189,-99) , 
7, 0.390207, 1, 0, 0.49475,-99) , 
8, -2.54506, 0, 0, 0.50425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478235,-99) , 
9, 2.90866, 1, 0, 0.499238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463669,-99) , 
9, 2.67709, 0, 0, 0.479,-99) , 
7, 0.142862, 0, 0, 0.49144,-99) , 
9, 0.0992011, 1, 0, 0.496655,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0350252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491723,-99) , 
7, -0.30649, 0, 0, 0.536508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418577,-99) , 
7, 0.732624, 1, 0, 0.49905,-99) , 
8, -2.27145, 0, 0, 0.505456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466418,-99) , 
9, 4.37288, 1, 0, 0.502331,-99) , 
NN(
0, 
0, 
-1, -0.428559, 0, -1, 0.48252,-99) , 
6, -951.286, 0, 0, 0.489985,-99) , 
9, 0.327366, 1, 0, 0.497086,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0313678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.46684, 1, 1, 0.55011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447178,-99) , 
7, -0.428516, 0, 0, 0.487813,-99) , 
6, -951.286, 0, 0, 0.514703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491813,-99) , 
2, 0.0425649, 0, 0, 0.498147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471809,-99) , 
2, 0.227843, 1, 0, 0.496933,-99) , 
2, -0.0714407, 1, 0, 0.499912,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0438116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485807,-99) , 
7, -0.999457, 1, 0, 0.494759,-99) , 
4, 0.999524, 1, 0, 0.503671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4756,-99) , 
7, -0.714277, 0, 0, 0.500169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386432,-99) , 
4, 0.999524, 0, 0, 0.493312,-99) , 
6, -951.286, 0, 0, 0.497802,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0312689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.517351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414375,-99) , 
6, -1.57141, 0, 0, 0.509036,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.489915,-99) , 
6, -951.286, 0, 0, 0.498211,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0417223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488594,-99) , 
7, -0.543821, 0, 0, 0.539277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441461,-99) , 
7, 0.73272, 1, 0, 0.498494,-99) , 
8, -2.20084, 0, 0, 0.504752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479883,-99) , 
5, 0.0101919, 0, 0, 0.491328,-99) , 
5, 0.0237868, 0, 0, 0.494183,-99) , 
9, 0.346506, 1, 0, 0.499069,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0297182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491048,-99) , 
7, 1.28584, 0, 0, 0.501584,-99) , 
7, -0.999797, 1, 0, 0.513067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456573,-99) , 
9, 2.50713, 1, 0, 0.502514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445004,-99) , 
6, -951.286, 0, 0, 0.473732,-99) , 
7, -1.00001, 0, 0, 0.497195,-99) , 
8, 0.955207, 0, 0, 0.500221,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0439125);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486174,-99) , 
5, 0.00904978, 0, 0, 0.496511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437971,-99) , 
5, 0.0237559, 1, 0, 0.494669,-99) , 
8, 9.58096, 0, 0, 0.496099,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0295366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.144232, 1, 1, 0.518417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459631,-99) , 
7, -1, 0, 0, 0.497372,-99) , 
6, -951.286, 0, 0, 0.505665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493485,-99) , 
8, -3.15335, 0, 0, 0.50124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446199,-99) , 
9, -0.623588, 1, 0, 0.491044,-99) , 
8, -2.79302, 0, 0, 0.501692,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0163871);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498408,-99) , 
7, -0.714145, 1, 0, 0.511349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496036,-99) , 
8, -4.17743, 1, 0, 0.498217,-99) , 
8, 0.874947, 0, 0, 0.500782,-99) , 
NN(
0, 
0, 
-1, 0.142347, 0, -1, 0.477021,-99) , 
0, 0.491424, 0, 0, 0.499377,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0194429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43195,-99) , 
6, -951.286, 0, 0, 0.529746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452358,-99) , 
4, 0.999728, 0, 0, 0.49944,-99) , 
4, 0.999524, 1, 0, 0.501395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463815,-99) , 
3, 9.52058, 1, 0, 0.499937,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0212292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.853273, 1, 1, 0.533791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49414,-99) , 
2, 0.0711326, 0, 0, 0.49804,-99) , 
3, 0.573094, 1, 0, 0.501009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475719,-99) , 
3, 9.52452, 1, 0, 0.500007,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0259195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488336,-99) , 
7, 1.23139, 0, 0, 0.501454,-99) , 
7, -0.714084, 1, 0, 0.512214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483983,-99) , 
7, -1.00002, 0, 0, 0.502055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448964,-99) , 
9, 2.51936, 1, 0, 0.500078,-99) , 
8, 1.0624, 0, 0, 0.502301,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0132711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496937,-99) , 
3, 0.554149, 1, 0, 0.498952,-99) , 
3, 9.12647, 0, 0, 0.500306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470192,-99) , 
4, 0.999048, 0, 0, 0.499167,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0257201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.539221,-99) , 
NN(
0, 
0, 
-1, -0.207127, 0, -1, 0.481314,-99) , 
3, 4.63414, 1, 0, 0.515568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4792,-99) , 
6, -951.286, 1, 0, 0.513941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495212,-99) , 
8, 1.48753, 0, 0, 0.49707,-99) , 
8, 2.83157, 0, 0, 0.499025,-99) , 
2, -0.0711095, 1, 0, 0.501819,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.014255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.504424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450218,-99) , 
9, 0.201558, 1, 0, 0.479763,-99) , 
4, 0.999864, 0, 0, 0.501545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475016,-99) , 
4, 0.999048, 0, 0, 0.500531,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0301958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475676,-99) , 
8, -3.82824, 0, 0, 0.502026,-99) , 
8, -4.32635, 1, 0, 0.517545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422313,-99) , 
6, -1.57134, 0, 0, 0.507356,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.492778,-99) , 
6, -951.286, 0, 0, 0.498919,-99) , 
9, -1.3804, 1, 0, 0.500893,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0308004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00869207, 0, 1, 0.510276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456539,-99) , 
9, 1.90149, 0, 0, 0.466677,-99) , 
5, 0.00113375, 0, 0, 0.503102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466505,-99) , 
5, 0.0238087, 1, 0, 0.501734,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0145517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.527585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480325,-99) , 
7, -0.541305, 1, 0, 0.5133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467992,-99) , 
4, 0.999728, 0, 0, 0.499696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463171,-99) , 
4, 0.999048, 0, 0, 0.498564,-99) , 
8, -3.43039, 1, 0, 0.50073,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0312013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.654706, 0, 1, 0.550388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488775,-99) , 
4, 0.999524, 1, 0, 0.495613,-99) , 
8, -2.38145, 0, 0, 0.503868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493052,-99) , 
9, 1.54116, 1, 0, 0.497738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472348,-99) , 
9, 2.85937, 0, 0, 0.484983,-99) , 
7, 0.142858, 0, 0, 0.492818,-99) , 
9, 0.116178, 1, 0, 0.497398,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0232635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494823,-99) , 
7, 1.28587, 0, 0, 0.503005,-99) , 
7, -0.999564, 1, 0, 0.51233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494608,-99) , 
8, -3.81658, 1, 0, 0.498022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435895,-99) , 
9, 2.40681, 1, 0, 0.495727,-99) , 
8, 0.874947, 0, 0, 0.499011,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.012263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0508448, 1, 1, 0.504706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486383,-99) , 
2, -0.214071, 0, 0, 0.503883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462697,-99) , 
0, 0.505709, 1, 0, 0.502572,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.009456);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.32048, 1, 1, 0.519001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477006,-99) , 
7, 2.0748, 1, 0, 0.500239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458916,-99) , 
7, -1.85713, 0, 0, 0.499066,-99) , 
9, -1.43229, 1, 0, 0.50103,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0205688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0510257, 1, 1, 0.505032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479393,-99) , 
2, -0.214281, 0, 0, 0.503928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491305,-99) , 
8, -1.80028, 0, 0, 0.506905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474403,-99) , 
8, -3.11529, 1, 0, 0.479212,-99) , 
6, -951.286, 0, 0, 0.49124,-99) , 
0, 0.499995, 1, 0, 0.499798,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.018239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493995,-99) , 
3, 0.55985, 1, 0, 0.496058,-99) , 
3, 9.18769, 0, 0, 0.497414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463375,-99) , 
4, 0.999048, 0, 0, 0.496125,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0129459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480147,-99) , 
8, -3.80635, 0, 0, 0.502366,-99) , 
8, -4.29289, 1, 0, 0.511949,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.495968,-99) , 
9, -1.3261, 1, 0, 0.497779,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0383258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00739553, 0, 1, 0.513464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469867,-99) , 
9, 3.10667, 0, 0, 0.475464,-99) , 
5, 0.00226725, 0, 0, 0.501273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47229,-99) , 
5, 0.0238062, 1, 0, 0.500172,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0328127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463868,-99) , 
7, -0.714377, 0, 0, 0.512406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462827,-99) , 
9, 0.13969, 1, 0, 0.496264,-99) , 
8, -1.8152, 0, 0, 0.501987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524432,-99) , 
NN(
0, 
0, 
-1, 3.38097, 1, -1, 0.48302,-99) , 
7, -0.713235, 1, 0, 0.488974,-99) , 
9, 1.97841, 1, 0, 0.498574,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0353026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494152,-99) , 
9, 2.85501, 1, 0, 0.513553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469607,-99) , 
6, -951.286, 1, 0, 0.49157,-99) , 
8, -1.02213, 0, 0, 0.502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490041,-99) , 
6, -951.286, 1, 0, 0.502641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473207,-99) , 
6, -951.286, 0, 0, 0.484754,-99) , 
9, -0.583659, 1, 0, 0.49251,-99) , 
7, 0.142834, 0, 0, 0.496862,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0177851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.427957, 1, 1, 0.529599,-99) , 
NN(
0, 
0, 
-1, 0.142154, 0, -1, 0.478778,-99) , 
6, -951.286, 1, 0, 0.508312,-99) , 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.494963,-99) , 
8, 1.0684, 0, 0, 0.497407,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0228884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467242,-99) , 
2, -0.139462, 0, 0, 0.483472,-99) , 
3, 4.62454, 1, 0, 0.511919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482573,-99) , 
8, -2.62176, 0, 0, 0.496722,-99) , 
7, -1.85714, 1, 0, 0.497825,-99) , 
2, -0.0714407, 1, 0, 0.500192,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0131579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499837,-99) , 
3, 9.18789, 0, 0, 0.50238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459433,-99) , 
4, 0.999525, 1, 0, 0.479578,-99) , 
4, 0.999819, 0, 0, 0.500282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467639,-99) , 
4, 0.999048, 0, 0, 0.499046,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0289007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432541,-99) , 
6, -951.286, 0, 0, 0.522729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490195,-99) , 
6, -951.286, 1, 0, 0.500058,-99) , 
4, 0.999524, 1, 0, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466921,-99) , 
3, 9.50853, 1, 0, 0.50014,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0127385);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4999,-99) , 
3, 9.42864, 0, 0, 0.502143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440456,-99) , 
6, -951.286, 0, 0, 0.476066,-99) , 
4, 0.999796, 0, 0, 0.499702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468874,-99) , 
4, 0.998572, 0, 0, 0.498917,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0296032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.49745, 1, 1, 0.540989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478193,-99) , 
5, 0.00194194, 0, 0, 0.496923,-99) , 
5, 0.0101952, 0, 0, 0.502115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470791,-99) , 
5, 0.023792, 1, 0, 0.500958,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0262629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.535237, 0, 1, 0.543977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456945,-99) , 
9, -0.109801, 1, 0, 0.499233,-99) , 
8, -2.14845, 0, 0, 0.505839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498964,-99) , 
7, -0.999951, 1, 0, 0.507385,-99) , 
NN(
0, 
0, 
-1, -1.00001, 0, -1, 0.489698,-99) , 
8, 0.923287, 0, 0, 0.496132,-99) , 
9, 0.383054, 1, 0, 0.500705,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0339831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484861,-99) , 
7, 1.00034, 0, 0, 0.496794,-99) , 
9, 3.77819, 1, 0, 0.514433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497767,-99) , 
8, -1.78507, 0, 0, 0.502903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464335,-99) , 
6, -951.286, 0, 0, 0.485355,-99) , 
9, 0.993365, 1, 0, 0.497999,-99) , 
8, 1.15034, 0, 0, 0.500973,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0298951);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493426,-99) , 
4, 0.999994, 0, 0, 0.504549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457244,-99) , 
6, -951.286, 0, 0, 0.487962,-99) , 
4, 0.999864, 0, 0, 0.502441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468813,-99) , 
4, 0.998572, 0, 0, 0.501587,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0257672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.515822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491174,-99) , 
2, 0.0160549, 0, 0, 0.500578,-99) , 
2, -0.0305855, 1, 0, 0.504765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479149,-99) , 
2, 0.214283, 1, 0, 0.503702,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0232635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498094, 1, 1, 0.540243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476289,-99) , 
8, 4.46448, 0, 0, 0.502968,-99) , 
9, 3.69577, 1, 0, 0.513974,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482382,-99) , 
7, -1.28572, 0, 0, 0.50282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452257,-99) , 
9, 2.54971, 1, 0, 0.501143,-99) , 
8, 1.04356, 0, 0, 0.503524,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.015519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18769, 0, 1, 0.503738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442025,-99) , 
6, -951.286, 0, 0, 0.478743,-99) , 
4, 0.999796, 0, 0, 0.501374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467594,-99) , 
4, 0.998572, 0, 0, 0.50052,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.00903555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497603,-99) , 
8, -4.36694, 1, 0, 0.511224,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.49645,-99) , 
9, -1.48659, 1, 0, 0.497793,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0326585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.84102, 1, 1, 0.529639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481217,-99) , 
6, -0.141766, 1, 0, 0.492481,-99) , 
6, -951.286, 1, 0, 0.509187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488731,-99) , 
5, 0.010181, 0, 0, 0.495655,-99) , 
5, 0.0237559, 0, 0, 0.49671,-99) , 
8, -3.42687, 1, 0, 0.498537,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0255574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451392,-99) , 
6, -951.286, 0, 0, 0.534894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48988,-99) , 
4, 0.999977, 0, 0, 0.499953,-99) , 
4, 0.999524, 1, 0, 0.50222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472675,-99) , 
3, 9.13346, 1, 0, 0.500899,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0181167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.62105, 0, 1, 0.5092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491414,-99) , 
7, 0.428573, 0, 0, 0.499704,-99) , 
9, 0.047316, 1, 0, 0.50349,-99) , 
NN(
0, 
0, 
-1, -0.14299, 0, -1, 0.482054,-99) , 
0, 0.504757, 1, 0, 0.502289,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0317781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486874,-99) , 
8, -1.14033, 0, 0, 0.499124,-99) , 
4, 0.999524, 1, 0, 0.506259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496912,-99) , 
8, -3.03605, 1, 0, 0.501609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414494,-99) , 
4, 0.999524, 0, 0, 0.496434,-99) , 
6, -951.286, 0, 0, 0.500707,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0203632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.532868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47558,-99) , 
2, -0.139326, 0, 0, 0.487779,-99) , 
3, 4.66137, 1, 0, 0.51449,-99) , 
NN(
NN(
0, 
0, 
-1, -0.713568, 1, 1, 0.50769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491099,-99) , 
8, -2.39595, 0, 0, 0.49749,-99) , 
9, 1.77913, 0, 0, 0.500454,-99) , 
2, -0.0713053, 1, 0, 0.502807,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0164058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.20448, 1, 1, 0.527732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496226,-99) , 
2, 0.0708855, 0, 0, 0.499417,-99) , 
3, 0.555518, 1, 0, 0.501608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474178,-99) , 
3, 9.50853, 1, 0, 0.500522,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0234561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.67162, 1, 1, 0.51901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491061,-99) , 
3, 2.96786, 0, 0, 0.499266,-99) , 
3, 0.996132, 1, 0, 0.503426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477605,-99) , 
3, 9.27753, 1, 0, 0.502339,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0353001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.361686, 0, 1, 0.541449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473135,-99) , 
9, -0.522876, 1, 0, 0.504438,-99) , 
8, -2.37352, 0, 0, 0.510962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491171,-99) , 
5, 0.0124712, 0, 0, 0.4966,-99) , 
5, 0.0238087, 0, 0, 0.498333,-99) , 
9, 0.215291, 1, 0, 0.503823,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0277412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48343,-99) , 
6, -951.286, 0, 0, 0.548483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499016,-99) , 
2, -0.030942, 1, 0, 0.503877,-99) , 
4, 0.999524, 1, 0, 0.506918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471671,-99) , 
2, -0.0781085, 0, 0, 0.503999,-99) , 
NN(
0, 
0, 
-1, 0.396566, 1, -1, 0.463452,-99) , 
2, 0.0715225, 1, 0, 0.491967,-99) , 
3, 4.75894, 1, 0, 0.503946,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0207292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.04394, 0, 1, 0.508723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448434,-99) , 
6, -951.286, 0, 0, 0.477545,-99) , 
4, 0.999728, 0, 0, 0.506813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483127,-99) , 
4, 0.999048, 0, 0, 0.505916,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0127814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490973,-99) , 
3, 4.65693, 1, 0, 0.512417,-99) , 
NN(
0, 
0, 
-1, -1.85712, 1, 1, 0.503301,-99) , 
0, 0.49537, 1, 0, 0.505269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483922,-99) , 
0, 0.490472, 0, 0, 0.504455,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0158481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453795,-99) , 
6, -951.286, 0, 0, 0.533161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499529,-99) , 
3, 0.574942, 1, 0, 0.501308,-99) , 
4, 0.999524, 1, 0, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472779,-99) , 
3, 9.50466, 1, 0, 0.502138,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0229601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46715, 1, 1, 0.514105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469385,-99) , 
0, 0.493737, 0, 0, 0.496704,-99) , 
3, 4.82397, 1, 0, 0.510851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484661,-99) , 
3, 4.50586, 1, 0, 0.514819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49341,-99) , 
2, -0.0040088, 1, 0, 0.499658,-99) , 
2, 0.070765, 0, 0, 0.501884,-99) , 
0, 0.496186, 1, 0, 0.504677,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.00824066);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.18505, 0, 1, 0.502989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466344,-99) , 
4, 0.999048, 0, 0, 0.501637,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0212252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475545,-99) , 
6, -951.286, 0, 0, 0.543011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49847,-99) , 
2, 0.103756, 0, 0, 0.501105,-99) , 
4, 0.999524, 1, 0, 0.503926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464488,-99) , 
2, -0.152916, 0, 0, 0.499364,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.475546,-99) , 
2, 0.0714952, 1, 0, 0.492155,-99) , 
3, 4.75894, 1, 0, 0.50158,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.02372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47276,-99) , 
9, 2.12348, 1, 0, 0.503194,-99) , 
8, 1.19506, 0, 0, 0.505793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448356,-99) , 
6, -951.286, 1, 0, 0.479501,-99) , 
7, 1.0037, 0, 0, 0.489994,-99) , 
9, 3.77212, 1, 0, 0.50379,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0280732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0527034, 1, 1, 0.528498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460394,-99) , 
0, 0.498091, 0, 0, 0.48638,-99) , 
3, 4.74842, 1, 0, 0.511833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497081,-99) , 
9, 0.047316, 1, 0, 0.503277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48272,-99) , 
2, 0.0215372, 0, 0, 0.495001,-99) , 
2, -0.00339757, 1, 0, 0.499495,-99) , 
2, 0.0714063, 0, 0, 0.501406,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0346233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476681,-99) , 
8, -2.78214, 0, 0, 0.512284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477825,-99) , 
7, 1.50338, 0, 0, 0.487757,-99) , 
9, 3.01076, 1, 0, 0.507277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497686,-99) , 
8, -4.27858, 1, 0, 0.501354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472375,-99) , 
9, 2.32103, 0, 0, 0.483323,-99) , 
9, -0.294354, 1, 0, 0.493016,-99) , 
7, -0.142858, 0, 0, 0.501047,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0164933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.5058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463308,-99) , 
4, 0.999525, 1, 0, 0.477012,-99) , 
4, 0.999819, 0, 0, 0.503207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477345,-99) , 
4, 0.999048, 0, 0, 0.502231,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0372147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449676,-99) , 
9, 3.7662, 1, 0, 0.515181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489895,-99) , 
8, 2.2864, 0, 0, 0.493337,-99) , 
5, 0.00680167, 0, 0, 0.498708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474565,-99) , 
5, 0.0238062, 1, 0, 0.497791,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0136571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455447,-99) , 
9, 2.60052, 1, 0, 0.499838,-99) , 
8, 1.19866, 0, 0, 0.501782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483681,-99) , 
7, 0.715967, 1, 0, 0.501287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472151,-99) , 
6, -951.286, 1, 0, 0.488837,-99) , 
9, 3.38707, 1, 0, 0.499926,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0076383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473855,-99) , 
3, 6.76766, 1, 0, 0.498718,-99) , 
3, 9.42498, 0, 0, 0.499916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476382,-99) , 
4, 0.999048, 0, 0, 0.499038,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0288599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.413735, 1, 1, 0.527303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490137,-99) , 
3, 1.24016, 1, 0, 0.498194,-99) , 
2, 0.0686276, 0, 0, 0.501772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458988,-99) , 
2, 0.153127, 1, 0, 0.498698,-99) , 
NN(
0, 
0, 
-1, -0.142183, 0, -1, 0.474656,-99) , 
2, -0.0713465, 0, 0, 0.490783,-99) , 
3, 4.82088, 1, 0, 0.499615,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0242128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531689,-99) , 
NN(
0, 
0, 
-1, 0.142787, 0, -1, 0.482418,-99) , 
3, 4.83184, 1, 0, 0.512694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484852,-99) , 
7, -0.428564, 0, 0, 0.499974,-99) , 
NN(
0, 
0, 
-1, -1.57147, 0, -1, 0.492283,-99) , 
6, -951.286, 1, 0, 0.496656,-99) , 
2, -0.071264, 1, 0, 0.499356,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0160771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503805, 1, 1, 0.522007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468548,-99) , 
0, 0.504757, 1, 0, 0.497818,-99) , 
6, -951.286, 0, 0, 0.508161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490564,-99) , 
9, 1.0046, 1, 0, 0.496735,-99) , 
7, -1.85714, 1, 0, 0.497859,-99) , 
0, 0.500948, 0, 0, 0.500448,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0130445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497584,-99) , 
7, 1.57142, 0, 0, 0.499637,-99) , 
3, 9.42599, 0, 0, 0.50132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468525,-99) , 
4, 0.999048, 0, 0, 0.500107,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0133719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4971,-99) , 
3, 0.981664, 1, 0, 0.50034,-99) , 
3, 9.12546, 0, 0, 0.501755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480233,-99) , 
4, 0.999048, 0, 0, 0.500942,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0145319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18795, 0, 1, 0.504481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451261,-99) , 
4, 0.999531, 1, 0, 0.476128,-99) , 
4, 0.999773, 0, 0, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474866,-99) , 
4, 0.999048, 0, 0, 0.501375,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0207845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496466,-99) , 
8, 1.10552, 0, 0, 0.501222,-99) , 
4, 0.999048, 1, 0, 0.503266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494045,-99) , 
8, -2.85446, 0, 0, 0.503831,-99) , 
NN(
0, 
0, 
-1, 0.071731, 1, -1, 0.475995,-99) , 
9, 0.578617, 1, 0, 0.490508,-99) , 
3, 4.68114, 1, 0, 0.500656,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0142404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484049,-99) , 
2, -0.0708474, 0, 0, 0.499956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462956,-99) , 
0, 0.493329, 0, 0, 0.495225,-99) , 
3, 4.80413, 1, 0, 0.50352,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0149857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497423,-99) , 
0, 0.492241, 0, 0, 0.505003,-99) , 
2, -0.0717836, 1, 0, 0.512943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49976,-99) , 
2, -0.0712073, 1, 0, 0.502606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476029,-99) , 
8, 1.78901, 0, 0, 0.493933,-99) , 
9, 1.93758, 1, 0, 0.500311,-99) , 
0, 0.493329, 1, 0, 0.501927,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0184389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473237,-99) , 
9, 2.12713, 1, 0, 0.500434,-99) , 
8, 1.22463, 0, 0, 0.502847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484932,-99) , 
8, 6.55427, 0, 0, 0.501283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467964,-99) , 
6, -951.286, 1, 0, 0.486891,-99) , 
9, 3.76217, 1, 0, 0.500815,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0201663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433181,-99) , 
6, -1.57141, 0, 0, 0.502048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446449,-99) , 
7, -1.85714, 0, 0, 0.49788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428885,-99) , 
4, 0.999524, 0, 0, 0.493651,-99) , 
6, -951.286, 0, 0, 0.497309,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0241022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47054,-99) , 
6, -951.286, 0, 0, 0.541983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487993,-99) , 
4, 0.999977, 0, 0, 0.49715,-99) , 
4, 0.999524, 1, 0, 0.500215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478289,-99) , 
2, -0.0782127, 0, 0, 0.495206,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.469962,-99) , 
2, 0.0714447, 1, 0, 0.487614,-99) , 
3, 4.68521, 1, 0, 0.497633,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0244046);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490034,-99) , 
9, 2.54586, 1, 0, 0.527397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486421,-99) , 
6, -951.286, 0, 0, 0.492729,-99) , 
5, 0.0101963, 0, 0, 0.49681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466484,-99) , 
5, 0.023792, 1, 0, 0.495675,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0216621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.52238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443789,-99) , 
9, 0.600881, 1, 0, 0.483453,-99) , 
3, 4.68763, 1, 0, 0.506464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497328,-99) , 
6, -951.286, 0, 0, 0.506861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483659,-99) , 
6, -951.286, 1, 0, 0.493094,-99) , 
7, -0.714296, 1, 0, 0.496582,-99) , 
2, 0.0714475, 0, 0, 0.498104,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0098177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52473,-99) , 
NN(
0, 
0, 
-1, 7.3125, 1, -1, 0.496821,-99) , 
3, 9.00366, 0, 0, 0.498087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475806,-99) , 
4, 0.999048, 0, 0, 0.497252,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0214752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471096,-99) , 
6, -951.286, 0, 0, 0.533525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495519,-99) , 
2, 0.0761644, 0, 0, 0.498151,-99) , 
4, 0.999524, 1, 0, 0.500507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474983,-99) , 
2, -0.153027, 0, 0, 0.495615,-99) , 
NN(
0, 
0, 
-1, 0.237979, 1, -1, 0.475961,-99) , 
2, 0.0714447, 1, 0, 0.489762,-99) , 
3, 4.69964, 1, 0, 0.498304,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0116828);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4996,-99) , 
8, 0.210688, 0, 0, 0.523228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498186,-99) , 
3, 9.1292, 0, 0, 0.499827,-99) , 
7, 1.57142, 0, 0, 0.501813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47307,-99) , 
4, 0.999048, 0, 0, 0.500751,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0150934);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493351,-99) , 
6, -951.286, 0, 0, 0.537581,-99) , 
NN(
0, 
0, 
-1, 0.0734948, 0, 1, 0.502743,-99) , 
4, 0.999524, 1, 0, 0.505106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489061,-99) , 
7, 0.42822, 0, 0, 0.496269,-99) , 
NN(
0, 
0, 
-1, 0.714247, 0, -1, 0.475686,-99) , 
9, 1.66489, 1, 0, 0.490106,-99) , 
3, 4.75487, 1, 0, 0.502113,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0131116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475972,-99) , 
6, -951.286, 1, 0, 0.499215,-99) , 
8, -3.71826, 0, 0, 0.508572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483654,-99) , 
9, 3.49106, 1, 0, 0.497336,-99) , 
7, -1.57141, 1, 0, 0.498222,-99) , 
9, -1.1656, 1, 0, 0.49966,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0248058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.62685, 1, 1, 0.54017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465251,-99) , 
3, 4.81114, 1, 0, 0.48932,-99) , 
6, -951.286, 0, 0, 0.511633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455773,-99) , 
7, -1.57145, 0, 0, 0.500947,-99) , 
NN(
0, 
0, 
-1, -1.57147, 0, -1, 0.488458,-99) , 
6, -951.286, 1, 0, 0.4956,-99) , 
2, -0.0713947, 1, 0, 0.498274,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.022538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467847,-99) , 
9, -0.30191, 1, 0, 0.522302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493635,-99) , 
0, 0.492376, 1, 0, 0.49591,-99) , 
4, 0.999524, 1, 0, 0.497604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469193,-99) , 
3, 9.50466, 1, 0, 0.496488,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0232061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.511952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431478,-99) , 
6, -1.57148, 0, 0, 0.505588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463285,-99) , 
7, -1.85713, 0, 0, 0.499993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429578,-99) , 
4, 0.999524, 0, 0, 0.495794,-99) , 
6, -951.286, 0, 0, 0.500041,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0318127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491072,-99) , 
7, -0.608078, 0, 0, 0.537678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464635,-99) , 
9, -0.428905, 1, 0, 0.495389,-99) , 
8, -2.51127, 0, 0, 0.503001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486086,-99) , 
5, 0.0124712, 0, 0, 0.490808,-99) , 
5, 0.0238088, 0, 0, 0.493068,-99) , 
9, 0.047316, 1, 0, 0.497021,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0210791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493201,-99) , 
3, 0.789955, 1, 0, 0.496811,-99) , 
4, 0.999048, 1, 0, 0.499157,-99) , 
NN(
0, 
0, 
-1, 0.0712359, 1, -1, 0.487079,-99) , 
3, 4.75894, 1, 0, 0.496739,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0104074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499524,-99) , 
3, 9.43295, 0, 0, 0.501757,-99) , 
NN(
0, 
0, 
-1, -1.00292, 1, -1, 0.483627,-99) , 
4, 0.999864, 0, 0, 0.499634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470687,-99) , 
4, 0.999048, 0, 0, 0.498561,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.014818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475893,-99) , 
6, -951.286, 0, 0, 0.52799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498359,-99) , 
7, 1.85707, 0, 0, 0.500322,-99) , 
4, 0.999524, 1, 0, 0.502118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472859,-99) , 
3, 9.52224, 1, 0, 0.500985,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0172764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.18778, 0, 1, 0.506368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449523,-99) , 
6, -951.286, 0, 0, 0.488377,-99) , 
4, 0.999524, 0, 0, 0.505198,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0176746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49951,-99) , 
5, 0.00977171, 0, 0, 0.503134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465808,-99) , 
9, 1.63495, 0, 0, 0.47673,-99) , 
5, 0.00113374, 0, 0, 0.498823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475344,-99) , 
5, 0.0238087, 1, 0, 0.497939,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0243729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497442,-99) , 
9, 1.33002, 1, 0, 0.506071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488555,-99) , 
4, 0.999524, 1, 0, 0.494494,-99) , 
8, -2.05071, 0, 0, 0.501141,-99) , 
7, -1.85714, 1, 0, 0.50214,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0205234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498599,-99) , 
4, 0.999989, 0, 0, 0.507641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471638,-99) , 
4, 0.999531, 1, 0, 0.484718,-99) , 
4, 0.999773, 0, 0, 0.50595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473394,-99) , 
4, 0.999048, 0, 0, 0.504762,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0137342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493676,-99) , 
7, 2.2381, 1, 0, 0.522747,-99) , 
NN(
NN(
0, 
0, 
-1, 1.93563, 0, 1, 0.504963,-99) , 
NN(
0, 
0, 
-1, 7.308, 0, -1, 0.487838,-99) , 
9, 4.9502, 1, 0, 0.503402,-99) , 
7, 1.85714, 0, 0, 0.504445,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0134114);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494582,-99) , 
6, -951.286, 0, 0, 0.518125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486305,-99) , 
9, 4.47128, 1, 0, 0.500951,-99) , 
7, 1.61224, 0, 0, 0.502395,-99) , 
7, -1.85713, 1, 0, 0.503604,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0233725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428489, 0, 1, 0.526437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493843,-99) , 
2, 0.00661074, 0, 0, 0.50228,-99) , 
2, -0.0676236, 1, 0, 0.505427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494628,-99) , 
9, 1.72449, 1, 0, 0.505008,-99) , 
NN(
0, 
0, 
-1, 0.0308553, 1, -1, 0.485607,-99) , 
7, 0.428525, 0, 0, 0.492586,-99) , 
3, 4.6529, 1, 0, 0.50277,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0220623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4978,-99) , 
4, 0.999996, 0, 0, 0.506884,-99) , 
NN(
0, 
0, 
-1, 4.62186, 1, -1, 0.484822,-99) , 
4, 0.999909, 0, 0, 0.503411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475298,-99) , 
4, 0.999048, 0, 0, 0.502364,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0145527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499497,-99) , 
7, 2.23807, 1, 0, 0.527976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484005,-99) , 
2, 0.0709579, 1, 0, 0.514412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48938,-99) , 
7, 1.16322, 1, 0, 0.501647,-99) , 
0, 0.493329, 1, 0, 0.503284,-99) , 
7, 1.8571, 0, 0, 0.504609,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0209625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47504,-99) , 
6, -951.286, 0, 0, 0.527784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465401,-99) , 
4, 0.999773, 0, 0, 0.504028,-99) , 
4, 0.999524, 1, 0, 0.505563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479867,-99) , 
3, 9.52058, 1, 0, 0.504554,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0186896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0108505, 0, 1, 0.504699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467786,-99) , 
9, 1.6422, 0, 0, 0.479088,-99) , 
5, 0.00113366, 0, 0, 0.500514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474321,-99) , 
5, 0.0238062, 1, 0, 0.499524,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0142183);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482968,-99) , 
5, 0.00113252, 0, 0, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47785,-99) , 
5, 0.0237868, 1, 0, 0.499289,-99) , 
7, -1.85715, 1, 0, 0.500368,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0224699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.711477, 1, 1, 0.523462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490337,-99) , 
8, -0.202016, 0, 0, 0.498901,-99) , 
2, -0.0717838, 1, 0, 0.503051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496895,-99) , 
8, -2.61925, 0, 0, 0.501981,-99) , 
NN(
0, 
0, 
-1, 2.34617, 0, -1, 0.487756,-99) , 
9, -0.307578, 1, 0, 0.494346,-99) , 
7, 0.428573, 0, 0, 0.497467,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0166288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496392,-99) , 
2, 0.0301089, 0, 0, 0.500475,-99) , 
4, 0.999048, 1, 0, 0.502495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476791,-99) , 
0, 0.494282, 0, 0, 0.496632,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.478727,-99) , 
9, 1.7999, 1, 0, 0.49168,-99) , 
3, 4.62894, 1, 0, 0.500237,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0161377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492187,-99) , 
9, 3.44597, 1, 0, 0.50758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495109,-99) , 
9, 2.70639, 0, 0, 0.497628,-99) , 
7, 0.428573, 0, 0, 0.501194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476207,-99) , 
0, 0.505709, 1, 0, 0.500395,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0104447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18769, 0, 1, 0.50266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419013,-99) , 
9, 1.28501, 1, 0, 0.485736,-99) , 
4, 0.999864, 0, 0, 0.500489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475112,-99) , 
4, 0.998572, 0, 0, 0.499852,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0157004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484388,-99) , 
7, 2.04762, 1, 0, 0.498044,-99) , 
6, -951.286, 0, 0, 0.51596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498204,-99) , 
2, 0.0827381, 0, 0, 0.501229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477207,-99) , 
9, 0.30907, 1, 0, 0.490384,-99) , 
3, 4.6091, 1, 0, 0.498953,-99) , 
7, 1.57142, 0, 0, 0.50041,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0157377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494097,-99) , 
3, 1.44988, 1, 0, 0.498627,-99) , 
2, -0.214186, 1, 0, 0.49975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472578,-99) , 
3, 9.42206, 1, 0, 0.498665,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0181024);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.57146, 0, 1, 0.509048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497663,-99) , 
8, -1.94104, 0, 0, 0.503495,-99) , 
NN(
0, 
0, 
-1, 1.17407, 1, -1, 0.486838,-99) , 
9, 0.641398, 1, 0, 0.498881,-99) , 
8, -0.0698689, 0, 0, 0.5017,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0158279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18778, 0, 1, 0.503315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458604,-99) , 
4, 0.999773, 0, 0, 0.501317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427276,-99) , 
6, -951.286, 0, 0, 0.475389,-99) , 
4, 0.999524, 0, 0, 0.499654,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0213587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496299,-99) , 
7, 0.0329533, 0, 0, 0.522618,-99) , 
NN(
0, 
0, 
-1, 0.724581, 1, -1, 0.495764,-99) , 
8, -2.43183, 0, 0, 0.502076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527953,-99) , 
NN(
0, 
0, 
-1, 4.77162, 1, -1, 0.489398,-99) , 
5, 0.0237841, 0, 0, 0.491545,-99) , 
9, 0.327366, 1, 0, 0.496401,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0121991);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499678,-99) , 
2, -0.044939, 1, 0, 0.50375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461922,-99) , 
9, 1.01672, 1, 0, 0.491127,-99) , 
4, 0.999909, 0, 0, 0.501753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475126,-99) , 
4, 0.999048, 0, 0, 0.500777,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0151076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.52218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486538,-99) , 
0, 0.497139, 1, 0, 0.496863,-99) , 
3, 4.8685, 1, 0, 0.512451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498166,-99) , 
2, 0.0423105, 0, 0, 0.501797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480231,-99) , 
2, 0.227514, 1, 0, 0.500843,-99) , 
2, -0.0716501, 1, 0, 0.502761,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0267284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28695, 1, 1, 0.52585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492328,-99) , 
8, -1.21278, 0, 0, 0.503329,-99) , 
2, -0.0717836, 1, 0, 0.507128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496467,-99) , 
0, 0.499043, 1, 0, 0.504754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463354,-99) , 
8, 1.74549, 0, 0, 0.48386,-99) , 
8, -0.821682, 1, 0, 0.498666,-99) , 
7, -0.142852, 0, 0, 0.503421,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0282942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.440308, 0, 1, 0.54717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463976,-99) , 
9, -0.0361119, 1, 0, 0.502477,-99) , 
8, -2.07745, 0, 0, 0.509007,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.517196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492367,-99) , 
5, 0.0237559, 0, 0, 0.495242,-99) , 
7, 1.57143, 0, 0, 0.49885,-99) , 
9, 0.464511, 1, 0, 0.503792,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0117084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497938,-99) , 
3, 1.00316, 1, 0, 0.500634,-99) , 
2, -0.211158, 1, 0, 0.501957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473577,-99) , 
3, 9.50853, 1, 0, 0.500862,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0254153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492819,-99) , 
7, -0.516623, 0, 0, 0.542464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466816,-99) , 
9, -0.458124, 1, 0, 0.503932,-99) , 
8, -2.56009, 0, 0, 0.511181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495729,-99) , 
8, -0.0833375, 0, 0, 0.501402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470639,-99) , 
2, -0.214593, 0, 0, 0.500132,-99) , 
9, 0.0148824, 1, 0, 0.504454,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0279617);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489743,-99) , 
9, 3.05546, 1, 0, 0.511368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49092,-99) , 
6, -951.286, 0, 0, 0.50025,-99) , 
7, -0.142897, 0, 0, 0.506497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47057,-99) , 
3, 9.52058, 1, 0, 0.505105,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.00920882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498321,-99) , 
2, 0.209278, 0, 0, 0.499212,-99) , 
3, 9.0526, 0, 0, 0.500672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474124,-99) , 
4, 0.999048, 0, 0, 0.499679,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0128854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477454,-99) , 
3, 7.02345, 1, 0, 0.502425,-99) , 
3, 9.18112, 0, 0, 0.50369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477138,-99) , 
4, 0.999048, 0, 0, 0.502703,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0210607);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474199,-99) , 
9, 3.26661, 1, 0, 0.518933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497837,-99) , 
8, 3.2358, 0, 0, 0.500297,-99) , 
5, 0.00793539, 0, 0, 0.503824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472245,-99) , 
5, 0.0238062, 1, 0, 0.502641,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0239785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496895,-99) , 
4, 0.999996, 0, 0, 0.507277,-99) , 
NN(
0, 
0, 
-1, 4.62186, 1, -1, 0.486928,-99) , 
4, 0.999909, 0, 0, 0.504071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473922,-99) , 
4, 0.999048, 0, 0, 0.502948,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0206229);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479521,-99) , 
6, -951.286, 0, 0, 0.528847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496657,-99) , 
2, -0.0125678, 1, 0, 0.502722,-99) , 
4, 0.999524, 1, 0, 0.504393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477156,-99) , 
3, 9.50466, 1, 0, 0.503339,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0268502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499646,-99) , 
7, -0.428649, 0, 0, 0.526574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476085,-99) , 
9, -0.0415753, 1, 0, 0.490061,-99) , 
3, 4.73802, 1, 0, 0.512327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482149,-99) , 
0, 0.504757, 1, 0, 0.507155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486003,-99) , 
2, 0.018, 0, 0, 0.497275,-99) , 
2, -0.00337889, 1, 0, 0.502632,-99) , 
2, 0.0714447, 0, 0, 0.504128,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0105944);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480525,-99) , 
3, 9.26255, 1, 0, 0.503653,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.013589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00294808, 1, 1, 0.530563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477086,-99) , 
0, 0.499044, 0, 0, 0.490833,-99) , 
3, 4.68763, 1, 0, 0.514924,-99) , 
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.508593,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.498338,-99) , 
7, 0.714252, 0, 0, 0.501073,-99) , 
2, 0.0714447, 0, 0, 0.503229,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.016181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0102022, 0, 1, 0.506523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472622,-99) , 
9, 6.71252, 1, 0, 0.504783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479121,-99) , 
5, 0.0238062, 1, 0, 0.503824,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0159411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487173,-99) , 
9, 0.173222, 1, 0, 0.501762,-99) , 
0, 0.5019, 0, 0, 0.511331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498223,-99) , 
0, 0.493056, 0, 0, 0.505856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495374,-99) , 
7, -1, 1, 0, 0.497084,-99) , 
0, 0.495233, 1, 0, 0.499101,-99) , 
2, 0.071449, 0, 0, 0.500979,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.00805169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499704,-99) , 
3, 9.42498, 0, 0, 0.50106,-99) , 
2, 0.214454, 0, 0, 0.50244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468726,-99) , 
4, 0.999048, 0, 0, 0.501207,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0282407);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492844,-99) , 
9, 1.66901, 1, 0, 0.508205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47808,-99) , 
8, -0.720673, 0, 0, 0.488092,-99) , 
5, 0.00113349, 0, 0, 0.504927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480857,-99) , 
5, 0.0238062, 1, 0, 0.504017,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0207991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.05918, 0, 1, 0.507178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452451,-99) , 
4, 0.999705, 0, 0, 0.505693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442454,-99) , 
6, -951.286, 0, 0, 0.482341,-99) , 
4, 0.999524, 0, 0, 0.504181,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0118467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492765,-99) , 
6, -951.286, 0, 0, 0.50409,-99) , 
2, 0.071504, 0, 0, 0.509161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522291,-99) , 
NN(
0, 
0, 
-1, 3.71091, 1, -1, 0.497417,-99) , 
7, 1.85707, 0, 0, 0.498789,-99) , 
0, 0.5019, 0, 0, 0.500718,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0194854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484661,-99) , 
6, -951.286, 0, 0, 0.531858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495709,-99) , 
8, -0.150129, 0, 0, 0.49988,-99) , 
4, 0.999524, 1, 0, 0.502043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488897,-99) , 
0, 0.502172, 1, 0, 0.501505,-99) , 
NN(
0, 
0, 
-1, -0.142975, 0, -1, 0.486252,-99) , 
0, 0.499996, 0, 0, 0.492024,-99) , 
3, 4.68114, 1, 0, 0.499989,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.019684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468438,-99) , 
9, 2.514, 1, 0, 0.503341,-99) , 
8, 1.23752, 0, 0, 0.505206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483156,-99) , 
7, 0.431588, 1, 0, 0.506035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478605,-99) , 
6, -951.286, 1, 0, 0.49427,-99) , 
9, 3.2999, 1, 0, 0.503578,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0148882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497839,-99) , 
2, 0.173277, 0, 0, 0.49913,-99) , 
3, 9.18804, 0, 0, 0.50097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43678,-99) , 
6, -951.286, 0, 0, 0.479632,-99) , 
4, 0.999524, 0, 0, 0.499594,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0166814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499466,-99) , 
2, -0.0107666, 1, 0, 0.510177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495446,-99) , 
2, 0.0698052, 0, 0, 0.498082,-99) , 
3, 1.45081, 1, 0, 0.502996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485459,-99) , 
0, 0.5019, 1, 0, 0.499536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462065,-99) , 
0, 0.498092, 1, 0, 0.479878,-99) , 
9, 1.62454, 1, 0, 0.493621,-99) , 
3, 4.8082, 1, 0, 0.501154,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0157084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491066,-99) , 
6, -951.286, 0, 0, 0.526685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477845,-99) , 
4, 0.999841, 0, 0, 0.502116,-99) , 
4, 0.999524, 1, 0, 0.503688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479964,-99) , 
3, 9.52666, 1, 0, 0.50277,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0209986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496481,-99) , 
6, -951.286, 1, 0, 0.50819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473583,-99) , 
7, 2.18362, 1, 0, 0.506115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493299,-99) , 
9, -0.757207, 1, 0, 0.50087,-99) , 
NN(
0, 
0, 
-1, 1.96781, 0, -1, 0.485754,-99) , 
8, -1.00913, 1, 0, 0.496032,-99) , 
7, 0.142833, 0, 0, 0.500651,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0115154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499455,-99) , 
2, -0.0592696, 1, 0, 0.502309,-99) , 
2, 0.176969, 0, 0, 0.50362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497324,-99) , 
7, 0.440727, 0, 0, 0.501985,-99) , 
NN(
0, 
0, 
-1, -0.71423, 0, -1, 0.485002,-99) , 
6, -951.286, 0, 0, 0.492501,-99) , 
3, 4.75894, 1, 0, 0.501413,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0252405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496949,-99) , 
4, 0.999977, 0, 0, 0.509681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479722,-99) , 
4, 0.999524, 0, 0, 0.508256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498376,-99) , 
8, -3.9113, 1, 0, 0.51132,-99) , 
NN(
0, 
0, 
-1, -0.939244, 1, -1, 0.485046,-99) , 
6, -951.286, 1, 0, 0.497404,-99) , 
8, -2.82985, 0, 0, 0.505389,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0177734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.508253,-99) , 
NN(
0, 
0, 
-1, -0.713536, 0, -1, 0.488668,-99) , 
4, 0.999864, 0, 0, 0.505988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483967,-99) , 
4, 0.999048, 0, 0, 0.505167,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0104717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.536474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499482,-99) , 
7, -1.85713, 1, 0, 0.500931,-99) , 
4, 0.999524, 1, 0, 0.503253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469196,-99) , 
3, 9.42206, 1, 0, 0.501898,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0136268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0047027, 0, 1, 0.522664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498657,-99) , 
4, 0.999524, 1, 0, 0.500415,-99) , 
3, 0.775098, 1, 0, 0.504248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485877,-99) , 
0, 0.502308, 1, 0, 0.496792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474221,-99) , 
0, 0.495233, 0, 0, 0.49182,-99) , 
3, 4.80413, 1, 0, 0.50183,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.025856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.544336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493447,-99) , 
8, -2.7107, 0, 0, 0.505962,-99) , 
4, 0.999524, 1, 0, 0.508571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481538,-99) , 
2, 0.0778295, 1, 0, 0.499659,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.479241,-99) , 
2, -0.0717836, 0, 0, 0.493032,-99) , 
3, 4.8082, 1, 0, 0.505537,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.00978279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.05944, 0, 1, 0.502931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470573,-99) , 
4, 0.999683, 0, 0, 0.501305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479006,-99) , 
4, 0.999048, 0, 0, 0.500468,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0102657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.79352, 0, 1, 0.503659,-99) , 
NN(
0, 
0, 
-1, -0.142748, 0, -1, 0.485278,-99) , 
4, 0.999773, 0, 0, 0.502311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477672,-99) , 
4, 0.999048, 0, 0, 0.501397,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.017589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472535,-99) , 
3, 7.21425, 1, 0, 0.502628,-99) , 
3, 9.42864, 0, 0, 0.504329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45205,-99) , 
6, -951.286, 0, 0, 0.488231,-99) , 
4, 0.999524, 0, 0, 0.503284,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0218346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143074, 0, 1, 0.521523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488649,-99) , 
9, -0.15899, 1, 0, 0.495056,-99) , 
5, 0.0113375, 0, 0, 0.49749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475844,-99) , 
5, 0.0238087, 1, 0, 0.496672,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.016797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493196,-99) , 
3, 1.45081, 1, 0, 0.498025,-99) , 
2, -0.214186, 1, 0, 0.49948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478969,-99) , 
3, 9.50853, 1, 0, 0.49869,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0238033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.62955, 0, 1, 0.520047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486266,-99) , 
0, 0.502217, 1, 0, 0.494837,-99) , 
6, -951.286, 0, 0, 0.505683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492966,-99) , 
8, -1.95563, 0, 0, 0.498432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483699,-99) , 
8, 1.26278, 0, 0, 0.49028,-99) , 
9, 0.68415, 1, 0, 0.494686,-99) , 
0, 0.500947, 0, 0, 0.497451,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.00924826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.83823, 0, 1, 0.502448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4728,-99) , 
4, 0.999683, 0, 0, 0.500985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470169,-99) , 
4, 0.999048, 0, 0, 0.49986,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0171312);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47922,-99) , 
7, -0.714333, 0, 0, 0.508035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493822,-99) , 
3, 9.40614, 0, 0, 0.494638,-99) , 
0, 0.493329, 1, 0, 0.496306,-99) , 
2, 0.214243, 0, 0, 0.497399,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.012642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489699,-99) , 
6, -951.286, 0, 0, 0.531338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499332,-99) , 
4, 0.999955, 1, 0, 0.502384,-99) , 
4, 0.999524, 1, 0, 0.504311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488577,-99) , 
2, -0.0717788, 0, 0, 0.496625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471773,-99) , 
0, 0.502852, 1, 0, 0.492614,-99) , 
3, 4.8082, 1, 0, 0.502025,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0188443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.75102, 0, 1, 0.505583,-99) , 
NN(
0, 
0, 
-1, -3.14061, 1, -1, 0.478939,-99) , 
7, -1.57143, 0, 0, 0.503204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548829,-99) , 
NN(
0, 
0, 
-1, 3.38091, 1, -1, 0.487168,-99) , 
7, -0.999439, 1, 0, 0.493064,-99) , 
9, 1.97841, 1, 0, 0.500529,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0176262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495799,-99) , 
8, -1.18616, 0, 0, 0.503536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49226,-99) , 
8, 3.2358, 0, 0, 0.494125,-99) , 
7, -0.142912, 0, 0, 0.499393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46808,-99) , 
4, 0.999048, 0, 0, 0.498252,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0137613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496975,-99) , 
2, 0.0302124, 0, 0, 0.500396,-99) , 
2, -0.214584, 1, 0, 0.501769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474429,-99) , 
3, 9.42372, 1, 0, 0.500685,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0226314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.300048, 0, 1, 0.534955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447465,-99) , 
7, 0.82432, 1, 0, 0.500159,-99) , 
8, -2.14845, 0, 0, 0.505656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489457,-99) , 
6, -951.286, 0, 0, 0.495395,-99) , 
5, 0.0238087, 0, 0, 0.498234,-99) , 
9, 0.427962, 1, 0, 0.501815,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0153314);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497295,-99) , 
5, 0.0102036, 0, 0, 0.500478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470963,-99) , 
9, 6.32278, 1, 0, 0.498764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467353,-99) , 
5, 0.0238087, 1, 0, 0.497613,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.00741839);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214966, 0, 1, 0.502805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472441,-99) , 
4, 0.999048, 0, 0, 0.501697,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0234325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.522628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49357,-99) , 
2, 0.0307776, 0, 0, 0.498801,-99) , 
2, -0.0422465, 1, 0, 0.503206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48869,-99) , 
8, -3.07462, 0, 0, 0.49807,-99) , 
NN(
0, 
0, 
-1, 0.497139, 1, -1, 0.482887,-99) , 
9, 0.0308553, 1, 0, 0.489008,-99) , 
3, 4.80413, 1, 0, 0.500438,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.00759298);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499452,-99) , 
2, 0.0307177, 0, 0, 0.50849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463362,-99) , 
5, 0.0238087, 1, 0, 0.498929,-99) , 
0, 0.5019, 0, 0, 0.500664,-99) , 
2, -0.214096, 1, 0, 0.5016,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.021023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497157,-99) , 
4, 0.999996, 0, 0, 0.504823,-99) , 
NN(
0, 
0, 
-1, -0.713996, 0, -1, 0.481885,-99) , 
4, 0.999909, 0, 0, 0.501219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473539,-99) , 
4, 0.999048, 0, 0, 0.500201,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0235364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.651686, 0, 1, 0.507176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457795,-99) , 
8, -2.51995, 1, 0, 0.487006,-99) , 
7, -1.57144, 0, 0, 0.505408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477564,-99) , 
6, -951.286, 1, 0, 0.50495,-99) , 
NN(
0, 
0, 
-1, 2.98015, 1, -1, 0.48288,-99) , 
8, 1.88087, 0, 0, 0.495605,-99) , 
9, 2.08702, 1, 0, 0.502968,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0157624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494684,-99) , 
8, -0.675353, 0, 0, 0.501547,-99) , 
2, -0.0721715, 1, 0, 0.506227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499852,-99) , 
0, 0.502988, 1, 0, 0.504184,-99) , 
NN(
0, 
0, 
-1, 0.0714475, 1, -1, 0.492719,-99) , 
0, 0.5019, 0, 0, 0.494869,-99) , 
7, 0.714287, 0, 0, 0.497899,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0212409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489313,-99) , 
9, 1.23588, 1, 0, 0.50343,-99) , 
8, 1.17871, 0, 0, 0.505437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487321,-99) , 
3, 2.39079, 0, 0, 0.496301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47782,-99) , 
8, 4.36709, 0, 0, 0.490562,-99) , 
9, 3.71091, 1, 0, 0.503514,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0189676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499758,-99) , 
5, 0.00793526, 0, 0, 0.504633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466818,-99) , 
5, 0.00453464, 1, 0, 0.491162,-99) , 
9, 3.15479, 1, 0, 0.50268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476228,-99) , 
5, 0.0238087, 1, 0, 0.5017,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0146075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.52428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497507,-99) , 
8, 0.0373206, 0, 0, 0.50103,-99) , 
4, 0.999524, 1, 0, 0.502559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491071,-99) , 
7, -0.423199, 0, 0, 0.501917,-99) , 
NN(
0, 
0, 
-1, 0.714257, 0, -1, 0.485888,-99) , 
9, 0.0308553, 1, 0, 0.492355,-99) , 
3, 4.8082, 1, 0, 0.500565,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0192838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0682296, 1, 1, 0.512507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479572,-99) , 
4, 0.999909, 0, 0, 0.500258,-99) , 
7, 0.428575, 0, 0, 0.504653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463927,-99) , 
4, 0.999048, 0, 0, 0.503195,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0113822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480279,-99) , 
3, 7.27007, 1, 0, 0.50323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478603,-99) , 
3, 9.50853, 1, 0, 0.502278,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0084544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478222,-99) , 
3, 6.16327, 1, 0, 0.499289,-99) , 
2, 0.213801, 0, 0, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482613,-99) , 
3, 9.18438, 1, 0, 0.499698,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0114131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537497,-99) , 
NN(
0, 
0, 
-1, 2.47338, 1, -1, 0.498214,-99) , 
8, 1.19506, 0, 0, 0.500296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480463,-99) , 
6, -951.286, 1, 0, 0.498587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472044,-99) , 
8, 4.3386, 0, 0, 0.490478,-99) , 
9, 3.71091, 1, 0, 0.499019,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0213213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453255,-99) , 
6, -0.715136, 0, 0, 0.513439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471968,-99) , 
9, 2.04462, 1, 0, 0.500246,-99) , 
6, -951.286, 0, 0, 0.505574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498123,-99) , 
0, 0.502308, 0, 0, 0.499664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484317,-99) , 
0, 0.504757, 1, 0, 0.498795,-99) , 
7, 0.714286, 0, 0, 0.500605,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0217596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0760458, 0, 1, 0.505717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4537,-99) , 
8, -3.06952, 1, 0, 0.477612,-99) , 
7, -1.57144, 0, 0, 0.503282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477621,-99) , 
6, -951.286, 1, 0, 0.506081,-99) , 
NN(
0, 
0, 
-1, 0.519249, 0, -1, 0.483134,-99) , 
8, 2.08482, 0, 0, 0.49634,-99) , 
9, 2.18202, 1, 0, 0.501616,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0136211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48864,-99) , 
9, 3.77212, 1, 0, 0.502934,-99) , 
7, 2.14285, 0, 0, 0.503609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479451,-99) , 
7, 0.143637, 0, 0, 0.489377,-99) , 
0, 0.492376, 0, 0, 0.502361,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0152966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496447,-99) , 
8, 1.42847, 0, 0, 0.497831,-99) , 
8, 3.29363, 0, 0, 0.499324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492745,-99) , 
7, -1.00004, 1, 0, 0.496311,-99) , 
NN(
0, 
0, 
-1, 0.142827, 0, -1, 0.471961,-99) , 
2, 0.0710222, 1, 0, 0.49248,-99) , 
0, 0.497138, 0, 0, 0.496647,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0141963);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469506,-99) , 
4, 0.999524, 0, 0, 0.503088,-99) , 
NN(
0, 
0, 
-1, -1.57153, 0, -1, 0.493559,-99) , 
6, -951.286, 1, 0, 0.498954,-99) , 
7, -1.85713, 1, 0, 0.499805,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0207115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493093,-99) , 
5, 0.00340086, 0, 0, 0.502076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457261,-99) , 
5, 0.0238062, 1, 0, 0.50081,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.481691,-99) , 
9, 5.6637, 1, 0, 0.499332,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0150659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495191,-99) , 
8, 0.0184867, 0, 0, 0.498267,-99) , 
4, 0.999524, 1, 0, 0.500438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478633,-99) , 
3, 9.11461, 1, 0, 0.499492,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0117347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496282,-99) , 
8, -0.0576743, 1, 0, 0.516879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499456,-99) , 
4, 0.999524, 1, 0, 0.500877,-99) , 
2, -0.0686331, 1, 0, 0.502976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490089,-99) , 
0, 0.498092, 1, 0, 0.503465,-99) , 
NN(
0, 
0, 
-1, -0.129792, 1, -1, 0.487636,-99) , 
8, -0.153386, 0, 0, 0.4921,-99) , 
3, 4.8082, 1, 0, 0.500848,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0153051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496182,-99) , 
9, -0.671381, 0, 0, 0.519589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489097,-99) , 
9, 3.15215, 1, 0, 0.502024,-99) , 
7, -1.57143, 1, 0, 0.503357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478346,-99) , 
4, 0.999048, 0, 0, 0.502441,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0127925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497336,-99) , 
2, 0.207225, 0, 0, 0.498177,-99) , 
3, 9.12647, 0, 0, 0.500165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457514,-99) , 
4, 0.999048, 0, 0, 0.498669,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0087196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.378779, 1, 1, 0.522524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499279,-99) , 
2, -0.214584, 1, 0, 0.500613,-99) , 
3, 0.570603, 1, 0, 0.502421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47855,-99) , 
3, 9.52224, 1, 0, 0.501513,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0113246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494038,-99) , 
6, -951.286, 0, 0, 0.526853,-99) , 
NN(
0, 
0, 
-1, -1.85711, 1, 1, 0.501704,-99) , 
4, 0.999524, 1, 0, 0.503357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488342,-99) , 
0, 0.497137, 1, 0, 0.496703,-99) , 
NN(
0, 
0, 
-1, 0.143029, 0, -1, 0.482527,-99) , 
2, 0.0712316, 1, 0, 0.492417,-99) , 
3, 4.75894, 1, 0, 0.501195,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0202879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28629, 0, 1, 0.510219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455605,-99) , 
6, -1.57159, 0, 0, 0.505703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462261,-99) , 
4, 0.999524, 0, 0, 0.500499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437026,-99) , 
7, -1.85714, 0, 0, 0.497248,-99) , 
6, -951.286, 0, 0, 0.50091,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0126147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489401,-99) , 
9, 2.04326, 1, 0, 0.517006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4911,-99) , 
7, -0.714162, 0, 0, 0.51056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490538,-99) , 
8, -2.67883, 0, 0, 0.497747,-99) , 
7, -1.85714, 1, 0, 0.498613,-99) , 
2, 0.071449, 0, 0, 0.500449,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0116527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494534,-99) , 
7, -0.142759, 0, 0, 0.508219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485965,-99) , 
9, -0.871234, 0, 0, 0.504558,-99) , 
NN(
0, 
0, 
-1, 3.32423, 1, -1, 0.49674,-99) , 
7, -1.2857, 1, 0, 0.497663,-99) , 
0, 0.503805, 0, 0, 0.498618,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0200976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28592, 0, 1, 0.507633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457489,-99) , 
6, -1.5716, 0, 0, 0.503534,-99) , 
NN(
NN(
0, 
0, 
-1, -3.85124, 1, 1, 0.523723,-99) , 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.492247,-99) , 
8, -3.39061, 1, 0, 0.496115,-99) , 
6, -951.286, 0, 0, 0.499325,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.011955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.4289, 0, 1, 0.503728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450503,-99) , 
7, -0.714166, 0, 0, 0.490901,-99) , 
4, 0.999909, 0, 0, 0.501703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477098,-99) , 
4, 0.999048, 0, 0, 0.500807,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.00825074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142835, 1, 1, 0.509238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498237,-99) , 
3, 9.40614, 0, 0, 0.498933,-99) , 
0, 0.503986, 0, 0, 0.499876,-99) , 
NN(
0, 
0, 
-1, -0.142904, 0, -1, 0.48356,-99) , 
0, 0.492376, 0, 0, 0.498459,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.00842791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49868,-99) , 
0, 0.493329, 1, 0, 0.500127,-99) , 
4, 0.999048, 1, 0, 0.501253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477396,-99) , 
3, 9.50853, 1, 0, 0.500345,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.011969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49753,-99) , 
8, 0.874947, 0, 0, 0.500353,-99) , 
4, 0.999048, 1, 0, 0.501477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47682,-99) , 
3, 9.40614, 1, 0, 0.500492,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0180232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0911112, 0, 1, 0.53266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448353,-99) , 
9, 0.145395, 1, 0, 0.503302,-99) , 
8, -2.06952, 0, 0, 0.507003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483627,-99) , 
9, 3.40622, 1, 0, 0.496171,-99) , 
5, 0.023792, 0, 0, 0.497794,-99) , 
9, 0.396228, 1, 0, 0.50217,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.00884312);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42498, 0, 1, 0.503305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465325,-99) , 
4, 0.999048, 0, 0, 0.501953,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0108022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497747,-99) , 
3, 9.42899, 0, 0, 0.499052,-99) , 
2, 0.213801, 0, 0, 0.500421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473436,-99) , 
4, 0.999048, 0, 0, 0.499449,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0140385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85715, 1, 1, 0.503851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486236,-99) , 
7, 0.142877, 0, 0, 0.494881,-99) , 
0, 0.500358, 1, 0, 0.500953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510797,-99) , 
NN(
0, 
0, 
-1, 0.491404, 0, -1, 0.474003,-99) , 
0, 0.490109, 1, 0, 0.487957,-99) , 
0, 0.492376, 0, 0, 0.499817,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0105929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.53367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498346,-99) , 
7, -1.85715, 1, 0, 0.499573,-99) , 
4, 0.999524, 1, 0, 0.501783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481076,-99) , 
3, 9.40614, 1, 0, 0.500962,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0179556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460997,-99) , 
9, 2.67835, 1, 0, 0.504108,-99) , 
8, 1.40733, 0, 0, 0.505284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488155,-99) , 
3, 2.38206, 0, 0, 0.498029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47198,-99) , 
8, 3.62114, 0, 0, 0.490803,-99) , 
9, 3.46934, 1, 0, 0.503259,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0126527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.415499, 1, 1, 0.523737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489279,-99) , 
8, -2.79302, 0, 0, 0.49891,-99) , 
4, 0.999524, 1, 0, 0.500489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476882,-99) , 
3, 9.50466, 1, 0, 0.499571,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0159569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.91168, 1, 1, 0.535824,-99) , 
NN(
0, 
0, 
-1, -0.966254, 0, -1, 0.485323,-99) , 
6, -951.286, 1, 0, 0.508256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495565,-99) , 
9, -0.0850468, 1, 0, 0.497747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463736,-99) , 
7, -1.85712, 0, 0, 0.496647,-99) , 
8, -3.47737, 1, 0, 0.498255,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0161917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492496,-99) , 
7, -0.0214584, 0, 0, 0.517725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466913,-99) , 
9, -0.175484, 1, 0, 0.499356,-99) , 
8, -2.38356, 0, 0, 0.50333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522963,-99) , 
NN(
0, 
0, 
-1, -0.142858, 0, -1, 0.495689,-99) , 
5, 0.023792, 0, 0, 0.497163,-99) , 
9, 0.327366, 1, 0, 0.500002,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0157416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483909,-99) , 
9, 2.49745, 1, 0, 0.510605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496779,-99) , 
8, 2.21059, 0, 0, 0.499124,-99) , 
5, 0.0101797, 0, 0, 0.500463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473133,-99) , 
5, 0.0237526, 1, 0, 0.499437,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0216982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494559,-99) , 
8, 2.52061, 1, 0, 0.519794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485261,-99) , 
8, 2.97515, 0, 0, 0.498641,-99) , 
6, -951.286, 0, 0, 0.506808,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496453,-99) , 
8, -1.53765, 0, 0, 0.499627,-99) , 
NN(
0, 
0, 
-1, -0.386907, 0, -1, 0.474848,-99) , 
9, 1.41993, 1, 0, 0.496979,-99) , 
8, 0.0184867, 0, 0, 0.499597,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.00749218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498501,-99) , 
6, -951.286, 0, 0, 0.527751,-99) , 
NN(
0, 
0, 
-1, 0.205194, 0, 1, 0.501606,-99) , 
4, 0.999524, 1, 0, 0.503287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488017,-99) , 
3, 9.26255, 1, 0, 0.502646,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.00954571);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12546, 0, 1, 0.504184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479708,-99) , 
4, 0.999048, 0, 0, 0.503289,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0108125);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499564,-99) , 
6, -951.286, 1, 0, 0.511813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497339,-99) , 
8, -4.27994, 1, 0, 0.49863,-99) , 
8, 3.19208, 0, 0, 0.5001,-99) , 
2, 0.214819, 0, 0, 0.501049,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0106729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18896, 0, 1, 0.501879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459866,-99) , 
4, 0.999705, 0, 0, 0.500743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446123,-99) , 
6, -951.286, 0, 0, 0.486902,-99) , 
4, 0.999524, 0, 0, 0.499854,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.00752178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494005,-99) , 
9, 0.725063, 1, 0, 0.49983,-99) , 
6, -951.286, 0, 0, 0.509207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478064,-99) , 
9, 6.54644, 1, 0, 0.499358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479684,-99) , 
5, 0.0237525, 1, 0, 0.498627,-99) , 
0, 0.502852, 0, 0, 0.500014,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0133463);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471253,-99) , 
4, 0.999524, 0, 0, 0.503558,-99) , 
NN(
0, 
0, 
-1, -1.57148, 0, -1, 0.495086,-99) , 
6, -951.286, 1, 0, 0.499869,-99) , 
7, -1.85713, 1, 0, 0.50078,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.00665874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526289,-99) , 
NN(
0, 
0, 
-1, 7.41189, 1, -1, 0.498585,-99) , 
3, 9.12647, 0, 0, 0.499772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474175,-99) , 
4, 0.999048, 0, 0, 0.498841,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.022014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496489,-99) , 
4, 0.999999, 0, 0, 0.506246,-99) , 
NN(
0, 
0, 
-1, 4.77855, 1, -1, 0.493205,-99) , 
4, 0.999977, 0, 0, 0.501704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452877,-99) , 
9, -0.265362, 1, 0, 0.480967,-99) , 
4, 0.999524, 0, 0, 0.500386,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0151453);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.00265, 0, 1, 0.507235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483488,-99) , 
4, 0.999048, 0, 0, 0.506371,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.00887487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491507,-99) , 
6, -951.286, 0, 0, 0.512133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486155,-99) , 
9, 4.69282, 1, 0, 0.499271,-99) , 
7, 1.57142, 0, 0, 0.500362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477155,-99) , 
0, 0.490472, 0, 0, 0.499473,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.015088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499503,-99) , 
7, 0.142865, 1, 0, 0.508998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490505,-99) , 
2, 0.0713993, 1, 0, 0.501667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487402,-99) , 
7, 0.999979, 0, 0, 0.490962,-99) , 
0, 0.498408, 1, 0, 0.497106,-99) , 
0, 0.503805, 0, 0, 0.498186,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.00965682);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.509953,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.521147,-99) , 
NN(
0, 
0, 
-1, -1.85712, 0, -1, 0.497501,-99) , 
8, -3.89502, 1, 0, 0.49963,-99) , 
8, 3.12661, 0, 0, 0.500793,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0136254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495085,-99) , 
4, 0.999955, 1, 0, 0.498201,-99) , 
4, 0.999048, 1, 0, 0.499334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482662,-99) , 
3, 9.50853, 1, 0, 0.498688,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0101048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18778, 0, 1, 0.503461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478218,-99) , 
4, 0.999683, 0, 0, 0.502193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47728,-99) , 
4, 0.999048, 0, 0, 0.501281,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0172325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142847, 0, 1, 0.524498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494922,-99) , 
1, -0.00310915, 0, 0, 0.515805,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492981,-99) , 
8, -0.93592, 0, 0, 0.502518,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.495884,-99) , 
6, -951.286, 0, 0, 0.498762,-99) , 
0, 0.503805, 0, 0, 0.500317,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00918468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499199,-99) , 
0, 0.493329, 1, 0, 0.500737,-99) , 
4, 0.999048, 1, 0, 0.502694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481498,-99) , 
3, 9.52351, 1, 0, 0.501892,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0105525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474935,-99) , 
3, 6.98333, 1, 0, 0.500225,-99) , 
4, 0.999048, 1, 0, 0.501869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472567,-99) , 
3, 9.12647, 1, 0, 0.500612,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0115313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.53331, 1, 1, 0.526952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475572,-99) , 
9, 1.44475, 1, 0, 0.493742,-99) , 
6, -951.286, 0, 0, 0.508241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498849,-99) , 
7, -1.85714, 1, 0, 0.49991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476136,-99) , 
0, 0.491424, 0, 0, 0.49869,-99) , 
2, -0.0714407, 1, 0, 0.500278,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.00874013);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499137,-99) , 
8, 0.717956, 0, 0, 0.501192,-99) , 
NN(
0, 
0, 
-1, 4.6344, 0, -1, 0.489224,-99) , 
9, 3.77212, 1, 0, 0.499691,-99) , 
7, 2.14277, 0, 0, 0.500425,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0290454);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474414,-99) , 
4, 0.999887, 0, 0, 0.508581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473102,-99) , 
4, 0.999524, 0, 0, 0.506994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495621,-99) , 
8, -3.69381, 1, 0, 0.511585,-99) , 
NN(
0, 
0, 
-1, 0.0567811, 1, -1, 0.482903,-99) , 
6, -951.286, 1, 0, 0.496666,-99) , 
8, -2.79302, 0, 0, 0.504188,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0207571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.421613, 1, 1, 0.521442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489956,-99) , 
7, -0.7142, 0, 0, 0.513644,-99) , 
NN(
NN(
0, 
0, 
-1, -3.31372, 1, 1, 0.506456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471977,-99) , 
2, 0.0038326, 0, 0, 0.496349,-99) , 
2, -0.00329276, 1, 0, 0.501836,-99) , 
2, 0.0715225, 0, 0, 0.503665,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0135016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454929,-99) , 
9, 2.56677, 1, 0, 0.49879,-99) , 
8, 1.49497, 0, 0, 0.500288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486854,-99) , 
0, 0.498096, 0, 0, 0.497896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454694,-99) , 
8, 4.54175, 0, 0, 0.484743,-99) , 
9, 3.80033, 1, 0, 0.498323,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0224252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49235,-99) , 
6, -951.286, 0, 0, 0.521611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464839,-99) , 
9, -0.206878, 1, 0, 0.49799,-99) , 
8, -2.3937, 0, 0, 0.502877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488449,-99) , 
9, 3.32617, 1, 0, 0.499275,-99) , 
NN(
0, 
0, 
-1, 2.07237, 1, -1, 0.491323,-99) , 
8, 0.322529, 0, 0, 0.494761,-99) , 
9, 0.284153, 1, 0, 0.498408,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0147488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491391,-99) , 
8, -2.73684, 0, 0, 0.498759,-99) , 
3, 9.19092, 0, 0, 0.501264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449201,-99) , 
9, -0.297906, 1, 0, 0.485865,-99) , 
4, 0.999524, 0, 0, 0.500292,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.018825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.420612, 0, 1, 0.505088,-99) , 
NN(
0, 
0, 
-1, 3.38271, 0, -1, 0.486103,-99) , 
9, 3.27365, 1, 0, 0.501415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492581,-99) , 
7, -1.05443, 0, 0, 0.50101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48066,-99) , 
8, 3.12703, 0, 0, 0.485853,-99) , 
9, -0.294354, 1, 0, 0.493423,-99) , 
7, 0.142835, 0, 0, 0.497059,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0145223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494204,-99) , 
5, 0.00339977, 0, 0, 0.508013,-99) , 
NN(
0, 
0, 
-1, -1.8571, 0, -1, 0.494706,-99) , 
8, -3.43039, 1, 0, 0.496707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478255,-99) , 
5, 0.0238062, 1, 0, 0.496016,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0140476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495189,-99) , 
3, 0.556928, 1, 0, 0.496576,-99) , 
3, 9.18505, 0, 0, 0.49779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473252,-99) , 
4, 0.999048, 0, 0, 0.496918,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0184645);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49947,-99) , 
2, -0.0107666, 1, 0, 0.507747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492354,-99) , 
2, 0.214202, 0, 0, 0.493977,-99) , 
3, 1.42117, 1, 0, 0.498591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473973,-99) , 
3, 9.18637, 1, 0, 0.497537,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0131404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999998, 0, 1, 0.505581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46279,-99) , 
7, 0.999928, 1, 0, 0.494168,-99) , 
5, 0.00113362, 0, 0, 0.503716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480528,-99) , 
5, 0.0238062, 1, 0, 0.502848,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.00922838);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23809, 1, 1, 0.515855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494175,-99) , 
6, -951.286, 1, 0, 0.498341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48008,-99) , 
7, -2.07482, 0, 0, 0.497799,-99) , 
7, 1.8571, 0, 0, 0.498756,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0110927);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494325,-99) , 
9, 0.778545, 1, 0, 0.499603,-99) , 
8, 9.75954, 0, 0, 0.500325,-99) , 
2, -0.214276, 1, 0, 0.501132,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0100487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.502766,-99) , 
NN(
0, 
0, 
-1, 4.56046, 1, -1, 0.488049,-99) , 
4, 0.999909, 0, 0, 0.500458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473068,-99) , 
4, 0.999048, 0, 0, 0.499473,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0190813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49114,-99) , 
6, -0.143045, 1, 0, 0.500427,-99) , 
7, 1.57109, 0, 0, 0.503497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481087,-99) , 
7, 1.14967, 1, 0, 0.496971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433962,-99) , 
7, -1.85713, 0, 0, 0.493751,-99) , 
6, -951.286, 0, 0, 0.497974,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0101241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497647,-99) , 
4, 0.999048, 1, 0, 0.498613,-99) , 
2, -0.214584, 1, 0, 0.499959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478379,-99) , 
3, 9.18731, 1, 0, 0.499054,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.00886454);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491775,-99) , 
0, 0.494508, 0, 0, 0.500196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481469,-99) , 
0, 0.505709, 1, 0, 0.499585,-99) , 
7, 2.14285, 0, 0, 0.500312,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0194828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.179766, 0, 1, 0.526102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46992,-99) , 
9, -0.105438, 1, 0, 0.497655,-99) , 
8, -2.24597, 0, 0, 0.502865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492508,-99) , 
5, 0.013605, 0, 0, 0.494598,-99) , 
5, 0.0238087, 0, 0, 0.497256,-99) , 
9, 0.396228, 1, 0, 0.49992,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0128633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488067,-99) , 
7, 2.0476, 1, 0, 0.501675,-99) , 
6, -951.286, 0, 0, 0.512876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496499,-99) , 
4, 0.999524, 1, 0, 0.498073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482015,-99) , 
3, 9.52224, 1, 0, 0.497458,-99) , 
7, 1.57139, 0, 0, 0.498769,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0111285);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.520647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497438,-99) , 
2, 0.0709576, 0, 0, 0.499523,-99) , 
7, -1.84353, 1, 0, 0.500605,-99) , 
7, 1.8571, 0, 0, 0.501671,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0252589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28664, 0, 1, 0.508827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451501,-99) , 
6, -1.57142, 0, 0, 0.504196,-99) , 
NN(
NN(
0, 
0, 
-1, -0.428634, 1, 1, 0.519127,-99) , 
NN(
0, 
0, 
-1, 2.24913, 1, -1, 0.488219,-99) , 
8, 1.24861, 0, 0, 0.49369,-99) , 
6, -951.286, 0, 0, 0.498236,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0131184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999878, 0, 1, 0.511166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497796,-99) , 
2, 0.0976313, 0, 0, 0.500245,-99) , 
2, -0.030633, 1, 0, 0.503243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48239,-99) , 
2, 0.214239, 1, 0, 0.502384,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0104649);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498381,-99) , 
2, -0.0193297, 1, 0, 0.501961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482082,-99) , 
2, -0.275796, 0, 0, 0.501369,-99) , 
2, 0.213826, 0, 0, 0.502133,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0187444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471585,-99) , 
9, 2.56304, 1, 0, 0.506828,-99) , 
6, -951.286, 0, 0, 0.515932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476673,-99) , 
7, -1.7755, 0, 0, 0.50484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475835,-99) , 
9, 2.85575, 1, 0, 0.496866,-99) , 
6, -951.286, 1, 0, 0.501335,-99) , 
7, 1.28568, 0, 0, 0.503237,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.016355);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496135,-99) , 
7, 0.142905, 0, 0, 0.516654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4911,-99) , 
4, 0.999977, 0, 0, 0.500575,-99) , 
4, 0.999524, 1, 0, 0.501599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480859,-99) , 
3, 9.40614, 1, 0, 0.500778,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0142896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498983,-99) , 
8, 0.388556, 0, 0, 0.505873,-99) , 
9, 0.481004, 1, 0, 0.509143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495576,-99) , 
0, 0.503532, 1, 0, 0.504844,-99) , 
NN(
0, 
0, 
-1, 4.50236, 1, -1, 0.494789,-99) , 
0, 0.5019, 0, 0, 0.496655,-99) , 
7, 0.714254, 0, 0, 0.499998,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0129432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498418,-99) , 
2, -0.0513915, 1, 0, 0.50076,-99) , 
2, -0.214599, 1, 0, 0.501724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527723,-99) , 
NN(
0, 
0, 
-1, -1.29543, 1, -1, 0.484866,-99) , 
8, 0.816998, 0, 0, 0.491287,-99) , 
7, -1, 0, 0, 0.499902,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0185457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00492874, 1, 1, 0.515973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495789,-99) , 
0, 0.504755, 0, 0, 0.497279,-99) , 
3, 1.22277, 1, 0, 0.503538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490718,-99) , 
7, 0.999932, 0, 0, 0.493902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477272,-99) , 
0, 0.502853, 1, 0, 0.491204,-99) , 
3, 4.80413, 1, 0, 0.501131,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0214855);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495186,-99) , 
4, 0.999977, 0, 0, 0.507448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470914,-99) , 
9, -0.558339, 1, 0, 0.495165,-99) , 
8, -2.66321, 0, 0, 0.503949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45402,-99) , 
6, -951.286, 0, 0, 0.481899,-99) , 
4, 0.999524, 0, 0, 0.50255,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0107086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497478,-99) , 
2, 0.209278, 0, 0, 0.498465,-99) , 
3, 9.12253, 0, 0, 0.499807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471107,-99) , 
4, 0.999048, 0, 0, 0.49877,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0192002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.746346, 0, 1, 0.516265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481287,-99) , 
8, 1.76598, 0, 0, 0.500538,-99) , 
9, 2.11375, 1, 0, 0.510439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497722,-99) , 
3, 1.18918, 1, 0, 0.502494,-99) , 
NN(
0, 
0, 
-1, -1.23117, 0, -1, 0.48938,-99) , 
3, 4.60092, 1, 0, 0.499758,-99) , 
7, 0.714286, 0, 0, 0.502604,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0197331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.934069, 0, 1, 0.51153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490178,-99) , 
7, 1.36734, 0, 0, 0.493799,-99) , 
9, 3.28435, 1, 0, 0.508114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491359,-99) , 
4, 0.999977, 0, 0, 0.502329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477914,-99) , 
4, 0.999524, 0, 0, 0.500814,-99) , 
7, 0.142861, 0, 0, 0.504141,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0118185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496878,-99) , 
3, 9.18769, 0, 0, 0.498241,-99) , 
NN(
0, 
0, 
-1, 0.999501, 1, -1, 0.480872,-99) , 
4, 0.999728, 0, 0, 0.49719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473204,-99) , 
4, 0.999048, 0, 0, 0.496328,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0129442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0712035, 0, 1, 0.506004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481765,-99) , 
3, 9.52224, 1, 0, 0.505078,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0162587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.24432, 0, 1, 0.510033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494332,-99) , 
9, -0.294354, 1, 0, 0.499726,-99) , 
7, 0.0611583, 0, 0, 0.503968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464854,-99) , 
8, -0.261836, 1, 0, 0.487656,-99) , 
6, -951.286, 0, 0, 0.494792,-99) , 
7, 1.28562, 1, 0, 0.502803,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.00563912);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479923,-99) , 
3, 9.50466, 1, 0, 0.501261,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0155417);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494696,-99) , 
3, 3.42557, 1, 0, 0.516536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489749,-99) , 
7, 0.142845, 0, 0, 0.494646,-99) , 
3, 4.73274, 1, 0, 0.507973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497332,-99) , 
9, 6.29204, 1, 0, 0.508363,-99) , 
NN(
0, 
0, 
-1, -1.70116, 0, -1, 0.49409,-99) , 
8, 2.7659, 0, 0, 0.495802,-99) , 
2, 0.0715678, 0, 0, 0.497681,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.00744207);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478741,-99) , 
3, 9.18438, 1, 0, 0.501887,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.00878404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.80284, 0, 1, 0.502609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463673,-99) , 
7, 0.428539, 0, 0, 0.486379,-99) , 
4, 0.999524, 0, 0, 0.501561,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.00560784);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.05918, 0, 1, 0.50204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476717,-99) , 
4, 0.999048, 0, 0, 0.50113,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0153595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499853,-99) , 
3, 4.68891, 1, 0, 0.516249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48492,-99) , 
7, -1.00009, 0, 0, 0.510823,-99) , 
NN(
NN(
0, 
0, 
-1, -0.713919, 1, 1, 0.50809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491641,-99) , 
8, -1.89226, 0, 0, 0.496192,-99) , 
8, 0.990198, 0, 0, 0.498439,-99) , 
2, 0.0714447, 0, 0, 0.500344,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0071001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499693,-99) , 
8, 1.96928, 0, 0, 0.501532,-99) , 
NN(
0, 
0, 
-1, 8.2964, 0, -1, 0.487669,-99) , 
9, 5.1036, 1, 0, 0.500313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480129,-99) , 
0, 0.505709, 1, 0, 0.499667,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0103661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498329,-99) , 
2, 0.0303398, 0, 0, 0.50111,-99) , 
2, -0.214432, 1, 0, 0.502276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482195,-99) , 
3, 9.52058, 1, 0, 0.501504,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.00999228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498812,-99) , 
7, 1.85707, 0, 0, 0.500055,-99) , 
3, 9.42872, 0, 0, 0.501901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465273,-99) , 
6, -951.286, 0, 0, 0.483109,-99) , 
4, 0.999524, 0, 0, 0.500694,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.00975288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.449874, 1, 1, 0.502858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474566,-99) , 
3, 6.98705, 1, 0, 0.501457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475241,-99) , 
3, 9.13219, 1, 0, 0.500321,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0116394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499618,-99) , 
7, -0.717415, 0, 0, 0.519444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492757,-99) , 
9, 1.70854, 1, 0, 0.511563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510808,-99) , 
NN(
0, 
0, 
-1, 3.77663, 1, -1, 0.4967,-99) , 
8, 4.74026, 0, 0, 0.497913,-99) , 
2, 0.0712316, 0, 0, 0.500035,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0113922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499151,-99) , 
4, 0.999955, 1, 0, 0.502539,-99) , 
4, 0.999048, 1, 0, 0.503887,-99) , 
NN(
0, 
0, 
-1, 1.98427, 1, -1, 0.49182,-99) , 
3, 4.8082, 1, 0, 0.501538,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0161347);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523195,-99) , 
NN(
NN(
0, 
0, 
-1, -1.73613, 0, 1, 0.506272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492887,-99) , 
5, 0.0238088, 0, 0, 0.495684,-99) , 
9, 1.09162, 1, 0, 0.502028,-99) , 
7, -1.85714, 1, 0, 0.502994,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0138406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472918,-99) , 
9, 2.58934, 1, 0, 0.50154,-99) , 
8, 1.39256, 0, 0, 0.503579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487437,-99) , 
3, 1.61322, 0, 0, 0.498176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481496,-99) , 
3, 3.58434, 1, 0, 0.493234,-99) , 
9, 3.84667, 1, 0, 0.502306,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0179331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494874,-99) , 
9, -1.02101, 1, 0, 0.49705,-99) , 
3, 9.18896, 0, 0, 0.499264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451763,-99) , 
6, -951.286, 0, 0, 0.480596,-99) , 
4, 0.999524, 0, 0, 0.498068,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0134134);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487824,-99) , 
9, 5.0461, 1, 0, 0.502692,-99) , 
7, 1.85706, 0, 0, 0.503734,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.481484,-99) , 
4, 0.999524, 0, 0, 0.502309,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0128884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496701,-99) , 
7, -1.85714, 1, 0, 0.497998,-99) , 
3, 9.42883, 0, 0, 0.499485,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.480395,-99) , 
4, 0.999524, 0, 0, 0.498253,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.01526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496612,-99) , 
2, 0.0222102, 0, 0, 0.500398,-99) , 
3, 9.12937, 0, 0, 0.502044,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.480679,-99) , 
4, 0.999524, 0, 0, 0.50069,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0112357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.2156, 1, 1, 0.503822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473354,-99) , 
3, 7.27006, 1, 0, 0.502436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475615,-99) , 
3, 9.50853, 1, 0, 0.501395,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0094656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496257,-99) , 
6, -951.286, 0, 0, 0.523007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469501,-99) , 
4, 0.999728, 0, 0, 0.500698,-99) , 
4, 0.999524, 1, 0, 0.502121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480295,-99) , 
3, 9.52224, 1, 0, 0.501291,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0167532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.530458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496732,-99) , 
8, 0.0184867, 0, 0, 0.501312,-99) , 
4, 0.999524, 1, 0, 0.503179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470831,-99) , 
3, 9.52607, 1, 0, 0.501975,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0163994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.20087, 0, 1, 0.504483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480583,-99) , 
7, 1.09535, 0, 0, 0.487282,-99) , 
9, 3.62665, 1, 0, 0.501949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534051,-99) , 
NN(
0, 
0, 
-1, -1.36534, 1, -1, 0.485119,-99) , 
9, 1.91021, 0, 0, 0.492283,-99) , 
7, -1.00001, 0, 0, 0.500262,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0184081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.64061, 1, 1, 0.50785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477167,-99) , 
7, 1.85707, 1, 0, 0.506018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497808,-99) , 
7, 1.28426, 0, 0, 0.502784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45521,-99) , 
6, -1.57142, 0, 0, 0.498894,-99) , 
6, -951.286, 1, 0, 0.502962,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0160068);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494007,-99) , 
5, 0.00679507, 0, 0, 0.497197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451054,-99) , 
5, 0.0237841, 1, 0, 0.495778,-99) , 
8, 9.71819, 0, 0, 0.496601,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0117719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498597,-99) , 
3, 1.46576, 1, 0, 0.502148,-99) , 
2, -0.214432, 1, 0, 0.50354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478065,-99) , 
3, 9.52224, 1, 0, 0.502585,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0109919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18896, 0, 1, 0.503979,-99) , 
NN(
0, 
0, 
-1, -0.142949, 0, -1, 0.485777,-99) , 
4, 0.999773, 0, 0, 0.502641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473608,-99) , 
4, 0.999048, 0, 0, 0.501617,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0133045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489028,-99) , 
9, 4.36297, 1, 0, 0.498927,-99) , 
7, -0.999983, 1, 0, 0.506081,-99) , 
NN(
0, 
0, 
-1, 2.39973, 1, -1, 0.495881,-99) , 
8, 0.874947, 0, 0, 0.497887,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.022315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.130368, 0, 1, 0.507463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481719,-99) , 
6, -951.286, 0, 0, 0.492714,-99) , 
9, 2.61908, 1, 0, 0.504018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495587,-99) , 
6, -0.429543, 1, 0, 0.507446,-99) , 
NN(
0, 
0, 
-1, -1.89795, 0, -1, 0.483604,-99) , 
6, -951.286, 0, 0, 0.49373,-99) , 
7, -0.428565, 0, 0, 0.500545,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0134435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.160761, 1, 1, 0.52545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495466,-99) , 
4, 0.999977, 0, 0, 0.501845,-99) , 
4, 0.999524, 1, 0, 0.503366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484222,-99) , 
3, 9.42206, 1, 0, 0.502618,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0152469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489382,-99) , 
7, -0.14287, 0, 0, 0.504388,-99) , 
0, 0.49333, 1, 0, 0.510429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49234,-99) , 
8, -2.10923, 0, 0, 0.498577,-99) , 
7, -1.85712, 1, 0, 0.499477,-99) , 
2, -0.0713995, 1, 0, 0.501294,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0168414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.123328, 0, 1, 0.53066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476458,-99) , 
9, -0.0585944, 1, 0, 0.499252,-99) , 
8, -2.07745, 0, 0, 0.503656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496717,-99) , 
7, -1.2857, 1, 0, 0.498979,-99) , 
NN(
0, 
0, 
-1, 4.35772, 1, -1, 0.480489,-99) , 
2, 0.0710589, 1, 0, 0.496201,-99) , 
9, 0.442445, 1, 0, 0.499808,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0114777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496584,-99) , 
3, 9.18881, 0, 0, 0.497456,-99) , 
7, 2.1428, 0, 0, 0.498512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470393,-99) , 
4, 0.999048, 0, 0, 0.497512,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0164132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.711992, 0, 1, 0.504639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478047,-99) , 
7, 0.142898, 0, 0, 0.492047,-99) , 
9, 3.42352, 1, 0, 0.502707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527075,-99) , 
NN(
0, 
0, 
-1, -1.85716, 0, -1, 0.467027,-99) , 
6, -951.286, 0, 0, 0.490138,-99) , 
7, -1.28572, 0, 0, 0.501267,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0184894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.703011, 1, 1, 0.509815,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.495898,-99) , 
6, -951.286, 0, 0, 0.501426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493495,-99) , 
8, -3.25706, 0, 0, 0.499946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43978,-99) , 
9, -0.364323, 0, 0, 0.467372,-99) , 
9, -0.6533, 1, 0, 0.492245,-99) , 
8, -2.71702, 0, 0, 0.498763,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.00901666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499168,-99) , 
2, 0.173277, 0, 0, 0.500056,-99) , 
3, 9.42872, 0, 0, 0.501263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455306,-99) , 
9, -0.441905, 1, 0, 0.484579,-99) , 
4, 0.999524, 0, 0, 0.5002,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0175643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498493,-99) , 
6, -951.286, 1, 0, 0.510504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4935,-99) , 
6, -951.286, 0, 0, 0.499542,-99) , 
8, -3.27778, 1, 0, 0.5015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47385,-99) , 
5, 0.0238087, 1, 0, 0.500463,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.010456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498742,-99) , 
6, -951.286, 1, 0, 0.502751,-99) , 
4, 0.999048, 1, 0, 0.503475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477863,-99) , 
3, 9.25868, 1, 0, 0.502436,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0186034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.979348, 0, 1, 0.51109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477419,-99) , 
6, -951.286, 0, 0, 0.497748,-99) , 
9, 1.80294, 1, 0, 0.505738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495753,-99) , 
6, -951.286, 1, 0, 0.509218,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.496864,-99) , 
8, -3.6984, 1, 0, 0.498875,-99) , 
7, 0.428541, 0, 0, 0.501323,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0237582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458641,-99) , 
7, -0.648379, 1, 0, 0.500164,-99) , 
8, -3.44984, 0, 0, 0.514127,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.521061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489689,-99) , 
6, -951.286, 1, 0, 0.498866,-99) , 
7, -1.2857, 1, 0, 0.500476,-99) , 
9, -1.08691, 1, 0, 0.502564,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0163794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.20259, 1, 1, 0.507844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445169,-99) , 
7, -1.95238, 0, 0, 0.497694,-99) , 
6, -951.286, 0, 0, 0.502154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508409,-99) , 
NN(
0, 
0, 
-1, 2.57984, 1, -1, 0.490554,-99) , 
8, 2.04127, 0, 0, 0.493388,-99) , 
7, 0.142837, 1, 0, 0.49817,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0102156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.213014, 0, 1, 0.503592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484058,-99) , 
4, 0.999683, 0, 0, 0.5026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470878,-99) , 
4, 0.999048, 0, 0, 0.501469,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.011412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499663,-99) , 
7, 2.23811, 1, 0, 0.520022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49971,-99) , 
0, 0.493329, 1, 0, 0.505469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494163,-99) , 
7, -0.455775, 1, 0, 0.497084,-99) , 
2, -0.0713947, 1, 0, 0.498466,-99) , 
7, 1.85714, 0, 0, 0.499633,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.00645599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499501,-99) , 
2, 0.216711, 0, 0, 0.500463,-99) , 
3, 9.42599, 0, 0, 0.501832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484345,-99) , 
4, 0.999048, 0, 0, 0.501198,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0226511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.26058, 1, 1, 0.51985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489159,-99) , 
6, -951.286, 0, 0, 0.498664,-99) , 
7, -0.142922, 0, 0, 0.510607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492594,-99) , 
3, 4.65951, 1, 0, 0.505243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481605,-99) , 
2, -0.0107772, 1, 0, 0.49507,-99) , 
2, 0.00347437, 0, 0, 0.500438,-99) , 
2, -0.0713465, 1, 0, 0.502133,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0127059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46777,-99) , 
4, 0.999955, 0, 0, 0.515299,-99) , 
NN(
0, 
0, 
-1, 0.999955, 1, 1, 0.502584,-99) , 
7, -1.2857, 1, 0, 0.504104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480457,-99) , 
4, 0.999048, 0, 0, 0.503245,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.011585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485794,-99) , 
3, 5.95973, 1, 0, 0.511631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498327,-99) , 
2, 0.0784214, 0, 0, 0.499841,-99) , 
2, -0.0712073, 1, 0, 0.501716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472931,-99) , 
3, 9.52725, 1, 0, 0.500625,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00664675);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526356,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484646,-99) , 
3, 8.99154, 1, 0, 0.501169,-99) , 
7, 2.14285, 0, 0, 0.501973,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0113972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497128,-99) , 
2, 0.173342, 0, 0, 0.498129,-99) , 
3, 9.18896, 0, 0, 0.499444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468386,-99) , 
6, -951.286, 0, 0, 0.487593,-99) , 
4, 0.999524, 0, 0, 0.498677,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0113275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496239,-99) , 
8, -0.0769123, 0, 0, 0.498805,-99) , 
3, 9.42599, 0, 0, 0.499952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479108,-99) , 
4, 0.999048, 0, 0, 0.499204,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0102319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489772,-99) , 
4, 0.999909, 0, 0, 0.500177,-99) , 
4, 0.999048, 1, 0, 0.501377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480696,-99) , 
3, 9.1652, 1, 0, 0.500494,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.00770216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499188,-99) , 
8, 1.61136, 0, 0, 0.501036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481695,-99) , 
9, 6.79076, 1, 0, 0.500056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482048,-99) , 
5, 0.0237868, 1, 0, 0.49938,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.00874959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.65991, 0, 1, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47146,-99) , 
4, 0.999751, 0, 0, 0.500628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455817,-99) , 
6, -951.286, 0, 0, 0.483813,-99) , 
4, 0.999524, 0, 0, 0.499549,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0129556);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52997,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497969,-99) , 
8, 1.12409, 0, 0, 0.499524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47909,-99) , 
7, -0.304131, 1, 0, 0.4885,-99) , 
9, 3.2999, 1, 0, 0.497916,-99) , 
7, 2.14281, 0, 0, 0.498944,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.020454);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456178,-99) , 
6, -1.57147, 0, 0, 0.506361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494683,-99) , 
9, -1.58261, 1, 0, 0.497142,-99) , 
6, -951.286, 0, 0, 0.501105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480523,-99) , 
5, 0.0237559, 1, 0, 0.500332,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0222788);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497308,-99) , 
4, 0.999977, 0, 0, 0.515638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49146,-99) , 
4, 0.999524, 0, 0, 0.511853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49157,-99) , 
7, -0.714292, 0, 0, 0.502823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485968,-99) , 
8, -1.49849, 0, 0, 0.496413,-99) , 
6, -951.286, 1, 0, 0.500057,-99) , 
2, -0.0713995, 1, 0, 0.502012,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0131142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.69302, 0, 1, 0.521774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490155,-99) , 
7, -0.427519, 1, 0, 0.511875,-99) , 
NN(
NN(
0, 
0, 
-1, 8.79352, 0, 1, 0.502595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470776,-99) , 
4, 0.999524, 0, 0, 0.501001,-99) , 
8, -3.22676, 1, 0, 0.503025,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.015361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499105,-99) , 
8, -2.32975, 0, 0, 0.504059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493429,-99) , 
5, 0.0237841, 0, 0, 0.49586,-99) , 
9, 0.396228, 1, 0, 0.499764,-99) , 
NN(
0, 
0, 
-1, 0.428363, 0, -1, 0.484313,-99) , 
0, 0.492376, 0, 0, 0.498419,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.00645709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42883, 0, 1, 0.501902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484834,-99) , 
4, 0.999683, 0, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478992,-99) , 
4, 0.999048, 0, 0, 0.500256,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0171776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482286,-99) , 
7, 1.28567, 1, 0, 0.502168,-99) , 
8, -0.0931784, 0, 0, 0.503405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497333,-99) , 
7, -0.425537, 1, 0, 0.506272,-99) , 
NN(
0, 
0, 
-1, 2.92409, 1, -1, 0.479081,-99) , 
8, 1.85848, 0, 0, 0.495315,-99) , 
9, 2.15205, 1, 0, 0.501449,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.00939768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498622,-99) , 
7, 0.714286, 0, 0, 0.501173,-99) , 
4, 0.999048, 1, 0, 0.502374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485907,-99) , 
3, 9.50466, 1, 0, 0.501743,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.00905094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57136, 1, 1, 0.503201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480026,-99) , 
0, 0.505709, 1, 0, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476355,-99) , 
2, 0.214636, 1, 0, 0.501428,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.010034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495951,-99) , 
6, -951.286, 1, 0, 0.503842,-99) , 
2, -0.0734948, 1, 0, 0.507883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498089,-99) , 
7, -1.16327, 1, 0, 0.499248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469859,-99) , 
7, -1.85714, 0, 0, 0.498303,-99) , 
8, -3.30908, 1, 0, 0.499933,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0120988);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497232,-99) , 
5, 0.00339971, 0, 0, 0.50527,-99) , 
NN(
0, 
0, 
-1, -0.00566681, 0, -1, 0.496678,-99) , 
9, -0.0189006, 1, 0, 0.500017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473203,-99) , 
5, 0.0238087, 1, 0, 0.499024,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.018619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464103,-99) , 
4, 0.999955, 0, 0, 0.510835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498009,-99) , 
3, 0.758576, 1, 0, 0.500517,-99) , 
3, 4.56354, 0, 0, 0.502731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472992,-99) , 
4, 0.999048, 0, 0, 0.501689,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.010445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.504132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484755,-99) , 
4, 0.999592, 0, 0, 0.503435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475952,-99) , 
4, 0.999048, 0, 0, 0.502464,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.00883621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39629, 0, 1, 0.503339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480175,-99) , 
0, 0.49578, 0, 0, 0.495356,-99) , 
9, 3.77212, 1, 0, 0.502325,-99) , 
NN(
0, 
0, 
-1, 0.505845, 0, -1, 0.486057,-99) , 
0, 0.504757, 1, 0, 0.50143,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0175071);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489817,-99) , 
3, 4.18477, 1, 0, 0.50916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494248,-99) , 
8, 4.74026, 0, 0, 0.495741,-99) , 
2, -0.0510257, 1, 0, 0.497959,-99) , 
2, -0.214281, 1, 0, 0.499111,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.00649285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499099,-99) , 
0, 0.499047, 0, 0, 0.508739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480087,-99) , 
9, 3.15961, 1, 0, 0.498628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461839,-99) , 
5, 0.0238062, 1, 0, 0.497611,-99) , 
8, 4.66423, 0, 0, 0.498585,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0108025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460658,-99) , 
9, 2.47175, 1, 0, 0.49906,-99) , 
8, 1.09338, 0, 0, 0.500723,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485173,-99) , 
6, -951.286, 1, 0, 0.498925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472968,-99) , 
8, 3.74765, 0, 0, 0.492501,-99) , 
9, 3.65023, 1, 0, 0.499625,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0112717);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.514345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49695,-99) , 
8, 1.78836, 0, 0, 0.498343,-99) , 
NN(
0, 
0, 
-1, 8.60315, 0, -1, 0.484242,-99) , 
9, 4.91983, 1, 0, 0.497044,-99) , 
7, 1.85715, 0, 0, 0.49796,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.00965808);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526761,-99) , 
NN(
NN(
0, 
0, 
-1, 1.19506, 0, 1, 0.502981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471225,-99) , 
8, 3.40634, 0, 0, 0.492165,-99) , 
9, 3.37992, 1, 0, 0.501412,-99) , 
2, -0.213927, 1, 0, 0.50264,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0156202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496877,-99) , 
8, -1.576, 0, 0, 0.49989,-99) , 
8, 0.0264541, 0, 0, 0.501079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527547,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.48747,-99) , 
7, -0.713586, 1, 0, 0.493437,-99) , 
9, 2.04344, 1, 0, 0.499136,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0126614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49986,-99) , 
4, 0.999955, 1, 0, 0.50324,-99) , 
4, 0.999048, 1, 0, 0.504533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482899,-99) , 
2, -0.0719312, 0, 0, 0.497394,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.481309,-99) , 
0, 0.499043, 1, 0, 0.49011,-99) , 
3, 4.82397, 1, 0, 0.501772,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0146784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.56381, 0, 1, 0.517641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479318,-99) , 
7, -0.229521, 1, 0, 0.509538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489328,-99) , 
1, -0.00339556, 0, 0, 0.498453,-99) , 
5, 0.023792, 0, 0, 0.499291,-99) , 
8, -3.2529, 1, 0, 0.501132,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0112806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.197309, 1, 1, 0.524802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497002,-99) , 
7, 0.999999, 0, 0, 0.498776,-99) , 
4, 0.999524, 1, 0, 0.500432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477534,-99) , 
3, 9.52224, 1, 0, 0.499563,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.00883639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497926,-99) , 
7, -1.57144, 1, 0, 0.499049,-99) , 
2, 0.213939, 0, 0, 0.49995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474815,-99) , 
4, 0.999048, 0, 0, 0.499054,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0103724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85712, 1, 1, 0.503166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480789,-99) , 
2, -0.214299, 0, 0, 0.502276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491243,-99) , 
8, -1.31419, 0, 0, 0.497217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484441,-99) , 
9, 3.35225, 1, 0, 0.49528,-99) , 
0, 0.495233, 0, 0, 0.500636,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.00968381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498125,-99) , 
0, 0.490472, 1, 0, 0.499042,-99) , 
3, 9.05918, 0, 0, 0.500206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463519,-99) , 
6, -951.286, 0, 0, 0.485091,-99) , 
4, 0.999524, 0, 0, 0.499237,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.023581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497978,-99) , 
7, 0.151133, 0, 0, 0.51782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466266,-99) , 
9, 0.130139, 1, 0, 0.500865,-99) , 
8, -2.08697, 0, 0, 0.504061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490768,-99) , 
9, 3.6178, 1, 0, 0.501196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480619,-99) , 
9, 1.16755, 1, 0, 0.491003,-99) , 
8, 0.631889, 0, 0, 0.495507,-99) , 
9, 0.628219, 1, 0, 0.499973,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0118354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480621,-99) , 
4, 0.999592, 0, 0, 0.50255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485702,-99) , 
6, -951.286, 0, 0, 0.492347,-99) , 
7, 0.999998, 1, 0, 0.500648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469699,-99) , 
4, 0.999048, 0, 0, 0.499552,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0126166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488485,-99) , 
4, 0.999887, 0, 0, 0.501515,-99) , 
7, 1.8571, 0, 0, 0.502679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44838,-99) , 
7, -0.142819, 0, 0, 0.483767,-99) , 
4, 0.999524, 0, 0, 0.501488,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.014078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49635,-99) , 
3, 9.42883, 0, 0, 0.49792,-99) , 
NN(
0, 
0, 
-1, 0.0712797, 1, -1, 0.481866,-99) , 
4, 0.999819, 0, 0, 0.496492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467525,-99) , 
4, 0.999048, 0, 0, 0.49548,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.00886621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495032,-99) , 
6, -951.286, 1, 0, 0.510585,-99) , 
NN(
0, 
0, 
-1, 2.14285, 1, -1, 0.497076,-99) , 
8, 2.57541, 0, 0, 0.498767,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.00710058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481639,-99) , 
3, 9.50466, 1, 0, 0.502154,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.00890339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57139, 0, 1, 0.508063,-99) , 
NN(
0, 
0, 
-1, -1.57145, 0, -1, 0.498099,-99) , 
8, 0.0184867, 0, 0, 0.500789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474481,-99) , 
2, 0.2144, 1, 0, 0.499726,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.00738418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485148,-99) , 
4, 0.999683, 0, 0, 0.500461,-99) , 
2, -0.213869, 1, 0, 0.501631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474386,-99) , 
4, 0.999048, 0, 0, 0.500679,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.00688636);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.78668, 0, 1, 0.502659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475055,-99) , 
4, 0.999048, 0, 0, 0.501688,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0128426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497124,-99) , 
7, -0.142886, 0, 0, 0.503793,-99) , 
0, 0.492512, 0, 0, 0.510135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495617,-99) , 
8, -0.150129, 0, 0, 0.49808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475172,-99) , 
9, 0.396566, 1, 0, 0.487087,-99) , 
2, 0.0713547, 1, 0, 0.496511,-99) , 
0, 0.493329, 1, 0, 0.498259,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0132839);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.09064, 0, 1, 0.507329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497232,-99) , 
8, 4.57331, 0, 0, 0.5001,-99) , 
NN(
0, 
0, 
-1, 0.428635, 0, -1, 0.48661,-99) , 
2, 0.0710589, 1, 0, 0.498068,-99) , 
9, 0.427962, 1, 0, 0.502533,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.014221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494163,-99) , 
9, 3.20214, 1, 0, 0.505377,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.495547,-99) , 
6, -951.286, 1, 0, 0.501094,-99) , 
NN(
0, 
0, 
-1, -2.04762, 0, -1, 0.479469,-99) , 
7, -1.57141, 0, 0, 0.499552,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0110513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473773,-99) , 
3, 7.27017, 1, 0, 0.502485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477326,-99) , 
3, 9.50853, 1, 0, 0.501535,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.00746222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499237,-99) , 
4, 0.999049, 1, 0, 0.50026,-99) , 
2, -0.216041, 1, 0, 0.501619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480476,-99) , 
3, 9.18964, 1, 0, 0.500732,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.022611);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494632,-99) , 
9, 2.68902, 1, 0, 0.506047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481713,-99) , 
6, -951.286, 0, 0, 0.494367,-99) , 
7, -0.428544, 0, 0, 0.502109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474221,-99) , 
5, 0.0238087, 1, 0, 0.501062,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.00774167);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476247,-99) , 
3, 9.50466, 1, 0, 0.502075,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0129042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495912,-99) , 
2, -0.0715402, 1, 0, 0.497829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471528,-99) , 
5, 0.0237526, 1, 0, 0.496849,-99) , 
7, -1.85714, 1, 0, 0.498154,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0116092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499645,-99) , 
8, -2.33331, 0, 0, 0.503433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494622,-99) , 
5, 0.0113363, 0, 0, 0.496582,-99) , 
9, 0.0432039, 1, 0, 0.499363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479318,-99) , 
5, 0.0238087, 1, 0, 0.498622,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.012363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.522548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498066,-99) , 
2, 0.158651, 0, 0, 0.499245,-99) , 
4, 0.999524, 1, 0, 0.500772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489201,-99) , 
7, -0.918549, 0, 0, 0.495802,-99) , 
NN(
0, 
0, 
-1, 0.495234, 0, -1, 0.482646,-99) , 
7, -0.428788, 1, 0, 0.487175,-99) , 
3, 4.82263, 1, 0, 0.498152,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0152318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498792,-99) , 
4, 0.999995, 0, 0, 0.504283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456633,-99) , 
2, 0.0697978, 1, 0, 0.48736,-99) , 
4, 0.999887, 0, 0, 0.502481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458216,-99) , 
6, -951.286, 0, 0, 0.48207,-99) , 
4, 0.999524, 0, 0, 0.501193,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.00907186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501899, 0, 1, 0.516226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499907,-99) , 
7, -1.85714, 1, 0, 0.501071,-99) , 
2, 0.0539714, 0, 0, 0.503285,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.490904,-99) , 
3, 4.8082, 1, 0, 0.50088,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0147931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.533552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499247,-99) , 
2, -0.0163874, 1, 0, 0.503219,-99) , 
4, 0.999524, 1, 0, 0.50527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476575,-99) , 
3, 7.07522, 1, 0, 0.496753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481187,-99) , 
3, 9.18468, 1, 0, 0.493398,-99) , 
3, 4.75487, 1, 0, 0.502932,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.025958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48198,-99) , 
7, -1.57144, 0, 0, 0.505045,-99) , 
8, -4.37718, 1, 0, 0.506213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49329,-99) , 
6, -951.286, 1, 0, 0.509901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464965,-99) , 
6, -951.286, 0, 0, 0.484995,-99) , 
8, 1.68767, 0, 0, 0.498386,-99) , 
9, 1.80862, 1, 0, 0.504003,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0153633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494147,-99) , 
9, 0.360988, 0, 0, 0.500697,-99) , 
3, 9.42864, 0, 0, 0.501794,-99) , 
NN(
0, 
0, 
-1, 0.142905, 0, -1, 0.479482,-99) , 
4, 0.999524, 0, 0, 0.500394,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.00736843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488105,-99) , 
7, -1.39454, 0, 0, 0.500925,-99) , 
7, -1.85713, 1, 0, 0.501731,-99) , 
NN(
0, 
0, 
-1, 0.490154, 1, -1, 0.485727,-99) , 
0, 0.491424, 0, 0, 0.500796,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00762611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498578,-99) , 
7, -1.77549, 1, 0, 0.499275,-99) , 
7, 2.14285, 0, 0, 0.50014,-99) , 
NN(
0, 
0, 
-1, 0.428531, 0, -1, 0.484908,-99) , 
0, 0.492377, 0, 0, 0.498823,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0119463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497811,-99) , 
7, -0.143127, 0, 0, 0.526124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493126,-99) , 
7, -0.140579, 1, 0, 0.500206,-99) , 
9, 3.52482, 1, 0, 0.507885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481865,-99) , 
7, -1.57143, 0, 0, 0.499738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46801,-99) , 
9, 2.4143, 1, 0, 0.49857,-99) , 
8, 0.874947, 0, 0, 0.500404,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0106178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478427,-99) , 
7, 1.85707, 1, 0, 0.500927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490873,-99) , 
2, 0.00361415, 1, 0, 0.497455,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.477885,-99) , 
2, -0.0712073, 0, 0, 0.491107,-99) , 
3, 4.68521, 1, 0, 0.498929,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0129763);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499663,-99) , 
9, -0.770638, 0, 0, 0.51836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495823,-99) , 
2, 0.0306365, 0, 0, 0.498655,-99) , 
7, -1.57143, 1, 0, 0.500137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481254,-99) , 
2, -0.214238, 0, 0, 0.499285,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0243997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496615,-99) , 
4, 0.999999, 0, 0, 0.506095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478469,-99) , 
9, 0.420017, 1, 0, 0.492527,-99) , 
4, 0.999977, 0, 0, 0.501368,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.475908,-99) , 
4, 0.999524, 0, 0, 0.499771,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487157,-99) , 
8, -1.68094, 0, 0, 0.507857,-99) , 
8, -0.0787373, 0, 0, 0.515353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499715,-99) , 
3, 9.12911, 0, 0, 0.501695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456455,-99) , 
7, -0.142885, 0, 0, 0.487743,-99) , 
4, 0.999524, 0, 0, 0.500827,-99) , 
7, 1.28571, 0, 0, 0.502735,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0206945);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.77819, 1, 1, 0.515962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499698,-99) , 
8, -1.53322, 0, 0, 0.504617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475411,-99) , 
6, -951.286, 0, 0, 0.489678,-99) , 
9, 1.25755, 1, 0, 0.50137,-99) , 
8, 0.990198, 0, 0, 0.504131,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00760616);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214636, 0, 1, 0.503201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479957,-99) , 
4, 0.999048, 0, 0, 0.502371,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0127075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.51127, 0, 1, 0.508046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497717,-99) , 
0, 0.495233, 1, 0, 0.500674,-99) , 
9, 0.047316, 1, 0, 0.50366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477293,-99) , 
5, 0.0238087, 1, 0, 0.502679,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0135212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497343,-99) , 
2, -0.00569655, 1, 0, 0.501771,-99) , 
3, 9.18769, 0, 0, 0.502761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456765,-99) , 
6, -951.286, 0, 0, 0.479617,-99) , 
4, 0.999524, 0, 0, 0.501314,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0123519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479638,-99) , 
7, -2.02042, 0, 0, 0.503842,-99) , 
7, 2.1428, 0, 0, 0.504478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476906,-99) , 
7, -0.142922, 0, 0, 0.493265,-99) , 
0, 0.491424, 0, 0, 0.503814,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.00609183);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498922,-99) , 
4, 0.999048, 1, 0, 0.499868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485048,-99) , 
3, 9.05654, 1, 0, 0.499204,-99) , 
7, 2.14285, 0, 0, 0.499823,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0071869);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48055,-99) , 
4, 0.999048, 0, 0, 0.50219,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.00967298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498221,-99) , 
3, 0.380716, 1, 0, 0.516519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499303,-99) , 
0, 0.493329, 1, 0, 0.500943,-99) , 
3, 0.551261, 1, 0, 0.502363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481705,-99) , 
2, 0.153074, 1, 0, 0.497134,-99) , 
NN(
0, 
0, 
-1, -0.142952, 0, -1, 0.482641,-99) , 
2, -0.0713947, 0, 0, 0.492448,-99) , 
3, 4.80413, 1, 0, 0.500437,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0108841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485925,-99) , 
3, 7.03185, 1, 0, 0.503648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485053,-99) , 
3, 9.18964, 1, 0, 0.50286,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0156197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45808,-99) , 
8, -3.82717, 1, 0, 0.498394,-99) , 
8, -3.54619, 0, 0, 0.510446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498224,-99) , 
3, 9.18769, 0, 0, 0.49965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473743,-99) , 
4, 0.999524, 0, 0, 0.498297,-99) , 
9, -1.02787, 1, 0, 0.500277,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0104817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473207,-99) , 
9, 2.85911, 1, 0, 0.500437,-99) , 
8, 2.14958, 0, 0, 0.501933,-99) , 
NN(
0, 
0, 
-1, 7.97035, 0, -1, 0.485535,-99) , 
9, 5.50079, 1, 0, 0.500614,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0131838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.37695, 1, 1, 0.508888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495272,-99) , 
8, -0.272682, 0, 0, 0.498375,-99) , 
3, 1.01636, 1, 0, 0.500656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475836,-99) , 
3, 9.52058, 1, 0, 0.499706,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0122551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49843,-99) , 
7, -0.142899, 0, 0, 0.504037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495086,-99) , 
8, -3.2529, 1, 0, 0.497335,-99) , 
0, 0.498091, 1, 0, 0.500644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475985,-99) , 
3, 9.50466, 1, 0, 0.499707,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.012548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49902,-99) , 
8, -1.17941, 0, 0, 0.504996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464795,-99) , 
4, 0.999524, 0, 0, 0.5002,-99) , 
7, -0.142874, 0, 0, 0.50258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506757,-99) , 
NN(
0, 
0, 
-1, 2.0204, 1, -1, 0.482718,-99) , 
6, -951.286, 0, 0, 0.49191,-99) , 
7, 1.28571, 1, 0, 0.501225,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0137786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.05927, 0, 1, 0.505152,-99) , 
NN(
0, 
0, 
-1, -0.0715402, 0, -1, 0.48626,-99) , 
4, 0.999864, 0, 0, 0.502992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472215,-99) , 
4, 0.999048, 0, 0, 0.501918,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.012851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496715,-99) , 
3, 3.0776, 1, 0, 0.509665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522965,-99) , 
NN(
0, 
0, 
-1, 2.57831, 1, -1, 0.495114,-99) , 
8, 1.70401, 0, 0, 0.496389,-99) , 
8, 3.0843, 0, 0, 0.497889,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0175203);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499368,-99) , 
3, 1.84, 1, 0, 0.506243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493379,-99) , 
7, 0.999916, 0, 0, 0.497614,-99) , 
3, 4.626, 1, 0, 0.504451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519648,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.484277,-99) , 
2, -0.0705682, 1, 0, 0.49211,-99) , 
0, 0.494281, 0, 0, 0.502327,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0143886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526313,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57139, 0, 1, 0.505337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492872,-99) , 
7, 1.38098, 0, 0, 0.496682,-99) , 
9, 1.061, 1, 0, 0.501811,-99) , 
7, -1.85713, 1, 0, 0.502929,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0100309);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484855,-99) , 
3, 4.8082, 1, 0, 0.506237,-99) , 
NN(
0, 
0, 
-1, 0.497667, 0, -1, 0.496703,-99) , 
0, 0.493646, 1, 0, 0.498115,-99) , 
0, 0.505709, 0, 0, 0.498732,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.013813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142855, 0, 1, 0.521227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498352,-99) , 
8, -0.0419216, 0, 0, 0.502235,-99) , 
4, 0.999524, 1, 0, 0.503475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483532,-99) , 
2, -0.153382, 0, 0, 0.499678,-99) , 
NN(
0, 
0, 
-1, 0.142977, 0, -1, 0.478616,-99) , 
2, 0.0710265, 1, 0, 0.493437,-99) , 
3, 4.80413, 1, 0, 0.501526,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0141007);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0716194, 0, 1, 0.507403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459917,-99) , 
4, 0.999864, 0, 0, 0.49629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475927,-99) , 
4, 0.999524, 0, 0, 0.494629,-99) , 
0, 0.496186, 0, 0, 0.503488,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.00939919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142882, 0, 1, 0.523872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499098,-99) , 
2, 0.0338106, 0, 0, 0.50122,-99) , 
4, 0.999524, 1, 0, 0.502653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476803,-99) , 
3, 9.52058, 1, 0, 0.501691,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0103162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.124318, 1, 1, 0.502982,-99) , 
NN(
0, 
0, 
-1, 4.56046, 1, -1, 0.489415,-99) , 
4, 0.999909, 0, 0, 0.500856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467902,-99) , 
4, 0.999048, 0, 0, 0.499695,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0170322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492552,-99) , 
2, 0.070807, 1, 0, 0.505876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489127,-99) , 
6, -951.286, 0, 0, 0.498561,-99) , 
0, 0.501129, 1, 0, 0.503642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497222,-99) , 
3, 3.03366, 0, 0, 0.500146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476541,-99) , 
3, 4.82397, 1, 0, 0.495865,-99) , 
0, 0.495234, 0, 0, 0.501829,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0072188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499568,-99) , 
4, 0.999524, 1, 0, 0.500723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470634,-99) , 
3, 7.71384, 1, 0, 0.49973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466256,-99) , 
3, 9.50466, 1, 0, 0.498489,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00675319);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214489, 0, 1, 0.502887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485242,-99) , 
3, 9.26255, 1, 0, 0.502159,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0175516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495812,-99) , 
9, 1.20259, 1, 0, 0.503032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465513,-99) , 
7, -1.85714, 0, 0, 0.501053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47589,-99) , 
9, 3.42475, 1, 0, 0.498627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444542,-99) , 
6, -1.57141, 0, 0, 0.49431,-99) , 
6, -951.286, 1, 0, 0.498144,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0190532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.96618, 1, 1, 0.515459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496203,-99) , 
2, 0.0715678, 0, 0, 0.50001,-99) , 
7, 0.428577, 0, 0, 0.505536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493157,-99) , 
7, -1.57144, 1, 0, 0.494883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47238,-99) , 
0, 0.493056, 1, 0, 0.481255,-99) , 
2, -0.0717891, 0, 0, 0.492786,-99) , 
0, 0.499043, 0, 0, 0.498138,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0166523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494072,-99) , 
6, -951.286, 1, 0, 0.501286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486304,-99) , 
0, 0.501401, 0, 0, 0.493038,-99) , 
7, -0.999988, 0, 0, 0.499847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479939,-99) , 
0, 0.505709, 1, 0, 0.499207,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0117025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496786,-99) , 
2, 0.130725, 0, 0, 0.497878,-99) , 
2, 0.212207, 0, 0, 0.498973,-99) , 
NN(
0, 
0, 
-1, -0.142854, 0, -1, 0.48056,-99) , 
4, 0.999524, 0, 0, 0.497798,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0118691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496247,-99) , 
3, 3.55722, 1, 0, 0.502136,-99) , 
3, 9.1292, 0, 0, 0.503344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476691,-99) , 
4, 0.999048, 0, 0, 0.502402,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.00711166);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474469,-99) , 
4, 0.999592, 0, 0, 0.500432,-99) , 
4, 0.999048, 1, 0, 0.501232,-99) , 
0, 0.490471, 1, 0, 0.501963,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0118168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496145,-99) , 
2, 0.0291307, 0, 0, 0.498969,-99) , 
2, -0.215448, 1, 0, 0.499776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479251,-99) , 
3, 9.40614, 1, 0, 0.498966,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.00966238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57142, 1, 1, 0.503732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480434,-99) , 
2, 0.275036, 1, 0, 0.503115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480668,-99) , 
2, -0.214584, 0, 0, 0.50211,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.00569344);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516709,-99) , 
NN(
NN(
0, 
0, 
-1, 2.04864, 0, 1, 0.501639,-99) , 
NN(
0, 
0, 
-1, 2.51988, 0, -1, 0.489778,-99) , 
9, 5.07725, 1, 0, 0.500587,-99) , 
7, 2.14285, 0, 0, 0.50109,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0163064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.37323, 1, 1, 0.524242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495406,-99) , 
2, -0.0163874, 1, 0, 0.499846,-99) , 
4, 0.999524, 1, 0, 0.501492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49203,-99) , 
0, 0.496822, 1, 0, 0.495766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48197,-99) , 
0, 0.494282, 0, 0, 0.493418,-99) , 
3, 4.54757, 1, 0, 0.499778,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0148171);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.79362, 1, 1, 0.510612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495848,-99) , 
8, -1.8493, 0, 0, 0.501436,-99) , 
NN(
0, 
0, 
-1, -2.02767, 1, -1, 0.478048,-99) , 
7, -1.57143, 0, 0, 0.499641,-99) , 
8, 3.11605, 0, 0, 0.500867,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0200726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.93233, 1, 1, 0.522052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47689,-99) , 
9, -0.179206, 1, 0, 0.499469,-99) , 
8, -2.19651, 0, 0, 0.502676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4856,-99) , 
5, 0.00339766, 1, 0, 0.493034,-99) , 
5, 0.023792, 0, 0, 0.494754,-99) , 
9, 0.314772, 1, 0, 0.498367,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0137671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.77237, 1, 1, 0.51845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494688,-99) , 
6, -951.286, 1, 0, 0.508545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497665,-99) , 
8, 0.417593, 0, 0, 0.499429,-99) , 
NN(
0, 
0, 
-1, -2.5371, 1, -1, 0.474612,-99) , 
7, -1.57143, 0, 0, 0.497509,-99) , 
8, 1.0624, 0, 0, 0.499559,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0123479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493976,-99) , 
4, 0.999977, 0, 0, 0.499391,-99) , 
3, 9.04411, 0, 0, 0.500766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460503,-99) , 
7, 0.143005, 0, 0, 0.486229,-99) , 
4, 0.999524, 0, 0, 0.499846,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.00703884);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518527,-99) , 
NN(
0, 
0, 
-1, 0.495234, 0, -1, 0.497679,-99) , 
7, 2.1428, 0, 0, 0.498337,-99) , 
2, 0.214293, 0, 0, 0.499217,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.00917973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.61765, 0, 1, 0.502086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490133,-99) , 
9, 5.55769, 1, 0, 0.501151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519905,-99) , 
NN(
0, 
0, 
-1, -1.0934, 0, -1, 0.470989,-99) , 
8, 0.210288, 0, 0, 0.488249,-99) , 
7, 1.57143, 1, 0, 0.500093,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0106063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495597, 0, 1, 0.522458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493959,-99) , 
7, -1.69391, 0, 0, 0.498483,-99) , 
0, 0.498091, 1, 0, 0.510388,-99) , 
NN(
NN(
0, 
0, 
-1, -0.844209, 0, 1, 0.502665,-99) , 
NN(
0, 
0, 
-1, -0.469393, 0, -1, 0.492848,-99) , 
9, 1.53441, 1, 0, 0.499292,-99) , 
7, -1.28571, 1, 0, 0.500606,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.00757077);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498089,-99) , 
8, 3.11605, 0, 0, 0.499293,-99) , 
2, -0.133034, 1, 0, 0.499912,-99) , 
2, -0.214642, 1, 0, 0.500712,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0128435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496459,-99) , 
2, -0.11375, 1, 0, 0.498347,-99) , 
2, 0.212087, 0, 0, 0.499115,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.476497,-99) , 
4, 0.999524, 0, 0, 0.497712,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0111498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497824,-99) , 
2, 0.0467012, 0, 0, 0.50005,-99) , 
3, 9.1293, 0, 0, 0.501086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465473,-99) , 
0, 0.497138, 0, 0, 0.490385,-99) , 
4, 0.999524, 0, 0, 0.500405,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00455302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.4289, 0, 1, 0.500923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48687,-99) , 
4, 0.999592, 0, 0, 0.500403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473108,-99) , 
4, 0.999048, 0, 0, 0.499439,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.00987833);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475105,-99) , 
3, 9.1652, 1, 0, 0.502851,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00801555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498819,-99) , 
3, 9.05927, 0, 0, 0.499829,-99) , 
4, 0.999048, 1, 0, 0.500618,-99) , 
NN(
0, 
0, 
-1, 0.142937, 0, -1, 0.483368,-99) , 
0, 0.492376, 0, 0, 0.499116,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00816171);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85713, 1, 1, 0.503389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476856,-99) , 
4, 0.999048, 0, 0, 0.502461,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.00889642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498632,-99) , 
8, -0.0591339, 0, 0, 0.500852,-99) , 
3, 9.42899, 0, 0, 0.501675,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.482018,-99) , 
4, 0.999524, 0, 0, 0.500449,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0236873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49038,-99) , 
9, 2.9319, 1, 0, 0.513219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479424,-99) , 
6, -951.286, 1, 0, 0.49772,-99) , 
8, -0.741944, 0, 0, 0.504588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489576,-99) , 
4, 0.999977, 0, 0, 0.499381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47557,-99) , 
4, 0.999524, 0, 0, 0.49795,-99) , 
7, 0.428575, 0, 0, 0.500322,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.016465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0147043, 0, 1, 0.513588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495867,-99) , 
3, 2.36385, 0, 0, 0.50066,-99) , 
3, 0.966598, 1, 0, 0.503848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484498,-99) , 
7, -0.869981, 0, 0, 0.499189,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484983,-99) , 
9, 0.449455, 1, 0, 0.491998,-99) , 
3, 4.6344, 1, 0, 0.501412,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.023929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489715,-99) , 
9, 5.63577, 1, 0, 0.505982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48375,-99) , 
7, 1.95234, 1, 0, 0.504313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492945,-99) , 
6, -0.429086, 1, 0, 0.503759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479131,-99) , 
8, -3.30556, 1, 0, 0.487782,-99) , 
6, -951.286, 0, 0, 0.494708,-99) , 
7, -0.142872, 0, 0, 0.500101,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0113845);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513115,-99) , 
NN(
0, 
0, 
-1, 0.500132, 0, -1, 0.489885,-99) , 
0, 0.493329, 1, 0, 0.493098,-99) , 
3, 4.68521, 1, 0, 0.502176,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0101228);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.6842, 1, 1, 0.511836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527906,-99) , 
NN(
0, 
0, 
-1, 2.23878, 1, -1, 0.496803,-99) , 
8, 1.88581, 0, 0, 0.498104,-99) , 
8, 3.28636, 0, 0, 0.499605,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0139501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49078,-99) , 
9, -0.297906, 1, 0, 0.517668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495905,-99) , 
8, 4.84181, 0, 0, 0.497458,-99) , 
4, 0.999524, 1, 0, 0.498748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475631,-99) , 
3, 9.42372, 1, 0, 0.497862,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.018455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41969, 0, 1, 0.504587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460076,-99) , 
5, 0.00453499, 1, 0, 0.490668,-99) , 
9, 3.84667, 1, 0, 0.502998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478006,-99) , 
5, 0.0238087, 1, 0, 0.502071,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0173869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28629, 0, 1, 0.507671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457553,-99) , 
6, -1.57147, 0, 0, 0.503685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496245,-99) , 
8, 1.76911, 0, 0, 0.498885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453915,-99) , 
7, -1.85713, 0, 0, 0.496584,-99) , 
6, -951.286, 0, 0, 0.499664,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0119961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499621,-99) , 
8, -2.54506, 0, 0, 0.504692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4937,-99) , 
7, 0.999969, 0, 0, 0.497097,-99) , 
9, 0.047316, 1, 0, 0.500164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483247,-99) , 
5, 0.0237559, 1, 0, 0.499516,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.02044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499156,-99) , 
7, -0.167523, 0, 0, 0.522145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470716,-99) , 
9, 0.0288201, 1, 0, 0.500351,-99) , 
8, -2.10744, 0, 0, 0.503969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490756,-99) , 
1, 0.0101976, 0, 0, 0.492588,-99) , 
5, 0.0238087, 0, 0, 0.494735,-99) , 
9, 0.516145, 1, 0, 0.499365,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.014951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490859,-99) , 
8, -0.0584643, 0, 0, 0.49524,-99) , 
3, 2.32265, 1, 0, 0.501022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481242,-99) , 
3, 9.41001, 1, 0, 0.500249,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0138562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484577,-99) , 
4, 0.999955, 0, 0, 0.511034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498913,-99) , 
2, 0.167088, 0, 0, 0.500475,-99) , 
3, 4.62186, 0, 0, 0.502684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460232,-99) , 
4, 0.999048, 0, 0, 0.501237,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.00681317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499151,-99) , 
2, -0.214584, 1, 0, 0.500029,-99) , 
4, 0.999048, 1, 0, 0.501154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481491,-99) , 
3, 9.16847, 1, 0, 0.500317,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0143614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505981, 1, 1, 0.520889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488172,-99) , 
4, 0.999819, 0, 0, 0.503476,-99) , 
0, 0.504757, 0, 0, 0.504452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471428,-99) , 
4, 0.999048, 0, 0, 0.503291,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0087366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91136, 1, 1, 0.521891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497827,-99) , 
2, 0.204834, 0, 0, 0.498525,-99) , 
4, 0.999524, 1, 0, 0.500005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48496,-99) , 
3, 9.52058, 1, 0, 0.499434,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.00767539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499517,-99) , 
8, 1.84466, 0, 0, 0.501452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482314,-99) , 
9, 6.76608, 1, 0, 0.500471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477571,-99) , 
5, 0.0238087, 1, 0, 0.49962,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0166367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489939,-99) , 
4, 0.999977, 0, 0, 0.51265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496333,-99) , 
8, -1.34769, 0, 0, 0.501466,-99) , 
7, -0.99999, 1, 0, 0.503455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464978,-99) , 
7, -0.142853, 0, 0, 0.488378,-99) , 
4, 0.999524, 0, 0, 0.502504,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0174209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213284, 0, 1, 0.506007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457382,-99) , 
8, -2.49987, 1, 0, 0.487713,-99) , 
7, -1.57144, 0, 0, 0.50444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495098,-99) , 
7, -0.428431, 1, 0, 0.503132,-99) , 
NN(
0, 
0, 
-1, 2.94991, 1, -1, 0.483995,-99) , 
8, 1.90671, 0, 0, 0.495415,-99) , 
9, 2.15205, 1, 0, 0.502246,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.00895185);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499559,-99) , 
8, 0.613806, 0, 0, 0.501335,-99) , 
NN(
0, 
0, 
-1, 3.34712, 0, -1, 0.48906,-99) , 
9, 2.80211, 1, 0, 0.499066,-99) , 
7, -1.85713, 1, 0, 0.499954,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0185086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480826,-99) , 
7, -0.435411, 0, 0, 0.524821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478775,-99) , 
9, 1.37861, 1, 0, 0.502699,-99) , 
8, -0.438794, 0, 0, 0.504575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498552,-99) , 
9, 4.81309, 1, 0, 0.506337,-99) , 
NN(
0, 
0, 
-1, 2.90492, 1, -1, 0.484926,-99) , 
8, 1.69897, 0, 0, 0.497657,-99) , 
9, 2.03259, 1, 0, 0.502806,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.00802934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498298,-99) , 
3, 9.18789, 0, 0, 0.499166,-99) , 
7, -1.85716, 1, 0, 0.500138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470172,-99) , 
9, -0.30191, 1, 0, 0.48709,-99) , 
4, 0.999524, 0, 0, 0.499305,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0136092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.638117, 0, 1, 0.505588,-99) , 
NN(
0, 
0, 
-1, 3.25237, 0, -1, 0.492099,-99) , 
9, 3.33653, 1, 0, 0.503389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505359,-99) , 
NN(
0, 
0, 
-1, -1.02586, 1, -1, 0.485582,-99) , 
6, -951.286, 0, 0, 0.493437,-99) , 
7, -0.99999, 0, 0, 0.501669,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0147183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85707, 0, 1, 0.503777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488708,-99) , 
9, 2.78835, 0, 0, 0.493125,-99) , 
5, 0.0022675, 0, 0, 0.500353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478673,-99) , 
5, 0.0238087, 1, 0, 0.499541,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.00816005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.176153, 0, 1, 0.514295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49865,-99) , 
7, -1.25853, 1, 0, 0.500221,-99) , 
7, 1.57132, 0, 0, 0.501416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483622,-99) , 
2, 0.214446, 1, 0, 0.500685,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.00672544);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513672,-99) , 
NN(
0, 
0, 
-1, -0.142904, 0, -1, 0.481004,-99) , 
0, 0.489655, 1, 0, 0.490588,-99) , 
0, 0.492376, 0, 0, 0.501036,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00818938);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498291,-99) , 
7, -1.77553, 1, 0, 0.499115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479841,-99) , 
4, 0.999048, 0, 0, 0.498445,-99) , 
7, 2.1428, 0, 0, 0.499717,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0146636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.567135, 0, 1, 0.520294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495329,-99) , 
6, -951.286, 1, 0, 0.501177,-99) , 
7, -1.57145, 1, 0, 0.502616,-99) , 
NN(
0, 
0, 
-1, -0.197309, 1, -1, 0.477743,-99) , 
4, 0.999524, 0, 0, 0.501066,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0146184);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.999954, 1, 1, 0.509876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496929,-99) , 
9, -0.852824, 1, 0, 0.50008,-99) , 
NN(
0, 
0, 
-1, -3.0948, 1, -1, 0.472059,-99) , 
7, -1.57144, 0, 0, 0.497921,-99) , 
8, 0.874947, 0, 0, 0.500283,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0120667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481718,-99) , 
4, 0.999796, 0, 0, 0.501798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48241,-99) , 
4, 0.999955, 1, 0, 0.489998,-99) , 
8, -3.42687, 0, 0, 0.500186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456772,-99) , 
6, -951.286, 0, 0, 0.481388,-99) , 
4, 0.999524, 0, 0, 0.499009,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0076176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480079,-99) , 
3, 7.65713, 1, 0, 0.500766,-99) , 
3, 9.42872, 0, 0, 0.501434,-99) , 
NN(
0, 
0, 
-1, 0.142882, 0, -1, 0.480413,-99) , 
4, 0.999524, 0, 0, 0.50013,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0177257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488755,-99) , 
7, -0.556747, 0, 0, 0.521673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463102,-99) , 
7, 0.73272, 1, 0, 0.497782,-99) , 
8, -2.19651, 0, 0, 0.501288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523126,-99) , 
NN(
0, 
0, 
-1, -0.428599, 0, -1, 0.491058,-99) , 
5, 0.023792, 0, 0, 0.492833,-99) , 
9, 0.327366, 1, 0, 0.496715,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0165472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489467,-99) , 
7, -0.14284, 0, 0, 0.505107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495049,-99) , 
8, -4.0843, 1, 0, 0.496482,-99) , 
8, -0.0348783, 0, 0, 0.498901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474092,-99) , 
4, 0.999048, 0, 0, 0.498024,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0141562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490245,-99) , 
8, -2.98079, 0, 0, 0.501649,-99) , 
NN(
0, 
0, 
-1, 3.66833, 0, -1, 0.488934,-99) , 
9, 3.46801, 1, 0, 0.499637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461285,-99) , 
8, -4.38662, 1, 0, 0.47984,-99) , 
8, -3.84139, 0, 0, 0.48751,-99) , 
9, -1.28752, 0, 0, 0.498209,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0159997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.521742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488236,-99) , 
7, 2.18368, 1, 0, 0.510831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491747,-99) , 
2, -0.0712995, 0, 0, 0.501714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481528,-99) , 
9, 0.592228, 1, 0, 0.492564,-99) , 
7, 0.700667, 1, 0, 0.499878,-99) , 
7, 1.57142, 0, 0, 0.500804,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0139822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495838,-99) , 
2, 0.193809, 0, 0, 0.497122,-99) , 
2, -0.21405, 1, 0, 0.498737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478281,-99) , 
3, 9.13447, 1, 0, 0.497854,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0152018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28588, 0, 1, 0.508406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463975,-99) , 
6, -1.28585, 0, 0, 0.503223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497855,-99) , 
9, -1.4139, 1, 0, 0.49901,-99) , 
NN(
0, 
0, 
-1, 0.4286, 1, -1, 0.484965,-99) , 
0, 0.502852, 1, 0, 0.497189,-99) , 
6, -951.286, 0, 0, 0.49981,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00721692);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474184,-99) , 
9, -1.69513, 0, 0, 0.499585,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.483786,-99) , 
7, -1.57143, 0, 0, 0.498413,-99) , 
8, 9.62113, 0, 0, 0.499309,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0145086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493792,-99) , 
8, -2.33465, 0, 0, 0.499383,-99) , 
8, 6.40336, 0, 0, 0.50054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483392,-99) , 
2, 0.138839, 0, 0, 0.497834,-99) , 
NN(
0, 
0, 
-1, 0.432304, 1, -1, 0.47429,-99) , 
3, 4.73802, 1, 0, 0.488728,-99) , 
2, 0.07176, 1, 0, 0.498772,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0128197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504037, 0, 1, 0.512191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486372,-99) , 
0, 0.505981, 1, 0, 0.50856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492868,-99) , 
7, -0.387805, 0, 0, 0.497806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462797,-99) , 
0, 0.497818, 0, 0, 0.484278,-99) , 
7, 1.57135, 1, 0, 0.496706,-99) , 
0, 0.5019, 0, 0, 0.498927,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0205836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497821,-99) , 
6, -951.286, 0, 0, 0.511636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477137,-99) , 
6, -951.286, 1, 0, 0.498914,-99) , 
8, -0.923846, 0, 0, 0.505032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488776,-99) , 
4, 0.999977, 0, 0, 0.497237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470368,-99) , 
4, 0.999524, 0, 0, 0.495625,-99) , 
7, 0.428573, 0, 0, 0.498996,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0096711);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499479,-99) , 
8, -0.941412, 0, 0, 0.502218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485584,-99) , 
8, 2.69396, 0, 0, 0.493406,-99) , 
9, 2.04344, 1, 0, 0.500084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475186,-99) , 
7, 2.14281, 1, 0, 0.49937,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0149664);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498631,-99) , 
2, 0.0280335, 0, 0, 0.502779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490887,-99) , 
7, 1.57137, 0, 0, 0.493624,-99) , 
3, 2.8085, 1, 0, 0.499384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479758,-99) , 
3, 9.52224, 1, 0, 0.498653,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.00976482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497517,-99) , 
3, 9.18112, 0, 0, 0.498526,-99) , 
7, 1.85714, 0, 0, 0.49966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475286,-99) , 
4, 0.999048, 0, 0, 0.498813,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.012806);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493314,-99) , 
9, -0.552001, 0, 0, 0.517021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493948,-99) , 
6, -951.286, 1, 0, 0.499258,-99) , 
7, -1.57143, 1, 0, 0.5006,-99) , 
NN(
0, 
0, 
-1, 0.143358, 0, -1, 0.487554,-99) , 
4, 0.999524, 0, 0, 0.499779,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0117673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499371,-99) , 
3, 1.91428, 1, 0, 0.519608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498004,-99) , 
4, 0.999955, 1, 0, 0.501261,-99) , 
4, 0.999524, 1, 0, 0.502403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479411,-99) , 
3, 9.52351, 1, 0, 0.50154,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0101091);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.215804, 1, 1, 0.504566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483959,-99) , 
3, 9.16847, 1, 0, 0.503689,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0103289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498659,-99) , 
6, -951.286, 1, 0, 0.50273,-99) , 
7, 2.1428, 0, 0, 0.503345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475504,-99) , 
4, 0.999048, 0, 0, 0.502376,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0100389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18795, 0, 1, 0.502475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472656,-99) , 
9, 0.201558, 1, 0, 0.49239,-99) , 
4, 0.999909, 0, 0, 0.500888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480734,-99) , 
4, 0.999048, 0, 0, 0.500184,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0130452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493395,-99) , 
9, 0.746309, 1, 0, 0.513757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48065,-99) , 
9, 2.08702, 1, 0, 0.50564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49677,-99) , 
3, 0.557031, 1, 0, 0.49801,-99) , 
3, 9.2746, 0, 0, 0.49862,-99) , 
2, -0.0715402, 1, 0, 0.499772,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0120362);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505981, 1, 1, 0.517691,-99) , 
NN(
NN(
0, 
0, 
-1, -1.15736, 0, 1, 0.506948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497182,-99) , 
0, 0.498226, 1, 0, 0.501307,-99) , 
7, 0.142791, 0, 0, 0.503886,-99) , 
0, 0.504757, 0, 0, 0.504681,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.00955364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481476,-99) , 
6, -951.286, 0, 0, 0.490221,-99) , 
7, -1.2857, 0, 0, 0.501315,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.486387,-99) , 
0, 0.492376, 0, 0, 0.500014,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0179062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496988,-99) , 
9, 2.56038, 1, 0, 0.515917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429737,-99) , 
6, -1.57153, 0, 0, 0.496821,-99) , 
8, -0.688119, 0, 0, 0.502461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495736,-99) , 
8, 1.67207, 0, 0, 0.497793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467468,-99) , 
7, -1.85714, 0, 0, 0.49623,-99) , 
6, -951.286, 0, 0, 0.498925,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.015108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491283,-99) , 
9, -0.906617, 0, 0, 0.51243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49707,-99) , 
8, 0.439686, 0, 0, 0.499406,-99) , 
NN(
0, 
0, 
-1, 2.01439, 0, -1, 0.485328,-99) , 
9, 3.13314, 1, 0, 0.497067,-99) , 
7, -1.57143, 1, 0, 0.498215,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0104843);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484383,-99) , 
9, 3.46018, 1, 0, 0.506807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499063,-99) , 
2, 0.0185629, 0, 0, 0.500576,-99) , 
2, 0.0302205, 0, 0, 0.502182,-99) , 
2, -0.214594, 1, 0, 0.502912,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00699471);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484446,-99) , 
3, 9.1652, 1, 0, 0.502188,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0170514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488965,-99) , 
9, 0.881655, 1, 0, 0.500278,-99) , 
8, 0.0591424, 0, 0, 0.501696,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489213,-99) , 
9, 5.07232, 1, 0, 0.496701,-99) , 
NN(
0, 
0, 
-1, 2.99557, 1, -1, 0.479373,-99) , 
8, 2.42719, 0, 0, 0.488707,-99) , 
9, 2.21654, 1, 0, 0.498668,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.00803346);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.30963, 0, 1, 0.512992,-99) , 
NN(
0, 
0, 
-1, 3.26314, 1, -1, 0.496819,-99) , 
8, 4.77341, 0, 0, 0.498196,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.00870324);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49904,-99) , 
1, 0.00298658, 0, 0, 0.511472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491519,-99) , 
9, 3.73929, 1, 0, 0.508,-99) , 
NN(
NN(
0, 
0, 
-1, -1.66667, 1, 1, 0.501216,-99) , 
NN(
0, 
0, 
-1, -0.90469, 0, -1, 0.490093,-99) , 
2, 0.0711453, 1, 0, 0.499533,-99) , 
7, 0.999968, 0, 0, 0.501145,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0143737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514572,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.506449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495423,-99) , 
2, 0.00731187, 0, 0, 0.499707,-99) , 
2, 0.0306336, 0, 0, 0.501434,-99) , 
2, -0.214244, 1, 0, 0.502047,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.00777506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498196,-99) , 
9, 2.30838, 1, 0, 0.510291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485018,-99) , 
4, 0.999637, 0, 0, 0.499999,-99) , 
7, 0.999934, 0, 0, 0.501953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477661,-99) , 
4, 0.999048, 0, 0, 0.501107,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0153994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495834,-99) , 
3, 1.64117, 1, 0, 0.500319,-99) , 
4, 0.999048, 1, 0, 0.502218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491399,-99) , 
0, 0.494282, 1, 0, 0.496615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481094,-99) , 
3, 9.04072, 1, 0, 0.49323,-99) , 
3, 4.68114, 1, 0, 0.500403,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.00906739);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497617,-99) , 
0, 0.491424, 1, 0, 0.498587,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.48502,-99) , 
4, 0.999524, 0, 0, 0.497748,-99) , 
7, 2.1428, 0, 0, 0.49865,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0169915);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491402,-99) , 
9, 3.37978, 1, 0, 0.504067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483983,-99) , 
6, -951.286, 0, 0, 0.494342,-99) , 
7, -1, 0, 0, 0.502379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475138,-99) , 
5, 0.0238087, 1, 0, 0.501368,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00722393);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.72903, 0, 1, 0.510416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522739,-99) , 
NN(
0, 
0, 
-1, 2.62406, 1, -1, 0.498138,-99) , 
8, 1.79101, 0, 0, 0.499218,-99) , 
8, 3.19208, 0, 0, 0.50044,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00734584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496188, 1, 1, 0.515689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49858,-99) , 
3, 9.0526, 0, 0, 0.49921,-99) , 
7, 1.57142, 0, 0, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480025,-99) , 
4, 0.999048, 0, 0, 0.499881,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0129368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.928092, 0, 1, 0.512189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489402,-99) , 
8, 2.6424, 0, 0, 0.500239,-99) , 
9, 2.24063, 1, 0, 0.508042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497428,-99) , 
2, -0.0300503, 1, 0, 0.499421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468565,-99) , 
2, 0.21474, 1, 0, 0.498179,-99) , 
7, 0.714285, 0, 0, 0.500813,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0211422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.51514, 1, 1, 0.523412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417851,-99) , 
6, -1.57147, 0, 0, 0.498399,-99) , 
8, -0.897535, 0, 0, 0.506246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48033,-99) , 
7, 1.84354, 1, 0, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465788,-99) , 
7, -1.85713, 0, 0, 0.500606,-99) , 
6, -951.286, 0, 0, 0.503052,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0118877);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496943,-99) , 
6, -951.286, 0, 0, 0.503073,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.495219,-99) , 
0, 0.500947, 0, 0, 0.497175,-99) , 
7, -1.85713, 1, 0, 0.498266,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0130186);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482318,-99) , 
7, -1.2857, 0, 0, 0.500175,-99) , 
NN(
0, 
0, 
-1, 1.85174, 0, -1, 0.484868,-99) , 
9, 2.93727, 1, 0, 0.498431,-99) , 
8, 6.47517, 0, 0, 0.499538,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0119795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498666,-99) , 
9, -0.770638, 0, 0, 0.513018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499641,-99) , 
8, -1.16221, 0, 0, 0.501909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492865,-99) , 
5, 0.023792, 0, 0, 0.495974,-99) , 
9, 1.09178, 1, 0, 0.499496,-99) , 
7, -1.57143, 1, 0, 0.500505,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0109907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497493,-99) , 
7, 1.8571, 0, 0, 0.498524,-99) , 
3, 9.42864, 0, 0, 0.499715,-99) , 
NN(
0, 
0, 
-1, -0.142874, 1, -1, 0.476327,-99) , 
4, 0.999524, 0, 0, 0.498256,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0121121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462344,-99) , 
9, 2.69612, 1, 0, 0.500075,-99) , 
8, 1.43959, 0, 0, 0.501612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486883,-99) , 
3, 2.40465, 0, 0, 0.498077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465061,-99) , 
8, 4.63883, 0, 0, 0.4886,-99) , 
9, 3.94896, 1, 0, 0.500045,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0119082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496139,-99) , 
7, -1.28571, 1, 0, 0.497931,-99) , 
4, 0.999048, 1, 0, 0.498883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48119,-99) , 
3, 9.50466, 1, 0, 0.498215,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0112197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505278,-99) , 
NN(
0, 
0, 
-1, 3.82404, 0, -1, 0.496017,-99) , 
3, 3.55682, 1, 0, 0.502786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478945,-99) , 
3, 9.16847, 1, 0, 0.50178,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00732964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496024,-99) , 
7, -0.714283, 0, 0, 0.51264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495822,-99) , 
9, 2.78446, 1, 0, 0.50956,-99) , 
NN(
NN(
0, 
0, 
-1, -1.85713, 1, 1, 0.500983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482333,-99) , 
0, 0.491424, 0, 0, 0.500037,-99) , 
2, -0.0714407, 1, 0, 0.501619,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0122881);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493521,-99) , 
7, -0.238085, 0, 0, 0.501826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480334,-99) , 
9, -0.592176, 1, 0, 0.49558,-99) , 
8, -2.62529, 0, 0, 0.499922,-99) , 
7, -1.85714, 1, 0, 0.500732,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.00817063);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23807, 1, 1, 0.524276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526082,-99) , 
NN(
0, 
0, 
-1, 0.0238062, 1, -1, 0.498019,-99) , 
8, 9.83884, 0, 0, 0.499148,-99) , 
7, 1.85711, 0, 0, 0.500486,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0111279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0705888, 1, 1, 0.510478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499698,-99) , 
8, 0.0184867, 0, 0, 0.502781,-99) , 
1, 0.00340303, 0, 0, 0.504834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484408,-99) , 
5, 0.0238087, 1, 0, 0.504073,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0150151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48573,-99) , 
9, 1.06132, 1, 0, 0.501064,-99) , 
7, 1.00003, 0, 0, 0.507906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495014,-99) , 
2, 0.078248, 0, 0, 0.497234,-99) , 
8, 4.66423, 0, 0, 0.498394,-99) , 
2, -0.0713995, 1, 0, 0.499972,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00935138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497926,-99) , 
4, 0.999955, 1, 0, 0.500191,-99) , 
3, 9.42498, 0, 0, 0.501185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481301,-99) , 
4, 0.999048, 0, 0, 0.500481,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.011594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496005,-99) , 
3, 1.89827, 1, 0, 0.523665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495411,-99) , 
8, -2.91433, 0, 0, 0.501917,-99) , 
4, 0.999524, 1, 0, 0.503288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4867,-99) , 
3, 9.42754, 1, 0, 0.502643,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.014903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142273, 0, 1, 0.518777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494173,-99) , 
9, 0.946214, 1, 0, 0.502374,-99) , 
8, 2.00288, 0, 0, 0.503686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48771,-99) , 
8, 6.35618, 1, 0, 0.502656,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0112453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47162,-99) , 
4, 0.999955, 0, 0, 0.517065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48459,-99) , 
9, 6.86624, 1, 0, 0.499293,-99) , 
7, -1.2857, 1, 0, 0.501416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468668,-99) , 
4, 0.999048, 0, 0, 0.500282,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0106235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.66419, 0, 1, 0.510903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495833,-99) , 
7, -0.714306, 1, 0, 0.497893,-99) , 
0, 0.503805, 0, 0, 0.499062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480721,-99) , 
3, 9.41001, 1, 0, 0.498343,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.00626531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499052,-99) , 
7, 1.8571, 0, 0, 0.499926,-99) , 
4, 0.999048, 1, 0, 0.500811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483162,-99) , 
3, 9.26255, 1, 0, 0.500086,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.012444);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496933,-99) , 
9, 2.95469, 1, 0, 0.50505,-99) , 
NN(
0, 
0, 
-1, 0.0894551, 1, -1, 0.496008,-99) , 
8, -2.07526, 0, 0, 0.50123,-99) , 
7, -1.85713, 1, 0, 0.501968,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0166516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.58505, 0, 1, 0.520422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491237,-99) , 
3, 1.9505, 0, 0, 0.505226,-99) , 
7, 0.714289, 0, 0, 0.510339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499496,-99) , 
8, -1.62839, 0, 0, 0.503106,-99) , 
NN(
0, 
0, 
-1, -1.00345, 0, -1, 0.487332,-99) , 
9, 1.03847, 1, 0, 0.500313,-99) , 
8, -0.0698689, 0, 0, 0.50309,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0130931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.990198, 0, 1, 0.504912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486462,-99) , 
7, 0.428635, 0, 0, 0.495413,-99) , 
2, 0.0714475, 1, 0, 0.503546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502603,-99) , 
NN(
0, 
0, 
-1, -0.14295, 1, -1, 0.482784,-99) , 
8, -0.589745, 0, 0, 0.490221,-99) , 
0, 0.503805, 1, 0, 0.502368,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.01043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495814,-99) , 
3, 1.71587, 0, 0, 0.508402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48163,-99) , 
9, 2.86846, 1, 0, 0.500167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467776,-99) , 
7, -1.85713, 0, 0, 0.498706,-99) , 
8, 3.20265, 0, 0, 0.499775,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00887279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486218,-99) , 
3, 7.65706, 1, 0, 0.501867,-99) , 
3, 9.42864, 0, 0, 0.502695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473065,-99) , 
7, 0.142833, 0, 0, 0.489284,-99) , 
4, 0.999524, 0, 0, 0.501849,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.00932331);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498405,-99) , 
9, -0.700104, 1, 0, 0.50079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476754,-99) , 
5, 0.023792, 1, 0, 0.50009,-99) , 
8, 6.428, 0, 0, 0.501212,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0160065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49628,-99) , 
9, -0.596329, 1, 0, 0.505512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492518,-99) , 
5, 0.00226722, 1, 0, 0.496184,-99) , 
9, 0.116178, 1, 0, 0.500109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479538,-99) , 
5, 0.0238062, 1, 0, 0.499356,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0191968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91855, 0, 1, 0.533031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462451,-99) , 
8, -3.90449, 1, 0, 0.492556,-99) , 
9, -0.802372, 0, 0, 0.511971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490874,-99) , 
9, 3.70177, 1, 0, 0.503411,-99) , 
NN(
0, 
0, 
-1, 0.612586, 1, -1, 0.484478,-99) , 
7, -0.87755, 0, 0, 0.50157,-99) , 
7, -1.28572, 1, 0, 0.502817,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0299275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492325,-99) , 
4, 0.999998, 0, 0, 0.505193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472993,-99) , 
2, -0.0707348, 0, 0, 0.496511,-99) , 
4, 0.999977, 0, 0, 0.502177,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.46898,-99) , 
4, 0.999524, 0, 0, 0.50015,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0126051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499354,-99) , 
9, -0.30191, 1, 0, 0.522488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496599,-99) , 
8, 3.3042, 0, 0, 0.498349,-99) , 
4, 0.999524, 1, 0, 0.49988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474512,-99) , 
3, 9.50466, 1, 0, 0.498935,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0215435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49465,-99) , 
4, 0.999999, 0, 0, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0.817266, 1, -1, 0.490577,-99) , 
4, 0.999977, 0, 0, 0.498106,-99) , 
NN(
0, 
0, 
-1, -0.197309, 1, -1, 0.481829,-99) , 
4, 0.999524, 0, 0, 0.497089,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0101221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498097,-99) , 
0, 0.503593, 0, 0, 0.503869,-99) , 
0, 0.501582, 1, 0, 0.507196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490902,-99) , 
7, -1.28572, 0, 0, 0.50532,-99) , 
NN(
0, 
0, 
-1, 1.85704, 1, -1, 0.497849,-99) , 
0, 0.495233, 1, 0, 0.500207,-99) , 
0, 0.500947, 0, 0, 0.501958,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0124129);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142666, 0, 1, 0.523264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498638,-99) , 
9, -0.802372, 0, 0, 0.508455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496532,-99) , 
7, 0.333345, 0, 0, 0.50048,-99) , 
7, -0.99999, 1, 0, 0.501891,-99) , 
0, 0.504757, 0, 0, 0.50313,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0156763);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.514486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479676,-99) , 
9, 2.55596, 1, 0, 0.503659,-99) , 
8, 1.72209, 0, 0, 0.504631,-99) , 
8, 3.12661, 0, 0, 0.505733,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.011628);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481252,-99) , 
3, 9.41001, 1, 0, 0.504367,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.00745419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.10154, 1, 1, 0.502611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483659,-99) , 
9, 6.57509, 1, 0, 0.501592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486434,-99) , 
5, 0.023792, 1, 0, 0.501031,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0133213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48982,-99) , 
7, -0.714248, 0, 0, 0.508456,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.497183,-99) , 
8, -0.246584, 0, 0, 0.500487,-99) , 
NN(
0, 
0, 
-1, -0.999979, 0, -1, 0.487478,-99) , 
2, 0.0714447, 1, 0, 0.498539,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0104265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495001,-99) , 
7, 0.142862, 1, 0, 0.499279,-99) , 
4, 0.999048, 1, 0, 0.500129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476556,-99) , 
3, 9.41001, 1, 0, 0.499241,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.00948221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85713, 1, 1, 0.501989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483777,-99) , 
0, 0.505256, 0, 0, 0.492455,-99) , 
0, 0.503805, 1, 0, 0.500753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488855,-99) , 
7, 0.143244, 0, 0, 0.501346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488146,-99) , 
3, 2.12229, 0, 0, 0.493496,-99) , 
3, 4.8082, 0, 0, 0.494934,-99) , 
0, 0.496186, 0, 0, 0.498961,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.011445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496454,-99) , 
2, -0.0651795, 1, 0, 0.498055,-99) , 
3, 9.18404, 0, 0, 0.49933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475833,-99) , 
4, 0.999048, 0, 0, 0.498505,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0147483);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498688,-99) , 
9, 0.490323, 1, 0, 0.504749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49337,-99) , 
2, -0.0188759, 1, 0, 0.495247,-99) , 
2, -0.030537, 1, 0, 0.497839,-99) , 
2, 0.214332, 0, 0, 0.498543,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.009191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498097, 1, 1, 0.527549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492641,-99) , 
8, 4.41786, 0, 0, 0.503483,-99) , 
9, 3.64146, 1, 0, 0.510583,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48018,-99) , 
3, 9.13602, 1, 0, 0.500617,-99) , 
8, 0.990198, 0, 0, 0.502495,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00934446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18769, 0, 1, 0.502134,-99) , 
NN(
0, 
0, 
-1, 0.493329, 0, -1, 0.48975,-99) , 
4, 0.999909, 0, 0, 0.500181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459291,-99) , 
4, 0.999048, 0, 0, 0.498802,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0102843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497203,-99) , 
2, -0.0306409, 1, 0, 0.499081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479671,-99) , 
6, -951.286, 0, 0, 0.488631,-99) , 
7, 1.28566, 1, 0, 0.497763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47975,-99) , 
2, 0.214239, 1, 0, 0.497031,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0166111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491162,-99) , 
7, 0.140835, 0, 0, 0.51819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496772,-99) , 
7, -0.428538, 1, 0, 0.500789,-99) , 
6, -951.286, 0, 0, 0.507408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495435,-99) , 
9, 1.38037, 1, 0, 0.506993,-99) , 
NN(
0, 
0, 
-1, 1.11694, 1, -1, 0.494739,-99) , 
8, -1.01091, 0, 0, 0.496697,-99) , 
8, -0.0769123, 0, 0, 0.499664,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0177939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493184,-99) , 
7, -0.150024, 0, 0, 0.521739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460616,-99) , 
7, 0.649915, 1, 0, 0.499746,-99) , 
8, -2.41866, 0, 0, 0.504019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491783,-99) , 
3, 1.8683, 0, 0, 0.500712,-99) , 
NN(
0, 
0, 
-1, -1.98022, 0, -1, 0.492682,-99) , 
8, 0.193151, 0, 0, 0.496222,-99) , 
9, 0.215291, 1, 0, 0.499627,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0120746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49898,-99) , 
8, 0.955207, 0, 0, 0.50147,-99) , 
4, 0.999048, 1, 0, 0.503054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493611,-99) , 
7, 0.714276, 0, 0, 0.498373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470944,-99) , 
0, 0.494281, 0, 0, 0.493728,-99) , 
3, 4.57421, 1, 0, 0.501087,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0154312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488917,-99) , 
0, 0.491424, 0, 0, 0.505259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493632,-99) , 
7, -0.206356, 0, 0, 0.506393,-99) , 
NN(
0, 
0, 
-1, 0.139796, 1, -1, 0.483412,-99) , 
9, 0.396566, 1, 0, 0.494511,-99) , 
2, 0.0718317, 1, 0, 0.503647,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.00757499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28569, 0, 1, 0.507992,-99) , 
NN(
0, 
0, 
-1, 2.42577, 1, -1, 0.49816,-99) , 
8, 0.874947, 0, 0, 0.50012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479259,-99) , 
2, 0.213865, 1, 0, 0.499269,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.00507545);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214752, 0, 1, 0.501869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478991,-99) , 
4, 0.999048, 0, 0, 0.50107,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0128956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49692,-99) , 
7, -0.142727, 0, 0, 0.50351,-99) , 
0, 0.500948, 0, 0, 0.507559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487561,-99) , 
2, -0.281632, 0, 0, 0.509985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496026,-99) , 
2, 0.0175803, 0, 0, 0.498233,-99) , 
2, -0.153398, 1, 0, 0.499323,-99) , 
2, 0.0710108, 0, 0, 0.500583,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0126017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.567562, 0, 1, 0.504441,-99) , 
NN(
0, 
0, 
-1, -0.0612279, 0, -1, 0.494058,-99) , 
9, 2.93635, 1, 0, 0.502516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446592,-99) , 
8, -1.61173, 1, 0, 0.47956,-99) , 
6, -951.286, 0, 0, 0.489581,-99) , 
7, -1.28571, 0, 0, 0.501025,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0118514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.510978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485626,-99) , 
7, -0.714291, 0, 0, 0.498667,-99) , 
8, -3.42687, 1, 0, 0.500529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471309,-99) , 
5, 0.0238062, 1, 0, 0.499463,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0162269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468719,-99) , 
7, -1.85715, 0, 0, 0.501454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488872,-99) , 
8, -0.710085, 0, 0, 0.495661,-99) , 
6, -951.286, 1, 0, 0.498966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480107,-99) , 
2, -0.214589, 0, 0, 0.498128,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.00663873);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516516,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0238062, 0, 1, 0.501036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473914,-99) , 
9, -0.886653, 1, 0, 0.492876,-99) , 
8, -2.91433, 0, 0, 0.499041,-99) , 
2, -0.214238, 1, 0, 0.499856,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.00906605);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499523,-99) , 
9, -0.461157, 1, 0, 0.501327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483575,-99) , 
8, -4.2774, 1, 0, 0.489058,-99) , 
8, -3.34239, 0, 0, 0.499384,-99) , 
2, -0.213316, 1, 0, 0.500169,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0116912);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499729,-99) , 
9, 0.872894, 1, 0, 0.505857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495431,-99) , 
0, 0.494145, 1, 0, 0.497303,-99) , 
7, 0.999999, 0, 0, 0.49894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46668,-99) , 
7, 0.143057, 0, 0, 0.481981,-99) , 
0, 0.504757, 1, 0, 0.49799,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00833219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0706762, 1, 1, 0.507298,-99) , 
NN(
0, 
0, 
-1, -1.93877, 0, -1, 0.4981,-99) , 
7, 0.714257, 0, 0, 0.500551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471001,-99) , 
0, 0.505709, 1, 0, 0.499599,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00500846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499791,-99) , 
2, -0.192793, 1, 0, 0.500713,-99) , 
4, 0.999048, 1, 0, 0.501402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481131,-99) , 
3, 9.18112, 1, 0, 0.500552,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.00701419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.10779, 1, 1, 0.508988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499382,-99) , 
3, 9.17234, 0, 0, 0.500223,-99) , 
2, -0.0713868, 1, 0, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0.1429, 0, -1, 0.481804,-99) , 
0, 0.504757, 1, 0, 0.500524,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0201272);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491146,-99) , 
7, 0.143199, 0, 0, 0.516039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444683,-99) , 
6, -1.28577, 0, 0, 0.497241,-99) , 
8, -0.710085, 0, 0, 0.502818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489282,-99) , 
4, 0.999977, 0, 0, 0.49849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476471,-99) , 
4, 0.999524, 0, 0, 0.49726,-99) , 
6, -951.286, 0, 0, 0.499677,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00821746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498142,-99) , 
0, 0.491424, 1, 0, 0.498874,-99) , 
4, 0.999048, 1, 0, 0.499969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476922,-99) , 
3, 9.42206, 1, 0, 0.499084,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00506288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.173715, 0, 1, 0.501381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47998,-99) , 
7, 0.428639, 1, 0, 0.493586,-99) , 
0, 0.503124, 1, 0, 0.500704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478808,-99) , 
0, 0.505709, 1, 0, 0.499993,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0202233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467802,-99) , 
7, -0.432133, 0, 0, 0.520939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484482,-99) , 
9, 0.746309, 1, 0, 0.498209,-99) , 
8, -0.379756, 0, 0, 0.500107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496183,-99) , 
3, 3.32388, 1, 0, 0.50406,-99) , 
NN(
0, 
0, 
-1, 0.582215, 0, -1, 0.476777,-99) , 
8, 2.42719, 0, 0, 0.49088,-99) , 
9, 2.08702, 1, 0, 0.497821,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0110473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497176,-99) , 
1, -0.00113768, 1, 0, 0.501174,-99) , 
5, 0.0238087, 0, 0, 0.50182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4881,-99) , 
9, 1.20306, 1, 0, 0.496624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479021,-99) , 
2, -0.275477, 0, 0, 0.493654,-99) , 
2, -0.0714577, 0, 0, 0.500488,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0181157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473899,-99) , 
4, 0.999955, 0, 0, 0.510024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493377,-99) , 
8, -1.87808, 0, 0, 0.499805,-99) , 
7, -0.999975, 1, 0, 0.50162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471959,-99) , 
4, 0.999048, 0, 0, 0.500593,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.00549907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.474882, 1, 1, 0.501135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474837,-99) , 
3, 7.46185, 1, 0, 0.500188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480075,-99) , 
3, 9.18832, 1, 0, 0.499346,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.00833459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502851, 0, 1, 0.506477,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.497059,-99) , 
2, 0.0510323, 0, 0, 0.498505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479675,-99) , 
2, 0.214293, 1, 0, 0.497741,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.00939226);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499602,-99) , 
8, 0.404613, 0, 0, 0.501447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485665,-99) , 
7, -0.237815, 1, 0, 0.490923,-99) , 
9, 2.89491, 1, 0, 0.499554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478352,-99) , 
7, -1.85713, 0, 0, 0.498669,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0110819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.590874, 0, 1, 0.51798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48637,-99) , 
0, 0.497142, 0, 0, 0.495297,-99) , 
9, 2.42978, 1, 0, 0.510404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488994,-99) , 
0, 0.503804, 1, 0, 0.500101,-99) , 
NN(
0, 
0, 
-1, 0.493328, 1, -1, 0.49142,-99) , 
0, 0.494281, 0, 0, 0.498609,-99) , 
7, 0.999968, 0, 0, 0.500878,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.00949718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498356,-99) , 
8, 0.514015, 0, 0, 0.500428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482877,-99) , 
3, 2.01439, 0, 0, 0.492474,-99) , 
9, 3.7493, 1, 0, 0.499372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476218,-99) , 
4, 0.999048, 0, 0, 0.498572,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.00631729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52456,-99) , 
NN(
0, 
0, 
-1, 7.35811, 1, -1, 0.498998,-99) , 
3, 9.05927, 0, 0, 0.500111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463637,-99) , 
9, -0.297906, 1, 0, 0.486738,-99) , 
4, 0.999524, 0, 0, 0.499281,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0117419);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481803,-99) , 
7, 2.07479, 1, 0, 0.502913,-99) , 
NN(
0, 
0, 
-1, 2.55841, 0, -1, 0.489573,-99) , 
9, 4.47128, 1, 0, 0.501476,-99) , 
7, -1.85714, 1, 0, 0.502646,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0164918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.931971, 0, 1, 0.505751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476802,-99) , 
6, -951.286, 0, 0, 0.490288,-99) , 
7, -1.28567, 0, 0, 0.503654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493239,-99) , 
3, 2.23195, 0, 0, 0.4991,-99) , 
NN(
0, 
0, 
-1, 0.498096, 1, -1, 0.483043,-99) , 
3, 4.16298, 1, 0, 0.495288,-99) , 
9, 2.04344, 1, 0, 0.501538,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00993909);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.510857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498601,-99) , 
7, -0.455804, 1, 0, 0.504689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495926,-99) , 
7, -1.84351, 1, 0, 0.496616,-99) , 
0, 0.493329, 1, 0, 0.497638,-99) , 
7, 1.8571, 0, 0, 0.498336,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0136208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.377498, 1, 1, 0.506692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491599,-99) , 
9, 0.35969, 0, 0, 0.498202,-99) , 
3, 1.89595, 1, 0, 0.502069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481713,-99) , 
3, 9.42498, 1, 0, 0.501286,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0126371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494694,-99) , 
4, 0.999977, 0, 0, 0.501076,-99) , 
2, -0.215326, 1, 0, 0.501898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456781,-99) , 
9, -0.415499, 1, 0, 0.479385,-99) , 
4, 0.999524, 0, 0, 0.500516,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0148607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.687032, 0, 1, 0.510246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49872,-99) , 
7, -0.278908, 0, 0, 0.500492,-99) , 
2, 0.0714475, 0, 0, 0.502001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492201,-99) , 
6, -951.286, 0, 0, 0.501331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480579,-99) , 
6, -951.286, 1, 0, 0.491446,-99) , 
8, -0.696724, 0, 0, 0.495389,-99) , 
7, -0.142852, 1, 0, 0.498315,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0115575);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495827,-99) , 
2, 0.0273017, 0, 0, 0.498031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469785,-99) , 
2, -0.275796, 0, 0, 0.497229,-99) , 
2, 0.213822, 0, 0, 0.498178,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0158495);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496959,-99) , 
8, -2.09992, 0, 0, 0.501036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491933,-99) , 
5, 0.0237559, 0, 0, 0.493871,-99) , 
9, 0.427962, 1, 0, 0.497323,-99) , 
0, 0.490471, 1, 0, 0.497935,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.00366789);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42498, 0, 1, 0.501372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485563,-99) , 
4, 0.999048, 0, 0, 0.500814,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00784211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498345,-99) , 
0, 0.497139, 0, 0, 0.511806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498217,-99) , 
4, 0.999728, 1, 0, 0.499,-99) , 
3, 9.18778, 0, 0, 0.499958,-99) , 
4, 0.999524, 1, 0, 0.500738,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0111681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499193,-99) , 
9, 0.314772, 1, 0, 0.504209,-99) , 
NN(
0, 
0, 
-1, 0.714317, 1, -1, 0.494064,-99) , 
0, 0.501809, 1, 0, 0.502131,-99) , 
NN(
0, 
0, 
-1, -0.14211, 0, -1, 0.490861,-99) , 
0, 0.492376, 0, 0, 0.501152,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0139903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.507309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493517,-99) , 
8, -1.4254, 0, 0, 0.499768,-99) , 
7, -0.428564, 1, 0, 0.502358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478282,-99) , 
4, 0.999048, 0, 0, 0.501514,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0120614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28455, 0, 1, 0.507568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482479,-99) , 
6, -1.28578, 0, 0, 0.504646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49975,-99) , 
7, -1.39453, 1, 0, 0.501414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457513,-99) , 
7, -1.85714, 0, 0, 0.499163,-99) , 
6, -951.286, 0, 0, 0.501542,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0168066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.116002, 0, 1, 0.525645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478705,-99) , 
9, -0.0585095, 1, 0, 0.503753,-99) , 
8, -2.12104, 0, 0, 0.507066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468792,-99) , 
8, -1.66686, 0, 0, 0.496793,-99) , 
8, 6.6899, 0, 0, 0.499068,-99) , 
9, 0.442445, 1, 0, 0.502958,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0140155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495234, 1, 1, 0.503935,-99) , 
NN(
0, 
0, 
-1, -1.57147, 0, -1, 0.495223,-99) , 
6, -951.286, 1, 0, 0.500125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489603,-99) , 
9, -0.83209, 0, 0, 0.498831,-99) , 
NN(
0, 
0, 
-1, 1.55572, 0, -1, 0.468742,-99) , 
8, -1.29652, 1, 0, 0.489203,-99) , 
7, -0.999984, 0, 0, 0.49823,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0072389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499127,-99) , 
7, 1.85707, 0, 0, 0.500056,-99) , 
4, 0.999048, 1, 0, 0.501375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479566,-99) , 
3, 9.50853, 1, 0, 0.500566,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0133994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.342959, 0, 1, 0.506638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487567,-99) , 
6, -951.286, 0, 0, 0.496855,-99) , 
9, 2.94373, 1, 0, 0.504541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499582,-99) , 
9, 0.206357, 0, 0, 0.502787,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.48986,-99) , 
8, -0.900013, 1, 0, 0.498936,-99) , 
7, -0.142874, 0, 0, 0.502082,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0154509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494889,-99) , 
9, -1.60436, 0, 0, 0.505485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490921,-99) , 
8, -0.977349, 0, 0, 0.498566,-99) , 
7, 0.14286, 1, 0, 0.502361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481952,-99) , 
4, 0.999048, 0, 0, 0.501644,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.00752202);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85706, 0, 1, 0.502391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484319,-99) , 
9, 0.422363, 1, 0, 0.49208,-99) , 
2, -0.0705682, 1, 0, 0.495119,-99) , 
0, 0.495233, 0, 0, 0.500684,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.012406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495468,-99) , 
7, 1.85709, 0, 0, 0.497432,-99) , 
9, 0.464511, 1, 0, 0.501512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480031,-99) , 
0, 0.490472, 0, 0, 0.500696,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.00744969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.19651, 0, 1, 0.504327,-99) , 
NN(
0, 
0, 
-1, 0.0713978, 1, -1, 0.497713,-99) , 
9, 0.327366, 1, 0, 0.500824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483899,-99) , 
5, 0.0237841, 1, 0, 0.500195,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0125609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.14769, 1, 1, 0.510342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494616,-99) , 
9, -0.177144, 1, 0, 0.498434,-99) , 
8, 2.50867, 0, 0, 0.499964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477756,-99) , 
4, 0.999048, 0, 0, 0.499196,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0146897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499049,-99) , 
8, -0.475139, 1, 0, 0.506346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49271,-99) , 
8, -0.849808, 0, 0, 0.498837,-99) , 
6, -951.286, 1, 0, 0.503112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491615,-99) , 
8, -0.093455, 1, 0, 0.499421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47827,-99) , 
8, -0.511045, 0, 0, 0.492721,-99) , 
7, 0.714289, 1, 0, 0.49767,-99) , 
0, 0.496186, 1, 0, 0.499351,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0184469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28586, 0, 1, 0.507899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483475,-99) , 
6, -1.28586, 0, 0, 0.505063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498936,-99) , 
9, 3.69577, 1, 0, 0.510899,-99) , 
NN(
0, 
0, 
-1, 2.09692, 1, -1, 0.491227,-99) , 
8, 0.990198, 0, 0, 0.495073,-99) , 
6, -951.286, 0, 0, 0.499409,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.00631448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.501659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483207,-99) , 
4, 0.999683, 0, 0, 0.500749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475795,-99) , 
4, 0.999048, 0, 0, 0.499889,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0113197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498586,-99) , 
7, 2.14283, 0, 0, 0.503199,-99) , 
9, 0.806091, 1, 0, 0.507603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49558,-99) , 
8, -3.26117, 1, 0, 0.496953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478935,-99) , 
0, 0.504757, 1, 0, 0.495935,-99) , 
7, 0.999968, 0, 0, 0.498162,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.00866888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497668,-99) , 
2, -0.0701569, 1, 0, 0.513806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497843,-99) , 
7, -1.57143, 1, 0, 0.499112,-99) , 
4, 0.999524, 1, 0, 0.500019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48615,-99) , 
3, 9.2746, 1, 0, 0.499449,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0186814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.498623, 0, 1, 0.505138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478071,-99) , 
8, 2.17156, 0, 0, 0.492853,-99) , 
9, 2.29542, 1, 0, 0.501965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489862,-99) , 
9, -0.363127, 0, 0, 0.497763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464988,-99) , 
8, 1.42609, 0, 0, 0.480436,-99) , 
8, -1.10612, 1, 0, 0.492487,-99) , 
7, -0.714272, 0, 0, 0.499599,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.00618683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499336,-99) , 
5, 0.0112283, 0, 0, 0.500247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479621,-99) , 
5, 0.0147372, 1, 0, 0.499299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47821,-99) , 
5, 0.0238062, 1, 0, 0.498517,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0154139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499171,-99) , 
7, -0.428585, 0, 0, 0.504589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489336,-99) , 
8, -1.19767, 0, 0, 0.495975,-99) , 
6, -951.286, 1, 0, 0.50086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478627,-99) , 
3, 9.41001, 1, 0, 0.500007,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0165893);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490757,-99) , 
7, 1.61225, 1, 0, 0.50462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477414,-99) , 
7, -1.85713, 0, 0, 0.503227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494122,-99) , 
7, 1.00067, 0, 0, 0.49858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474183,-99) , 
6, -1.57136, 0, 0, 0.496668,-99) , 
6, -951.286, 1, 0, 0.500398,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.00983148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492365,-99) , 
7, 2.18367, 1, 0, 0.512473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497298,-99) , 
0, 0.49995, 0, 0, 0.498876,-99) , 
NN(
0, 
0, 
-1, -0.687103, 0, -1, 0.4889,-99) , 
0, 0.502852, 1, 0, 0.497599,-99) , 
7, 1.85714, 0, 0, 0.498386,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.00573333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.657829, 1, 1, 0.501319,-99) , 
NN(
0, 
0, 
-1, 1.70854, 1, -1, 0.491969,-99) , 
3, 5.92306, 1, 0, 0.500419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473676,-99) , 
3, 9.50466, 1, 0, 0.499429,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.01373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.70214, 1, 1, 0.520217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487308,-99) , 
6, -951.286, 0, 0, 0.498038,-99) , 
0, 0.499995, 0, 0, 0.506422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49584,-99) , 
7, 0.4285, 0, 0, 0.499841,-99) , 
NN(
0, 
0, 
-1, 0.428588, 1, -1, 0.494769,-99) , 
0, 0.499043, 1, 0, 0.497765,-99) , 
2, -0.0714359, 1, 0, 0.4992,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0129668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493689,-99) , 
4, 0.999983, 0, 0, 0.500469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482274,-99) , 
4, 0.999637, 0, 0, 0.499695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477941,-99) , 
4, 0.999048, 0, 0, 0.498939,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.00851593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505981, 1, 1, 0.514992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492936,-99) , 
9, 3.71091, 1, 0, 0.501327,-99) , 
0, 0.504757, 0, 0, 0.50212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486875,-99) , 
7, 1.8571, 1, 0, 0.501356,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0137911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493289,-99) , 
3, 1.39846, 1, 0, 0.513602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494811,-99) , 
2, -0.0073833, 1, 0, 0.499336,-99) , 
4, 0.999524, 1, 0, 0.500217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484274,-99) , 
3, 9.16847, 1, 0, 0.499545,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0139902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492264,-99) , 
8, -2.61148, 0, 0, 0.500882,-99) , 
7, -1.85714, 1, 0, 0.502009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47578,-99) , 
4, 0.999048, 0, 0, 0.501114,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.017885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499066,-99) , 
8, -1.53558, 0, 0, 0.501585,-99) , 
2, -0.214281, 1, 0, 0.502454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48631,-99) , 
6, -951.286, 1, 0, 0.504065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467271,-99) , 
6, -951.286, 0, 0, 0.480933,-99) , 
8, 1.36098, 0, 0, 0.493522,-99) , 
9, 1.62936, 1, 0, 0.499704,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.016313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49175,-99) , 
8, -2.61417, 0, 0, 0.517369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485432,-99) , 
9, -0.426772, 1, 0, 0.498997,-99) , 
7, 0.499338, 0, 0, 0.501613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495468,-99) , 
7, 2.14281, 0, 0, 0.496826,-99) , 
NN(
0, 
0, 
-1, 0.491969, 1, -1, 0.484248,-99) , 
0, 0.493329, 0, 0, 0.495203,-99) , 
9, 0.327366, 1, 0, 0.498157,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0101679);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.212395, 0, 1, 0.504518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479068,-99) , 
4, 0.999048, 0, 0, 0.503641,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.00878868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497334,-99) , 
3, 0.564086, 1, 0, 0.498561,-99) , 
3, 9.42206, 0, 0, 0.499254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483981,-99) , 
4, 0.999048, 0, 0, 0.498725,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0104111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.378951, 1, 1, 0.52458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497829,-99) , 
4, 0.999819, 1, 0, 0.499417,-99) , 
4, 0.999524, 1, 0, 0.500992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484348,-99) , 
3, 9.50466, 1, 0, 0.500365,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0125322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492464,-99) , 
9, 4.78307, 1, 0, 0.504207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486905,-99) , 
5, 0.0238062, 1, 0, 0.503562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477162,-99) , 
7, 2.14285, 1, 0, 0.502791,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.00866099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.511647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499194,-99) , 
7, -0.428581, 1, 0, 0.501648,-99) , 
0, 0.494553, 1, 0, 0.503232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49042,-99) , 
0, 0.490471, 0, 0, 0.502745,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00461281);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502306,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.00886405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497673,-99) , 
3, 9.05601, 0, 0, 0.49857,-99) , 
2, 0.193886, 0, 0, 0.499351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477932,-99) , 
2, -0.214238, 0, 0, 0.498394,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.00696729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519251,-99) , 
NN(
NN(
0, 
0, 
-1, -3.58333, 1, 1, 0.502085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474083,-99) , 
5, 0.0238062, 1, 0, 0.501223,-99) , 
8, 9.6801, 0, 0, 0.501952,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0111522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494952,-99) , 
9, 1.85815, 1, 0, 0.510638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497705,-99) , 
7, -0.714271, 1, 0, 0.500134,-99) , 
2, 0.0710167, 0, 0, 0.501716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47824,-99) , 
0, 0.505709, 1, 0, 0.500971,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.00808316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488611,-99) , 
3, 9.00265, 1, 0, 0.503022,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0142222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492773,-99) , 
8, -2.71641, 0, 0, 0.500464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47596,-99) , 
7, -1.97958, 0, 0, 0.499528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491062,-99) , 
7, 1.84159, 0, 0, 0.495549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459014,-99) , 
7, 2.18367, 1, 0, 0.487993,-99) , 
7, 1.28571, 1, 0, 0.49807,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.00999662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494494,-99) , 
7, 0.142421, 0, 0, 0.516437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497964,-99) , 
8, -0.0419216, 0, 0, 0.500295,-99) , 
4, 0.999524, 1, 0, 0.5013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478611,-99) , 
3, 9.50466, 1, 0, 0.500456,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0068807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476418,-99) , 
3, 9.52584, 1, 0, 0.499929,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.484657,-99) , 
7, -1.57141, 0, 0, 0.498786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48361,-99) , 
9, 7.1827, 1, 0, 0.497974,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.00874628);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4975,-99) , 
8, -3.56161, 1, 0, 0.498938,-99) , 
0, 0.490472, 1, 0, 0.499642,-99) , 
7, 2.1428, 0, 0, 0.500328,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0108397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.570705, 0, 1, 0.503684,-99) , 
NN(
0, 
0, 
-1, 0.0775129, 1, -1, 0.494081,-99) , 
9, 1.79064, 1, 0, 0.50076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50189,-99) , 
NN(
0, 
0, 
-1, -1.85716, 0, -1, 0.479069,-99) , 
6, -951.286, 0, 0, 0.487985,-99) , 
7, -1.28572, 0, 0, 0.499283,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.00896898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497755,-99) , 
3, 0.444669, 1, 0, 0.498852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481319,-99) , 
3, 7.26624, 1, 0, 0.498045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478786,-99) , 
3, 9.50466, 1, 0, 0.497329,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0069409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487654,-99) , 
9, 1.46421, 0, 0, 0.491989,-99) , 
7, 0.999948, 0, 0, 0.494855,-99) , 
0, 0.494281, 0, 0, 0.501088,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00490354);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526582,-99) , 
NN(
NN(
0, 
0, 
-1, 9.25868, 0, 1, 0.501084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486022,-99) , 
2, -0.214589, 0, 0, 0.500413,-99) , 
7, 2.14281, 0, 0, 0.501247,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.011493);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492293,-99) , 
2, -0.0715932, 0, 0, 0.500812,-99) , 
NN(
0, 
0, 
-1, 0.489973, 1, -1, 0.481398,-99) , 
0, 0.491424, 0, 0, 0.499673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508291,-99) , 
NN(
0, 
0, 
-1, 0.499996, 1, -1, 0.481003,-99) , 
3, 4.78812, 0, 0, 0.486459,-99) , 
7, 1.28568, 1, 0, 0.498008,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0190819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493702,-99) , 
9, 2.62287, 1, 0, 0.51665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436874,-99) , 
6, -1.57153, 0, 0, 0.498556,-99) , 
8, -0.710085, 0, 0, 0.503874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49658,-99) , 
8, 0.646993, 0, 0, 0.500023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473626,-99) , 
7, -1.85714, 0, 0, 0.49865,-99) , 
6, -951.286, 0, 0, 0.500912,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0113146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495751,-99) , 
2, 0.0166917, 0, 0, 0.498231,-99) , 
3, 9.42864, 0, 0, 0.499259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467465,-99) , 
9, -0.297906, 1, 0, 0.485038,-99) , 
4, 0.999524, 0, 0, 0.498374,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0129019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489719,-99) , 
9, 1.05562, 1, 0, 0.500266,-99) , 
8, -0.0011969, 0, 0, 0.501462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489503,-99) , 
9, 6.25103, 1, 0, 0.500212,-99) , 
NN(
0, 
0, 
-1, 3.01002, 1, -1, 0.487664,-99) , 
8, 2.42719, 0, 0, 0.493943,-99) , 
9, 2.04344, 1, 0, 0.499558,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00718989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536811,-99) , 
NN(
0, 
0, 
-1, 2.5896, 1, -1, 0.498619,-99) , 
8, 1.5524, 0, 0, 0.500129,-99) , 
NN(
0, 
0, 
-1, 2.01439, 1, -1, 0.490607,-99) , 
9, 3.84667, 1, 0, 0.498957,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0104144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496792,-99) , 
4, 0.999955, 1, 0, 0.499013,-99) , 
4, 0.999048, 1, 0, 0.500023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493363,-99) , 
7, -0.714345, 1, 0, 0.496287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484632,-99) , 
0, 0.502852, 1, 0, 0.494395,-99) , 
3, 4.75487, 1, 0, 0.49891,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0139532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491126,-99) , 
0, 0.5019, 1, 0, 0.506222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492307,-99) , 
9, -0.112951, 1, 0, 0.497361,-99) , 
7, 0.428573, 0, 0, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476467,-99) , 
5, 0.0238088, 1, 0, 0.499657,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0121914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499977,-99) , 
5, 0.0113293, 0, 0, 0.501468,-99) , 
5, 0.023792, 0, 0, 0.502509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49358,-99) , 
9, -1.68917, 1, 0, 0.50173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478935,-99) , 
8, -3.0538, 0, 0, 0.485163,-99) , 
6, -951.286, 1, 0, 0.493084,-99) , 
8, -2.6939, 0, 0, 0.499714,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0135316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518149,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498613,-99) , 
2, -0.0182693, 1, 0, 0.503101,-99) , 
NN(
0, 
0, 
-1, 4.57923, 1, -1, 0.486918,-99) , 
4, 0.999909, 0, 0, 0.500589,-99) , 
4, 0.999048, 1, 0, 0.501247,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0113076);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516671,-99) , 
NN(
NN(
0, 
0, 
-1, 1.46522, 1, 1, 0.509326,-99) , 
NN(
0, 
0, 
-1, 0.869436, 1, -1, 0.497292,-99) , 
8, -0.890244, 0, 0, 0.501292,-99) , 
8, 6.57645, 0, 0, 0.502266,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0142859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505845, 0, 1, 0.523854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490901,-99) , 
4, 0.999909, 0, 0, 0.502899,-99) , 
0, 0.504757, 0, 0, 0.504076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479792,-99) , 
4, 0.999048, 0, 0, 0.503234,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00755671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497156,-99) , 
7, -0.143, 0, 0, 0.512385,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49811, 0, 1, 0.50204,-99) , 
NN(
0, 
0, 
-1, -0.0714577, 0, -1, 0.49444,-99) , 
0, 0.499859, 1, 0, 0.499776,-99) , 
0, 0.504757, 0, 0, 0.500512,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0127811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496821,-99) , 
8, -0.150129, 0, 0, 0.499997,-99) , 
3, 9.4289, 0, 0, 0.501555,-99) , 
NN(
0, 
0, 
-1, 0.143298, 0, -1, 0.4854,-99) , 
4, 0.999524, 0, 0, 0.500551,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0161562);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.523096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476864,-99) , 
7, -1.84352, 0, 0, 0.504502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474419,-99) , 
8, 4.62287, 0, 0, 0.493773,-99) , 
9, 3.71091, 1, 0, 0.503138,-99) , 
7, 1.85714, 0, 0, 0.504199,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0129572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480958,-99) , 
7, -2.04763, 0, 0, 0.507643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496776,-99) , 
8, 1.86838, 0, 0, 0.498175,-99) , 
NN(
0, 
0, 
-1, 7.58835, 0, -1, 0.487883,-99) , 
9, 4.43807, 1, 0, 0.497035,-99) , 
7, -1.57143, 1, 0, 0.497812,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0103195);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.50475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485214,-99) , 
2, 0.071036, 1, 0, 0.499875,-99) , 
NN(
0, 
0, 
-1, -0.82312, 0, -1, 0.483636,-99) , 
0, 0.502852, 1, 0, 0.497753,-99) , 
7, -0.142874, 0, 0, 0.501671,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00541248);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49949,-99) , 
2, -0.132689, 1, 0, 0.500079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470323,-99) , 
4, 0.999048, 0, 0, 0.49928,-99) , 
2, -0.214281, 1, 0, 0.500289,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0080491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485606,-99) , 
0, 0.505981, 1, 0, 0.502103,-99) , 
7, 2.1428, 0, 0, 0.502742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482791,-99) , 
0, 0.490471, 0, 0, 0.501988,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00589546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18769, 0, 1, 0.501047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47717,-99) , 
4, 0.999773, 0, 0, 0.499999,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.482679,-99) , 
4, 0.999524, 0, 0, 0.498932,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.00854821);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499212,-99) , 
0, 0.492376, 1, 0, 0.500346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483201,-99) , 
7, 0.429038, 1, 0, 0.493918,-99) , 
9, 2.43688, 1, 0, 0.498936,-99) , 
4, 0.999048, 1, 0, 0.49971,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00789045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499241,-99) , 
8, -3.71518, 0, 0, 0.511131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484818,-99) , 
3, 6.30912, 1, 0, 0.499834,-99) , 
9, -1.18943, 1, 0, 0.501346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48604,-99) , 
3, 9.41001, 1, 0, 0.500752,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0106106);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.63847, 0, 1, 0.512028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511726,-99) , 
NN(
0, 
0, 
-1, 2.97463, 1, -1, 0.496189,-99) , 
8, 6.47517, 0, 0, 0.497182,-99) , 
0, 0.493329, 1, 0, 0.499086,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0123168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484908,-99) , 
7, 1.85714, 1, 0, 0.50292,-99) , 
4, 0.999524, 1, 0, 0.504131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48608,-99) , 
9, 3.2776, 1, 0, 0.500194,-99) , 
NN(
0, 
0, 
-1, 0.493964, 0, -1, 0.481464,-99) , 
7, -1.00002, 0, 0, 0.497008,-99) , 
0, 0.497138, 0, 0, 0.501327,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0137698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497334,-99) , 
3, 4.77882, 1, 0, 0.507743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482288,-99) , 
7, 1.16317, 1, 0, 0.494979,-99) , 
0, 0.495234, 0, 0, 0.504792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494179,-99) , 
9, -0.967792, 1, 0, 0.496362,-99) , 
7, -1.85715, 1, 0, 0.497606,-99) , 
7, 0.428498, 0, 0, 0.500171,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0101788);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499978,-99) , 
7, -1.28572, 1, 0, 0.501664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492184,-99) , 
7, 0.263309, 0, 0, 0.495591,-99) , 
9, 0.34817, 0, 0, 0.498874,-99) , 
2, -0.214418, 1, 0, 0.499761,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00501853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485927,-99) , 
7, -1.39454, 0, 0, 0.499566,-99) , 
7, -1.85713, 1, 0, 0.500364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480567,-99) , 
4, 0.999048, 0, 0, 0.49968,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00891743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501661,-99) , 
NN(
0, 
0, 
-1, 0.506059, 0, -1, 0.488038,-99) , 
0, 0.504893, 1, 0, 0.500271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479891,-99) , 
7, 1.28567, 1, 0, 0.499143,-99) , 
NN(
0, 
0, 
-1, -0.420586, 0, -1, 0.490233,-99) , 
0, 0.496095, 1, 0, 0.495745,-99) , 
0, 0.49809, 0, 0, 0.498064,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0101359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28567, 0, 1, 0.50252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474008,-99) , 
5, 0.00053987, 0, 0, 0.489516,-99) , 
5, 0.00113373, 0, 0, 0.500421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475958,-99) , 
5, 0.0238087, 1, 0, 0.499534,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0125377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497198,-99) , 
4, 0.999524, 1, 0, 0.498188,-99) , 
NN(
0, 
0, 
-1, 0.491106, 1, -1, 0.490003,-99) , 
0, 0.494281, 0, 0, 0.496863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490371,-99) , 
7, 0.428738, 0, 0, 0.497613,-99) , 
NN(
0, 
0, 
-1, 0.493056, 1, -1, 0.481222,-99) , 
0, 0.499043, 0, 0, 0.488546,-99) , 
2, -0.0714577, 0, 0, 0.495507,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0207439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475824,-99) , 
7, -0.714689, 0, 0, 0.523121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482418,-99) , 
9, 0.814016, 1, 0, 0.500153,-99) , 
8, -0.727221, 0, 0, 0.503517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491463,-99) , 
7, 1.57247, 0, 0, 0.494516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477135,-99) , 
2, -0.0727669, 0, 0, 0.491716,-99) , 
9, 2.15205, 1, 0, 0.500676,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00668185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.2102, 1, 1, 0.509603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498819,-99) , 
5, 0.023792, 0, 0, 0.499427,-99) , 
7, 1.28571, 0, 0, 0.500741,-99) , 
NN(
0, 
0, 
-1, 0.373268, 0, -1, 0.486676,-99) , 
0, 0.491424, 0, 0, 0.499916,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0137333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493701,-99) , 
2, -0.0782142, 1, 0, 0.498733,-99) , 
2, 0.0713715, 0, 0, 0.502747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49951,-99) , 
9, -0.802372, 0, 0, 0.510126,-99) , 
NN(
0, 
0, 
-1, 0.387728, 0, -1, 0.494267,-99) , 
7, -1.57143, 1, 0, 0.495436,-99) , 
0, 0.5019, 0, 0, 0.49679,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0120933);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498068,-99) , 
5, 0.00679751, 0, 0, 0.502024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481442,-99) , 
9, 6.71252, 1, 0, 0.500945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485025,-99) , 
5, 0.023792, 1, 0, 0.500363,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0117901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.502216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469251,-99) , 
4, 0.999954, 0, 0, 0.491065,-99) , 
2, -0.0707299, 0, 0, 0.500509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471183,-99) , 
4, 0.999048, 0, 0, 0.499506,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0137838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.707394, 0, 1, 0.504879,-99) , 
NN(
0, 
0, 
-1, -1.95239, 0, -1, 0.495107,-99) , 
7, 0.142781, 0, 0, 0.499043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485027,-99) , 
7, 0.714179, 1, 0, 0.50183,-99) , 
NN(
0, 
0, 
-1, 3.2287, 1, -1, 0.485877,-99) , 
8, 2.40952, 0, 0, 0.493672,-99) , 
9, 1.97841, 1, 0, 0.497635,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0180679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57138, 0, 1, 0.505421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492877,-99) , 
9, 0.154027, 1, 0, 0.496797,-99) , 
0, 0.495234, 0, 0, 0.503417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494336,-99) , 
8, -3.2769, 0, 0, 0.503563,-99) , 
NN(
0, 
0, 
-1, -2.98554, 1, -1, 0.471047,-99) , 
9, -0.676339, 1, 0, 0.495732,-99) , 
8, -2.73684, 0, 0, 0.501217,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.00622061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499228,-99) , 
0, 0.504757, 0, 0, 0.500146,-99) , 
4, 0.999048, 1, 0, 0.50101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479251,-99) , 
3, 9.50466, 1, 0, 0.500188,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0118856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493131,-99) , 
9, 2.9089, 1, 0, 0.502153,-99) , 
7, -1.28572, 1, 0, 0.504035,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.511522,-99) , 
NN(
0, 
0, 
-1, -0.214096, 0, -1, 0.494771,-99) , 
7, 1.57142, 0, 0, 0.496199,-99) , 
0, 0.496186, 1, 0, 0.498633,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0172833);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49826,-99) , 
8, -0.968594, 0, 0, 0.503339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485895,-99) , 
9, 5.69567, 1, 0, 0.501798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492976,-99) , 
9, -0.405466, 0, 0, 0.500081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456964,-99) , 
3, 1.8951, 0, 0, 0.487129,-99) , 
8, -1.15752, 1, 0, 0.496028,-99) , 
7, -0.714277, 0, 0, 0.500365,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0127574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484273,-99) , 
9, -1.72055, 0, 0, 0.499292,-99) , 
6, -951.286, 1, 0, 0.512036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497573,-99) , 
7, -0.238105, 1, 0, 0.500288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47299,-99) , 
7, -1.85713, 0, 0, 0.499435,-99) , 
8, -3.52781, 1, 0, 0.50109,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0130815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498986,-99) , 
7, -0.481703, 0, 0, 0.535796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498589,-99) , 
8, -4.12359, 1, 0, 0.500501,-99) , 
8, -0.853396, 0, 0, 0.503594,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499041, 0, 1, 0.506426,-99) , 
NN(
0, 
0, 
-1, -0.428518, 0, -1, 0.49186,-99) , 
8, 4.50501, 0, 0, 0.49596,-99) , 
9, 1.57401, 1, 0, 0.501189,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0083845);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12546, 0, 1, 0.503863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486621,-99) , 
4, 0.999048, 0, 0, 0.503266,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0150729);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48845,-99) , 
9, 5.52724, 1, 0, 0.504208,-99) , 
NN(
0, 
0, 
-1, 0.496503, 1, -1, 0.488191,-99) , 
7, 1.5714, 1, 0, 0.502905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482738,-99) , 
6, -951.286, 0, 0, 0.490374,-99) , 
8, -3.45456, 1, 0, 0.493519,-99) , 
0, 0.500947, 1, 0, 0.500596,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0122729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.527192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49602,-99) , 
7, 0.714854, 0, 0, 0.500956,-99) , 
9, 0.467657, 1, 0, 0.514033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498113,-99) , 
8, -0.00694475, 0, 0, 0.51277,-99) , 
NN(
0, 
0, 
-1, -0.605491, 0, -1, 0.496732,-99) , 
7, 1.57139, 0, 0, 0.498095,-99) , 
2, 0.0714447, 0, 0, 0.500557,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0107588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0101942, 1, 1, 0.50482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488571,-99) , 
9, 6.71252, 1, 0, 0.503969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489069,-99) , 
5, 0.0237868, 1, 0, 0.503418,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0126885);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.16727, 0, 1, 0.504924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489139,-99) , 
9, 1.5193, 1, 0, 0.503491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469978,-99) , 
7, -0.999964, 0, 0, 0.497844,-99) , 
2, 0.0717083, 1, 0, 0.503858,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00899913);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497877,-99) , 
0, 0.504757, 0, 0, 0.498796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47656,-99) , 
7, -1.85714, 0, 0, 0.497831,-99) , 
8, 6.35618, 0, 0, 0.499029,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0097152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.144209, 1, 1, 0.512513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499251,-99) , 
9, -0.85545, 1, 0, 0.501511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464061,-99) , 
8, -2.13338, 1, 0, 0.487058,-99) , 
7, -1.28571, 0, 0, 0.499784,-99) , 
8, 4.88267, 0, 0, 0.50085,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00937772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.503399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474883,-99) , 
4, 0.999955, 0, 0, 0.495921,-99) , 
7, -0.99999, 0, 0, 0.502095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480041,-99) , 
4, 0.999048, 0, 0, 0.501336,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.00983094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.515178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497226,-99) , 
4, 0.999819, 1, 0, 0.498247,-99) , 
4, 0.999524, 1, 0, 0.499295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47555,-99) , 
3, 9.52058, 1, 0, 0.498415,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0173879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476832,-99) , 
7, -1.84352, 0, 0, 0.50389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477669,-99) , 
7, 1.85714, 1, 0, 0.502342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493265,-99) , 
9, 2.39253, 1, 0, 0.505701,-99) , 
NN(
0, 
0, 
-1, -1.28582, 0, -1, 0.491357,-99) , 
8, -0.897535, 0, 0, 0.495875,-99) , 
6, -951.286, 1, 0, 0.499551,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0156918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49945, 1, 1, 0.513949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488923,-99) , 
8, -0.686085, 0, 0, 0.499557,-99) , 
0, 0.49809, 0, 0, 0.507001,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0715678, 0, 1, 0.503323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49131,-99) , 
5, 0.0237559, 0, 0, 0.493662,-99) , 
9, 0.0625894, 1, 0, 0.498372,-99) , 
7, 0.999999, 0, 0, 0.500005,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.00725044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499742,-99) , 
3, 0.573002, 1, 0, 0.501029,-99) , 
4, 0.999048, 1, 0, 0.502634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482502,-99) , 
3, 9.52224, 1, 0, 0.501887,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.011844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 1, 1, 0.509658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496998,-99) , 
7, -1.85714, 1, 0, 0.498167,-99) , 
0, 0.5019, 0, 0, 0.500253,-99) , 
NN(
0, 
0, 
-1, -0.160761, 1, -1, 0.479171,-99) , 
4, 0.999524, 0, 0, 0.498957,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0131917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.14295, 1, 1, 0.515293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490445,-99) , 
0, 0.4967, 0, 0, 0.502369,-99) , 
0, 0.495551, 1, 0, 0.503727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493744,-99) , 
7, 0.999947, 0, 0, 0.496673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477019,-99) , 
2, 0.0710703, 1, 0, 0.492907,-99) , 
0, 0.494281, 0, 0, 0.501865,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00833537);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42883, 0, 1, 0.503354,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.483494,-99) , 
4, 0.999524, 0, 0, 0.502127,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.00672378);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498189,-99) , 
3, 9.50466, 0, 0, 0.498718,-99) , 
7, -1.85714, 1, 0, 0.499472,-99) , 
2, 0.214214, 0, 0, 0.500161,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0132515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479706,-99) , 
3, 9.42372, 1, 0, 0.502959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493001,-99) , 
9, 5.03773, 1, 0, 0.501438,-99) , 
NN(
0, 
0, 
-1, 3.02772, 1, -1, 0.483713,-99) , 
8, 2.12986, 0, 0, 0.493842,-99) , 
9, 2.1957, 1, 0, 0.500806,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0112177);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497745,-99) , 
6, -951.286, 1, 0, 0.50444,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496585,-99) , 
7, -0.0612428, 0, 0, 0.500646,-99) , 
7, 2.14281, 0, 0, 0.501428,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.00843734);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477725,-99) , 
7, -1.8571, 0, 0, 0.501283,-99) , 
8, -4.16299, 1, 0, 0.502144,-99) , 
8, 9.83795, 0, 0, 0.502834,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0121861);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.57137, 0, 1, 0.504055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494497,-99) , 
3, 1.16887, 1, 0, 0.49833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485957,-99) , 
0, 0.502716, 0, 0, 0.490087,-99) , 
3, 4.57787, 1, 0, 0.496564,-99) , 
0, 0.496186, 1, 0, 0.498887,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0100027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.151671, 0, 1, 0.51783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487018,-99) , 
7, 0.714299, 1, 0, 0.496055,-99) , 
6, -951.286, 0, 0, 0.504304,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.496917,-99) , 
8, -0.150129, 0, 0, 0.499003,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00674951);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51529,-99) , 
NN(
NN(
0, 
0, 
-1, -1.5714, 1, 1, 0.502136,-99) , 
NN(
0, 
0, 
-1, 1.00001, 1, -1, 0.496483,-99) , 
0, 0.497093, 1, 0, 0.49878,-99) , 
0, 0.505709, 0, 0, 0.499341,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.00911742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498026,-99) , 
7, 0.142823, 0, 0, 0.500987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486206,-99) , 
8, -0.680701, 0, 0, 0.492645,-99) , 
0, 0.502716, 1, 0, 0.499809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482466,-99) , 
0, 0.490471, 0, 0, 0.499166,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0155843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.79621, 0, 1, 0.511194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484695,-99) , 
7, 0.429949, 1, 0, 0.494315,-99) , 
9, 4.65648, 1, 0, 0.505332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496846,-99) , 
8, -1.10663, 0, 0, 0.499241,-99) , 
NN(
0, 
0, 
-1, 1.63716, 1, -1, 0.476106,-99) , 
9, 1.35453, 1, 0, 0.496948,-99) , 
8, -0.173715, 0, 0, 0.499344,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0106248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0507976, 1, 1, 0.504546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480606,-99) , 
2, -0.213985, 0, 0, 0.503498,-99) , 
NN(
0, 
0, 
-1, 2.14277, 1, -1, 0.494472,-99) , 
7, 0.428517, 1, 0, 0.500335,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00923023);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494252,-99) , 
9, 0.66965, 1, 0, 0.514371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493195,-99) , 
8, -2.5882, 0, 0, 0.498772,-99) , 
0, 0.504757, 0, 0, 0.499672,-99) , 
7, -1.85714, 1, 0, 0.500443,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00719264);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.502615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468347,-99) , 
9, -0.402506, 1, 0, 0.487271,-99) , 
4, 0.999524, 0, 0, 0.501661,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0160367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.68302, 0, 1, 0.505222,-99) , 
NN(
0, 
0, 
-1, -2.59751, 1, -1, 0.479027,-99) , 
7, -1.57148, 0, 0, 0.502968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492523,-99) , 
7, 0.714153, 0, 0, 0.500612,-99) , 
NN(
0, 
0, 
-1, 3.21125, 1, -1, 0.486769,-99) , 
8, 2.36849, 0, 0, 0.493599,-99) , 
9, 1.97841, 1, 0, 0.500524,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0111147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498512,-99) , 
9, -0.756155, 0, 0, 0.512234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498238,-99) , 
8, -1.60237, 0, 0, 0.501942,-99) , 
NN(
0, 
0, 
-1, -0.482958, 0, -1, 0.494713,-99) , 
9, 1.45515, 1, 0, 0.499435,-99) , 
7, -1.57143, 1, 0, 0.500388,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00744478);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515108,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.507286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493567,-99) , 
0, 0.499995, 1, 0, 0.498312,-99) , 
2, -0.0717939, 1, 0, 0.499798,-99) , 
7, -1.85714, 1, 0, 0.500467,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00620452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498984,-99) , 
2, 0.192246, 0, 0, 0.499763,-99) , 
2, -0.215363, 1, 0, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478174,-99) , 
3, 9.50466, 1, 0, 0.499699,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.00908103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46809, 1, 1, 0.52284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499712,-99) , 
4, 0.999955, 1, 0, 0.50246,-99) , 
4, 0.999524, 1, 0, 0.50371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484657,-99) , 
3, 9.52452, 1, 0, 0.503003,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0109167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49617,-99) , 
7, 0.142855, 0, 0, 0.512391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486655,-99) , 
4, 0.999932, 0, 0, 0.499912,-99) , 
4, 0.999524, 1, 0, 0.500703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482941,-99) , 
0, 0.505709, 1, 0, 0.500133,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0138235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492118,-99) , 
9, 2.91802, 1, 0, 0.503669,-99) , 
7, -1.85707, 1, 0, 0.504817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496474,-99) , 
7, 1.28564, 0, 0, 0.498487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476097,-99) , 
4, 0.999524, 0, 0, 0.496896,-99) , 
0, 0.497138, 0, 0, 0.501717,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0132649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485506,-99) , 
0, 0.499042, 1, 0, 0.512775,-99) , 
NN(
NN(
0, 
0, 
-1, -0.214244, 1, 1, 0.501907,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.489489,-99) , 
9, 1.21951, 1, 0, 0.497147,-99) , 
7, -1.57141, 1, 0, 0.498312,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0161956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428837, 1, 1, 0.512561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434197,-99) , 
6, -1.57137, 0, 0, 0.495863,-99) , 
8, -0.871774, 0, 0, 0.50108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492282,-99) , 
8, 0.66327, 0, 0, 0.494773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477224,-99) , 
7, -1.85712, 0, 0, 0.493857,-99) , 
6, -951.286, 0, 0, 0.496989,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.00621139);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.2381, 1, 1, 0.518548,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501407,-99) , 
NN(
0, 
0, 
-1, -0.687134, 0, -1, 0.493927,-99) , 
0, 0.5019, 1, 0, 0.500049,-99) , 
7, 1.85714, 0, 0, 0.501015,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0083777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498822,-99) , 
0, 0.491424, 1, 0, 0.500151,-99) , 
3, 9.12546, 0, 0, 0.501446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47837,-99) , 
4, 0.999048, 0, 0, 0.500658,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.00748872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498085,-99) , 
0, 0.490471, 1, 0, 0.498746,-99) , 
4, 0.999048, 1, 0, 0.499628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482384,-99) , 
3, 9.40614, 1, 0, 0.498962,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0154819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487644,-99) , 
8, -2.70185, 0, 0, 0.513086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498205,-99) , 
7, 1.91153, 0, 0, 0.499886,-99) , 
9, 0.0730718, 1, 0, 0.502501,-99) , 
NN(
0, 
0, 
-1, 0.071081, 1, -1, 0.492631,-99) , 
7, 0.142834, 0, 0, 0.497149,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0125701);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.38206, 0, 1, 0.517964,-99) , 
NN(
NN(
0, 
0, 
-1, 1.32634, 0, 1, 0.50433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481788,-99) , 
9, 3.43475, 1, 0, 0.502894,-99) , 
8, 4.8475, 0, 0, 0.504159,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0105958);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.247846, 0, 1, 0.511756,-99) , 
NN(
NN(
0, 
0, 
-1, 2.66462, 0, 1, 0.504092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491261,-99) , 
0, 0.498531, 0, 0, 0.496517,-99) , 
0, 0.496458, 1, 0, 0.499617,-99) , 
0, 0.5019, 0, 0, 0.501877,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0114147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714194, 0, 1, 0.515014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499782,-99) , 
7, -0.428138, 1, 0, 0.503373,-99) , 
0, 0.503532, 0, 0, 0.509748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498217,-99) , 
9, -1.65507, 1, 0, 0.499764,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.482452,-99) , 
0, 0.500539, 1, 0, 0.497754,-99) , 
0, 0.5019, 0, 0, 0.499998,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0170097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489761,-99) , 
0, 0.504757, 1, 0, 0.506603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487015,-99) , 
2, 0.00370821, 0, 0, 0.501183,-99) , 
2, -0.00341764, 1, 0, 0.504113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520094,-99) , 
NN(
0, 
0, 
-1, -0.71427, 0, -1, 0.490988,-99) , 
0, 0.502852, 0, 0, 0.496431,-99) , 
2, 0.0714036, 1, 0, 0.502955,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.011007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487853,-99) , 
4, 0.999909, 0, 0, 0.509728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497984,-99) , 
8, 4.77341, 0, 0, 0.499168,-99) , 
2, 0.0722786, 0, 0, 0.500671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479833,-99) , 
4, 0.999048, 0, 0, 0.499955,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00974151);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49804,-99) , 
9, 3.15125, 1, 0, 0.50895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477276,-99) , 
3, 9.08008, 1, 0, 0.499379,-99) , 
7, 0.469349, 0, 0, 0.50231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476374,-99) , 
7, 1.8571, 1, 0, 0.501032,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0120761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495265,-99) , 
9, 3.74811, 1, 0, 0.507126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486339,-99) , 
9, 1.29127, 1, 0, 0.497824,-99) , 
8, 0.571713, 0, 0, 0.499873,-99) , 
7, -1.85713, 1, 0, 0.500993,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0105222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97962, 0, 1, 0.514653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497875,-99) , 
6, -951.286, 0, 0, 0.501345,-99) , 
7, 1.57144, 0, 0, 0.502462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478462,-99) , 
5, 0.023792, 1, 0, 0.501586,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0102706);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499998, 0, 1, 0.512905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528608,-99) , 
NN(
0, 
0, 
-1, 2.50959, 1, -1, 0.497086,-99) , 
8, 1.67026, 0, 0, 0.498585,-99) , 
8, 3.05115, 0, 0, 0.500218,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.00711079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494128,-99) , 
7, 0.714388, 0, 0, 0.503317,-99) , 
7, -0.428516, 1, 0, 0.509779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49936,-99) , 
7, -1.85713, 1, 0, 0.500037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480754,-99) , 
2, -0.213949, 0, 0, 0.499274,-99) , 
0, 0.493329, 1, 0, 0.500618,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.00881031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487073,-99) , 
7, -1.57138, 0, 0, 0.499625,-99) , 
0, 0.498635, 1, 0, 0.502909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480087,-99) , 
0, 0.490471, 0, 0, 0.502058,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.00609519);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521686,-99) , 
NN(
NN(
0, 
0, 
-1, -0.213652, 1, 1, 0.501359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479289,-99) , 
3, 9.52058, 1, 0, 0.500525,-99) , 
9, 7.60249, 0, 0, 0.501558,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_4_6_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_4_6_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_4_6_noPCts *ReadBDT_maker_LHC19c2b_4_6_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_4_6_noPCts(theInpVar);
  }
}
