#include "LHC19c2b_TMVAClassification_BDT_4_6_noNsigma.class.h"

double ReadBDT_LHC19c2b_4_6_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_4_6_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.170363916974979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.815771, 1, 1, 0.570538,-99) , 
NN(
0, 
0, 
-1, -0.345035, 0, -1, 0.447193,-99) , 
4, 0.999977, 0, 0, 0.527961,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.192438,-99) , 
4, 0.999524, 0, 0, 0.500431,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.15343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338825,-99) , 
6, 0.0237526, 1, 0, 0.544723,-99) , 
NN(
0, 
0, 
-1, -0.258038, 0, -1, 0.443579,-99) , 
4, 0.999955, 0, 0, 0.521564,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.210937,-99) , 
4, 0.999524, 0, 0, 0.496279,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.132777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.893712, 1, 1, 0.625564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443083,-99) , 
5, -0.393242, 0, 0, 0.497653,-99) , 
5, -0.813983, 1, 0, 0.510998,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.229457,-99) , 
4, 0.999524, 0, 0, 0.488351,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.0870825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.893686, 1, 1, 0.611722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408983,-99) , 
4, 0.999887, 0, 0, 0.493402,-99) , 
5, -0.813954, 1, 0, 0.505603,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.233287,-99) , 
4, 0.999524, 0, 0, 0.48424,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.210906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437499,-99) , 
6, 0.0056628, 0, 0, 0.504081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316669,-99) , 
6, 0.0237841, 1, 0, 0.497026,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.244816,-99) , 
4, 0.999524, 0, 0, 0.477296,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.0705808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307618,-99) , 
6, 0.0238062, 1, 0, 0.499543,-99) , 
5, -0.906431, 1, 0, 0.50697,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.264451,-99) , 
4, 0.999524, 0, 0, 0.488333,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.0813265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.875243, 1, 1, 0.587624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437299,-99) , 
5, -0.474245, 0, 0, 0.484351,-99) , 
5, -0.812866, 1, 0, 0.494746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.203203,-99) , 
4, 0.999048, 0, 0, 0.481059,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.0720643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629568,-99) , 
NN(
0, 
0, 
-1, 0.0238062, 1, -1, 0.485298,-99) , 
5, -0.906454, 1, 0, 0.49204,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.271519,-99) , 
4, 0.999524, 0, 0, 0.475216,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.085405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358474,-99) , 
6, 0.0237688, 1, 0, 0.512027,-99) , 
NN(
0, 
0, 
-1, -0.0643251, 0, -1, 0.425338,-99) , 
4, 0.999909, 0, 0, 0.498171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.222415,-99) , 
4, 0.999048, 0, 0, 0.485393,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.173415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433878,-99) , 
6, 0.00452718, 0, 0, 0.497892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349025,-99) , 
6, 0.0237687, 1, 0, 0.492387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.228681,-99) , 
4, 0.999048, 0, 0, 0.480401,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0666259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44347,-99) , 
0, 0.500947, 1, 0, 0.489725,-99) , 
5, -0.906445, 1, 0, 0.495772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241316,-99) , 
4, 0.999048, 0, 0, 0.484341,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0602271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491713,-99) , 
5, -0.906699, 1, 0, 0.497471,-99) , 
NN(
0, 
0, 
-1, -0.0685552, 0, -1, 0.398836,-99) , 
4, 0.999773, 0, 0, 0.490048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25239,-99) , 
4, 0.999048, 0, 0, 0.479393,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.112663);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478332,-99) , 
6, 0.00791492, 0, 0, 0.507814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374317,-99) , 
6, 0.0237453, 1, 0, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.308937,-99) , 
4, 0.999524, 0, 0, 0.488867,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.125135);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459454,-99) , 
6, 0.00339756, 0, 0, 0.513902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386165,-99) , 
6, 0.0237836, 1, 0, 0.509265,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.32357,-99) , 
4, 0.999524, 0, 0, 0.495696,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0770626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475169,-99) , 
5, 0.610023, 1, 0, 0.533052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386904,-99) , 
4, 0.999955, 0, 0, 0.484191,-99) , 
5, -0.254858, 0, 0, 0.508156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279371,-99) , 
4, 0.999048, 0, 0, 0.498296,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0877415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48998,-99) , 
5, 0.526276, 1, 0, 0.525679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464235,-99) , 
5, -0.840729, 1, 0, 0.479802,-99) , 
5, -0.163862, 0, 0, 0.499686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288848,-99) , 
4, 0.999048, 0, 0, 0.490665,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0818017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4838,-99) , 
6, 0.00793534, 0, 0, 0.504644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390637,-99) , 
6, 0.0238062, 1, 0, 0.500521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295038,-99) , 
4, 0.999048, 0, 0, 0.491825,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0704789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489086,-99) , 
4, 0.999991, 0, 0, 0.513954,-99) , 
NN(
0, 
0, 
-1, -0.0702267, 0, -1, 0.439515,-99) , 
4, 0.999819, 0, 0, 0.507158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308327,-99) , 
4, 0.999048, 0, 0, 0.498678,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0594401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40526,-99) , 
6, 0.0237868, 1, 0, 0.512856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39985,-99) , 
2, -0.21436, 0, 0, 0.508329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313879,-99) , 
4, 0.999048, 0, 0, 0.500145,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0620892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494266,-99) , 
5, -0.251473, 0, 0, 0.514782,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.464684,-99) , 
0, 0.500947, 1, 0, 0.502324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311911,-99) , 
4, 0.999048, 0, 0, 0.494429,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0406053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.906431, 1, 1, 0.509458,-99) , 
NN(
0, 
0, 
-1, -0.0684508, 0, -1, 0.434686,-99) , 
4, 0.999796, 0, 0, 0.502347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286833,-99) , 
4, 0.998572, 0, 0, 0.496349,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0569283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483986,-99) , 
0, 0.499043, 1, 0, 0.506358,-99) , 
NN(
0, 
0, 
-1, 0.0246787, 0, -1, 0.432162,-99) , 
4, 0.999728, 0, 0, 0.500844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292603,-99) , 
4, 0.998572, 0, 0, 0.495074,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0822123);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44864,-99) , 
6, 0.00226535, 0, 0, 0.501354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405316,-99) , 
6, 0.0237868, 1, 0, 0.497933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296035,-99) , 
4, 0.998572, 0, 0, 0.492319,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0582111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467004,-99) , 
5, -0.286943, 0, 0, 0.49146,-99) , 
5, -0.906984, 1, 0, 0.495311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311014,-99) , 
4, 0.998572, 0, 0, 0.490167,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0412738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.875245, 1, 1, 0.549197,-99) , 
NN(
0, 
0, 
-1, -0.558902, 0, -1, 0.487773,-99) , 
5, -0.812866, 1, 0, 0.493937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310827,-99) , 
4, 0.998572, 0, 0, 0.488982,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0542923);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491115,-99) , 
6, 0.0102026, 0, 0, 0.50388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4131,-99) , 
6, 0.0238062, 1, 0, 0.500629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352678,-99) , 
4, 0.999048, 0, 0, 0.494529,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0485219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492967,-99) , 
6, 0.00905433, 0, 0, 0.50556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415014,-99) , 
6, 0.0237688, 1, 0, 0.502353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320416,-99) , 
4, 0.998572, 0, 0, 0.497411,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.047449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495588,-99) , 
4, 0.999987, 0, 0, 0.512011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346824,-99) , 
5, 0.0237851, 0, 0, 0.447653,-99) , 
4, 0.999728, 0, 0, 0.507214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327815,-99) , 
4, 0.998572, 0, 0, 0.502325,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.053578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474054,-99) , 
5, 0.719299, 1, 0, 0.530009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407398,-99) , 
4, 0.999909, 0, 0, 0.49638,-99) , 
5, -0.064624, 0, 0, 0.509158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359598,-99) , 
4, 0.999048, 0, 0, 0.503159,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0368338);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428614,-99) , 
6, 0.0238062, 1, 0, 0.506353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416162,-99) , 
2, -0.214955, 0, 0, 0.502638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33996,-99) , 
4, 0.998572, 0, 0, 0.498234,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0255278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.906458, 1, 1, 0.503648,-99) , 
NN(
0, 
0, 
-1, -0.0761941, 0, -1, 0.451862,-99) , 
0, 0.503805, 1, 0, 0.499058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363333,-99) , 
4, 0.999048, 0, 0, 0.493622,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0400081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0718755, 0, 1, 0.513762,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.482556,-99) , 
5, -0.0685763, 0, 0, 0.494574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333762,-99) , 
4, 0.998572, 0, 0, 0.490326,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0383292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.866376, 1, 1, 0.539228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457014,-99) , 
5, -0.559036, 0, 0, 0.492398,-99) , 
5, -0.812922, 1, 0, 0.497022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374989,-99) , 
3, 9.10661, 1, 0, 0.491207,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.034601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428957,-99) , 
6, 0.0238062, 1, 0, 0.502009,-99) , 
NN(
0, 
0, 
-1, -0.257529, 0, -1, 0.465037,-99) , 
0, 0.5019, 1, 0, 0.495245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378442,-99) , 
3, 9.11461, 1, 0, 0.489699,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0374796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491745,-99) , 
5, -0.812856, 1, 0, 0.496221,-99) , 
NN(
0, 
0, 
-1, 0.117708, 0, -1, 0.439156,-99) , 
4, 0.999728, 0, 0, 0.492729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36987,-99) , 
4, 0.999048, 0, 0, 0.487797,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0591211);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484981,-99) , 
6, 0.00677776, 0, 0, 0.500892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425947,-99) , 
6, 0.0237256, 1, 0, 0.49823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374477,-99) , 
3, 9.42206, 1, 0, 0.492962,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0212897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498766,-99) , 
5, -0.906458, 1, 0, 0.501335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425293,-99) , 
2, -0.213869, 0, 0, 0.498152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341409,-99) , 
4, 0.998572, 0, 0, 0.494047,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0312127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.906431, 1, 1, 0.508236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452397,-99) , 
0, 0.504757, 1, 0, 0.505162,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.413595,-99) , 
4, 0.999524, 0, 0, 0.498899,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0410787);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487555,-99) , 
5, -0.157916, 0, 0, 0.500479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432126,-99) , 
3, 9.072, 1, 0, 0.497488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341788,-99) , 
4, 0.998572, 0, 0, 0.493482,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.061557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464674,-99) , 
6, 0.00226061, 0, 0, 0.504027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441661,-99) , 
6, 0.0237449, 1, 0, 0.501799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405625,-99) , 
3, 9.25868, 1, 0, 0.497435,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0219251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552804,-99) , 
NN(
0, 
0, 
-1, 0.0237836, 1, -1, 0.49719,-99) , 
5, -0.906421, 1, 0, 0.499758,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.408084,-99) , 
4, 0.999524, 0, 0, 0.493587,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0187996);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499138,-99) , 
5, -0.906695, 1, 0, 0.50164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434856,-99) , 
2, -0.21349, 0, 0, 0.498816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359482,-99) , 
4, 0.998572, 0, 0, 0.495197,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0352461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455503,-99) , 
4, 0.999683, 0, 0, 0.507539,-99) , 
NN(
0, 
0, 
-1, -0.0761941, 0, -1, 0.464902,-99) , 
0, 0.503805, 1, 0, 0.503795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392508,-99) , 
4, 0.999048, 0, 0, 0.499424,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0205094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45387,-99) , 
6, 0.0237687, 1, 0, 0.501104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439447,-99) , 
2, -0.213869, 0, 0, 0.49851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359281,-99) , 
4, 0.998572, 0, 0, 0.494937,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0306068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0719379, 0, 1, 0.508133,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.484263,-99) , 
5, -0.345233, 0, 0, 0.49756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398659,-99) , 
3, 9.41001, 1, 0, 0.49338,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0381508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491673,-99) , 
6, 0.0101936, 0, 0, 0.499482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449945,-99) , 
6, 0.0237868, 1, 0, 0.497705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397233,-99) , 
3, 9.52607, 1, 0, 0.493588,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0268748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48037,-99) , 
5, -0.54999, 0, 0, 0.497959,-99) , 
5, -0.906426, 1, 0, 0.50004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409764,-99) , 
3, 9.42372, 1, 0, 0.496228,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0264982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497455,-99) , 
5, -0.812862, 1, 0, 0.50149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378877,-99) , 
5, 0.116357, 0, 0, 0.458892,-99) , 
4, 0.999728, 0, 0, 0.498308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370777,-99) , 
4, 0.998572, 0, 0, 0.494985,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0494849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490735,-99) , 
4, 0.999994, 0, 0, 0.507437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394281,-99) , 
5, 0.0245669, 0, 0, 0.467912,-99) , 
4, 0.999864, 0, 0, 0.502451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369188,-99) , 
4, 0.998572, 0, 0, 0.499046,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0319517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.569753, 1, 1, 0.510827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484749,-99) , 
2, 0.0716194, 0, 0, 0.491445,-99) , 
0, 0.499995, 1, 0, 0.504529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408877,-99) , 
3, 9.50466, 1, 0, 0.500657,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0247139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0838066, 0, 1, 0.505432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446207,-99) , 
4, 0.999751, 0, 0, 0.503151,-99) , 
NN(
0, 
0, 
-1, 0.302553, 0, -1, 0.41576,-99) , 
4, 0.999524, 0, 0, 0.497405,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0245069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498273,-99) , 
2, 0.0775057, 0, 0, 0.501891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420767,-99) , 
5, 0.302092, 0, 0, 0.456586,-99) , 
4, 0.999841, 0, 0, 0.498589,-99) , 
NN(
0, 
0, 
-1, 0.310469, 0, -1, 0.428585,-99) , 
4, 0.999524, 0, 0, 0.493849,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0302432);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493047,-99) , 
4, 0.999991, 0, 0, 0.503079,-99) , 
NN(
0, 
0, 
-1, -0.161714, 0, -1, 0.464717,-99) , 
4, 0.999819, 0, 0, 0.499614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418693,-99) , 
4, 0.999048, 0, 0, 0.496367,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0207909);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498832,-99) , 
2, 0.0601412, 0, 0, 0.502485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372851,-99) , 
5, -0.161633, 0, 0, 0.46322,-99) , 
4, 0.999796, 0, 0, 0.498774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381198,-99) , 
4, 0.998572, 0, 0, 0.495807,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0316943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49575,-99) , 
6, 0.00906901, 0, 0, 0.504614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454231,-99) , 
6, 0.0238062, 1, 0, 0.502841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420284,-99) , 
3, 9.42206, 1, 0, 0.499364,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.026889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.90642, 1, 1, 0.508431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428304,-99) , 
5, 0.0237957, 0, 0, 0.473981,-99) , 
4, 0.999841, 0, 0, 0.505871,-99) , 
NN(
0, 
0, 
-1, 0.310469, 0, -1, 0.441138,-99) , 
4, 0.999524, 0, 0, 0.501533,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.018584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.372443, 0, 1, 0.537041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45563,-99) , 
6, 0.0237687, 1, 0, 0.500325,-99) , 
3, 0.531076, 1, 0, 0.50299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421615,-99) , 
3, 8.99541, 1, 0, 0.499167,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0187783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.812866, 1, 1, 0.504053,-99) , 
NN(
0, 
0, 
-1, -0.0692659, 0, -1, 0.466724,-99) , 
4, 0.999796, 0, 0, 0.500591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388746,-99) , 
4, 0.998572, 0, 0, 0.497781,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0295189);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494744,-99) , 
6, 0.00906887, 0, 0, 0.501164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442154,-99) , 
6, 0.0238062, 1, 0, 0.499108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41468,-99) , 
3, 9.52224, 1, 0, 0.49571,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0191221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498397,-99) , 
2, 0.0306388, 0, 0, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456251,-99) , 
2, -0.214223, 0, 0, 0.501195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397066,-99) , 
4, 0.998572, 0, 0, 0.498548,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0165174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.906448, 1, 1, 0.504472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458199,-99) , 
2, -0.213508, 0, 0, 0.502553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406727,-99) , 
4, 0.998572, 0, 0, 0.500095,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0279391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.372337, 0, 1, 0.539607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492181,-99) , 
5, 0.029218, 0, 0, 0.498312,-99) , 
3, 0.551262, 1, 0, 0.501551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411951,-99) , 
3, 9.50466, 1, 0, 0.498007,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0236283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.51186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396442,-99) , 
4, 0.99981, 0, 0, 0.494578,-99) , 
5, -0.0643488, 0, 0, 0.501349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420564,-99) , 
3, 9.42599, 1, 0, 0.498008,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.022161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.193731, 0, 1, 0.526085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494145,-99) , 
5, -0.813197, 1, 0, 0.49643,-99) , 
3, 0.558882, 1, 0, 0.498802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432965,-99) , 
3, 9.27626, 1, 0, 0.495939,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0177231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.90642, 1, 1, 0.503704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418433,-99) , 
5, 0.210945, 0, 0, 0.470004,-99) , 
4, 0.999728, 0, 0, 0.501213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41477,-99) , 
4, 0.998572, 0, 0, 0.499002,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0228054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.117723, 0, 1, 0.512836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485861,-99) , 
3, 2.61906, 0, 0, 0.493949,-99) , 
3, 0.99893, 1, 0, 0.497971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427619,-99) , 
3, 9.50466, 1, 0, 0.495112,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0289864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458547,-99) , 
6, 0.00113254, 0, 0, 0.497684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461306,-99) , 
6, 0.0237836, 1, 0, 0.49638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423443,-99) , 
4, 0.999048, 0, 0, 0.493596,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0187303);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497012,-99) , 
5, -0.906421, 1, 0, 0.498544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453171,-99) , 
4, 0.999773, 0, 0, 0.496493,-99) , 
NN(
0, 
0, 
-1, 0.307692, 0, -1, 0.445168,-99) , 
4, 0.999524, 0, 0, 0.493118,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0209044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494485,-99) , 
2, 0.0308734, 0, 0, 0.498743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458055,-99) , 
2, -0.213826, 0, 0, 0.497056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412052,-99) , 
4, 0.998572, 0, 0, 0.494915,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.023055);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493248,-99) , 
5, -0.346953, 0, 0, 0.500708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403547,-99) , 
5, 0.116082, 0, 0, 0.464091,-99) , 
4, 0.999728, 0, 0, 0.498045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415195,-99) , 
4, 0.998572, 0, 0, 0.495933,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0167501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.906426, 1, 1, 0.503036,-99) , 
NN(
0, 
0, 
-1, -0.068499, 0, -1, 0.463974,-99) , 
4, 0.999819, 0, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430608,-99) , 
4, 0.999048, 0, 0, 0.49695,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0209119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0723693, 0, 1, 0.506856,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.488628,-99) , 
5, -0.44024, 0, 0, 0.499994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448958,-99) , 
3, 9.18505, 1, 0, 0.497714,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0225545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.813404, 1, 1, 0.505391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486536,-99) , 
2, 0.0705289, 0, 0, 0.489416,-99) , 
0, 0.49809, 1, 0, 0.497276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43917,-99) , 
3, 9.13447, 1, 0, 0.494654,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0254474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494562,-99) , 
6, 0.0113362, 0, 0, 0.499029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449318,-99) , 
6, 0.0238062, 1, 0, 0.497285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431734,-99) , 
3, 9.50466, 1, 0, 0.494649,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0159293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466879,-99) , 
6, 0.0238062, 1, 0, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469306,-99) , 
3, 7.21328, 1, 0, 0.500602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439668,-99) , 
3, 9.42776, 1, 0, 0.498079,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0197955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496534,-99) , 
5, -0.719302, 1, 0, 0.500104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430422,-99) , 
2, 0.275499, 1, 0, 0.498189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443437,-99) , 
2, -0.214223, 0, 0, 0.495653,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0266112);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492714,-99) , 
4, 0.999992, 0, 0, 0.501266,-99) , 
NN(
0, 
0, 
-1, 0.116864, 0, -1, 0.466343,-99) , 
4, 0.999841, 0, 0, 0.498712,-99) , 
NN(
0, 
0, 
-1, 0.310587, 0, -1, 0.450836,-99) , 
4, 0.999524, 0, 0, 0.495544,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0199477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496923,-99) , 
2, 0.0189333, 0, 0, 0.502469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435771,-99) , 
2, 0.275463, 1, 0, 0.50063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458205,-99) , 
2, -0.214276, 0, 0, 0.498623,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0167528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.369521, 0, 1, 0.525823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492734,-99) , 
5, -0.532004, 0, 0, 0.50043,-99) , 
3, 0.550821, 1, 0, 0.50238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448571,-99) , 
3, 9.41001, 1, 0, 0.500147,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.024814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.512132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44128,-99) , 
4, 0.999905, 0, 0, 0.496808,-99) , 
5, 0.122779, 0, 0, 0.50137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444803,-99) , 
3, 9.50853, 1, 0, 0.499102,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0104316);
  fForest.push_back( 
NN(
0, 
0, 
-1, -0.214326, 0, -1, 0.494784,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0194375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496697,-99) , 
5, -0.719298, 1, 0, 0.500197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40946,-99) , 
5, 0.0231513, 0, 0, 0.471551,-99) , 
4, 0.999728, 0, 0, 0.498101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424442,-99) , 
4, 0.998572, 0, 0, 0.49625,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0175523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497772,-99) , 
4, 0.99999, 0, 0, 0.503518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436026,-99) , 
5, -0.0701752, 0, 0, 0.478217,-99) , 
4, 0.999796, 0, 0, 0.501164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430492,-99) , 
4, 0.998572, 0, 0, 0.499372,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0117963);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499572,-99) , 
5, -0.719373, 1, 0, 0.502156,-99) , 
NN(
0, 
0, 
-1, 0.116922, 0, -1, 0.477958,-99) , 
4, 0.999728, 0, 0, 0.500666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447009,-99) , 
4, 0.999048, 0, 0, 0.498632,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0174092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.504736,-99) , 
NN(
0, 
0, 
-1, 0.116183, 0, -1, 0.468819,-99) , 
4, 0.999773, 0, 0, 0.502125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43896,-99) , 
4, 0.999048, 0, 0, 0.499749,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0197852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472862,-99) , 
0, 0.504757, 1, 0, 0.503195,-99) , 
NN(
0, 
0, 
-1, 0.115626, 0, -1, 0.474481,-99) , 
4, 0.999841, 0, 0, 0.501096,-99) , 
NN(
0, 
0, 
-1, 0.310613, 0, -1, 0.455593,-99) , 
4, 0.999524, 0, 0, 0.498109,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0141409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498107,-99) , 
5, 0.497035, 0, 0, 0.500555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462076,-99) , 
3, 7.41441, 1, 0, 0.499157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451137,-99) , 
3, 9.12889, 1, 0, 0.496989,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0119959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49983,-99) , 
2, 0.0712209, 0, 0, 0.502424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442926,-99) , 
5, 0.210848, 0, 0, 0.475131,-99) , 
4, 0.999728, 0, 0, 0.50078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450768,-99) , 
4, 0.999048, 0, 0, 0.498901,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0122876);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499309,-99) , 
2, 0.0773203, 0, 0, 0.50182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475617,-99) , 
4, 0.999683, 0, 0, 0.500483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441721,-99) , 
4, 0.999048, 0, 0, 0.498284,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0150222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476686,-99) , 
5, 0.684163, 1, 0, 0.502467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469788,-99) , 
4, 0.999683, 0, 0, 0.500844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440731,-99) , 
4, 0.999048, 0, 0, 0.498626,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0207163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48761,-99) , 
5, -0.369521, 0, 0, 0.524065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494282,-99) , 
0, 0.496186, 1, 0, 0.498502,-99) , 
3, 0.564085, 1, 0, 0.500571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453506,-99) , 
3, 9.42206, 1, 0, 0.498623,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0122946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18631, 0, 1, 0.503133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471019,-99) , 
4, 0.999705, 0, 0, 0.502258,-99) , 
NN(
0, 
0, 
-1, 0.310598, 0, -1, 0.460775,-99) , 
4, 0.999524, 0, 0, 0.49955,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0253808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467535,-99) , 
6, 0.00113244, 0, 0, 0.500026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464407,-99) , 
6, 0.0237836, 1, 0, 0.498758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454849,-99) , 
4, 0.999048, 0, 0, 0.49711,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0172469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494719,-99) , 
2, -0.00434514, 1, 0, 0.49964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458153,-99) , 
2, 0.275512, 1, 0, 0.498475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451085,-99) , 
2, -0.214238, 0, 0, 0.496275,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0160509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497728,-99) , 
3, 1.13352, 1, 0, 0.501396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462021,-99) , 
3, 7.20753, 1, 0, 0.499578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450457,-99) , 
3, 9.42206, 1, 0, 0.497586,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0178295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.189424, 0, 1, 0.528352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496201,-99) , 
5, 0.122448, 0, 0, 0.500094,-99) , 
3, 0.568777, 1, 0, 0.502438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451587,-99) , 
3, 9.52058, 1, 0, 0.500428,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0156897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498082,-99) , 
6, 0.0124577, 0, 0, 0.501554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467674,-99) , 
6, 0.0237841, 1, 0, 0.500382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45609,-99) , 
3, 8.98381, 1, 0, 0.498291,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0163059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.518018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443484,-99) , 
4, 0.999658, 0, 0, 0.498293,-99) , 
5, 0.302091, 0, 0, 0.502505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45006,-99) , 
3, 9.52452, 1, 0, 0.50044,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0187687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48069,-99) , 
5, -0.866285, 1, 0, 0.488107,-99) , 
5, -0.532008, 0, 0, 0.498475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45625,-99) , 
3, 9.52224, 1, 0, 0.4968,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0329662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.20821, 0, 1, 0.532457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488453,-99) , 
2, -0.0112949, 1, 0, 0.495987,-99) , 
2, 0.0629538, 0, 0, 0.500683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470825,-99) , 
5, -0.15197, 0, 0, 0.487422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439949,-99) , 
5, 0.484092, 1, 0, 0.480349,-99) , 
3, 4.63847, 1, 0, 0.496462,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.014688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497436,-99) , 
6, 0.0124698, 0, 0, 0.500814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474013,-99) , 
6, 0.0238062, 1, 0, 0.499862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452425,-99) , 
4, 0.998572, 0, 0, 0.498661,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0143702);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499511,-99) , 
2, 0.0189842, 0, 0, 0.503788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4502,-99) , 
2, 0.27552, 1, 0, 0.502306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463116,-99) , 
2, -0.214238, 0, 0, 0.500477,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.00909684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.501883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477174,-99) , 
4, 0.999683, 0, 0, 0.500638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45394,-99) , 
4, 0.999048, 0, 0, 0.498894,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0105518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465921,-99) , 
3, 7.07879, 1, 0, 0.50049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461112,-99) , 
3, 9.25868, 1, 0, 0.498841,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0118644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.369427, 0, 1, 0.526342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498394,-99) , 
5, -0.906388, 1, 0, 0.49952,-99) , 
3, 0.573103, 1, 0, 0.501781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461049,-99) , 
3, 9.52452, 1, 0, 0.500192,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0112908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499632,-99) , 
3, 8.85541, 0, 0, 0.501594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456493,-99) , 
5, 0.11687, 0, 0, 0.481566,-99) , 
4, 0.999864, 0, 0, 0.499315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46295,-99) , 
4, 0.999048, 0, 0, 0.497928,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0299273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489225,-99) , 
6, 0.00339803, 0, 0, 0.503858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473402,-99) , 
6, 0.0237868, 1, 0, 0.502774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466133,-99) , 
4, 0.999048, 0, 0, 0.501383,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0138308);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460917,-99) , 
5, 0.310469, 0, 0, 0.52694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476562,-99) , 
4, 0.999841, 0, 0, 0.498926,-99) , 
4, 0.999524, 1, 0, 0.50073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470038,-99) , 
3, 9.50853, 1, 0, 0.499525,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0188332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452276,-99) , 
5, 0.310469, 0, 0, 0.521256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496381,-99) , 
2, 0.0284803, 0, 0, 0.499368,-99) , 
4, 0.999524, 1, 0, 0.500769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46774,-99) , 
3, 9.40614, 1, 0, 0.499425,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0132851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498646,-99) , 
3, 0.551308, 1, 0, 0.500939,-99) , 
3, 9.00639, 0, 0, 0.502425,-99) , 
NN(
0, 
0, 
-1, 0.310469, 0, -1, 0.466939,-99) , 
4, 0.999524, 0, 0, 0.500133,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0173586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42206, 0, 1, 0.506628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469895,-99) , 
2, 0.275514, 1, 0, 0.505592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46235,-99) , 
2, -0.214238, 0, 0, 0.503615,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0121456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0718986, 1, 1, 0.50403,-99) , 
NN(
0, 
0, 
-1, -0.350452, 0, -1, 0.477466,-99) , 
3, 6.81848, 1, 0, 0.502412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47149,-99) , 
3, 9.50466, 1, 0, 0.5012,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0115899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498584,-99) , 
3, 0.55832, 1, 0, 0.499945,-99) , 
3, 9.18631, 0, 0, 0.501483,-99) , 
NN(
0, 
0, 
-1, 0.310578, 0, -1, 0.468014,-99) , 
4, 0.999524, 0, 0, 0.499323,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0141371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.215985, 0, 1, 0.51083,-99) , 
NN(
0, 
0, 
-1, 6.77259, 1, -1, 0.496506,-99) , 
3, 1.45827, 1, 0, 0.501455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468182,-99) , 
3, 9.42975, 1, 0, 0.500114,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0102058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468549,-99) , 
3, 7.26628, 1, 0, 0.501355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474062,-99) , 
3, 9.50466, 1, 0, 0.500273,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.00782632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463239,-99) , 
6, 0.0237559, 1, 0, 0.499361,-99) , 
5, -0.906426, 1, 0, 0.5004,-99) , 
NN(
0, 
0, 
-1, -0.256823, 0, -1, 0.481563,-99) , 
0, 0.503805, 1, 0, 0.498719,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0139456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.85705, 0, 1, 0.504281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475076,-99) , 
4, 0.999683, 0, 0, 0.502822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448387,-99) , 
4, 0.999048, 0, 0, 0.500871,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0131627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496806,-99) , 
3, 8.86327, 0, 0, 0.497915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459094,-99) , 
2, -0.275739, 0, 0, 0.496736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46114,-99) , 
2, 0.213865, 1, 0, 0.495249,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0120084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0703935, 1, 1, 0.503259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43867,-99) , 
4, 0.999955, 0, 0, 0.491542,-99) , 
5, -0.532304, 0, 0, 0.499547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466396,-99) , 
4, 0.999048, 0, 0, 0.49832,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0134071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495178,-99) , 
3, 1.01267, 1, 0, 0.497121,-99) , 
3, 9.42725, 0, 0, 0.498303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464168,-99) , 
4, 0.999048, 0, 0, 0.497042,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0108717);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498102,-99) , 
5, 0.123174, 0, 0, 0.500686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477716,-99) , 
0, 0.49088, 0, 0, 0.499528,-99) , 
NN(
0, 
0, 
-1, -0.258287, 0, -1, 0.475581,-99) , 
0, 0.504757, 1, 0, 0.498154,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0136423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49733,-99) , 
5, -0.719302, 1, 0, 0.499438,-99) , 
4, 0.999048, 1, 0, 0.501075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456357,-99) , 
3, 9.52224, 1, 0, 0.499341,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.015129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494139,-99) , 
0, 0.494281, 1, 0, 0.496796,-99) , 
3, 1.43247, 1, 0, 0.500409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474295,-99) , 
3, 9.40614, 1, 0, 0.499345,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0136957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483726,-99) , 
5, -0.350779, 0, 0, 0.512132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499,-99) , 
3, 9.00366, 0, 0, 0.50006,-99) , 
2, -0.0715402, 1, 0, 0.501946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469748,-99) , 
4, 0.999048, 0, 0, 0.500743,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.012608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480487,-99) , 
3, 6.97925, 1, 0, 0.502199,-99) , 
3, 9.12253, 0, 0, 0.503384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466822,-99) , 
4, 0.999048, 0, 0, 0.502023,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0183338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493979,-99) , 
3, 2.80523, 0, 0, 0.499636,-99) , 
4, 0.999048, 1, 0, 0.501148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471181,-99) , 
3, 9.50466, 1, 0, 0.499973,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0201735);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496099,-99) , 
4, 0.999994, 0, 0, 0.503418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425279,-99) , 
5, -0.347996, 0, 0, 0.488299,-99) , 
4, 0.999864, 0, 0, 0.501521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466855,-99) , 
4, 0.998572, 0, 0, 0.500651,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0141195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0190212, 0, 1, 0.505449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472827,-99) , 
2, 0.27555, 1, 0, 0.504543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471866,-99) , 
2, -0.214186, 0, 0, 0.503054,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0113474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498602,-99) , 
2, 0.0793393, 0, 0, 0.500725,-99) , 
3, 9.12773, 0, 0, 0.501869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441494,-99) , 
5, 0.397305, 0, 0, 0.47638,-99) , 
4, 0.999524, 0, 0, 0.500223,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0394442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489825,-99) , 
5, -0.44157, 0, 0, 0.508905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47909,-99) , 
5, -0.719159, 1, 0, 0.485849,-99) , 
6, 0.00226725, 0, 0, 0.501461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467222,-99) , 
6, 0.0238062, 1, 0, 0.500285,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0100345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0699435, 1, 1, 0.502869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474166,-99) , 
0, 0.505709, 1, 0, 0.501925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460651,-99) , 
3, 9.50853, 1, 0, 0.500315,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0115211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498193,-99) , 
2, -0.0744251, 1, 0, 0.500446,-99) , 
4, 0.999048, 1, 0, 0.501585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465083,-99) , 
3, 9.52058, 1, 0, 0.50015,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0211647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460021,-99) , 
2, -0.152884, 0, 0, 0.506789,-99) , 
NN(
0, 
0, 
-1, -0.166431, 0, -1, 0.463129,-99) , 
2, 0.0715678, 1, 0, 0.49384,-99) , 
3, 4.58649, 1, 0, 0.502848,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0179378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495684,-99) , 
6, 0.00677702, 0, 0, 0.500968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476363,-99) , 
6, 0.0237196, 1, 0, 0.500118,-99) , 
NN(
0, 
0, 
-1, -0.35101, 0, -1, 0.475778,-99) , 
0, 0.504757, 1, 0, 0.498724,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0138791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.01453, 1, 1, 0.516609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496154,-99) , 
5, -0.772764, 1, 0, 0.498053,-99) , 
5, 0.5906, 0, 0, 0.499712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463493,-99) , 
3, 9.50466, 1, 0, 0.498313,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0104023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48145,-99) , 
4, 0.999751, 0, 0, 0.501545,-99) , 
3, 9.42864, 0, 0, 0.502767,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.479343,-99) , 
4, 0.999524, 0, 0, 0.501237,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0131398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0706476, 1, 1, 0.503458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475819,-99) , 
5, 0.123182, 0, 0, 0.485745,-99) , 
3, 5.28158, 1, 0, 0.501208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472822,-99) , 
3, 9.1652, 1, 0, 0.499961,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0131479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48068,-99) , 
5, 0.304084, 0, 0, 0.528052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49785,-99) , 
2, 0.0793393, 0, 0, 0.499465,-99) , 
4, 0.999524, 1, 0, 0.501289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476206,-99) , 
3, 9.42725, 1, 0, 0.500287,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.016879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481967,-99) , 
5, -0.629427, 0, 0, 0.517046,-99) , 
NN(
0, 
0, 
-1, 0.684759, 1, -1, 0.496596,-99) , 
2, -0.0511513, 1, 0, 0.499997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465049,-99) , 
2, -0.214326, 0, 0, 0.498426,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0112556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498583,-99) , 
6, 0.0113238, 0, 0, 0.502074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487072,-99) , 
6, 0.0237868, 1, 0, 0.501549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467589,-99) , 
4, 0.998572, 0, 0, 0.500696,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0161015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42206, 0, 1, 0.506556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470681,-99) , 
2, -0.275405, 0, 0, 0.505475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47285,-99) , 
2, 0.214332, 1, 0, 0.50415,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.00845605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465726,-99) , 
6, 0.0237841, 1, 0, 0.50054,-99) , 
5, -0.915342, 1, 0, 0.501535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467949,-99) , 
5, 0.777728, 1, 0, 0.500684,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.029512);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487849,-99) , 
4, 0.999968, 0, 0, 0.50403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422398,-99) , 
5, -0.130871, 0, 0, 0.467988,-99) , 
4, 0.999776, 0, 0, 0.501615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479093,-99) , 
4, 0.999524, 1, 0, 0.495983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46562,-99) , 
3, 4.74193, 1, 0, 0.489416,-99) , 
5, 0.403969, 1, 0, 0.499561,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0136701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495544,-99) , 
2, -0.068232, 1, 0, 0.497468,-99) , 
3, 9.12647, 0, 0, 0.498563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465466,-99) , 
4, 0.999048, 0, 0, 0.497354,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0110875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499614,-99) , 
5, -0.532992, 0, 0, 0.504199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481407,-99) , 
0, 0.505981, 1, 0, 0.503534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477396,-99) , 
0, 0.490471, 0, 0, 0.50251,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0101597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498231,-99) , 
2, 0.0742397, 0, 0, 0.499874,-99) , 
3, 9.42206, 0, 0, 0.50117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469727,-99) , 
4, 0.999048, 0, 0, 0.500014,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0282817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.446612, 0, 1, 0.531247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494917,-99) , 
2, -0.0538733, 1, 0, 0.49923,-99) , 
2, 0.0932382, 0, 0, 0.502136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45555,-99) , 
2, -0.153037, 0, 0, 0.503058,-99) , 
NN(
0, 
0, 
-1, -0.255627, 0, -1, 0.456722,-99) , 
2, 0.071449, 1, 0, 0.489475,-99) , 
3, 4.68521, 1, 0, 0.499561,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0119083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483284,-99) , 
5, 0.40117, 0, 0, 0.520532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472364,-99) , 
4, 0.999751, 0, 0, 0.50095,-99) , 
4, 0.999524, 1, 0, 0.502185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47318,-99) , 
3, 9.50466, 1, 0, 0.501039,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.00849487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499598,-99) , 
3, 0.57141, 1, 0, 0.500875,-99) , 
3, 9.42872, 0, 0, 0.502017,-99) , 
NN(
0, 
0, 
-1, 0.299627, 0, -1, 0.473703,-99) , 
4, 0.999524, 0, 0, 0.500194,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0149935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.503673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463217,-99) , 
5, 0.210848, 0, 0, 0.49135,-99) , 
4, 0.999864, 0, 0, 0.502252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465749,-99) , 
4, 0.999048, 0, 0, 0.500899,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0119417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55107, 1, 1, 0.521391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482942,-99) , 
3, 6.76603, 1, 0, 0.501333,-99) , 
5, 0.591161, 0, 0, 0.503129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471212,-99) , 
3, 9.42372, 1, 0, 0.501864,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.00948346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0712073, 1, 1, 0.506821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459982,-99) , 
4, 0.99981, 0, 0, 0.497853,-99) , 
5, 0.0273967, 0, 0, 0.500997,-99) , 
NN(
0, 
0, 
-1, 0.489791, 1, -1, 0.482771,-99) , 
0, 0.491424, 0, 0, 0.499896,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0141631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.514603,-99) , 
NN(
0, 
0, 
-1, 0.999538, 0, -1, 0.495733,-99) , 
5, 0.310368, 0, 0, 0.499688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477012,-99) , 
3, 9.52628, 1, 0, 0.4988,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.00665314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49995,-99) , 
5, -0.906426, 1, 0, 0.500933,-99) , 
2, 0.213801, 0, 0, 0.502086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472274,-99) , 
3, 9.06972, 1, 0, 0.500746,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.021658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497484,-99) , 
2, 0.0466264, 0, 0, 0.500469,-99) , 
4, 0.999048, 1, 0, 0.5024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468935,-99) , 
2, -0.0782433, 0, 0, 0.498401,-99) , 
NN(
0, 
0, 
-1, -0.255627, 0, -1, 0.465065,-99) , 
2, 0.0714036, 1, 0, 0.488398,-99) , 
3, 4.80413, 1, 0, 0.499665,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.010258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.764989, 1, 1, 0.522217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488703,-99) , 
3, 5.03188, 1, 0, 0.499491,-99) , 
5, 0.684759, 0, 0, 0.500743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464141,-99) , 
3, 9.50853, 1, 0, 0.49933,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.014147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.503582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47163,-99) , 
5, 0.582203, 0, 0, 0.484024,-99) , 
4, 0.999864, 0, 0, 0.501371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47156,-99) , 
4, 0.999048, 0, 0, 0.500276,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0145783);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485717,-99) , 
5, 0.485706, 0, 0, 0.520271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495463,-99) , 
5, -0.719302, 1, 0, 0.49718,-99) , 
4, 0.999524, 1, 0, 0.498648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475767,-99) , 
3, 9.52058, 1, 0, 0.497761,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0107098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497057,-99) , 
3, 9.00366, 0, 0, 0.498193,-99) , 
2, -0.21436, 1, 0, 0.499165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474766,-99) , 
4, 0.999048, 0, 0, 0.498265,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0105851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.212571, 1, 1, 0.503572,-99) , 
NN(
0, 
0, 
-1, 7.76777, 1, -1, 0.48455,-99) , 
3, 6.64679, 1, 0, 0.502373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472398,-99) , 
3, 9.26255, 1, 0, 0.501122,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.00947811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499371,-99) , 
3, 9.18631, 0, 0, 0.501182,-99) , 
NN(
0, 
0, 
-1, 0.209924, 0, -1, 0.479264,-99) , 
4, 0.999773, 0, 0, 0.499589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468658,-99) , 
4, 0.999048, 0, 0, 0.49845,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0195628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497594,-99) , 
3, 1.19576, 1, 0, 0.502338,-99) , 
4, 0.999048, 1, 0, 0.503811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482921,-99) , 
5, -0.0101539, 0, 0, 0.491599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454221,-99) , 
5, 0.484687, 1, 0, 0.486155,-99) , 
3, 4.6344, 1, 0, 0.500186,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0107908);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476043,-99) , 
3, 8.99973, 1, 0, 0.503212,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0102055);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.00366, 0, 1, 0.503903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462839,-99) , 
4, 0.999048, 0, 0, 0.502422,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.00876509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482754,-99) , 
3, 6.12602, 1, 0, 0.499718,-99) , 
3, 9.12647, 0, 0, 0.500475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465925,-99) , 
4, 0.999048, 0, 0, 0.499198,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0109832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494791,-99) , 
3, 2.78273, 0, 0, 0.49739,-99) , 
3, 9.42599, 0, 0, 0.498366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470518,-99) , 
4, 0.999048, 0, 0, 0.497348,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.00950028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498095,-99) , 
3, 0.568409, 1, 0, 0.499432,-99) , 
3, 9.42599, 0, 0, 0.50045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470784,-99) , 
4, 0.999048, 0, 0, 0.499357,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.00627185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530716,-99) , 
NN(
0, 
0, 
-1, 0.0238062, 1, -1, 0.49932,-99) , 
3, 9.18505, 0, 0, 0.500643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465265,-99) , 
4, 0.999048, 0, 0, 0.499358,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0079669);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470321,-99) , 
3, 9.50466, 1, 0, 0.501709,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0213345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.631529, 0, 1, 0.527193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488927,-99) , 
5, -0.251696, 0, 0, 0.498333,-99) , 
6, 0.0113256, 0, 0, 0.500964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477322,-99) , 
6, 0.0237841, 1, 0, 0.500148,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.028032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488506,-99) , 
5, -0.531997, 0, 0, 0.503366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472366,-99) , 
5, -0.626263, 1, 0, 0.481003,-99) , 
6, 0.00113243, 0, 0, 0.499672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468979,-99) , 
6, 0.0237868, 1, 0, 0.498629,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0244878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492856,-99) , 
4, 0.999988, 0, 0, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469759,-99) , 
4, 0.999743, 0, 0, 0.499981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483275,-99) , 
4, 0.999524, 1, 0, 0.496364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454742,-99) , 
3, 4.6699, 1, 0, 0.487403,-99) , 
5, 0.403054, 1, 0, 0.497851,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0175161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488739,-99) , 
5, -0.35372, 0, 0, 0.511581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493741,-99) , 
5, -0.345226, 1, 0, 0.498415,-99) , 
2, -0.0705059, 1, 0, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473144,-99) , 
3, 9.52224, 1, 0, 0.499462,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.00541071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499812,-99) , 
2, -0.209818, 1, 0, 0.500691,-99) , 
3, 9.42599, 0, 0, 0.5014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472392,-99) , 
4, 0.999048, 0, 0, 0.500327,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.00645197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499653,-99) , 
2, -0.21216, 1, 0, 0.500608,-99) , 
4, 0.999048, 1, 0, 0.501563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471636,-99) , 
3, 9.52058, 1, 0, 0.500399,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.01137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.4299, 0, 1, 0.504243,-99) , 
NN(
0, 
0, 
-1, 0.117996, 0, -1, 0.489158,-99) , 
4, 0.999773, 0, 0, 0.503155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469005,-99) , 
4, 0.999048, 0, 0, 0.501899,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0135358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496783,-99) , 
4, 0.999955, 1, 0, 0.499937,-99) , 
4, 0.999048, 1, 0, 0.501125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468285,-99) , 
3, 9.50466, 1, 0, 0.499863,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.00749758);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12253, 0, 1, 0.502711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468963,-99) , 
4, 0.999048, 0, 0, 0.501474,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0147971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481297,-99) , 
5, 0.404162, 0, 0, 0.519665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49443,-99) , 
5, -0.160378, 1, 0, 0.499657,-99) , 
4, 0.999524, 1, 0, 0.500917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467125,-99) , 
3, 9.52452, 1, 0, 0.49964,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0106681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497269,-99) , 
2, -0.0717891, 1, 0, 0.499097,-99) , 
4, 0.999048, 1, 0, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481065,-99) , 
3, 9.26255, 1, 0, 0.499436,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0131889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.504765,-99) , 
NN(
0, 
0, 
-1, -0.25538, 0, -1, 0.48976,-99) , 
4, 0.999864, 0, 0, 0.50306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461171,-99) , 
4, 0.999048, 0, 0, 0.501548,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.00940266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497439,-99) , 
0, 0.504757, 0, 0, 0.498222,-99) , 
3, 9.18631, 0, 0, 0.499231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473206,-99) , 
4, 0.999048, 0, 0, 0.498276,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0120834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497739,-99) , 
2, 0.0360145, 0, 0, 0.500299,-99) , 
3, 9.00757, 0, 0, 0.501594,-99) , 
NN(
0, 
0, 
-1, 0.401025, 0, -1, 0.479239,-99) , 
4, 0.999524, 0, 0, 0.500161,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0128544);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48825,-99) , 
5, 0.310598, 0, 0, 0.529201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495679,-99) , 
0, 0.49809, 1, 0, 0.49898,-99) , 
4, 0.999524, 1, 0, 0.500896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474549,-99) , 
3, 9.50466, 1, 0, 0.499868,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0113065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486236,-99) , 
3, 7.20755, 1, 0, 0.503061,-99) , 
3, 9.42206, 0, 0, 0.503778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477813,-99) , 
4, 0.999048, 0, 0, 0.50282,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.00661697);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494168,-99) , 
5, 0.3013, 0, 0, 0.524032,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.49929,-99) , 
4, 0.999524, 1, 0, 0.50087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478401,-99) , 
3, 9.25868, 1, 0, 0.499932,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.00834671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491194,-99) , 
3, 3.68494, 1, 0, 0.497712,-99) , 
5, 0.684163, 0, 0, 0.498948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473483,-99) , 
3, 9.50466, 1, 0, 0.49797,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0133368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496887,-99) , 
3, 1.00697, 1, 0, 0.499999,-99) , 
3, 9.42206, 0, 0, 0.501122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470636,-99) , 
4, 0.999048, 0, 0, 0.500031,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.00744957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49964,-99) , 
2, -0.214584, 1, 0, 0.500467,-99) , 
4, 0.999048, 1, 0, 0.501617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465242,-99) , 
3, 9.05214, 1, 0, 0.500007,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0156954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0716497, 0, 1, 0.508262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457812,-99) , 
4, 0.999905, 0, 0, 0.498631,-99) , 
5, -0.25121, 0, 0, 0.503438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481501,-99) , 
3, 9.52452, 1, 0, 0.502598,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0120972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494017,-99) , 
3, 2.33568, 0, 0, 0.498282,-99) , 
3, 9.42206, 0, 0, 0.499368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482601,-99) , 
4, 0.999048, 0, 0, 0.498746,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0117334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495015,-99) , 
5, 0.394693, 0, 0, 0.523558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497123,-99) , 
3, 0.568762, 1, 0, 0.498269,-99) , 
4, 0.999524, 1, 0, 0.499876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476173,-99) , 
3, 9.40614, 1, 0, 0.498939,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.00434168);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42599, 0, 1, 0.501212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472482,-99) , 
4, 0.999048, 0, 0, 0.500166,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.00941284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.510399,-99) , 
NN(
0, 
0, 
-1, 0.999619, 0, -1, 0.498488,-99) , 
5, 0.216345, 0, 0, 0.501493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474313,-99) , 
3, 9.16907, 1, 0, 0.500312,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0168765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494774,-99) , 
5, -0.550123, 0, 0, 0.503621,-99) , 
5, -0.906454, 1, 0, 0.504619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489603,-99) , 
5, -0.439574, 0, 0, 0.500066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460484,-99) , 
3, 4.82636, 1, 0, 0.49244,-99) , 
0, 0.494281, 0, 0, 0.5025,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0128679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496951,-99) , 
3, 1.41561, 1, 0, 0.519623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494768,-99) , 
5, -0.348876, 1, 0, 0.498795,-99) , 
4, 0.999524, 1, 0, 0.500111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474733,-99) , 
3, 9.26255, 1, 0, 0.499046,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0105088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467083,-99) , 
2, 0.0717083, 1, 0, 0.493295,-99) , 
3, 4.75487, 1, 0, 0.500618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47032,-99) , 
0, 0.505709, 1, 0, 0.499615,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0124436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.517712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491265,-99) , 
3, 4.58431, 1, 0, 0.501037,-99) , 
5, 0.590601, 0, 0, 0.502531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471653,-99) , 
3, 9.50853, 1, 0, 0.501375,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0163983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493279,-99) , 
2, -0.0301752, 1, 0, 0.496883,-99) , 
2, 0.214489, 0, 0, 0.498002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475782,-99) , 
3, 9.1652, 1, 0, 0.497047,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0103383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497654,-99) , 
0, 0.490471, 1, 0, 0.498489,-99) , 
3, 9.42725, 0, 0, 0.499798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467296,-99) , 
4, 0.999048, 0, 0, 0.498623,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0101499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497674,-99) , 
2, 0.2108, 0, 0, 0.498511,-99) , 
3, 9.18112, 0, 0, 0.499523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461881,-99) , 
4, 0.999048, 0, 0, 0.498161,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0125503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80505, 0, 1, 0.504381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477485,-99) , 
4, 0.999796, 0, 0, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0.304024, 0, -1, 0.479688,-99) , 
4, 0.999524, 0, 0, 0.501503,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.00856768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498563,-99) , 
2, 0.220961, 0, 0, 0.499353,-99) , 
3, 9.12253, 0, 0, 0.50061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468824,-99) , 
4, 0.999048, 0, 0, 0.499468,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.00605578);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.18682, 0, 1, 0.502195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474659,-99) , 
4, 0.999048, 0, 0, 0.501205,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0138456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0710027, 1, 1, 0.508482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475076,-99) , 
4, 0.999905, 0, 0, 0.500391,-99) , 
5, 0.0429451, 0, 0, 0.502832,-99) , 
NN(
0, 
0, 
-1, 0.498087, 0, -1, 0.485935,-99) , 
5, 0.684758, 1, 0, 0.501901,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.00989312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497916,-99) , 
4, 0.999977, 1, 0, 0.499907,-99) , 
3, 9.12773, 0, 0, 0.501203,-99) , 
NN(
0, 
0, 
-1, -0.0715884, 0, -1, 0.477899,-99) , 
4, 0.999524, 0, 0, 0.499741,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.00503233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48166,-99) , 
4, 0.999637, 0, 0, 0.499535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474437,-99) , 
4, 0.999048, 0, 0, 0.498777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466665,-99) , 
5, 0.778357, 1, 0, 0.497969,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.00871497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491338,-99) , 
3, 1.45054, 1, 0, 0.517318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4988,-99) , 
2, 0.133237, 0, 0, 0.499746,-99) , 
4, 0.999524, 1, 0, 0.500837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474492,-99) , 
3, 9.50853, 1, 0, 0.499814,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.00746234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499482,-99) , 
3, 8.85541, 0, 0, 0.500963,-99) , 
NN(
0, 
0, 
-1, 0.999534, 1, -1, 0.48497,-99) , 
4, 0.999728, 0, 0, 0.500004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469281,-99) , 
4, 0.999048, 0, 0, 0.49891,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.00738489);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.18112, 0, 1, 0.502949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476595,-99) , 
4, 0.999048, 0, 0, 0.501991,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0240976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493081,-99) , 
5, -0.722722, 0, 0, 0.523246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490187,-99) , 
5, -0.064627, 0, 0, 0.498371,-99) , 
6, 0.010194, 0, 0, 0.501259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474955,-99) , 
6, 0.0237868, 1, 0, 0.500358,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.00671159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.915486, 1, 1, 0.502082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47959,-99) , 
4, 0.999048, 0, 0, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469528,-99) , 
5, 0.774587, 1, 0, 0.500578,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0111735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493024,-99) , 
5, -0.0643439, 1, 0, 0.498259,-99) , 
4, 0.999048, 1, 0, 0.499201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460563,-99) , 
3, 9.50853, 1, 0, 0.497748,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.00998255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497739,-99) , 
2, -0.214584, 1, 0, 0.498685,-99) , 
4, 0.999048, 1, 0, 0.500118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480398,-99) , 
3, 9.13219, 1, 0, 0.499258,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.00496642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499619,-99) , 
4, 0.999547, 1, 0, 0.500482,-99) , 
3, 9.42599, 0, 0, 0.501129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480528,-99) , 
4, 0.999048, 0, 0, 0.500377,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.00506224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499817,-99) , 
2, -0.216957, 1, 0, 0.50056,-99) , 
4, 0.999048, 1, 0, 0.501386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477664,-99) , 
3, 9.50466, 1, 0, 0.50046,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.00882949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18631, 0, 1, 0.502837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469088,-99) , 
4, 0.999534, 1, 0, 0.485169,-99) , 
4, 0.999728, 0, 0, 0.501785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473869,-99) , 
4, 0.999048, 0, 0, 0.500776,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.00619092);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473775,-99) , 
3, 9.52452, 1, 0, 0.501124,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.00746356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462416,-99) , 
2, -0.275445, 0, 0, 0.500648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475427,-99) , 
2, 0.214283, 1, 0, 0.499617,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0107327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498583,-99) , 
3, 9.18769, 0, 0, 0.500393,-99) , 
NN(
0, 
0, 
-1, 0.115626, 0, -1, 0.483684,-99) , 
4, 0.999864, 0, 0, 0.498514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473898,-99) , 
4, 0.999048, 0, 0, 0.49763,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0237045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4207, 1, 1, 0.522912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496424,-99) , 
2, -0.0311904, 1, 0, 0.50075,-99) , 
2, 0.0420616, 0, 0, 0.504528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480382,-99) , 
2, -0.0782154, 0, 0, 0.50235,-99) , 
NN(
0, 
0, 
-1, -0.251107, 0, -1, 0.468963,-99) , 
2, 0.071449, 1, 0, 0.492529,-99) , 
3, 4.6344, 1, 0, 0.502048,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0142857);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498615,-99) , 
2, 0.0187112, 0, 0, 0.503291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490135,-99) , 
0, 0.499995, 0, 0, 0.495489,-99) , 
3, 2.76561, 1, 0, 0.500346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474831,-99) , 
3, 9.41001, 1, 0, 0.499336,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0150558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505817,-99) , 
NN(
0, 
0, 
-1, 0.0234106, 1, -1, 0.490577,-99) , 
0, 0.492376, 0, 0, 0.504177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491893,-99) , 
2, 0.0716617, 0, 0, 0.495319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471505,-99) , 
5, -0.628761, 0, 0, 0.489207,-99) , 
0, 0.5019, 1, 0, 0.501456,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.00578962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482547,-99) , 
3, 6.59246, 1, 0, 0.499207,-99) , 
3, 9.18112, 0, 0, 0.499791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471476,-99) , 
4, 0.999048, 0, 0, 0.498781,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.00893226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495944,-99) , 
3, 2.28078, 1, 0, 0.498892,-99) , 
4, 0.999048, 1, 0, 0.499836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473568,-99) , 
3, 9.1652, 1, 0, 0.498706,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.019716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494585,-99) , 
4, 0.999994, 0, 0, 0.502437,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.484945,-99) , 
4, 0.999864, 0, 0, 0.500465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471903,-99) , 
4, 0.999048, 0, 0, 0.499443,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.00922918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496467,-99) , 
5, -0.253669, 1, 0, 0.4999,-99) , 
3, 9.12647, 0, 0, 0.500919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484086,-99) , 
4, 0.999048, 0, 0, 0.500305,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.00851603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49877,-99) , 
0, 0.493328, 1, 0, 0.500297,-99) , 
4, 0.999048, 1, 0, 0.501449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477824,-99) , 
3, 9.42206, 1, 0, 0.500522,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.00957627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492497,-99) , 
5, -0.532298, 0, 0, 0.498017,-99) , 
4, 0.999048, 1, 0, 0.499272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472801,-99) , 
3, 9.50466, 1, 0, 0.498273,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.00768354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.502466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481638,-99) , 
4, 0.999592, 0, 0, 0.501719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474634,-99) , 
4, 0.999048, 0, 0, 0.500742,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.00947241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497821,-99) , 
3, 0.53266, 1, 0, 0.49889,-99) , 
5, 0.684758, 0, 0, 0.50012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477442,-99) , 
3, 9.11461, 1, 0, 0.499135,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.00991182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498026,-99) , 
5, 0.0140502, 0, 0, 0.500886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47154,-99) , 
3, 10.4112, 1, 0, 0.500099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46573,-99) , 
5, 0.774586, 1, 0, 0.499217,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.00642572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499841,-99) , 
5, -0.906694, 1, 0, 0.500604,-99) , 
3, 9.42725, 0, 0, 0.501704,-99) , 
NN(
0, 
0, 
-1, 0.310469, 0, -1, 0.478724,-99) , 
4, 0.999524, 0, 0, 0.500254,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.00536312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499711,-99) , 
3, 9.18112, 0, 0, 0.500635,-99) , 
2, -0.214864, 1, 0, 0.501436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478381,-99) , 
4, 0.999048, 0, 0, 0.500603,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0162253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496027,-99) , 
5, -0.723914, 0, 0, 0.52131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490763,-99) , 
6, 0.00145616, 0, 0, 0.501025,-99) , 
6, 0.010193, 0, 0, 0.503361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476053,-99) , 
6, 0.0237841, 1, 0, 0.502423,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0197826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.070904, 1, 1, 0.509978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467964,-99) , 
4, 0.999905, 0, 0, 0.502252,-99) , 
5, 0.1782, 0, 0, 0.504212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47532,-99) , 
5, 0.76731, 1, 0, 0.503414,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0121238);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496501,-99) , 
3, 1.41561, 1, 0, 0.527827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496989,-99) , 
2, 0.0815432, 0, 0, 0.498358,-99) , 
4, 0.999524, 1, 0, 0.500233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47955,-99) , 
3, 9.26255, 1, 0, 0.49938,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0153074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461189,-99) , 
4, 0.999955, 0, 0, 0.505222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498327,-99) , 
4, 0.999547, 1, 0, 0.499488,-99) , 
3, 4.48985, 0, 0, 0.500746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471828,-99) , 
4, 0.999048, 0, 0, 0.49972,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.00679553);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482311,-99) , 
3, 9.41001, 1, 0, 0.501988,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.00855402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.0063, 0, 1, 0.503058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485167,-99) , 
4, 0.999592, 0, 0, 0.502422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473848,-99) , 
4, 0.999048, 0, 0, 0.501413,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0094724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485704,-99) , 
2, -0.275498, 0, 0, 0.50293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48596,-99) , 
0, 0.505709, 1, 0, 0.502387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479735,-99) , 
2, 0.214243, 1, 0, 0.501458,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.00828143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497946,-99) , 
0, 0.490471, 1, 0, 0.498526,-99) , 
4, 0.999048, 1, 0, 0.499541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477595,-99) , 
3, 9.27626, 1, 0, 0.49864,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.00735723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999879, 1, 1, 0.502169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490436,-99) , 
4, 0.999683, 0, 0, 0.501582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464842,-99) , 
4, 0.999048, 0, 0, 0.500299,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0109878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493315,-99) , 
5, 0.404145, 0, 0, 0.521987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497448,-99) , 
5, -0.720095, 1, 0, 0.499132,-99) , 
4, 0.999524, 1, 0, 0.500573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482262,-99) , 
3, 9.06123, 1, 0, 0.499747,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0113164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490693, 0, 1, 0.52293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497631,-99) , 
3, 1.45443, 1, 0, 0.500213,-99) , 
4, 0.999524, 1, 0, 0.501628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46747,-99) , 
3, 9.41001, 1, 0, 0.500305,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0119082);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498638,-99) , 
5, -0.629224, 0, 0, 0.50951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497353,-99) , 
3, 9.42725, 0, 0, 0.498379,-99) , 
0, 0.500947, 0, 0, 0.501171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473004,-99) , 
4, 0.999048, 0, 0, 0.500169,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.01114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45054, 1, 1, 0.524233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494763,-99) , 
3, 1.02041, 0, 0, 0.501519,-99) , 
4, 0.999524, 1, 0, 0.502948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480595,-99) , 
3, 9.50853, 1, 0, 0.502088,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0154631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49934,-99) , 
2, 0.0107353, 0, 0, 0.50659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493565,-99) , 
0, 0.493329, 1, 0, 0.495388,-99) , 
3, 1.44656, 1, 0, 0.499223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472846,-99) , 
3, 9.50466, 1, 0, 0.498195,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0072624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.8002, 0, 1, 0.502807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487308,-99) , 
4, 0.999501, 0, 0, 0.502401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481054,-99) , 
4, 0.999048, 0, 0, 0.501642,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0109883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497967,-99) , 
3, 4.62186, 1, 0, 0.502739,-99) , 
5, -0.906596, 1, 0, 0.503428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48758,-99) , 
0, 0.490562, 1, 0, 0.499545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468174,-99) , 
5, 0.0214556, 1, 0, 0.489608,-99) , 
0, 0.492376, 0, 0, 0.502212,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0107326);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487776,-99) , 
2, -0.275345, 0, 0, 0.50349,-99) , 
NN(
0, 
0, 
-1, -0.000168597, 0, -1, 0.485236,-99) , 
0, 0.504757, 1, 0, 0.502478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480235,-99) , 
2, 0.21435, 1, 0, 0.501575,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0184714);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499097,-99) , 
6, 0.00679512, 0, 0, 0.505478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473245,-99) , 
6, 0.00566212, 1, 0, 0.488563,-99) , 
5, -0.626358, 0, 0, 0.501668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473685,-99) , 
6, 0.0237868, 1, 0, 0.500728,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0170892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.40117, 0, 1, 0.535707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497056,-99) , 
4, 0.999977, 1, 0, 0.501221,-99) , 
4, 0.999524, 1, 0, 0.503494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483221,-99) , 
5, -0.3448, 0, 0, 0.497354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463947,-99) , 
0, 0.493329, 0, 0, 0.493014,-99) , 
3, 4.80413, 1, 0, 0.501464,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0115508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493873,-99) , 
5, 0.392962, 0, 0, 0.5283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49744,-99) , 
5, -0.442564, 1, 0, 0.499875,-99) , 
4, 0.999524, 1, 0, 0.501679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4757,-99) , 
3, 9.0651, 1, 0, 0.500545,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0323387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499297,-99) , 
2, -0.0304562, 1, 0, 0.502554,-99) , 
2, 0.21439, 0, 0, 0.503981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466634,-99) , 
4, 0.999995, 0, 0, 0.499014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449756,-99) , 
4, 0.999905, 0, 0, 0.494827,-99) , 
5, -0.438411, 0, 0, 0.500552,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0103976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480562,-99) , 
3, 1.89803, 1, 0, 0.520363,-99) , 
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.502764,-99) , 
4, 0.999524, 1, 0, 0.503866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486796,-99) , 
3, 9.50853, 1, 0, 0.503211,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0114366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0717248, 0, 1, 0.504395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461126,-99) , 
2, 0.0726838, 1, 0, 0.495736,-99) , 
5, -0.625733, 0, 0, 0.502363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484595,-99) , 
0, 0.490789, 0, 0, 0.494117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47885,-99) , 
5, -0.443772, 0, 0, 0.488004,-99) , 
0, 0.492376, 0, 0, 0.5011,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.00639792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499013,-99) , 
0, 0.490472, 1, 0, 0.499526,-99) , 
3, 9.18631, 0, 0, 0.500652,-99) , 
NN(
0, 
0, 
-1, 0.310409, 0, -1, 0.486164,-99) , 
4, 0.999524, 0, 0, 0.499732,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.00567574);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.00639, 0, 1, 0.501863,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.482607,-99) , 
4, 0.999524, 0, 0, 0.500655,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.00838408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.46344, 0, 1, 0.502569,-99) , 
NN(
0, 
0, 
-1, 0.496187, 0, -1, 0.492572,-99) , 
5, 0.40397, 1, 0, 0.500937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478316,-99) , 
2, -0.214096, 0, 0, 0.499913,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.00614769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479736,-99) , 
3, 9.50466, 1, 0, 0.500788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47409,-99) , 
0, 0.505709, 1, 0, 0.499909,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0145317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496589,-99) , 
5, -0.840069, 1, 0, 0.497838,-99) , 
5, 0.679238, 0, 0, 0.498862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490459,-99) , 
2, -0.071264, 1, 0, 0.496089,-99) , 
NN(
0, 
0, 
-1, -0.752161, 1, -1, 0.474045,-99) , 
5, -0.628248, 0, 0, 0.490493,-99) , 
0, 0.500947, 1, 0, 0.496781,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.00994638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.94302, 0, 1, 0.503552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468537,-99) , 
5, -0.628542, 0, 0, 0.493252,-99) , 
2, -0.0714419, 0, 0, 0.501933,-99) , 
NN(
0, 
0, 
-1, 0.489791, 1, -1, 0.483476,-99) , 
0, 0.491424, 0, 0, 0.500825,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0105926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497581,-99) , 
5, 0.684165, 0, 0, 0.498832,-99) , 
3, 9.18769, 0, 0, 0.499998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470606,-99) , 
4, 0.999048, 0, 0, 0.498971,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.00864813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491944,-99) , 
5, -0.813404, 0, 0, 0.501189,-99) , 
4, 0.999048, 1, 0, 0.502183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480858,-99) , 
3, 9.50466, 1, 0, 0.501363,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460546,-99) , 
4, 0.999905, 0, 0, 0.499616,-99) , 
5, -0.067078, 0, 0, 0.503061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491417,-99) , 
3, 1.97603, 0, 0, 0.499846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470904,-99) , 
5, 0.401001, 1, 0, 0.494902,-99) , 
0, 0.495233, 0, 0, 0.501153,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.00716878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495942,-99) , 
5, 0.404052, 0, 0, 0.52048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499164,-99) , 
3, 0.574944, 1, 0, 0.500053,-99) , 
4, 0.999524, 1, 0, 0.501325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481525,-99) , 
3, 9.50466, 1, 0, 0.500575,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0131041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488437,-99) , 
6, 0.00113362, 0, 0, 0.501158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48508,-99) , 
6, 0.0238062, 1, 0, 0.500603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480942,-99) , 
0, 0.503759, 0, 0, 0.498682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472342,-99) , 
3, 4.62186, 1, 0, 0.491972,-99) , 
0, 0.502852, 1, 0, 0.499469,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0137648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492443,-99) , 
3, 1.39344, 1, 0, 0.519895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4965,-99) , 
2, 0.12776, 0, 0, 0.497978,-99) , 
4, 0.999524, 1, 0, 0.499352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472315,-99) , 
3, 9.11048, 1, 0, 0.4982,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0103494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499707,-99) , 
2, 0.212848, 0, 0, 0.501277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471598,-99) , 
3, 9.52716, 1, 0, 0.500054,-99) , 
NN(
0, 
0, 
-1, -0.0706476, 0, -1, 0.487593,-99) , 
5, -0.625738, 0, 0, 0.497107,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.00571075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499864,-99) , 
0, 0.503804, 0, 0, 0.501165,-99) , 
4, 0.999048, 1, 0, 0.502129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485161,-99) , 
3, 9.40614, 1, 0, 0.501466,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.00998991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.00492, 0, 1, 0.504039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483392,-99) , 
5, 0.205885, 0, 0, 0.492461,-99) , 
4, 0.999728, 0, 0, 0.503351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475782,-99) , 
4, 0.999048, 0, 0, 0.502372,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0108371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.071449, 0, 1, 0.502777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494281,-99) , 
5, -0.875239, 1, 0, 0.497428,-99) , 
5, -0.345041, 0, 0, 0.500439,-99) , 
NN(
0, 
0, 
-1, -0.256738, 0, -1, 0.483421,-99) , 
0, 0.504757, 1, 0, 0.499478,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0143038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.397211, 0, 1, 0.519789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496694,-99) , 
5, -0.25148, 1, 0, 0.501676,-99) , 
4, 0.999524, 1, 0, 0.502851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479422,-99) , 
2, -0.0717891, 0, 0, 0.495525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462377,-99) , 
5, 0.488604, 1, 0, 0.490831,-99) , 
3, 4.77337, 1, 0, 0.500495,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0119969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0773661, 0, 1, 0.504738,-99) , 
NN(
0, 
0, 
-1, 0.0737902, 1, -1, 0.49404,-99) , 
5, -0.532004, 0, 0, 0.501405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471218,-99) , 
3, 9.52058, 1, 0, 0.500283,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.00993944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.502458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478437,-99) , 
5, 0.581109, 0, 0, 0.487445,-99) , 
4, 0.999864, 0, 0, 0.500758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482008,-99) , 
4, 0.999048, 0, 0, 0.500083,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0259923);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493273,-99) , 
5, 0.433221, 1, 0, 0.517859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490651,-99) , 
2, -0.00345343, 1, 0, 0.497232,-99) , 
2, 0.0713547, 0, 0, 0.500458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486284,-99) , 
6, 0.012455, 0, 0, 0.491463,-99) , 
6, 0.0237836, 0, 0, 0.494649,-99) , 
5, -0.251703, 0, 0, 0.49757,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.00836068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487403,-99) , 
3, 5.3063, 1, 0, 0.498876,-99) , 
3, 9.18896, 0, 0, 0.50017,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.481978,-99) , 
4, 0.999524, 0, 0, 0.499021,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0253504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493873,-99) , 
6, 0.00340008, 0, 0, 0.505537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489575,-99) , 
6, 0.0124698, 0, 0, 0.494417,-99) , 
5, -0.346195, 0, 0, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481597,-99) , 
6, 0.0238062, 1, 0, 0.500138,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.014012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495013,-99) , 
6, 0.00906019, 0, 0, 0.497658,-99) , 
6, 0.0237836, 0, 0, 0.498151,-99) , 
NN(
0, 
0, 
-1, 0.764986, 0, -1, 0.480401,-99) , 
5, 0.684759, 1, 0, 0.497165,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.00592047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.906388, 1, 1, 0.501565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51148,-99) , 
NN(
0, 
0, 
-1, -0.0078194, 1, -1, 0.48756,-99) , 
2, 0.0667327, 0, 0, 0.492886,-99) , 
0, 0.502852, 1, 0, 0.500429,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0188339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.401076, 0, 1, 0.520185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495594,-99) , 
5, -0.532312, 1, 0, 0.499566,-99) , 
4, 0.999524, 1, 0, 0.500912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47559,-99) , 
2, -0.0785854, 0, 0, 0.497884,-99) , 
NN(
0, 
0, 
-1, -0.165282, 0, -1, 0.47365,-99) , 
2, 0.071021, 1, 0, 0.490645,-99) , 
3, 4.77162, 1, 0, 0.498891,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0080928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489112,-99) , 
2, -0.111945, 0, 0, 0.507758,-99) , 
NN(
0, 
0, 
-1, 0.675273, 0, 1, 0.501522,-99) , 
0, 0.495233, 1, 0, 0.502981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488395,-99) , 
2, 0.214446, 1, 0, 0.502386,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0116654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0109169, 0, 1, 0.506828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496026,-99) , 
2, -0.214584, 1, 0, 0.497107,-99) , 
3, 1.4466, 1, 0, 0.500435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481761,-99) , 
3, 9.50466, 1, 0, 0.499728,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0076318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.764364, 1, 1, 0.51482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494278,-99) , 
5, -0.598994, 0, 0, 0.499204,-99) , 
5, 0.684165, 0, 0, 0.500045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47621,-99) , 
3, 9.50466, 1, 0, 0.499156,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0208137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491789,-99) , 
5, -0.627418, 0, 0, 0.503853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478106,-99) , 
5, -0.535248, 1, 0, 0.487283,-99) , 
6, 0.00113362, 0, 0, 0.501168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478641,-99) , 
6, 0.0238062, 1, 0, 0.500401,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.00986681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497872,-99) , 
3, 8.09542, 0, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484891,-99) , 
4, 0.999525, 0, 0, 0.498953,-99) , 
NN(
0, 
0, 
-1, 0.714845, 1, -1, 0.486339,-99) , 
5, 0.590126, 1, 0, 0.49782,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.00437249);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485465,-99) , 
3, 9.40614, 1, 0, 0.501046,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.00801065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498783,-99) , 
2, 0.133173, 0, 0, 0.499645,-99) , 
3, 9.4289, 0, 0, 0.501038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465102,-99) , 
5, 0.395634, 0, 0, 0.485718,-99) , 
4, 0.999524, 0, 0, 0.500071,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.00978418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80293, 0, 1, 0.503056,-99) , 
NN(
0, 
0, 
-1, 0.396063, 0, -1, 0.483413,-99) , 
4, 0.999773, 0, 0, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471455,-99) , 
4, 0.999048, 0, 0, 0.500582,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0107568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.304193, 0, 1, 0.522832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497717,-99) , 
4, 0.999909, 1, 0, 0.499435,-99) , 
4, 0.999524, 1, 0, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475045,-99) , 
3, 9.52694, 1, 0, 0.499964,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0104022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49793,-99) , 
5, -0.255973, 1, 0, 0.501433,-99) , 
3, 9.42864, 0, 0, 0.502414,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.481708,-99) , 
4, 0.999524, 0, 0, 0.501114,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.00678045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42776, 0, 1, 0.502497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471768,-99) , 
4, 0.999048, 0, 0, 0.50143,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.00849389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482422,-99) , 
2, -0.0711507, 0, 0, 0.496451,-99) , 
3, 4.80413, 1, 0, 0.501667,-99) , 
NN(
0, 
0, 
-1, -0.165622, 0, -1, 0.490933,-99) , 
0, 0.503805, 1, 0, 0.50071,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.010349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497678,-99) , 
0, 0.502852, 0, 0, 0.498645,-99) , 
3, 9.00639, 0, 0, 0.499763,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.471764,-99) , 
4, 0.999524, 0, 0, 0.498016,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.00983504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0708863, 0, 1, 0.511681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482531,-99) , 
4, 0.999886, 0, 0, 0.498398,-99) , 
5, 0.310368, 0, 0, 0.501163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4774,-99) , 
3, 9.18505, 1, 0, 0.500159,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.00946838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497799,-99) , 
2, 0.0536573, 0, 0, 0.499453,-99) , 
3, 9.18631, 0, 0, 0.500566,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.485928,-99) , 
4, 0.999524, 0, 0, 0.499643,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0137443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499956,-99) , 
4, 0.999773, 1, 0, 0.501356,-99) , 
4, 0.999048, 1, 0, 0.503065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479874,-99) , 
2, -0.0782445, 0, 0, 0.499576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441681,-99) , 
5, -0.0721902, 0, 0, 0.471787,-99) , 
2, 0.0713971, 1, 0, 0.491339,-99) , 
3, 4.80413, 1, 0, 0.500785,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.007349);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12253, 0, 1, 0.502929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476171,-99) , 
4, 0.999048, 0, 0, 0.501974,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0127106);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497264,-99) , 
3, 4.34598, 0, 0, 0.500832,-99) , 
NN(
0, 
0, 
-1, 0.495234, 0, -1, 0.487656,-99) , 
4, 0.999819, 0, 0, 0.49967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47469,-99) , 
4, 0.999048, 0, 0, 0.498785,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0094723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.503774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486552,-99) , 
4, 0.999637, 0, 0, 0.503043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48031,-99) , 
4, 0.999048, 0, 0, 0.502235,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0112935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493445,-99) , 
4, 0.999864, 0, 0, 0.505486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495497,-99) , 
5, -0.0643515, 0, 0, 0.498363,-99) , 
0, 0.495234, 1, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468761,-99) , 
4, 0.999048, 0, 0, 0.498938,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0101832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55293, 1, 1, 0.515997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488047,-99) , 
3, 4.53319, 1, 0, 0.49829,-99) , 
5, 0.591161, 0, 0, 0.49987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463283,-99) , 
3, 9.40614, 1, 0, 0.498462,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0335946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490234,-99) , 
4, 0.999999, 0, 0, 0.501054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477868,-99) , 
5, 0.122782, 0, 0, 0.491389,-99) , 
4, 0.999977, 0, 0, 0.497733,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.483272,-99) , 
4, 0.999524, 0, 0, 0.496821,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.00809183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499662,-99) , 
0, 0.494281, 1, 0, 0.501067,-99) , 
3, 9.00492, 0, 0, 0.502241,-99) , 
NN(
0, 
0, 
-1, 0.494461, 0, -1, 0.476573,-99) , 
4, 0.999524, 0, 0, 0.500664,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.010533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213205, 1, 1, 0.504059,-99) , 
NN(
0, 
0, 
-1, 7.77996, 1, -1, 0.486753,-99) , 
3, 6.65912, 1, 0, 0.50296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48024,-99) , 
3, 9.2746, 1, 0, 0.502023,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0121255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494906,-99) , 
3, 1.9132, 1, 0, 0.52352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493087,-99) , 
5, -0.160375, 1, 0, 0.498009,-99) , 
4, 0.999524, 1, 0, 0.499602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475311,-99) , 
3, 9.52224, 1, 0, 0.498693,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.00887773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499046,-99) , 
0, 0.5019, 0, 0, 0.501025,-99) , 
3, 9.4509, 0, 0, 0.501661,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.489144,-99) , 
5, 0.403966, 1, 0, 0.499566,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.00977428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499615,-99) , 
3, 1.41669, 1, 0, 0.521027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490553,-99) , 
4, 0.999932, 0, 0, 0.500001,-99) , 
4, 0.999524, 1, 0, 0.501312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481538,-99) , 
3, 9.18277, 1, 0, 0.500484,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0376189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49523,-99) , 
2, -0.00384741, 1, 0, 0.502954,-99) , 
2, 0.0709619, 0, 0, 0.505152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484862,-99) , 
4, 0.999995, 0, 0, 0.502086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431668,-99) , 
3, 1.68663, 1, 0, 0.481878,-99) , 
4, 0.999905, 0, 0, 0.499775,-99) , 
5, 0.212787, 0, 0, 0.501159,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.00558118);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487268,-99) , 
3, 9.40614, 1, 0, 0.501798,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0145625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496871,-99) , 
5, -0.438769, 1, 0, 0.500729,-99) , 
4, 0.999048, 1, 0, 0.501883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487444,-99) , 
2, -0.0781971, 0, 0, 0.500309,-99) , 
NN(
0, 
0, 
-1, -0.255627, 0, -1, 0.479464,-99) , 
2, 0.071449, 1, 0, 0.494147,-99) , 
3, 4.70462, 1, 0, 0.500318,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0100052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475592,-99) , 
2, 0.0714475, 1, 0, 0.494286,-99) , 
3, 4.62361, 1, 0, 0.501362,-99) , 
NN(
0, 
0, 
-1, 0.490154, 1, -1, 0.483243,-99) , 
0, 0.491424, 0, 0, 0.500287,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.00961215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.512569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497572,-99) , 
6, 0.0237868, 0, 0, 0.498264,-99) , 
5, 0.497564, 0, 0, 0.500099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478715,-99) , 
3, 9.50853, 1, 0, 0.499297,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.00682191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520113,-99) , 
NN(
0, 
0, 
-1, 0.999841, 0, -1, 0.49827,-99) , 
2, 0.213418, 0, 0, 0.498969,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.480133,-99) , 
4, 0.999524, 0, 0, 0.497795,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0176427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4995,-99) , 
3, 2.37016, 1, 0, 0.506662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49568,-99) , 
6, 0.0237843, 0, 0, 0.499186,-99) , 
5, -0.358183, 0, 0, 0.502957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485739,-99) , 
3, 1.32664, 1, 0, 0.497747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471099,-99) , 
3, 4.9042, 1, 0, 0.492365,-99) , 
5, 0.497564, 1, 0, 0.501589,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0113061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497589,-99) , 
2, 0.0304836, 0, 0, 0.500908,-99) , 
2, -0.21436, 1, 0, 0.501743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482787,-99) , 
4, 0.999048, 0, 0, 0.50107,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0160851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493437,-99) , 
4, 0.999977, 0, 0, 0.510914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49416,-99) , 
2, 0.00304424, 0, 0, 0.499767,-99) , 
2, -0.0716001, 1, 0, 0.501437,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.482754,-99) , 
4, 0.999524, 0, 0, 0.500269,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0148192);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0716194, 0, 1, 0.507598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55472,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.495808,-99) , 
6, 0.0237843, 0, 0, 0.499273,-99) , 
5, -0.346198, 0, 0, 0.50398,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.00678649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499517,-99) , 
3, 0.571398, 1, 0, 0.500764,-99) , 
3, 9.42872, 0, 0, 0.501702,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.483977,-99) , 
4, 0.999524, 0, 0, 0.500601,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0136311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43672, 1, 1, 0.527438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494861,-99) , 
5, 0.21598, 1, 0, 0.50275,-99) , 
4, 0.999524, 1, 0, 0.504295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484383,-99) , 
3, 9.41001, 1, 0, 0.50351,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.00515414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40231, 1, 1, 0.522032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499941,-99) , 
0, 0.490471, 1, 0, 0.500565,-99) , 
4, 0.999524, 1, 0, 0.5019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484369,-99) , 
3, 9.16907, 1, 0, 0.501167,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0116489);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.255566, 1, 1, 0.51649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494478,-99) , 
3, 4.66137, 1, 0, 0.50705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496525,-99) , 
2, 0.00355362, 0, 0, 0.50053,-99) , 
2, -0.071264, 1, 0, 0.501582,-99) , 
0, 0.491424, 1, 0, 0.502509,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.00871028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485128,-99) , 
3, 7.63726, 1, 0, 0.501847,-99) , 
4, 0.999048, 1, 0, 0.502845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482717,-99) , 
3, 9.40614, 1, 0, 0.502067,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0119408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.029585, 0, 1, 0.50393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482837,-99) , 
6, 0.0237188, 1, 0, 0.503203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487922,-99) , 
3, 2.25316, 0, 0, 0.496951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480874,-99) , 
3, 4.59917, 1, 0, 0.49283,-99) , 
0, 0.5019, 1, 0, 0.501319,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0122254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496735,-99) , 
2, -0.0598583, 1, 0, 0.498431,-99) , 
3, 9.42725, 0, 0, 0.499936,-99) , 
NN(
0, 
0, 
-1, 0.497635, 0, -1, 0.48021,-99) , 
4, 0.999524, 0, 0, 0.498707,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0105814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493241,-99) , 
4, 0.999955, 0, 0, 0.501191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484946,-99) , 
4, 0.999048, 0, 0, 0.500727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477567,-99) , 
2, 0.214283, 1, 0, 0.499805,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0144283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472095,-99) , 
5, 0.67924, 1, 0, 0.5039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48514,-99) , 
5, 0.49027, 0, 0, 0.493885,-99) , 
4, 0.999864, 0, 0, 0.502759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478338,-99) , 
4, 0.999048, 0, 0, 0.501905,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.00942317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.750999, 0, 1, 0.514286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494297,-99) , 
3, 2.69675, 1, 0, 0.498493,-99) , 
5, 0.5906, 0, 0, 0.49991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476969,-99) , 
3, 9.16907, 1, 0, 0.498949,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0128374);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499042,-99) , 
6, 0.00679423, 0, 0, 0.504408,-99) , 
NN(
0, 
0, 
-1, 0.071006, 1, -1, 0.494194,-99) , 
5, -0.439594, 0, 0, 0.500699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479769,-99) , 
6, 0.0237868, 1, 0, 0.499973,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0110216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494982,-99) , 
5, -0.0643462, 0, 0, 0.498591,-99) , 
1, 0.0124698, 0, 0, 0.499343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481177,-99) , 
6, 0.0238062, 1, 0, 0.498718,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0113875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0711398, 0, 1, 0.502738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483328,-99) , 
6, 0.00453443, 1, 0, 0.494803,-99) , 
5, -0.626828, 0, 0, 0.500951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482954,-99) , 
6, 0.0238062, 1, 0, 0.500333,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0121775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497874,-99) , 
5, -0.251471, 0, 0, 0.502761,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.490958,-99) , 
6, 0.00113363, 0, 0, 0.500829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480092,-99) , 
6, 0.0238062, 1, 0, 0.500122,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0123276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496829,-99) , 
5, -0.254861, 1, 0, 0.501528,-99) , 
4, 0.999048, 1, 0, 0.502726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481764,-99) , 
3, 9.50853, 1, 0, 0.501949,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.00528311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499744,-99) , 
2, 0.193406, 0, 0, 0.500719,-99) , 
2, -0.214584, 1, 0, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482836,-99) , 
3, 9.05601, 1, 0, 0.500686,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0054809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499077,-99) , 
2, -0.216041, 1, 0, 0.499638,-99) , 
3, 9.12253, 0, 0, 0.500613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485917,-99) , 
4, 0.999048, 0, 0, 0.500088,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.024716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.441975, 1, 1, 0.507636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482561,-99) , 
2, 0.0110418, 0, 0, 0.497892,-99) , 
2, -0.00320482, 1, 0, 0.503203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487718,-99) , 
3, 2.99511, 1, 0, 0.504084,-99) , 
NN(
0, 
0, 
-1, -0.255685, 0, -1, 0.469111,-99) , 
3, 4.73802, 1, 0, 0.490441,-99) , 
2, 0.0715923, 1, 0, 0.501304,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.00655839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502322,-99) , 
NN(
0, 
0, 
-1, 0.202162, 1, -1, 0.49392,-99) , 
0, 0.492784, 0, 0, 0.501436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48035,-99) , 
0, 0.505709, 1, 0, 0.500738,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.00729903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4991,-99) , 
2, -0.193665, 1, 0, 0.500333,-99) , 
2, 0.214202, 0, 0, 0.501449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483796,-99) , 
3, 9.11848, 1, 0, 0.500697,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0103178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495347,-99) , 
5, -0.157613, 0, 0, 0.499317,-99) , 
1, 0.010202, 0, 0, 0.500125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483739,-99) , 
6, 0.0238062, 1, 0, 0.499554,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0121831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238062, 0, 1, 0.503046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486842,-99) , 
4, 0.999955, 1, 0, 0.49508,-99) , 
5, 0.122777, 1, 0, 0.500815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465957,-99) , 
4, 0.999048, 0, 0, 0.499607,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0103609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237868, 0, 1, 0.50379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495541,-99) , 
4, 0.999048, 1, 0, 0.497179,-99) , 
5, -0.345038, 1, 0, 0.500108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486718,-99) , 
2, 0.2144, 1, 0, 0.499562,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.00777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498894,-99) , 
5, 0.492661, 0, 0, 0.50022,-99) , 
NN(
0, 
0, 
-1, -0.0696249, 1, -1, 0.487978,-99) , 
0, 0.492376, 0, 0, 0.499183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47665,-99) , 
2, -0.214186, 0, 0, 0.498185,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.00685605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491338,-99) , 
4, 0.999932, 0, 0, 0.498604,-99) , 
3, 9.42872, 0, 0, 0.500052,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.48763,-99) , 
4, 0.999524, 0, 0, 0.499266,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0123715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496907,-99) , 
0, 0.493328, 1, 0, 0.498092,-99) , 
3, 8.6732, 0, 0, 0.498802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485108,-99) , 
3, 1.30737, 1, 0, 0.495389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459444,-99) , 
3, 4.79109, 1, 0, 0.488008,-99) , 
5, 0.489134, 1, 0, 0.497384,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.00947372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488315,-99) , 
4, 0.999592, 0, 0, 0.503377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487759,-99) , 
4, 0.999048, 0, 0, 0.502909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481956,-99) , 
5, 0.774586, 1, 0, 0.502373,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0108266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493913,-99) , 
3, 4.63847, 1, 0, 0.50127,-99) , 
0, 0.497591, 0, 0, 0.502626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483129,-99) , 
2, -0.0768953, 0, 0, 0.499571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491462,-99) , 
2, 0.0716606, 0, 0, 0.493707,-99) , 
0, 0.500358, 1, 0, 0.496174,-99) , 
0, 0.49809, 1, 0, 0.499336,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.00480386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474732,-99) , 
4, 0.999592, 0, 0, 0.499503,-99) , 
4, 0.999048, 1, 0, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0.490154, 1, -1, 0.48631,-99) , 
0, 0.491424, 0, 0, 0.49927,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.00728131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48607,-99) , 
3, 9.52697, 1, 0, 0.501929,-99) , 
NN(
0, 
0, 
-1, -0.866333, 1, -1, 0.490458,-99) , 
5, -0.812862, 0, 0, 0.500832,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.011906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497908,-99) , 
2, -0.0718373, 1, 0, 0.499552,-99) , 
5, -0.813296, 1, 0, 0.501007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4883,-99) , 
5, 0.392134, 1, 0, 0.501886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490779,-99) , 
5, 0.580459, 0, 0, 0.492393,-99) , 
0, 0.501719, 0, 0, 0.496059,-99) , 
0, 0.498091, 1, 0, 0.498483,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.00767993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498238,-99) , 
2, -0.209818, 1, 0, 0.499074,-99) , 
3, 9.18869, 0, 0, 0.49997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479344,-99) , 
4, 0.999048, 0, 0, 0.499244,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.00813689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498402,-99) , 
2, -0.0674199, 1, 0, 0.49957,-99) , 
3, 9.42206, 0, 0, 0.500582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471107,-99) , 
4, 0.999048, 0, 0, 0.499559,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0164318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49712,-99) , 
3, 4.85504, 1, 0, 0.511169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479615,-99) , 
5, -0.719766, 0, 0, 0.506075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494025,-99) , 
2, -0.0144349, 1, 0, 0.497478,-99) , 
2, 0.227841, 0, 0, 0.498147,-99) , 
2, -0.0714419, 1, 0, 0.499467,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.00757744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499561,-99) , 
5, -0.759313, 1, 0, 0.501334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485172,-99) , 
5, 0.684759, 1, 0, 0.50048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490329,-99) , 
0, 0.497138, 0, 0, 0.496542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476247,-99) , 
5, -0.626382, 0, 0, 0.49166,-99) , 
2, -0.0717891, 0, 0, 0.499042,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0200746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
6, 0.00452363, 0, 0, 0.505258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481134,-99) , 
6, 0.00452489, 1, 0, 0.494559,-99) , 
5, -0.532169, 0, 0, 0.502073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481173,-99) , 
6, 0.0237559, 1, 0, 0.501367,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0101084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493574,-99) , 
2, -0.0731784, 0, 0, 0.505965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49112,-99) , 
4, 0.999524, 0, 0, 0.500845,-99) , 
0, 0.498181, 1, 0, 0.50314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485809,-99) , 
5, 0.0899387, 1, 0, 0.493688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485345,-99) , 
5, -0.441649, 0, 0, 0.49023,-99) , 
0, 0.492376, 0, 0, 0.502008,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.00543285);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.18682, 0, 1, 0.502082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47974,-99) , 
4, 0.999048, 0, 0, 0.501302,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0062976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498907, 1, 1, 0.51747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499536,-99) , 
3, 9.13234, 0, 0, 0.500814,-99) , 
4, 0.999524, 1, 0, 0.501795,-99) , 
NN(
0, 
0, 
-1, -0.255696, 1, -1, 0.491532,-99) , 
0, 0.492376, 0, 0, 0.500885,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0101162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.44867, 0, 1, 0.50389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494196,-99) , 
4, 0.999524, 1, 0, 0.499218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478934,-99) , 
0, 0.494282, 0, 0, 0.495645,-99) , 
5, 0.400993, 1, 0, 0.502498,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.00771206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49794,-99) , 
5, -0.625729, 1, 0, 0.499638,-99) , 
0, 0.505709, 0, 0, 0.500236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479322,-99) , 
4, 0.999048, 0, 0, 0.499502,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.00642527);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499556,-99) , 
3, 1.44575, 1, 0, 0.522842,-99) , 
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.499204,-99) , 
4, 0.999524, 1, 0, 0.500682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47008,-99) , 
3, 9.50466, 1, 0, 0.499568,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.021391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495873,-99) , 
4, 0.999998, 0, 0, 0.504527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460403,-99) , 
3, 4.48985, 1, 0, 0.493327,-99) , 
4, 0.999955, 0, 0, 0.501782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468135,-99) , 
4, 0.999048, 0, 0, 0.500628,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.01521);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494649,-99) , 
4, 0.999941, 0, 0, 0.504644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474792,-99) , 
4, 0.999751, 0, 0, 0.503545,-99) , 
NN(
0, 
0, 
-1, 0.999071, 0, -1, 0.482793,-99) , 
4, 0.999524, 0, 0, 0.502269,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0132271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.41767, 1, 1, 0.523147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46894,-99) , 
3, 3.90368, 1, 0, 0.487403,-99) , 
5, -0.443509, 0, 0, 0.510005,-99) , 
NN(
NN(
0, 
0, 
-1, -0.812912, 1, 1, 0.503723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488522,-99) , 
5, -0.442383, 0, 0, 0.496669,-99) , 
0, 0.5019, 1, 0, 0.502489,-99) , 
2, 0.0715923, 0, 0, 0.503637,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00813406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49858,-99) , 
2, 0.0504839, 0, 0, 0.499951,-99) , 
2, 0.21367, 0, 0, 0.501086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480333,-99) , 
3, 9.25868, 1, 0, 0.500235,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.011733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0716194, 0, 1, 0.50889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481815,-99) , 
4, 0.999886, 0, 0, 0.500937,-99) , 
5, 0.309909, 0, 0, 0.502627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486472,-99) , 
3, 1.68125, 0, 0, 0.496239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476674,-99) , 
5, 0.299935, 1, 0, 0.492258,-99) , 
0, 0.493329, 0, 0, 0.501328,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0107455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.283238, 0, 1, 0.516961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496799,-99) , 
0, 0.504757, 0, 0, 0.497831,-99) , 
3, 0.544344, 1, 0, 0.49929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483661,-99) , 
3, 9.00745, 1, 0, 0.498584,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.00838818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485856,-99) , 
2, -0.21427, 0, 0, 0.502173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484715,-99) , 
0, 0.490199, 0, 0, 0.501557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482679,-99) , 
0, 0.505709, 1, 0, 0.500925,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0250511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496686,-99) , 
3, 4.80957, 1, 0, 0.515856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497712,-99) , 
2, -0.153388, 1, 0, 0.499333,-99) , 
2, 0.071021, 0, 0, 0.501903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479807,-99) , 
4, 0.999995, 0, 0, 0.496122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463251,-99) , 
4, 0.999905, 0, 0, 0.493132,-99) , 
5, -0.25148, 0, 0, 0.497564,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.019127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477701,-99) , 
4, 0.999728, 0, 0, 0.50501,-99) , 
4, 0.999048, 1, 0, 0.507595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493867,-99) , 
6, 0.0113252, 0, 0, 0.497022,-99) , 
6, 0.0237836, 0, 0, 0.498049,-99) , 
5, 0.21598, 0, 0, 0.500488,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0148977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496504,-99) , 
5, -0.162942, 1, 0, 0.501974,-99) , 
4, 0.999048, 1, 0, 0.503326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482378,-99) , 
2, 0.153187, 1, 0, 0.501775,-99) , 
NN(
0, 
0, 
-1, 0.0211316, 0, -1, 0.483109,-99) , 
2, -0.071264, 0, 0, 0.495653,-99) , 
3, 4.82088, 1, 0, 0.501849,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0176901);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499216,-99) , 
6, 0.00340046, 0, 0, 0.506561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491555,-99) , 
6, 0.0124697, 0, 0, 0.494211,-99) , 
5, -0.251477, 0, 0, 0.500542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475797,-99) , 
6, 0.0238062, 1, 0, 0.499699,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.00843484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482138,-99) , 
3, 9.28096, 1, 0, 0.502783,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.00728197);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48124,-99) , 
3, 9.52578, 1, 0, 0.502244,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0156263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00680148, 0, 1, 0.505061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48307,-99) , 
6, 0.00340098, 1, 0, 0.490876,-99) , 
5, -0.533533, 0, 0, 0.50085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482783,-99) , 
6, 0.0238062, 1, 0, 0.500236,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0170231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498494,-99) , 
4, 0.999524, 1, 0, 0.499877,-99) , 
2, 0.21435, 0, 0, 0.500974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488019,-99) , 
6, 0.0124595, 0, 0, 0.490551,-99) , 
6, 0.0237869, 0, 0, 0.494937,-99) , 
5, -0.344813, 0, 0, 0.498328,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0148038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496203,-99) , 
0, 0.492603, 0, 0, 0.513172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483753,-99) , 
4, 0.999905, 0, 0, 0.501281,-99) , 
5, 0.116456, 0, 0, 0.505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496052,-99) , 
2, -0.0486558, 1, 0, 0.499536,-99) , 
NN(
0, 
0, 
-1, -0.350321, 0, -1, 0.490991,-99) , 
3, 4.58241, 1, 0, 0.497672,-99) , 
0, 0.497138, 1, 0, 0.500587,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.00992571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489791, 1, 1, 0.518088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478454,-99) , 
4, 0.999592, 0, 0, 0.501761,-99) , 
0, 0.491424, 1, 0, 0.502716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469308,-99) , 
4, 0.999048, 0, 0, 0.501572,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.00589561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499519,-99) , 
3, 0.568006, 1, 0, 0.500554,-99) , 
4, 0.999048, 1, 0, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479651,-99) , 
3, 9.50466, 1, 0, 0.500619,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.00823182);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483492,-99) , 
3, 9.52224, 1, 0, 0.502901,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.00474541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499369,-99) , 
2, 0.13262, 0, 0, 0.499971,-99) , 
2, 0.214202, 0, 0, 0.500574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480698,-99) , 
3, 9.50853, 1, 0, 0.499852,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0115105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494678,-99) , 
0, 0.494599, 0, 0, 0.514951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499851,-99) , 
0, 0.500948, 1, 0, 0.511727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496374,-99) , 
0, 0.490472, 1, 0, 0.497032,-99) , 
3, 9.06415, 0, 0, 0.497842,-99) , 
5, 0.497035, 0, 0, 0.499673,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0131146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213816, 1, 1, 0.507565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496922,-99) , 
6, 0.0136035, 0, 0, 0.499109,-99) , 
5, -0.15761, 0, 0, 0.502975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478726,-99) , 
6, 0.0238062, 1, 0, 0.502148,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.013002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00680093, 0, 1, 0.505101,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.493137,-99) , 
5, -0.345038, 0, 0, 0.500012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475136,-99) , 
6, 0.0238062, 1, 0, 0.499162,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0127656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0713547, 0, 1, 0.503856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492374,-99) , 
6, 0.0135901, 0, 0, 0.495594,-99) , 
5, -0.349353, 0, 0, 0.500356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488636,-99) , 
6, 0.0237868, 1, 0, 0.499948,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.00837657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80146, 0, 1, 0.503561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491721,-99) , 
4, 0.999683, 0, 0, 0.502967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485115,-99) , 
4, 0.999048, 0, 0, 0.502339,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0144541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48372,-99) , 
2, 0.0769157, 1, 0, 0.51075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499539,-99) , 
2, 0.0771416, 0, 0, 0.501896,-99) , 
5, -0.625845, 1, 0, 0.504005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483,-99) , 
2, -0.140353, 1, 0, 0.499574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473221,-99) , 
2, -0.140363, 0, 0, 0.488438,-99) , 
5, -0.0659938, 0, 0, 0.492882,-99) , 
2, -0.0723907, 0, 0, 0.502214,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0110901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42883, 0, 1, 0.50403,-99) , 
NN(
0, 
0, 
-1, 0.209933, 0, -1, 0.485078,-99) , 
4, 0.999819, 0, 0, 0.50286,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.481721,-99) , 
4, 0.999524, 0, 0, 0.501548,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0195792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491869,-99) , 
4, 0.999995, 0, 0, 0.507058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485048,-99) , 
4, 0.999905, 0, 0, 0.505171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493813,-99) , 
2, -0.0306552, 1, 0, 0.496893,-99) , 
2, 0.214167, 0, 0, 0.497795,-99) , 
5, -0.440247, 1, 0, 0.500571,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.00453819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513203,-99) , 
NN(
0, 
0, 
-1, 0.0238062, 1, -1, 0.498897,-99) , 
0, 0.492104, 1, 0, 0.499512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481494,-99) , 
0, 0.490471, 0, 0, 0.498822,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0139735);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495455,-99) , 
5, -0.532, 0, 0, 0.501877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486109,-99) , 
6, 0.000862883, 0, 0, 0.49347,-99) , 
6, 0.00113256, 0, 0, 0.500507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474086,-99) , 
6, 0.0237841, 1, 0, 0.499612,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0136261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490099,-99) , 
0, 0.495739, 0, 0, 0.503369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477306,-99) , 
0, 0.505845, 1, 0, 0.502361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492895,-99) , 
3, 1.79275, 0, 0, 0.504911,-99) , 
NN(
0, 
0, 
-1, 4.66954, 1, -1, 0.486653,-99) , 
5, -0.535708, 1, 0, 0.492553,-99) , 
0, 0.495233, 0, 0, 0.500065,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0100436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0572325, 0, 1, 0.505649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483528,-99) , 
5, -0.350697, 0, 0, 0.493602,-99) , 
3, 4.62186, 1, 0, 0.502799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4873,-99) , 
4, 0.999524, 0, 0, 0.499576,-99) , 
NN(
0, 
0, 
-1, 0.497805, 0, -1, 0.492547,-99) , 
0, 0.496458, 1, 0, 0.496055,-99) , 
0, 0.499995, 0, 0, 0.498294,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0133216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495994,-99) , 
5, -0.345038, 1, 0, 0.5007,-99) , 
3, 9.18631, 0, 0, 0.50162,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.479445,-99) , 
4, 0.999524, 0, 0, 0.500259,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.00797961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498696,-99) , 
3, 8.85705, 0, 0, 0.499801,-99) , 
2, -0.212804, 1, 0, 0.500685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461653,-99) , 
0, 0.49809, 1, 0, 0.48254,-99) , 
4, 0.999524, 0, 0, 0.499569,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.00732012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41251, 1, 1, 0.52434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498678,-99) , 
2, 0.173277, 0, 0, 0.499427,-99) , 
4, 0.999524, 1, 0, 0.500989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489687,-99) , 
3, 9.13447, 1, 0, 0.500501,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0173888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49363,-99) , 
6, 0.00339773, 1, 0, 0.501446,-99) , 
6, 0.0237869, 0, 0, 0.504722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497405,-99) , 
4, 0.999048, 1, 0, 0.499932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47437,-99) , 
3, 9.13206, 1, 0, 0.498668,-99) , 
5, -0.344806, 1, 0, 0.501331,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0117099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.43231, 0, 1, 0.504504,-99) , 
NN(
0, 
0, 
-1, -0.0753983, 0, -1, 0.483573,-99) , 
4, 0.999864, 0, 0, 0.50271,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.489178,-99) , 
4, 0.999524, 0, 0, 0.501869,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.00523737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499513,-99) , 
2, -0.214584, 1, 0, 0.500357,-99) , 
3, 9.18505, 0, 0, 0.501222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48373,-99) , 
4, 0.999048, 0, 0, 0.500611,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0185194);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496944,-99) , 
4, 0.999998, 0, 0, 0.504608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46071,-99) , 
3, 4.62186, 1, 0, 0.494625,-99) , 
4, 0.999955, 0, 0, 0.502169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480676,-99) , 
4, 0.999048, 0, 0, 0.50141,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.00699071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499514,-99) , 
3, 1.01636, 1, 0, 0.501343,-99) , 
4, 0.999048, 1, 0, 0.502267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483824,-99) , 
3, 9.52058, 1, 0, 0.501578,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.00426566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491152, 0, 1, 0.513653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498971,-99) , 
5, -0.532988, 0, 0, 0.5088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499993,-99) , 
6, 0.0238062, 0, 0, 0.500461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480298,-99) , 
4, 0.999048, 0, 0, 0.499848,-99) , 
0, 0.493328, 1, 0, 0.500989,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.00890529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498786,-99) , 
2, 0.0302105, 0, 0, 0.501142,-99) , 
2, -0.214584, 1, 0, 0.502365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487165,-99) , 
3, 9.42206, 1, 0, 0.501772,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.013056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497823,-99) , 
5, -0.347979, 0, 0, 0.507527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498501,-99) , 
0, 0.5019, 0, 0, 0.500614,-99) , 
3, 1.82258, 1, 0, 0.503651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47794,-99) , 
3, 9.11048, 1, 0, 0.502564,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0108533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498823,-99) , 
5, -0.157916, 1, 0, 0.503047,-99) , 
3, 9.4289, 0, 0, 0.503916,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.486118,-99) , 
4, 0.999524, 0, 0, 0.502814,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0093122);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.504008,-99) , 
NN(
0, 
0, 
-1, 0.404153, 0, -1, 0.485526,-99) , 
4, 0.999524, 0, 0, 0.502864,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.00913271);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214683, 1, 1, 0.503827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47833,-99) , 
3, 9.1652, 1, 0, 0.502771,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.00591697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496982, 1, 1, 0.502719,-99) , 
NN(
0, 
0, 
-1, 0.496166, 1, -1, 0.497644,-99) , 
0, 0.496594, 0, 0, 0.500868,-99) , 
NN(
0, 
0, 
-1, 0.505845, 1, -1, 0.490879,-99) , 
0, 0.504757, 1, 0, 0.500299,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.00556434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214584, 1, 1, 0.501497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476338,-99) , 
3, 7.63391, 1, 0, 0.500639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484088,-99) , 
3, 9.40614, 1, 0, 0.499998,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0120958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.397211, 1, 1, 0.523775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496813,-99) , 
2, -0.0159099, 1, 0, 0.499289,-99) , 
4, 0.999524, 1, 0, 0.500876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480572,-99) , 
2, 0.0716629, 1, 0, 0.495242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473636,-99) , 
5, 0.395564, 1, 0, 0.491345,-99) , 
3, 4.80413, 1, 0, 0.499044,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0220489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480303,-99) , 
5, 0.563868, 1, 0, 0.495645,-99) , 
0, 0.499995, 1, 0, 0.50409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490835,-99) , 
4, 0.999995, 0, 0, 0.499893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428682,-99) , 
3, 1.60004, 1, 0, 0.471217,-99) , 
4, 0.999905, 0, 0, 0.49696,-99) , 
5, 0.0292129, 0, 0, 0.499443,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0169121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496951,-99) , 
4, 0.999998, 0, 0, 0.503926,-99) , 
NN(
0, 
0, 
-1, 4.626, 1, -1, 0.493396,-99) , 
4, 0.999955, 0, 0, 0.501337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476424,-99) , 
4, 0.999048, 0, 0, 0.500465,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0111827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483504,-99) , 
0, 0.5019, 1, 0, 0.514049,-99) , 
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.501541,-99) , 
3, 0.96658, 1, 0, 0.504104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482181,-99) , 
3, 9.1652, 1, 0, 0.503191,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0113218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496225,-99) , 
4, 0.999954, 0, 0, 0.512868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497592,-99) , 
2, -0.00290452, 1, 0, 0.501142,-99) , 
2, 0.0718755, 0, 0, 0.502829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482731,-99) , 
4, 0.999048, 0, 0, 0.502131,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0115744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999525, 1, 1, 0.509612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497355,-99) , 
2, 0.215311, 0, 0, 0.49842,-99) , 
3, 1.38325, 1, 0, 0.50209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487042,-99) , 
3, 9.06123, 1, 0, 0.501434,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0061022);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.502677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486691,-99) , 
4, 0.999048, 0, 0, 0.502114,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.011092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.74842, 1, 1, 0.515796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493311,-99) , 
5, -0.625536, 0, 0, 0.51057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496354,-99) , 
4, 0.999977, 1, 0, 0.498082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477537,-99) , 
4, 0.999524, 0, 0, 0.497152,-99) , 
2, 0.0714036, 0, 0, 0.499224,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0112593);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.777731, 0, 1, 0.515504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499902,-99) , 
5, 0.0540419, 1, 0, 0.503096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494848,-99) , 
6, 0.0238062, 0, 0, 0.496696,-99) , 
5, -0.198015, 0, 0, 0.499524,-99) , 
5, 0.684164, 0, 0, 0.50044,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0123006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4981,-99) , 
4, 0.999977, 0, 0, 0.50409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489662,-99) , 
4, 0.999524, 0, 0, 0.503403,-99) , 
NN(
0, 
0, 
-1, 0.774598, 0, -1, 0.484001,-99) , 
5, 0.681189, 1, 0, 0.502328,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0132469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00680093, 0, 1, 0.503714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483557,-99) , 
6, 0.0034012, 1, 0, 0.493034,-99) , 
5, -0.625845, 0, 0, 0.501306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484185,-99) , 
6, 0.0238062, 1, 0, 0.500719,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00630236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498871,-99) , 
0, 0.491424, 1, 0, 0.499836,-99) , 
4, 0.999048, 1, 0, 0.500514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482333,-99) , 
3, 9.41001, 1, 0, 0.499812,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.00937599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498957,-99) , 
2, 0.0510845, 0, 0, 0.500698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485525,-99) , 
2, 0.214332, 1, 0, 0.500148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479823,-99) , 
3, 1.77383, 1, 0, 0.49433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478303,-99) , 
3, 4.9042, 1, 0, 0.49111,-99) , 
5, 0.497566, 1, 0, 0.498982,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.00706374);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483884,-99) , 
3, 9.11848, 1, 0, 0.502167,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0129971);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490927,-99) , 
2, -0.0781949, 0, 0, 0.502034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462345,-99) , 
5, -0.164866, 0, 0, 0.483011,-99) , 
2, 0.0714475, 1, 0, 0.496438,-99) , 
3, 4.77162, 1, 0, 0.503306,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.00914145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497211,-99) , 
3, 9.42206, 0, 0, 0.498058,-99) , 
2, -0.21436, 1, 0, 0.498759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477938,-99) , 
4, 0.999048, 0, 0, 0.498033,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0135279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487458,-99) , 
4, 0.999524, 0, 0, 0.504073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493433,-99) , 
2, 0.0714511, 0, 0, 0.497382,-99) , 
1, -0.00339896, 0, 0, 0.502293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485278,-99) , 
6, 0.0237868, 1, 0, 0.501713,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0079959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499076,-99) , 
3, 9.18795, 0, 0, 0.500613,-99) , 
NN(
0, 
0, 
-1, 4.626, 1, -1, 0.49223,-99) , 
4, 0.999909, 0, 0, 0.499326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473881,-99) , 
4, 0.999048, 0, 0, 0.498453,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.00856933);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491584,-99) , 
5, 0.204959, 1, 0, 0.506956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487069,-99) , 
0, 0.500831, 1, 0, 0.5007,-99) , 
0, 0.501491, 0, 0, 0.501543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481423,-99) , 
5, -0.259652, 0, 0, 0.493261,-99) , 
0, 0.503804, 1, 0, 0.500803,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0108087);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491897,-99) , 
0, 0.494281, 0, 0, 0.506024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479869,-99) , 
4, 0.999905, 0, 0, 0.49925,-99) , 
5, 0.122448, 0, 0, 0.50134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488783,-99) , 
6, 0.0237841, 1, 0, 0.500906,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.00667213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499025,-99) , 
5, -0.719293, 1, 0, 0.500615,-99) , 
2, 0.2141, 0, 0, 0.50133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484238,-99) , 
4, 0.999048, 0, 0, 0.500738,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.00648216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45054, 1, 1, 0.518496,-99) , 
NN(
0, 
0, 
-1, 6.38177, 1, -1, 0.498321,-99) , 
4, 0.999524, 1, 0, 0.499554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483083,-99) , 
3, 9.50853, 1, 0, 0.498934,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0101051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.761245, 0, 1, 0.523513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485815,-99) , 
3, 6.59641, 1, 0, 0.501545,-99) , 
5, 0.681187, 0, 0, 0.502766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482016,-99) , 
3, 9.18505, 1, 0, 0.501904,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.00972291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483742,-99) , 
5, -0.761089, 1, 0, 0.505903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497334,-99) , 
2, 0.0703258, 0, 0, 0.498368,-99) , 
5, -0.721272, 1, 0, 0.499637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483593,-99) , 
4, 0.999048, 0, 0, 0.499079,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.00996429);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497591, 0, 1, 0.5032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496888,-99) , 
2, -0.0721354, 1, 0, 0.499794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487023,-99) , 
5, 0.216001, 0, 0, 0.491388,-99) , 
0, 0.499904, 0, 0, 0.496941,-99) , 
0, 0.49809, 1, 0, 0.500007,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.00908656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.50274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483809,-99) , 
5, 0.583411, 0, 0, 0.489877,-99) , 
4, 0.999864, 0, 0, 0.501285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482573,-99) , 
4, 0.999048, 0, 0, 0.500636,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0130058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494023,-99) , 
3, 1.46989, 1, 0, 0.520217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496284,-99) , 
0, 0.505709, 0, 0, 0.497321,-99) , 
4, 0.999524, 1, 0, 0.49874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476735,-99) , 
3, 9.52578, 1, 0, 0.497926,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0079415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487112,-99) , 
3, 9.40614, 1, 0, 0.502147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472344,-99) , 
5, -0.866282, 1, 0, 0.493038,-99) , 
5, -0.812791, 0, 0, 0.501269,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.00961916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497312,-99) , 
0, 0.499995, 0, 0, 0.499719,-99) , 
3, 9.00851, 0, 0, 0.500699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473391,-99) , 
5, 0.49043, 0, 0, 0.488391,-99) , 
4, 0.999524, 0, 0, 0.499941,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.00565135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.071449, 0, 1, 0.50171,-99) , 
NN(
0, 
0, 
-1, 0.0726838, 1, -1, 0.497296,-99) , 
5, -0.438773, 0, 0, 0.499957,-99) , 
NN(
0, 
0, 
-1, 0.498087, 0, -1, 0.484667,-99) , 
5, 0.683663, 1, 0, 0.499123,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0110199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517731,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49782, 0, 1, 0.508505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495201,-99) , 
5, -0.772684, 1, 0, 0.496329,-99) , 
5, 0.591161, 0, 0, 0.497462,-99) , 
0, 0.490472, 1, 0, 0.498302,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.012404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0943449, 1, 1, 0.504794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463672,-99) , 
3, 4.62879, 1, 0, 0.495442,-99) , 
4, 0.999955, 0, 0, 0.502486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478259,-99) , 
4, 0.999048, 0, 0, 0.501648,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0138175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49864,-99) , 
1, -0.0079164, 1, 0, 0.500275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453402,-99) , 
6, 0.00452968, 1, 0, 0.482193,-99) , 
5, -0.812905, 0, 0, 0.498695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468176,-99) , 
6, 0.0237841, 1, 0, 0.497678,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.00631612);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499454,-99) , 
0, 0.495279, 1, 0, 0.501119,-99) , 
NN(
0, 
0, 
-1, -0.348731, 1, -1, 0.486032,-99) , 
0, 0.491424, 0, 0, 0.500285,-99) , 
2, -0.213927, 1, 0, 0.500887,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0111848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486475,-99) , 
0, 0.491188, 0, 0, 0.504913,-99) , 
0, 0.489882, 1, 0, 0.511443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494537,-99) , 
0, 0.502431, 1, 0, 0.501206,-99) , 
NN(
0, 
0, 
-1, 0.495486, 1, -1, 0.494631,-99) , 
0, 0.49673, 0, 0, 0.499274,-99) , 
0, 0.492376, 1, 0, 0.500376,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.00799924);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12773, 0, 1, 0.503481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474228,-99) , 
0, 0.497139, 0, 0, 0.488977,-99) , 
4, 0.999524, 0, 0, 0.502586,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.00740346);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.167385, 0, 1, 0.509599,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490184, 1, 1, 0.501019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493394,-99) , 
5, -0.625738, 1, 0, 0.49582,-99) , 
0, 0.498408, 1, 0, 0.498792,-99) , 
0, 0.503805, 0, 0, 0.499779,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0112718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46571, 1, 1, 0.524155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489598,-99) , 
4, 0.999955, 0, 0, 0.499145,-99) , 
4, 0.999524, 1, 0, 0.500696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479817,-99) , 
3, 9.52224, 1, 0, 0.49994,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0129825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.477278, 1, 1, 0.518898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49741,-99) , 
2, 0.152986, 0, 0, 0.500291,-99) , 
2, -0.0713628, 1, 0, 0.503452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494847,-99) , 
1, 0.0101822, 0, 0, 0.49599,-99) , 
6, 0.0237687, 0, 0, 0.497004,-99) , 
5, 0.122784, 0, 0, 0.498952,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00705403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499113,-99) , 
3, 9.18631, 0, 0, 0.499886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479133,-99) , 
4, 0.999592, 0, 0, 0.499164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460204,-99) , 
4, 0.999048, 0, 0, 0.497846,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0088222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495263,-99) , 
0, 0.494281, 0, 0, 0.502124,-99) , 
2, -0.214943, 1, 0, 0.50263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488155,-99) , 
4, 0.999048, 0, 0, 0.50212,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0114289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475085,-99) , 
3, 9.52742, 1, 0, 0.502081,-99) , 
NN(
0, 
0, 
-1, 0.00566134, 1, -1, 0.49145,-99) , 
5, -0.625601, 0, 0, 0.499677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47561,-99) , 
6, 0.0237836, 1, 0, 0.498869,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.00822374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18778, 0, 1, 0.502323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468772,-99) , 
2, -0.0708849, 0, 0, 0.492567,-99) , 
4, 0.999864, 0, 0, 0.501227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480834,-99) , 
4, 0.999048, 0, 0, 0.500527,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0121307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499729,-99) , 
5, -0.353681, 0, 0, 0.508033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485869,-99) , 
5, 0.397136, 1, 0, 0.500071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493747,-99) , 
4, 0.999524, 1, 0, 0.49434,-99) , 
0, 0.494961, 1, 0, 0.495668,-99) , 
0, 0.504757, 0, 0, 0.496398,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.00813899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498467,-99) , 
2, 0.217376, 0, 0, 0.499157,-99) , 
4, 0.999048, 1, 0, 0.50071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48286,-99) , 
3, 9.50466, 1, 0, 0.500061,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.00683517);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490585,-99) , 
3, 2.2951, 0, 0, 0.503055,-99) , 
NN(
0, 
0, 
-1, 0.43548, 1, -1, 0.485708,-99) , 
5, -0.255593, 1, 0, 0.494685,-99) , 
0, 0.494281, 0, 0, 0.500188,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0100209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497467,-99) , 
5, -0.800926, 0, 0, 0.510418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491822,-99) , 
5, 0.384593, 1, 0, 0.499134,-99) , 
5, -0.535512, 1, 0, 0.502852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509293,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.495605,-99) , 
4, 0.999524, 1, 0, 0.496446,-99) , 
0, 0.500948, 0, 0, 0.498064,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0133872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496008,-99) , 
3, 2.50706, 0, 0, 0.501311,-99) , 
6, 0.0237868, 0, 0, 0.503589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496545,-99) , 
2, 0.071449, 0, 0, 0.497987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478497,-99) , 
0, 0.503805, 1, 0, 0.496479,-99) , 
5, -0.157616, 1, 0, 0.500423,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.00907733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499387,-99) , 
4, 0.999819, 1, 0, 0.500583,-99) , 
4, 0.999048, 1, 0, 0.50159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492081,-99) , 
0, 0.499043, 1, 0, 0.499762,-99) , 
NN(
0, 
0, 
-1, -0.258024, 0, -1, 0.477021,-99) , 
2, 0.0714928, 1, 0, 0.493109,-99) , 
3, 4.6051, 1, 0, 0.499832,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.00920048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49481,-99) , 
3, 3.86119, 1, 0, 0.50027,-99) , 
3, 8.83806, 0, 0, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.478802,-99) , 
4, 0.999524, 0, 0, 0.499799,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.00970201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.525523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498886,-99) , 
5, -0.625729, 1, 0, 0.50083,-99) , 
4, 0.999524, 1, 0, 0.502457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485125,-99) , 
2, -0.153396, 0, 0, 0.497728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475526,-99) , 
5, -0.0720286, 0, 0, 0.488706,-99) , 
2, 0.071006, 1, 0, 0.494983,-99) , 
3, 4.82088, 1, 0, 0.501017,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.00949453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498353,-99) , 
2, 0.0167643, 0, 0, 0.50103,-99) , 
3, 9.4289, 0, 0, 0.501652,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.482253,-99) , 
4, 0.999524, 0, 0, 0.500456,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0125224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.394111, 1, 1, 0.520307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498295,-99) , 
2, 0.0177462, 0, 0, 0.501424,-99) , 
4, 0.999524, 1, 0, 0.502651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48376,-99) , 
5, -0.350221, 0, 0, 0.494602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477066,-99) , 
0, 0.495234, 0, 0, 0.49065,-99) , 
3, 4.80413, 1, 0, 0.500336,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.00907441);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.503723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472427,-99) , 
4, 0.999048, 0, 0, 0.502654,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0117383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499704,-99) , 
2, -0.0107666, 1, 0, 0.50706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497243,-99) , 
2, -0.214683, 1, 0, 0.498543,-99) , 
3, 1.46394, 1, 0, 0.501502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47206,-99) , 
3, 9.52058, 1, 0, 0.50043,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.00965298);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.18778, 0, 1, 0.503323,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.47176,-99) , 
4, 0.999524, 0, 0, 0.501419,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0048604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499829,-99) , 
2, -0.199716, 1, 0, 0.500453,-99) , 
4, 0.999048, 1, 0, 0.501443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482129,-99) , 
3, 9.12889, 1, 0, 0.500639,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.00469905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494988,-99) , 
3, 1.44978, 1, 0, 0.515215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499992,-99) , 
0, 0.490472, 1, 0, 0.50068,-99) , 
4, 0.999524, 1, 0, 0.501573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486267,-99) , 
3, 9.50853, 1, 0, 0.501007,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0100322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498984,-99) , 
4, 0.999985, 0, 0, 0.503238,-99) , 
NN(
0, 
0, 
-1, 0.0230937, 1, -1, 0.489605,-99) , 
4, 0.999841, 0, 0, 0.502258,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.48657,-99) , 
4, 0.999524, 0, 0, 0.50129,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0155635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486422,-99) , 
4, 0.999637, 0, 0, 0.504688,-99) , 
4, 0.999048, 1, 0, 0.505571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493651,-99) , 
0, 0.495234, 1, 0, 0.496845,-99) , 
6, 0.0238062, 0, 0, 0.499276,-99) , 
5, -0.251207, 0, 0, 0.50245,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.00661619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.552024, 1, 1, 0.502014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482434,-99) , 
3, 9.13219, 1, 0, 0.501175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483081,-99) , 
5, -0.906398, 0, 0, 0.500378,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.00770083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4952,-99) , 
0, 0.500131, 0, 0, 0.504259,-99) , 
0, 0.493329, 1, 0, 0.508225,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492104, 1, 1, 0.501522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48119,-99) , 
0, 0.490471, 0, 0, 0.500847,-99) , 
2, -0.0713112, 1, 0, 0.502078,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0107461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499595,-99) , 
5, -0.158144, 1, 0, 0.504847,-99) , 
NN(
0, 
0, 
-1, 4.70337, 1, -1, 0.49576,-99) , 
0, 0.497138, 0, 0, 0.500103,-99) , 
NN(
0, 
0, 
-1, 0.301092, 1, -1, 0.492615,-99) , 
0, 0.500947, 1, 0, 0.498244,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0123234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489497,-99) , 
3, 1.3977, 1, 0, 0.521324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493829,-99) , 
5, -0.812857, 0, 0, 0.502647,-99) , 
4, 0.999524, 1, 0, 0.503805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482351,-99) , 
3, 9.1652, 1, 0, 0.50292,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.00500705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514558,-99) , 
NN(
0, 
0, 
-1, 6.12606, 1, -1, 0.498872,-99) , 
3, 9.12647, 0, 0, 0.499536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474971,-99) , 
4, 0.999048, 0, 0, 0.498685,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.00744902);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.50322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482232,-99) , 
4, 0.999048, 0, 0, 0.502491,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.00814145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500364, 1, 1, 0.504453,-99) , 
NN(
0, 
0, 
-1, 0.396067, 1, -1, 0.497156,-99) , 
0, 0.49995, 0, 0, 0.498856,-99) , 
NN(
0, 
0, 
-1, 0.50512, 0, -1, 0.490224,-99) , 
0, 0.502852, 1, 0, 0.497734,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0117596);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499568,-99) , 
1, -0.00111721, 1, 0, 0.505082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495899,-99) , 
6, 0.013592, 0, 0, 0.497946,-99) , 
5, -0.159401, 0, 0, 0.501215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483989,-99) , 
6, 0.0237868, 1, 0, 0.500627,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0114427);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.928683, 1, 1, 0.503375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468617,-99) , 
4, 0.999977, 1, 0, 0.499378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476776,-99) , 
4, 0.999524, 0, 0, 0.494193,-99) , 
5, 0.497563, 1, 0, 0.502204,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0111812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39059, 1, 1, 0.523999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496682,-99) , 
5, -0.345239, 1, 0, 0.500177,-99) , 
4, 0.999524, 1, 0, 0.50165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481335,-99) , 
3, 9.00745, 1, 0, 0.500766,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.00975108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497628,-99) , 
3, 1.01636, 1, 0, 0.499524,-99) , 
4, 0.999048, 1, 0, 0.500572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476072,-99) , 
3, 9.52058, 1, 0, 0.499683,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.016829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492199,-99) , 
4, 0.999977, 0, 0, 0.51228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495999,-99) , 
4, 0.999524, 0, 0, 0.509832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499122,-99) , 
5, -0.251191, 0, 0, 0.504453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485189,-99) , 
2, -0.00713447, 1, 0, 0.495963,-99) , 
2, 0.00355362, 0, 0, 0.50041,-99) , 
2, -0.071264, 1, 0, 0.50199,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.00680056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485721,-99) , 
3, 6.98328, 1, 0, 0.500377,-99) , 
3, 9.12647, 0, 0, 0.501323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476553,-99) , 
4, 0.999048, 0, 0, 0.500472,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0109389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496942,-99) , 
5, -0.254858, 1, 0, 0.501118,-99) , 
4, 0.999048, 1, 0, 0.501929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486618,-99) , 
2, 0.0711398, 1, 0, 0.49744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476771,-99) , 
0, 0.502852, 1, 0, 0.4941,-99) , 
3, 4.75894, 1, 0, 0.500394,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0136925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498781,-99) , 
2, 0.00342569, 0, 0, 0.504014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488204,-99) , 
0, 0.492921, 1, 0, 0.49385,-99) , 
2, -0.0713936, 0, 0, 0.502471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491045,-99) , 
2, -0.0726494, 1, 0, 0.493045,-99) , 
5, 0.590603, 0, 0, 0.494903,-99) , 
0, 0.499995, 1, 0, 0.499995,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.00875987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0262208, 0, 1, 0.50476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496962,-99) , 
5, 0.393279, 0, 0, 0.498225,-99) , 
0, 0.497138, 1, 0, 0.500797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482614,-99) , 
4, 0.999048, 0, 0, 0.500169,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.00772582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493738,-99) , 
0, 0.495233, 0, 0, 0.499746,-99) , 
3, 9.42599, 0, 0, 0.500454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47874,-99) , 
4, 0.999048, 0, 0, 0.4997,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0049164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499743,-99) , 
3, 0.551212, 1, 0, 0.500488,-99) , 
3, 9.0063, 0, 0, 0.501369,-99) , 
NN(
0, 
0, 
-1, 0.587812, 0, -1, 0.487909,-99) , 
4, 0.999524, 0, 0, 0.500539,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0087176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498295,-99) , 
0, 0.493328, 1, 0, 0.500175,-99) , 
3, 9.42864, 0, 0, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484653,-99) , 
4, 0.999048, 0, 0, 0.500536,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0120751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496916,-99) , 
6, 0.0237868, 0, 0, 0.498229,-99) , 
5, -0.0643458, 0, 0, 0.502056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482725,-99) , 
3, 9.52058, 1, 0, 0.501353,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0100519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497265,-99) , 
2, 0.0514534, 0, 0, 0.498836,-99) , 
3, 9.42725, 0, 0, 0.500061,-99) , 
NN(
0, 
0, 
-1, 0.404, 1, -1, 0.486121,-99) , 
4, 0.999524, 0, 0, 0.499197,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.009504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492797,-99) , 
2, 0.0909413, 1, 0, 0.501644,-99) , 
4, 0.999048, 1, 0, 0.502757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484132,-99) , 
3, 9.27626, 1, 0, 0.50201,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0112598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497129,-99) , 
5, -0.258328, 0, 0, 0.504506,-99) , 
0, 0.504712, 1, 0, 0.508819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496866,-99) , 
0, 0.499179, 1, 0, 0.500937,-99) , 
NN(
0, 
0, 
-1, 0.494222, 1, -1, 0.49409,-99) , 
0, 0.496866, 0, 0, 0.498167,-99) , 
0, 0.503805, 0, 0, 0.499132,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00552986);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.778356, 0, 1, 0.501918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472611,-99) , 
6, 0.0237836, 1, 0, 0.500944,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0105203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474492,-99) , 
2, 0.0716565, 1, 0, 0.492788,-99) , 
3, 4.82666, 1, 0, 0.502281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498449,-99) , 
2, 0.0711398, 0, 0, 0.500313,-99) , 
NN(
0, 
0, 
-1, -0.752253, 1, -1, 0.48433,-99) , 
5, -0.628382, 0, 0, 0.496423,-99) , 
0, 0.499995, 1, 0, 0.500364,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0109888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497645,-99) , 
1, 0.00111645, 0, 0, 0.509727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493539,-99) , 
5, -0.4384, 0, 0, 0.49871,-99) , 
2, -0.0714359, 1, 0, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477145,-99) , 
6, 0.0238062, 1, 0, 0.49974,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0110492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.20319, 0, 1, 0.509833,-99) , 
NN(
0, 
0, 
-1, 6.74327, 0, -1, 0.490401,-99) , 
3, 3.77472, 1, 0, 0.504531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498871,-99) , 
5, -0.322, 1, 0, 0.500962,-99) , 
NN(
0, 
0, 
-1, 0.490608, 0, -1, 0.495426,-99) , 
0, 0.498091, 0, 0, 0.498259,-99) , 
5, -0.534274, 1, 0, 0.500193,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.00931136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504077, 0, 1, 0.508479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495133,-99) , 
0, 0.498498, 1, 0, 0.499491,-99) , 
0, 0.5019, 0, 0, 0.501142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474667,-99) , 
4, 0.999048, 0, 0, 0.500251,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.00991055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493352,-99) , 
4, 0.999955, 0, 0, 0.499655,-99) , 
4, 0.999048, 1, 0, 0.50025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493088,-99) , 
2, 0.0329425, 0, 0, 0.50055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468187,-99) , 
3, 4.62186, 1, 0, 0.492462,-99) , 
0, 0.502852, 1, 0, 0.49924,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0114898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.351545, 0, 1, 0.516652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478412,-99) , 
5, 0.579898, 1, 0, 0.500871,-99) , 
2, -0.0723082, 1, 0, 0.503673,-99) , 
NN(
0, 
0, 
-1, 0.0708417, 1, -1, 0.494787,-99) , 
0, 0.499043, 0, 0, 0.498505,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0131866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495174,-99) , 
0, 0.504757, 0, 0, 0.496134,-99) , 
4, 0.999048, 1, 0, 0.497352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482899,-99) , 
3, 9.16907, 1, 0, 0.496754,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.00944841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00566034, 1, 1, 0.503915,-99) , 
NN(
0, 
0, 
-1, 1.83089, 0, -1, 0.493698,-99) , 
5, -0.625692, 0, 0, 0.50161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487708,-99) , 
6, 0.0237841, 1, 0, 0.50113,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0127831);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491772,-99) , 
3, 4.61386, 1, 0, 0.505867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496904,-99) , 
2, 0.00736846, 0, 0, 0.498924,-99) , 
2, 0.0306897, 0, 0, 0.500711,-99) , 
2, -0.214186, 1, 0, 0.501553,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0106264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.93348, 1, 1, 0.521083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484185,-99) , 
5, -0.073668, 0, 0, 0.497552,-99) , 
3, 4.81114, 1, 0, 0.512182,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482658,-99) , 
0, 0.504757, 1, 0, 0.500942,-99) , 
2, -0.0710439, 1, 0, 0.502804,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00906206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498115,-99) , 
1, 0.00112821, 0, 0, 0.508052,-99) , 
NN(
0, 
0, 
-1, 0.0136035, 1, -1, 0.497092,-99) , 
2, -0.0713877, 1, 0, 0.498899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48349,-99) , 
6, 0.0238062, 1, 0, 0.498379,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0123761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500948, 1, 1, 0.510957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48089,-99) , 
2, 0.0770924, 1, 0, 0.50584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49751,-99) , 
2, 0.153623, 0, 0, 0.498528,-99) , 
5, -0.625589, 1, 0, 0.500254,-99) , 
2, -0.0707383, 1, 0, 0.502043,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00666299);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500948, 0, 1, 0.502853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478286,-99) , 
5, 0.77253, 1, 0, 0.50223,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.00753019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.502834,-99) , 
NN(
0, 
0, 
-1, -0.537902, 0, -1, 0.494286,-99) , 
0, 0.493329, 0, 0, 0.501802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479903,-99) , 
4, 0.999048, 0, 0, 0.501047,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0131788);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498812,-99) , 
2, -0.00578828, 1, 0, 0.516175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492399,-99) , 
5, -0.0643436, 1, 0, 0.498431,-99) , 
3, 0.785517, 1, 0, 0.501616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491095,-99) , 
2, -0.0714577, 0, 0, 0.497726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484447,-99) , 
0, 0.493329, 0, 0, 0.495999,-99) , 
3, 4.77162, 1, 0, 0.500516,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.00557657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.353328, 0, 1, 0.513682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499679,-99) , 
2, -0.0707299, 1, 0, 0.500811,-99) , 
0, 0.504757, 0, 0, 0.50155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476559,-99) , 
4, 0.999048, 0, 0, 0.500704,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0115521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498507,-99) , 
2, 0.0406177, 0, 0, 0.500111,-99) , 
4, 0.999048, 1, 0, 0.501204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489343,-99) , 
5, 0.113941, 0, 0, 0.496099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476059,-99) , 
3, 8.89226, 1, 0, 0.49166,-99) , 
3, 4.6051, 1, 0, 0.499219,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.00782249);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.4299, 0, 1, 0.503185,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.484999,-99) , 
4, 0.999524, 0, 0, 0.502068,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.00658514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498505,-99) , 
5, -0.532305, 1, 0, 0.500398,-99) , 
2, 0.132734, 0, 0, 0.500973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488173,-99) , 
2, 0.21435, 1, 0, 0.500453,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0118783);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.775096, 1, 1, 0.504635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489141,-99) , 
2, -0.0782587, 0, 0, 0.500173,-99) , 
NN(
0, 
0, 
-1, -0.0639551, 0, -1, 0.484731,-99) , 
2, 0.0713547, 1, 0, 0.495567,-99) , 
3, 4.80413, 1, 0, 0.502885,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.012733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502016, 0, 1, 0.508206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490636,-99) , 
3, 4.39054, 1, 0, 0.500718,-99) , 
0, 0.502716, 1, 0, 0.505737,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0703681, 1, 1, 0.505018,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.494181,-99) , 
5, 0.12318, 0, 0, 0.497555,-99) , 
0, 0.499043, 0, 0, 0.501006,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0121071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49469, 0, 1, 0.515395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499451,-99) , 
0, 0.499043, 1, 0, 0.509387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487526,-99) , 
4, 0.999964, 0, 0, 0.498914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472536,-99) , 
4, 0.999623, 0, 0, 0.497734,-99) , 
5, 0.497563, 0, 0, 0.499263,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.00991162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00566242, 0, 1, 0.505266,-99) , 
NN(
0, 
0, 
-1, 4.65126, 1, -1, 0.49627,-99) , 
5, -0.162666, 0, 0, 0.500415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480067,-99) , 
6, 0.0237868, 1, 0, 0.499735,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0190408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452717,-99) , 
4, 0.999937, 0, 0, 0.50016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434012,-99) , 
3, 1.49481, 1, 0, 0.480808,-99) , 
4, 0.999905, 0, 0, 0.498094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486894,-99) , 
0, 0.493782, 0, 0, 0.499551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488192,-99) , 
5, 0.683908, 0, 0, 0.491094,-99) , 
0, 0.495233, 1, 0, 0.493079,-99) , 
5, 0.123176, 1, 0, 0.496596,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.00856341);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497168,-99) , 
2, -0.0713877, 1, 0, 0.498407,-99) , 
NN(
0, 
0, 
-1, -0.324744, 0, -1, 0.484241,-99) , 
0, 0.504757, 1, 0, 0.497599,-99) , 
5, 0.772529, 0, 0, 0.498159,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0193907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484188,-99) , 
4, 0.999986, 0, 0, 0.505913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481095,-99) , 
4, 0.999905, 0, 0, 0.50385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496587,-99) , 
4, 0.999524, 1, 0, 0.499407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473855,-99) , 
3, 9.43498, 1, 0, 0.49829,-99) , 
5, -0.438407, 1, 0, 0.500398,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0124927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00679421, 0, 1, 0.503242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490112,-99) , 
0, 0.492376, 1, 0, 0.49245,-99) , 
5, -0.441559, 0, 0, 0.499322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48077,-99) , 
6, 0.0237868, 1, 0, 0.498691,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.00911204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495188,-99) , 
4, 0.999955, 1, 0, 0.505576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489295,-99) , 
4, 0.999955, 0, 0, 0.498414,-99) , 
5, 0.403057, 0, 0, 0.499506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476859,-99) , 
4, 0.999048, 0, 0, 0.498731,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.00406614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510828,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.498904,-99) , 
2, 0.214752, 0, 0, 0.49932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481189,-99) , 
4, 0.999048, 0, 0, 0.498697,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00798248);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.778357, 0, 1, 0.513434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497827,-99) , 
2, 0.214075, 0, 0, 0.498475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481638,-99) , 
4, 0.999524, 0, 0, 0.497683,-99) , 
5, 0.684759, 0, 0, 0.498582,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.00911098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.363362, 0, 1, 0.503533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486947,-99) , 
5, 0.684165, 1, 0, 0.502797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478513,-99) , 
4, 0.999048, 0, 0, 0.501966,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0112288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496388,-99) , 
2, -0.0734077, 1, 0, 0.498158,-99) , 
3, 9.42206, 0, 0, 0.498801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469339,-99) , 
4, 0.999048, 0, 0, 0.49781,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.012389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00113292, 0, 1, 0.508558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497111,-99) , 
6, 0.0147371, 0, 0, 0.498776,-99) , 
5, 0.0292153, 0, 0, 0.502261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481224,-99) , 
6, 0.0238062, 1, 0, 0.501551,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.00700676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499256,-99) , 
6, 0.00680172, 0, 0, 0.501278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480161,-99) , 
5, -0.906445, 0, 0, 0.500489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484151,-99) , 
6, 0.0238062, 1, 0, 0.499933,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.00815862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.858272, 1, 1, 0.501574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483414,-99) , 
2, -0.0308589, 1, 0, 0.489286,-99) , 
5, 0.488099, 1, 0, 0.500005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469873,-99) , 
2, 0.213915, 1, 0, 0.498823,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.00984873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 1, 1, 0.513846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49742,-99) , 
3, 9.42864, 0, 0, 0.498233,-99) , 
0, 0.503804, 0, 0, 0.499625,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.483425,-99) , 
4, 0.999524, 0, 0, 0.498626,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0117689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0204969, 1, 1, 0.509585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496055,-99) , 
5, 0.122782, 0, 0, 0.498728,-99) , 
3, 1.02063, 1, 0, 0.501119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480909,-99) , 
3, 9.52452, 1, 0, 0.500371,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0084541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492833,-99) , 
4, 0.999955, 1, 0, 0.506303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499462,-99) , 
5, -0.866367, 1, 0, 0.500635,-99) , 
5, 0.403054, 0, 0, 0.501503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473371,-99) , 
4, 0.999048, 0, 0, 0.500545,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0111435);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0237841, 0, 1, 0.505386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482364,-99) , 
0, 0.49333, 0, 0, 0.499907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476882,-99) , 
1, 0.00550162, 1, 0, 0.497513,-99) , 
5, 0.119496, 1, 0, 0.50303,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0122473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479742,-99) , 
3, 9.52224, 1, 0, 0.503442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490921,-99) , 
5, -0.816617, 0, 0, 0.495837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474525,-99) , 
5, -0.759313, 1, 0, 0.491934,-99) , 
5, -0.719198, 0, 0, 0.501588,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.00441029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490525,-99) , 
5, -0.817845, 0, 0, 0.500026,-99) , 
5, -0.906695, 1, 0, 0.500448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494811,-99) , 
5, -0.349648, 1, 0, 0.497628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473559,-99) , 
0, 0.504712, 0, 0, 0.489659,-99) , 
0, 0.503805, 1, 0, 0.499481,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.00904516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492171,-99) , 
0, 0.49088, 0, 0, 0.503628,-99) , 
2, -0.07059, 1, 0, 0.507796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49507,-99) , 
5, -0.345041, 1, 0, 0.497484,-99) , 
4, 0.999048, 1, 0, 0.498128,-99) , 
0, 0.493329, 1, 0, 0.499362,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.00569991);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499998,-99) , 
3, 9.42883, 0, 0, 0.501386,-99) , 
NN(
0, 
0, 
-1, 0.999525, 1, -1, 0.488474,-99) , 
4, 0.999819, 0, 0, 0.500265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480953,-99) , 
4, 0.999048, 0, 0, 0.499598,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00724512);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498356,-99) , 
0, 0.505709, 0, 0, 0.498938,-99) , 
NN(
0, 
0, 
-1, -0.866737, 1, -1, 0.489069,-99) , 
5, -0.813414, 0, 0, 0.497962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478511,-99) , 
4, 0.999048, 0, 0, 0.497299,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.00925399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496818,-99) , 
5, -0.627927, 0, 0, 0.501607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4799,-99) , 
4, 0.999592, 0, 0, 0.500847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470918,-99) , 
4, 0.999048, 0, 0, 0.499834,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.457648, 0, 1, 0.510834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484186,-99) , 
3, 9.28542, 1, 0, 0.501554,-99) , 
5, -0.389775, 1, 0, 0.502914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484133,-99) , 
2, 0.071006, 1, 0, 0.506301,-99) , 
NN(
0, 
0, 
-1, -0.777283, 1, -1, 0.481327,-99) , 
3, 1.93743, 0, 0, 0.494843,-99) , 
5, -0.532308, 0, 0, 0.500434,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0146709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494349,-99) , 
3, 5.5433, 1, 0, 0.504057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493361,-99) , 
4, 0.999524, 1, 0, 0.496619,-99) , 
5, -0.157916, 1, 0, 0.50068,-99) , 
NN(
NN(
0, 
0, 
-1, 0.433864, 0, 1, 0.50406,-99) , 
NN(
0, 
0, 
-1, 0.504077, 1, -1, 0.488902,-99) , 
5, 0.11523, 0, 0, 0.493126,-99) , 
0, 0.5019, 1, 0, 0.499298,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0104626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496571,-99) , 
4, 0.999819, 1, 0, 0.497943,-99) , 
3, 9.12647, 0, 0, 0.498821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482472,-99) , 
4, 0.999048, 0, 0, 0.498257,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0125107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00226643, 0, 1, 0.506199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491211,-99) , 
1, -0.00340109, 0, 0, 0.499363,-99) , 
5, -0.344804, 0, 0, 0.503275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47695,-99) , 
6, 0.0238062, 1, 0, 0.502391,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.00837674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49805,-99) , 
3, 1.3952, 1, 0, 0.500024,-99) , 
3, 9.00492, 0, 0, 0.500964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476203,-99) , 
0, 0.496186, 1, 0, 0.4865,-99) , 
4, 0.999524, 0, 0, 0.500063,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0118356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0717864, 0, 1, 0.507309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496041,-99) , 
5, -0.719766, 0, 0, 0.505372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494303,-99) , 
5, -0.72942, 1, 0, 0.495332,-99) , 
5, -0.906843, 1, 0, 0.49611,-99) , 
0, 0.494281, 1, 0, 0.497747,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.00626488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493956,-99) , 
5, 0.212788, 1, 0, 0.498927,-99) , 
3, 9.12773, 0, 0, 0.499627,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.483274,-99) , 
4, 0.999524, 0, 0, 0.498618,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0160713);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493683,-99) , 
4, 0.999524, 0, 0, 0.507511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486443,-99) , 
5, 0.724873, 1, 0, 0.504623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493513,-99) , 
1, -0.0101932, 1, 0, 0.494909,-99) , 
6, 0.0237841, 0, 0, 0.495896,-99) , 
5, 0.123178, 0, 0, 0.498529,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.00933421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237868, 0, 1, 0.504693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496511,-99) , 
3, 4.7912, 0, 0, 0.498349,-99) , 
5, -0.345045, 1, 0, 0.501222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48456,-99) , 
4, 0.999048, 0, 0, 0.500652,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.00812057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.193172, 0, 1, 0.519345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499132,-99) , 
5, 0.684164, 0, 0, 0.500158,-99) , 
3, 0.570603, 1, 0, 0.501774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475057,-99) , 
3, 9.52224, 1, 0, 0.5008,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0096514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499761,-99) , 
0, 0.500481, 1, 0, 0.503567,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495452,-99) , 
0, 0.496594, 0, 0, 0.500615,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, -1, 0.481986,-99) , 
0, 0.504757, 1, 0, 0.499567,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0105871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498945,-99) , 
4, 0.999955, 1, 0, 0.501592,-99) , 
4, 0.999048, 1, 0, 0.502558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49085,-99) , 
3, 6.42038, 1, 0, 0.497168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475187,-99) , 
5, 0.39243, 1, 0, 0.493239,-99) , 
3, 4.80413, 1, 0, 0.500769,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.00761262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492513,-99) , 
3, 1.39504, 1, 0, 0.516673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499428,-99) , 
0, 0.502852, 0, 0, 0.500838,-99) , 
4, 0.999524, 1, 0, 0.501811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483433,-99) , 
3, 9.11848, 1, 0, 0.501029,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.00858556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495777, 0, 1, 0.508438,-99) , 
NN(
0, 
0, 
-1, 0.493737, 0, -1, 0.492253,-99) , 
3, 4.82636, 1, 0, 0.505524,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49673, 1, 1, 0.500826,-99) , 
NN(
0, 
0, 
-1, 0.498362, 0, -1, 0.488531,-99) , 
2, -0.0710027, 0, 0, 0.498916,-99) , 
0, 0.496186, 1, 0, 0.50097,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.00455299);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.501958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48893,-99) , 
4, 0.999048, 0, 0, 0.501502,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0118453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497464,-99) , 
5, -0.160375, 1, 0, 0.502462,-99) , 
4, 0.999048, 1, 0, 0.503254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479083,-99) , 
3, 9.50853, 1, 0, 0.502362,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0107458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00452107, 0, 1, 0.505089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496203,-99) , 
6, 0.0113063, 0, 0, 0.498061,-99) , 
5, -0.251474, 0, 0, 0.501668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479293,-99) , 
6, 0.0237449, 1, 0, 0.500918,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.00641172);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.2141, 1, 1, 0.502247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469468,-99) , 
4, 0.999048, 0, 0, 0.501137,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.00842461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.583413, 0, 1, 0.508078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494954,-99) , 
0, 0.490471, 0, 0, 0.506433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495092,-99) , 
0, 0.501317, 1, 0, 0.498971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477568,-99) , 
0, 0.505981, 1, 0, 0.498139,-99) , 
0, 0.496186, 1, 0, 0.500736,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00924725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495909,-99) , 
3, 4.83198, 1, 0, 0.504714,-99) , 
0, 0.502852, 0, 0, 0.507221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497756,-99) , 
2, 0.227076, 0, 0, 0.498481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479064,-99) , 
4, 0.999524, 0, 0, 0.497649,-99) , 
2, -0.071264, 1, 0, 0.499247,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0110173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49555,-99) , 
0, 0.5019, 0, 0, 0.497129,-99) , 
3, 9.42206, 0, 0, 0.497995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480344,-99) , 
4, 0.999048, 0, 0, 0.49739,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00915937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498098,-99) , 
4, 0.999977, 0, 0, 0.502026,-99) , 
3, 9.42864, 0, 0, 0.502908,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.489322,-99) , 
4, 0.999524, 0, 0, 0.502075,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00532742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214332, 0, 1, 0.501867,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, -1, 0.488984,-99) , 
0, 0.492376, 0, 0, 0.500745,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.00530216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499365,-99) , 
2, -0.210704, 1, 0, 0.49994,-99) , 
3, 9.1301, 0, 0, 0.500862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479982,-99) , 
4, 0.999048, 0, 0, 0.500147,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0168061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485558,-99) , 
3, 9.52716, 1, 0, 0.504607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48139,-99) , 
6, 0.0056681, 1, 0, 0.497138,-99) , 
5, -0.62771, 0, 0, 0.502927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475974,-99) , 
6, 0.0238062, 1, 0, 0.502044,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.00635254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517299,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.497855,-99) , 
4, 0.999048, 1, 0, 0.498519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483487,-99) , 
3, 9.50466, 1, 0, 0.497963,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.00778694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.376951, 1, 1, 0.521875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482547,-99) , 
3, 7.38914, 1, 0, 0.500023,-99) , 
3, 0.568775, 1, 0, 0.501873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4817,-99) , 
3, 9.52058, 1, 0, 0.501142,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0180918);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494904,-99) , 
2, 0.0707307, 1, 0, 0.51157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48509,-99) , 
2, 0.00678224, 0, 0, 0.491267,-99) , 
3, 1.93743, 0, 0, 0.502265,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497139, 0, 1, 0.507018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493298,-99) , 
3, 9.13335, 0, 0, 0.494593,-99) , 
4, 0.999524, 1, 0, 0.495635,-99) , 
5, -0.533541, 1, 0, 0.497701,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.00872299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491696, 1, 1, 0.50373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483766,-99) , 
0, 0.494962, 0, 0, 0.496322,-99) , 
5, 0.497036, 1, 0, 0.502777,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.485392,-99) , 
0, 0.504757, 1, 0, 0.501793,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00487173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479349,-99) , 
3, 7.65436, 1, 0, 0.499842,-99) , 
3, 9.42599, 0, 0, 0.500606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484304,-99) , 
4, 0.999048, 0, 0, 0.500039,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0087521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497568,-99) , 
0, 0.502852, 0, 0, 0.498923,-99) , 
3, 9.4289, 0, 0, 0.499822,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.488291,-99) , 
4, 0.999524, 0, 0, 0.499116,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0102703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.555327, 1, 1, 0.502545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492297,-99) , 
5, 0.403472, 0, 0, 0.494265,-99) , 
0, 0.499043, 1, 0, 0.499139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477683,-99) , 
3, 9.50466, 1, 0, 0.498361,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.00797807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.501905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474285,-99) , 
4, 0.999751, 0, 0, 0.500872,-99) , 
NN(
0, 
0, 
-1, 0.497592, 1, -1, 0.477522,-99) , 
4, 0.999524, 0, 0, 0.499457,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.00564317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483322,-99) , 
4, 0.999637, 0, 0, 0.499941,-99) , 
0, 0.490471, 1, 0, 0.500788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475726,-99) , 
4, 0.999048, 0, 0, 0.499938,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0119088);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492796,-99) , 
4, 0.999954, 0, 0, 0.505976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496709,-99) , 
3, 9.1293, 0, 0, 0.497564,-99) , 
2, 0.0705343, 0, 0, 0.498785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47343,-99) , 
4, 0.999048, 0, 0, 0.497928,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0124497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497873,-99) , 
5, -0.262203, 1, 0, 0.510784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49453,-99) , 
3, 0.961772, 1, 0, 0.496261,-99) , 
0, 0.491424, 1, 0, 0.497147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47574,-99) , 
3, 9.11461, 1, 0, 0.496255,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.00552376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48612,-99) , 
5, -0.906426, 0, 0, 0.500246,-99) , 
3, 8.85679, 0, 0, 0.500862,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.486773,-99) , 
4, 0.999524, 0, 0, 0.499997,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00579559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494526,-99) , 
0, 0.491696, 1, 0, 0.503344,-99) , 
5, 0.209482, 0, 0, 0.50744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495407,-99) , 
5, -0.719198, 0, 0, 0.499751,-99) , 
NN(
0, 
0, 
-1, 0.505832, 0, -1, 0.492857,-99) , 
0, 0.504213, 1, 0, 0.499164,-99) , 
0, 0.493329, 1, 0, 0.500217,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0123673);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492482,-99) , 
3, 4.68114, 1, 0, 0.504456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496411,-99) , 
3, 4.75894, 0, 0, 0.498635,-99) , 
2, 0.0304756, 0, 0, 0.500126,-99) , 
2, -0.21436, 1, 0, 0.500591,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.00883734);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494584,-99) , 
5, 0.0985575, 1, 0, 0.500269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474117,-99) , 
4, 0.999048, 0, 0, 0.499538,-99) , 
5, 0.774587, 0, 0, 0.500171,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0146699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49936,-99) , 
3, 4.87793, 1, 0, 0.51222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482994,-99) , 
0, 0.503805, 1, 0, 0.500454,-99) , 
2, -0.0710803, 1, 0, 0.502427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487027,-99) , 
6, 0.00339799, 1, 0, 0.491935,-99) , 
6, 0.0237868, 0, 0, 0.495452,-99) , 
5, -0.344813, 0, 0, 0.499366,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0123684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495658,-99) , 
0, 0.505709, 0, 0, 0.496327,-99) , 
4, 0.999048, 1, 0, 0.49752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480439,-99) , 
3, 9.26255, 1, 0, 0.496834,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0073073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489671,-99) , 
6, 0.000701104, 0, 0, 0.500378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486005,-99) , 
6, 0.0147227, 1, 0, 0.499749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479169,-99) , 
6, 0.0237836, 1, 0, 0.499053,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.00944588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.80814, 1, 1, 0.512075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498334,-99) , 
4, 0.999524, 1, 0, 0.499105,-99) , 
2, -0.0717891, 1, 0, 0.501157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472373,-99) , 
3, 9.42206, 1, 0, 0.500086,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0149064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495711,-99) , 
5, -0.563207, 0, 0, 0.501497,-99) , 
6, 0.0238062, 0, 0, 0.502234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475885,-99) , 
4, 0.999977, 1, 0, 0.495418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479206,-99) , 
4, 0.999524, 0, 0, 0.49257,-99) , 
5, 0.31037, 1, 0, 0.500215,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.00975327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496941,-99) , 
3, 0.362771, 1, 0, 0.511579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496962,-99) , 
0, 0.493329, 1, 0, 0.498027,-99) , 
3, 0.543962, 1, 0, 0.499069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481918,-99) , 
3, 8.99973, 1, 0, 0.498306,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.007037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487904,-99) , 
4, 0.999524, 0, 0, 0.501548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489659,-99) , 
5, 0.68476, 1, 0, 0.500892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483923,-99) , 
0, 0.505709, 1, 0, 0.50033,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.00398439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499956,-99) , 
4, 0.999048, 1, 0, 0.500538,-99) , 
2, 0.214489, 0, 0, 0.501416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486105,-99) , 
3, 9.2798, 1, 0, 0.500807,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.00893929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497366,-99) , 
4, 0.999955, 1, 0, 0.510153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492821,-99) , 
4, 0.999955, 0, 0, 0.500061,-99) , 
5, 0.497037, 0, 0, 0.501211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486783,-99) , 
4, 0.999048, 0, 0, 0.500712,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00489058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483616,-99) , 
3, 8.98381, 1, 0, 0.501003,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0119937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 0, 1, 0.506684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492624,-99) , 
2, -0.071719, 0, 0, 0.504372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49476,-99) , 
2, -0.194277, 1, 0, 0.495687,-99) , 
2, 0.213748, 0, 0, 0.496337,-99) , 
5, -0.627846, 1, 0, 0.498247,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.011191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491605, 1, 1, 0.509305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491535,-99) , 
3, 4.7039, 1, 0, 0.505844,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0711339, 0, 1, 0.504819,-99) , 
NN(
0, 
0, 
-1, -0.255948, 0, -1, 0.495635,-99) , 
0, 0.501718, 0, 0, 0.498015,-99) , 
0, 0.495233, 1, 0, 0.499884,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.00577446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487791,-99) , 
3, 9.50853, 1, 0, 0.501476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482468,-99) , 
6, 0.0238062, 1, 0, 0.500835,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0102808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.474233, 1, 1, 0.501907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484864,-99) , 
3, 1.81231, 0, 0, 0.493812,-99) , 
5, -0.625725, 0, 0, 0.500055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493268,-99) , 
5, -0.536461, 0, 0, 0.500443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476791,-99) , 
0, 0.502716, 1, 0, 0.483208,-99) , 
5, -0.351044, 1, 0, 0.491456,-99) , 
0, 0.5019, 1, 0, 0.498475,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.00895883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497258,-99) , 
4, 0.999547, 1, 0, 0.497835,-99) , 
3, 9.42599, 0, 0, 0.498663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475664,-99) , 
4, 0.999048, 0, 0, 0.497875,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.00574334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499132,-99) , 
3, 0.568775, 1, 0, 0.500062,-99) , 
5, 0.684759, 0, 0, 0.500998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487191,-99) , 
3, 9.52058, 1, 0, 0.500495,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0088216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18778, 0, 1, 0.502685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484081,-99) , 
5, 0.489163, 0, 0, 0.491868,-99) , 
4, 0.999864, 0, 0, 0.501464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482474,-99) , 
4, 0.999048, 0, 0, 0.500813,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0130535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492479,-99) , 
5, -0.532159, 1, 0, 0.496875,-99) , 
3, 1.84741, 1, 0, 0.500343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483533,-99) , 
3, 9.25868, 1, 0, 0.499669,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.013729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.41734, 0, 1, 0.513718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483311,-99) , 
5, 0.662477, 0, 0, 0.497462,-99) , 
5, 0.591164, 1, 0, 0.506772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498605,-99) , 
6, 0.0237526, 0, 0, 0.499991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428569,-99) , 
3, 2.08424, 1, 0, 0.480385,-99) , 
4, 0.999884, 0, 0, 0.498014,-99) , 
5, 0.310372, 0, 0, 0.499859,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.00636328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499546,-99) , 
4, 0.999048, 1, 0, 0.500405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487402,-99) , 
3, 9.42599, 1, 0, 0.499939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50861,-99) , 
NN(
0, 
0, 
-1, -0.259382, 1, -1, 0.485614,-99) , 
2, 0.0717248, 0, 0, 0.490513,-99) , 
0, 0.502852, 1, 0, 0.498712,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00821252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.923746, 1, 1, 0.51036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498043,-99) , 
5, -0.115561, 0, 0, 0.500855,-99) , 
5, -0.839874, 1, 0, 0.501665,-99) , 
NN(
0, 
0, 
-1, 0.497141, 1, -1, 0.489414,-99) , 
5, 0.681189, 1, 0, 0.500976,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0101806);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493803,-99) , 
0, 0.503487, 1, 0, 0.508042,-99) , 
NN(
0, 
0, 
-1, 9.10661, 1, -1, 0.498993,-99) , 
5, -0.625738, 1, 0, 0.501136,-99) , 
NN(
0, 
0, 
-1, 0.492693, 0, -1, 0.488426,-99) , 
0, 0.495233, 0, 0, 0.498175,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0146729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00566409, 1, 1, 0.506998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489014,-99) , 
3, 1.8979, 0, 0, 0.4973,-99) , 
5, -0.532301, 0, 0, 0.504105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485076,-99) , 
6, 0.0237868, 1, 0, 0.503457,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00958893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.672118, 1, 1, 0.510205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498418,-99) , 
5, -0.472173, 1, 0, 0.501427,-99) , 
5, 0.583413, 0, 0, 0.502258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491322,-99) , 
5, -0.0392798, 1, 0, 0.498619,-99) , 
NN(
0, 
0, 
-1, 0.491424, 1, -1, 0.488058,-99) , 
5, -0.43959, 0, 0, 0.494408,-99) , 
0, 0.493329, 0, 0, 0.501264,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.00730904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495537,-99) , 
3, 0.989672, 0, 0, 0.500774,-99) , 
3, 9.18631, 0, 0, 0.501599,-99) , 
NN(
0, 
0, 
-1, 0.99907, 1, -1, 0.49172,-99) , 
4, 0.999524, 0, 0, 0.500986,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.00926656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 1, 1, 0.505371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496853,-99) , 
3, 9.42599, 0, 0, 0.497612,-99) , 
0, 0.500947, 0, 0, 0.499556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480385,-99) , 
4, 0.999048, 0, 0, 0.498906,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.00485924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488341,-99) , 
6, 0.0238062, 1, 0, 0.500893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488872,-99) , 
5, -0.906421, 0, 0, 0.500352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485182,-99) , 
4, 0.999048, 0, 0, 0.499832,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.00502924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499136,-99) , 
3, 0.402034, 1, 0, 0.513304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499661,-99) , 
5, 0.769691, 0, 0, 0.500184,-99) , 
3, 0.551262, 1, 0, 0.501204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480791,-99) , 
3, 9.50466, 1, 0, 0.500459,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0100496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.350339, 0, 1, 0.507355,-99) , 
NN(
0, 
0, 
-1, 0.017969, 1, -1, 0.495031,-99) , 
0, 0.503804, 1, 0, 0.502995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496644,-99) , 
3, 8.85541, 0, 0, 0.497438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484674,-99) , 
4, 0.999524, 0, 0, 0.496697,-99) , 
0, 0.500947, 0, 0, 0.498282,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00870742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499528,-99) , 
0, 0.500675, 1, 0, 0.503359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484371,-99) , 
0, 0.489972, 0, 0, 0.493226,-99) , 
0, 0.491424, 0, 0, 0.502791,-99) , 
2, -0.214186, 1, 0, 0.503297,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.00952255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.85698, 0, 1, 0.503506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484132,-99) , 
4, 0.999751, 0, 0, 0.502771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475396,-99) , 
5, 0.401025, 1, 0, 0.490082,-99) , 
4, 0.999524, 0, 0, 0.501991,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.00985147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497801,-99) , 
5, -0.282717, 0, 0, 0.514457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497775,-99) , 
0, 0.492376, 1, 0, 0.499219,-99) , 
3, 0.546555, 1, 0, 0.500394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479792,-99) , 
3, 9.40614, 1, 0, 0.499612,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0106594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.503716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472326,-99) , 
2, 0.0711637, 1, 0, 0.494382,-99) , 
4, 0.999909, 0, 0, 0.502288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480423,-99) , 
4, 0.999048, 0, 0, 0.501553,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.00758788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.3904, 1, 1, 0.508204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498258,-99) , 
6, 0.0237836, 0, 0, 0.499097,-99) , 
5, 0.403054, 0, 0, 0.500619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486034,-99) , 
3, 9.50466, 1, 0, 0.500078,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.00672866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.55594, 0, 1, 0.501619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490666,-99) , 
4, 0.999584, 0, 0, 0.501167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482485,-99) , 
4, 0.999977, 1, 0, 0.495496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46913,-99) , 
4, 0.999524, 0, 0, 0.489467,-99) , 
5, 0.497566, 1, 0, 0.499679,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0106867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491357,-99) , 
3, 3.6936, 1, 0, 0.50108,-99) , 
4, 0.999048, 1, 0, 0.502176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493962,-99) , 
2, -0.0714419, 1, 0, 0.500991,-99) , 
NN(
0, 
0, 
-1, 0.0717312, 1, -1, 0.487942,-99) , 
5, -0.1576, 0, 0, 0.493946,-99) , 
3, 4.8082, 1, 0, 0.500591,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.00689257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498734,-99) , 
2, 0.194117, 0, 0, 0.499663,-99) , 
2, -0.213667, 1, 0, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483074,-99) , 
3, 9.07715, 1, 0, 0.49978,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0117768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.504336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493499,-99) , 
6, 0.0124561, 0, 0, 0.495446,-99) , 
5, -0.346198, 0, 0, 0.50055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480572,-99) , 
6, 0.0237868, 1, 0, 0.499885,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00854987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238062, 0, 1, 0.502436,-99) , 
NN(
0, 
0, 
-1, 0.195804, 0, -1, 0.49589,-99) , 
5, 0.116082, 1, 0, 0.50045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513106,-99) , 
NN(
0, 
0, 
-1, 0.493011, 0, -1, 0.489914,-99) , 
0, 0.489837, 1, 0, 0.493819,-99) , 
0, 0.494281, 0, 0, 0.499296,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0115981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497727, 0, 1, 0.520371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496088,-99) , 
2, 0.0284803, 0, 0, 0.498266,-99) , 
4, 0.999524, 1, 0, 0.499622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47979,-99) , 
3, 9.42372, 1, 0, 0.498888,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.00751966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498546,-99) , 
6, 0.0238062, 0, 0, 0.499193,-99) , 
3, 9.18631, 0, 0, 0.500137,-99) , 
NN(
0, 
0, 
-1, 0.494461, 1, -1, 0.48182,-99) , 
4, 0.999524, 0, 0, 0.499022,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0147771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482704,-99) , 
4, 0.999905, 0, 0, 0.501621,-99) , 
6, 0.0237843, 0, 0, 0.503615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492535,-99) , 
3, 4.37214, 0, 0, 0.49613,-99) , 
4, 0.999048, 1, 0, 0.497339,-99) , 
5, -0.345045, 1, 0, 0.500105,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.00368564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499828,-99) , 
2, -0.214584, 1, 0, 0.500234,-99) , 
3, 9.42599, 0, 0, 0.500736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475366,-99) , 
4, 0.999048, 0, 0, 0.49989,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0107442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.403473, 0, 1, 0.50396,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.488896,-99) , 
4, 0.999841, 0, 0, 0.502871,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.480675,-99) , 
4, 0.999524, 0, 0, 0.501532,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0103386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0561976, 0, 1, 0.505548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496733,-99) , 
2, 0.214332, 0, 0, 0.497633,-99) , 
3, 1.87957, 1, 0, 0.501218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479856,-99) , 
3, 9.41001, 1, 0, 0.500397,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0096935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496925,-99) , 
0, 0.491424, 1, 0, 0.497553,-99) , 
3, 9.42725, 0, 0, 0.498617,-99) , 
NN(
0, 
0, 
-1, 0.497719, 0, -1, 0.485047,-99) , 
4, 0.999524, 0, 0, 0.4978,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0116497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214236, 0, 1, 0.506039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495875,-99) , 
6, 0.0124699, 0, 0, 0.497363,-99) , 
5, -0.34523, 0, 0, 0.502336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483092,-99) , 
6, 0.0238062, 1, 0, 0.501689,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0110595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489366,-99) , 
3, 8.80287, 1, 0, 0.503574,-99) , 
NN(
0, 
0, 
-1, 0.490108, 0, -1, 0.490466,-99) , 
0, 0.492376, 0, 0, 0.502478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478987,-99) , 
2, 0.2141, 1, 0, 0.501552,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00489723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499532,-99) , 
5, 0.679239, 0, 0, 0.500007,-99) , 
4, 0.999048, 1, 0, 0.500982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481622,-99) , 
3, 9.50466, 1, 0, 0.500274,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.00634898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499706,-99) , 
5, 0.338728, 0, 0, 0.501529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482485,-99) , 
3, 9.41001, 1, 0, 0.500804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483876,-99) , 
5, -0.906586, 0, 0, 0.500071,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00611218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515703,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49043,-99) , 
3, 9.10661, 1, 0, 0.501789,-99) , 
0, 0.505709, 0, 0, 0.502274,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0102582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495811,-99) , 
5, -0.750387, 1, 0, 0.503691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497434,-99) , 
2, 0.112463, 0, 0, 0.498705,-99) , 
5, -0.625589, 1, 0, 0.499902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474535,-99) , 
2, -0.21397, 0, 0, 0.498789,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.00944108);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499665,-99) , 
3, 4.51751, 1, 0, 0.50815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486116,-99) , 
0, 0.491424, 0, 0, 0.501942,-99) , 
2, -0.0715402, 1, 0, 0.502966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484268,-99) , 
5, -0.906421, 0, 0, 0.502154,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.018182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493941,-99) , 
5, -0.813192, 0, 0, 0.504197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488759,-99) , 
2, 0.00736041, 0, 0, 0.499543,-99) , 
2, -0.00332835, 1, 0, 0.502071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480051,-99) , 
3, 3.30837, 1, 0, 0.497865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473758,-99) , 
5, 0.391208, 1, 0, 0.493477,-99) , 
2, 0.0714928, 1, 0, 0.500779,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.00991381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.71668, 1, 1, 0.513553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497695,-99) , 
5, -0.253669, 1, 0, 0.5013,-99) , 
2, 0.112265, 0, 0, 0.502625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488723,-99) , 
2, -0.214223, 0, 0, 0.502008,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.00824092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498716,-99) , 
3, 1.01636, 1, 0, 0.500833,-99) , 
2, 0.215842, 0, 0, 0.501549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477943,-99) , 
3, 9.52058, 1, 0, 0.50071,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0070476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474756,-99) , 
3, 4.20285, 1, 0, 0.500185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485112,-99) , 
2, 0.0708855, 1, 0, 0.4969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480657,-99) , 
5, 0.310375, 1, 0, 0.49342,-99) , 
3, 4.6344, 1, 0, 0.498798,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0121623);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513598,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492327,-99) , 
6, 0.0237435, 0, 0, 0.49528,-99) , 
5, -0.251216, 0, 0, 0.498596,-99) , 
0, 0.490471, 1, 0, 0.499202,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00727614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.826811, 0, 1, 0.506769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484605,-99) , 
4, 0.999623, 0, 0, 0.500448,-99) , 
5, -0.786061, 1, 0, 0.501279,-99) , 
NN(
0, 
0, 
-1, 0.675845, 0, -1, 0.489139,-99) , 
5, 0.497563, 1, 0, 0.499729,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0123332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.628558, 1, 1, 0.509948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49562,-99) , 
4, 0.999524, 1, 0, 0.496363,-99) , 
0, 0.493328, 1, 0, 0.498094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471394,-99) , 
3, 9.50466, 1, 0, 0.497128,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0102669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499649,-99) , 
5, -0.706788, 0, 0, 0.505543,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.496569,-99) , 
5, -0.440243, 1, 0, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472897,-99) , 
4, 0.999048, 0, 0, 0.499155,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.00445819);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.50152,-99) , 
NN(
0, 
0, 
-1, 0.404, 0, -1, 0.486854,-99) , 
4, 0.999524, 0, 0, 0.500625,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.00658527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.816616, 0, 1, 0.510239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494254,-99) , 
5, -0.759308, 1, 0, 0.507279,-99) , 
NN(
0, 
0, 
-1, 0.490471, 0, -1, 0.497908,-99) , 
5, -0.719194, 1, 0, 0.499447,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00490599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49662,-99) , 
0, 0.505981, 1, 0, 0.509674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473712,-99) , 
4, 0.999751, 0, 0, 0.499174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472898,-99) , 
0, 0.496594, 1, 0, 0.486053,-99) , 
4, 0.999524, 0, 0, 0.498417,-99) , 
0, 0.504757, 0, 0, 0.49908,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00635291);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213205, 1, 1, 0.502679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484093,-99) , 
3, 9.40614, 1, 0, 0.50198,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0058566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498657,-99) , 
2, 0.222903, 0, 0, 0.499173,-99) , 
3, 9.42963, 0, 0, 0.499857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481107,-99) , 
4, 0.999048, 0, 0, 0.499222,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.00712579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.42186, 0, 1, 0.504339,-99) , 
NN(
0, 
0, 
-1, 5.23888, 1, -1, 0.497189,-99) , 
5, 0.40347, 0, 0, 0.498387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485341,-99) , 
3, 9.07715, 1, 0, 0.49783,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0092726);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489464,-99) , 
3, 9.40614, 1, 0, 0.501945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483721,-99) , 
5, -0.867303, 1, 0, 0.491349,-99) , 
5, -0.72134, 0, 0, 0.50028,-99) , 
NN(
0, 
0, 
-1, -0.0713877, 1, -1, 0.491242,-99) , 
0, 0.493328, 0, 0, 0.499149,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0087697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.826802, 0, 1, 0.509372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490389,-99) , 
5, -0.663803, 0, 0, 0.499672,-99) , 
5, -0.786051, 1, 0, 0.500956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487879,-99) , 
0, 0.500812, 1, 0, 0.49971,-99) , 
NN(
0, 
0, 
-1, 0.495597, 1, -1, 0.48315,-99) , 
0, 0.498091, 0, 0, 0.491191,-99) , 
5, 0.497566, 1, 0, 0.499706,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00433038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484633,-99) , 
4, 0.999048, 0, 0, 0.499738,-99) , 
5, 0.778356, 0, 0, 0.500486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474118,-99) , 
6, 0.0237836, 1, 0, 0.499611,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.00713696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497837,-99) , 
4, 0.999048, 1, 0, 0.498296,-99) , 
0, 0.490471, 1, 0, 0.498899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477266,-99) , 
6, 0.0237868, 1, 0, 0.498181,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00658407);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.502698,-99) , 
NN(
0, 
0, 
-1, 0.99907, 1, -1, 0.487657,-99) , 
4, 0.999524, 0, 0, 0.501773,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.00997228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484998,-99) , 
0, 0.490471, 0, 0, 0.49843,-99) , 
2, -0.0714359, 1, 0, 0.502507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496205,-99) , 
4, 0.999524, 1, 0, 0.497034,-99) , 
3, 9.42206, 0, 0, 0.497575,-99) , 
0, 0.494281, 1, 0, 0.498443,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00761565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491918,-99) , 
5, -0.813714, 0, 0, 0.500344,-99) , 
3, 9.54511, 0, 0, 0.501291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486093,-99) , 
0, 0.493737, 0, 0, 0.498372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47752,-99) , 
0, 0.5019, 1, 0, 0.495128,-99) , 
5, 0.303984, 1, 0, 0.499991,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.00696107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496379,-99) , 
3, 1.4654, 1, 0, 0.510381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498251,-99) , 
2, 0.17708, 0, 0, 0.498948,-99) , 
4, 0.999524, 1, 0, 0.499649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484574,-99) , 
3, 9.52224, 1, 0, 0.499097,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00904198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494504,-99) , 
5, 0.590607, 1, 0, 0.511976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490736,-99) , 
5, -0.0643715, 1, 0, 0.500151,-99) , 
5, 0.309906, 0, 0, 0.502455,-99) , 
NN(
0, 
0, 
-1, 0.0712416, 1, -1, 0.49653,-99) , 
0, 0.499995, 0, 0, 0.498489,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.00845066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498217,-99) , 
3, 9.42872, 0, 0, 0.499275,-99) , 
NN(
0, 
0, 
-1, 0.3021, 0, -1, 0.485589,-99) , 
4, 0.999841, 0, 0, 0.498285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469894,-99) , 
5, 0.401025, 0, 0, 0.488708,-99) , 
4, 0.999524, 0, 0, 0.497695,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00514473);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.493328, 1, 1, 0.502206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487062,-99) , 
4, 0.999048, 0, 0, 0.501688,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00778668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49994,-99) , 
3, 4.16928, 1, 0, 0.51561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493511,-99) , 
5, -0.812897, 0, 0, 0.499244,-99) , 
3, 1.83089, 0, 0, 0.508281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47891,-99) , 
3, 9.28099, 1, 0, 0.499401,-99) , 
NN(
0, 
0, 
-1, 1.01925, 0, -1, 0.491486,-99) , 
5, -0.559014, 0, 0, 0.498219,-99) , 
5, -0.719368, 1, 0, 0.499878,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.00830934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497738, 0, 1, 0.519127,-99) , 
NN(
0, 
0, 
-1, 1.02188, 0, -1, 0.497261,-99) , 
4, 0.999524, 1, 0, 0.498628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485462,-99) , 
3, 9.50853, 1, 0, 0.498149,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.00757963);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499304,-99) , 
0, 0.49809, 1, 0, 0.50207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486439,-99) , 
5, 0.679239, 1, 0, 0.501359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481691,-99) , 
4, 0.999048, 0, 0, 0.500689,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.00927744);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.44374, 1, 1, 0.509688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497493,-99) , 
5, -0.719293, 1, 0, 0.498881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490136,-99) , 
2, 0.0724463, 0, 0, 0.493873,-99) , 
0, 0.493782, 0, 0, 0.498075,-99) , 
0, 0.503805, 0, 0, 0.499137,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.00789439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49991,-99) , 
5, -0.0646221, 1, 0, 0.50286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483821,-99) , 
5, -0.259373, 0, 0, 0.492537,-99) , 
0, 0.504349, 1, 0, 0.502113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483458,-99) , 
0, 0.490471, 0, 0, 0.501388,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0128132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4912,-99) , 
6, 0.000701733, 0, 0, 0.503521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482367,-99) , 
6, 0.0147371, 1, 0, 0.502599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479347,-99) , 
6, 0.0238062, 1, 0, 0.50182,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0126667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499716,-99) , 
3, 2.00808, 1, 0, 0.505844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481791,-99) , 
0, 0.503125, 1, 0, 0.495239,-99) , 
3, 4.54757, 1, 0, 0.503405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492691,-99) , 
2, 0.0714036, 1, 0, 0.503368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492855,-99) , 
3, 0.755084, 1, 0, 0.494279,-99) , 
3, 4.63847, 0, 0, 0.496033,-99) , 
0, 0.499043, 0, 0, 0.499121,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.00387344);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214208, 1, 1, 0.501304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485818,-99) , 
0, 0.490335, 1, 0, 0.492114,-99) , 
0, 0.492376, 0, 0, 0.500497,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.00883494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49545,-99) , 
5, -0.2517, 1, 0, 0.498793,-99) , 
3, 9.42725, 0, 0, 0.499562,-99) , 
NN(
0, 
0, 
-1, 0.581644, 0, -1, 0.485047,-99) , 
4, 0.999524, 0, 0, 0.498667,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.00517185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18631, 0, 1, 0.501511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488284,-99) , 
4, 0.999637, 0, 0, 0.500961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478568,-99) , 
4, 0.999048, 0, 0, 0.500213,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0119981);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488813,-99) , 
3, 1.01233, 0, 0, 0.505999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493142,-99) , 
0, 0.494417, 0, 0, 0.500565,-99) , 
5, -0.43958, 1, 0, 0.502618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497926,-99) , 
5, 0.309913, 0, 0, 0.500243,-99) , 
NN(
0, 
0, 
-1, -0.0689596, 0, -1, 0.494257,-99) , 
0, 0.499632, 0, 0, 0.497847,-99) , 
0, 0.497138, 1, 0, 0.499734,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.00875378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237559, 0, 1, 0.503972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488204,-99) , 
3, 4.78523, 1, 0, 0.498203,-99) , 
5, -0.158166, 1, 0, 0.501391,-99) , 
NN(
0, 
0, 
-1, -0.0713936, 1, -1, 0.489191,-99) , 
0, 0.493329, 0, 0, 0.499871,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.00784931);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498883,-99) , 
3, 9.42725, 0, 0, 0.499774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480384,-99) , 
4, 0.999796, 0, 0, 0.498776,-99) , 
NN(
0, 
0, 
-1, 0.494418, 0, -1, 0.479219,-99) , 
4, 0.999524, 0, 0, 0.49759,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00811523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44598, 1, 1, 0.519689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49829,-99) , 
3, 6.8258, 0, 0, 0.499278,-99) , 
4, 0.999524, 1, 0, 0.500546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48259,-99) , 
3, 9.50466, 1, 0, 0.499889,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0113541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483188,-99) , 
5, -0.625579, 0, 0, 0.496386,-99) , 
3, 4.63847, 1, 0, 0.503677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490492,-99) , 
3, 3.32652, 0, 0, 0.493337,-99) , 
3, 4.60587, 0, 0, 0.496501,-99) , 
0, 0.5019, 1, 0, 0.502366,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0131137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493126,-99) , 
2, 0.071006, 1, 0, 0.501292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486407,-99) , 
2, -0.0204969, 1, 0, 0.490965,-99) , 
3, 0.99893, 0, 0, 0.499126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477565,-99) , 
3, 9.50466, 1, 0, 0.498341,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.00789488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49941,-99) , 
3, 9.18769, 0, 0, 0.500407,-99) , 
NN(
0, 
0, 
-1, 0.30214, 0, -1, 0.478181,-99) , 
4, 0.999819, 0, 0, 0.499073,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.477422,-99) , 
4, 0.999524, 0, 0, 0.497771,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.00585773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.501544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483211,-99) , 
4, 0.999751, 0, 0, 0.500868,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.484423,-99) , 
4, 0.999524, 0, 0, 0.499864,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.00976118);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498254,-99) , 
5, -0.258044, 1, 0, 0.508985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492652,-99) , 
2, -0.207164, 0, 0, 0.504302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496755,-99) , 
0, 0.493737, 1, 0, 0.497797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486433,-99) , 
0, 0.490471, 0, 0, 0.497416,-99) , 
2, -0.0711507, 1, 0, 0.498557,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.00479642);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42725, 0, 1, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0.404, 0, -1, 0.486586,-99) , 
4, 0.999524, 0, 0, 0.50076,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.00734788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490255,-99) , 
3, 0.954545, 0, 0, 0.49864,-99) , 
3, 8.80284, 0, 0, 0.499533,-99) , 
NN(
0, 
0, 
-1, 0.99907, 1, -1, 0.487301,-99) , 
4, 0.999524, 0, 0, 0.498788,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0067798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497838,-99) , 
3, 2.46186, 1, 0, 0.507878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496724,-99) , 
0, 0.49809, 0, 0, 0.499218,-99) , 
5, 0.59116, 0, 0, 0.499985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487475,-99) , 
3, 9.50853, 1, 0, 0.499536,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.00929644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.48049, 1, 1, 0.509761,-99) , 
NN(
0, 
0, 
-1, 0.49053, 0, -1, 0.498413,-99) , 
0, 0.499859, 0, 0, 0.500621,-99) , 
NN(
0, 
0, 
-1, -0.35133, 1, -1, 0.488744,-99) , 
0, 0.5019, 1, 0, 0.49846,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0086476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49043,-99) , 
6, 0.000215956, 0, 0, 0.509093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484489,-99) , 
5, -0.812862, 0, 0, 0.499057,-99) , 
6, 0.00113365, 1, 0, 0.500725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479988,-99) , 
6, 0.0238062, 1, 0, 0.500039,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0112286);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0712485, 1, 1, 0.505691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521346,-99) , 
NN(
0, 
0, 
-1, -0.607775, 0, -1, 0.495194,-99) , 
6, 0.0238062, 0, 0, 0.496407,-99) , 
5, 0.0295786, 0, 0, 0.499643,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0070103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49864,-99) , 
0, 0.493328, 1, 0, 0.500028,-99) , 
4, 0.999048, 1, 0, 0.500921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489085,-99) , 
3, 9.50466, 1, 0, 0.500484,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.010977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.505861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477482,-99) , 
3, 5.10348, 1, 0, 0.49678,-99) , 
0, 0.500948, 1, 0, 0.503545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496172,-99) , 
3, 4.58226, 0, 0, 0.498023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490691,-99) , 
0, 0.494281, 0, 0, 0.496812,-99) , 
5, 0.123174, 1, 0, 0.501555,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0061144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.501817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48046,-99) , 
2, 0.0700815, 1, 0, 0.494014,-99) , 
4, 0.999864, 0, 0, 0.500938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475921,-99) , 
4, 0.999048, 0, 0, 0.500098,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00527944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.35429, 1, 1, 0.51173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482375,-99) , 
4, 0.999592, 0, 0, 0.499954,-99) , 
0, 0.491424, 1, 0, 0.500637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470714,-99) , 
4, 0.999048, 0, 0, 0.499639,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00992698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495778, 0, 1, 0.520771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494566,-99) , 
0, 0.499043, 1, 0, 0.51121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483299,-99) , 
4, 0.999932, 0, 0, 0.498384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478368,-99) , 
4, 0.999524, 0, 0, 0.497581,-99) , 
5, 0.59116, 0, 0, 0.498838,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.012848);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497363,-99) , 
6, 0.00113233, 0, 0, 0.505478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494765,-99) , 
6, 0.0147227, 0, 0, 0.495888,-99) , 
5, -0.0640185, 0, 0, 0.499763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4829,-99) , 
6, 0.0237836, 1, 0, 0.49919,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.00757492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.487322, 0, 1, 0.516255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49492,-99) , 
5, -0.0646221, 1, 0, 0.498684,-99) , 
4, 0.999524, 1, 0, 0.499761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483872,-99) , 
3, 9.25868, 1, 0, 0.499125,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00776731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498415,-99) , 
3, 9.42206, 0, 0, 0.499172,-99) , 
4, 0.999048, 1, 0, 0.499771,-99) , 
NN(
0, 
0, 
-1, 0.493646, 1, -1, 0.490581,-99) , 
0, 0.494281, 0, 0, 0.498182,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00541636);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.353284, 0, 1, 0.50866,-99) , 
NN(
0, 
0, 
-1, 0.0238062, 1, -1, 0.49766,-99) , 
0, 0.504757, 0, 0, 0.498301,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.00864661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491565,-99) , 
0, 0.498408, 1, 0, 0.501482,-99) , 
0, 0.500948, 0, 0, 0.505638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498331,-99) , 
0, 0.501083, 1, 0, 0.501556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493619,-99) , 
5, -0.159395, 0, 0, 0.496707,-99) , 
0, 0.499043, 0, 0, 0.498717,-99) , 
2, 0.0718054, 0, 0, 0.499763,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00985635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.652487, 1, 1, 0.516892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493515,-99) , 
5, 0.717923, 1, 0, 0.500448,-99) , 
0, 0.499042, 0, 0, 0.506889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497603,-99) , 
2, -0.0694307, 1, 0, 0.498748,-99) , 
NN(
0, 
0, 
-1, -0.0711095, 0, -1, 0.490819,-99) , 
3, 4.59193, 1, 0, 0.497116,-99) , 
5, 0.496592, 0, 0, 0.498392,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00366774);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509744,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49154,-99) , 
3, 9.13053, 1, 0, 0.500735,-99) , 
5, -0.906431, 1, 0, 0.501142,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.00484232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.00657, 0, 1, 0.500937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482319,-99) , 
4, 0.999683, 0, 0, 0.500028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478497,-99) , 
4, 0.999048, 0, 0, 0.499301,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.00732615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498363,-99) , 
0, 0.502852, 0, 0, 0.499391,-99) , 
3, 9.18769, 0, 0, 0.500316,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.486844,-99) , 
4, 0.999524, 0, 0, 0.499508,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.00777409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495752,-99) , 
3, 2.26522, 1, 0, 0.49896,-99) , 
2, 0.214291, 0, 0, 0.499663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48263,-99) , 
3, 9.16907, 1, 0, 0.498967,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.00747229);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475715,-99) , 
3, 9.50466, 1, 0, 0.501999,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0102523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489973, 0, 1, 0.514791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496998,-99) , 
6, 0.0237687, 0, 0, 0.497616,-99) , 
0, 0.491424, 1, 0, 0.498594,-99) , 
NN(
0, 
0, 
-1, 0.99907, 1, -1, 0.478235,-99) , 
4, 0.999524, 0, 0, 0.497361,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0109516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493587,-99) , 
6, 0.00269899, 0, 0, 0.498598,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.483989,-99) , 
6, 0.0113362, 1, 0, 0.497272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48165,-99) , 
6, 0.0238062, 1, 0, 0.496744,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00862541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.502737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48759,-99) , 
5, -0.765473, 1, 0, 0.494736,-99) , 
5, -0.621151, 0, 0, 0.500635,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.4888,-99) , 
5, 0.59116, 1, 0, 0.499581,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.00990594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497131,-99) , 
0, 0.5019, 0, 0, 0.498856,-99) , 
3, 9.42725, 0, 0, 0.499596,-99) , 
NN(
0, 
0, 
-1, 0.99907, 1, -1, 0.482096,-99) , 
4, 0.999524, 0, 0, 0.498537,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00628927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.508176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485834,-99) , 
4, 0.999864, 0, 0, 0.499345,-99) , 
5, 0.496589, 0, 0, 0.500342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479458,-99) , 
4, 0.999048, 0, 0, 0.499644,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.00771423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496187, 1, 1, 0.514833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49834,-99) , 
2, 0.071006, 0, 0, 0.49949,-99) , 
5, 0.59116, 0, 0, 0.500861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486465,-99) , 
3, 9.16907, 1, 0, 0.500274,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.00999361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493049,-99) , 
0, 0.502852, 1, 0, 0.50166,-99) , 
NN(
0, 
0, 
-1, -0.00339788, 0, -1, 0.493877,-99) , 
5, -0.4384, 0, 0, 0.498823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476746,-99) , 
6, 0.0237868, 1, 0, 0.498085,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00638505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.764988, 1, 1, 0.516226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492639,-99) , 
3, 5.33899, 1, 0, 0.499897,-99) , 
5, 0.684759, 0, 0, 0.50078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480485,-99) , 
3, 9.26255, 1, 0, 0.499978,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.00654956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493273,-99) , 
3, 4.08999, 1, 0, 0.499021,-99) , 
2, -0.214034, 1, 0, 0.499914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478521,-99) , 
3, 9.40614, 1, 0, 0.499107,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0116307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497221,-99) , 
0, 0.494281, 1, 0, 0.499739,-99) , 
5, -0.57658, 0, 0, 0.502371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495486,-99) , 
2, 0.133671, 0, 0, 0.496513,-99) , 
2, 0.215243, 0, 0, 0.497346,-99) , 
5, -0.532008, 1, 0, 0.498899,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.00912574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498097,-99) , 
5, -0.533541, 1, 0, 0.500541,-99) , 
4, 0.999048, 1, 0, 0.501216,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, -1, 0.48687,-99) , 
0, 0.492376, 0, 0, 0.49996,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00536349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41142, 1, 1, 0.514867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499499,-99) , 
2, -0.100223, 1, 0, 0.500402,-99) , 
4, 0.999524, 1, 0, 0.501296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484182,-99) , 
3, 9.25868, 1, 0, 0.500619,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.008094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238062, 0, 1, 0.503618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48848,-99) , 
0, 0.494871, 0, 0, 0.498567,-99) , 
5, 0.02922, 1, 0, 0.501849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -1, 0.497582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486368,-99) , 
5, -0.0745714, 0, 0, 0.491342,-99) , 
0, 0.503986, 1, 0, 0.493649,-99) , 
0, 0.502852, 1, 0, 0.500779,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0120103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498811,-99) , 
3, 3.90539, 1, 0, 0.511093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478028,-99) , 
5, 0.40399, 1, 0, 0.505359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512697,-99) , 
NN(
0, 
0, 
-1, -0.15302, 0, -1, 0.495902,-99) , 
5, 0.684163, 0, 0, 0.496832,-99) , 
2, 0.071449, 0, 0, 0.498132,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0117545);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491546,-99) , 
3, 2.6903, 1, 0, 0.509222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496989,-99) , 
2, -0.0710498, 1, 0, 0.499359,-99) , 
5, 0.465853, 1, 0, 0.503731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496856,-99) , 
6, 0.0102027, 0, 0, 0.498242,-99) , 
6, 0.0238062, 0, 0, 0.499456,-99) , 
5, 0.216344, 0, 0, 0.500546,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0113139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.535616, 0, 1, 0.512314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491313,-99) , 
0, 0.489836, 0, 0, 0.509006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49958,-99) , 
0, 0.500842, 1, 0, 0.50369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494595,-99) , 
5, -0.626823, 1, 0, 0.496667,-99) , 
0, 0.497455, 0, 0, 0.501574,-99) , 
0, 0.494281, 1, 0, 0.502884,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0124888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.505365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478453,-99) , 
5, -0.867187, 1, 0, 0.495002,-99) , 
5, -0.814059, 0, 0, 0.504326,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.485775,-99) , 
4, 0.999524, 0, 0, 0.503214,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.00929509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.508526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482439,-99) , 
5, 0.684164, 1, 0, 0.500854,-99) , 
2, -0.0301768, 1, 0, 0.502971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485071,-99) , 
2, 0.214637, 1, 0, 0.502257,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0192267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475647,-99) , 
4, 0.999955, 0, 0, 0.506753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493957,-99) , 
4, 0.999909, 1, 0, 0.49707,-99) , 
3, 4.56646, 0, 0, 0.499129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479198,-99) , 
4, 0.999048, 0, 0, 0.498468,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.00965207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18769, 0, 1, 0.504075,-99) , 
NN(
0, 
0, 
-1, 0.296076, 0, -1, 0.487187,-99) , 
4, 0.999819, 0, 0, 0.503058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483383,-99) , 
0, 0.497138, 0, 0, 0.493358,-99) , 
4, 0.999524, 0, 0, 0.502462,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.00724138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41565, 1, 1, 0.517636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493909,-99) , 
5, 0.0292177, 1, 0, 0.498376,-99) , 
4, 0.999524, 1, 0, 0.499562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485713,-99) , 
3, 9.26255, 1, 0, 0.499019,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0113404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.669574, 1, 1, 0.511055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496219,-99) , 
5, 0.251702, 1, 0, 0.501079,-99) , 
5, 0.555608, 0, 0, 0.504127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482451,-99) , 
4, 0.999973, 0, 0, 0.496328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475632,-99) , 
4, 0.999714, 0, 0, 0.495496,-99) , 
5, 0.023778, 0, 0, 0.498524,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0102771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.159383, 0, 1, 0.519164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492586,-99) , 
0, 0.502716, 0, 0, 0.500802,-99) , 
0, 0.496186, 1, 0, 0.507243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499035,-99) , 
5, -0.345037, 1, 0, 0.501251,-99) , 
NN(
0, 
0, 
-1, -0.444557, 1, -1, 0.491376,-99) , 
0, 0.494281, 0, 0, 0.499632,-99) , 
2, -0.0714419, 1, 0, 0.500905,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00782013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493711,-99) , 
4, 0.999955, 1, 0, 0.508146,-99) , 
4, 0.999524, 1, 0, 0.512565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498321,-99) , 
5, -0.393909, 0, 0, 0.510145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498482,-99) , 
0, 0.490063, 1, 0, 0.499077,-99) , 
0, 0.504757, 0, 0, 0.499729,-99) , 
5, 0.59116, 0, 0, 0.500921,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0121061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504754,-99) , 
NN(
0, 
0, 
-1, -0.107069, 0, -1, 0.492886,-99) , 
3, 4.70793, 1, 0, 0.502374,-99) , 
NN(
NN(
0, 
0, 
-1, -0.9287, 1, 1, 0.504387,-99) , 
NN(
0, 
0, 
-1, 1.92883, 0, -1, 0.491244,-99) , 
5, -0.786125, 1, 0, 0.495257,-99) , 
5, -0.438602, 0, 0, 0.499697,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00863865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498011,-99) , 
5, 0.497036, 0, 0, 0.498982,-99) , 
3, 9.42725, 0, 0, 0.499972,-99) , 
NN(
0, 
0, 
-1, 0.497834, 1, -1, 0.481333,-99) , 
4, 0.999524, 0, 0, 0.498852,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0075045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.297905, 1, 1, 0.510888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499213,-99) , 
4, 0.999524, 1, 0, 0.500271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487527,-99) , 
3, 9.50466, 1, 0, 0.499836,-99) , 
0, 0.5019, 0, 0, 0.501893,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.00458353);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505074, 1, 1, 0.512288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499992,-99) , 
5, 0.675271, 0, 0, 0.5007,-99) , 
NN(
0, 
0, 
-1, -0.441563, 0, -1, 0.490623,-99) , 
0, 0.491469, 0, 0, 0.500022,-99) , 
0, 0.503805, 0, 0, 0.501132,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.00864083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497298, 0, 1, 0.503501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496468,-99) , 
2, 0.0711339, 0, 0, 0.498005,-99) , 
0, 0.499134, 1, 0, 0.501123,-99) , 
NN(
0, 
0, 
-1, 0.489792, 1, -1, 0.485544,-99) , 
0, 0.491424, 0, 0, 0.500206,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0105621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499209,-99) , 
5, -0.064624, 0, 0, 0.502798,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.486944,-99) , 
6, 0.0113251, 1, 0, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47322,-99) , 
6, 0.0237841, 1, 0, 0.500434,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.00742857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488734,-99) , 
5, -0.906854, 0, 0, 0.501597,-99) , 
4, 0.999048, 1, 0, 0.502433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488629,-99) , 
3, 9.40614, 1, 0, 0.501913,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.00935021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48115,-99) , 
5, -0.875281, 1, 0, 0.494782,-99) , 
5, -0.812917, 0, 0, 0.502858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498608,-99) , 
5, -0.64417, 1, 0, 0.503387,-99) , 
NN(
0, 
0, 
-1, 0.20983, 0, -1, 0.488253,-99) , 
5, -0.25278, 1, 0, 0.496289,-99) , 
0, 0.493329, 0, 0, 0.502036,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.00636829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48318,-99) , 
2, 0.0716629, 1, 0, 0.495585,-99) , 
3, 3.66683, 1, 0, 0.500126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484099,-99) , 
5, 0.7772, 1, 0, 0.499721,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.00732332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499073,-99) , 
3, 0.775095, 1, 0, 0.500541,-99) , 
0, 0.490471, 1, 0, 0.501354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491565,-99) , 
2, -0.0714419, 0, 0, 0.497674,-99) , 
NN(
0, 
0, 
-1, 0.502172, 0, -1, 0.485726,-99) , 
0, 0.499995, 1, 0, 0.49324,-99) , 
3, 4.80413, 1, 0, 0.499802,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.010444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493066,-99) , 
4, 0.999842, 0, 0, 0.50366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490809,-99) , 
4, 0.999526, 0, 0, 0.503134,-99) , 
NN(
0, 
0, 
-1, 0.715965, 1, -1, 0.48944,-99) , 
5, 0.59116, 1, 0, 0.501911,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.00583851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483966,-99) , 
5, 0.705927, 1, 0, 0.499842,-99) , 
4, 0.999048, 1, 0, 0.500541,-99) , 
NN(
0, 
0, 
-1, -0.919927, 1, -1, 0.486767,-99) , 
5, -0.813184, 0, 0, 0.499219,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0160344);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467773,-99) , 
4, 0.999524, 0, 0, 0.501974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493553,-99) , 
4, 0.999524, 1, 0, 0.495381,-99) , 
6, 0.00340085, 1, 0, 0.49846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470343,-99) , 
6, 0.0238062, 1, 0, 0.49753,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0119474);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499648,-99) , 
2, 0.214819, 0, 0, 0.500825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4913,-99) , 
6, 0.0237195, 0, 0, 0.494651,-99) , 
5, -0.346195, 0, 0, 0.498142,-99) , 
0, 0.505709, 0, 0, 0.498748,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.00852865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497628,-99) , 
5, -0.628124, 1, 0, 0.499317,-99) , 
3, 9.42864, 0, 0, 0.500056,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.483398,-99) , 
4, 0.999524, 0, 0, 0.499062,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0103628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237526, 0, 1, 0.503354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494588,-99) , 
5, 0.211525, 0, 0, 0.497271,-99) , 
0, 0.495234, 0, 0, 0.501942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501413,-99) , 
NN(
0, 
0, 
-1, 0.607948, 0, -1, 0.484297,-99) , 
0, 0.500948, 0, 0, 0.488063,-99) , 
5, 0.496589, 1, 0, 0.500174,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00939177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49661,-99) , 
5, 0.403472, 0, 0, 0.497772,-99) , 
2, -0.214683, 1, 0, 0.498566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48104,-99) , 
3, 8.85738, 1, 0, 0.497757,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.00423628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499979,-99) , 
2, -0.214584, 1, 0, 0.500424,-99) , 
4, 0.999048, 1, 0, 0.501527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484248,-99) , 
3, 9.27626, 1, 0, 0.500855,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.00806505);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.493646, 0, 1, 0.508484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497645,-99) , 
5, -0.535156, 0, 0, 0.500941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490269,-99) , 
5, -0.536457, 1, 0, 0.494953,-99) , 
0, 0.50317, 1, 0, 0.500098,-99) , 
0, 0.494281, 1, 0, 0.501578,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0100091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498249,-99) , 
5, 0.403479, 1, 0, 0.503029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496347,-99) , 
0, 0.491424, 1, 0, 0.497379,-99) , 
5, 0.122782, 0, 0, 0.49911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47953,-99) , 
6, 0.0237453, 1, 0, 0.498444,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00746776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499902,-99) , 
6, 0.0146978, 0, 0, 0.501023,-99) , 
6, 0.0237449, 0, 0, 0.502419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493368,-99) , 
0, 0.499994, 1, 0, 0.500356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481788,-99) , 
1, 0.00550162, 1, 0, 0.498374,-99) , 
5, 0.0292153, 1, 0, 0.501022,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.00878165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504575, 0, 1, 0.507568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491521,-99) , 
0, 0.506027, 1, 0, 0.505882,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498822,-99) , 
5, -0.0937527, 0, 0, 0.499844,-99) , 
NN(
0, 
0, 
-1, -0.0718145, 0, -1, 0.493362,-99) , 
5, 0.119494, 1, 0, 0.49786,-99) , 
0, 0.500947, 0, 0, 0.499873,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.00978624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497947,-99) , 
3, 4.5158, 1, 0, 0.509938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497191,-99) , 
0, 0.499995, 1, 0, 0.50124,-99) , 
2, -0.0715884, 1, 0, 0.502683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482682,-99) , 
6, 0.0238062, 1, 0, 0.502015,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.011015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40231, 1, 1, 0.524002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496406,-99) , 
3, 0.989457, 0, 0, 0.502605,-99) , 
4, 0.999524, 1, 0, 0.503932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489719,-99) , 
3, 9.16907, 1, 0, 0.503354,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.015632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497861,-99) , 
2, 0.0709566, 1, 0, 0.508895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489593,-99) , 
3, 0.561644, 0, 0, 0.498143,-99) , 
3, 1.04141, 0, 0, 0.506401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494973,-99) , 
2, -0.213605, 1, 0, 0.496459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467132,-99) , 
3, 9.52716, 1, 0, 0.495268,-99) , 
5, -0.438605, 1, 0, 0.499518,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.00603165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.511176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496268,-99) , 
2, 0.207491, 1, 0, 0.507011,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487783,-99) , 
3, 8.73647, 1, 0, 0.500972,-99) , 
2, 0.071449, 0, 0, 0.501891,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.00428692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483751,-99) , 
5, 0.683663, 1, 0, 0.49949,-99) , 
3, 9.12773, 0, 0, 0.500371,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.489588,-99) , 
4, 0.999524, 0, 0, 0.499715,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0092536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502534, 1, 1, 0.512333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499958,-99) , 
2, 0.153315, 0, 0, 0.501518,-99) , 
2, -0.0710506, 1, 0, 0.503589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497519,-99) , 
5, -0.358167, 0, 0, 0.500131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493472,-99) , 
5, 0.698135, 0, 0, 0.494979,-99) , 
5, -0.157602, 1, 0, 0.497774,-99) , 
0, 0.499995, 0, 0, 0.499692,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00686104);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12937, 0, 1, 0.502535,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.482587,-99) , 
4, 0.999524, 0, 0, 0.501335,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.00719862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489742,-99) , 
2, -0.0711566, 0, 0, 0.511213,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501766,-99) , 
3, 6.95824, 0, 0, 0.502611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489448,-99) , 
5, 0.68476, 1, 0, 0.5019,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.00951897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498179,-99) , 
5, -0.352751, 0, 0, 0.507186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496236,-99) , 
5, -0.15791, 1, 0, 0.499492,-99) , 
0, 0.500947, 0, 0, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482731,-99) , 
4, 0.999048, 0, 0, 0.500784,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.00964026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00564558, 1, 1, 0.502976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483797,-99) , 
6, 0.00678379, 1, 0, 0.494714,-99) , 
5, -0.532996, 0, 0, 0.500525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477542,-99) , 
6, 0.0237453, 1, 0, 0.49976,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0135987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500358, 1, 1, 0.505828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492535,-99) , 
3, 0.998619, 1, 0, 0.495699,-99) , 
0, 0.49809, 0, 0, 0.500957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494507,-99) , 
2, 0.212259, 0, 0, 0.495783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47877,-99) , 
3, 9.28414, 1, 0, 0.495047,-99) , 
5, -0.532, 1, 0, 0.496891,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0155062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494145, 0, 1, 0.514309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4961,-99) , 
0, 0.499451, 0, 0, 0.503622,-99) , 
0, 0.496186, 1, 0, 0.50701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48372,-99) , 
4, 0.999982, 0, 0, 0.497274,-99) , 
4, 0.99981, 1, 0, 0.498197,-99) , 
5, 0.216775, 0, 0, 0.500457,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00645929);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516579,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497121,-99) , 
5, 0.777729, 0, 0, 0.497619,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00787228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494639,-99) , 
3, 4.75234, 1, 0, 0.512788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49817,-99) , 
2, -0.0189946, 1, 0, 0.499749,-99) , 
2, -0.193869, 1, 0, 0.500492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478748,-99) , 
2, 0.214167, 1, 0, 0.49965,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0086209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497566,-99) , 
0, 0.500947, 0, 0, 0.499463,-99) , 
4, 0.999048, 1, 0, 0.500282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483028,-99) , 
3, 9.40614, 1, 0, 0.499635,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00974669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493924,-99) , 
3, 3.55719, 1, 0, 0.500337,-99) , 
3, 9.12911, 0, 0, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0.487201, 0, -1, 0.485515,-99) , 
4, 0.999524, 0, 0, 0.50015,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0105248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497647,-99) , 
3, 8.56359, 0, 0, 0.498677,-99) , 
4, 0.999524, 1, 0, 0.499615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488616,-99) , 
5, -0.252739, 1, 0, 0.494023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477018,-99) , 
5, -0.628571, 0, 0, 0.49,-99) , 
2, -0.0718373, 0, 0, 0.498059,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0109054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.63, 0, 1, 0.504066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492472,-99) , 
2, 0.214477, 1, 0, 0.503637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511242,-99) , 
NN(
0, 
0, 
-1, -0.721187, 1, -1, 0.491171,-99) , 
2, 0.0710807, 0, 0, 0.494866,-99) , 
0, 0.500947, 1, 0, 0.501464,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00546154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495567,-99) , 
5, 0.215982, 1, 0, 0.49922,-99) , 
2, 0.214243, 0, 0, 0.499761,-99) , 
NN(
0, 
0, 
-1, -0.256823, 0, -1, 0.483496,-99) , 
0, 0.504757, 1, 0, 0.498842,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.00921291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49859,-99) , 
5, -0.10706, 1, 0, 0.501308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489778,-99) , 
5, -0.755654, 1, 0, 0.495138,-99) , 
5, -0.533533, 0, 0, 0.499418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480363,-99) , 
0, 0.505709, 1, 0, 0.498786,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0125441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502535, 1, 1, 0.511444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499794,-99) , 
5, 0.559967, 0, 0, 0.50199,-99) , 
0, 0.500948, 0, 0, 0.504244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52974,-99) , 
NN(
0, 
0, 
-1, -0.00339547, 0, -1, 0.493173,-99) , 
6, 0.0237559, 0, 0, 0.495166,-99) , 
5, -0.251216, 0, 0, 0.499735,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0049498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482537,-99) , 
4, 0.999832, 0, 0, 0.499927,-99) , 
4, 0.999728, 1, 0, 0.500505,-99) , 
NN(
0, 
0, 
-1, 0.99907, 1, -1, 0.486353,-99) , 
4, 0.999524, 0, 0, 0.499654,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.00960279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.511281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498085,-99) , 
6, 0.00566807, 0, 0, 0.500714,-99) , 
5, 0.497566, 0, 0, 0.50212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4804,-99) , 
6, 0.0238062, 1, 0, 0.501392,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.00441745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999788, 1, 1, 0.500847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488933,-99) , 
4, 0.999683, 0, 0, 0.50027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472357,-99) , 
4, 0.999048, 0, 0, 0.499351,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.00525126);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.4299, 0, 1, 0.502093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481822,-99) , 
4, 0.999048, 0, 0, 0.501421,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0135461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493366,-99) , 
5, 0.466369, 1, 0, 0.501923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489279,-99) , 
0, 0.502852, 0, 0, 0.492324,-99) , 
5, -0.531993, 0, 0, 0.49907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482557,-99) , 
6, 0.0237836, 1, 0, 0.498523,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0079552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.764991, 0, 1, 0.518275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497998,-99) , 
5, 0.363848, 0, 0, 0.498919,-99) , 
5, 0.684758, 0, 0, 0.499968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479653,-99) , 
3, 8.98381, 1, 0, 0.499084,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0124287);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498397,-99) , 
3, 1.93432, 0, 0, 0.507144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489825,-99) , 
2, 0.0742397, 1, 0, 0.504674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483236,-99) , 
0, 0.502852, 1, 0, 0.502168,-99) , 
NN(
0, 
0, 
-1, 5.84008, 1, -1, 0.495152,-99) , 
5, 0.0559479, 0, 0, 0.498217,-99) , 
5, -0.625738, 1, 0, 0.499757,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0118369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.32663, 0, 1, 0.504626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47062,-99) , 
2, -0.0690867, 0, 0, 0.491113,-99) , 
3, 5.7275, 1, 0, 0.502782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496864,-99) , 
0, 0.494872, 1, 0, 0.500713,-99) , 
NN(
0, 
0, 
-1, 0.590754, 1, -1, 0.48727,-99) , 
0, 0.497139, 1, 0, 0.49287,-99) , 
5, 0.403972, 1, 0, 0.501128,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00645847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.812791, 1, 1, 0.501915,-99) , 
NN(
0, 
0, 
-1, 0.0148751, 0, -1, 0.488017,-99) , 
6, 0.0113179, 1, 0, 0.50067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484941,-99) , 
6, 0.0237688, 1, 0, 0.500139,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00548296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237559, 0, 1, 0.501267,-99) , 
NN(
0, 
0, 
-1, 0.43021, 0, -1, 0.494594,-99) , 
5, 0.216342, 1, 0, 0.4997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482722,-99) , 
4, 0.999048, 0, 0, 0.499132,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0134305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494905,-99) , 
3, 0.370696, 1, 0, 0.511589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494401,-99) , 
3, 4.64455, 0, 0, 0.496205,-99) , 
3, 0.535087, 1, 0, 0.497337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482349,-99) , 
3, 9.1652, 1, 0, 0.496718,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00556901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501462,-99) , 
NN(
0, 
0, 
-1, 0.0011189, 1, -1, 0.491007,-99) , 
5, 0.591161, 1, 0, 0.50051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478652,-99) , 
6, 0.0238062, 1, 0, 0.499785,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.00903811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485979,-99) , 
5, 0.71922, 1, 0, 0.501187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488972,-99) , 
3, 0.892476, 1, 0, 0.494466,-99) , 
5, -0.720123, 0, 0, 0.500066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479181,-99) , 
4, 0.999048, 0, 0, 0.499366,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0115103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491405,-99) , 
5, -0.773971, 1, 0, 0.50143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495378,-99) , 
0, 0.49224, 1, 0, 0.496182,-99) , 
5, -0.720784, 1, 0, 0.497023,-99) , 
NN(
0, 
0, 
-1, 0.504712, 0, -1, 0.483821,-99) , 
0, 0.503805, 1, 0, 0.49586,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0109342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495999,-99) , 
0, 0.494957, 1, 0, 0.500819,-99) , 
0, 0.496684, 0, 0, 0.502354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495267,-99) , 
4, 0.999524, 1, 0, 0.496099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47996,-99) , 
3, 9.06806, 1, 0, 0.495369,-99) , 
0, 0.497138, 1, 0, 0.498142,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0098813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503169, 0, 1, 0.506154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489592,-99) , 
4, 0.999905, 0, 0, 0.500453,-99) , 
5, 0.117706, 0, 0, 0.502198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486789,-99) , 
5, 0.374321, 1, 0, 0.497956,-99) , 
NN(
0, 
0, 
-1, 1.2143, 0, -1, 0.486533,-99) , 
5, -0.159395, 0, 0, 0.491484,-99) , 
0, 0.494281, 0, 0, 0.500348,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0112412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.715959, 0, 1, 0.504109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491204,-99) , 
0, 0.501899, 1, 0, 0.502023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496353,-99) , 
2, 0.0739964, 0, 0, 0.49804,-99) , 
NN(
0, 
0, 
-1, 5.48955, 1, -1, 0.491103,-99) , 
5, -0.594408, 0, 0, 0.495621,-99) , 
5, 0.216771, 0, 0, 0.497255,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00529879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499517,-99) , 
0, 0.49605, 1, 0, 0.500746,-99) , 
NN(
0, 
0, 
-1, 0.49224, 1, -1, 0.493558,-99) , 
0, 0.493328, 0, 0, 0.499861,-99) , 
NN(
0, 
0, 
-1, -0.866322, 1, -1, 0.492395,-99) , 
5, -0.812856, 0, 0, 0.499149,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0087081);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488283,-99) , 
5, 0.497038, 1, 0, 0.500103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494759,-99) , 
5, 0.489132, 0, 0, 0.495925,-99) , 
0, 0.499043, 0, 0, 0.497673,-99) , 
4, 0.999048, 1, 0, 0.498268,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00741455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521588,-99) , 
NN(
0, 
0, 
-1, 0.0238062, 1, -1, 0.497938,-99) , 
2, 0.213801, 0, 0, 0.498824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471223,-99) , 
3, 9.50466, 1, 0, 0.497854,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.00705334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490671,-99) , 
4, 0.999773, 0, 0, 0.50105,-99) , 
4, 0.999048, 1, 0, 0.501439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493653,-99) , 
5, -0.0419507, 1, 0, 0.499564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475181,-99) , 
5, -0.536367, 0, 0, 0.491292,-99) , 
0, 0.503804, 1, 0, 0.500538,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0100981);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495796,-99) , 
4, 0.999932, 0, 0, 0.501711,-99) , 
NN(
0, 
0, 
-1, 0.999977, 0, -1, 0.492785,-99) , 
0, 0.5019, 1, 0, 0.50011,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.474895,-99) , 
4, 0.999524, 0, 0, 0.498626,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0113619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487192,-99) , 
5, -0.627696, 0, 0, 0.502558,-99) , 
0, 0.502852, 0, 0, 0.506243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491073,-99) , 
3, 4.42889, 1, 0, 0.502546,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.495644,-99) , 
5, -0.625738, 1, 0, 0.497299,-99) , 
2, 0.0717083, 0, 0, 0.498654,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00789454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495996,-99) , 
0, 0.49809, 1, 0, 0.498814,-99) , 
2, 0.132781, 0, 0, 0.499559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484371,-99) , 
2, 0.214397, 1, 0, 0.49896,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0054815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714846, 1, 1, 0.51137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492295,-99) , 
3, 5.92327, 1, 0, 0.499736,-99) , 
5, 0.590129, 0, 0, 0.50077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481034,-99) , 
3, 9.50466, 1, 0, 0.500065,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0107614);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490509,-99) , 
6, 0.0113223, 1, 0, 0.503432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493918,-99) , 
5, -0.866275, 1, 0, 0.496448,-99) , 
5, -0.532, 0, 0, 0.501352,-99) , 
6, 0.0237841, 0, 0, 0.501853,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0081454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510818,-99) , 
NN(
0, 
0, 
-1, -0.719373, 0, -1, 0.497002,-99) , 
6, 0.0237868, 0, 0, 0.497496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472491,-99) , 
4, 0.999048, 0, 0, 0.496675,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0118341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00680172, 0, 1, 0.502946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475166,-99) , 
6, 0.00453471, 1, 0, 0.489206,-99) , 
5, -0.720118, 0, 0, 0.500888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476415,-99) , 
6, 0.0238062, 1, 0, 0.500074,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0129574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.532301, 1, 1, 0.503944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48578,-99) , 
5, 0.112273, 0, 0, 0.494225,-99) , 
2, -0.0714577, 0, 0, 0.50246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490715,-99) , 
0, 0.492376, 1, 0, 0.497465,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.485627,-99) , 
5, -0.532988, 1, 0, 0.489551,-99) , 
0, 0.494281, 0, 0, 0.50024,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.010544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491968, 0, 1, 0.51067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48767,-99) , 
5, 0.202671, 0, 0, 0.496323,-99) , 
5, -0.257171, 1, 0, 0.503936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496315,-99) , 
3, 0.960222, 1, 0, 0.498332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485411,-99) , 
3, 8.93109, 1, 0, 0.497755,-99) , 
0, 0.493328, 1, 0, 0.498548,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0106546);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498163,-99) , 
5, -0.610496, 0, 0, 0.504375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493905,-99) , 
2, -0.0714577, 1, 0, 0.49663,-99) , 
5, 0.0224348, 1, 0, 0.501795,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00362283, 0, -1, 0.496785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482113,-99) , 
5, 0.114283, 0, 0, 0.488893,-99) , 
2, -0.0711027, 0, 0, 0.495572,-99) , 
0, 0.499043, 0, 0, 0.498188,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.00607207);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498809,-99) , 
3, 4.50804, 1, 0, 0.507318,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.498918,-99) , 
0, 0.495279, 1, 0, 0.500316,-99) , 
NN(
0, 
0, 
-1, -0.164232, 0, -1, 0.488174,-99) , 
0, 0.492376, 0, 0, 0.499257,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00790252);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.504712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499091,-99) , 
4, 0.999048, 1, 0, 0.500706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471443,-99) , 
3, 9.53351, 1, 0, 0.499527,-99) , 
5, -0.438582, 1, 0, 0.501489,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0141792);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496398,-99) , 
2, 0.078226, 1, 0, 0.506711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488638,-99) , 
2, -0.071401, 0, 0, 0.503775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493131,-99) , 
3, 1.93317, 0, 0, 0.500949,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.493873,-99) , 
5, -0.53872, 1, 0, 0.496797,-99) , 
5, 0.210844, 0, 0, 0.498593,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0112864);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481453,-99) , 
3, 7.02696, 1, 0, 0.506016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495388,-99) , 
2, 0.00335102, 0, 0, 0.499532,-99) , 
2, -0.0714577, 1, 0, 0.500601,-99) , 
5, 0.778355, 0, 0, 0.501043,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.00862749);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.215734, 1, 1, 0.50384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482005,-99) , 
4, 0.999048, 0, 0, 0.503109,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.00934597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496087,-99) , 
5, -0.532308, 1, 0, 0.49824,-99) , 
3, 9.42872, 0, 0, 0.499096,-99) , 
NN(
0, 
0, 
-1, 0.397305, 0, -1, 0.487394,-99) , 
4, 0.999524, 0, 0, 0.498386,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00600646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499634,-99) , 
2, 0.171293, 0, 0, 0.500191,-99) , 
3, 9.42864, 0, 0, 0.501491,-99) , 
NN(
0, 
0, 
-1, 0.497139, 1, -1, 0.483783,-99) , 
4, 0.999524, 0, 0, 0.500434,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0100309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498326,-99) , 
5, -0.254864, 1, 0, 0.501777,-99) , 
4, 0.999048, 1, 0, 0.502969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488551,-99) , 
5, 0.299329, 1, 0, 0.499745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478603,-99) , 
5, -0.0696159, 0, 0, 0.48963,-99) , 
2, 0.069408, 1, 0, 0.496713,-99) , 
3, 4.82503, 1, 0, 0.501775,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.013474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489791,-99) , 
5, 0.697535, 1, 0, 0.502771,-99) , 
4, 0.999048, 1, 0, 0.504032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494276,-99) , 
6, 0.0113363, 0, 0, 0.49675,-99) , 
6, 0.0238062, 0, 0, 0.49808,-99) , 
5, -0.157907, 0, 0, 0.500757,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00772704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498537,-99) , 
2, -0.0509813, 1, 0, 0.500181,-99) , 
2, -0.214223, 1, 0, 0.500879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481805,-99) , 
5, -0.906393, 0, 0, 0.500051,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00970094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491274,-99) , 
3, 4.63414, 0, 0, 0.496104,-99) , 
2, -0.0713112, 0, 0, 0.502677,-99) , 
NN(
0, 
0, 
-1, 0.490154, 1, -1, 0.485923,-99) , 
0, 0.491424, 0, 0, 0.501681,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0120504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490517,-99) , 
5, -0.719269, 0, 0, 0.503369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496389,-99) , 
2, -0.0710027, 1, 0, 0.498546,-99) , 
0, 0.500358, 1, 0, 0.500589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4919,-99) , 
3, 4.70367, 1, 0, 0.500412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490213,-99) , 
0, 0.497805, 0, 0, 0.492619,-99) , 
0, 0.495097, 1, 0, 0.496272,-99) , 
0, 0.49809, 0, 0, 0.498483,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00997893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.229549, 1, 1, 0.505213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494371,-99) , 
3, 4.83092, 0, 0, 0.49635,-99) , 
0, 0.496186, 0, 0, 0.502507,-99) , 
NN(
0, 
0, 
-1, -0.518617, 1, -1, 0.495548,-99) , 
5, -0.43839, 0, 0, 0.499884,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.00740561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.394152, 1, 1, 0.514102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489803,-99) , 
0, 0.492966, 0, 0, 0.50083,-99) , 
0, 0.491424, 1, 0, 0.501646,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.485576,-99) , 
5, 0.590126, 1, 0, 0.500212,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.00650051);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482436,-99) , 
6, 0.0136035, 1, 0, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486562,-99) , 
6, 0.0238062, 1, 0, 0.499994,-99) , 
5, 0.777728, 0, 0, 0.500482,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.00778686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.3662, 1, 1, 0.517478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498133,-99) , 
4, 0.999909, 1, 0, 0.499125,-99) , 
4, 0.999524, 1, 0, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483082,-99) , 
3, 8.91904, 1, 0, 0.499487,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.00466029);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514288,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501289,-99) , 
NN(
0, 
0, 
-1, 0.489972, 0, -1, 0.490484,-99) , 
0, 0.491424, 0, 0, 0.500677,-99) , 
2, -0.214228, 1, 0, 0.501303,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00771197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484023,-99) , 
4, 0.999751, 0, 0, 0.501096,-99) , 
NN(
0, 
0, 
-1, 0.498363, 1, -1, 0.486099,-99) , 
4, 0.999524, 0, 0, 0.500267,-99) , 
NN(
0, 
0, 
-1, -0.348731, 1, -1, 0.480116,-99) , 
0, 0.491424, 0, 0, 0.499081,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0082819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497174,-99) , 
0, 0.5019, 0, 0, 0.498552,-99) , 
2, -0.214584, 1, 0, 0.499212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482374,-99) , 
4, 0.999048, 0, 0, 0.498645,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.00816553);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497281,-99) , 
3, 0.453232, 1, 0, 0.498248,-99) , 
NN(
0, 
0, 
-1, 0.439582, 1, -1, 0.494515,-99) , 
3, 3.77481, 1, 0, 0.497212,-99) , 
5, 0.778356, 0, 0, 0.497545,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.00491255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499996, 1, 1, 0.511792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49726,-99) , 
5, 0.720423, 1, 0, 0.507078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49999,-99) , 
6, 0.0237868, 0, 0, 0.500677,-99) , 
NN(
0, 
0, 
-1, 0.429651, 0, -1, 0.487648,-99) , 
5, 0.354942, 1, 0, 0.499777,-99) , 
5, 0.497567, 0, 0, 0.500725,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.00427743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 1, 1, 0.509913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499648,-99) , 
0, 0.489927, 1, 0, 0.50027,-99) , 
0, 0.503804, 0, 0, 0.501123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486402,-99) , 
4, 0.999048, 0, 0, 0.500634,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.00860451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498573,-99) , 
5, -0.157913, 1, 0, 0.502084,-99) , 
2, -0.213233, 1, 0, 0.502692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483191,-99) , 
4, 0.999048, 0, 0, 0.502041,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00761843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49995, 0, 1, 0.503145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49038,-99) , 
2, -0.214186, 0, 0, 0.502621,-99) , 
NN(
0, 
0, 
-1, 0.505256, 1, -1, 0.492091,-99) , 
0, 0.503805, 1, 0, 0.501687,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00828177);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00300803, 1, 1, 0.511279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49981,-99) , 
4, 0.999048, 1, 0, 0.501504,-99) , 
NN(
0, 
0, 
-1, 0.0712215, 1, -1, 0.494946,-99) , 
5, -0.254864, 0, 0, 0.498282,-99) , 
0, 0.492376, 1, 0, 0.499457,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.00718522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000485369, 0, 1, 0.509945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492579,-99) , 
5, -0.812912, 0, 0, 0.500594,-99) , 
6, 0.00113252, 1, 0, 0.502143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488786,-99) , 
6, 0.0237841, 1, 0, 0.501686,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.00648682);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490945,-99) , 
5, 0.683665, 1, 0, 0.501159,-99) , 
NN(
0, 
0, 
-1, -0.442568, 1, -1, 0.495814,-99) , 
0, 0.499995, 1, 0, 0.499419,-99) , 
2, 0.2144, 0, 0, 0.499963,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0128434);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497629,-99) , 
4, 0.999996, 0, 0, 0.502625,-99) , 
NN(
0, 
0, 
-1, 0.0712797, 1, -1, 0.491514,-99) , 
4, 0.999909, 0, 0, 0.500929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48179,-99) , 
4, 0.999048, 0, 0, 0.500285,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00894405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493042,-99) , 
5, -0.625841, 0, 0, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481331,-99) , 
6, 0.013603, 1, 0, 0.499234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483742,-99) , 
6, 0.0238062, 1, 0, 0.498715,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00792601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494564,-99) , 
3, 0.37348, 1, 0, 0.51386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49873,-99) , 
5, 0.683663, 0, 0, 0.4996,-99) , 
3, 0.536947, 1, 0, 0.500651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481501,-99) , 
3, 9.11848, 1, 0, 0.499872,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.00663278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497521,-99) , 
0, 0.501084, 1, 0, 0.510537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478734,-99) , 
2, -0.214326, 0, 0, 0.499985,-99) , 
5, 0.496589, 0, 0, 0.501366,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, -1, 0.491403,-99) , 
0, 0.492376, 0, 0, 0.500492,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.00805156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498934,-99) , 
6, 0.0045338, 0, 0, 0.501234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467622,-99) , 
5, -0.722722, 0, 0, 0.493462,-99) , 
1, 0.00566603, 1, 0, 0.500002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486196,-99) , 
6, 0.0238062, 1, 0, 0.499539,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00982072);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213652, 1, 1, 0.503468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52946,-99) , 
NN(
0, 
0, 
-1, 0.00566816, 1, -1, 0.494944,-99) , 
6, 0.0238062, 0, 0, 0.496828,-99) , 
5, -0.256832, 0, 0, 0.500188,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.007529);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.438776, 1, 1, 0.506311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5091,-99) , 
NN(
0, 
0, 
-1, 0.999841, 0, -1, 0.498565,-99) , 
4, 0.999524, 1, 0, 0.499236,-99) , 
0, 0.499043, 0, 0, 0.502205,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.00536759);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.510427,-99) , 
NN(
NN(
0, 
0, 
-1, 9.12911, 0, 1, 0.500807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488256,-99) , 
4, 0.999524, 0, 0, 0.500259,-99) , 
2, 0.0715676, 0, 0, 0.501815,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.00658024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.73311, 0, 1, 0.517155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489063,-99) , 
5, 0.463279, 1, 0, 0.502125,-99) , 
5, -0.532972, 1, 0, 0.507114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512807,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.498842,-99) , 
5, 0.684165, 0, 0, 0.499615,-99) , 
0, 0.494281, 1, 0, 0.500941,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00761005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498048,-99) , 
0, 0.491424, 1, 0, 0.498874,-99) , 
3, 9.42872, 0, 0, 0.499733,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.488076,-99) , 
4, 0.999524, 0, 0, 0.499025,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.00858537);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523815,-99) , 
NN(
NN(
0, 
0, 
-1, 0.523763, 0, 1, 0.5033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479463,-99) , 
4, 0.999048, 0, 0, 0.502641,-99) , 
5, 0.777729, 0, 0, 0.503186,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.012171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499632, 0, 1, 0.510524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493888,-99) , 
0, 0.503124, 1, 0, 0.500633,-99) , 
5, 0.497035, 0, 0, 0.501866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492668,-99) , 
3, 1.22699, 1, 0, 0.498036,-99) , 
NN(
0, 
0, 
-1, 0.49487, 0, -1, 0.481914,-99) , 
3, 4.8082, 1, 0, 0.495203,-99) , 
0, 0.497138, 0, 0, 0.499257,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.00902764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505573, 0, 1, 0.512651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494576,-99) , 
5, -0.628411, 0, 0, 0.507972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497423,-99) , 
2, -0.214277, 1, 0, 0.498085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484764,-99) , 
0, 0.502126, 1, 0, 0.497497,-99) , 
0, 0.502852, 0, 0, 0.498876,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.00495248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499837,-99) , 
4, 0.999524, 1, 0, 0.500451,-99) , 
2, -0.212804, 1, 0, 0.501161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474029,-99) , 
3, 9.0651, 1, 0, 0.500034,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.00542463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499586,-99) , 
0, 0.500947, 0, 0, 0.500944,-99) , 
2, 0.213801, 0, 0, 0.501575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485069,-99) , 
3, 9.06123, 1, 0, 0.50088,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0113793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497558, 0, 1, 0.509625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490068,-99) , 
5, 0.715356, 1, 0, 0.502742,-99) , 
0, 0.496185, 1, 0, 0.504915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493452,-99) , 
4, 0.999982, 0, 0, 0.500427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477019,-99) , 
4, 0.999619, 0, 0, 0.499616,-99) , 
5, 0.216347, 0, 0, 0.500963,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0110055);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499175,-99) , 
0, 0.495656, 0, 0, 0.503326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48532,-99) , 
5, 0.122794, 1, 0, 0.495803,-99) , 
0, 0.499677, 1, 0, 0.502252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493153,-99) , 
2, 0.0693184, 0, 0, 0.495802,-99) , 
NN(
0, 
0, 
-1, -0.352184, 0, -1, 0.483349,-99) , 
3, 4.50394, 1, 0, 0.492679,-99) , 
0, 0.500947, 1, 0, 0.499875,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0119814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491738,-99) , 
4, 0.999841, 0, 0, 0.504337,-99) , 
4, 0.999524, 1, 0, 0.505794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493361,-99) , 
3, 2.66289, 1, 0, 0.498919,-99) , 
NN(
0, 
0, 
-1, 8.84806, 1, -1, 0.486255,-99) , 
3, 4.58241, 1, 0, 0.496086,-99) , 
0, 0.49809, 1, 0, 0.500857,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.00672222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517446,-99) , 
NN(
NN(
0, 
0, 
-1, -0.353636, 1, 1, 0.510995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493297,-99) , 
5, 0.58779, 1, 0, 0.500774,-99) , 
0, 0.503805, 0, 0, 0.501678,-99) , 
2, 0.213826, 0, 0, 0.502328,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.00844709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499096,-99) , 
2, 0.213855, 0, 0, 0.499831,-99) , 
5, -0.371772, 1, 0, 0.501202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498829,-99) , 
5, -0.826865, 0, 0, 0.502963,-99) , 
NN(
0, 
0, 
-1, 5.74337, 1, -1, 0.492563,-99) , 
5, -0.78613, 1, 0, 0.49575,-99) , 
5, -0.438605, 0, 0, 0.499167,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.00965604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494765,-99) , 
3, 3.16241, 1, 0, 0.513641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489674,-99) , 
5, 0.0211626, 0, 0, 0.50091,-99) , 
3, 4.66215, 1, 0, 0.508565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497797,-99) , 
0, 0.497092, 1, 0, 0.499489,-99) , 
0, 0.505709, 0, 0, 0.500043,-99) , 
2, -0.0713947, 1, 0, 0.501451,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00726509);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.258218, 1, 1, 0.511391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498784,-99) , 
5, -0.879658, 1, 0, 0.503296,-99) , 
NN(
0, 
0, 
-1, 0.503124, 1, -1, 0.497184,-99) , 
5, -0.719203, 1, 0, 0.498177,-99) , 
0, 0.504757, 0, 0, 0.498953,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0101522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498112,-99) , 
3, 1.87958, 1, 0, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484671,-99) , 
3, 9.41001, 1, 0, 0.501458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484908,-99) , 
5, -0.906445, 0, 0, 0.500727,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0121099);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0238062, 0, 1, 0.505632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485405,-99) , 
0, 0.491605, 0, 0, 0.501335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491383,-99) , 
0, 0.504439, 0, 0, 0.493209,-99) , 
0, 0.49809, 1, 0, 0.49725,-99) , 
5, -0.157916, 1, 0, 0.501905,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.00852694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.212804, 1, 1, 0.502912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482682,-99) , 
3, 9.00138, 1, 0, 0.502011,-99) , 
NN(
0, 
0, 
-1, -0.866332, 1, -1, 0.489014,-99) , 
5, -0.812866, 0, 0, 0.500769,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0108992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498182,-99) , 
5, 0.233288, 1, 0, 0.509193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493263,-99) , 
5, -0.7215, 0, 0, 0.506616,-99) , 
NN(
NN(
0, 
0, 
-1, 0.152965, 0, 1, 0.502504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489919,-99) , 
5, -0.348496, 1, 0, 0.496628,-99) , 
0, 0.497138, 0, 0, 0.500215,-99) , 
2, -0.0713877, 1, 0, 0.501267,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.00959757);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492724,-99) , 
0, 0.492959, 0, 0, 0.502555,-99) , 
NN(
0, 
0, 
-1, 0.497507, 0, -1, 0.496405,-99) , 
0, 0.497002, 1, 0, 0.498605,-99) , 
0, 0.490471, 1, 0, 0.499353,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.00833247);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495619,-99) , 
3, 1.66264, 0, 0, 0.504823,-99) , 
NN(
0, 
0, 
-1, -0.600769, 0, -1, 0.497046,-99) , 
5, -0.745942, 1, 0, 0.498193,-99) , 
5, 0.778356, 0, 0, 0.49875,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_4_6_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_4_6_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_4_6_noNsigma *ReadBDT_maker_LHC19c2b_4_6_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_4_6_noNsigma(theInpVar);
  }
}
