#include "LHC19c2b_TMVAClassification_BDT_2_4_noP.class.h"

double ReadBDT_LHC19c2b_2_4_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_2_4_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.492642708534505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.761508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427897,-99) , 
4, 0.999524, 0, 0, 0.724525,-99) , 
NN(
NN(
0, 
0, 
-1, -0.60677, 1, 1, 0.729083,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.28103,-99) , 
9, 3.38191, 0, 0, 0.373539,-99) , 
7, -951.286, 0, 0, 0.501598,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.384781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.707208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406331,-99) , 
4, 0.999048, 0, 0, 0.685338,-99) , 
NN(
NN(
0, 
0, 
-1, -0.419994, 1, 1, 0.655915,-99) , 
NN(
0, 
0, 
-1, -1.57146, 0, -1, 0.319416,-99) , 
10, 3.71406, 0, 0, 0.401561,-99) , 
7, -951.286, 0, 0, 0.504681,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.26823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00566571, 0, 1, 0.67301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356818,-99) , 
6, 0.0237962, 1, 0, 0.65001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201457,-99) , 
4, 0.999524, 0, 0, 0.476916,-99) , 
NN(
0, 
0, 
-1, -2.11567, 0, -1, 0.167107,-99) , 
8, -1.57144, 0, 0, 0.42855,-99) , 
7, -951.286, 0, 0, 0.508641,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.286799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.63947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433609,-99) , 
4, 0.999048, 0, 0, 0.6238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430959,-99) , 
5, -0.401388, 1, 0, 0.564861,-99) , 
NN(
0, 
0, 
-1, -1.85711, 0, -1, 0.340596,-99) , 
9, 1.2855, 0, 0, 0.410215,-99) , 
7, -951.286, 0, 0, 0.487105,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.206266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462233,-99) , 
6, 0.00680085, 0, 0, 0.526049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.109136,-99) , 
6, 0.047611, 1, 0, 0.512317,-99) , 
NN(
0, 
0, 
-1, -2.34697, 0, -1, 0.200804,-99) , 
8, -1.85715, 0, 0, 0.487235,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.190528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252441,-99) , 
4, 0.998571, 0, 0, 0.53557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.114001,-99) , 
6, 0.0475559, 1, 0, 0.522084,-99) , 
NN(
0, 
0, 
-1, -2.29251, 0, -1, 0.219484,-99) , 
8, -1.85714, 0, 0, 0.498316,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.178087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00340065, 0, 1, 0.60307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344645,-99) , 
6, 0.0238056, 1, 0, 0.584078,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.422553,-99) , 
7, -951.286, 0, 0, 0.481028,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.163131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341981,-99) , 
4, 0.999524, 0, 0, 0.516991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.123943,-99) , 
6, 0.0475952, 1, 0, 0.50525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.180226,-99) , 
8, -2.14285, 0, 0, 0.489161,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.161856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462856,-99) , 
5, -0.368474, 1, 0, 0.50394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.134137,-99) , 
6, 0.0475646, 1, 0, 0.493059,-99) , 
NN(
0, 
0, 
-1, -2.29254, 0, -1, 0.246643,-99) , 
8, -1.85715, 0, 0, 0.474569,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.16584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442284,-99) , 
6, 0.0045339, 0, 0, 0.508581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.146344,-99) , 
6, 0.047611, 1, 0, 0.498271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.20615,-99) , 
8, -2.14285, 0, 0, 0.484152,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.149616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278522,-99) , 
4, 0.997619, 0, 0, 0.527554,-99) , 
NN(
0, 
0, 
-1, 0.168557, 1, -1, 0.294775,-99) , 
8, 1.77545, 1, 0, 0.512129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557002,-99) , 
NN(
0, 
0, 
-1, -0.392925, 1, -1, 0.282929,-99) , 
7, -951.286, 0, 0, 0.348056,-99) , 
8, -1.28572, 0, 0, 0.486404,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0772698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282502,-99) , 
4, 0.998095, 0, 0, 0.496983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.156217,-99) , 
6, 0.0475953, 1, 0, 0.487268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.218207,-99) , 
8, -2.14287, 0, 0, 0.474757,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.134632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0973464, 1, 1, 0.549674,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.435712,-99) , 
7, -951.286, 0, 0, 0.476866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.151428,-99) , 
6, 0.047611, 1, 0, 0.467985,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0571318);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14289, 0, -1, 0.471465,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0779742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306075,-99) , 
3, 9.47906, 1, 0, 0.498614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.250688,-99) , 
8, -2.14285, 0, 0, 0.487339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.162454,-99) , 
6, 0.047611, 1, 0, 0.478705,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0621995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339991,-99) , 
4, 0.999048, 0, 0, 0.488584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.192411,-99) , 
8, -2.42857, 0, 0, 0.480706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.170514,-99) , 
6, 0.0475835, 1, 0, 0.47253,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0657306);
  fForest.push_back( 
NN(
0, 
0, 
-1, -1.85717, 0, -1, 0.467182,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0909718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326024,-99) , 
8, 1.69378, 1, 0, 0.499882,-99) , 
NN(
0, 
0, 
-1, -0.0634514, 1, -1, 0.346063,-99) , 
8, -1.57146, 0, 0, 0.483441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.190405,-99) , 
6, 0.0475922, 1, 0, 0.475767,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.154479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500948, 1, 1, 0.571201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423158,-99) , 
9, -1.72203, 1, 0, 0.455363,-99) , 
5, -0.549039, 1, 0, 0.475067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.177891,-99) , 
6, 0.047611, 1, 0, 0.467563,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.101214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400855,-99) , 
4, 0.999864, 0, 0, 0.488765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252051,-99) , 
4, 0.997143, 0, 0, 0.481268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266001,-99) , 
8, -2.14285, 0, 0, 0.471944,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0996828);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333875,-99) , 
3, 9.46687, 1, 0, 0.498234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273152,-99) , 
8, 2.04756, 1, 0, 0.488621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581142,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.348745,-99) , 
9, -2.91631, 1, 0, 0.387237,-99) , 
8, -1.00002, 0, 0, 0.466812,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.122809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462355,-99) , 
0, 0.5019, 1, 0, 0.539618,-99) , 
NN(
0, 
0, 
-1, -2.14284, 0, -1, 0.444977,-99) , 
6, 0.00906574, 0, 0, 0.468122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.187267,-99) , 
6, 0.0475952, 1, 0, 0.460878,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0807699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413809,-99) , 
4, 0.999864, 0, 0, 0.486088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263863,-99) , 
4, 0.997143, 0, 0, 0.479227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290239,-99) , 
8, -2.14283, 0, 0, 0.471262,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0763487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97955, 1, -1, 0.486289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321634,-99) , 
10, -0.392925, 1, 0, 0.385741,-99) , 
8, -1.28572, 0, 0, 0.470999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.197177,-99) , 
6, 0.0475922, 1, 0, 0.464012,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0826668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352019,-99) , 
6, 0.0238055, 1, 0, 0.496897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26743,-99) , 
8, 2.18363, 1, 0, 0.489944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579518,-99) , 
NN(
0, 
0, 
-1, -0.471102, 1, -1, 0.335118,-99) , 
9, -2.80798, 1, 0, 0.383837,-99) , 
8, -1.28572, 0, 0, 0.474049,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0638524);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.997143, 0, -1, 0.468117,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0496619);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.997143, 0, -1, 0.475189,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0978972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.69715, 1, 1, 0.548154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412843,-99) , 
5, -0.197161, 1, 0, 0.46724,-99) , 
9, -1.38003, 1, 0, 0.487952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266732,-99) , 
4, 0.996667, 0, 0, 0.482228,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0467337);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14287, 0, -1, 0.47665,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0515638);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377548,-99) , 
6, 0.0238055, 1, 0, 0.497692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292319,-99) , 
4, 0.997143, 0, 0, 0.491569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309337,-99) , 
8, -2.14286, 0, 0, 0.484209,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0851073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483369,-99) , 
0, 0.500947, 1, 0, 0.529462,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.465436,-99) , 
7, -951.286, 0, 0, 0.489153,-99) , 
NN(
0, 
0, 
-1, 0.0808229, 1, -1, 0.340944,-99) , 
3, 9.37635, 1, 0, 0.480865,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0601554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381583,-99) , 
6, 0.0237962, 1, 0, 0.499998,-99) , 
NN(
0, 
0, 
-1, -1.03566, 1, -1, 0.361212,-99) , 
8, -1.85711, 0, 0, 0.491024,-99) , 
NN(
0, 
0, 
-1, 0.0746597, 1, -1, 0.338035,-99) , 
3, 9.48998, 1, 0, 0.482958,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0807089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383239,-99) , 
8, 1.66662, 1, 0, 0.500912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389803,-99) , 
9, 1.30832, 0, 0, 0.425008,-99) , 
8, -1.00001, 0, 0, 0.484906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280956,-99) , 
4, 0.996667, 0, 0, 0.479719,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0879463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464819,-99) , 
9, -0.817463, 1, 0, 0.486614,-99) , 
NN(
0, 
0, 
-1, 0.0764361, 1, -1, 0.356621,-99) , 
3, 9.48356, 1, 0, 0.479706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330095,-99) , 
8, -2.14285, 0, 0, 0.473798,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0410742);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14275, 1, -1, 0.479474,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.102781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461858,-99) , 
4, 0.999981, 0, 0, 0.504159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407674,-99) , 
9, -2.2365, 1, 0, 0.431108,-99) , 
4, 0.999864, 0, 0, 0.487293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309602,-99) , 
4, 0.997143, 0, 0, 0.48212,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.111168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468573,-99) , 
10, 6.34223, 1, 0, 0.50997,-99) , 
5, -0.743469, 1, 0, 0.525395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492124,-99) , 
9, -2.98139, 1, 0, 0.507485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355625,-99) , 
7, -951.286, 0, 0, 0.409307,-99) , 
9, -0.751614, 1, 0, 0.463644,-99) , 
9, 1.32953, 0, 0, 0.484667,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0386453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397574,-99) , 
6, 0.0237961, 1, 0, 0.496347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355726,-99) , 
8, -2.14286, 0, 0, 0.49081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317273,-99) , 
4, 0.997143, 0, 0, 0.485926,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0417905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39347,-99) , 
6, 0.0237961, 1, 0, 0.496056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356275,-99) , 
8, -2.14286, 0, 0, 0.490683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36052,-99) , 
3, 9.48998, 1, 0, 0.483856,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0928279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475203,-99) , 
5, -0.0975098, 1, 0, 0.501603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411625,-99) , 
10, 3.69121, 0, 0, 0.435138,-99) , 
8, -0.795941, 0, 0, 0.483713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314787,-99) , 
8, 2.14281, 1, 0, 0.479261,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0937493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.12096, 1, 1, 0.530515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423956,-99) , 
4, 0.998095, 0, 0, 0.522312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427441,-99) , 
8, -0.428592, 0, 0, 0.482921,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.393812,-99) , 
5, -0.0119659, 1, 0, 0.461798,-99) , 
9, -0.969211, 1, 0, 0.48169,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0394677);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.1428, 1, -1, 0.480276,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0497995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4118,-99) , 
6, 0.0237961, 1, 0, 0.499919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395273,-99) , 
2, -0.214175, 0, 0, 0.494516,-99) , 
NN(
0, 
0, 
-1, -1.28572, 0, -1, 0.429485,-99) , 
0, 0.5019, 1, 0, 0.483303,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0610449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13927, 1, 1, 0.549409,-99) , 
NN(
0, 
0, 
-1, -1.57145, 0, -1, 0.478245,-99) , 
10, -0.205938, 1, 0, 0.487253,-99) , 
NN(
0, 
0, 
-1, 0.0830762, 1, -1, 0.376637,-99) , 
3, 9.36646, 1, 0, 0.481357,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0307651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39103,-99) , 
3, 9.47659, 1, 0, 0.49563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344928,-99) , 
8, -2.2653, 0, 0, 0.490929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330486,-99) , 
8, 2.1428, 1, 0, 0.486857,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0304597);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.1428, 1, -1, 0.484775,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0328041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398409,-99) , 
3, 9.33536, 1, 0, 0.497029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344507,-99) , 
8, -2.26531, 0, 0, 0.492283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322373,-99) , 
8, 2.14281, 1, 0, 0.487997,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.087655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477921,-99) , 
10, 1.69988, 1, 0, 0.50358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421179,-99) , 
10, -0.105682, 1, 0, 0.456076,-99) , 
8, -0.714302, 0, 0, 0.490082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382941,-99) , 
3, 9.47659, 1, 0, 0.484648,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0887168);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 13.7948, 1, 1, 0.548243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433659,-99) , 
6, 0.00339784, 0, 0, 0.484746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318395,-99) , 
6, 0.0237849, 1, 0, 0.478101,-99) , 
5, -0.639127, 1, 0, 0.487243,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0769952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484298,-99) , 
0, 0.499043, 1, 0, 0.510719,-99) , 
NN(
0, 
0, 
-1, 1.594, 1, -1, 0.463961,-99) , 
5, 0.0822655, 1, 0, 0.493263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542478,-99) , 
NN(
0, 
0, 
-1, -2.18368, 0, -1, 0.381156,-99) , 
7, -951.286, 0, 0, 0.425246,-99) , 
8, -1.28573, 0, 0, 0.483415,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0746753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456381,-99) , 
6, 0.00226339, 0, 0, 0.501534,-99) , 
NN(
0, 
0, 
-1, 0.023827, 1, -1, 0.407711,-99) , 
6, 0.0237652, 1, 0, 0.49566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535418,-99) , 
NN(
0, 
0, 
-1, -2.18367, 0, -1, 0.391071,-99) , 
7, -951.286, 0, 0, 0.429976,-99) , 
8, -1.28571, 0, 0, 0.486217,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0669049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487254,-99) , 
4, 0.999995, 0, 0, 0.502553,-99) , 
NN(
0, 
0, 
-1, -1.67174, 1, -1, 0.441391,-99) , 
4, 0.999887, 0, 0, 0.487199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367599,-99) , 
4, 0.997619, 0, 0, 0.483322,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0251034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419413,-99) , 
2, -0.214181, 0, 0, 0.495945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35652,-99) , 
8, -2.2653, 0, 0, 0.491739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36464,-99) , 
8, 2.14281, 1, 0, 0.488482,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.057195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468824,-99) , 
4, 0.999961, 0, 0, 0.503132,-99) , 
NN(
0, 
0, 
-1, 4.70717, 1, -1, 0.455501,-99) , 
4, 0.999864, 0, 0, 0.49209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353037,-99) , 
4, 0.997143, 0, 0, 0.488358,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0773808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478963,-99) , 
10, 2.08754, 1, 0, 0.502624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431467,-99) , 
10, -0.392925, 1, 0, 0.460586,-99) , 
8, -0.714298, 0, 0, 0.490583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367875,-99) , 
4, 0.997143, 0, 0, 0.487204,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0422142);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.715705, 1, 1, 0.54214,-99) , 
NN(
0, 
0, 
-1, 0.0238055, 1, -1, 0.482079,-99) , 
5, -0.638809, 1, 0, 0.489948,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0249077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410001,-99) , 
8, 2.02036, 1, 0, 0.500468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407132,-99) , 
8, -2.14286, 0, 0, 0.496965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384049,-99) , 
4, 0.997143, 0, 0, 0.49388,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0687511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492337,-99) , 
7, -951.286, 1, 0, 0.524368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461642,-99) , 
7, -951.286, 0, 0, 0.482586,-99) , 
9, -1.10132, 1, 0, 0.495304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410402,-99) , 
3, 9.50217, 1, 0, 0.49104,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0728216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487121,-99) , 
6, 0.0056679, 0, 0, 0.504855,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.420097,-99) , 
6, 0.0238055, 1, 0, 0.499646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328035,-99) , 
9, -2.18412, 1, 0, 0.404719,-99) , 
9, 1.2855, 0, 0, 0.446322,-99) , 
8, -1.28573, 0, 0, 0.49201,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0725418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499984,-99) , 
8, -0.31059, 0, 0, 0.528508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428265,-99) , 
5, -0.0191923, 1, 0, 0.48867,-99) , 
10, 1.34266, 1, 0, 0.502498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348637,-99) , 
9, -2.21244, 1, 0, 0.41342,-99) , 
10, 2.12444, 0, 0, 0.447224,-99) , 
8, -1.28573, 0, 0, 0.494548,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0662032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.168421, 0, 1, 0.527787,-99) , 
NN(
0, 
0, 
-1, 0.159779, 1, -1, 0.481765,-99) , 
10, 1.53578, 1, 0, 0.499502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359422,-99) , 
9, -2.50766, 1, 0, 0.416047,-99) , 
9, 1.30832, 0, 0, 0.449051,-99) , 
8, -1.28573, 0, 0, 0.492307,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0451506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422424,-99) , 
8, 1.97937, 1, 0, 0.504294,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.425315,-99) , 
6, 0.0237976, 1, 0, 0.499474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539399,-99) , 
NN(
0, 
0, 
-1, -1.38845, 1, -1, 0.420441,-99) , 
5, -0.464574, 1, 0, 0.448417,-99) , 
8, -1.28579, 0, 0, 0.492118,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0471776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490654,-99) , 
5, -0.551214, 1, 0, 0.500272,-99) , 
NN(
0, 
0, 
-1, 4.62761, 1, -1, 0.458733,-99) , 
4, 0.999864, 0, 0, 0.490751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384052,-99) , 
4, 0.997143, 0, 0, 0.487863,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0468444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465759,-99) , 
5, 0.25363, 1, 0, 0.505319,-99) , 
NN(
0, 
0, 
-1, 4.64175, 1, -1, 0.467082,-99) , 
4, 0.999864, 0, 0, 0.496486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386208,-99) , 
4, 0.997143, 0, 0, 0.493503,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0573958);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49505,-99) , 
10, 2.62558, 1, 0, 0.516197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469406,-99) , 
10, -0.105682, 1, 0, 0.485968,-99) , 
8, -0.142895, 0, 0, 0.501952,-99) , 
NN(
0, 
0, 
-1, -1.00007, 0, -1, 0.460723,-99) , 
0, 0.500947, 1, 0, 0.492261,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0587767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491356,-99) , 
10, 1.97015, 1, 0, 0.507967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449369,-99) , 
9, 1.62229, 0, 0, 0.471556,-99) , 
8, -0.714334, 0, 0, 0.497627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38372,-99) , 
4, 0.997143, 0, 0, 0.494625,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0419443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.24182, 1, 1, 0.53878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456084,-99) , 
8, -0.714287, 0, 0, 0.495039,-99) , 
10, 0.0182157, 1, 0, 0.501988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418845,-99) , 
3, 9.48998, 1, 0, 0.497859,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0420925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483443,-99) , 
5, -0.0991028, 1, 0, 0.499938,-99) , 
NN(
0, 
0, 
-1, -2.29252, 0, -1, 0.439539,-99) , 
8, -1.85715, 0, 0, 0.496306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397784,-99) , 
4, 0.997143, 0, 0, 0.493659,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0218609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564875,-99) , 
NN(
0, 
0, 
-1, 0.0237976, 1, -1, 0.494004,-99) , 
5, -0.819488, 1, 0, 0.497027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400014,-99) , 
4, 0.997143, 0, 0, 0.494459,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0370023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0759882, 1, 1, 0.509749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442875,-99) , 
2, -0.214175, 0, 0, 0.506328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468608,-99) , 
10, 1.12999, 1, 0, 0.480139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419934,-99) , 
8, -1.28572, 0, 0, 0.471634,-99) , 
0, 0.499995, 1, 0, 0.49543,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0410975);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490341,-99) , 
6, 0.00792826, 0, 0, 0.50062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357959,-99) , 
10, 6.16619, 0, 0, 0.438722,-99) , 
6, 0.0237849, 1, 0, 0.496886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42018,-99) , 
8, -2.14286, 0, 0, 0.494121,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0443251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.22797, 1, 1, 0.537461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465438,-99) , 
8, -0.428601, 0, 0, 0.496308,-99) , 
10, -0.0509712, 1, 0, 0.50239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437415,-99) , 
3, 9.50217, 1, 0, 0.499132,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0301362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.26682, 1, 1, 0.527416,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.490501,-99) , 
10, 0.236272, 1, 0, 0.497519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406524,-99) , 
4, 0.997143, 0, 0, 0.495081,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0418865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474792,-99) , 
5, 0.166624, 1, 0, 0.505922,-99) , 
NN(
0, 
0, 
-1, 4.71125, 1, -1, 0.475764,-99) , 
4, 0.999864, 0, 0, 0.499015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40991,-99) , 
4, 0.997143, 0, 0, 0.496623,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0326332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45741,-99) , 
6, 0.00113327, 0, 0, 0.501146,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.449871,-99) , 
6, 0.0237977, 1, 0, 0.498022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411547,-99) , 
4, 0.997143, 0, 0, 0.495737,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0354614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470512,-99) , 
8, -1.00004, 0, 0, 0.499757,-99) , 
NN(
0, 
0, 
-1, -0.0238129, 0, -1, 0.448483,-99) , 
6, 0.0237976, 1, 0, 0.496726,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.455602,-99) , 
0, 0.502852, 1, 0, 0.491835,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0441068);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485273,-99) , 
6, 0.0113321, 0, 0, 0.491969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423538,-99) , 
6, 0.0237976, 1, 0, 0.488423,-99) , 
5, -0.819488, 1, 0, 0.491213,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0695082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461337,-99) , 
8, -1.0442, 0, 0, 0.507527,-99) , 
9, -3.26254, 1, 0, 0.518365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441602,-99) , 
4, 0.999851, 0, 0, 0.505958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435779,-99) , 
7, -951.286, 0, 0, 0.463742,-99) , 
5, -0.283019, 1, 0, 0.485163,-99) , 
9, -1.16601, 1, 0, 0.4951,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0407782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.25622, 1, 1, 0.525111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473211,-99) , 
8, 0.142837, 0, 0, 0.490353,-99) , 
10, 0.246913, 1, 0, 0.497077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442323,-99) , 
3, 9.33289, 1, 0, 0.494273,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0395929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495848,-99) , 
9, -1.74107, 1, 0, 0.503238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461339,-99) , 
9, 1.98991, 0, 0, 0.473071,-99) , 
6, 0.00226717, 0, 0, 0.495377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371712,-99) , 
9, 5.83352, 0, 0, 0.446597,-99) , 
6, 0.0238055, 1, 0, 0.4925,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0375037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478611,-99) , 
6, 0.00226642, 0, 0, 0.503254,-99) , 
NN(
0, 
0, 
-1, 0.0237808, 0, -1, 0.455711,-99) , 
6, 0.0237976, 1, 0, 0.500434,-99) , 
NN(
0, 
0, 
-1, 0.0716152, 0, -1, 0.461338,-99) , 
0, 0.502852, 1, 0, 0.495797,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0196418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549815,-99) , 
NN(
0, 
0, 
-1, 0.0238055, 1, -1, 0.494136,-99) , 
5, -0.819196, 1, 0, 0.496482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412239,-99) , 
4, 0.997143, 0, 0, 0.494269,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0317206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494153,-99) , 
6, 0.00792826, 0, 0, 0.5014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367106,-99) , 
5, -0.557342, 1, 0, 0.451777,-99) , 
6, 0.023785, 1, 0, 0.498372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411835,-99) , 
4, 0.997143, 0, 0, 0.49611,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0276287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.183852, 1, 1, 0.52244,-99) , 
NN(
0, 
0, 
-1, 0.254604, 1, -1, 0.492192,-99) , 
10, 0.777038, 1, 0, 0.500618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432927,-99) , 
8, -2.14286, 0, 0, 0.498255,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0352043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47935,-99) , 
10, 6.88416, 1, 0, 0.508801,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.473064,-99) , 
6, 0.00113324, 0, 0, 0.504188,-99) , 
NN(
0, 
0, 
-1, -0.143486, 1, -1, 0.456747,-99) , 
6, 0.0237976, 1, 0, 0.501387,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0291326);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432813,-99) , 
8, -2.14285, 0, 0, 0.504255,-99) , 
NN(
0, 
0, 
-1, 1.15826, 1, -1, 0.472728,-99) , 
5, 0.34714, 1, 0, 0.498872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413964,-99) , 
4, 0.997143, 0, 0, 0.496635,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0328755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.229281, 0, 1, 0.543232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491871,-99) , 
2, 0.0721362, 0, 0, 0.496474,-99) , 
3, 0.555647, 1, 0, 0.499297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356472,-99) , 
5, -0.00447977, 1, 0, 0.445479,-99) , 
3, 9.26727, 1, 0, 0.496494,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.024661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479288,-99) , 
7, -951.286, 1, 0, 0.529802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422637,-99) , 
8, -1.85705, 0, 0, 0.498645,-99) , 
10, -0.205938, 1, 0, 0.502632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451007,-99) , 
3, 9.47659, 1, 0, 0.50009,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0294141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471902,-99) , 
0, 0.491106, 0, 0, 0.508572,-99) , 
NN(
0, 
0, 
-1, -0.142918, 0, -1, 0.487681,-99) , 
0, 0.49809, 1, 0, 0.498059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424278,-99) , 
4, 0.997143, 0, 0, 0.496131,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0262688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471627,-99) , 
7, -951.286, 1, 0, 0.528629,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.492957,-99) , 
10, -0.454895, 1, 0, 0.496317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422673,-99) , 
4, 0.997143, 0, 0, 0.494389,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0279049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493014,-99) , 
10, 2.64731, 1, 0, 0.512933,-99) , 
NN(
0, 
0, 
-1, -2.2517, 0, -1, 0.493484,-99) , 
8, 0.142832, 0, 0, 0.501724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428868,-99) , 
4, 0.997143, 0, 0, 0.499796,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0272346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482932,-99) , 
7, -951.286, 1, 0, 0.537206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431159,-99) , 
8, -1.85713, 0, 0, 0.501682,-99) , 
10, -0.393077, 1, 0, 0.505263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427492,-99) , 
4, 0.997143, 0, 0, 0.503239,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0333096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.25202, 1, 1, 0.523924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482,-99) , 
8, -0.142874, 0, 0, 0.497154,-99) , 
10, 0.0182157, 1, 0, 0.501381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384248,-99) , 
5, -0.0116538, 1, 0, 0.454494,-99) , 
3, 9.1962, 1, 0, 0.49887,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0235944);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495513,-99) , 
10, -0.725962, 1, 0, 0.49925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435495,-99) , 
6, 0.0237918, 1, 0, 0.496031,-99) , 
5, -0.819598, 1, 0, 0.497976,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0301308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999525, 1, 1, 0.520683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490088,-99) , 
2, 0.0715405, 0, 0, 0.494719,-99) , 
3, 1.02089, 1, 0, 0.499963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445952,-99) , 
3, 9.47659, 1, 0, 0.497348,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0241061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498981,-99) , 
9, -1.39021, 1, 0, 0.50498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385075,-99) , 
5, -0.558999, 1, 0, 0.465748,-99) , 
6, 0.0237961, 1, 0, 0.502615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430522,-99) , 
4, 0.997143, 0, 0, 0.500739,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0486797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486111,-99) , 
10, 5.28707, 1, 0, 0.512633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419483,-99) , 
8, -2.14286, 0, 0, 0.508572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491259,-99) , 
9, -3.27088, 1, 0, 0.499001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407131,-99) , 
10, 2.13962, 1, 0, 0.486923,-99) , 
5, 0.0830342, 1, 0, 0.50086,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0331149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.76117, 1, 1, 0.531435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458721,-99) , 
4, 0.999905, 0, 0, 0.519818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57161,-99) , 
NN(
0, 
0, 
-1, -1.57146, 0, -1, 0.491613,-99) , 
9, -3.32914, 1, 0, 0.495398,-99) , 
5, -0.459614, 1, 0, 0.501238,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0332489);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473311,-99) , 
8, -1.28572, 0, 0, 0.505202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440737,-99) , 
6, 0.0238055, 1, 0, 0.5019,-99) , 
5, -0.819316, 1, 0, 0.503876,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0466364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493582,-99) , 
4, 0.999987, 0, 0, 0.521416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441972,-99) , 
4, 0.999728, 0, 0, 0.515219,-99) , 
NN(
NN(
0, 
0, 
-1, -3.36037, 1, 1, 0.508343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450877,-99) , 
7, -951.286, 0, 0, 0.471935,-99) , 
9, -0.456064, 1, 0, 0.49454,-99) , 
5, -0.277866, 1, 0, 0.502207,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0166597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448112,-99) , 
6, 0.0237823, 1, 0, 0.499891,-99) , 
5, -0.819598, 1, 0, 0.501799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438965,-99) , 
4, 0.997143, 0, 0, 0.500159,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0442703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480435,-99) , 
4, 0.999955, 0, 0, 0.507448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446473,-99) , 
4, 0.999049, 0, 0, 0.505049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442471,-99) , 
3, 4.85592, 1, 0, 0.488589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381141,-99) , 
10, 1.97214, 1, 0, 0.47637,-99) , 
5, 0.25924, 1, 0, 0.498267,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0256719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0306567, 0, 1, 0.505374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464346,-99) , 
2, -0.214229, 0, 0, 0.503409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476274,-99) , 
4, 0.999524, 1, 0, 0.488699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395046,-99) , 
10, 2.00202, 1, 0, 0.478457,-99) , 
5, 0.263064, 1, 0, 0.497538,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0213252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470294,-99) , 
8, -1.57143, 0, 0, 0.498764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451672,-99) , 
4, 0.999592, 1, 0, 0.470447,-99) , 
5, 0.444019, 1, 0, 0.495361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431712,-99) , 
4, 0.997143, 0, 0, 0.493729,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0304813);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554244,-99) , 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.487775,-99) , 
9, -3.17775, 1, 0, 0.490905,-99) , 
5, -0.819598, 1, 0, 0.492889,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0502075);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458453,-99) , 
8, -1.58103, 0, 0, 0.534702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476631,-99) , 
8, -0.708533, 1, 0, 0.493343,-99) , 
10, 4.59366, 1, 0, 0.510319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49858,-99) , 
9, -3.35508, 1, 0, 0.504374,-99) , 
NN(
0, 
0, 
-1, -0.142798, 0, -1, 0.468232,-99) , 
9, -0.45671, 1, 0, 0.490713,-99) , 
5, -0.279456, 1, 0, 0.49793,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0236722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492427,-99) , 
0, 0.498459, 1, 0, 0.502199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450057,-99) , 
0, 0.490063, 0, 0, 0.500653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457654,-99) , 
0, 0.504757, 1, 0, 0.498498,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0369849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493225,-99) , 
4, 0.999955, 0, 0, 0.508547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457208,-99) , 
4, 0.999048, 0, 0, 0.506257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476938,-99) , 
4, 0.999524, 1, 0, 0.494995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404848,-99) , 
10, 1.61945, 1, 0, 0.482243,-99) , 
5, 0.353721, 1, 0, 0.501926,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0280431);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493492,-99) , 
7, -951.286, 1, 0, 0.519258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486274,-99) , 
8, 0.142867, 0, 0, 0.495924,-99) , 
10, 0.236272, 1, 0, 0.500433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454662,-99) , 
3, 9.47676, 1, 0, 0.49823,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0176732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498921,-99) , 
10, 0.359309, 1, 0, 0.503092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449689,-99) , 
4, 0.999728, 1, 0, 0.473751,-99) , 
5, 0.533707, 1, 0, 0.500736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444705,-99) , 
4, 0.997143, 0, 0, 0.499282,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0528238);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471328,-99) , 
10, 5.83704, 1, 0, 0.509162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466824,-99) , 
9, 1.62229, 0, 0, 0.485387,-99) , 
8, -0.714296, 0, 0, 0.502485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411272,-99) , 
9, 6.13291, 0, 0, 0.466584,-99) , 
6, 0.0237976, 1, 0, 0.500351,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0235162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.682284, 1, 1, 0.506687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471207,-99) , 
4, 0.999547, 1, 0, 0.48439,-99) , 
5, 0.346479, 1, 0, 0.502918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452592,-99) , 
4, 0.997619, 0, 0, 0.501369,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0515579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486779,-99) , 
8, -1.49622, 0, 0, 0.537452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463749,-99) , 
7, -951.286, 1, 0, 0.497146,-99) , 
5, 0.113228, 1, 0, 0.508962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492923,-99) , 
10, 4.83889, 1, 0, 0.504595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457824,-99) , 
7, -951.286, 0, 0, 0.476048,-99) , 
5, -0.28153, 1, 0, 0.491137,-99) , 
9, -0.969211, 1, 0, 0.497021,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0344626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472795,-99) , 
7, -951.286, 0, 0, 0.528838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492483,-99) , 
5, -0.639115, 1, 0, 0.496876,-99) , 
4, 0.999524, 1, 0, 0.500604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454016,-99) , 
3, 9.48998, 1, 0, 0.49837,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0226897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497923,-99) , 
4, 0.999864, 0, 0, 0.519953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492969,-99) , 
10, 0.212863, 1, 0, 0.496745,-99) , 
2, 0.0714373, 0, 0, 0.500172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447124,-99) , 
4, 0.997143, 0, 0, 0.498809,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0257627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474227,-99) , 
7, -951.286, 0, 0, 0.529356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45968,-99) , 
5, 0.525802, 1, 0, 0.499713,-99) , 
4, 0.999524, 1, 0, 0.503145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462012,-99) , 
3, 9.47906, 1, 0, 0.501147,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0209118);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498266,-99) , 
7, -951.286, 1, 0, 0.529303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452432,-99) , 
8, -1.85714, 0, 0, 0.499667,-99) , 
10, -0.354443, 1, 0, 0.503062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395254,-99) , 
5, -0.553375, 1, 0, 0.469908,-99) , 
6, 0.0237976, 1, 0, 0.501069,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0296546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451932,-99) , 
4, 0.999524, 0, 0, 0.50557,-99) , 
7, -951.286, 0, 0, 0.520821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493046,-99) , 
5, -0.639424, 1, 0, 0.496751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447608,-99) , 
2, -0.302583, 0, 0, 0.494881,-99) , 
2, 0.0715316, 0, 0, 0.498941,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0259442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468213,-99) , 
10, 5.52707, 1, 0, 0.522575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466316,-99) , 
8, -1.57141, 0, 0, 0.498053,-99) , 
6, 0.010202, 0, 0, 0.502377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431786,-99) , 
10, 5.91199, 0, 0, 0.470113,-99) , 
6, 0.0238056, 1, 0, 0.500446,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0235288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.34183, 1, 1, 0.517098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485082,-99) , 
5, -0.187747, 1, 0, 0.494454,-99) , 
10, -0.0509712, 1, 0, 0.497841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44387,-99) , 
0, 0.505709, 1, 0, 0.49631,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0137154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43143,-99) , 
6, 0.0237918, 1, 0, 0.497131,-99) , 
5, -0.729128, 1, 0, 0.50001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463433,-99) , 
10, 14.2114, 1, 0, 0.498491,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0203236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495192,-99) , 
6, 0.00906573, 0, 0, 0.500055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431022,-99) , 
10, 5.59257, 0, 0, 0.472668,-99) , 
6, 0.0237977, 1, 0, 0.498409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457292,-99) , 
0, 0.505709, 1, 0, 0.497232,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0309121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473774,-99) , 
10, 4.07443, 1, 0, 0.506567,-99) , 
NN(
0, 
0, 
-1, -2.28407, 0, -1, 0.49262,-99) , 
8, 0.00677299, 0, 0, 0.498876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46304,-99) , 
8, 1.85709, 1, 0, 0.497363,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0377918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.48559, 0, 1, 0.545356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478622,-99) , 
7, -951.286, 1, 0, 0.500396,-99) , 
5, 0.124494, 1, 0, 0.514475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460988,-99) , 
4, 0.999765, 0, 0, 0.502796,-99) , 
NN(
0, 
0, 
-1, 1.85713, 1, -1, 0.477829,-99) , 
5, -0.191725, 1, 0, 0.493413,-99) , 
9, -0.904518, 1, 0, 0.500621,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0199104);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498543,-99) , 
6, 0.0101985, 0, 0, 0.503491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459896,-99) , 
10, 12.4332, 1, 0, 0.501617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415898,-99) , 
5, -0.553375, 1, 0, 0.469999,-99) , 
6, 0.0237976, 1, 0, 0.499736,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0375218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48933,-99) , 
8, -0.485489, 0, 0, 0.50831,-99) , 
10, -1.21525, 1, 0, 0.524004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49407,-99) , 
10, 1.71501, 1, 0, 0.505793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480608,-99) , 
5, -0.461035, 1, 0, 0.490799,-99) , 
8, 0.142832, 0, 0, 0.498186,-99) , 
10, -0.0509712, 1, 0, 0.502084,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0267495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.21525, 1, 1, 0.521724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487715,-99) , 
8, -0.142879, 0, 0, 0.49945,-99) , 
10, -0.0509712, 1, 0, 0.50292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411036,-99) , 
5, -0.55345, 1, 0, 0.464881,-99) , 
6, 0.0238056, 1, 0, 0.50065,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0124681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499679,-99) , 
10, 0.36017, 1, 0, 0.503429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453093,-99) , 
4, 0.997143, 0, 0, 0.502127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451101,-99) , 
1, 0.0253539, 1, 0, 0.500745,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0180867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44172,-99) , 
6, 0.0237849, 1, 0, 0.500156,-99) , 
5, -0.728789, 1, 0, 0.503006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460519,-99) , 
10, 14.3928, 1, 0, 0.501309,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0177356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.58768, 0, 1, 0.504496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447757,-99) , 
4, 0.998572, 0, 0, 0.502679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513477,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.465663,-99) , 
4, 0.999524, 1, 0, 0.480799,-99) , 
5, 0.444019, 1, 0, 0.499814,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0249788);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481935,-99) , 
10, 4.65333, 1, 0, 0.512279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485111,-99) , 
1, -0.00177961, 1, 0, 0.494102,-99) , 
1, 0.00339743, 0, 0, 0.499675,-99) , 
NN(
0, 
0, 
-1, 5.6903, 0, -1, 0.463894,-99) , 
6, 0.0237824, 1, 0, 0.497564,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0297279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474402,-99) , 
7, -951.286, 0, 0, 0.530774,-99) , 
NN(
0, 
0, 
-1, 0.99966, 0, -1, 0.492855,-99) , 
4, 0.999524, 1, 0, 0.497231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456246,-99) , 
3, 9.50281, 1, 0, 0.495277,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0197627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490942,-99) , 
7, -951.286, 0, 0, 0.539141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457756,-99) , 
5, 0.533665, 1, 0, 0.497604,-99) , 
4, 0.999524, 1, 0, 0.502484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465535,-99) , 
3, 9.33536, 1, 0, 0.500635,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.037304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.215732, 0, 1, 0.510898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448502,-99) , 
8, -1.86025, 0, 0, 0.504894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475124,-99) , 
7, -951.286, 1, 0, 0.497452,-99) , 
NN(
0, 
0, 
-1, 2.49815, 1, -1, 0.441156,-99) , 
5, 0.0753448, 1, 0, 0.490299,-99) , 
10, 1.83255, 1, 0, 0.497369,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0312552);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485689,-99) , 
8, -1.07954, 0, 0, 0.518523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488711,-99) , 
8, 0.428601, 0, 0, 0.497021,-99) , 
10, 0.801916, 1, 0, 0.500979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458744,-99) , 
3, 4.79747, 1, 0, 0.492279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430159,-99) , 
10, 1.85811, 1, 0, 0.484307,-99) , 
5, 0.263064, 1, 0, 0.497061,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0169766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499417,-99) , 
10, 0.718697, 1, 0, 0.503507,-99) , 
NN(
0, 
0, 
-1, 1.57188, 1, -1, 0.488486,-99) , 
5, 0.17281, 1, 0, 0.499058,-99) , 
NN(
0, 
0, 
-1, 0.0816866, 1, -1, 0.469576,-99) , 
0, 0.503804, 1, 0, 0.496697,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0438124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443817,-99) , 
8, -1.85716, 0, 0, 0.511054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475479,-99) , 
8, -0.428747, 1, 0, 0.489675,-99) , 
10, 5.01861, 1, 0, 0.504043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491347,-99) , 
9, -3.30929, 1, 0, 0.497502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431085,-99) , 
10, 2.20032, 1, 0, 0.489547,-99) , 
5, 0.0830342, 1, 0, 0.498887,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0124102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549509,-99) , 
NN(
0, 
0, 
-1, 0.0237976, 1, -1, 0.497099,-99) , 
5, -0.728252, 1, 0, 0.499718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470756,-99) , 
10, 14.3106, 1, 0, 0.498543,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0128035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.236272, 1, 1, 0.504116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457381,-99) , 
0, 0.490199, 0, 0, 0.502668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456851,-99) , 
0, 0.505709, 1, 0, 0.501345,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0133177);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534055,-99) , 
NN(
NN(
0, 
0, 
-1, -1.19198, 1, 1, 0.503085,-99) , 
NN(
0, 
0, 
-1, -0.702335, 1, -1, 0.474045,-99) , 
10, 7.18096, 1, 0, 0.500009,-99) , 
5, -0.819543, 1, 0, 0.501381,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0152265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497446,-99) , 
5, -0.728091, 1, 0, 0.500522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46843,-99) , 
10, 14.4195, 1, 0, 0.499232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459655,-99) , 
0, 0.490471, 0, 0, 0.497847,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0118148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450597,-99) , 
6, 0.0237976, 1, 0, 0.498657,-99) , 
5, -0.729128, 1, 0, 0.500672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472098,-99) , 
10, 12.9119, 1, 0, 0.499207,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0226632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494307,-99) , 
3, 3.4344, 0, 0, 0.500377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454267,-99) , 
4, 0.998572, 0, 0, 0.498649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509853,-99) , 
NN(
0, 
0, 
-1, 0.63677, 1, -1, 0.459234,-99) , 
4, 0.999524, 1, 0, 0.476464,-99) , 
5, 0.533665, 1, 0, 0.496703,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0186201);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490934,-99) , 
7, -951.286, 0, 0, 0.536658,-99) , 
NN(
0, 
0, 
-1, 0.436051, 1, -1, 0.496906,-99) , 
4, 0.999524, 1, 0, 0.501515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469402,-99) , 
3, 9.48998, 1, 0, 0.499993,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0165181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.688156, 1, 1, 0.505698,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.482377,-99) , 
5, 0.443995, 1, 0, 0.503012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460897,-99) , 
4, 0.998095, 0, 0, 0.501452,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0195812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495122,-99) , 
10, -1.20827, 1, 0, 0.497375,-99) , 
5, -0.729487, 1, 0, 0.499978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468644,-99) , 
10, 14.3956, 1, 0, 0.498744,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0241795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.545626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488176,-99) , 
7, -951.286, 1, 0, 0.497587,-99) , 
4, 0.999524, 1, 0, 0.503218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469035,-99) , 
3, 9.4997, 1, 0, 0.501607,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.016754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445728,-99) , 
6, 0.0237961, 1, 0, 0.50044,-99) , 
5, -0.729128, 1, 0, 0.503083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469151,-99) , 
10, 14.5391, 1, 0, 0.501774,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0242704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484048,-99) , 
7, -951.286, 1, 0, 0.521489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490408,-99) , 
8, 0.142827, 0, 0, 0.498469,-99) , 
10, -0.393077, 1, 0, 0.500787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456459,-99) , 
4, 0.997143, 0, 0, 0.499653,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0116264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499725,-99) , 
10, -1.02128, 1, 0, 0.50213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474863,-99) , 
10, 12.1739, 1, 0, 0.500565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458815,-99) , 
0, 0.504757, 1, 0, 0.49847,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0124027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499771,-99) , 
10, 0.514276, 1, 0, 0.503673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458995,-99) , 
4, 0.999864, 1, 0, 0.480052,-99) , 
5, 0.533688, 1, 0, 0.501788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46543,-99) , 
4, 0.997143, 0, 0, 0.500857,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0285204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490949,-99) , 
7, -951.286, 0, 0, 0.537158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490257,-99) , 
0, 0.498092, 1, 0, 0.499151,-99) , 
4, 0.999524, 1, 0, 0.503587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471282,-99) , 
3, 9.50217, 1, 0, 0.502051,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0192281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473108,-99) , 
8, -2.14286, 0, 0, 0.507221,-99) , 
NN(
0, 
0, 
-1, 1.86329, 1, -1, 0.492657,-99) , 
5, 0.260901, 1, 0, 0.504008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464279,-99) , 
4, 0.997143, 0, 0, 0.502997,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0407595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496894,-99) , 
8, -0.718601, 0, 0, 0.522732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48765,-99) , 
8, -0.420971, 1, 0, 0.499966,-99) , 
10, 5.03921, 1, 0, 0.51022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486793,-99) , 
8, -0.510039, 0, 0, 0.505057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469144,-99) , 
9, 1.49542, 0, 0, 0.477624,-99) , 
10, 1.66748, 1, 0, 0.495488,-99) , 
5, -0.278344, 1, 0, 0.50093,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0164158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0509712, 1, 1, 0.506481,-99) , 
NN(
0, 
0, 
-1, -0.106608, 1, -1, 0.481935,-99) , 
0, 0.504349, 1, 0, 0.504911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464422,-99) , 
0, 0.490471, 0, 0, 0.503504,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0316844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489245,-99) , 
10, 6.97106, 1, 0, 0.505479,-99) , 
8, -1.2857, 1, 0, 0.513947,-99) , 
NN(
NN(
0, 
0, 
-1, -1.21795, 1, 1, 0.514994,-99) , 
NN(
0, 
0, 
-1, -1, 0, -1, 0.488545,-99) , 
10, 0.689939, 1, 0, 0.497935,-99) , 
5, -0.458494, 1, 0, 0.501799,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0107303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465268,-99) , 
6, 0.0237976, 1, 0, 0.499643,-99) , 
5, -0.81986, 1, 0, 0.501002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460262,-99) , 
0, 0.505709, 1, 0, 0.499833,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0188405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498863,-99) , 
10, -1.13928, 1, 0, 0.516754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492896,-99) , 
5, -0.281455, 1, 0, 0.49918,-99) , 
10, -0.205938, 1, 0, 0.501353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462626,-99) , 
4, 0.997143, 0, 0, 0.500374,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0245821);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488079,-99) , 
10, 3.10322, 1, 0, 0.504343,-99) , 
NN(
0, 
0, 
-1, 8.8565, 1, -1, 0.491102,-99) , 
8, -0.142876, 0, 0, 0.498096,-99) , 
5, -0.819369, 1, 0, 0.499403,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0146142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.071499, 0, 1, 0.505063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465787,-99) , 
4, 0.999728, 1, 0, 0.480472,-99) , 
5, 0.533688, 1, 0, 0.503097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465681,-99) , 
4, 0.997143, 0, 0, 0.502148,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0190099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496512,-99) , 
7, -951.286, 0, 0, 0.513044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496525,-99) , 
10, -0.140083, 1, 0, 0.50015,-99) , 
8, 0.714245, 0, 0, 0.503273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467113,-99) , 
0, 0.490471, 0, 0, 0.501998,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0150113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455278,-99) , 
6, 0.0238055, 1, 0, 0.501009,-99) , 
5, -0.728109, 1, 0, 0.502984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470946,-99) , 
10, 14.2114, 1, 0, 0.501659,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0109821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502757,-99) , 
NN(
0, 
0, 
-1, 0.1582, 1, -1, 0.480232,-99) , 
0, 0.49224, 0, 0, 0.500872,-99) , 
NN(
0, 
0, 
-1, -0.0973391, 1, -1, 0.479522,-99) , 
0, 0.503804, 1, 0, 0.499155,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0241257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497523,-99) , 
10, 1.35921, 1, 0, 0.503662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466484,-99) , 
8, -2.14286, 0, 0, 0.502104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478787,-99) , 
7, -951.286, 1, 0, 0.495983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434307,-99) , 
10, 2.04899, 1, 0, 0.488505,-99) , 
5, 0.169275, 1, 0, 0.498079,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.010981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454401,-99) , 
6, 0.0237977, 1, 0, 0.498643,-99) , 
5, -0.729128, 1, 0, 0.500667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470074,-99) , 
10, 13.7534, 1, 0, 0.499294,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0178711);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48911,-99) , 
8, -0.428598, 0, 0, 0.498701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467222,-99) , 
6, 0.0237976, 1, 0, 0.497141,-99) , 
5, -0.819543, 1, 0, 0.498399,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0232992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.27905, 0, 1, 0.507181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472376,-99) , 
4, 0.999565, 0, 0, 0.505042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491257,-99) , 
9, -3.15582, 1, 0, 0.495598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435442,-99) , 
10, 2.57121, 1, 0, 0.489985,-99) , 
5, -0.00720609, 1, 0, 0.498711,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0212814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.523832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462801,-99) , 
2, 0.275467, 1, 0, 0.510527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494718,-99) , 
4, 0.999048, 1, 0, 0.496276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461304,-99) , 
2, -0.302648, 0, 0, 0.494959,-99) , 
2, 0.0714235, 0, 0, 0.4974,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0137118);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490688,-99) , 
4, 0.999728, 0, 0, 0.502615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471756,-99) , 
4, 0.999728, 1, 0, 0.48334,-99) , 
5, 0.531098, 1, 0, 0.501064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466796,-99) , 
4, 0.997143, 0, 0, 0.500201,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.023604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492839,-99) , 
7, -951.286, 0, 0, 0.535673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494258,-99) , 
8, -1.85714, 1, 0, 0.49609,-99) , 
4, 0.999524, 1, 0, 0.500662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476218,-99) , 
3, 9.4997, 1, 0, 0.499491,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0205464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.148313, 1, 1, 0.522125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477009,-99) , 
7, -951.286, 1, 0, 0.514697,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.495072,-99) , 
9, -2.3172, 1, 0, 0.497813,-99) , 
5, -0.729689, 1, 0, 0.499883,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.042491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491816,-99) , 
8, -0.999115, 1, 0, 0.503537,-99) , 
4, 0.999048, 1, 0, 0.510364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488425,-99) , 
9, 1.17592, 0, 0, 0.501556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429951,-99) , 
4, 0.999048, 0, 0, 0.496364,-99) , 
7, -951.286, 0, 0, 0.501714,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0167123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.729128, 1, 1, 0.506904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476575,-99) , 
10, 14.2114, 1, 0, 0.505622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466917,-99) , 
4, 0.997619, 0, 0, 0.504478,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0168205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0535527, 1, 1, 0.513566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483829,-99) , 
5, 0.167496, 1, 0, 0.50028,-99) , 
10, 0.932005, 1, 0, 0.50432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474896,-99) , 
8, -2.14285, 0, 0, 0.503328,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0401459);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478076,-99) , 
7, -951.286, 1, 0, 0.535055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488565,-99) , 
7, -951.286, 0, 0, 0.500161,-99) , 
9, 2.06197, 0, 0, 0.504734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517399,-99) , 
NN(
0, 
0, 
-1, -0.677547, 1, -1, 0.479435,-99) , 
5, -0.794658, 1, 0, 0.489525,-99) , 
10, 5.48367, 1, 0, 0.501794,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0417223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333128, 0, 1, 0.51955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449603,-99) , 
7, -951.286, 0, 0, 0.47696,-99) , 
8, -1.00012, 0, 0, 0.50762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549549,-99) , 
NN(
0, 
0, 
-1, 0.151348, 1, -1, 0.491427,-99) , 
8, -0.99851, 1, 0, 0.497426,-99) , 
10, 2.25864, 1, 0, 0.503084,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0177762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483777,-99) , 
7, -951.286, 0, 0, 0.520124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499227,-99) , 
3, 9.26084, 0, 0, 0.502755,-99) , 
4, 0.999524, 1, 0, 0.504697,-99) , 
NN(
0, 
0, 
-1, -0.10878, 1, -1, 0.47926,-99) , 
0, 0.491424, 0, 0, 0.503332,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0201124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.517424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47945,-99) , 
8, -2.11563, 0, 0, 0.503717,-99) , 
8, 0.714262, 0, 0, 0.506953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516984,-99) , 
NN(
0, 
0, 
-1, 0.628528, 1, -1, 0.470179,-99) , 
4, 0.999524, 1, 0, 0.48634,-99) , 
5, 0.526006, 1, 0, 0.505068,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0279613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49413,-99) , 
10, 3.33211, 1, 0, 0.50302,-99) , 
8, -1.28561, 1, 0, 0.50902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436377,-99) , 
3, 9.47659, 1, 0, 0.500848,-99) , 
NN(
0, 
0, 
-1, 0.769845, 0, -1, 0.448186,-99) , 
10, 2.47939, 1, 0, 0.49608,-99) , 
9, 1.17592, 0, 0, 0.500821,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0219364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.725496, 1, 1, 0.505479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475039,-99) , 
10, 14.6293, 1, 0, 0.504142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478663,-99) , 
4, 0.999524, 1, 0, 0.5024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429846,-99) , 
3, 4.9444, 1, 0, 0.487593,-99) , 
5, 0.436911, 1, 0, 0.501915,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0154524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 15.2297, 1, 1, 0.517814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497345,-99) , 
10, -1.04687, 1, 0, 0.499661,-99) , 
5, -0.639017, 1, 0, 0.502084,-99) , 
NN(
0, 
0, 
-1, -0.103778, 1, -1, 0.47,-99) , 
0, 0.491424, 0, 0, 0.500356,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0420768);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47963,-99) , 
8, -1.57154, 0, 0, 0.515826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480176,-99) , 
8, -0.14344, 1, 0, 0.493487,-99) , 
10, 7.09597, 1, 0, 0.509563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488151,-99) , 
4, 0.999524, 1, 0, 0.498306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421856,-99) , 
3, 9.52867, 1, 0, 0.494079,-99) , 
5, -0.0975098, 1, 0, 0.501958,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0236707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0389392, 0, 1, 0.525091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447205,-99) , 
5, -0.0121144, 1, 0, 0.498219,-99) , 
10, 2.69174, 1, 0, 0.510526,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49522,-99) , 
10, -0.454895, 1, 0, 0.497858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466786,-99) , 
2, -0.21423, 0, 0, 0.496168,-99) , 
8, 0.428543, 0, 0, 0.500867,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0190254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.512043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491325,-99) , 
7, -951.286, 1, 0, 0.501395,-99) , 
8, 0.714249, 0, 0, 0.503947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476292,-99) , 
0, 0.490471, 0, 0, 0.502983,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0226315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.724406, 1, 1, 0.512476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487244,-99) , 
10, 12.8632, 1, 0, 0.508906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495261,-99) , 
4, 0.999048, 1, 0, 0.499971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451669,-99) , 
3, 9.5134, 1, 0, 0.497417,-99) , 
5, -0.278185, 1, 0, 0.50167,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.011312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499378,-99) , 
4, 0.999524, 1, 0, 0.501862,-99) , 
3, 8.96245, 0, 0, 0.503392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472532,-99) , 
4, 0.998571, 0, 0, 0.501824,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0459411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.097247, 1, 1, 0.516276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477825,-99) , 
8, 1.20405, 0, 0, 0.490242,-99) , 
10, 3.97469, 1, 0, 0.508107,-99) , 
NN(
NN(
0, 
0, 
-1, -1.04075, 1, 1, 0.533085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463799,-99) , 
7, -951.286, 0, 0, 0.481644,-99) , 
9, 1.99709, 0, 0, 0.493323,-99) , 
8, -0.428591, 0, 0, 0.502621,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0175125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.70849, 0, 1, 0.50427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416744,-99) , 
3, 4.7191, 1, 0, 0.489282,-99) , 
4, 0.999773, 0, 0, 0.501869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449945,-99) , 
4, 0.997619, 0, 0, 0.500349,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0204829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497883,-99) , 
3, 9.26585, 0, 0, 0.501827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390742,-99) , 
3, 4.62779, 1, 0, 0.485253,-99) , 
4, 0.999728, 0, 0, 0.499409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467962,-99) , 
4, 0.997143, 0, 0, 0.498606,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0105394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499333,-99) , 
4, 0.999524, 1, 0, 0.501105,-99) , 
3, 9.12687, 0, 0, 0.502734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469026,-99) , 
4, 0.998571, 0, 0, 0.501042,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0276077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91306, 1, 1, 0.508355,-99) , 
NN(
0, 
0, 
-1, 1.88216, 1, -1, 0.493531,-99) , 
5, 0.263023, 1, 0, 0.504668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456952,-99) , 
5, 0.161134, 0, 0, 0.470626,-99) , 
7, -951.286, 0, 0, 0.490905,-99) , 
8, -1.00002, 0, 0, 0.501917,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0248846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.137636, 1, 1, 0.513555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462835,-99) , 
8, -1.89335, 0, 0, 0.508753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488271,-99) , 
8, 0.605583, 0, 0, 0.494514,-99) , 
8, -1.57111, 1, 0, 0.496634,-99) , 
10, 1.47336, 1, 0, 0.501689,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0150679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0161856, 1, 1, 0.505347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467408,-99) , 
5, 0.624459, 1, 0, 0.503742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472995,-99) , 
4, 0.998572, 0, 0, 0.502192,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0133677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.225439, 0, 1, 0.531667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497805,-99) , 
4, 0.999048, 1, 0, 0.49968,-99) , 
3, 0.565161, 1, 0, 0.501669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469687,-99) , 
3, 9.46687, 1, 0, 0.500146,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0130702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498617,-99) , 
3, 0.569767, 1, 0, 0.501066,-99) , 
3, 9.2801, 0, 0, 0.502472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463006,-99) , 
4, 0.998571, 0, 0, 0.500507,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0185351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494833,-99) , 
10, 4.8898, 1, 0, 0.502853,-99) , 
8, -1.28566, 1, 0, 0.509997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461468,-99) , 
8, -1.28572, 0, 0, 0.495888,-99) , 
9, -3.3787, 1, 0, 0.49789,-99) , 
5, -0.459554, 1, 0, 0.50081,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0149623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483703,-99) , 
3, 2.31439, 1, 0, 0.530591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497759,-99) , 
5, -0.729329, 1, 0, 0.499735,-99) , 
4, 0.999048, 1, 0, 0.501897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475517,-99) , 
3, 9.27716, 1, 0, 0.50056,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.02571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495022,-99) , 
7, -951.286, 1, 0, 0.502408,-99) , 
3, 8.89355, 0, 0, 0.504043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41697,-99) , 
7, -951.286, 0, 0, 0.479064,-99) , 
4, 0.999048, 0, 0, 0.502228,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0116592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498252,-99) , 
3, 0.569002, 1, 0, 0.500032,-99) , 
4, 0.998095, 1, 0, 0.501691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475287,-99) , 
3, 9.33289, 1, 0, 0.50039,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0112048);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.504666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476969,-99) , 
4, 0.998571, 0, 0, 0.503253,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.028865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496308,-99) , 
10, 5.36614, 1, 0, 0.50434,-99) , 
8, -1.28606, 1, 0, 0.51099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479532,-99) , 
8, -1.36645, 0, 0, 0.506877,-99) , 
NN(
0, 
0, 
-1, 1.85709, 1, -1, 0.487099,-99) , 
10, 1.51131, 1, 0, 0.497933,-99) , 
5, -0.458408, 1, 0, 0.501084,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0206541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.58768, 0, 1, 0.506455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470736,-99) , 
4, 0.999048, 0, 0, 0.504686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481843,-99) , 
4, 0.999524, 1, 0, 0.496097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451264,-99) , 
3, 4.73322, 1, 0, 0.486198,-99) , 
5, 0.443525, 1, 0, 0.502251,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0150136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498313,-99) , 
3, 9.26585, 0, 0, 0.501324,-99) , 
NN(
0, 
0, 
-1, 4.50195, 1, -1, 0.48081,-99) , 
4, 0.999728, 0, 0, 0.498811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470563,-99) , 
4, 0.998571, 0, 0, 0.497379,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0142432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498567,-99) , 
10, 1.40502, 1, 0, 0.503013,-99) , 
4, 0.997619, 1, 0, 0.504222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468543,-99) , 
3, 9.46687, 1, 0, 0.502536,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0231875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.27397, 0, 1, 0.511123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481865,-99) , 
4, 0.999771, 0, 0, 0.508401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496187,-99) , 
4, 0.999048, 1, 0, 0.501401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432974,-99) , 
3, 9.2711, 1, 0, 0.497621,-99) , 
5, -0.188046, 1, 0, 0.502357,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0126776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.303126, 1, 1, 0.504398,-99) , 
NN(
0, 
0, 
-1, -0.0979072, 1, -1, 0.48209,-99) , 
0, 0.504349, 1, 0, 0.502961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463522,-99) , 
0, 0.490471, 0, 0, 0.501609,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0126692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.24601, 0, 1, 0.524732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497053,-99) , 
5, -0.730052, 1, 0, 0.498506,-99) , 
3, 0.55501, 1, 0, 0.500074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47129,-99) , 
3, 9.25366, 1, 0, 0.498631,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0119014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.526366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49874,-99) , 
2, -0.070574, 1, 0, 0.501267,-99) , 
3, 0.555616, 1, 0, 0.502792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471576,-99) , 
3, 9.26727, 1, 0, 0.501236,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0198631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.58659, 0, 1, 0.506082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417513,-99) , 
3, 4.69368, 1, 0, 0.490474,-99) , 
4, 0.999773, 0, 0, 0.50357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463049,-99) , 
4, 0.997619, 0, 0, 0.502379,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0259156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493663,-99) , 
10, 3.3992, 1, 0, 0.500662,-99) , 
8, -1.28532, 1, 0, 0.506789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494137,-99) , 
10, -0.849508, 1, 0, 0.497636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444565,-99) , 
3, 9.47659, 1, 0, 0.494899,-99) , 
9, 1.29567, 0, 0, 0.499115,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0222014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.70274, 0, 1, 0.507671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427874,-99) , 
3, 4.63495, 1, 0, 0.492635,-99) , 
4, 0.999773, 0, 0, 0.505254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458386,-99) , 
4, 0.997619, 0, 0, 0.503902,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0141927);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499456,-99) , 
3, 9.26585, 0, 0, 0.502534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424598,-99) , 
3, 4.70391, 1, 0, 0.488829,-99) , 
4, 0.999773, 0, 0, 0.50032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466131,-99) , 
4, 0.997619, 0, 0, 0.499321,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0207364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49001,-99) , 
7, -951.286, 1, 0, 0.51273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496448,-99) , 
7, -951.286, 0, 0, 0.501995,-99) , 
10, 0.248562, 1, 0, 0.504094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490101,-99) , 
3, 2.58869, 0, 0, 0.497505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448948,-99) , 
5, 0.162562, 1, 0, 0.48177,-99) , 
0, 0.492376, 0, 0, 0.502289,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0204379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494473,-99) , 
9, -2.9789, 1, 0, 0.54551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480405,-99) , 
7, -951.286, 1, 0, 0.517371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499372,-99) , 
10, 1.27863, 1, 0, 0.503113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431624,-99) , 
5, -0.398751, 1, 0, 0.480127,-99) , 
8, -1.57144, 0, 0, 0.501647,-99) , 
10, -0.392925, 1, 0, 0.503283,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0137205);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496617,-99) , 
7, -951.286, 0, 0, 0.526484,-99) , 
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.503132,-99) , 
4, 0.999524, 1, 0, 0.505819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481787,-99) , 
3, 9.49987, 1, 0, 0.504679,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.00911785);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48324,-99) , 
3, 9.48998, 1, 0, 0.502978,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0178183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478774,-99) , 
8, -2.12925, 0, 0, 0.503817,-99) , 
8, 1.57139, 0, 0, 0.505432,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49339,-99) , 
8, 0.144513, 0, 0, 0.511918,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.488264,-99) , 
2, -0.0710363, 1, 0, 0.492568,-99) , 
5, 0.173228, 1, 0, 0.501662,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0173463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49699,-99) , 
7, -951.286, 0, 0, 0.525846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496312,-99) , 
3, 4.5305, 0, 0, 0.499141,-99) , 
4, 0.999524, 1, 0, 0.502247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478527,-99) , 
3, 9.36646, 1, 0, 0.501093,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0174993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495073,-99) , 
7, -951.286, 0, 0, 0.52188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496445,-99) , 
10, 0.327935, 1, 0, 0.49947,-99) , 
4, 0.999524, 1, 0, 0.502039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472045,-99) , 
3, 9.47969, 1, 0, 0.500642,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0216154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0367019, 0, 1, 0.527828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462659,-99) , 
5, -0.0121144, 1, 0, 0.497474,-99) , 
10, 2.67446, 1, 0, 0.511251,-99) , 
NN(
NN(
0, 
0, 
-1, -1.36702, 1, 1, 0.510505,-99) , 
NN(
0, 
0, 
-1, -1.6939, 0, -1, 0.494619,-99) , 
9, 1.2855, 0, 0, 0.499612,-99) , 
8, 0.428543, 0, 0, 0.503423,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0245318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.70755, 0, 1, 0.539266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463302,-99) , 
10, 2.56642, 1, 0, 0.502228,-99) , 
9, 1.27763, 0, 0, 0.505721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49686,-99) , 
8, -0.428215, 1, 0, 0.507146,-99) , 
NN(
0, 
0, 
-1, -0.509949, 1, -1, 0.48129,-99) , 
7, -951.286, 1, 0, 0.496397,-99) , 
10, 3.61178, 1, 0, 0.503031,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.03799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4394,-99) , 
8, 1.85711, 1, 0, 0.513903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484157,-99) , 
8, 1.20385, 0, 0, 0.498427,-99) , 
7, -951.286, 1, 0, 0.507776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493787,-99) , 
9, 3.38191, 0, 0, 0.498157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453216,-99) , 
4, 0.999048, 0, 0, 0.49511,-99) , 
8, -0.428556, 0, 0, 0.503077,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0138443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.529899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49851,-99) , 
8, -1.85715, 1, 0, 0.500496,-99) , 
4, 0.999524, 1, 0, 0.5039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482432,-99) , 
3, 9.33306, 1, 0, 0.502857,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0099327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499199,-99) , 
10, -0.427327, 1, 0, 0.501354,-99) , 
4, 0.998095, 1, 0, 0.50275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478852,-99) , 
3, 9.36646, 1, 0, 0.501602,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.018089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.135146, 0, 1, 0.523862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464981,-99) , 
5, -0.014083, 1, 0, 0.5011,-99) , 
10, 2.85778, 1, 0, 0.51218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499377,-99) , 
3, 0.996562, 1, 0, 0.502818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476099,-99) , 
3, 9.32317, 1, 0, 0.501484,-99) , 
8, 0.428547, 0, 0, 0.504979,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0225269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.5802, 0, 1, 0.509263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42864,-99) , 
3, 4.70391, 1, 0, 0.490823,-99) , 
4, 0.999773, 0, 0, 0.5063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483178,-99) , 
4, 0.997619, 0, 0, 0.505616,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.011262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.36017, 1, 1, 0.503997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479469,-99) , 
5, 0.621129, 1, 0, 0.502871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465042,-99) , 
4, 0.997619, 0, 0, 0.501775,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0251127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495694,-99) , 
9, -3.00144, 1, 0, 0.545115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483853,-99) , 
7, -951.286, 1, 0, 0.518135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499003,-99) , 
8, -0.992767, 1, 0, 0.506942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454634,-99) , 
8, -1.00004, 0, 0, 0.494766,-99) , 
7, -951.286, 0, 0, 0.499325,-99) , 
10, -0.427327, 1, 0, 0.501226,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0275765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497076,-99) , 
4, 0.999048, 1, 0, 0.501982,-99) , 
8, 1.28845, 0, 0, 0.509095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458877,-99) , 
8, 1.2856, 1, 0, 0.499439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423003,-99) , 
4, 0.999048, 0, 0, 0.494012,-99) , 
7, -951.286, 0, 0, 0.49979,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0344276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457201,-99) , 
5, 0.439284, 1, 0, 0.502953,-99) , 
4, 0.999048, 1, 0, 0.509025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491185,-99) , 
10, -0.0509712, 1, 0, 0.49652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431185,-99) , 
4, 0.999048, 0, 0, 0.491879,-99) , 
7, -951.286, 0, 0, 0.498441,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0212057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471166,-99) , 
8, -1.43451, 0, 0, 0.502692,-99) , 
10, -1.24337, 1, 0, 0.513038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495937,-99) , 
8, -0.142872, 0, 0, 0.502198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473573,-99) , 
7, -951.286, 0, 0, 0.488126,-99) , 
5, 0.263776, 1, 0, 0.499899,-99) , 
10, -0.0123701, 1, 0, 0.501956,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.00556987);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499986,-99) , 
10, -1.20831, 1, 0, 0.501559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483334,-99) , 
10, 14.3928, 1, 0, 0.500829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477145,-99) , 
0, 0.505709, 1, 0, 0.500147,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0175564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494033,-99) , 
10, 4.87481, 1, 0, 0.50243,-99) , 
8, -1.28541, 1, 0, 0.507228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499108,-99) , 
10, -1.14661, 1, 0, 0.501423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438144,-99) , 
10, 2.82584, 1, 0, 0.498423,-99) , 
9, 1.29567, 0, 0, 0.501527,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0148968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493152,-99) , 
8, -2.23812, 0, 0, 0.521693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493849,-99) , 
5, 0.172893, 1, 0, 0.501884,-99) , 
8, -1.85716, 1, 0, 0.503042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474051,-99) , 
0, 0.505709, 1, 0, 0.502214,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0222458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434035,-99) , 
8, -1.87597, 0, 0, 0.503276,-99) , 
10, -1.18819, 1, 0, 0.506681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51966,-99) , 
NN(
0, 
0, 
-1, 10.0913, 1, -1, 0.493428,-99) , 
8, -1.28565, 1, 0, 0.495237,-99) , 
10, 1.69411, 1, 0, 0.50048,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0180167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492985,-99) , 
10, 4.62651, 1, 0, 0.502932,-99) , 
8, 1.57122, 0, 0, 0.504285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483328,-99) , 
0, 0.499632, 1, 0, 0.496044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462101,-99) , 
0, 0.492376, 0, 0, 0.493032,-99) , 
5, 0.172856, 1, 0, 0.501011,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0105319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47677,-99) , 
3, 9.48998, 1, 0, 0.502318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467242,-99) , 
1, 0.0243244, 1, 0, 0.501342,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0205816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487417,-99) , 
6, 0.0067931, 1, 0, 0.503529,-99) , 
6, 0.023778, 0, 0, 0.508408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496113,-99) , 
9, 1.77602, 0, 0, 0.498643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476071,-99) , 
10, 4.10894, 1, 0, 0.496881,-99) , 
5, -0.459391, 1, 0, 0.499655,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0215436);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473781,-99) , 
6, 0.0238055, 1, 0, 0.502662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470128,-99) , 
7, -951.286, 0, 0, 0.48966,-99) , 
8, -1.00001, 0, 0, 0.500043,-99) , 
5, -0.819543, 1, 0, 0.500882,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0175805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495704,-99) , 
8, 1.85708, 0, 0, 0.496855,-99) , 
4, 0.998095, 1, 0, 0.498589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42481,-99) , 
5, -0.0119326, 1, 0, 0.476493,-99) , 
3, 9.17924, 1, 0, 0.497471,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0264459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49428,-99) , 
10, 7.23733, 1, 0, 0.503514,-99) , 
8, -1.2862, 1, 0, 0.50958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490447,-99) , 
8, -0.143036, 0, 0, 0.501256,-99) , 
NN(
0, 
0, 
-1, 1.89554, 0, -1, 0.482689,-99) , 
10, 2.94806, 1, 0, 0.497862,-99) , 
5, -0.460849, 1, 0, 0.500663,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0152186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.286525, 1, 1, 0.531768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477396,-99) , 
8, -2.2517, 0, 0, 0.515762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494187,-99) , 
10, 3.50789, 1, 0, 0.500929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476096,-99) , 
8, -1.35374, 0, 0, 0.499983,-99) , 
8, -1.57143, 1, 0, 0.50145,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0182562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.507552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434258,-99) , 
3, 4.70391, 1, 0, 0.487855,-99) , 
4, 0.999728, 0, 0, 0.50488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474376,-99) , 
4, 0.998095, 0, 0, 0.503788,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0151792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.724767, 1, 1, 0.524512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4899,-99) , 
10, 13.7948, 1, 0, 0.512846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527929,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.495431,-99) , 
10, -1.04687, 1, 0, 0.497066,-99) , 
5, -0.639225, 1, 0, 0.499158,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0291279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488852,-99) , 
4, 0.999971, 0, 0, 0.506399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465494,-99) , 
4, 0.999691, 0, 0, 0.503269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491852,-99) , 
4, 0.999048, 1, 0, 0.497334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449347,-99) , 
3, 9.29097, 1, 0, 0.494573,-99) , 
5, -0.0975098, 1, 0, 0.499,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0142616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.94526, 1, 1, 0.527294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465733,-99) , 
0, 0.498089, 0, 0, 0.491937,-99) , 
3, 4.76988, 1, 0, 0.512081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488527,-99) , 
8, -1.16326, 0, 0, 0.499851,-99) , 
8, -2.14285, 1, 0, 0.500882,-99) , 
2, 0.0714698, 0, 0, 0.502631,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.00823855);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499013,-99) , 
5, -0.728582, 1, 0, 0.500696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478539,-99) , 
10, 13.8468, 1, 0, 0.499733,-99) , 
8, 1.85709, 0, 0, 0.500615,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0223396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479265,-99) , 
4, 0.999932, 0, 0, 0.515749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497098,-99) , 
4, 0.999864, 1, 0, 0.500608,-99) , 
3, 4.61738, 0, 0, 0.503791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475693,-99) , 
4, 0.998571, 0, 0, 0.502408,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0211586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497176,-99) , 
0, 0.496186, 1, 0, 0.500718,-99) , 
3, 9.2579, 0, 0, 0.502437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428588,-99) , 
7, -951.286, 0, 0, 0.481321,-99) , 
4, 0.999048, 0, 0, 0.500931,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0108375);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526852,-99) , 
NN(
NN(
0, 
0, 
-1, -0.726963, 1, 1, 0.50406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485082,-99) , 
10, 12.8179, 1, 0, 0.503031,-99) , 
8, -2.14285, 1, 0, 0.503858,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.00901841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499979,-99) , 
8, -1.57145, 1, 0, 0.502129,-99) , 
4, 0.998095, 1, 0, 0.503613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477672,-99) , 
3, 9.47906, 1, 0, 0.502419,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0188397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480329,-99) , 
7, -951.286, 1, 0, 0.506791,-99) , 
5, -0.0032546, 1, 0, 0.513051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481061,-99) , 
9, 9.58547, 1, 0, 0.500401,-99) , 
5, -0.819543, 1, 0, 0.50147,-99) , 
10, 0.236272, 1, 0, 0.503705,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0122748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496955,-99) , 
7, -951.286, 1, 0, 0.518792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499165,-99) , 
4, 0.998572, 1, 0, 0.500384,-99) , 
10, 0.0813053, 1, 0, 0.503483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475564,-99) , 
3, 9.48356, 1, 0, 0.502193,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0131233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.523943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49831,-99) , 
10, -0.393077, 1, 0, 0.500241,-99) , 
4, 0.999524, 1, 0, 0.502988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475289,-99) , 
3, 9.4997, 1, 0, 0.501729,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0144185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.707657, 1, 1, 0.526274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493141,-99) , 
10, 14.125, 1, 0, 0.515826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466488,-99) , 
8, -1.85716, 0, 0, 0.500491,-99) , 
9, -3.25903, 1, 0, 0.501979,-99) , 
5, -0.639225, 1, 0, 0.503811,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0192388);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.24801, 0, 1, 0.505407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428736,-99) , 
7, -951.286, 0, 0, 0.478082,-99) , 
4, 0.999048, 0, 0, 0.503459,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0158824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495712,-99) , 
2, 0.0760719, 0, 0, 0.498196,-99) , 
3, 9.26727, 0, 0, 0.499889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474959,-99) , 
4, 0.998571, 0, 0, 0.498643,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0198751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488257,-99) , 
6, 0.006789, 1, 0, 0.5055,-99) , 
6, 0.0237627, 0, 0, 0.511944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498977,-99) , 
10, -1.27033, 1, 0, 0.518507,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.49508,-99) , 
10, -0.864466, 1, 0, 0.496829,-99) , 
5, -0.459245, 1, 0, 0.50049,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.00935664);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479404,-99) , 
3, 9.47969, 1, 0, 0.502748,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0235775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.725422, 1, 1, 0.524496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487576,-99) , 
10, 14.1189, 1, 0, 0.512842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494572,-99) , 
6, 0.00906489, 0, 0, 0.500575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462696,-99) , 
6, 0.0237961, 1, 0, 0.499116,-99) , 
5, -0.64004, 1, 0, 0.500925,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0148807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496872,-99) , 
3, 2.36658, 1, 0, 0.538313,-99) , 
NN(
0, 
0, 
-1, -2.14285, 1, 1, 0.504536,-99) , 
4, 0.999048, 1, 0, 0.506925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485441,-99) , 
3, 9.50217, 1, 0, 0.505933,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0158395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499979,-99) , 
8, -1.57144, 1, 0, 0.501688,-99) , 
3, 9.24801, 0, 0, 0.503869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440515,-99) , 
7, -951.286, 0, 0, 0.487761,-99) , 
4, 0.999048, 0, 0, 0.502714,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0172087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0922565, 1, 1, 0.517999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498084,-99) , 
7, -951.286, 0, 0, 0.502582,-99) , 
10, 0.236272, 1, 0, 0.505582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49084,-99) , 
5, -0.286439, 1, 0, 0.497431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456158,-99) , 
3, 4.67796, 1, 0, 0.488355,-99) , 
0, 0.493328, 0, 0, 0.503563,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0164997);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470788,-99) , 
6, 0.0237961, 1, 0, 0.504476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481986,-99) , 
9, 12.8312, 1, 0, 0.503292,-99) , 
5, -0.819751, 1, 0, 0.504263,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0212642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495358,-99) , 
7, -951.286, 1, 0, 0.501376,-99) , 
3, 9.27716, 0, 0, 0.503136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43216,-99) , 
7, -951.286, 0, 0, 0.483293,-99) , 
4, 0.999048, 0, 0, 0.501725,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.00699119);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.143874, 1, 1, 0.513193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53857,-99) , 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.498623,-99) , 
10, -1.26629, 1, 0, 0.49993,-99) , 
5, -0.728784, 1, 0, 0.501058,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.00932234);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480017,-99) , 
3, 9.50281, 1, 0, 0.502819,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0141121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499383,-99) , 
8, -2.14286, 1, 0, 0.500515,-99) , 
3, 8.80394, 0, 0, 0.501882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435982,-99) , 
7, -951.286, 0, 0, 0.482598,-99) , 
4, 0.999048, 0, 0, 0.500514,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0173851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474377,-99) , 
4, 0.99966, 0, 0, 0.501576,-99) , 
3, 9.26659, 0, 0, 0.503679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526464,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.459324,-99) , 
7, -951.286, 0, 0, 0.485914,-99) , 
4, 0.999524, 0, 0, 0.501605,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0177834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80688, 0, 1, 0.50354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473042,-99) , 
0, 0.500947, 0, 0, 0.481435,-99) , 
4, 0.999773, 0, 0, 0.500858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437378,-99) , 
7, -951.286, 0, 0, 0.476385,-99) , 
4, 0.999048, 0, 0, 0.499141,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0118375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496926,-99) , 
2, 0.2082, 0, 0, 0.497812,-99) , 
4, 0.998095, 1, 0, 0.499453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478619,-99) , 
3, 9.46687, 1, 0, 0.49847,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0108914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.0482, 1, 1, 0.508995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497671,-99) , 
10, -1.24903, 1, 0, 0.499233,-99) , 
5, -0.548809, 1, 0, 0.501035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473377,-99) , 
0, 0.490471, 0, 0, 0.500081,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0119921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88117, 1, 1, 0.523595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498345,-99) , 
8, -1.57143, 1, 0, 0.499848,-99) , 
4, 0.999524, 1, 0, 0.502595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479113,-99) , 
3, 9.36646, 1, 0, 0.501471,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0111714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.13711, 1, 1, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488356,-99) , 
0, 0.505165, 1, 0, 0.503836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472211,-99) , 
0, 0.490471, 0, 0, 0.502759,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0110307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26648, 0, 1, 0.503294,-99) , 
NN(
0, 
0, 
-1, 4.71204, 1, -1, 0.488433,-99) , 
4, 0.999773, 0, 0, 0.500897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464211,-99) , 
4, 0.997619, 0, 0, 0.499852,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0183801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496357,-99) , 
10, -0.393077, 1, 0, 0.498332,-99) , 
3, 9.28598, 0, 0, 0.499779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441913,-99) , 
7, -951.286, 0, 0, 0.480043,-99) , 
4, 0.999048, 0, 0, 0.498381,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0153119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.77545, 0, 1, 0.503614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482322,-99) , 
9, -0.974532, 0, 0, 0.489893,-99) , 
5, 0.259339, 1, 0, 0.500329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464729,-99) , 
8, -2.14286, 0, 0, 0.499184,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0237814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484209,-99) , 
4, 0.999955, 0, 0, 0.511485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496838,-99) , 
2, 0.116792, 0, 0, 0.498048,-99) , 
3, 4.65503, 0, 0, 0.500832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431753,-99) , 
7, -951.286, 0, 0, 0.476372,-99) , 
4, 0.999048, 0, 0, 0.499112,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0119492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.516517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469393,-99) , 
3, 7.69636, 1, 0, 0.501082,-99) , 
5, 0.44348, 0, 0, 0.503054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470632,-99) , 
3, 9.47659, 1, 0, 0.501563,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0089512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498518,-99) , 
8, -2.14286, 1, 0, 0.499587,-99) , 
4, 0.997619, 1, 0, 0.500622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474947,-99) , 
3, 9.26338, 1, 0, 0.499346,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.00682346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499681,-99) , 
2, 0.271687, 0, 0, 0.500451,-99) , 
2, -0.216951, 1, 0, 0.501878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476906,-99) , 
3, 9.47659, 1, 0, 0.500736,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.00975993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486772,-99) , 
3, 2.32531, 1, 0, 0.521688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499693,-99) , 
3, 0.55832, 1, 0, 0.500912,-99) , 
4, 0.999048, 1, 0, 0.502361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47021,-99) , 
3, 9.32317, 1, 0, 0.50082,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0281287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25849, 0, 1, 0.530225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469577,-99) , 
8, 1.47613, 1, 0, 0.50053,-99) , 
7, -951.286, 0, 0, 0.511589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493763,-99) , 
7, -951.286, 1, 0, 0.502109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470523,-99) , 
10, 1.74571, 0, 0, 0.48494,-99) , 
8, -1.40817, 0, 0, 0.499531,-99) , 
8, 0.71426, 0, 0, 0.502427,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0253493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493909,-99) , 
8, -1.16231, 1, 0, 0.500157,-99) , 
8, 1.28557, 0, 0, 0.506445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466497,-99) , 
8, -1.57145, 0, 0, 0.499721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439174,-99) , 
4, 0.999048, 0, 0, 0.495561,-99) , 
7, -951.286, 0, 0, 0.499744,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0305891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485026,-99) , 
10, 2.41287, 1, 0, 0.503997,-99) , 
8, 1.28548, 0, 0, 0.508666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492621,-99) , 
10, 0.95419, 1, 0, 0.500023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438698,-99) , 
8, -2.14286, 0, 0, 0.49738,-99) , 
7, -951.286, 0, 0, 0.501682,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0226399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473687,-99) , 
5, 0.35381, 1, 0, 0.506457,-99) , 
4, 0.999048, 1, 0, 0.509746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463526,-99) , 
4, 0.999048, 0, 0, 0.499632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444406,-99) , 
8, -2.14286, 0, 0, 0.497234,-99) , 
7, -951.286, 0, 0, 0.502026,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0198771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524281,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.507214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49277,-99) , 
9, -2.3475, 1, 0, 0.497887,-99) , 
7, -951.286, 0, 0, 0.501485,-99) , 
5, -0.819433, 1, 0, 0.502402,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0187844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139149, 0, 1, 0.512443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471202,-99) , 
5, 0.1651, 1, 0, 0.498742,-99) , 
10, 2.18582, 1, 0, 0.504834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493441,-99) , 
9, 1.73803, 0, 0, 0.500179,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.478613,-99) , 
3, 4.61738, 1, 0, 0.495635,-99) , 
8, -0.428591, 0, 0, 0.501421,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0130236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.524274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497946,-99) , 
8, -1.85716, 1, 0, 0.499128,-99) , 
4, 0.999524, 1, 0, 0.502034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472672,-99) , 
3, 9.32317, 1, 0, 0.500617,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.00841289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473055,-99) , 
3, 7.69939, 1, 0, 0.500171,-99) , 
4, 0.998095, 1, 0, 0.501696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480038,-99) , 
3, 9.47969, 1, 0, 0.500682,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.00914643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491637,-99) , 
8, -0.918378, 0, 0, 0.49998,-99) , 
8, -2.14285, 1, 0, 0.50074,-99) , 
NN(
0, 
0, 
-1, 0.997176, 0, -1, 0.487574,-99) , 
0, 0.503804, 1, 0, 0.499685,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.00871515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.353351, 0, 1, 0.52605,-99) , 
NN(
0, 
0, 
-1, 7.70516, 1, -1, 0.4983,-99) , 
4, 0.999048, 1, 0, 0.500216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475163,-99) , 
3, 9.48998, 1, 0, 0.499076,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0156066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497461,-99) , 
3, 1.43815, 1, 0, 0.500217,-99) , 
3, 9.26585, 0, 0, 0.502529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494139,-99) , 
0, 0.500131, 1, 0, 0.507554,-99) , 
NN(
0, 
0, 
-1, 0.49351, 1, -1, 0.467326,-99) , 
0, 0.497138, 0, 0, 0.489609,-99) , 
4, 0.999524, 0, 0, 0.501023,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.00801861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498961,-99) , 
10, 0.0813053, 1, 0, 0.500714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480785,-99) , 
5, 0.615268, 1, 0, 0.499756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472006,-99) , 
4, 0.997619, 0, 0, 0.498957,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0111963);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435874,-99) , 
5, -0.00954735, 1, 0, 0.480012,-99) , 
3, 9.13212, 1, 0, 0.502391,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0161058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498471,-99) , 
8, -1.59963, 0, 0, 0.525973,-99) , 
NN(
0, 
0, 
-1, -1.57145, 1, 1, 0.502584,-99) , 
10, 1.06286, 1, 0, 0.50588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494031,-99) , 
9, -0.200611, 0, 0, 0.497836,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.474892,-99) , 
10, 2.34258, 1, 0, 0.495024,-99) , 
5, -0.0105907, 1, 0, 0.501287,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0149158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499235,-99) , 
9, 1.3355, 0, 0, 0.503307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485499,-99) , 
5, -0.661807, 1, 0, 0.495219,-99) , 
10, 3.71406, 1, 0, 0.500952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471862,-99) , 
4, 0.997619, 0, 0, 0.500116,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.00682962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499486,-99) , 
2, -0.21882, 1, 0, 0.500468,-99) , 
4, 0.997619, 1, 0, 0.501653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481212,-99) , 
3, 9.27716, 1, 0, 0.50064,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.013356);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27223, 0, 1, 0.503673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517753,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.462304,-99) , 
7, -951.286, 0, 0, 0.484425,-99) , 
4, 0.999524, 0, 0, 0.501454,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0255603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492824,-99) , 
7, -951.286, 0, 0, 0.500098,-99) , 
9, 1.82263, 0, 0, 0.503547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491273,-99) , 
10, 7.09522, 1, 0, 0.502112,-99) , 
NN(
0, 
0, 
-1, -0.544184, 1, -1, 0.482402,-99) , 
7, -951.286, 1, 0, 0.49386,-99) , 
10, 3.86195, 1, 0, 0.500914,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0126524);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470502,-99) , 
1, -0.0249482, 0, 0, 0.50358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477143,-99) , 
1, 0.024806, 1, 0, 0.502844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472901,-99) , 
0, 0.505709, 1, 0, 0.501993,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0147476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.443362, 0, 1, 0.520886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496554,-99) , 
8, -1.57144, 1, 0, 0.498149,-99) , 
4, 0.999524, 1, 0, 0.500756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470709,-99) , 
3, 9.36646, 1, 0, 0.499341,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0120099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496463,-99) , 
0, 0.495233, 0, 0, 0.523402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499164,-99) , 
8, -1.85714, 1, 0, 0.50091,-99) , 
4, 0.999524, 1, 0, 0.503489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476305,-99) , 
3, 9.36646, 1, 0, 0.50222,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0124387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499102,-99) , 
8, -2.14286, 1, 0, 0.500409,-99) , 
3, 8.70274, 0, 0, 0.502439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507443,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.467784,-99) , 
7, -951.286, 0, 0, 0.483318,-99) , 
4, 0.999524, 0, 0, 0.500217,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0137915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26084, 0, 1, 0.50517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447541,-99) , 
3, 4.62779, 1, 0, 0.49103,-99) , 
4, 0.999728, 0, 0, 0.503264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474592,-99) , 
4, 0.998095, 0, 0, 0.50225,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0138901);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487378,-99) , 
4, 0.999932, 0, 0, 0.513397,-99) , 
NN(
0, 
0, 
-1, -0.114146, 1, 1, 0.501865,-99) , 
3, 4.69428, 0, 0, 0.504216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47495,-99) , 
4, 0.998571, 0, 0, 0.502796,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0290165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.839573, 0, 1, 0.509048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472003,-99) , 
7, -951.286, 0, 0, 0.491013,-99) , 
8, -1.00003, 0, 0, 0.504632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486018,-99) , 
7, -951.286, 1, 0, 0.509275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477602,-99) , 
5, -0.566814, 1, 0, 0.487638,-99) , 
8, -0.142132, 1, 0, 0.494918,-99) , 
10, 3.34009, 1, 0, 0.501598,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.00867516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532898,-99) , 
NN(
0, 
0, 
-1, 7.27137, 1, -1, 0.497633,-99) , 
4, 0.998095, 1, 0, 0.498845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476628,-99) , 
3, 9.50217, 1, 0, 0.497819,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0124151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.136743, 0, 1, 0.51993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475581,-99) , 
5, -0.203687, 1, 0, 0.496458,-99) , 
10, 2.91629, 1, 0, 0.507607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499226,-99) , 
4, 0.998571, 1, 0, 0.500612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475817,-99) , 
3, 9.4997, 1, 0, 0.499484,-99) , 
8, 0.714243, 0, 0, 0.501429,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0112809);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.2579, 0, 1, 0.503411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459895,-99) , 
7, -951.286, 0, 0, 0.486222,-99) , 
4, 0.999048, 0, 0, 0.502191,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.00966117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498979,-99) , 
2, 0.0698728, 0, 0, 0.501173,-99) , 
4, 0.997619, 1, 0, 0.502366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480488,-99) , 
3, 9.26727, 1, 0, 0.501294,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.00944399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470456,-99) , 
8, -2.14286, 0, 0, 0.501632,-99) , 
10, -1.11151, 1, 0, 0.502615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481732,-99) , 
10, 14.4518, 1, 0, 0.5018,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0130444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499334,-99) , 
5, 0.444667, 0, 0, 0.526605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49634,-99) , 
0, 0.492376, 1, 0, 0.497619,-99) , 
4, 0.999048, 1, 0, 0.499653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483474,-99) , 
3, 9.25366, 1, 0, 0.498855,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0133874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498801,-99) , 
8, -1.85714, 1, 0, 0.500161,-99) , 
3, 9.18172, 0, 0, 0.502194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479189,-99) , 
0, 0.49809, 0, 0, 0.49555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454897,-99) , 
8, -0.71427, 0, 0, 0.484737,-99) , 
4, 0.999524, 0, 0, 0.500158,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0173285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.27763, 0, 1, 0.508079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468775,-99) , 
5, -0.32384, 1, 0, 0.498217,-99) , 
10, 3.71406, 1, 0, 0.505304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491648,-99) , 
3, 2.51035, 0, 0, 0.496066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462397,-99) , 
3, 4.6711, 1, 0, 0.488645,-99) , 
0, 0.493328, 0, 0, 0.503353,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0132125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546817,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.497876,-99) , 
3, 9.26648, 0, 0, 0.5002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50459,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.461935,-99) , 
7, -951.286, 0, 0, 0.478857,-99) , 
4, 0.999524, 0, 0, 0.497748,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0128909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.504564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472053,-99) , 
3, 7.26874, 1, 0, 0.503103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476098,-99) , 
3, 9.4997, 1, 0, 0.501878,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0124291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143072, 0, 1, 0.517041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49983,-99) , 
10, 0.174617, 1, 0, 0.501983,-99) , 
2, 0.0714698, 0, 0, 0.504209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494272,-99) , 
3, 1.46855, 1, 0, 0.500937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467916,-99) , 
3, 4.80631, 1, 0, 0.494729,-99) , 
0, 0.495233, 0, 0, 0.502057,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0104928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477148,-99) , 
4, 0.999683, 0, 0, 0.500567,-99) , 
3, 9.27223, 0, 0, 0.502179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485702,-99) , 
0, 0.49809, 0, 0, 0.496584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458025,-99) , 
0, 0.494281, 0, 0, 0.486441,-99) , 
4, 0.999524, 0, 0, 0.500356,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.00853187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498841,-99) , 
8, 1.85702, 0, 0, 0.499865,-99) , 
2, -0.217029, 1, 0, 0.501276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478078,-99) , 
3, 9.37865, 1, 0, 0.50018,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0110846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.46061, 0, 1, 0.503551,-99) , 
NN(
0, 
0, 
-1, -0.10008, 0, -1, 0.488608,-99) , 
4, 0.999773, 0, 0, 0.501178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469127,-99) , 
4, 0.997619, 0, 0, 0.500261,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0123305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499602,-99) , 
3, 8.58672, 0, 0, 0.50297,-99) , 
NN(
0, 
0, 
-1, 4.69368, 1, -1, 0.488978,-99) , 
4, 0.999819, 0, 0, 0.500452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462365,-99) , 
4, 0.998095, 0, 0, 0.49913,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.00589184);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.28598, 0, 1, 0.502032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479387,-99) , 
4, 0.998571, 0, 0, 0.500918,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0104051);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27699, 0, 1, 0.503177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461559,-99) , 
7, -951.286, 0, 0, 0.485371,-99) , 
4, 0.999048, 0, 0, 0.501926,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0182923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.24615, 1, 1, 0.511704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488715,-99) , 
5, -0.00761816, 1, 0, 0.497566,-99) , 
3, 4.4699, 0, 0, 0.500697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462053,-99) , 
7, -951.286, 0, 0, 0.483549,-99) , 
4, 0.999048, 0, 0, 0.499481,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0111021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498482,-99) , 
3, 0.559273, 1, 0, 0.499619,-99) , 
4, 0.998095, 1, 0, 0.501266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441324,-99) , 
5, -0.0119326, 1, 0, 0.475589,-99) , 
3, 9.12457, 1, 0, 0.499954,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0118655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499042,-99) , 
8, -1.57142, 1, 0, 0.500964,-99) , 
3, 9.2602, 0, 0, 0.50254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487124,-99) , 
8, 0.346927, 1, 0, 0.497753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456708,-99) , 
8, -0.71427, 0, 0, 0.486768,-99) , 
4, 0.999524, 0, 0, 0.50072,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0111707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213585, 1, 1, 0.503574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470969,-99) , 
3, 7.25894, 1, 0, 0.502119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475904,-99) , 
3, 9.48998, 1, 0, 0.500935,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0153053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481345,-99) , 
6, 0.00122873, 0, 0, 0.501219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466862,-99) , 
1, -0.0258036, 0, 0, 0.500288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474798,-99) , 
1, 0.0240083, 1, 0, 0.499557,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0124585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498178,-99) , 
10, 3.76409, 1, 0, 0.506566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452936,-99) , 
10, 2.79016, 1, 0, 0.496271,-99) , 
9, 1.7079, 0, 0, 0.499295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480155,-99) , 
10, 14.3905, 1, 0, 0.498529,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0243592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46123,-99) , 
8, 1.85713, 1, 0, 0.498489,-99) , 
7, -951.286, 0, 0, 0.507204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447961,-99) , 
8, -2.04762, 0, 0, 0.501141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486491,-99) , 
8, -1.28471, 1, 0, 0.491284,-99) , 
7, -951.286, 1, 0, 0.497327,-99) , 
8, 0.999958, 0, 0, 0.498986,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0136692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497614,-99) , 
5, 0.445197, 0, 0, 0.518238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496173,-99) , 
8, 1.85704, 0, 0, 0.497271,-99) , 
4, 0.999048, 1, 0, 0.498713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471251,-99) , 
3, 9.32317, 1, 0, 0.497406,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0144031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495287,-99) , 
3, 1.45529, 1, 0, 0.499265,-99) , 
2, -0.214362, 1, 0, 0.50066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479267,-99) , 
3, 9.46687, 1, 0, 0.49967,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.00787005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.501842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468766,-99) , 
3, 7.71495, 1, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472265,-99) , 
3, 9.4997, 1, 0, 0.499466,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0111489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539717,-99) , 
NN(
0, 
0, 
-1, 0.999705, 0, -1, 0.498265,-99) , 
3, 9.27375, 0, 0, 0.50018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485278,-99) , 
7, -951.286, 0, 0, 0.496062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456559,-99) , 
8, -0.714509, 0, 0, 0.485622,-99) , 
4, 0.999524, 0, 0, 0.498494,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0111837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498384,-99) , 
3, 8.79781, 0, 0, 0.500414,-99) , 
NN(
0, 
0, 
-1, 0.849811, 0, -1, 0.486034,-99) , 
4, 0.99966, 0, 0, 0.498982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473658,-99) , 
4, 0.998571, 0, 0, 0.497737,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0114623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495288,-99) , 
3, 1.45168, 1, 0, 0.518356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499073,-99) , 
4, 0.999864, 1, 0, 0.50103,-99) , 
4, 0.999524, 1, 0, 0.503025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481308,-99) , 
3, 9.37635, 1, 0, 0.501975,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0172612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499565,-99) , 
4, 0.999955, 0, 0, 0.514846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496485,-99) , 
5, -0.189218, 1, 0, 0.501434,-99) , 
3, 4.65503, 0, 0, 0.504209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466718,-99) , 
7, -951.286, 0, 0, 0.486037,-99) , 
4, 0.999048, 0, 0, 0.502914,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0229988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.421263, 0, 1, 0.510684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461406,-99) , 
3, 9.4997, 1, 0, 0.508191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491164,-99) , 
1, 0.010192, 0, 0, 0.494265,-99) , 
6, 0.023785, 0, 0, 0.496885,-99) , 
10, 2.02619, 1, 0, 0.502743,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0142672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.434273, 0, 1, 0.525937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495358,-99) , 
3, 2.35932, 0, 0, 0.499342,-99) , 
4, 0.999048, 1, 0, 0.501181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465575,-99) , 
3, 9.47969, 1, 0, 0.499584,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.015254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498107,-99) , 
2, -0.0119237, 1, 0, 0.502598,-99) , 
3, 9.26585, 0, 0, 0.503915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470365,-99) , 
5, -0.00861476, 0, 0, 0.490132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462803,-99) , 
4, 0.99771, 0, 0, 0.483235,-99) , 
4, 0.999524, 0, 0, 0.501533,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0219869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48299,-99) , 
8, -1.57144, 0, 0, 0.509206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495314,-99) , 
6, 0.023778, 0, 0, 0.498356,-99) , 
10, 3.71481, 1, 0, 0.506145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479091,-99) , 
8, 0.999664, 1, 0, 0.498664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464255,-99) , 
4, 0.999524, 0, 0, 0.493045,-99) , 
0, 0.495233, 0, 0, 0.503167,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0198152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495951,-99) , 
9, 1.2855, 0, 0, 0.501001,-99) , 
3, 9.1881, 0, 0, 0.503159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478796,-99) , 
5, 0.444384, 0, 0, 0.491423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457347,-99) , 
0, 0.494281, 0, 0, 0.482428,-99) , 
4, 0.999524, 0, 0, 0.500746,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.00991476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499505,-99) , 
9, 2.34892, 0, 0, 0.50246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484212,-99) , 
9, 15.8783, 1, 0, 0.501241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476255,-99) , 
3, 9.46687, 1, 0, 0.500098,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0100153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27601, 0, 1, 0.503347,-99) , 
NN(
0, 
0, 
-1, -1.75708, 0, -1, 0.489248,-99) , 
4, 0.999637, 0, 0, 0.501846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471216,-99) , 
4, 0.998095, 0, 0, 0.500761,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.00874223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0118923, 0, 1, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470148,-99) , 
1, -0.0249803, 0, 0, 0.501842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464907,-99) , 
1, 0.0247997, 1, 0, 0.500846,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0101519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26648, 0, 1, 0.503405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47509,-99) , 
0, 0.496186, 0, 0, 0.490908,-99) , 
4, 0.999728, 0, 0, 0.501882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476067,-99) , 
4, 0.998571, 0, 0, 0.500624,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0120757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.970061, 0, 1, 0.508109,-99) , 
NN(
0, 
0, 
-1, 6.29455, 1, -1, 0.49662,-99) , 
5, 0.0772411, 0, 0, 0.500718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474298,-99) , 
3, 9.37635, 1, 0, 0.499476,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0110006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
8, 0.714206, 0, 0, 0.501052,-99) , 
4, 0.997619, 1, 0, 0.502111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473256,-99) , 
3, 9.25366, 1, 0, 0.500712,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0125158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498566,-99) , 
8, -1.85716, 1, 0, 0.499695,-99) , 
3, 9.26648, 0, 0, 0.50119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479988,-99) , 
0, 0.497138, 0, 0, 0.499079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450314,-99) , 
8, -0.714091, 0, 0, 0.486233,-99) , 
4, 0.999524, 0, 0, 0.49947,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0129403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.2602, 0, 1, 0.505444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463113,-99) , 
8, -1.00015, 0, 0, 0.492915,-99) , 
4, 0.999796, 0, 0, 0.503517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478693,-99) , 
4, 0.998571, 0, 0, 0.502303,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.00719343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499312,-99) , 
8, -2.14284, 1, 0, 0.500169,-99) , 
4, 0.997619, 1, 0, 0.501182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473666,-99) , 
3, 9.36646, 1, 0, 0.499885,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.00698378);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480482,-99) , 
3, 9.26727, 1, 0, 0.501603,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0109321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491392,-99) , 
10, 6.06148, 1, 0, 0.500393,-99) , 
4, 0.997619, 1, 0, 0.501519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4748,-99) , 
3, 9.46687, 1, 0, 0.500301,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0120905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.52491, 0, 1, 0.503449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476134,-99) , 
5, 0.61892, 1, 0, 0.502308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454976,-99) , 
7, -951.286, 0, 0, 0.475282,-99) , 
4, 0.999048, 0, 0, 0.500442,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.00992815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.53457, 0, 1, 0.501671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46841,-99) , 
4, 0.999683, 0, 0, 0.500373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481707,-99) , 
2, -0.07112, 1, 0, 0.489968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451792,-99) , 
8, -0.714417, 0, 0, 0.479923,-99) , 
4, 0.999524, 0, 0, 0.498028,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0229707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472849,-99) , 
5, 0.349105, 1, 0, 0.499008,-99) , 
8, 1.28529, 0, 0, 0.503349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492318,-99) , 
10, 0.892358, 1, 0, 0.497266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446006,-99) , 
8, -2.14284, 0, 0, 0.495027,-99) , 
7, -951.286, 0, 0, 0.498204,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0161873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494818,-99) , 
8, -2.14286, 1, 0, 0.495621,-99) , 
3, 9.26084, 0, 0, 0.497355,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479634,-99) , 
0, 0.495233, 0, 0, 0.495183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457055,-99) , 
8, -0.714498, 0, 0, 0.485241,-99) , 
4, 0.999524, 0, 0, 0.495955,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0146251);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498973,-99) , 
3, 1.45264, 1, 0, 0.514454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495735,-99) , 
8, 1.85708, 0, 0, 0.496946,-99) , 
4, 0.999524, 1, 0, 0.498946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473035,-99) , 
3, 9.33986, 1, 0, 0.497705,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0122139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215253, 1, 1, 0.504039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476068,-99) , 
3, 7.13195, 1, 0, 0.502753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470672,-99) , 
3, 9.32317, 1, 0, 0.501235,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.00729489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18172, 0, 1, 0.501789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482725,-99) , 
4, 0.999388, 0, 0, 0.500807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475467,-99) , 
4, 0.998571, 0, 0, 0.499582,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0119141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497782,-99) , 
3, 9.27223, 0, 0, 0.499988,-99) , 
NN(
0, 
0, 
-1, 4.61745, 1, -1, 0.490352,-99) , 
4, 0.999773, 0, 0, 0.498442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464069,-99) , 
4, 0.997619, 0, 0, 0.497475,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0197054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491147,-99) , 
7, -951.286, 1, 0, 0.500273,-99) , 
8, 1.77546, 0, 0, 0.501443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514765,-99) , 
NN(
0, 
0, 
-1, -2.02039, 0, -1, 0.476989,-99) , 
7, -951.286, 0, 0, 0.488057,-99) , 
8, -1.28571, 0, 0, 0.499605,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0121244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49667,-99) , 
8, -1.57146, 1, 0, 0.498367,-99) , 
4, 0.998572, 1, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478466,-99) , 
3, 9.49987, 1, 0, 0.498632,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00787235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.690483, 1, 1, 0.502707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486618,-99) , 
5, 0.62391, 1, 0, 0.501992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470189,-99) , 
4, 0.997619, 0, 0, 0.50109,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.00947623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91837, 1, 1, 0.524587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498054,-99) , 
5, -0.730155, 1, 0, 0.499086,-99) , 
4, 0.999048, 1, 0, 0.500862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483096,-99) , 
3, 9.48998, 1, 0, 0.500049,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0173618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480389,-99) , 
4, 0.999887, 0, 0, 0.509148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496572,-99) , 
9, 1.67815, 0, 0, 0.500732,-99) , 
3, 4.70391, 0, 0, 0.502446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476329,-99) , 
4, 0.997619, 0, 0, 0.501696,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0130576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499585,-99) , 
3, 1.42738, 1, 0, 0.514875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494965,-99) , 
10, 1.42198, 1, 0, 0.498249,-99) , 
4, 0.999524, 1, 0, 0.500152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478205,-99) , 
3, 9.20634, 1, 0, 0.49906,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.00806899);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481817,-99) , 
3, 9.36646, 1, 0, 0.502325,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0112555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498448,-99) , 
4, 0.999864, 1, 0, 0.500833,-99) , 
4, 0.998572, 1, 0, 0.502202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472469,-99) , 
3, 9.27716, 1, 0, 0.5008,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0129943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496608,-99) , 
4, 0.999909, 0, 0, 0.515845,-99) , 
NN(
0, 
0, 
-1, 0.621163, 1, -1, 0.498298,-99) , 
3, 4.6448, 0, 0, 0.501985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466715,-99) , 
7, -951.286, 0, 0, 0.485185,-99) , 
4, 0.999048, 0, 0, 0.500807,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.00864727);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.213884, 0, 1, 0.503634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482153,-99) , 
3, 9.27716, 1, 0, 0.502593,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.013103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490926,-99) , 
10, 5.85893, 1, 0, 0.501359,-99) , 
8, 1.85704, 0, 0, 0.502403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47528,-99) , 
4, 0.998571, 0, 0, 0.501094,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0134322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46569, 1, 1, 0.518645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494652,-99) , 
9, 0.311404, 0, 0, 0.499101,-99) , 
4, 0.999524, 1, 0, 0.501353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480522,-99) , 
3, 9.47676, 1, 0, 0.500406,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0114427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.15058, 0, 1, 0.503762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480424,-99) , 
5, -0.519068, 1, 0, 0.49497,-99) , 
10, 4.11896, 1, 0, 0.501468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455387,-99) , 
4, 0.997619, 0, 0, 0.500184,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.00842094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499714,-99) , 
3, 8.79642, 0, 0, 0.501257,-99) , 
NN(
0, 
0, 
-1, -0.428974, 0, -1, 0.4848,-99) , 
4, 0.99966, 0, 0, 0.499304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467103,-99) , 
4, 0.997619, 0, 0, 0.498408,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.00704865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49917,-99) , 
2, 0.214511, 0, 0, 0.499877,-99) , 
4, 0.997619, 1, 0, 0.500667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471166,-99) , 
3, 9.19645, 1, 0, 0.499223,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.00886172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498401,-99) , 
0, 0.490471, 1, 0, 0.49942,-99) , 
3, 9.24801, 0, 0, 0.500309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472316,-99) , 
4, 0.998572, 0, 0, 0.498965,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0100642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488497,-99) , 
3, 2.36499, 1, 0, 0.526819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49955,-99) , 
2, 0.187965, 0, 0, 0.500475,-99) , 
4, 0.999048, 1, 0, 0.502319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467095,-99) , 
3, 9.48998, 1, 0, 0.500758,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0185447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.09584, 0, 1, 0.508302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485441,-99) , 
8, 0.42883, 1, 0, 0.4969,-99) , 
10, 6.10082, 1, 0, 0.506233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466641,-99) , 
5, 0.351276, 0, 0, 0.487732,-99) , 
4, 0.999048, 0, 0, 0.504933,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0104503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14286, 1, 1, 0.502863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47518,-99) , 
4, 0.999705, 0, 0, 0.501566,-99) , 
NN(
0, 
0, 
-1, -0.714509, 0, -1, 0.484569,-99) , 
4, 0.999524, 0, 0, 0.499602,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.00667501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481123,-99) , 
3, 7.16481, 1, 0, 0.499575,-99) , 
4, 0.998571, 1, 0, 0.500904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481075,-99) , 
3, 9.36646, 1, 0, 0.499971,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0160019);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490079,-99) , 
5, 0.436401, 0, 0, 0.516087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494111,-99) , 
9, 1.46392, 0, 0, 0.498268,-99) , 
4, 0.999048, 1, 0, 0.499491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47864,-99) , 
3, 9.26084, 1, 0, 0.498482,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0115321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27439, 0, 1, 0.505086,-99) , 
NN(
0, 
0, 
-1, -0.458271, 0, -1, 0.495022,-99) , 
4, 0.999909, 0, 0, 0.502317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474825,-99) , 
4, 0.998095, 0, 0, 0.501347,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0149593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498315,-99) , 
9, 0.832203, 0, 0, 0.502423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489597,-99) , 
8, -0.426498, 1, 0, 0.495198,-99) , 
10, 3.52829, 1, 0, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479114,-99) , 
4, 0.998095, 0, 0, 0.499477,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0283882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494713,-99) , 
9, -1.55641, 0, 0, 0.504711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47939,-99) , 
8, 0.523385, 1, 0, 0.492271,-99) , 
10, 7.76787, 1, 0, 0.502881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463336,-99) , 
5, 0.0695917, 1, 0, 0.50894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471012,-99) , 
9, -2.2467, 1, 0, 0.484359,-99) , 
7, -951.286, 0, 0, 0.492596,-99) , 
8, -0.714293, 0, 0, 0.500036,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0167197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.1255, 1, 1, 0.507026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47694,-99) , 
8, -1.87105, 0, 0, 0.504282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519286,-99) , 
NN(
0, 
0, 
-1, 7.00006, 1, -1, 0.492556,-99) , 
8, -1.28525, 1, 0, 0.494344,-99) , 
10, 1.86498, 1, 0, 0.499192,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.011697);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4989,-99) , 
10, 1.86498, 1, 0, 0.502677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484914,-99) , 
2, 0.0723781, 0, 0, 0.49249,-99) , 
0, 0.502988, 1, 0, 0.501468,-99) , 
NN(
0, 
0, 
-1, -0.103676, 1, -1, 0.482872,-99) , 
0, 0.491424, 0, 0, 0.500465,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0142095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0072367, 0, 1, 0.516072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496325,-99) , 
2, 0.152896, 0, 0, 0.497851,-99) , 
2, -0.0715201, 1, 0, 0.500656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478198,-99) , 
3, 9.26338, 1, 0, 0.499563,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.00768467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27716, 0, 1, 0.502082,-99) , 
NN(
0, 
0, 
-1, -0.143095, 0, -1, 0.484733,-99) , 
4, 0.99932, 0, 0, 0.500974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463876,-99) , 
4, 0.997619, 0, 0, 0.499947,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0120802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497122,-99) , 
4, 0.999864, 1, 0, 0.499726,-99) , 
4, 0.998572, 1, 0, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481931,-99) , 
3, 9.33599, 1, 0, 0.500176,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0160942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.684087, 0, 1, 0.507186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49504,-99) , 
8, 1.57138, 0, 0, 0.497411,-99) , 
10, 2.84772, 1, 0, 0.503293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495337,-99) , 
8, -1.89213, 1, 0, 0.50147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449325,-99) , 
8, -2.2653, 0, 0, 0.491888,-99) , 
8, -1.28572, 0, 0, 0.501724,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0089737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.502752,-99) , 
NN(
0, 
0, 
-1, 4.69368, 1, -1, 0.490267,-99) , 
4, 0.999728, 0, 0, 0.501083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473607,-99) , 
4, 0.998095, 0, 0, 0.500114,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0127251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.349642, 0, 1, 0.514445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486655,-99) , 
4, 0.999728, 0, 0, 0.502723,-99) , 
4, 0.999048, 1, 0, 0.503508,-99) , 
NN(
0, 
0, 
-1, 0.490154, 0, -1, 0.484886,-99) , 
0, 0.491424, 0, 0, 0.502507,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0170252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44856, 1, 1, 0.527966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494991,-99) , 
4, 0.999864, 1, 0, 0.49729,-99) , 
4, 0.999048, 1, 0, 0.499456,-99) , 
NN(
0, 
0, 
-1, -0.214323, 0, -1, 0.485637,-99) , 
3, 4.72162, 1, 0, 0.496684,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0095398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80624, 0, 1, 0.502444,-99) , 
NN(
0, 
0, 
-1, 4.43445, 1, -1, 0.48937,-99) , 
4, 0.999773, 0, 0, 0.500363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45925,-99) , 
4, 0.997619, 0, 0, 0.499226,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0113741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498065,-99) , 
10, -0.392925, 1, 0, 0.499477,-99) , 
3, 9.2602, 0, 0, 0.50116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50469,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.477932,-99) , 
9, -0.606976, 0, 0, 0.489146,-99) , 
4, 0.999524, 0, 0, 0.499784,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0112334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49605,-99) , 
8, -0.714308, 0, 0, 0.501366,-99) , 
NN(
0, 
0, 
-1, 0.474018, 1, -1, 0.484246,-99) , 
5, 0.534213, 1, 0, 0.500028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457139,-99) , 
4, 0.997619, 0, 0, 0.498839,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.011098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498216,-99) , 
6, 0.0109931, 0, 0, 0.501261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468147,-99) , 
1, -0.0256528, 0, 0, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476141,-99) , 
1, 0.0241676, 1, 0, 0.499687,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.00823593);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484057,-99) , 
3, 9.49987, 1, 0, 0.502685,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0117052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496803,-99) , 
9, 1.37565, 0, 0, 0.500222,-99) , 
4, 0.998572, 1, 0, 0.501384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481822,-99) , 
3, 9.50743, 1, 0, 0.5005,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.00812096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0678451, 0, 1, 0.502347,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.483924,-99) , 
3, 6.36104, 1, 0, 0.500943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482005,-99) , 
3, 9.47659, 1, 0, 0.500077,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0113458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497435,-99) , 
0, 0.493329, 1, 0, 0.498669,-99) , 
3, 9.26585, 0, 0, 0.499868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468403,-99) , 
7, -951.286, 0, 0, 0.486567,-99) , 
4, 0.999048, 0, 0, 0.498939,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0204064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143499, 1, 1, 0.530565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495033,-99) , 
8, 0.999896, 0, 0, 0.499105,-99) , 
10, 4.66891, 1, 0, 0.506504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477069,-99) , 
8, -1.28583, 0, 0, 0.498947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457134,-99) , 
10, 3.05934, 1, 0, 0.496121,-99) , 
9, 2.05718, 0, 0, 0.499226,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0107994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496521,-99) , 
3, 1.46591, 1, 0, 0.499335,-99) , 
2, -0.214134, 1, 0, 0.500377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479526,-99) , 
3, 9.47659, 1, 0, 0.499444,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.00943023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497891,-99) , 
8, -2.14279, 1, 0, 0.498639,-99) , 
3, 9.27699, 0, 0, 0.499467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466817,-99) , 
7, -951.286, 0, 0, 0.482642,-99) , 
4, 0.999048, 0, 0, 0.498287,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0160098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494494,-99) , 
10, 2.42203, 1, 0, 0.506267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496364,-99) , 
10, 6.9699, 0, 0, 0.498055,-99) , 
8, 0.428543, 0, 0, 0.500728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46325,-99) , 
4, 0.997619, 0, 0, 0.49969,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0179773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491715,-99) , 
8, -2.23812, 0, 0, 0.51777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494135,-99) , 
9, -1.53723, 0, 0, 0.507315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488163,-99) , 
8, -0.238153, 0, 0, 0.497299,-99) , 
10, 0.892358, 1, 0, 0.500194,-99) , 
8, -1.85716, 1, 0, 0.501221,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0104964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49883,-99) , 
8, -0.714287, 1, 0, 0.501683,-99) , 
3, 9.17924, 0, 0, 0.502905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480187,-99) , 
4, 0.998571, 0, 0, 0.501806,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0221001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454061,-99) , 
8, -1.85957, 0, 0, 0.503596,-99) , 
10, -1.19877, 1, 0, 0.505985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488055,-99) , 
6, 0.0045303, 1, 0, 0.495144,-99) , 
6, 0.023785, 0, 0, 0.497276,-99) , 
10, 2.12583, 1, 0, 0.501922,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0102771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466647,-99) , 
1, -0.0256806, 0, 0, 0.502141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481212,-99) , 
1, 0.0241607, 1, 0, 0.501534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469472,-99) , 
4, 0.997619, 0, 0, 0.500631,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0064236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499832,-99) , 
2, -0.214263, 1, 0, 0.501265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473248,-99) , 
3, 7.69651, 1, 0, 0.500316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480452,-99) , 
3, 9.47676, 1, 0, 0.499417,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0108597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486547,-99) , 
8, -2.2381, 0, 0, 0.515033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498439,-99) , 
10, 0.837428, 1, 0, 0.501141,-99) , 
8, -1.85715, 1, 0, 0.501943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474059,-99) , 
4, 0.997619, 0, 0, 0.501161,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0181317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.023785, 0, 1, 0.510488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49184,-99) , 
9, -1.0202, 0, 0, 0.498687,-99) , 
5, -0.278002, 1, 0, 0.503262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470487,-99) , 
4, 0.998571, 0, 0, 0.501713,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0143363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498262,-99) , 
5, 0.353351, 0, 0, 0.520266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495571,-99) , 
8, -2.14286, 1, 0, 0.496531,-99) , 
4, 0.999048, 1, 0, 0.498157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47287,-99) , 
3, 9.48998, 1, 0, 0.497036,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0111549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470346,-99) , 
3, 7.24141, 1, 0, 0.502188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479443,-99) , 
3, 9.46687, 1, 0, 0.501157,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0080465);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.20832, 1, 1, 0.50335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479764,-99) , 
10, 14.3928, 1, 0, 0.502411,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.00744661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498417,-99) , 
2, -0.214601, 1, 0, 0.499131,-99) , 
4, 0.997619, 1, 0, 0.499959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480144,-99) , 
3, 9.26727, 1, 0, 0.49901,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0079801);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.819369, 1, 1, 0.502968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475657,-99) , 
4, 0.998571, 0, 0, 0.501662,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.00814251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499712,-99) , 
8, -0.999997, 1, 0, 0.50132,-99) , 
3, 9.27699, 0, 0, 0.502177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461874,-99) , 
5, 0.443861, 0, 0, 0.479492,-99) , 
4, 0.999048, 0, 0, 0.500606,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00830513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499686,-99) , 
8, -1.57144, 1, 0, 0.50131,-99) , 
4, 0.998572, 1, 0, 0.50234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470313,-99) , 
3, 9.25366, 1, 0, 0.500822,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0133355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.07112, 1, 1, 0.513761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471284,-99) , 
5, 0.533688, 1, 0, 0.502147,-99) , 
10, 0.246913, 1, 0, 0.504281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466318,-99) , 
0, 0.497138, 0, 0, 0.48543,-99) , 
4, 0.999048, 0, 0, 0.502967,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0058069);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480296,-99) , 
3, 9.46687, 1, 0, 0.501135,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0168811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497449,-99) , 
10, 4.75887, 1, 0, 0.511948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490934,-99) , 
0, 0.499995, 1, 0, 0.498212,-99) , 
1, 0.00340015, 0, 0, 0.502403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443948,-99) , 
5, -0.553375, 1, 0, 0.484246,-99) , 
6, 0.0238055, 1, 0, 0.501335,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.00901641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498754,-99) , 
3, 0.564412, 1, 0, 0.49969,-99) , 
3, 9.18172, 0, 0, 0.501205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468471,-99) , 
5, 0.443449, 0, 0, 0.482146,-99) , 
4, 0.999048, 0, 0, 0.499871,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.00961317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80624, 0, 1, 0.502471,-99) , 
NN(
0, 
0, 
-1, 4.70391, 1, -1, 0.491944,-99) , 
4, 0.999909, 0, 0, 0.499568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473306,-99) , 
4, 0.998095, 0, 0, 0.498648,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.00612244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479898,-99) , 
3, 7.69844, 1, 0, 0.499538,-99) , 
4, 0.998095, 1, 0, 0.500839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477253,-99) , 
3, 9.47906, 1, 0, 0.499777,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0120124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496742,-99) , 
3, 1.91537, 1, 0, 0.500874,-99) , 
2, -0.214362, 1, 0, 0.501958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477922,-99) , 
3, 9.4997, 1, 0, 0.50088,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0282365);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496991,-99) , 
5, -0.426216, 0, 0, 0.510087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480138,-99) , 
5, -0.510662, 1, 0, 0.496646,-99) , 
7, -951.286, 1, 0, 0.504487,-99) , 
NN(
NN(
0, 
0, 
-1, -1.20396, 1, 1, 0.505923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474219,-99) , 
7, -951.286, 0, 0, 0.48488,-99) , 
10, 0.673439, 1, 0, 0.4937,-99) , 
9, 1.2855, 0, 0, 0.497544,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0134158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522456,-99) , 
NN(
0, 
0, 
-1, 0.999388, 0, -1, 0.494927,-99) , 
2, 0.214865, 0, 0, 0.496069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475282,-99) , 
4, 0.998571, 0, 0, 0.495066,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0112588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497294,-99) , 
5, -0.458687, 1, 0, 0.499528,-99) , 
3, 9.26727, 0, 0, 0.500464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463355,-99) , 
7, -951.286, 0, 0, 0.479563,-99) , 
4, 0.999048, 0, 0, 0.499013,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0059641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142855, 0, 1, 0.51772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499935,-99) , 
0, 0.491424, 1, 0, 0.50077,-99) , 
3, 8.4877, 0, 0, 0.50177,-99) , 
NN(
0, 
0, 
-1, 0.142595, 0, -1, 0.482418,-99) , 
4, 0.999048, 0, 0, 0.500421,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0125015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49257,-99) , 
3, 2.76971, 1, 0, 0.516643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497291,-99) , 
8, 1.85689, 0, 0, 0.498475,-99) , 
4, 0.999524, 1, 0, 0.500562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483206,-99) , 
3, 9.33599, 1, 0, 0.499738,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0129326);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499114,-99) , 
9, 0.319005, 0, 0, 0.506013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484511,-99) , 
4, 0.999773, 0, 0, 0.49893,-99) , 
8, -0.428619, 0, 0, 0.503388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466114,-99) , 
4, 0.997619, 0, 0, 0.502358,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0162255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488599,-99) , 
7, -951.286, 1, 0, 0.51373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486606,-99) , 
5, 0.436959, 1, 0, 0.501225,-99) , 
10, -0.0509712, 1, 0, 0.503085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446414,-99) , 
3, 5.28158, 1, 0, 0.483018,-99) , 
2, -0.214477, 0, 0, 0.502002,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.00862793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.46699, 0, 1, 0.503303,-99) , 
NN(
0, 
0, 
-1, -0.0973464, 0, -1, 0.493113,-99) , 
4, 0.99966, 0, 0, 0.502099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475282,-99) , 
4, 0.997619, 0, 0, 0.501348,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.00810323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498334,-99) , 
2, 0.273737, 0, 0, 0.499117,-99) , 
2, -0.215253, 1, 0, 0.50012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479146,-99) , 
3, 9.28472, 1, 0, 0.499109,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0096107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499473,-99) , 
10, 3.19151, 1, 0, 0.507949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487703,-99) , 
4, 0.999048, 0, 0, 0.500144,-99) , 
8, 0.714245, 0, 0, 0.502016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4504,-99) , 
3, 5.19089, 1, 0, 0.480966,-99) , 
2, -0.214229, 0, 0, 0.500879,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0113974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495685,-99) , 
7, -951.286, 0, 0, 0.508323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497574,-99) , 
2, -0.0713115, 1, 0, 0.499125,-99) , 
8, 0.999954, 0, 0, 0.500651,-99) , 
NN(
0, 
0, 
-1, 0.427739, 1, -1, 0.486057,-99) , 
0, 0.492376, 0, 0, 0.499462,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0124185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490692,-99) , 
5, -0.0117399, 0, 0, 0.514953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497213,-99) , 
2, 0.0254229, 0, 0, 0.499299,-99) , 
4, 0.999524, 1, 0, 0.501086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47886,-99) , 
3, 9.37865, 1, 0, 0.500067,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0120152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26338, 0, 1, 0.503978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486066,-99) , 
0, 0.492058, 1, 0, 0.492506,-99) , 
0, 0.494281, 0, 0, 0.502177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463584,-99) , 
7, -951.286, 0, 0, 0.479474,-99) , 
4, 0.999048, 0, 0, 0.500618,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0187406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00986791, 0, 1, 0.519187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490011,-99) , 
8, 1.69381, 0, 0, 0.497864,-99) , 
10, 2.91629, 1, 0, 0.507966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489933,-99) , 
7, -951.286, 1, 0, 0.501846,-99) , 
NN(
0, 
0, 
-1, -2.2841, 0, -1, 0.493771,-99) , 
8, 0.00676151, 0, 0, 0.496261,-99) , 
8, 0.714235, 0, 0, 0.499072,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.00996955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499974,-99) , 
10, 2.82061, 1, 0, 0.506749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499287,-99) , 
5, 0.621115, 0, 0, 0.500066,-99) , 
8, 0.71425, 0, 0, 0.501671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436956,-99) , 
3, 5.07953, 1, 0, 0.477563,-99) , 
2, -0.21414, 0, 0, 0.500368,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.00899205);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49993,-99) , 
10, 4.05126, 1, 0, 0.50462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458025,-99) , 
10, 2.25294, 1, 0, 0.498536,-99) , 
9, 0.482514, 0, 0, 0.501247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480961,-99) , 
0, 0.490471, 0, 0, 0.500553,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0112502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496379,-99) , 
9, -1.83383, 0, 0, 0.508192,-99) , 
NN(
0, 
0, 
-1, 2.07479, 1, -1, 0.498667,-99) , 
10, 0.516002, 1, 0, 0.500776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450128,-99) , 
8, -2.2381, 0, 0, 0.484547,-99) , 
8, -1.85714, 0, 0, 0.499882,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0124392);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.18854, 0, 1, 0.504694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489802,-99) , 
8, -0.0070564, 1, 0, 0.499297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467033,-99) , 
8, -0.714509, 0, 0, 0.490892,-99) , 
4, 0.999524, 0, 0, 0.503116,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.027091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457266,-99) , 
8, 1.85709, 1, 0, 0.506763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492667,-99) , 
8, 1.2857, 0, 0, 0.497091,-99) , 
7, -951.286, 1, 0, 0.50292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474021,-99) , 
9, 1.2855, 0, 0, 0.487579,-99) , 
7, -951.286, 0, 0, 0.495688,-99) , 
8, -1.00001, 0, 0, 0.50148,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.00987069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497933,-99) , 
5, -0.639424, 1, 0, 0.49958,-99) , 
4, 0.998095, 1, 0, 0.500534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475605,-99) , 
3, 9.2711, 1, 0, 0.499356,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00789011);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482872,-99) , 
3, 9.36646, 1, 0, 0.502357,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0146776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49657,-99) , 
1, 0.00517385, 0, 0, 0.500604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45905,-99) , 
1, -0.0256806, 0, 0, 0.499485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476321,-99) , 
1, 0.0241607, 1, 0, 0.498833,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.00698404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485571,-99) , 
3, 9.26084, 1, 0, 0.502099,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0137826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.1329, 1, 1, 0.516365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496237,-99) , 
10, 1.09256, 1, 0, 0.50028,-99) , 
5, -0.729128, 1, 0, 0.501728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469851,-99) , 
4, 0.998095, 0, 0, 0.500632,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0170212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.07841, 1, 1, 0.50626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483114,-99) , 
10, 1.03274, 1, 0, 0.497506,-99) , 
9, 0.178998, 0, 0, 0.501878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468972,-99) , 
4, 0.997619, 0, 0, 0.500961,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.00864254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493359,-99) , 
10, 5.44849, 1, 0, 0.500473,-99) , 
8, 1.8571, 0, 0, 0.501196,-99) , 
NN(
0, 
0, 
-1, -0.143544, 0, -1, 0.483833,-99) , 
0, 0.491424, 0, 0, 0.500261,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0117865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.38316, 0, 1, 0.502371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491633,-99) , 
10, -1.06792, 1, 0, 0.496427,-99) , 
8, -0.714302, 0, 0, 0.500717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477065,-99) , 
8, -0.55207, 0, 0, 0.490871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468235,-99) , 
8, 0.427212, 1, 0, 0.483549,-99) , 
0, 0.492376, 0, 0, 0.499336,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.022442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481743,-99) , 
10, 2.85274, 1, 0, 0.519924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496998,-99) , 
6, 0.023785, 0, 0, 0.500219,-99) , 
5, -0.103811, 0, 0, 0.50333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495786,-99) , 
9, -1.19885, 0, 0, 0.500797,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.480232,-99) , 
10, 1.16757, 1, 0, 0.494158,-99) , 
9, 0.298751, 0, 0, 0.498483,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0131272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497503,-99) , 
8, -2.14285, 1, 0, 0.498503,-99) , 
3, 9.26585, 0, 0, 0.500504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489306,-99) , 
8, 0.142987, 0, 0, 0.499041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473267,-99) , 
0, 0.497138, 0, 0, 0.487646,-99) , 
4, 0.999524, 0, 0, 0.499035,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.00711529);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.25366, 0, 1, 0.503052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486527,-99) , 
4, 0.998571, 0, 0, 0.502249,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0131457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0779581, 1, 1, 0.509983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495352,-99) , 
7, -951.286, 0, 0, 0.498797,-99) , 
10, 0.384148, 1, 0, 0.50125,-99) , 
NN(
0, 
0, 
-1, 0.489972, 0, -1, 0.480364,-99) , 
0, 0.491424, 0, 0, 0.500134,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.00911609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499042,-99) , 
2, 0.187965, 0, 0, 0.49986,-99) , 
3, 9.25366, 0, 0, 0.501444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470739,-99) , 
7, -951.286, 0, 0, 0.487843,-99) , 
4, 0.999048, 0, 0, 0.500505,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0140326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498095,-99) , 
5, 0.0788081, 1, 0, 0.503451,-99) , 
4, 0.998095, 1, 0, 0.504997,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496987,-99) , 
10, 0.229874, 1, 0, 0.501284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474723,-99) , 
0, 0.495233, 0, 0, 0.495549,-99) , 
3, 4.80371, 1, 0, 0.503142,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.017206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.87633, 1, 1, 0.511158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465768,-99) , 
8, -1.85715, 0, 0, 0.501828,-99) , 
9, 2.41438, 0, 0, 0.504439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494873,-99) , 
4, 0.999524, 1, 0, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474451,-99) , 
3, 4.67297, 1, 0, 0.495638,-99) , 
0, 0.494281, 0, 0, 0.502976,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.00733329);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49979,-99) , 
4, 0.998572, 1, 0, 0.501576,-99) , 
NN(
0, 
0, 
-1, -0.214114, 0, -1, 0.492745,-99) , 
3, 4.81786, 1, 0, 0.49992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482958,-99) , 
0, 0.504757, 1, 0, 0.499076,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0113218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497962,-99) , 
4, 0.999864, 1, 0, 0.500016,-99) , 
3, 9.24801, 0, 0, 0.501258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466904,-99) , 
5, 0.443449, 0, 0, 0.484306,-99) , 
4, 0.999048, 0, 0, 0.500081,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0100684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18962, 0, 1, 0.503216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475514,-99) , 
4, 0.99941, 0, 0, 0.502349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459418,-99) , 
5, 0.353845, 0, 0, 0.482395,-99) , 
4, 0.999048, 0, 0, 0.50098,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.00680262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.81479, 0, 1, 0.501453,-99) , 
NN(
0, 
0, 
-1, -0.0973464, 0, -1, 0.487341,-99) , 
4, 0.999637, 0, 0, 0.499965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475429,-99) , 
4, 0.998095, 0, 0, 0.499107,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0117539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496981,-99) , 
0, 0.496186, 1, 0, 0.499853,-99) , 
4, 0.998571, 1, 0, 0.501373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483227,-99) , 
3, 9.50217, 1, 0, 0.500566,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0108112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.143589, 0, 1, 0.518594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493526,-99) , 
7, -951.286, 0, 0, 0.502093,-99) , 
9, 1.16244, 0, 0, 0.508439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498069,-99) , 
0, 0.490335, 1, 0, 0.498991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474442,-99) , 
4, 0.998571, 0, 0, 0.497915,-99) , 
0, 0.5019, 0, 0, 0.499723,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0174169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40229, 1, 1, 0.529708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489706,-99) , 
3, 4.74867, 1, 0, 0.504283,-99) , 
0, 0.499995, 0, 0, 0.513891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496881,-99) , 
0, 0.495868, 0, 0, 0.502625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484891,-99) , 
9, 3.32739, 0, 0, 0.491276,-99) , 
0, 0.500947, 1, 0, 0.500085,-99) , 
2, 0.0709897, 0, 0, 0.50226,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.00857945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488679,-99) , 
3, 1.47855, 1, 0, 0.52287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499588,-99) , 
0, 0.490471, 1, 0, 0.500501,-99) , 
4, 0.999048, 1, 0, 0.502048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48284,-99) , 
3, 9.47659, 1, 0, 0.501185,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0093831);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.21456, 1, 1, 0.503683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474827,-99) , 
3, 9.27699, 1, 0, 0.50233,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0141641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487569,-99) , 
4, 0.999909, 0, 0, 0.510746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497363,-99) , 
2, -0.00473379, 1, 0, 0.500959,-99) , 
3, 4.68405, 0, 0, 0.502962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487856,-99) , 
4, 0.998095, 0, 0, 0.502429,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0112333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49811,-99) , 
0, 0.504757, 0, 0, 0.498976,-99) , 
3, 9.26648, 0, 0, 0.500468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486402,-99) , 
2, 0.0715656, 0, 0, 0.497512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468412,-99) , 
5, -0.00656108, 0, 0, 0.489589,-99) , 
4, 0.999524, 0, 0, 0.499215,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.00859332);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.501401, 0, 1, 0.503022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484977,-99) , 
5, -0.00727692, 1, 0, 0.497233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474961,-99) , 
8, -0.714179, 0, 0, 0.491013,-99) , 
0, 0.502852, 1, 0, 0.501608,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0102281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00133206, 0, 1, 0.504376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487151,-99) , 
1, -0.0235685, 0, 0, 0.503851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478036,-99) , 
4, 0.997619, 0, 0, 0.503136,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0176354);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493818,-99) , 
1, 0.00148542, 0, 0, 0.500196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481575,-99) , 
1, -0.0234283, 0, 0, 0.499631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514369,-99) , 
NN(
0, 
0, 
-1, 1.85711, 1, -1, 0.479023,-99) , 
7, -951.286, 0, 0, 0.491166,-99) , 
8, 1.28566, 1, 0, 0.498694,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0102734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476537,-99) , 
9, 15.7591, 1, 0, 0.501107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459831,-99) , 
1, -0.0261226, 0, 0, 0.500035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475379,-99) , 
1, 0.0237331, 1, 0, 0.499323,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.00850964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0133879, 0, 1, 0.503177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479867,-99) , 
1, -0.0255589, 0, 0, 0.502541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474393,-99) , 
1, 0.0242713, 1, 0, 0.501754,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0059225);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.11468, 0, 1, 0.501853,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.481987,-99) , 
4, 0.999048, 0, 0, 0.50049,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0159139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49521,-99) , 
9, 0.0607024, 0, 0, 0.514524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480639,-99) , 
5, -0.294067, 1, 0, 0.494905,-99) , 
10, 3.15015, 1, 0, 0.504661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496764,-99) , 
4, 0.998571, 1, 0, 0.498722,-99) , 
NN(
0, 
0, 
-1, -0.214155, 0, -1, 0.487655,-99) , 
3, 4.74327, 1, 0, 0.496529,-99) , 
8, 0.999956, 0, 0, 0.497895,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.00683337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478832,-99) , 
3, 7.70506, 1, 0, 0.501161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478473,-99) , 
3, 9.48998, 1, 0, 0.500154,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.00984147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49307,-99) , 
7, -951.286, 1, 0, 0.49817,-99) , 
8, -2.14285, 1, 0, 0.498894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464816,-99) , 
4, 0.997619, 0, 0, 0.497958,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0105266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497508,-99) , 
6, 0.00982491, 0, 0, 0.500349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479144,-99) , 
1, -0.0257906, 0, 0, 0.499779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479692,-99) , 
1, 0.0240162, 1, 0, 0.49919,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0120465);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495687,-99) , 
3, 4.46173, 1, 0, 0.509433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496065,-99) , 
10, 0.36783, 1, 0, 0.497935,-99) , 
0, 0.494281, 1, 0, 0.499818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474447,-99) , 
4, 0.998095, 0, 0, 0.498954,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0129396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499607,-99) , 
4, 0.999955, 0, 0, 0.511562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49596,-99) , 
10, 1.78094, 1, 0, 0.498895,-99) , 
3, 4.70642, 0, 0, 0.501484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463177,-99) , 
7, -951.286, 0, 0, 0.481572,-99) , 
4, 0.999048, 0, 0, 0.500116,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0142304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495971,-99) , 
5, -0.368666, 0, 0, 0.502238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479807,-99) , 
10, 2.86904, 0, 0, 0.4887,-99) , 
6, 0.0011332, 0, 0, 0.500496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463174,-99) , 
10, 5.84247, 0, 0, 0.484676,-99) , 
6, 0.0237961, 1, 0, 0.499579,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.017009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491304,-99) , 
9, 2.05118, 0, 0, 0.501037,-99) , 
6, 0.0237918, 0, 0, 0.504632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49584,-99) , 
4, 0.998572, 1, 0, 0.497858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468111,-99) , 
3, 9.53402, 1, 0, 0.496382,-99) , 
5, -0.188046, 1, 0, 0.500014,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0118153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491586,-99) , 
8, -2.2381, 0, 0, 0.518707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48783,-99) , 
9, 9.20624, 1, 0, 0.50048,-99) , 
8, -1.85714, 1, 0, 0.501552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470298,-99) , 
5, 0.437311, 0, 0, 0.483153,-99) , 
4, 0.999048, 0, 0, 0.500288,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.00692784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499508,-99) , 
2, 0.071657, 0, 0, 0.501166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478772,-99) , 
5, 0.618952, 1, 0, 0.500192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484309,-99) , 
4, 0.998571, 0, 0, 0.499428,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0185054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487957,-99) , 
9, 10.4517, 1, 0, 0.499732,-99) , 
8, -0.714217, 1, 0, 0.505237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456809,-99) , 
10, 3.57305, 1, 0, 0.500098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423168,-99) , 
9, -1.06506, 1, 0, 0.47637,-99) , 
8, -1.57144, 0, 0, 0.497582,-99) , 
9, 2.63681, 0, 0, 0.499636,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0171708);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499883,-99) , 
10, 2.50543, 1, 0, 0.504105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479538,-99) , 
9, -1.84439, 0, 0, 0.495717,-99) , 
5, 0.260903, 1, 0, 0.502014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488593,-99) , 
7, -951.286, 0, 0, 0.49584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45641,-99) , 
4, 0.999524, 0, 0, 0.491596,-99) , 
8, -0.714298, 0, 0, 0.499122,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0186215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493756,-99) , 
5, -0.776119, 1, 0, 0.499186,-99) , 
10, 4.45421, 1, 0, 0.506751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445247,-99) , 
10, 3.27708, 1, 0, 0.499487,-99) , 
NN(
0, 
0, 
-1, -0.707251, 1, -1, 0.468002,-99) , 
8, -1.57146, 0, 0, 0.49609,-99) , 
9, 1.99709, 0, 0, 0.499294,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0212395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.12033, 1, 1, 0.513637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478264,-99) , 
5, -0.500403, 1, 0, 0.494121,-99) , 
7, -951.286, 1, 0, 0.505621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527776,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.492316,-99) , 
10, -1.21935, 1, 0, 0.494146,-99) , 
9, 1.17592, 0, 0, 0.49834,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.00961266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494481,-99) , 
3, 1.44236, 1, 0, 0.523747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498335,-99) , 
8, 1.8571, 0, 0, 0.499061,-99) , 
4, 0.999048, 1, 0, 0.500773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483058,-99) , 
3, 9.26585, 1, 0, 0.49992,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.00689742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499225,-99) , 
3, 10.0495, 0, 0, 0.500209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483445,-99) , 
4, 0.999048, 0, 0, 0.499311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503286,-99) , 
NN(
0, 
0, 
-1, -1.7316, 0, -1, 0.481258,-99) , 
10, -0.46632, 1, 0, 0.488921,-99) , 
5, 0.533688, 1, 0, 0.498403,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0141484);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.02505, 1, 1, 0.504102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494121,-99) , 
10, -1.06617, 1, 0, 0.496648,-99) , 
NN(
0, 
0, 
-1, 0.679716, 0, -1, 0.472201,-99) , 
10, 1.71547, 1, 0, 0.493501,-99) , 
9, 0.178998, 0, 0, 0.498689,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0172259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.13838, 1, 1, 0.515281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493592,-99) , 
7, -951.286, 0, 0, 0.498208,-99) , 
9, 2.06444, 0, 0, 0.50216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477447,-99) , 
5, -0.793536, 1, 0, 0.489473,-99) , 
9, 12.7861, 1, 0, 0.501058,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0092639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.93013, 1, 1, 0.526552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498766,-99) , 
8, -2.14287, 1, 0, 0.499764,-99) , 
4, 0.999048, 1, 0, 0.501637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478379,-99) , 
3, 9.51008, 1, 0, 0.500616,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0160489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494605,-99) , 
9, -0.931067, 0, 0, 0.516389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497178,-99) , 
0, 0.499995, 0, 0, 0.502017,-99) , 
10, 2.46017, 1, 0, 0.508324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479461,-99) , 
8, -2.2517, 0, 0, 0.50115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466876,-99) , 
3, 9.11468, 1, 0, 0.499453,-99) , 
8, 0.142825, 0, 0, 0.503234,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0138323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.21433, 1, 1, 0.506677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494983,-99) , 
8, -1.28488, 1, 0, 0.496747,-99) , 
10, 2.14356, 1, 0, 0.50204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483039,-99) , 
3, 9.26727, 1, 0, 0.501147,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0203761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496068,-99) , 
8, 0.142846, 0, 0, 0.502016,-99) , 
6, 0.0237918, 0, 0, 0.505893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494383,-99) , 
10, -0.685639, 1, 0, 0.498911,-99) , 
NN(
0, 
0, 
-1, -2.05384, 0, -1, 0.4878,-99) , 
7, -951.286, 1, 0, 0.494701,-99) , 
5, -0.279456, 1, 0, 0.498844,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.00597766);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479633,-99) , 
3, 9.27946, 1, 0, 0.501082,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0109806);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0719623, 0, 1, 0.512521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497958,-99) , 
3, 4.46161, 0, 0, 0.499945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47622,-99) , 
4, 0.998572, 0, 0, 0.498863,-99) , 
8, 0.999964, 0, 0, 0.501161,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0197009);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497837,-99) , 
9, -0.831862, 0, 0, 0.514121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495397,-99) , 
7, -951.286, 0, 0, 0.500103,-99) , 
10, 2.60703, 1, 0, 0.506671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489138,-99) , 
5, 0.169347, 1, 0, 0.502032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461729,-99) , 
8, -2.25171, 0, 0, 0.50025,-99) , 
8, 0.142794, 0, 0, 0.50298,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0169039);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499962,-99) , 
9, -0.0601044, 0, 0, 0.5173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494169,-99) , 
8, 1.69382, 0, 0, 0.500261,-99) , 
10, 2.82061, 1, 0, 0.507949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493247,-99) , 
7, -951.286, 1, 0, 0.500675,-99) , 
NN(
0, 
0, 
-1, -1.56821, 1, -1, 0.488617,-99) , 
8, -1.23131, 0, 0, 0.498352,-99) , 
8, 0.714245, 0, 0, 0.500651,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00814138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.430495, 0, 1, 0.502686,-99) , 
NN(
0, 
0, 
-1, 0.0778864, 1, -1, 0.495786,-99) , 
10, 2.34548, 1, 0, 0.499691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470471,-99) , 
0, 0.505709, 1, 0, 0.498886,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.00838737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.466421, 0, 1, 0.504855,-99) , 
NN(
0, 
0, 
-1, 0.0776907, 1, -1, 0.498448,-99) , 
10, 2.34548, 1, 0, 0.502093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469593,-99) , 
0, 0.505709, 1, 0, 0.501175,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0102159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.503322,-99) , 
NN(
0, 
0, 
-1, 0.258496, 0, -1, 0.488908,-99) , 
4, 0.999796, 0, 0, 0.501125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482993,-99) , 
4, 0.998571, 0, 0, 0.500252,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0120406);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0191347, 0, 1, 0.506708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48229,-99) , 
10, 1.81315, 1, 0, 0.499906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467646,-99) , 
3, 9.48544, 1, 0, 0.498342,-99) , 
9, 0.234058, 0, 0, 0.502346,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00681509);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.28584, 0, 1, 0.502523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478945,-99) , 
4, 0.998571, 0, 0, 0.501398,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.00803245);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499807,-99) , 
6, 0.0134992, 0, 0, 0.502043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466662,-99) , 
1, -0.0257744, 0, 0, 0.501108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468607,-99) , 
1, 0.024057, 1, 0, 0.500178,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0115347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49604,-99) , 
8, 0.306089, 0, 0, 0.499688,-99) , 
8, -2.14286, 1, 0, 0.500471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475184,-99) , 
0, 0.505709, 1, 0, 0.499752,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00901258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498521,-99) , 
8, 0.795887, 0, 0, 0.500578,-99) , 
8, -2.14286, 1, 0, 0.501441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471741,-99) , 
4, 0.998095, 0, 0, 0.500419,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0144732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.13372, 1, 1, 0.504225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484419,-99) , 
10, 1.15292, 1, 0, 0.498917,-99) , 
9, 0.234058, 0, 0, 0.501463,-99) , 
NN(
0, 
0, 
-1, -0.103892, 1, -1, 0.48173,-99) , 
0, 0.491424, 0, 0, 0.500408,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.00755969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499071,-99) , 
6, 0.01448, 0, 0, 0.500696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471059,-99) , 
1, -0.025343, 0, 0, 0.499891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47363,-99) , 
1, 0.0244476, 1, 0, 0.49915,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0195286);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495455,-99) , 
10, 2.71912, 1, 0, 0.502906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475751,-99) , 
6, 0.0237001, 1, 0, 0.501278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490494,-99) , 
10, -1.21526, 1, 0, 0.492326,-99) , 
10, 8.09897, 0, 0, 0.494725,-99) , 
8, 0.142837, 0, 0, 0.497518,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0163745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497791,-99) , 
5, -0.280894, 1, 0, 0.50785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476866,-99) , 
7, -1.28554, 0, 0, 0.504778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472097,-99) , 
8, 1.53057, 1, 0, 0.498819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438971,-99) , 
8, -2.14284, 0, 0, 0.496357,-99) , 
7, -951.286, 0, 0, 0.499585,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0086177);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466846,-99) , 
1, 0.0252115, 1, 0, 0.501349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479248,-99) , 
1, -0.0245694, 0, 0, 0.500729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483136,-99) , 
0, 0.504757, 1, 0, 0.49986,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0124173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28544, 1, 1, 0.504514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495138,-99) , 
9, 0.828683, 0, 0, 0.497177,-99) , 
9, 1.17592, 0, 0, 0.499928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473461,-99) , 
4, 0.997619, 0, 0, 0.499202,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.00927001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497917,-99) , 
0, 0.494281, 1, 0, 0.499765,-99) , 
3, 9.17924, 0, 0, 0.500633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481792,-99) , 
4, 0.998571, 0, 0, 0.499739,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0115644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.07015, 0, 1, 0.510353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480593,-99) , 
10, 7.63195, 1, 0, 0.505097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498189,-99) , 
3, 9.26727, 0, 0, 0.499389,-99) , 
NN(
0, 
0, 
-1, 0.353246, 0, -1, 0.482344,-99) , 
4, 0.999048, 0, 0, 0.49825,-99) , 
8, 0.714245, 0, 0, 0.499893,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.00934921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80624, 0, 1, 0.503231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468609,-99) , 
5, -0.190347, 0, 0, 0.491795,-99) , 
4, 0.999773, 0, 0, 0.501842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473713,-99) , 
5, 0.354764, 0, 0, 0.489626,-99) , 
4, 0.999048, 0, 0, 0.500993,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0137209);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490543,-99) , 
10, 5.75132, 1, 0, 0.501622,-99) , 
NN(
0, 
0, 
-1, -0.239614, 0, -1, 0.489813,-99) , 
8, -0.918367, 0, 0, 0.49935,-99) , 
8, -2.14286, 1, 0, 0.500014,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0107269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498301,-99) , 
8, 0.714265, 1, 0, 0.51042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48376,-99) , 
8, -0.999999, 0, 0, 0.505107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524559,-99) , 
NN(
0, 
0, 
-1, -0.302659, 0, -1, 0.496648,-99) , 
8, -2.14287, 1, 0, 0.497603,-99) , 
2, 0.0714698, 0, 0, 0.498765,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0107269);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484334,-99) , 
2, 0.112273, 1, 0, 0.499183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46653,-99) , 
2, -0.214255, 0, 0, 0.494012,-99) , 
3, 4.79347, 1, 0, 0.501653,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0104916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498867,-99) , 
4, 0.999524, 1, 0, 0.501019,-99) , 
NN(
0, 
0, 
-1, 0.499995, 0, -1, 0.481269,-99) , 
3, 6.38391, 1, 0, 0.49955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471457,-99) , 
3, 9.50668, 1, 0, 0.498337,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0084215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496392,-99) , 
10, 1.88557, 1, 0, 0.50746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485083,-99) , 
5, 0.533665, 1, 0, 0.499432,-99) , 
3, 4.69368, 0, 0, 0.501077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476612,-99) , 
4, 0.997619, 0, 0, 0.500415,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.00738787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49926,-99) , 
10, 0.278503, 1, 0, 0.501136,-99) , 
0, 0.50394, 0, 0, 0.501797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482066,-99) , 
0, 0.504757, 1, 0, 0.500814,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.00749572);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498869,-99) , 
10, 1.47381, 1, 0, 0.501454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483455,-99) , 
1, 0.0242026, 1, 0, 0.500941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475724,-99) , 
0, 0.505709, 1, 0, 0.50023,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0102703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481806,-99) , 
4, 0.998866, 0, 0, 0.50299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487794,-99) , 
5, 0.623896, 1, 0, 0.502309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46848,-99) , 
4, 0.997619, 0, 0, 0.501405,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0112445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493351,-99) , 
10, 3.13152, 1, 0, 0.506896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498153,-99) , 
0, 0.502126, 0, 0, 0.498719,-99) , 
8, 0.999953, 0, 0, 0.500086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515017,-99) , 
NN(
0, 
0, 
-1, 0.00294931, 0, -1, 0.482773,-99) , 
2, -0.0718588, 1, 0, 0.490831,-99) , 
0, 0.502852, 1, 0, 0.498999,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0102144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.41113, 0, 1, 0.512708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493619,-99) , 
4, 0.999819, 0, 0, 0.501487,-99) , 
0, 0.503804, 0, 0, 0.502375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474864,-99) , 
4, 0.998095, 0, 0, 0.501439,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0108475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00718, 1, 1, 0.5171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49785,-99) , 
4, 0.999864, 1, 0, 0.499334,-99) , 
4, 0.999524, 1, 0, 0.501373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477979,-99) , 
3, 9.33289, 1, 0, 0.500295,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0050595);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466775,-99) , 
1, 0.0258731, 1, 0, 0.499164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475224,-99) , 
1, -0.023901, 0, 0, 0.498482,-99) , 
8, -2.14286, 1, 0, 0.499479,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0125286);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493833,-99) , 
3, 3.15907, 1, 0, 0.52231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497807,-99) , 
0, 0.491424, 1, 0, 0.498754,-99) , 
4, 0.999524, 1, 0, 0.501476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480404,-99) , 
3, 9.19867, 1, 0, 0.50046,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.00642357);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27699, 0, 1, 0.502744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480256,-99) , 
4, 0.997619, 0, 0, 0.502126,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00536476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499906,-99) , 
4, 0.999547, 1, 0, 0.500704,-99) , 
3, 9.27699, 0, 0, 0.501626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476739,-99) , 
2, -0.0714613, 1, 0, 0.488142,-99) , 
4, 0.999048, 0, 0, 0.500692,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0086679);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499447,-99) , 
6, 0.02377, 0, 0, 0.50236,-99) , 
NN(
0, 
0, 
-1, 1.23627, 1, -1, 0.49564,-99) , 
9, 0.178998, 0, 0, 0.498847,-99) , 
8, 1.8571, 0, 0, 0.499516,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.00951185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0143201, 0, 1, 0.503738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478667,-99) , 
1, -0.025063, 0, 0, 0.503033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476949,-99) , 
1, 0.0246829, 1, 0, 0.502309,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.00640279);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489755,-99) , 
3, 9.47659, 1, 0, 0.502296,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0138489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496665,-99) , 
8, -2.14285, 1, 0, 0.497564,-99) , 
3, 9.26585, 0, 0, 0.499152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470592,-99) , 
9, 0.636453, 0, 0, 0.483262,-99) , 
5, 0.533478, 0, 0, 0.489928,-99) , 
4, 0.999524, 0, 0, 0.4981,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.00872867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499449,-99) , 
7, -951.286, 0, 0, 0.502587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485759,-99) , 
5, 0.62449, 1, 0, 0.501868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483198,-99) , 
4, 0.998571, 0, 0, 0.500978,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0136428);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.141912, 1, 1, 0.511056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473688,-99) , 
10, 3.13845, 1, 0, 0.499442,-99) , 
9, 2.37821, 0, 0, 0.501664,-99) , 
9, 3.27233, 0, 0, 0.503946,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.00969732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.70072, 1, 1, 0.515703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499002,-99) , 
3, 3.57423, 0, 0, 0.501789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469751,-99) , 
4, 0.998571, 0, 0, 0.500541,-99) , 
5, 0.623428, 0, 0, 0.501355,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.016619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.406005, 0, 1, 0.513801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470417,-99) , 
5, -0.334795, 1, 0, 0.49395,-99) , 
7, -951.286, 1, 0, 0.505586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52687,-99) , 
NN(
0, 
0, 
-1, 2.50856, 1, -1, 0.494876,-99) , 
9, 0.828688, 0, 0, 0.496766,-99) , 
9, 1.17592, 0, 0, 0.500001,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0120199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498158,-99) , 
2, -0.00676275, 1, 0, 0.501261,-99) , 
3, 9.18823, 0, 0, 0.50257,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484961,-99) , 
0, 0.497138, 0, 0, 0.49846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476545,-99) , 
4, 0.99907, 1, 0, 0.490268,-99) , 
4, 0.999524, 0, 0, 0.501162,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0132578);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.701828, 1, 1, 0.525616,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445072,-99) , 
3, 10.7488, 1, 0, 0.486931,-99) , 
3, 7.43811, 1, 0, 0.502364,-99) , 
5, 0.624476, 0, 0, 0.503609,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.00825479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498733,-99) , 
8, 0.907944, 0, 0, 0.500241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482214,-99) , 
8, -1.91157, 0, 0, 0.499269,-99) , 
NN(
0, 
0, 
-1, 0.168557, 1, -1, 0.4841,-99) , 
8, 1.57137, 1, 0, 0.498227,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0146926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.28154, 0, 1, 0.507003,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.496436,-99) , 
2, 0.0034914, 0, 0, 0.502042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486768,-99) , 
8, 0.142828, 0, 0, 0.502025,-99) , 
NN(
0, 
0, 
-1, -0.015317, 0, -1, 0.482321,-99) , 
0, 0.499042, 0, 0, 0.491248,-99) , 
2, -0.0713343, 0, 0, 0.500276,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.011126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496438,-99) , 
0, 0.491424, 1, 0, 0.497293,-99) , 
4, 0.998571, 1, 0, 0.4982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476959,-99) , 
3, 9.09435, 1, 0, 0.497144,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.00633648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499383,-99) , 
2, 0.275351, 0, 0, 0.500411,-99) , 
2, -0.214263, 1, 0, 0.501483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485565,-99) , 
3, 9.38391, 1, 0, 0.500751,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0142375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.793928, 0, 1, 0.507822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495868,-99) , 
5, -0.641434, 1, 0, 0.499265,-99) , 
10, 1.98651, 1, 0, 0.503631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482987,-99) , 
0, 0.504757, 1, 0, 0.502616,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0141527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.194558, 0, 1, 0.521766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49476,-99) , 
2, -0.071409, 1, 0, 0.501471,-99) , 
0, 0.50326, 1, 0, 0.50989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484174,-99) , 
2, -0.214175, 0, 0, 0.502937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478804,-99) , 
7, -951.286, 0, 0, 0.487924,-99) , 
0, 0.500539, 1, 0, 0.501202,-99) , 
0, 0.5019, 0, 0, 0.502688,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.00852004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498982,-99) , 
6, 0.0122272, 0, 0, 0.501044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47175,-99) , 
1, -0.0256806, 0, 0, 0.500251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469633,-99) , 
1, 0.0241607, 1, 0, 0.499401,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0118925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.2602, 0, 1, 0.504083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461134,-99) , 
8, 0.142536, 0, 0, 0.481606,-99) , 
4, 0.99932, 0, 0, 0.502674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473528,-99) , 
4, 0.997619, 0, 0, 0.501875,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0114448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496675,-99) , 
6, 0.0237918, 0, 0, 0.497676,-99) , 
3, 9.18172, 0, 0, 0.49878,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.48057,-99) , 
4, 0.999048, 0, 0, 0.497537,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0116895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428509, 0, 1, 0.50492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490284,-99) , 
10, 12.5752, 1, 0, 0.504121,-99) , 
NN(
0, 
0, 
-1, -0.428464, 0, -1, 0.486506,-99) , 
0, 0.492376, 0, 0, 0.502717,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00805129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499288,-99) , 
6, 0.00977261, 0, 0, 0.50153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469324,-99) , 
1, -0.0256538, 0, 0, 0.500673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474971,-99) , 
1, 0.0241676, 1, 0, 0.499954,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0140628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.77015, 0, 1, 0.506054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487572,-99) , 
7, -951.286, 1, 0, 0.496854,-99) , 
10, 3.71406, 1, 0, 0.503441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47984,-99) , 
3, 9.33289, 1, 0, 0.502344,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0168472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495619,-99) , 
8, -1.28579, 0, 0, 0.50582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488563,-99) , 
2, -0.00727212, 1, 0, 0.498121,-99) , 
2, 0.00341724, 0, 0, 0.502212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490367,-99) , 
5, -0.0188331, 0, 0, 0.502038,-99) , 
NN(
0, 
0, 
-1, -0.207454, 0, -1, 0.479077,-99) , 
3, 4.86085, 1, 0, 0.492468,-99) , 
2, -0.071409, 0, 0, 0.500626,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00461601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474877,-99) , 
1, -0.0254703, 0, 0, 0.499439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47315,-99) , 
8, -2.14285, 0, 0, 0.498601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473782,-99) , 
1, 0.0243539, 1, 0, 0.497907,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.00653611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.501419,-99) , 
NN(
0, 
0, 
-1, 0.499993, 0, -1, 0.484515,-99) , 
3, 6.36662, 1, 0, 0.50016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479029,-99) , 
3, 9.48998, 1, 0, 0.499244,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0140098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492962,-99) , 
2, 0.0782634, 0, 0, 0.50166,-99) , 
2, -0.0713264, 1, 0, 0.508038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496071,-99) , 
8, -1.00002, 1, 0, 0.497912,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.488581,-99) , 
0, 0.49487, 0, 0, 0.495782,-99) , 
0, 0.502852, 0, 0, 0.497257,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0136786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.70387, 1, 1, 0.510372,-99) , 
NN(
0, 
0, 
-1, 2.84549, 1, -1, 0.49521,-99) , 
9, 1.74558, 0, 0, 0.499554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483762,-99) , 
10, 13.7544, 1, 0, 0.498833,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0137505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481867,-99) , 
8, -1.85721, 0, 0, 0.503326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494838,-99) , 
6, 0.0237824, 0, 0, 0.497018,-99) , 
10, 2.25864, 1, 0, 0.500482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483649,-99) , 
2, 0.213724, 1, 0, 0.499645,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.013194);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499683,-99) , 
4, 0.999999, 0, 0, 0.503895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469759,-99) , 
10, 5.12059, 1, 0, 0.496089,-99) , 
4, 0.999977, 0, 0, 0.50015,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484289,-99) , 
4, 0.999524, 0, 0, 0.498369,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0105197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496804,-99) , 
5, -0.639733, 1, 0, 0.498102,-99) , 
8, 1.85708, 0, 0, 0.498973,-99) , 
NN(
0, 
0, 
-1, -0.714466, 0, -1, 0.489695,-99) , 
2, -0.0713115, 0, 0, 0.497465,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0108784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.202667, 0, 1, 0.510757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487732,-99) , 
5, -0.196855, 1, 0, 0.499743,-99) , 
10, 2.64731, 1, 0, 0.505012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499107,-99) , 
2, -0.214633, 1, 0, 0.500198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476555,-99) , 
3, 9.1244, 1, 0, 0.499025,-99) , 
8, 0.142823, 0, 0, 0.501571,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.00822393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488421,-99) , 
10, 14.0872, 1, 0, 0.501657,-99) , 
2, 0.132736, 0, 0, 0.502443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482141,-99) , 
2, 0.214378, 1, 0, 0.501445,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.00658568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499054,-99) , 
2, 0.275085, 0, 0, 0.499877,-99) , 
2, -0.214461, 1, 0, 0.500822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481532,-99) , 
3, 9.37618, 1, 0, 0.499948,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.00508966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.132681, 0, 1, 0.501159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480664,-99) , 
1, 0.0241676, 1, 0, 0.500568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481092,-99) , 
2, 0.214319, 1, 0, 0.499594,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0164576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484948,-99) , 
9, 10.9913, 1, 0, 0.50283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470101,-99) , 
7, -951.286, 0, 0, 0.4858,-99) , 
6, 0.00113352, 0, 0, 0.500656,-99) , 
NN(
0, 
0, 
-1, -0.143163, 1, -1, 0.483586,-99) , 
6, 0.0238055, 1, 0, 0.49967,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0120884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496554,-99) , 
4, 0.999864, 1, 0, 0.498001,-99) , 
3, 9.2602, 0, 0, 0.499361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507015,-99) , 
NN(
0, 
0, 
-1, 0.351446, 0, -1, 0.480546,-99) , 
7, -951.286, 0, 0, 0.491233,-99) , 
4, 0.999524, 0, 0, 0.498434,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0136966);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491293,-99) , 
7, -951.286, 1, 0, 0.511478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497134,-99) , 
9, 1.83733, 0, 0, 0.500573,-99) , 
10, -0.205938, 1, 0, 0.501891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475208,-99) , 
4, 0.998571, 0, 0, 0.50065,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.00866777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498244,-99) , 
9, 0.298751, 0, 0, 0.501375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479882,-99) , 
1, 0.0244476, 1, 0, 0.500771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484053,-99) , 
2, 0.2141, 1, 0, 0.499939,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00565904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49991,-99) , 
2, -0.214086, 1, 0, 0.500828,-99) , 
4, 0.998095, 1, 0, 0.502081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4855,-99) , 
3, 9.27716, 1, 0, 0.501293,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.00839517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484857,-99) , 
9, 12.7684, 1, 0, 0.501031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47502,-99) , 
1, -0.0256963, 0, 0, 0.50033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481305,-99) , 
1, 0.0241304, 1, 0, 0.49979,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0190869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492084,-99) , 
9, 1.25195, 1, 0, 0.508498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455187,-99) , 
8, -1.85715, 0, 0, 0.49778,-99) , 
7, -951.286, 0, 0, 0.501703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493497,-99) , 
9, -1.88408, 0, 0, 0.499616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464697,-99) , 
10, 0.525311, 1, 0, 0.494458,-99) , 
9, -1.44473, 0, 0, 0.49988,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0113172);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498364,-99) , 
9, 1.84186, 0, 0, 0.501597,-99) , 
NN(
0, 
0, 
-1, 4.57601, 0, -1, 0.49252,-99) , 
10, 4.2728, 1, 0, 0.499629,-99) , 
9, 22.0979, 0, 0, 0.500293,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0127428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.530963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479086,-99) , 
8, -2.2517, 0, 0, 0.516176,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488161,-99) , 
0, 0.5019, 0, 0, 0.49277,-99) , 
3, 4.75677, 1, 0, 0.500592,-99) , 
8, -1.57143, 1, 0, 0.502027,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0103905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.502831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472394,-99) , 
4, 0.99941, 0, 0, 0.501877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460744,-99) , 
7, -951.286, 0, 0, 0.48062,-99) , 
4, 0.999048, 0, 0, 0.500435,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0106632);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517163,-99) , 
NN(
NN(
0, 
0, 
-1, -1.24523, 0, 1, 0.506593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496679,-99) , 
6, 0.0237851, 0, 0, 0.497692,-99) , 
10, 1.04105, 1, 0, 0.500796,-99) , 
5, -0.819488, 1, 0, 0.501456,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0154975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.339452, 0, 1, 0.50882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480193,-99) , 
5, -0.466261, 1, 0, 0.493931,-99) , 
7, -951.286, 1, 0, 0.502626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497212,-99) , 
9, 0.591537, 0, 0, 0.499554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443305,-99) , 
9, 0.774492, 0, 0, 0.475185,-99) , 
10, 2.52618, 1, 0, 0.497266,-99) , 
9, 1.2855, 0, 0, 0.499174,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0137194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451597,-99) , 
10, 3.21138, 1, 0, 0.498917,-99) , 
9, 1.97199, 0, 0, 0.500957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50513,-99) , 
NN(
0, 
0, 
-1, -0.142282, 1, -1, 0.485279,-99) , 
0, 0.5019, 0, 0, 0.48891,-99) , 
10, 4.3645, 1, 0, 0.498021,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00792667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518775,-99) , 
NN(
0, 
0, 
-1, 3.86195, 1, -1, 0.497362,-99) , 
8, 1.85708, 0, 0, 0.498264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472545,-99) , 
4, 0.997619, 0, 0, 0.497576,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0188203);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496762,-99) , 
8, -0.213522, 0, 0, 0.52124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48991,-99) , 
10, 1.0942, 1, 0, 0.500637,-99) , 
9, -0.153064, 0, 0, 0.503993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483583,-99) , 
6, 0.00679438, 1, 0, 0.494936,-99) , 
6, 0.0237824, 0, 0, 0.497067,-99) , 
10, 2.22394, 1, 0, 0.500868,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.00587895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526263,-99) , 
NN(
0, 
0, 
-1, 0.0242341, 1, -1, 0.498522,-99) , 
4, 0.997619, 1, 0, 0.499271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479826,-99) , 
3, 9.47659, 1, 0, 0.498418,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00769565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499317,-99) , 
5, -0.103892, 0, 0, 0.511355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498615,-99) , 
3, 9.11468, 0, 0, 0.499586,-99) , 
0, 0.492376, 1, 0, 0.500473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465019,-99) , 
0, 0.499043, 1, 0, 0.488285,-99) , 
4, 0.999048, 0, 0, 0.499635,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0189501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495235,-99) , 
5, -0.0203784, 1, 0, 0.519883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471183,-99) , 
9, -1.59287, 0, 0, 0.50044,-99) , 
8, -0.713377, 1, 0, 0.505308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466677,-99) , 
8, 1.77547, 1, 0, 0.500175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443753,-99) , 
8, -2.14284, 0, 0, 0.497826,-99) , 
7, -951.286, 0, 0, 0.500707,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.00982391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497243,-99) , 
0, 0.493328, 1, 0, 0.498734,-99) , 
3, 9.26727, 0, 0, 0.499635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482769,-99) , 
4, 0.998572, 0, 0, 0.498834,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0139222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.504842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482998,-99) , 
2, 0.214339, 1, 0, 0.503908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461703,-99) , 
10, 0.607457, 1, 0, 0.490597,-99) , 
9, -0.747369, 0, 0, 0.495486,-99) , 
5, 0.263474, 1, 0, 0.501958,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0052876);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521847,-99) , 
NN(
0, 
0, 
-1, -1.65307, 0, -1, 0.498034,-99) , 
8, -2.14286, 1, 0, 0.498845,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.00996097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499017,-99) , 
9, 0.584153, 0, 0, 0.50276,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.495731,-99) , 
10, 2.6853, 1, 0, 0.499972,-99) , 
8, -2.14286, 1, 0, 0.500663,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.00566602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498928,-99) , 
2, 0.206229, 0, 0, 0.499538,-99) , 
4, 0.997619, 1, 0, 0.500201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483711,-99) , 
3, 9.46687, 1, 0, 0.499466,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.00674244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214122, 0, 1, 0.502041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475158,-99) , 
3, 7.62225, 1, 0, 0.501147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484628,-99) , 
3, 9.38316, 1, 0, 0.500395,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0123414);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497405,-99) , 
1, 0.00287637, 0, 0, 0.5015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470168,-99) , 
1, -0.0256014, 0, 0, 0.500658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474845,-99) , 
1, 0.0242341, 1, 0, 0.499936,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00969178);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498037,-99) , 
10, 0.811335, 1, 0, 0.500632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483892,-99) , 
8, -1.65305, 0, 0, 0.499846,-99) , 
8, -2.14285, 1, 0, 0.50073,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0154686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0612711, 1, 1, 0.508968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474031,-99) , 
7, -1.28575, 0, 0, 0.505458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473095,-99) , 
8, 1.84348, 1, 0, 0.501679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474947,-99) , 
8, -1.85715, 0, 0, 0.499815,-99) , 
7, -951.286, 0, 0, 0.501969,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00993162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499749,-99) , 
3, 8.80624, 0, 0, 0.501248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487471,-99) , 
0, 0.5019, 0, 0, 0.492642,-99) , 
4, 0.999887, 0, 0, 0.499134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472563,-99) , 
4, 0.997619, 0, 0, 0.498406,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.00816412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497536,-99) , 
2, 0.218613, 0, 0, 0.498207,-99) , 
4, 0.998571, 1, 0, 0.499154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488302,-99) , 
3, 9.25366, 1, 0, 0.498631,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0111048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481846,-99) , 
5, 0.487286, 1, 0, 0.511184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491908,-99) , 
10, 6.72758, 1, 0, 0.507221,-99) , 
NN(
NN(
0, 
0, 
-1, 0.215295, 0, 1, 0.501409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474493,-99) , 
3, 9.33536, 1, 0, 0.50019,-99) , 
8, 0.714245, 0, 0, 0.501886,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00950525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.437223, 0, 1, 0.502767,-99) , 
NN(
0, 
0, 
-1, 0.222524, 1, -1, 0.491075,-99) , 
9, -1.71617, 0, 0, 0.500211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47949,-99) , 
10, 14.5391, 1, 0, 0.499403,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0116084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496101,-99) , 
6, 0.0237961, 0, 0, 0.497197,-99) , 
5, 0.35092, 0, 0, 0.499301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482938,-99) , 
3, 9.27654, 1, 0, 0.498544,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.00830515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.18368, 0, 1, 0.523947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499407,-99) , 
8, 1.84349, 0, 0, 0.500425,-99) , 
8, -1.85714, 1, 0, 0.501778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465232,-99) , 
5, 0.437198, 0, 0, 0.482744,-99) , 
4, 0.999048, 0, 0, 0.500478,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0135647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76579, 0, 1, 0.52412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483864,-99) , 
8, -2.25169, 0, 0, 0.512513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498439,-99) , 
9, 0.636681, 0, 0, 0.502163,-99) , 
NN(
0, 
0, 
-1, -0.071889, 0, -1, 0.494259,-99) , 
10, 2.88019, 1, 0, 0.499131,-99) , 
8, -1.57143, 1, 0, 0.500355,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0110419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26659, 0, 1, 0.504031,-99) , 
NN(
0, 
0, 
-1, 0.999002, 1, -1, 0.490091,-99) , 
4, 0.999365, 0, 0, 0.503172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461429,-99) , 
4, 0.998095, 0, 0, 0.501796,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0185231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488198,-99) , 
6, 0.00679411, 1, 0, 0.50197,-99) , 
6, 0.0237824, 0, 0, 0.504844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47895,-99) , 
8, -1.85721, 0, 0, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0.815146, 0, -1, 0.467131,-99) , 
10, 2.49903, 1, 0, 0.497189,-99) , 
9, 1.23098, 0, 0, 0.499968,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0132645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.596194, 1, 1, 0.517482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491661,-99) , 
9, 21.4245, 0, 0, 0.499382,-99) , 
9, 11.191, 1, 0, 0.507213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496449,-99) , 
9, 0.489903, 0, 0, 0.49952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478713,-99) , 
8, -1.85715, 0, 0, 0.498249,-99) , 
9, 5.81837, 0, 0, 0.499841,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0129722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498619,-99) , 
8, -2.23809, 0, 0, 0.517885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496649,-99) , 
10, 2.30299, 1, 0, 0.500854,-99) , 
NN(
0, 
0, 
-1, 2.14004, 1, -1, 0.491469,-99) , 
8, -0.469397, 0, 0, 0.49788,-99) , 
8, -1.85714, 1, 0, 0.499019,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.00751679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498128,-99) , 
8, -2.2381, 0, 0, 0.519299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478685,-99) , 
9, 15.7767, 1, 0, 0.499886,-99) , 
NN(
0, 
0, 
-1, 0.0236828, 1, -1, 0.488445,-99) , 
6, 0.0237627, 1, 0, 0.499206,-99) , 
8, -1.85715, 1, 0, 0.500348,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0082129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497975,-99) , 
10, 14.4198, 1, 0, 0.511133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492098,-99) , 
5, 0.265737, 1, 0, 0.498896,-99) , 
10, -1.06826, 1, 0, 0.49988,-99) , 
10, 10.3792, 0, 0, 0.500784,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.00570609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499288,-99) , 
2, -0.205989, 1, 0, 0.500043,-99) , 
3, 9.26727, 0, 0, 0.500926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484522,-99) , 
4, 0.998572, 0, 0, 0.500152,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.00943487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489256,-99) , 
8, -2.25171, 0, 0, 0.511742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498351,-99) , 
3, 4.68687, 0, 0, 0.499873,-99) , 
8, -1.57145, 1, 0, 0.50096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465689,-99) , 
4, 0.997619, 0, 0, 0.500024,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0162199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498817,-99) , 
10, 14.0267, 1, 0, 0.510098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496364,-99) , 
5, -0.610605, 0, 0, 0.500907,-99) , 
5, -0.718022, 1, 0, 0.505795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494833,-99) , 
6, 0.0101986, 0, 0, 0.498156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460516,-99) , 
6, 0.0237976, 1, 0, 0.496906,-99) , 
9, 6.47369, 0, 0, 0.498364,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.00643743);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499875,-99) , 
10, 0.612236, 1, 0, 0.501702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480269,-99) , 
4, 0.997619, 0, 0, 0.50111,-99) , 
8, -2.14284, 1, 0, 0.501986,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0088788);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.519262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487138,-99) , 
8, -2.27436, 0, 0, 0.514349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490887,-99) , 
8, -1.08228, 0, 0, 0.499272,-99) , 
8, -1.91155, 1, 0, 0.500113,-99) , 
8, 1.57138, 0, 0, 0.501475,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0083275);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27946, 0, 1, 0.503025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473962,-99) , 
5, 0.444667, 0, 0, 0.489776,-99) , 
4, 0.999048, 0, 0, 0.502118,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0049135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499665,-99) , 
8, 1.77546, 0, 0, 0.500545,-99) , 
8, -2.14286, 1, 0, 0.501251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476256,-99) , 
4, 0.997619, 0, 0, 0.500576,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0202745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485478,-99) , 
6, 0.0237684, 1, 0, 0.501116,-99) , 
10, 0.124675, 1, 0, 0.502653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481977,-99) , 
5, 0.165301, 1, 0, 0.506719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482004,-99) , 
10, -0.725962, 1, 0, 0.490205,-99) , 
7, -951.286, 0, 0, 0.496128,-99) , 
8, -0.428598, 0, 0, 0.50024,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.00900582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499065,-99) , 
8, -0.428594, 1, 0, 0.501811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47738,-99) , 
0, 0.490063, 0, 0, 0.501112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476907,-99) , 
0, 0.504757, 1, 0, 0.499927,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0118506);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497855,-99) , 
8, -0.183673, 0, 0, 0.50339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490994,-99) , 
8, 0.0611748, 0, 0, 0.495792,-99) , 
0, 0.49809, 0, 0, 0.499635,-99) , 
8, -2.14285, 1, 0, 0.500461,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0116736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489862,-99) , 
8, -2.23809, 0, 0, 0.515506,-99) , 
NN(
NN(
0, 
0, 
-1, 0.952096, 0, 1, 0.503197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491477,-99) , 
10, 9.84628, 0, 0, 0.494752,-99) , 
10, 3.06628, 1, 0, 0.500217,-99) , 
8, -1.85714, 1, 0, 0.501092,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.020024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499584,-99) , 
10, 1.88603, 1, 0, 0.513082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473912,-99) , 
7, -0.142994, 1, 0, 0.493362,-99) , 
5, -0.00792085, 1, 0, 0.504471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458972,-99) , 
8, 1.84343, 1, 0, 0.498471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463864,-99) , 
8, -1.85716, 0, 0, 0.496121,-99) , 
7, -951.286, 0, 0, 0.499326,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.011405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495534,-99) , 
8, -2.2381, 0, 0, 0.521884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491335,-99) , 
4, 0.999887, 0, 0, 0.499477,-99) , 
8, -1.85715, 1, 0, 0.500763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469965,-99) , 
4, 0.997619, 0, 0, 0.49994,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0106042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.2381, 0, 1, 0.519256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49575,-99) , 
9, 1.94286, 0, 0, 0.497824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480525,-99) , 
2, -0.214249, 0, 0, 0.496889,-99) , 
8, -1.85716, 1, 0, 0.498163,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0129919);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496384,-99) , 
4, 0.999524, 1, 0, 0.499012,-99) , 
NN(
0, 
0, 
-1, -0.214134, 0, -1, 0.49082,-99) , 
3, 4.72162, 1, 0, 0.497366,-99) , 
8, -2.14289, 1, 0, 0.497987,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00611492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52556,-99) , 
NN(
0, 
0, 
-1, 0.0242341, 1, -1, 0.498849,-99) , 
8, 1.85709, 0, 0, 0.499979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479185,-99) , 
4, 0.998572, 0, 0, 0.499004,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0169945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.82798, 1, 1, 0.507521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476996,-99) , 
8, -2.26531, 0, 0, 0.505448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493793,-99) , 
9, 0.646588, 0, 0, 0.5001,-99) , 
NN(
0, 
0, 
-1, -0.521673, 1, -1, 0.492083,-99) , 
10, 5.19039, 1, 0, 0.498142,-99) , 
8, -0.428591, 1, 0, 0.500859,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00970261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80007, 0, 1, 0.503989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473747,-99) , 
9, -1.94496, 0, 0, 0.493835,-99) , 
4, 0.999887, 0, 0, 0.501482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484969,-99) , 
4, 0.997619, 0, 0, 0.501028,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0111791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489247,-99) , 
0, 0.503804, 1, 0, 0.501846,-99) , 
8, -2.14284, 1, 0, 0.50258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489043,-99) , 
5, -0.0086816, 0, 0, 0.498347,-99) , 
NN(
0, 
0, 
-1, -0.104903, 0, -1, 0.481878,-99) , 
0, 0.497138, 0, 0, 0.491813,-99) , 
2, -0.0713489, 0, 0, 0.500831,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0146929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498789,-99) , 
8, -0.708814, 1, 0, 0.50567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464337,-99) , 
10, -0.588436, 0, 0, 0.501722,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.494497,-99) , 
7, -951.286, 0, 0, 0.497271,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0143911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466948,-99) , 
8, -1.85948, 0, 0, 0.502681,-99) , 
10, -1.26408, 1, 0, 0.504403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51827,-99) , 
NN(
0, 
0, 
-1, -0.672898, 0, -1, 0.49535,-99) , 
8, -1.2852, 1, 0, 0.496822,-99) , 
10, 2.0662, 1, 0, 0.500779,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0102445);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497905,-99) , 
4, 0.998095, 1, 0, 0.499368,-99) , 
NN(
0, 
0, 
-1, 0.499995, 0, -1, 0.490212,-99) , 
3, 4.80388, 1, 0, 0.49757,-99) , 
8, -2.14287, 1, 0, 0.498262,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0135739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.265224, 1, 1, 0.508372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48352,-99) , 
7, -1.28562, 0, 0, 0.505917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479214,-99) , 
8, 1.38086, 1, 0, 0.499141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472875,-99) , 
8, -1.85716, 0, 0, 0.497323,-99) , 
7, -951.286, 0, 0, 0.500625,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0161494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499337,-99) , 
7, -951.286, 0, 0, 0.50513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491819,-99) , 
9, -0.0368213, 0, 0, 0.496114,-99) , 
5, -0.0975098, 1, 0, 0.500792,-99) , 
NN(
0, 
0, 
-1, -0.0119659, 0, -1, 0.481859,-99) , 
2, -0.214229, 0, 0, 0.499774,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.00888464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499085,-99) , 
7, -951.286, 0, 0, 0.501921,-99) , 
9, -3.3095, 1, 0, 0.502704,-99) , 
9, 22.1562, 0, 0, 0.503402,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0104422);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529758,-99) , 
NN(
NN(
0, 
0, 
-1, 2.80607, 1, 1, 0.505082,-99) , 
NN(
0, 
0, 
-1, 2.24675, 1, -1, 0.496185,-99) , 
9, 0.685718, 0, 0, 0.499983,-99) , 
8, -2.14286, 1, 0, 0.500996,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00995293);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23813, 0, 1, 0.522121,-99) , 
NN(
NN(
0, 
0, 
-1, -0.467209, 1, 1, 0.50294,-99) , 
NN(
0, 
0, 
-1, -0.109599, 1, -1, 0.488081,-99) , 
8, -1.1633, 0, 0, 0.50128,-99) , 
8, -1.85717, 1, 0, 0.502465,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0204583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465363,-99) , 
8, -1.85721, 0, 0, 0.506925,-99) , 
10, -1.16446, 1, 0, 0.508289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491138,-99) , 
7, -951.286, 1, 0, 0.499301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477047,-99) , 
5, 0.167496, 1, 0, 0.498021,-99) , 
10, 2.29865, 1, 0, 0.503767,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0134092);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.2115, 1, 1, 0.512489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49549,-99) , 
6, 0.0135896, 0, 0, 0.497003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474297,-99) , 
6, 0.0237823, 1, 0, 0.496047,-99) , 
10, 10.1365, 0, 0, 0.497432,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0101085);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495316,-99) , 
10, 0.93018, 1, 0, 0.497564,-99) , 
8, 1.77547, 0, 0, 0.498475,-99) , 
8, -2.14284, 1, 0, 0.499205,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00572096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499172,-99) , 
9, 0.989485, 0, 0, 0.513122,-99) , 
NN(
NN(
0, 
0, 
-1, -0.454895, 1, 1, 0.501432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479673,-99) , 
8, 1.35368, 1, 0, 0.500742,-99) , 
8, 1.57136, 0, 0, 0.501606,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00709532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498645,-99) , 
8, -1.85715, 1, 0, 0.499556,-99) , 
4, 0.998572, 1, 0, 0.500447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482806,-99) , 
3, 9.32317, 1, 0, 0.49963,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00998709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489177,-99) , 
4, 0.999773, 0, 0, 0.500621,-99) , 
8, 1.85708, 0, 0, 0.501697,-99) , 
NN(
0, 
0, 
-1, -0.0712444, 1, -1, 0.484019,-99) , 
4, 0.999048, 0, 0, 0.500492,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.00889672);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493655,-99) , 
3, 2.36786, 1, 0, 0.516842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498143,-99) , 
8, -2.14287, 1, 0, 0.499018,-99) , 
4, 0.999048, 1, 0, 0.50022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483539,-99) , 
3, 9.50217, 1, 0, 0.499493,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.00800222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499763,-99) , 
5, 0.165299, 1, 0, 0.512506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498863,-99) , 
4, 0.999524, 1, 0, 0.500873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487176,-99) , 
3, 9.32317, 1, 0, 0.500244,-99) , 
8, 1.57137, 0, 0, 0.501102,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0102316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.32061, 1, 1, 0.508967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477956,-99) , 
10, 3.75043, 1, 0, 0.501125,-99) , 
9, 3.32739, 0, 0, 0.503029,-99) , 
NN(
0, 
0, 
-1, -0.107675, 0, -1, 0.489448,-99) , 
0, 0.491424, 0, 0, 0.502287,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00833138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 0, 1, 0.521555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491824,-99) , 
8, 1.76187, 0, 0, 0.501019,-99) , 
10, 3.06558, 1, 0, 0.510779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518765,-99) , 
NN(
0, 
0, 
-1, -2.23809, 0, -1, 0.498867,-99) , 
1, -0.0234777, 1, 0, 0.499493,-99) , 
8, 0.999969, 0, 0, 0.501388,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.00712882);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.97954, 1, 1, 0.512387,-99) , 
NN(
NN(
0, 
0, 
-1, 9.50856, 0, 1, 0.501323,-99) , 
NN(
0, 
0, 
-1, -0.38777, 0, -1, 0.493483,-99) , 
0, 0.496185, 0, 0, 0.498945,-99) , 
8, 1.57138, 0, 0, 0.499889,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00852935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499033,-99) , 
8, -2.14285, 1, 0, 0.499739,-99) , 
3, 9.26084, 0, 0, 0.500839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506883,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.475599,-99) , 
7, -951.286, 0, 0, 0.488368,-99) , 
4, 0.999524, 0, 0, 0.499439,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0115351);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474639,-99) , 
3, 9.24801, 1, 0, 0.503409,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00664811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498692,-99) , 
3, 9.27946, 0, 0, 0.499497,-99) , 
8, 1.85709, 0, 0, 0.500281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478249,-99) , 
4, 0.998095, 0, 0, 0.499529,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0232078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496906,-99) , 
10, 3.31233, 1, 0, 0.509556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490327,-99) , 
9, 2.32681, 0, 0, 0.495781,-99) , 
7, -951.286, 0, 0, 0.500882,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484843,-99) , 
7, -951.286, 1, 0, 0.498639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466278,-99) , 
10, 0.0436437, 1, 0, 0.490469,-99) , 
9, -1.79149, 0, 0, 0.498813,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0148117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497085,-99) , 
9, -0.933046, 0, 0, 0.504718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483233,-99) , 
9, 4.52083, 0, 0, 0.495981,-99) , 
10, 3.58199, 1, 0, 0.502135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483813,-99) , 
3, 9.50281, 1, 0, 0.501326,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0122343);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472249,-99) , 
6, 0.0237849, 1, 0, 0.50241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481528,-99) , 
5, -0.798112, 1, 0, 0.490911,-99) , 
9, 8.98978, 1, 0, 0.500942,-99) , 
8, -2.14285, 1, 0, 0.501574,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0166565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.284057, 1, 1, 0.506799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475782,-99) , 
9, -2.75602, 0, 0, 0.503869,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493105,-99) , 
9, -0.512111, 1, 0, 0.498182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454325,-99) , 
8, -2.14286, 0, 0, 0.496359,-99) , 
7, -951.286, 0, 0, 0.499238,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00495491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517287,-99) , 
NN(
0, 
0, 
-1, 0.0237977, 1, -1, 0.498763,-99) , 
10, 10.1878, 0, 0, 0.499625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485373,-99) , 
10, 14.53, 1, 0, 0.49907,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.00713462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.74617, 0, 1, 0.502188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4841,-99) , 
5, 0.617983, 1, 0, 0.501386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480745,-99) , 
4, 0.998571, 0, 0, 0.500418,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0103134);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49643,-99) , 
8, -0.299421, 0, 0, 0.503257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493435,-99) , 
1, 0.00121736, 0, 0, 0.496689,-99) , 
10, 0.278503, 1, 0, 0.49804,-99) , 
1, -0.0237187, 1, 0, 0.4985,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0143373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.199559, 1, 1, 0.525508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481066,-99) , 
8, -2.2517, 0, 0, 0.512892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498998,-99) , 
10, 1.47935, 1, 0, 0.501971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489599,-99) , 
9, -0.872643, 0, 0, 0.495948,-99) , 
5, 0.263602, 1, 0, 0.500525,-99) , 
8, -1.57143, 1, 0, 0.501649,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0139761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489748,-99) , 
10, 2.91643, 1, 0, 0.52126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499381,-99) , 
6, 0.0237311, 0, 0, 0.501714,-99) , 
5, -0.118226, 0, 0, 0.504995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496576,-99) , 
10, -0.891603, 1, 0, 0.498542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460746,-99) , 
10, 2.16634, 1, 0, 0.496623,-99) , 
9, 0.298751, 0, 0, 0.500568,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0115933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00701771, 0, 1, 0.504988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475869,-99) , 
1, -0.0258174, 0, 0, 0.504207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484165,-99) , 
1, 0.0240094, 1, 0, 0.503635,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.00941852);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52376,-99) , 
NN(
NN(
0, 
0, 
-1, 1.81044, 0, 1, 0.503009,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.489132,-99) , 
8, -1.16328, 0, 0, 0.501175,-99) , 
8, -2.14286, 1, 0, 0.501933,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.00703316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.511903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48785,-99) , 
0, 0.501492, 1, 0, 0.498772,-99) , 
0, 0.503805, 0, 0, 0.499804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469699,-99) , 
4, 0.998095, 0, 0, 0.498807,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0152001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488852,-99) , 
10, -0.556682, 1, 0, 0.502811,-99) , 
8, -0.245295, 0, 0, 0.507845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487129,-99) , 
9, -0.776531, 0, 0, 0.499294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482828,-99) , 
10, 14.5263, 1, 0, 0.498505,-99) , 
10, 0.19748, 1, 0, 0.500248,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0099628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00015, 1, 1, 0.515291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492645,-99) , 
2, -0.275478, 0, 0, 0.510344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519993,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.497287,-99) , 
8, -2.14286, 1, 0, 0.49804,-99) , 
2, -0.071409, 1, 0, 0.500071,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.00846542);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498504,-99) , 
4, 0.999977, 1, 0, 0.507133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485939,-99) , 
4, 0.999524, 0, 0, 0.504299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492604,-99) , 
2, 0.0714776, 1, 0, 0.499337,-99) , 
NN(
0, 
0, 
-1, 0.500615, 0, -1, 0.480139,-99) , 
0, 0.500312, 1, 0, 0.498042,-99) , 
0, 0.500947, 0, 0, 0.499525,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0146802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000239293, 0, 1, 0.509424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487133,-99) , 
5, -0.282534, 1, 0, 0.495569,-99) , 
10, 2.73729, 1, 0, 0.501967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497508,-99) , 
6, 0.0237962, 0, 0, 0.500232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486023,-99) , 
9, -1.41475, 0, 0, 0.491895,-99) , 
5, -0.00786326, 1, 0, 0.496929,-99) , 
8, 0.428397, 0, 0, 0.498573,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.012963);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.701207, 1, 1, 0.515481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497264,-99) , 
9, -0.776546, 0, 0, 0.502121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491914,-99) , 
9, 3.05497, 0, 0, 0.496214,-99) , 
10, 1.38063, 1, 0, 0.498429,-99) , 
5, 0.623879, 0, 0, 0.499327,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00676715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498798,-99) , 
4, 0.999048, 1, 0, 0.500274,-99) , 
3, 9.50217, 0, 0, 0.500836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489624,-99) , 
2, 0.214319, 1, 0, 0.500277,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.00645049);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499892,-99) , 
10, -0.498864, 1, 0, 0.500805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472722,-99) , 
5, -0.0203479, 1, 0, 0.493183,-99) , 
8, -1.16326, 0, 0, 0.499791,-99) , 
8, -2.14285, 1, 0, 0.50045,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0120627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999819, 1, 1, 0.504945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477336,-99) , 
10, 4.104, 1, 0, 0.49513,-99) , 
2, -0.0711091, 0, 0, 0.503443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473779,-99) , 
4, 0.998095, 0, 0, 0.502448,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0147962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477218,-99) , 
10, 2.85942, 1, 0, 0.501313,-99) , 
9, 1.84186, 0, 0, 0.503143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495557,-99) , 
10, 7.32281, 0, 0, 0.503495,-99) , 
NN(
0, 
0, 
-1, -0.588571, 1, -1, 0.488784,-99) , 
8, 0.143217, 1, 0, 0.495466,-99) , 
10, 4.024, 1, 0, 0.501143,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.00898688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498142,-99) , 
8, 0.714255, 0, 0, 0.49979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481994,-99) , 
7, -951.286, 0, 0, 0.490914,-99) , 
0, 0.502988, 1, 0, 0.498747,-99) , 
NN(
0, 
0, 
-1, -0.107561, 1, -1, 0.483642,-99) , 
0, 0.491424, 0, 0, 0.497939,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0127997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491035,-99) , 
8, -2.2381, 0, 0, 0.513954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499256,-99) , 
5, -0.347979, 0, 0, 0.503179,-99) , 
NN(
0, 
0, 
-1, 2.44039, 1, -1, 0.494071,-99) , 
9, 1.88488, 0, 0, 0.497002,-99) , 
8, -1.85714, 1, 0, 0.497962,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0111941);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.701834, 1, 1, 0.514051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497726,-99) , 
10, 1.32866, 1, 0, 0.501013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460498,-99) , 
8, -2.2381, 0, 0, 0.486714,-99) , 
8, -1.85715, 0, 0, 0.500219,-99) , 
5, 0.624476, 0, 0, 0.500936,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0123931);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.07841, 1, 1, 0.505528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493468,-99) , 
8, -0.434049, 0, 0, 0.498605,-99) , 
NN(
0, 
0, 
-1, 0.158957, 0, -1, 0.478785,-99) , 
10, 1.80034, 1, 0, 0.496427,-99) , 
9, 0.178998, 0, 0, 0.500885,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.00934333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.19793, 0, 1, 0.502538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491061,-99) , 
6, 0.0237825, 0, 0, 0.494099,-99) , 
10, 4.28101, 1, 0, 0.500441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485826,-99) , 
3, 9.33306, 1, 0, 0.499767,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0123411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482129,-99) , 
4, 0.999582, 0, 0, 0.502343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492134,-99) , 
9, -0.678669, 0, 0, 0.495984,-99) , 
5, -0.0101492, 1, 0, 0.499679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476134,-99) , 
0, 0.490471, 0, 0, 0.498879,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0111397);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496282,-99) , 
6, 0.00362696, 0, 0, 0.501331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467658,-99) , 
1, -0.0253897, 0, 0, 0.500417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477242,-99) , 
1, 0.0243999, 1, 0, 0.499763,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.00878585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482698,-99) , 
9, 15.7591, 1, 0, 0.501328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474325,-99) , 
1, 0.0263861, 1, 0, 0.500612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475388,-99) , 
1, -0.0234307, 0, 0, 0.499866,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0166408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492352,-99) , 
8, 0.147163, 1, 0, 0.500141,-99) , 
10, 6.12711, 1, 0, 0.503528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492521,-99) , 
10, 3.67468, 1, 0, 0.511904,-99) , 
NN(
0, 
0, 
-1, 1.9893, 1, -1, 0.494278,-99) , 
9, 1.79214, 0, 0, 0.496581,-99) , 
9, 4.21308, 0, 0, 0.498079,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.00998747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.42662, 1, 1, 0.519963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49803,-99) , 
8, -2.14285, 1, 0, 0.498674,-99) , 
4, 0.999524, 1, 0, 0.501103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484574,-99) , 
3, 9.26727, 1, 0, 0.500324,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.013644);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495844,-99) , 
3, 4.80631, 1, 0, 0.507846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494768,-99) , 
9, -0.277216, 0, 0, 0.49949,-99) , 
0, 0.496186, 1, 0, 0.502061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478447,-99) , 
5, -0.375232, 1, 0, 0.487331,-99) , 
8, -1.449, 0, 0, 0.492761,-99) , 
8, -1.28573, 0, 0, 0.500795,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0114429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489816,-99) , 
5, 0.0685654, 1, 0, 0.51527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482383,-99) , 
8, -2.26532, 0, 0, 0.509243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498374,-99) , 
8, 1.77546, 0, 0, 0.499385,-99) , 
NN(
0, 
0, 
-1, -2.49251, 0, -1, 0.488074,-99) , 
5, 0.534236, 1, 0, 0.498357,-99) , 
8, -1.28573, 1, 0, 0.499864,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00597513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.98982, 0, 1, 0.502085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486834,-99) , 
5, 0.623879, 1, 0, 0.501435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488265,-99) , 
4, 0.998572, 0, 0, 0.500817,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0162775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.25265, 0, 1, 0.521317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479139,-99) , 
9, -2.42446, 1, 0, 0.4991,-99) , 
8, -1.08214, 0, 0, 0.512463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494729,-99) , 
8, 0.143278, 1, 0, 0.513103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495252,-99) , 
1, -0.00113376, 1, 0, 0.498886,-99) , 
6, 0.0237976, 0, 0, 0.499893,-99) , 
10, 0.327935, 1, 0, 0.502521,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0100237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497373,-99) , 
8, -1.17232, 0, 0, 0.508079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497562,-99) , 
6, 0.0237061, 0, 0, 0.498628,-99) , 
10, 0.172968, 1, 0, 0.500383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479634,-99) , 
1, 0.0247997, 1, 0, 0.499814,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0120904);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499249,-99) , 
9, 1.88128, 0, 0, 0.50235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489283,-99) , 
5, -0.698328, 1, 0, 0.494326,-99) , 
10, 4.37512, 1, 0, 0.500449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493909,-99) , 
5, -0.00722257, 0, 0, 0.506426,-99) , 
NN(
0, 
0, 
-1, 0.162382, 1, -1, 0.491555,-99) , 
2, -0.0713037, 1, 0, 0.494516,-99) , 
0, 0.499995, 1, 0, 0.498588,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0131098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485604,-99) , 
1, 0.0241607, 1, 0, 0.504226,-99) , 
8, -2.14286, 1, 0, 0.504821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489622,-99) , 
3, 2.538, 0, 0, 0.50258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474575,-99) , 
5, 0.163579, 1, 0, 0.493847,-99) , 
0, 0.492376, 0, 0, 0.50394,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.00578973);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515036,-99) , 
NN(
NN(
0, 
0, 
-1, -1.13685, 1, 1, 0.501553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487528,-99) , 
9, 9.97601, 1, 0, 0.500475,-99) , 
9, 22.0484, 0, 0, 0.501053,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00539945);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.51513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499196,-99) , 
4, 0.998571, 1, 0, 0.499657,-99) , 
2, 0.132998, 0, 0, 0.500543,-99) , 
2, 0.214615, 0, 0, 0.501294,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0124733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495928,-99) , 
10, 4.39186, 1, 0, 0.502973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486867,-99) , 
5, -0.104083, 1, 0, 0.496161,-99) , 
0, 0.494961, 0, 0, 0.501485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487007,-99) , 
0, 0.504757, 1, 0, 0.500766,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0160953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485617,-99) , 
10, 1.00122, 1, 0, 0.501434,-99) , 
9, 0.011519, 0, 0, 0.504754,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0235403, 0, 1, 0.511154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495091,-99) , 
6, 0.0135908, 0, 0, 0.496898,-99) , 
6, 0.0237849, 0, 0, 0.498066,-99) , 
5, 0.0829823, 0, 0, 0.500452,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.00957747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491135,-99) , 
3, 4.8189, 1, 0, 0.50548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498356,-99) , 
3, 9.27267, 0, 0, 0.499464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4828,-99) , 
9, -0.136021, 0, 0, 0.489703,-99) , 
4, 0.999524, 0, 0, 0.498485,-99) , 
0, 0.495233, 1, 0, 0.500098,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0118835);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498138,-99) , 
9, 0.685468, 0, 0, 0.502322,-99) , 
NN(
0, 
0, 
-1, -0.793773, 1, -1, 0.487197,-99) , 
9, 13.2244, 1, 0, 0.501021,-99) , 
8, -2.14285, 1, 0, 0.50175,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0116619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49846,-99) , 
10, 5.40959, 1, 0, 0.506923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493941,-99) , 
8, -1.28584, 0, 0, 0.505155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48061,-99) , 
8, -1.85804, 0, 0, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0.0755084, 1, -1, 0.496163,-99) , 
10, 2.26174, 1, 0, 0.499907,-99) , 
0, 0.496185, 1, 0, 0.501523,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0155217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498034,-99) , 
0, 0.498091, 0, 0, 0.509442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485322,-99) , 
8, -1.57156, 0, 0, 0.502509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474404,-99) , 
9, 1.65537, 0, 0, 0.496036,-99) , 
10, 2.53052, 1, 0, 0.500253,-99) , 
10, 9.85287, 0, 0, 0.501069,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0116208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49443,-99) , 
7, -951.286, 1, 0, 0.503835,-99) , 
0, 0.500948, 0, 0, 0.506712,-99) , 
NN(
NN(
0, 
0, 
-1, 0.884563, 0, 1, 0.502826,-99) , 
NN(
0, 
0, 
-1, 3.5524, 1, -1, 0.479499,-99) , 
10, 3.22299, 1, 0, 0.501111,-99) , 
9, 2.53271, 0, 0, 0.502647,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00989);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.3929, 1, 1, 0.510956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497498,-99) , 
6, 0.00566302, 0, 0, 0.500969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486055,-99) , 
6, 0.023785, 1, 0, 0.50033,-99) , 
10, 10.3481, 0, 0, 0.501206,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.014147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498288,-99) , 
3, 9.26585, 0, 0, 0.5006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486462,-99) , 
2, -0.213774, 1, 0, 0.489795,-99) , 
4, 0.999909, 0, 0, 0.497934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469365,-99) , 
7, -951.286, 0, 0, 0.48167,-99) , 
4, 0.999048, 0, 0, 0.496836,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00404799);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.50158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488635,-99) , 
3, 9.38656, 1, 0, 0.500993,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.00650513);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214378, 0, 1, 0.502751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485857,-99) , 
3, 9.4997, 1, 0, 0.502008,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.00788689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499379,-99) , 
2, 0.0696004, 0, 0, 0.510312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498259,-99) , 
8, -1.57144, 1, 0, 0.499278,-99) , 
4, 0.999524, 1, 0, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485432,-99) , 
3, 9.26727, 1, 0, 0.499815,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00959554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489854,-99) , 
9, 10.9913, 1, 0, 0.502052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481481,-99) , 
1, -0.0249959, 0, 0, 0.501478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474849,-99) , 
1, 0.0247002, 1, 0, 0.500739,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0122797);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.2115, 1, 1, 0.512573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495639,-99) , 
5, 0.175417, 0, 0, 0.498724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472524,-99) , 
6, 0.0237918, 1, 0, 0.497631,-99) , 
10, 10.1365, 0, 0, 0.498889,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0130096);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0240094, 0, 1, 0.504648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494295,-99) , 
10, 1.55175, 1, 0, 0.509191,-99) , 
NN(
0, 
0, 
-1, 0.67234, 1, -1, 0.491415,-99) , 
9, -1.03326, 0, 0, 0.496519,-99) , 
5, 0.173275, 1, 0, 0.502282,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.00861814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.56161, 0, 1, 0.507319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490941,-99) , 
4, 0.999932, 0, 0, 0.497231,-99) , 
8, 0.99992, 0, 0, 0.498923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481339,-99) , 
4, 0.998571, 0, 0, 0.498103,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00679628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214249, 0, 1, 0.502176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479323,-99) , 
5, 0.624459, 1, 0, 0.501214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487752,-99) , 
4, 0.998572, 0, 0, 0.500571,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0103382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477678,-99) , 
8, 1.93873, 1, 0, 0.499405,-99) , 
7, -951.286, 0, 0, 0.509652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497862,-99) , 
4, 0.998095, 1, 0, 0.498547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48379,-99) , 
8, -1.9796, 0, 0, 0.497821,-99) , 
8, 1.28568, 0, 0, 0.499139,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0181448);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492998,-99) , 
5, -0.193521, 0, 0, 0.519082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495649,-99) , 
5, -0.151332, 1, 0, 0.499555,-99) , 
9, -0.315344, 0, 0, 0.502563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489146,-99) , 
7, -951.286, 0, 0, 0.494493,-99) , 
8, -1.28524, 1, 0, 0.495692,-99) , 
10, 1.98651, 1, 0, 0.49918,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.012101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496921,-99) , 
9, -1.50915, 0, 0, 0.505499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495616,-99) , 
0, 0.499043, 0, 0, 0.498822,-99) , 
10, 0.89023, 1, 0, 0.500796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487534,-99) , 
8, -2.14286, 0, 0, 0.500371,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0128284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.0435, 0, 1, 0.514363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489765,-99) , 
4, 0.999524, 0, 0, 0.509897,-99) , 
NN(
NN(
0, 
0, 
-1, 4.70926, 0, 1, 0.505678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496259,-99) , 
0, 0.492376, 1, 0, 0.497158,-99) , 
8, 0.714239, 0, 0, 0.499699,-99) , 
10, 0.329584, 1, 0, 0.501819,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.00795846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499632,-99) , 
3, 4.6997, 0, 0, 0.501566,-99) , 
8, -2.14286, 1, 0, 0.502323,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.480917,-99) , 
4, 0.999048, 0, 0, 0.500883,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.00888888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49824,-99) , 
10, 0.172968, 1, 0, 0.500302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464354,-99) , 
1, -0.0259859, 0, 0, 0.499355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480826,-99) , 
1, 0.0238844, 1, 0, 0.498819,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.00540004);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483384,-99) , 
3, 9.46687, 1, 0, 0.501237,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0174207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.90211, 1, 1, 0.521333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494027,-99) , 
8, -0.714263, 0, 0, 0.503579,-99) , 
5, -0.101856, 0, 0, 0.506275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499328,-99) , 
9, -1.76478, 0, 0, 0.506726,-99) , 
NN(
0, 
0, 
-1, -1.33227, 0, -1, 0.490326,-99) , 
10, 0.600458, 1, 0, 0.498172,-99) , 
9, 0.332609, 0, 0, 0.50196,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0133973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498342,-99) , 
10, 2.16628, 1, 0, 0.503992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478219,-99) , 
4, 0.999683, 0, 0, 0.503017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484944,-99) , 
5, 0.434472, 1, 0, 0.49528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481063,-99) , 
0, 0.499995, 1, 0, 0.490487,-99) , 
4, 0.999524, 0, 0, 0.501601,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.00753588);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.503276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486181,-99) , 
3, 9.26355, 1, 0, 0.502479,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.00918397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.13942, 1, 1, 0.505971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498834,-99) , 
9, -3.30526, 1, 0, 0.500482,-99) , 
9, 0.288579, 0, 0, 0.503023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483125,-99) , 
1, -0.0225157, 0, 0, 0.502391,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00954661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498387,-99) , 
8, -2.2381, 0, 0, 0.520647,-99) , 
NN(
NN(
0, 
0, 
-1, 0.351457, 0, 1, 0.503564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496703,-99) , 
2, 0.0687491, 0, 0, 0.49835,-99) , 
10, 2.75866, 1, 0, 0.501516,-99) , 
8, -1.85715, 1, 0, 0.502616,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0146015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494624,-99) , 
10, 3.63424, 1, 0, 0.500508,-99) , 
10, 0.118437, 1, 0, 0.502176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468552,-99) , 
8, -2.02041, 0, 0, 0.499902,-99) , 
NN(
0, 
0, 
-1, 3.37084, 0, -1, 0.487686,-99) , 
10, 1.78572, 1, 0, 0.495696,-99) , 
8, -0.428591, 0, 0, 0.49978,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0156839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.79372, 1, 1, 0.511805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494463,-99) , 
10, 8.31589, 1, 0, 0.501893,-99) , 
8, 0.42925, 1, 0, 0.507873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496623,-99) , 
9, 1.09227, 0, 0, 0.499892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469253,-99) , 
10, 3.75078, 1, 0, 0.498265,-99) , 
9, 3.32739, 0, 0, 0.500604,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.00755746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0825957, 0, 1, 0.502299,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.492063,-99) , 
0, 0.493329, 0, 0, 0.50115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47152,-99) , 
4, 0.998095, 0, 0, 0.500167,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0145408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495758,-99) , 
10, 5.92015, 1, 0, 0.508957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49715,-99) , 
10, -0.392925, 1, 0, 0.499865,-99) , 
8, 0.142752, 0, 0, 0.503766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48695,-99) , 
9, -0.975739, 0, 0, 0.498389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479793,-99) , 
8, -1.57143, 0, 0, 0.496728,-99) , 
0, 0.499995, 1, 0, 0.501552,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0047439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499412,-99) , 
3, 8.86809, 0, 0, 0.500249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486015,-99) , 
2, -0.275457, 0, 0, 0.499718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487479,-99) , 
2, 0.214319, 1, 0, 0.499121,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.00721447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499888,-99) , 
0, 0.491424, 1, 0, 0.500879,-99) , 
4, 0.998572, 1, 0, 0.502421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476252,-99) , 
3, 9.26727, 1, 0, 0.501203,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0114321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492387,-99) , 
10, -1.21525, 1, 0, 0.501191,-99) , 
8, -0.456065, 0, 0, 0.506821,-99) , 
NN(
NN(
0, 
0, 
-1, -0.142529, 1, 1, 0.506319,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.496923,-99) , 
9, 3.11597, 0, 0, 0.499701,-99) , 
10, -0.0509712, 1, 0, 0.500763,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0233591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472668,-99) , 
8, -1.6167, 0, 0, 0.514559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479962,-99) , 
7, -951.286, 1, 0, 0.500934,-99) , 
9, -1.87336, 0, 0, 0.508443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495694,-99) , 
6, 0.0237961, 0, 0, 0.49699,-99) , 
8, 1.85703, 0, 0, 0.498319,-99) , 
10, 1.47358, 1, 0, 0.502535,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0139793);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497126,-99) , 
2, -0.0781157, 0, 0, 0.505895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489638,-99) , 
8, 0.427756, 0, 0, 0.494328,-99) , 
2, 0.0715316, 1, 0, 0.504276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496596,-99) , 
5, -0.087519, 1, 0, 0.502534,-99) , 
NN(
0, 
0, 
-1, 4.55902, 1, -1, 0.493715,-99) , 
10, 2.22551, 1, 0, 0.498432,-99) , 
0, 0.499995, 1, 0, 0.502437,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.00435251);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.501444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480216,-99) , 
8, 1.85711, 1, 0, 0.500596,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.00857937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44552, 1, 1, 0.51329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498274,-99) , 
5, -0.458687, 1, 0, 0.500128,-99) , 
4, 0.999524, 1, 0, 0.501611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48683,-99) , 
3, 9.33306, 1, 0, 0.500937,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.008123);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.19188, 0, 1, 0.503001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492445,-99) , 
2, 0.0713539, 0, 0, 0.49988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478473,-99) , 
8, -0.714472, 0, 0, 0.494335,-99) , 
4, 0.999524, 0, 0, 0.502014,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.00934187);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519949,-99) , 
NN(
NN(
0, 
0, 
-1, -0.725962, 1, 1, 0.503175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479743,-99) , 
6, 0.0237961, 1, 0, 0.502018,-99) , 
5, -0.819742, 1, 0, 0.502752,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0103078);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.13094, 1, 1, 0.515166,-99) , 
NN(
NN(
0, 
0, 
-1, 0.632053, 0, 1, 0.503568,-99) , 
NN(
0, 
0, 
-1, -0.469137, 0, -1, 0.493895,-99) , 
10, 2.75866, 1, 0, 0.499778,-99) , 
8, -1.85715, 1, 0, 0.500637,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0113931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494539,-99) , 
5, 0.263023, 1, 0, 0.501886,-99) , 
4, 0.998095, 1, 0, 0.502817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480863,-99) , 
3, 9.26355, 1, 0, 0.501782,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0071886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483232,-99) , 
8, -1.57146, 0, 0, 0.499831,-99) , 
9, -3.37653, 1, 0, 0.500548,-99) , 
9, 22.0979, 0, 0, 0.501069,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0220378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496106,-99) , 
8, 0.324887, 0, 0, 0.513069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493605,-99) , 
8, -1.86003, 1, 0, 0.497118,-99) , 
9, -0.763089, 0, 0, 0.501216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491591,-99) , 
10, 14.5938, 1, 0, 0.507398,-99) , 
NN(
0, 
0, 
-1, 0.776682, 0, -1, 0.490303,-99) , 
10, 9.77525, 0, 0, 0.493337,-99) , 
10, 1.8704, 1, 0, 0.497183,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0100999);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.4594, 1, 1, 0.509222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498562,-99) , 
9, 1.86098, 0, 0, 0.50095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476778,-99) , 
9, 4.28606, 0, 0, 0.49191,-99) , 
10, 3.70272, 1, 0, 0.498936,-99) , 
10, 10.4256, 0, 0, 0.499763,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0141741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.524527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497559,-99) , 
10, -1.16786, 1, 0, 0.504247,-99) , 
9, -1.96518, 0, 0, 0.509018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465988,-99) , 
8, -1.57149, 0, 0, 0.503473,-99) , 
NN(
0, 
0, 
-1, 4.52435, 1, -1, 0.496513,-99) , 
10, 2.19133, 1, 0, 0.499413,-99) , 
10, 0.36783, 1, 0, 0.501485,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0103021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499667,-99) , 
7, -951.286, 1, 0, 0.503523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491129,-99) , 
0, 0.502852, 0, 0, 0.494912,-99) , 
2, -0.0713115, 0, 0, 0.50221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480174,-99) , 
4, 0.998095, 0, 0, 0.501471,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00511775);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521132,-99) , 
NN(
NN(
0, 
0, 
-1, 9.28584, 0, 1, 0.501289,-99) , 
NN(
0, 
0, 
-1, 0.159894, 0, -1, 0.487299,-99) , 
4, 0.99932, 0, 0, 0.500407,-99) , 
4, 0.997619, 1, 0, 0.501002,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.00926716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999523, 0, 1, 0.5231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485056,-99) , 
5, -0.245038, 1, 0, 0.500542,-99) , 
5, -0.00921722, 0, 0, 0.510635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499098,-99) , 
0, 0.504757, 0, 0, 0.499986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474473,-99) , 
4, 0.998571, 0, 0, 0.499193,-99) , 
2, -0.0713794, 1, 0, 0.501088,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.00448926);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27699, 0, 1, 0.501661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485834,-99) , 
4, 0.998571, 0, 0, 0.500923,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00747953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.404628, 1, 1, 0.522855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498917,-99) , 
7, -951.286, 1, 0, 0.512499,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474681,-99) , 
3, 10.5529, 1, 0, 0.50078,-99) , 
5, 0.443085, 0, 0, 0.502352,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.00869508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499731,-99) , 
0, 0.49682, 1, 0, 0.501656,-99) , 
2, 0.214452, 0, 0, 0.502387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509539,-99) , 
NN(
0, 
0, 
-1, 0.428065, 1, -1, 0.485856,-99) , 
7, -951.286, 0, 0, 0.495104,-99) , 
0, 0.494281, 0, 0, 0.501191,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0127798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.35443, 0, 1, 0.504714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484965,-99) , 
4, 0.999525, 0, 0, 0.503572,-99) , 
NN(
NN(
0, 
0, 
-1, 0.425546, 0, 1, 0.518803,-99) , 
NN(
0, 
0, 
-1, 0.860403, 1, -1, 0.49356,-99) , 
9, -0.207502, 0, 0, 0.497501,-99) , 
5, 0.0830762, 1, 0, 0.501432,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.00663115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499683,-99) , 
6, 0.00238644, 1, 0, 0.501947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482115,-99) , 
1, -0.0250585, 0, 0, 0.501391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479821,-99) , 
1, 0.0246829, 1, 0, 0.500802,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0124946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.17834, 0, 1, 0.519552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458869,-99) , 
10, 0.940068, 1, 0, 0.499326,-99) , 
9, -1.08, 0, 0, 0.504585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487414,-99) , 
2, -0.112425, 0, 0, 0.499738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475985,-99) , 
2, 0.214004, 1, 0, 0.498698,-99) , 
10, 1.47358, 1, 0, 0.501153,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00643941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499157,-99) , 
9, 1.94183, 0, 0, 0.501306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486713,-99) , 
1, 0.024057, 1, 0, 0.500874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484709,-99) , 
4, 0.998095, 0, 0, 0.500329,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0101136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483162,-99) , 
5, -0.493893, 1, 0, 0.500019,-99) , 
10, 5.17292, 1, 0, 0.504465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469744,-99) , 
10, 3.50855, 1, 0, 0.499498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468993,-99) , 
8, -2.14286, 0, 0, 0.498324,-99) , 
9, 2.6585, 0, 0, 0.49997,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.00764025);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514749,-99) , 
NN(
0, 
0, 
-1, -0.918378, 0, -1, 0.496551,-99) , 
8, -2.14286, 1, 0, 0.497149,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0150453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484654,-99) , 
10, -1.24337, 1, 0, 0.495834,-99) , 
8, -0.833625, 0, 0, 0.50613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495534,-99) , 
8, 1.57138, 0, 0, 0.496506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473876,-99) , 
4, 0.998572, 0, 0, 0.495638,-99) , 
10, -0.0123701, 1, 0, 0.49727,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0091538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486624,-99) , 
9, 15.7591, 1, 0, 0.502323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48326,-99) , 
1, -0.025069, 0, 0, 0.501784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47936,-99) , 
1, 0.024696, 1, 0, 0.501159,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.00924652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.42485, 1, 1, 0.52194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498891,-99) , 
0, 0.492376, 1, 0, 0.499772,-99) , 
4, 0.999524, 1, 0, 0.502298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485117,-99) , 
3, 9.25366, 1, 0, 0.501501,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00896675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494164,-99) , 
10, 4.06518, 1, 0, 0.500345,-99) , 
8, 1.85702, 0, 0, 0.501164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479447,-99) , 
0, 0.505709, 1, 0, 0.500542,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0074272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498821,-99) , 
5, 0.169228, 0, 0, 0.50092,-99) , 
1, 0.0236587, 0, 0, 0.501588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486539,-99) , 
4, 0.998572, 0, 0, 0.500886,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0156009);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499048,-99) , 
10, 2.917, 1, 0, 0.522422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491659,-99) , 
0, 0.494282, 0, 0, 0.504639,-99) , 
5, -0.108239, 0, 0, 0.507477,-99) , 
NN(
NN(
0, 
0, 
-1, -0.266267, 0, 1, 0.502983,-99) , 
NN(
0, 
0, 
-1, 0.148604, 0, -1, 0.470711,-99) , 
10, 1.87486, 1, 0, 0.499313,-99) , 
9, 0.332609, 0, 0, 0.503121,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0110872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.54956, 0, 1, 0.517175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486731,-99) , 
8, 0.931933, 0, 0, 0.503115,-99) , 
0, 0.499043, 0, 0, 0.508855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490621,-99) , 
5, -0.730379, 0, 0, 0.499831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478715,-99) , 
0, 0.499044, 1, 0, 0.491639,-99) , 
8, -1.05444, 0, 0, 0.497841,-99) , 
8, 0.714255, 0, 0, 0.500495,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.014352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490137,-99) , 
9, 9.31809, 1, 0, 0.501804,-99) , 
6, 0.0237918, 0, 0, 0.503139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487863,-99) , 
5, 0.29274, 0, 0, 0.494906,-99) , 
9, 0.638394, 0, 0, 0.497961,-99) , 
5, -0.0078632, 1, 0, 0.500962,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.015346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496759,-99) , 
6, 0.00226522, 1, 0, 0.500306,-99) , 
6, 0.023785, 0, 0, 0.502336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495305,-99) , 
7, -951.286, 0, 0, 0.500555,-99) , 
NN(
0, 
0, 
-1, -0.98683, 0, -1, 0.488941,-99) , 
10, 0.544752, 1, 0, 0.494888,-99) , 
9, -0.0652356, 0, 0, 0.498792,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0101128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0710704, 0, 1, 0.5085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492472,-99) , 
0, 0.492694, 0, 0, 0.497227,-99) , 
8, -0.428576, 0, 0, 0.504388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496218,-99) , 
3, 9.01875, 0, 0, 0.496975,-99) , 
2, 0.213988, 0, 0, 0.497713,-99) , 
0, 0.495233, 1, 0, 0.499247,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.00603625);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499111,-99) , 
1, 0.00340007, 0, 0, 0.500961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489007,-99) , 
6, 0.0237961, 1, 0, 0.500371,-99) , 
9, 22.147, 0, 0, 0.500846,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0188198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494404,-99) , 
7, -0.427652, 0, 0, 0.512417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477186,-99) , 
0, 0.502852, 1, 0, 0.498743,-99) , 
7, -951.286, 0, 0, 0.504024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470337,-99) , 
8, 1.8979, 1, 0, 0.501963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489977,-99) , 
0, 0.492376, 1, 0, 0.491404,-99) , 
8, 0.42853, 0, 0, 0.495039,-99) , 
5, -0.278405, 1, 0, 0.498379,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.00946038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4923,-99) , 
5, -0.548748, 0, 0, 0.508116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482442,-99) , 
8, 1.28567, 1, 0, 0.505384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488807,-99) , 
2, -0.0727557, 0, 0, 0.498582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476146,-99) , 
4, 0.998571, 0, 0, 0.497616,-99) , 
0, 0.500947, 0, 0, 0.499458,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0116288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498907,-99) , 
5, -0.606587, 1, 0, 0.501785,-99) , 
5, -0.173977, 0, 0, 0.503835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496325,-99) , 
9, 0.481444, 0, 0, 0.498589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470095,-99) , 
10, 2.78872, 1, 0, 0.497339,-99) , 
9, 1.17592, 0, 0, 0.499711,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0128742);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497493,-99) , 
9, -1.58339, 0, 0, 0.502633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489395,-99) , 
9, 0.920234, 0, 0, 0.495998,-99) , 
10, 0.885142, 1, 0, 0.498138,-99) , 
9, 19.4291, 0, 0, 0.498923,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0119622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497834,-99) , 
8, -1.85716, 1, 0, 0.498713,-99) , 
4, 0.998571, 1, 0, 0.50089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482773,-99) , 
2, 0.112246, 1, 0, 0.496347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468459,-99) , 
2, -0.214249, 0, 0, 0.491948,-99) , 
3, 4.81184, 1, 0, 0.499168,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00875605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.71125, 0, 1, 0.503737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487787,-99) , 
8, -0.428355, 0, 0, 0.496832,-99) , 
5, -0.54874, 0, 0, 0.502422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4859,-99) , 
4, 0.997619, 0, 0, 0.501976,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0141552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.232546, 0, 1, 0.516759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486646,-99) , 
5, -0.458689, 0, 0, 0.509726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479573,-99) , 
0, 0.492376, 0, 0, 0.501192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484357,-99) , 
2, -0.00717255, 1, 0, 0.494359,-99) , 
2, 0.00351597, 0, 0, 0.497978,-99) , 
2, -0.0713037, 1, 0, 0.49991,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0131477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496419,-99) , 
10, 3.71486, 1, 0, 0.503453,-99) , 
NN(
0, 
0, 
-1, 2.72194, 1, -1, 0.495383,-99) , 
9, 1.54396, 0, 0, 0.497875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481333,-99) , 
10, 14.4446, 1, 0, 0.497221,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0133403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498708,-99) , 
9, 1.70758, 0, 0, 0.517663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473846,-99) , 
10, 2.57817, 1, 0, 0.500139,-99) , 
9, 1.27763, 0, 0, 0.501836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493767,-99) , 
9, 15.3063, 1, 0, 0.499316,-99) , 
NN(
0, 
0, 
-1, 2.64602, 0, -1, 0.486593,-99) , 
5, -0.582948, 1, 0, 0.493415,-99) , 
10, 3.63488, 1, 0, 0.499421,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0131899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.527318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496295,-99) , 
0, 0.501899, 0, 0, 0.498228,-99) , 
9, 0.199427, 0, 0, 0.501004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495136,-99) , 
8, 1.57171, 0, 0, 0.496618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475122,-99) , 
5, 0.159305, 1, 0, 0.49532,-99) , 
10, 2.25864, 1, 0, 0.498463,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0079069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495558,-99) , 
8, 0.428569, 1, 0, 0.506524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494717,-99) , 
4, 0.999887, 0, 0, 0.498956,-99) , 
0, 0.500947, 0, 0, 0.500738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472109,-99) , 
4, 0.997619, 0, 0, 0.499984,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00792063);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497845,-99) , 
4, 0.999524, 1, 0, 0.498959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478095,-99) , 
8, -2.14286, 0, 0, 0.498298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477064,-99) , 
1, -0.0231904, 0, 0, 0.497656,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00508535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499917,-99) , 
2, -0.20614, 1, 0, 0.500635,-99) , 
3, 9.26585, 0, 0, 0.501854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486446,-99) , 
4, 0.998571, 0, 0, 0.501136,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0149291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999521, 1, 1, 0.520621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477189,-99) , 
5, -0.191546, 0, 0, 0.495894,-99) , 
3, 4.92199, 1, 0, 0.510488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491058,-99) , 
10, 7.46955, 1, 0, 0.50646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492243,-99) , 
0, 0.497138, 0, 0, 0.497109,-99) , 
8, 0.428543, 0, 0, 0.500167,-99) , 
2, -0.0713411, 1, 0, 0.501869,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00871794);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498416,-99) , 
9, 2.13228, 0, 0, 0.500957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482514,-99) , 
6, 0.0238055, 1, 0, 0.500053,-99) , 
9, 22.2281, 0, 0, 0.500534,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0193128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.35301, 1, 1, 0.512511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474794,-99) , 
10, 0.583722, 1, 0, 0.498043,-99) , 
9, -1.05751, 0, 0, 0.503578,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0234283, 0, 1, 0.517663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488545,-99) , 
9, 2.05619, 0, 0, 0.496113,-99) , 
6, 0.0237961, 0, 0, 0.498026,-99) , 
5, -0.0071152, 0, 0, 0.50036,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00814826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.47114, 1, 1, 0.523492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498954,-99) , 
0, 0.493328, 1, 0, 0.500165,-99) , 
4, 0.999048, 1, 0, 0.50177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483304,-99) , 
3, 9.46687, 1, 0, 0.500972,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0102386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4975,-99) , 
10, 4.31879, 1, 0, 0.502108,-99) , 
0, 0.494009, 1, 0, 0.502651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486313,-99) , 
8, -0.605887, 0, 0, 0.499124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48378,-99) , 
8, 0.142389, 1, 0, 0.492553,-99) , 
0, 0.493328, 0, 0, 0.501469,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0155289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484049,-99) , 
8, -1.57145, 0, 0, 0.504418,-99) , 
NN(
0, 
0, 
-1, -0.488954, 1, -1, 0.495272,-99) , 
10, 3.84553, 1, 0, 0.501678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471741,-99) , 
7, -951.286, 1, 0, 0.489383,-99) , 
5, 0.533197, 1, 0, 0.500598,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00631872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.21784, 1, 1, 0.507554,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.498779,-99) , 
10, 0.286872, 1, 0, 0.500572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475731,-99) , 
1, -0.02362, 0, 0, 0.499837,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00638272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48621,-99) , 
8, -1.65306, 0, 0, 0.50044,-99) , 
8, -2.14286, 1, 0, 0.501244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471992,-99) , 
4, 0.997619, 0, 0, 0.500458,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0134903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.09483, 1, 1, 0.50684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471332,-99) , 
8, -1.85715, 0, 0, 0.49841,-99) , 
9, 2.05153, 0, 0, 0.501716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492272,-99) , 
9, -2.11517, 0, 0, 0.500539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459737,-99) , 
9, -0.981957, 0, 0, 0.484934,-99) , 
10, 0.700529, 1, 0, 0.494678,-99) , 
5, 0.263064, 1, 0, 0.500076,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0074469);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493685,-99) , 
0, 0.494961, 0, 0, 0.499662,-99) , 
0, 0.504757, 0, 0, 0.500349,-99) , 
8, -2.14286, 1, 0, 0.501197,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.00864348);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48488,-99) , 
8, 1.85702, 1, 0, 0.501413,-99) , 
NN(
0, 
0, 
-1, 2.60822, 0, -1, 0.492098,-99) , 
5, -0.458004, 0, 0, 0.499453,-99) , 
9, 22.0979, 0, 0, 0.500117,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0073527);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516625,-99) , 
NN(
0, 
0, 
-1, 0.0240987, 1, -1, 0.49677,-99) , 
8, -2.14285, 1, 0, 0.497432,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0177424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489285,-99) , 
7, 0.145597, 0, 0, 0.509026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49504,-99) , 
5, -0.782812, 1, 0, 0.499584,-99) , 
7, -951.286, 0, 0, 0.503403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494016,-99) , 
9, 2.18027, 0, 0, 0.495959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474233,-99) , 
10, 4.22496, 1, 0, 0.494994,-99) , 
9, 4.11946, 0, 0, 0.496821,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00955562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491891,-99) , 
8, -2.23813, 0, 0, 0.516388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496718,-99) , 
7, -951.286, 1, 0, 0.500434,-99) , 
8, -1.85716, 1, 0, 0.501336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483863,-99) , 
2, 0.214284, 1, 0, 0.500474,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0069081);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498396,-99) , 
10, -0.77799, 1, 0, 0.499278,-99) , 
NN(
0, 
0, 
-1, 0.360721, 0, -1, 0.488768,-99) , 
4, 0.999048, 0, 0, 0.498538,-99) , 
9, 22.0484, 0, 0, 0.499248,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0135832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495187,-99) , 
8, -0.14344, 1, 0, 0.49915,-99) , 
7, -951.286, 0, 0, 0.505067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495602,-99) , 
6, 0.00791618, 0, 0, 0.498807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469025,-99) , 
6, 0.0237488, 1, 0, 0.497829,-99) , 
9, 5.76606, 0, 0, 0.499115,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0155673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.5768, 0, 1, 0.51281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495139,-99) , 
9, 0.288931, 0, 0, 0.499904,-99) , 
10, 0.813369, 1, 0, 0.506868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494674,-99) , 
8, -0.686644, 0, 0, 0.501539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485107,-99) , 
8, 1.85723, 1, 0, 0.500269,-99) , 
10, 2.22551, 1, 0, 0.503878,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0126167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490701,-99) , 
8, -1.97961, 0, 0, 0.502057,-99) , 
9, 0.499736, 0, 0, 0.512316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494988,-99) , 
10, 2.92522, 1, 0, 0.500429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476055,-99) , 
8, -1.35376, 0, 0, 0.499509,-99) , 
8, -1.57144, 1, 0, 0.500673,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00791564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.5029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47325,-99) , 
1, -0.0257758, 0, 0, 0.502111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481564,-99) , 
1, 0.024057, 1, 0, 0.501527,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0132763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.509256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49577,-99) , 
0, 0.496185, 1, 0, 0.498628,-99) , 
5, 0.440979, 0, 0, 0.500011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487248,-99) , 
2, 0.20428, 1, 0, 0.497096,-99) , 
NN(
0, 
0, 
-1, 0.100623, 1, -1, 0.482008,-99) , 
2, 0.139495, 0, 0, 0.490614,-99) , 
2, 0.0714698, 1, 0, 0.498594,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00996634);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514739,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.506126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496707,-99) , 
10, -1.00554, 1, 0, 0.497916,-99) , 
9, 6.63903, 0, 0, 0.499226,-99) , 
0, 0.504757, 0, 0, 0.500022,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.00616139);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519115,-99) , 
NN(
0, 
0, 
-1, 1.40227, 1, -1, 0.498532,-99) , 
8, 1.77548, 0, 0, 0.499591,-99) , 
8, -2.14285, 1, 0, 0.50039,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.00812743);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.82209, 0, 1, 0.503397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467914,-99) , 
0, 0.499043, 1, 0, 0.487677,-99) , 
4, 0.999048, 0, 0, 0.502326,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.00708642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496853,-99) , 
10, 2.42561, 1, 0, 0.4998,-99) , 
8, -2.14287, 1, 0, 0.500308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476607,-99) , 
4, 0.997619, 0, 0, 0.499677,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0056733);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480332,-99) , 
1, -0.0234148, 0, 0, 0.500259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478792,-99) , 
10, -1.01841, 0, 0, 0.499457,-99) , 
8, -2.14283, 1, 0, 0.500165,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00862746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97948, 1, 1, 0.513414,-99) , 
NN(
0, 
0, 
-1, 0.616593, 1, -1, 0.498616,-99) , 
8, 1.57132, 0, 0, 0.499673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491506,-99) , 
7, -951.286, 0, 0, 0.498138,-99) , 
NN(
0, 
0, 
-1, 0.871585, 1, -1, 0.47626,-99) , 
5, -0.00884265, 1, 0, 0.48959,-99) , 
0, 0.5019, 1, 0, 0.497986,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.00723343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485829,-99) , 
3, 5.34333, 1, 0, 0.510891,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.505178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478056,-99) , 
5, 0.61892, 1, 0, 0.499365,-99) , 
2, 0.0307206, 0, 0, 0.500841,-99) , 
2, -0.214155, 1, 0, 0.501393,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00894793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493149,-99) , 
5, 0.353783, 1, 0, 0.50038,-99) , 
NN(
0, 
0, 
-1, 0.188302, 1, -1, 0.488215,-99) , 
8, -1.16327, 0, 0, 0.498786,-99) , 
8, -2.14285, 1, 0, 0.499331,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0116766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.521497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478921,-99) , 
8, -2.2517, 0, 0, 0.509528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498616,-99) , 
9, 0.699449, 0, 0, 0.501754,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.495726,-99) , 
10, 2.88019, 1, 0, 0.499441,-99) , 
8, -1.57144, 1, 0, 0.500363,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00380411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499796,-99) , 
3, 8.84894, 0, 0, 0.500566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491387,-99) , 
2, -0.214155, 0, 0, 0.500091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482196,-99) , 
0, 0.490471, 0, 0, 0.499493,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.00658015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.94209, 0, 1, 0.50199,-99) , 
NN(
0, 
0, 
-1, -2.17388, 0, -1, 0.487497,-99) , 
5, 0.533688, 1, 0, 0.500955,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.489204,-99) , 
4, 0.999048, 0, 0, 0.500154,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.004085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.501108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487268,-99) , 
0, 0.490471, 0, 0, 0.500639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480379,-99) , 
1, -0.0234075, 0, 0, 0.500034,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0144491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.6887, 1, 1, 0.512523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496482,-99) , 
5, -0.637808, 1, 0, 0.501614,-99) , 
8, 0.42889, 1, 0, 0.508229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496539,-99) , 
9, 2.17878, 0, 0, 0.498841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470108,-99) , 
10, 4.17207, 1, 0, 0.497475,-99) , 
9, 4.11946, 0, 0, 0.499817,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0181268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4936,-99) , 
6, 0.00680133, 1, 0, 0.502657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481027,-99) , 
6, 0.0238055, 1, 0, 0.50136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481129,-99) , 
10, 1.99194, 1, 0, 0.504674,-99) , 
NN(
0, 
0, 
-1, -2.02042, 0, -1, 0.491775,-99) , 
7, -951.286, 0, 0, 0.496404,-99) , 
8, -0.428591, 0, 0, 0.499526,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0115248);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497769,-99) , 
5, -0.36804, 0, 0, 0.503248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480293,-99) , 
4, 0.998095, 0, 0, 0.502477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470137,-99) , 
1, 0.0248352, 1, 0, 0.501617,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.00633363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499145,-99) , 
2, 0.275012, 0, 0, 0.500125,-99) , 
2, -0.21456, 1, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485356,-99) , 
3, 9.36646, 1, 0, 0.500333,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0179855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.332538, 0, 1, 0.516168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473137,-99) , 
10, 2.66457, 0, 0, 0.498621,-99) , 
9, -0.0594541, 1, 0, 0.50961,-99) , 
NN(
NN(
0, 
0, 
-1, 3.61914, 1, 1, 0.505066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494258,-99) , 
10, 0.530349, 1, 0, 0.499074,-99) , 
9, 1.42184, 0, 0, 0.501307,-99) , 
8, -1.00001, 1, 0, 0.502975,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0172597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493767,-99) , 
8, 0.430118, 1, 0, 0.501405,-99) , 
10, 4.9361, 1, 0, 0.506078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496203,-99) , 
9, -0.0236047, 0, 0, 0.499117,-99) , 
NN(
0, 
0, 
-1, 0.621374, 0, -1, 0.483564,-99) , 
10, 2.30242, 1, 0, 0.495645,-99) , 
9, 2.41438, 0, 0, 0.498579,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.00929543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4661, 1, 1, 0.515161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498386,-99) , 
8, 0.714207, 0, 0, 0.500266,-99) , 
4, 0.999524, 1, 0, 0.501952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484016,-99) , 
3, 9.47676, 1, 0, 0.501176,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.00936106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485496,-99) , 
5, 0.082384, 0, 0, 0.514553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499506,-99) , 
0, 0.498771, 1, 0, 0.502347,-99) , 
NN(
0, 
0, 
-1, 0.490517, 0, -1, 0.495598,-99) , 
0, 0.495233, 0, 0, 0.500838,-99) , 
2, -0.214181, 1, 0, 0.501598,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0171463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495405,-99) , 
3, 4.88387, 1, 0, 0.505551,-99) , 
0, 0.5019, 0, 0, 0.510131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481476,-99) , 
2, -0.227761, 0, 0, 0.505427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491135,-99) , 
9, -1.1922, 0, 0, 0.497914,-99) , 
5, 0.0794237, 1, 0, 0.502797,-99) , 
2, 0.0715316, 0, 0, 0.503925,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0116695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499054,-99) , 
3, 5.0699, 1, 0, 0.518231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497877,-99) , 
0, 0.499995, 0, 0, 0.506594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491856,-99) , 
0, 0.499995, 1, 0, 0.498754,-99) , 
2, 0.030788, 0, 0, 0.500762,-99) , 
2, -0.21404, 1, 0, 0.50174,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00748388);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518905,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.5022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478918,-99) , 
4, 0.998571, 0, 0, 0.501312,-99) , 
5, 0.624459, 0, 0, 0.502216,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0084505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48919,-99) , 
3, 5.12913, 1, 0, 0.513936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498631,-99) , 
0, 0.499995, 0, 0, 0.500473,-99) , 
3, 9.13542, 0, 0, 0.501168,-99) , 
2, -0.214151, 1, 0, 0.501881,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.004822);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.700695, 1, 1, 0.514266,-99) , 
NN(
NN(
0, 
0, 
-1, 0.21449, 0, 1, 0.501132,-99) , 
NN(
0, 
0, 
-1, 0.237294, 1, -1, 0.487924,-99) , 
4, 0.999048, 0, 0, 0.500368,-99) , 
5, 0.623383, 0, 0, 0.501087,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0071384);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.70122, 0, 1, 0.516047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499374,-99) , 
3, 10.2347, 0, 0, 0.500485,-99) , 
NN(
0, 
0, 
-1, 0.0831908, 1, -1, 0.486392,-99) , 
4, 0.999524, 0, 0, 0.499087,-99) , 
5, 0.623896, 0, 0, 0.499977,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.00969513);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517661,-99) , 
NN(
NN(
0, 
0, 
-1, -0.28454, 1, 1, 0.514402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496695,-99) , 
10, 3.03099, 1, 0, 0.501334,-99) , 
8, -1.85714, 1, 0, 0.502078,-99) , 
4, 0.998095, 1, 0, 0.502623,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0111987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0189306, 0, 1, 0.512024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492498,-99) , 
2, 0.00384658, 0, 0, 0.501428,-99) , 
2, -0.0709487, 1, 0, 0.503364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486406,-99) , 
8, 1.57105, 1, 0, 0.500301,-99) , 
NN(
0, 
0, 
-1, -0.190008, 1, -1, 0.493888,-99) , 
0, 0.49741, 1, 0, 0.498493,-99) , 
0, 0.499043, 0, 0, 0.500478,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00640806);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496141,-99) , 
1, 0.00177298, 0, 0, 0.507791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490362,-99) , 
8, -1.13607, 0, 0, 0.500261,-99) , 
8, -1.57144, 1, 0, 0.500944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485448,-99) , 
1, -0.0231228, 0, 0, 0.500473,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0149345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49712,-99) , 
7, -951.286, 1, 0, 0.50718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46596,-99) , 
10, 2.48352, 1, 0, 0.499244,-99) , 
9, 1.17592, 0, 0, 0.502188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489799,-99) , 
9, -2.04707, 0, 0, 0.499851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488491,-99) , 
0, 0.492104, 1, 0, 0.491733,-99) , 
5, 0.0755165, 0, 0, 0.494791,-99) , 
0, 0.496185, 0, 0, 0.499918,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0174177);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497245,-99) , 
10, 3.34325, 1, 0, 0.505437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474768,-99) , 
10, 2.33722, 1, 0, 0.498547,-99) , 
9, 0.990569, 0, 0, 0.501614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491886,-99) , 
9, 2.13391, 0, 0, 0.493849,-99) , 
10, 5.45106, 0, 0, 0.495797,-99) , 
8, -0.142879, 0, 0, 0.498875,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00689971);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493906,-99) , 
4, 0.999909, 0, 0, 0.499406,-99) , 
4, 0.998095, 1, 0, 0.499793,-99) , 
8, 1.85702, 0, 0, 0.500359,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00709934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.107498, 0, 1, 0.510589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492787,-99) , 
5, -0.460917, 0, 0, 0.506383,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.497687,-99) , 
2, -0.0715086, 1, 0, 0.499125,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0109588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493506,-99) , 
0, 0.491424, 0, 0, 0.502604,-99) , 
2, 0.0715636, 0, 0, 0.505961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494851,-99) , 
5, -0.278002, 1, 0, 0.497705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483241,-99) , 
2, -0.214036, 0, 0, 0.496989,-99) , 
0, 0.494281, 1, 0, 0.498485,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0188427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485862,-99) , 
7, -1.20392, 0, 0, 0.50867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480501,-99) , 
5, -0.281064, 1, 0, 0.494787,-99) , 
7, 0.1429, 1, 0, 0.501851,-99) , 
NN(
0, 
0, 
-1, -2.14287, 0, -1, 0.495292,-99) , 
7, -951.286, 0, 0, 0.497814,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0148023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49834,-99) , 
9, -2.04241, 1, 0, 0.515089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49718,-99) , 
9, 0.859957, 0, 0, 0.500187,-99) , 
8, -1.57144, 1, 0, 0.501487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481145,-99) , 
6, 0.00679476, 1, 0, 0.490949,-99) , 
6, 0.0237823, 0, 0, 0.495007,-99) , 
5, -0.368102, 0, 0, 0.499521,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0181439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489124,-99) , 
7, -951.286, 1, 0, 0.50973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456448,-99) , 
10, 2.63717, 1, 0, 0.500343,-99) , 
9, 0.973803, 0, 0, 0.502339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493451,-99) , 
8, 0.150056, 0, 0, 0.504439,-99) , 
NN(
0, 
0, 
-1, 9.57983, 0, -1, 0.484569,-99) , 
7, -951.286, 0, 0, 0.492347,-99) , 
5, -0.457916, 0, 0, 0.499921,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0107416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.00611, 1, 1, 0.514143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48497,-99) , 
2, -0.207362, 0, 0, 0.495661,-99) , 
3, 4.86435, 1, 0, 0.506422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489191,-99) , 
0, 0.493419, 0, 0, 0.500184,-99) , 
NN(
0, 
0, 
-1, 0.00352206, 0, -1, 0.48649,-99) , 
0, 0.502852, 1, 0, 0.498734,-99) , 
2, -0.0713115, 1, 0, 0.500006,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.00690238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.47369, 0, 1, 0.502779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484999,-99) , 
1, -0.0227961, 0, 0, 0.502232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486441,-99) , 
0, 0.505709, 1, 0, 0.501782,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.011354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.071409, 1, 1, 0.505747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497332,-99) , 
0, 0.491424, 1, 0, 0.498156,-99) , 
0, 0.500947, 0, 0, 0.499961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449401,-99) , 
9, 0.718884, 0, 0, 0.481238,-99) , 
7, -951.286, 0, 0, 0.491431,-99) , 
8, 1.28565, 1, 0, 0.499021,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.00955848);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497564,-99) , 
6, 0.00366815, 0, 0, 0.501772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476283,-99) , 
1, -0.0256806, 0, 0, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477793,-99) , 
1, 0.0241607, 1, 0, 0.500431,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0121343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504219,-99) , 
NN(
0, 
0, 
-1, 3.57717, 1, -1, 0.491191,-99) , 
5, -0.548809, 0, 0, 0.501798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473638,-99) , 
3, 9.19645, 1, 0, 0.500482,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0183568);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475954,-99) , 
7, -951.286, 1, 0, 0.512897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475631,-99) , 
9, -2.49307, 0, 0, 0.495077,-99) , 
10, -0.633116, 1, 0, 0.504439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497064,-99) , 
8, 0.142622, 1, 0, 0.512787,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.494496,-99) , 
6, 0.023785, 0, 0, 0.495721,-99) , 
10, -0.0509712, 1, 0, 0.497036,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.00599531);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499092,-99) , 
4, 0.998572, 1, 0, 0.500318,-99) , 
3, 9.46687, 0, 0, 0.50094,-99) , 
8, 1.85703, 0, 0, 0.501411,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.00727397);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479971,-99) , 
1, -0.0257629, 0, 0, 0.501344,-99) , 
NN(
0, 
0, 
-1, -0.000367557, 1, -1, 0.484952,-99) , 
8, -1.85715, 0, 0, 0.500454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479365,-99) , 
1, 0.0240456, 1, 0, 0.499852,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0107903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.66615, 1, 1, 0.502973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486253,-99) , 
7, -951.286, 1, 0, 0.49706,-99) , 
9, -0.613232, 0, 0, 0.501002,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482708,-99) , 
5, -0.54928, 0, 0, 0.49831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470839,-99) , 
8, -2.2381, 0, 0, 0.495744,-99) , 
8, -0.714302, 0, 0, 0.499544,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0106986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496113,-99) , 
4, 0.999955, 1, 0, 0.498361,-99) , 
3, 9.27699, 0, 0, 0.499557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459371,-99) , 
10, 1.16194, 1, 0, 0.487088,-99) , 
4, 0.999048, 0, 0, 0.498709,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00847159);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497311,-99) , 
4, 0.999973, 0, 0, 0.500251,-99) , 
NN(
0, 
0, 
-1, 0.998742, 0, -1, 0.480578,-99) , 
4, 0.999433, 0, 0, 0.498782,-99) , 
4, 0.997619, 1, 0, 0.499233,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00828608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498016,-99) , 
8, 1.85708, 0, 0, 0.498883,-99) , 
4, 0.998571, 1, 0, 0.499989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485139,-99) , 
3, 9.27699, 1, 0, 0.499289,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00593896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498929,-99) , 
10, 0.236272, 1, 0, 0.500106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482485,-99) , 
5, 0.624459, 1, 0, 0.499326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483081,-99) , 
4, 0.997619, 0, 0, 0.498887,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0100767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496765,-99) , 
3, 1.90423, 1, 0, 0.513445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497816,-99) , 
8, -2.14286, 1, 0, 0.498638,-99) , 
4, 0.999524, 1, 0, 0.500305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480866,-99) , 
3, 9.48998, 1, 0, 0.499469,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.00565055);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495832,-99) , 
10, 1.39828, 1, 0, 0.512574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499865,-99) , 
4, 0.998572, 1, 0, 0.500759,-99) , 
0, 0.492376, 1, 0, 0.501725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488033,-99) , 
3, 9.17924, 1, 0, 0.501066,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0136528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.401214, 0, 1, 0.511969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484156,-99) , 
7, -0.426846, 0, 0, 0.500484,-99) , 
7, -951.286, 1, 0, 0.507243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473213,-99) , 
10, 2.20683, 1, 0, 0.497402,-99) , 
9, 0.828672, 0, 0, 0.499005,-99) , 
9, 1.17592, 0, 0, 0.502034,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.00987952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498839,-99) , 
8, -1.00001, 1, 0, 0.500499,-99) , 
3, 9.26084, 0, 0, 0.501963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485728,-99) , 
8, -0.42882, 1, 0, 0.493495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478633,-99) , 
0, 0.500947, 1, 0, 0.489365,-99) , 
4, 0.999524, 0, 0, 0.500536,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_2_4_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_2_4_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_2_4_noP *ReadBDT_maker_LHC19c2b_2_4_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_2_4_noP(theInpVar);
  }
}
