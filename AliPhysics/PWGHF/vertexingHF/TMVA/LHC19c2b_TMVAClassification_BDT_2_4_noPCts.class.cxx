#include "LHC19c2b_TMVAClassification_BDT_2_4_noPCts.class.h"

double ReadBDT_LHC19c2b_2_4_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_2_4_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.492642708534505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.761508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427897,-99) , 
4, 0.999524, 0, 0, 0.724525,-99) , 
NN(
NN(
0, 
0, 
-1, 9.50775, 0, 1, 0.729083,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.28103,-99) , 
8, 3.38191, 0, 0, 0.373539,-99) , 
6, -951.286, 0, 0, 0.501598,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.384781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.707208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406331,-99) , 
4, 0.999048, 0, 0, 0.685338,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00013, 1, 1, 0.655915,-99) , 
NN(
0, 
0, 
-1, -1.57146, 0, -1, 0.319416,-99) , 
9, 3.71406, 0, 0, 0.401561,-99) , 
6, -951.286, 0, 0, 0.504681,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.26823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00566571, 0, 1, 0.67301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356818,-99) , 
5, 0.0237962, 1, 0, 0.65001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201457,-99) , 
4, 0.999524, 0, 0, 0.476916,-99) , 
NN(
0, 
0, 
-1, -2.11567, 0, -1, 0.167107,-99) , 
7, -1.57144, 0, 0, 0.42855,-99) , 
6, -951.286, 0, 0, 0.508641,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.269204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.63947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433609,-99) , 
4, 0.999048, 0, 0, 0.6238,-99) , 
NN(
NN(
0, 
0, 
-1, 8.22468, 0, 1, 0.564861,-99) , 
NN(
0, 
0, 
-1, -1.85711, 0, -1, 0.340596,-99) , 
8, 1.2855, 0, 0, 0.410215,-99) , 
6, -951.286, 0, 0, 0.487105,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.208913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457854,-99) , 
5, 0.00680085, 0, 0, 0.521571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.108189,-99) , 
5, 0.047611, 1, 0, 0.507857,-99) , 
NN(
0, 
0, 
-1, -2.29255, 0, -1, 0.199594,-99) , 
7, -1.85715, 0, 0, 0.482955,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.181179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00339659, 0, 1, 0.624277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348842,-99) , 
5, 0.023778, 1, 0, 0.604146,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.431299,-99) , 
6, -951.286, 0, 0, 0.49411,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.191445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.125228,-99) , 
5, 0.047611, 1, 0, 0.54341,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.241864,-99) , 
4, 0.998571, 0, 0, 0.524169,-99) , 
NN(
0, 
0, 
-1, -2.34694, 0, -1, 0.221293,-99) , 
7, -1.85714, 0, 0, 0.500908,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.177442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4495,-99) , 
4, 0.999955, 0, 0, 0.527034,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.330278,-99) , 
4, 0.999524, 0, 0, 0.500899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.179314,-99) , 
7, -2.14285, 0, 0, 0.484936,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.170626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441443,-99) , 
5, 0.00453034, 0, 0, 0.507801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.121109,-99) , 
5, 0.0475698, 1, 0, 0.496039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.189636,-99) , 
7, -2.14286, 0, 0, 0.481071,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.147625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0034006, 0, 1, 0.580256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366651,-99) , 
5, 0.0238056, 1, 0, 0.564816,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.43293,-99) , 
6, -951.286, 0, 0, 0.481047,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.120279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237236,-99) , 
4, 0.997619, 0, 0, 0.5164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.143478,-99) , 
5, 0.0475647, 1, 0, 0.505668,-99) , 
NN(
0, 
0, 
-1, -2.45577, 0, -1, 0.271043,-99) , 
7, -1.85714, 0, 0, 0.488591,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0844992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.235801,-99) , 
7, 2.02028, 1, 0, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.155651,-99) , 
5, 0.0475953, 1, 0, 0.490328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215371,-99) , 
7, -2.14287, 0, 0, 0.477487,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.122275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277224,-99) , 
4, 0.998095, 0, 0, 0.508207,-99) , 
NN(
0, 
0, 
-1, 0.817558, 0, -1, 0.278974,-99) , 
7, 1.77547, 1, 0, 0.493006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526713,-99) , 
NN(
0, 
0, 
-1, -2.34694, 0, -1, 0.285382,-99) , 
6, -951.286, 0, 0, 0.343603,-99) , 
7, -1.28573, 0, 0, 0.469784,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.141858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 1, 1, 0.569855,-99) , 
NN(
0, 
0, 
-1, -1.28578, 0, -1, 0.439362,-99) , 
8, 3.44636, 0, 0, 0.467665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.161483,-99) , 
5, 0.0475953, 1, 0, 0.458987,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.086627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363683,-99) , 
4, 0.999524, 0, 0, 0.488734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252391,-99) , 
7, -2.14285, 0, 0, 0.478021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.153093,-99) , 
5, 0.047611, 1, 0, 0.469193,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0730861);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.0475835, 1, -1, 0.463522,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0538432);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.0475922, 1, -1, 0.473104,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.097326);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327996,-99) , 
7, 1.69378, 1, 0, 0.504716,-99) , 
NN(
0, 
0, 
-1, -0.0634514, 1, -1, 0.356878,-99) , 
7, -1.57146, 0, 0, 0.48901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.180259,-99) , 
5, 0.0475922, 1, 0, 0.480768,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0567263);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291518,-99) , 
7, -2.14285, 0, 0, 0.491182,-99) , 
NN(
0, 
0, 
-1, 0.00453331, 0, -1, 0.303973,-99) , 
3, 9.34219, 1, 0, 0.480346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.169771,-99) , 
5, 0.047611, 1, 0, 0.472355,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.145302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 1, 1, 0.549045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429205,-99) , 
8, -2.35625, 1, 0, 0.449639,-99) , 
5, 0.00906432, 0, 0, 0.474116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.181016,-99) , 
5, 0.0475953, 1, 0, 0.466517,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.120827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464322,-99) , 
4, 0.999977, 0, 0, 0.504351,-99) , 
NN(
0, 
0, 
-1, -2.34694, 0, -1, 0.395118,-99) , 
7, -1.28573, 0, 0, 0.487766,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.363472,-99) , 
4, 0.999524, 0, 0, 0.471713,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0537507);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311263,-99) , 
7, -2.14284, 0, 0, 0.493547,-99) , 
NN(
0, 
0, 
-1, 1.52213, 0, -1, 0.309064,-99) , 
3, 9.49987, 1, 0, 0.483531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.192443,-99) , 
5, 0.0475952, 1, 0, 0.476076,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0564949);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.997143, 0, -1, 0.471783,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0976141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492126,-99) , 
0, 0.499995, 1, 0, 0.532785,-99) , 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.457253,-99) , 
6, -951.286, 0, 0, 0.48506,-99) , 
NN(
0, 
0, 
-1, -0.143207, 0, -1, 0.317708,-99) , 
3, 9.50217, 1, 0, 0.475854,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.104478);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303072,-99) , 
7, 2.04758, 1, 0, 0.50922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375843,-99) , 
8, -2.80798, 1, 0, 0.420729,-99) , 
7, -1.00001, 0, 0, 0.490413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241891,-99) , 
4, 0.996667, 0, 0, 0.483853,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0829322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353237,-99) , 
7, -2.14286, 0, 0, 0.503703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385931,-99) , 
8, -1.65909, 1, 0, 0.426488,-99) , 
4, 0.999887, 0, 0, 0.484052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276109,-99) , 
4, 0.997619, 0, 0, 0.476742,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.069295);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42466,-99) , 
5, 0.00226632, 0, 0, 0.483857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271539,-99) , 
4, 0.997143, 0, 0, 0.477563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2043,-99) , 
5, 0.0475922, 1, 0, 0.470553,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.138641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437883,-99) , 
4, 0.998571, 0, 0, 0.541355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415779,-99) , 
8, 2.94876, 0, 0, 0.450992,-99) , 
8, -1.44473, 1, 0, 0.474049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.212241,-99) , 
5, 0.047611, 1, 0, 0.467362,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.065079);
  fForest.push_back( 
NN(
0, 
0, 
-1, 9.46687, 1, -1, 0.467506,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0455381);
  fForest.push_back( 
NN(
0, 
0, 
-1, 9.4997, 1, -1, 0.477247,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0453249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328147,-99) , 
7, -2.26531, 0, 0, 0.498074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310059,-99) , 
7, 2.14279, 1, 0, 0.492962,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.339062,-99) , 
3, 9.37635, 1, 0, 0.484391,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.087488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.1362, 1, 1, 0.542943,-99) , 
NN(
0, 
0, 
-1, -1.2857, 0, -1, 0.465459,-99) , 
8, -1.38003, 1, 0, 0.485385,-99) , 
NN(
0, 
0, 
-1, -0.14279, 0, -1, 0.33208,-99) , 
3, 9.48998, 1, 0, 0.477287,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0449404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337818,-99) , 
7, 2.02035, 1, 0, 0.498241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351384,-99) , 
7, -2.14285, 0, 0, 0.49239,-99) , 
NN(
0, 
0, 
-1, -0.143054, 0, -1, 0.348625,-99) , 
3, 9.37635, 1, 0, 0.484619,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0558885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373916,-99) , 
7, -2.14285, 0, 0, 0.499832,-99) , 
NN(
0, 
0, 
-1, 4.66237, 1, -1, 0.427693,-99) , 
4, 0.999841, 0, 0, 0.484341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294397,-99) , 
4, 0.996667, 0, 0, 0.479477,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0763078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36049,-99) , 
5, 0.0237961, 1, 0, 0.499367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376253,-99) , 
6, -951.286, 0, 0, 0.420596,-99) , 
7, -1.04087, 0, 0, 0.483319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289883,-99) , 
7, 2.14275, 1, 0, 0.478236,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0765732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443725,-99) , 
5, 0.00340057, 0, 0, 0.482721,-99) , 
NN(
0, 
0, 
-1, 5.90781, 0, -1, 0.376374,-99) , 
5, 0.0238055, 1, 0, 0.476148,-99) , 
NN(
0, 
0, 
-1, -0.143054, 0, -1, 0.34649,-99) , 
3, 9.47659, 1, 0, 0.46926,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0592266);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.997143, 0, -1, 0.470421,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0471678);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.997143, 0, -1, 0.476434,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0357507);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390652,-99) , 
5, 0.0237976, 1, 0, 0.494297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362417,-99) , 
7, -2.14286, 0, 0, 0.489208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312274,-99) , 
4, 0.997143, 0, 0, 0.484176,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0403613);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14281, 1, -1, 0.47983,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0905719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.08399, 1, 1, 0.528052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443078,-99) , 
6, -951.286, 0, 0, 0.472906,-99) , 
8, -0.904518, 1, 0, 0.491315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360907,-99) , 
3, 9.50668, 1, 0, 0.484644,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.038095);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41039,-99) , 
7, 1.53057, 1, 0, 0.49534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367968,-99) , 
7, -2.14283, 0, 0, 0.490506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317223,-99) , 
4, 0.997143, 0, 0, 0.485642,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0644541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453304,-99) , 
7, -0.918397, 0, 0, 0.496441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384474,-99) , 
7, 1.85707, 1, 0, 0.491443,-99) , 
NN(
0, 
0, 
-1, -1.28572, 0, -1, 0.424642,-99) , 
0, 0.5019, 1, 0, 0.479878,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0721161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478254,-99) , 
4, 0.999994, 0, 0, 0.495191,-99) , 
NN(
0, 
0, 
-1, 4.61738, 1, -1, 0.443951,-99) , 
4, 0.999864, 0, 0, 0.483337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326873,-99) , 
4, 0.997143, 0, 0, 0.478908,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0666887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480425,-99) , 
5, 0.00906569, 0, 0, 0.494124,-99) , 
NN(
0, 
0, 
-1, 4.434, 0, -1, 0.402929,-99) , 
5, 0.0237976, 1, 0, 0.488511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319809,-99) , 
4, 0.997143, 0, 0, 0.483837,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0551584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46555,-99) , 
7, -0.714296, 0, 0, 0.499512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312458,-99) , 
9, 5.94348, 0, 0, 0.411535,-99) , 
5, 0.0237823, 1, 0, 0.49412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340797,-99) , 
4, 0.997143, 0, 0, 0.489821,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0649297);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47677,-99) , 
0, 0.499043, 1, 0, 0.503103,-99) , 
NN(
0, 
0, 
-1, 4.63574, 1, -1, 0.448662,-99) , 
4, 0.999864, 0, 0, 0.490676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3383,-99) , 
4, 0.997143, 0, 0, 0.486437,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0560899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.16363, 1, 1, 0.559236,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.48308,-99) , 
9, -0.105682, 1, 0, 0.493843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376067,-99) , 
3, 9.47659, 1, 0, 0.48788,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0413241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.03912, 1, 1, 0.546784,-99) , 
NN(
0, 
0, 
-1, -1.85716, 0, -1, 0.487363,-99) , 
9, -0.131994, 1, 0, 0.495361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359646,-99) , 
4, 0.997143, 0, 0, 0.491594,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0331637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.561647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364436,-99) , 
5, 0.0237918, 1, 0, 0.494874,-99) , 
9, 10.1615, 0, 0, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38991,-99) , 
3, 9.46687, 1, 0, 0.494691,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0341451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40785,-99) , 
3, 9.46687, 1, 0, 0.49976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337418,-99) , 
7, -2.2653, 0, 0, 0.49499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350374,-99) , 
7, 2.14281, 1, 0, 0.49123,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0439089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49612,-99) , 
8, 12.6604, 0, 0, 0.503089,-99) , 
NN(
0, 
0, 
-1, 4.44878, 1, -1, 0.457548,-99) , 
4, 0.999887, 0, 0, 0.491727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364176,-99) , 
4, 0.997619, 0, 0, 0.487611,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.032136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42416,-99) , 
5, 0.0237976, 1, 0, 0.499893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369488,-99) , 
7, -2.2653, 0, 0, 0.495936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365788,-99) , 
7, 2.14281, 1, 0, 0.492577,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0730658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999948, 1, 1, 0.521155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438551,-99) , 
8, -0.907412, 1, 0, 0.481324,-99) , 
8, 1.17592, 0, 0, 0.495985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346852,-99) , 
4, 0.997143, 0, 0, 0.491999,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0245849);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14281, 1, -1, 0.48771,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0509891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485353,-99) , 
5, 0.0056679, 0, 0, 0.501356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332127,-99) , 
9, 5.40332, 0, 0, 0.425418,-99) , 
5, 0.0238055, 1, 0, 0.496757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409286,-99) , 
3, 9.46687, 1, 0, 0.49228,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0366688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398674,-99) , 
7, -2.18368, 0, 0, 0.502507,-99) , 
NN(
0, 
0, 
-1, 2.102, 1, -1, 0.447077,-99) , 
7, 1.28568, 1, 0, 0.496305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368643,-99) , 
4, 0.997143, 0, 0, 0.492834,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0449453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489134,-99) , 
8, -2.17199, 1, 0, 0.497114,-99) , 
NN(
0, 
0, 
-1, 5.84247, 0, -1, 0.419733,-99) , 
5, 0.0237977, 1, 0, 0.492366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376318,-99) , 
4, 0.997143, 0, 0, 0.489205,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0475276);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471358,-99) , 
7, -0.714388, 0, 0, 0.500585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333338,-99) , 
8, 6.13291, 0, 0, 0.423045,-99) , 
5, 0.0238055, 1, 0, 0.495901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377458,-99) , 
4, 0.997143, 0, 0, 0.492678,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0405302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451682,-99) , 
5, 0.0011326, 0, 0, 0.50025,-99) , 
NN(
0, 
0, 
-1, 5.71857, 0, -1, 0.428609,-99) , 
5, 0.0237849, 1, 0, 0.495932,-99) , 
NN(
0, 
0, 
-1, -0.142989, 0, -1, 0.407774,-99) , 
3, 9.20043, 1, 0, 0.491231,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0802589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490251,-99) , 
9, 3.60524, 1, 0, 0.500834,-99) , 
7, -0.999249, 1, 0, 0.513389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490905,-99) , 
8, -3.3336, 1, 0, 0.501603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381474,-99) , 
6, -951.286, 0, 0, 0.429942,-99) , 
8, -0.426212, 1, 0, 0.475919,-99) , 
8, 1.30832, 0, 0, 0.488942,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0303933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.3481, 0, 1, 0.505352,-99) , 
NN(
0, 
0, 
-1, 4.71125, 1, -1, 0.457928,-99) , 
4, 0.999819, 0, 0, 0.49675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406775,-99) , 
4, 0.998095, 0, 0, 0.493228,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0725332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487728,-99) , 
9, 2.11919, 1, 0, 0.511537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457158,-99) , 
8, 3.32739, 0, 0, 0.474976,-99) , 
7, -0.387772, 0, 0, 0.496201,-99) , 
NN(
0, 
0, 
-1, 1.01796, 0, -1, 0.42555,-99) , 
7, 1.57139, 1, 0, 0.491153,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0561629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488696,-99) , 
6, -951.286, 1, 0, 0.509778,-99) , 
7, -0.712611, 1, 0, 0.524746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621617,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.478079,-99) , 
9, -1.2414, 1, 0, 0.484517,-99) , 
8, 2.53271, 0, 0, 0.495301,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0366139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0427816, 0, 1, 0.512476,-99) , 
NN(
0, 
0, 
-1, 4.65521, 1, -1, 0.4746,-99) , 
4, 0.999887, 0, 0, 0.503015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401341,-99) , 
4, 0.997619, 0, 0, 0.499835,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0424498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474142,-99) , 
0, 0.500947, 1, 0, 0.503767,-99) , 
NN(
0, 
0, 
-1, 5.9298, 0, -1, 0.43441,-99) , 
5, 0.0238055, 1, 0, 0.499577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39148,-99) , 
4, 0.997143, 0, 0, 0.496754,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0329248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.24182, 1, 1, 0.542197,-99) , 
NN(
0, 
0, 
-1, -1.28571, 0, -1, 0.492081,-99) , 
9, 0.0182157, 1, 0, 0.50001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423831,-99) , 
3, 9.48998, 1, 0, 0.496233,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0213434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.555663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440454,-99) , 
5, 0.0237918, 1, 0, 0.496999,-99) , 
3, 0.580371, 1, 0, 0.500918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429347,-99) , 
3, 9.50281, 1, 0, 0.49733,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0177307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499597,-99) , 
9, -1.09772, 1, 0, 0.502366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393754,-99) , 
7, -2.26531, 0, 0, 0.499151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387418,-99) , 
7, 2.14279, 1, 0, 0.49635,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0613678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439904,-99) , 
5, 0.0237976, 1, 0, 0.506628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412695,-99) , 
7, 1.97955, 1, 0, 0.502841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358443,-99) , 
9, 2.00281, 0, 0, 0.418182,-99) , 
8, -2.6984, 1, 0, 0.457612,-99) , 
7, -1.28573, 0, 0, 0.496421,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.054423);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.541154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477563,-99) , 
8, -1.21807, 1, 0, 0.49151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382738,-99) , 
5, 0.0237918, 1, 0, 0.486983,-99) , 
9, 9.59407, 0, 0, 0.491886,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.053058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469341,-99) , 
7, 1.3673, 1, 0, 0.509671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46713,-99) , 
8, 3.47206, 0, 0, 0.479719,-99) , 
7, -0.428598, 0, 0, 0.49849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407482,-99) , 
4, 0.997143, 0, 0, 0.496047,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0405534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.438771, 1, 1, 0.554867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487318,-99) , 
2, 0.0713444, 0, 0, 0.493542,-99) , 
3, 0.566257, 1, 0, 0.497386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426783,-99) , 
3, 9.48998, 1, 0, 0.493883,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0374324);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493442,-99) , 
4, 0.999994, 0, 0, 0.505329,-99) , 
NN(
0, 
0, 
-1, 4.71125, 1, -1, 0.474932,-99) , 
4, 0.999864, 0, 0, 0.498379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408311,-99) , 
4, 0.997143, 0, 0, 0.49599,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0246969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0736881, 0, 1, 0.506665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376559,-99) , 
3, 4.62779, 1, 0, 0.473329,-99) , 
4, 0.999773, 0, 0, 0.501271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415282,-99) , 
4, 0.997619, 0, 0, 0.498609,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0276259);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459964,-99) , 
5, 0.0237976, 1, 0, 0.502651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444974,-99) , 
2, -0.214102, 0, 0, 0.499687,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.456797,-99) , 
0, 0.502852, 1, 0, 0.494578,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0642414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498084,-99) , 
9, 3.56008, 1, 0, 0.507389,-99) , 
7, -0.999567, 1, 0, 0.517861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496405,-99) , 
8, -3.32206, 1, 0, 0.504206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409217,-99) , 
6, -951.286, 0, 0, 0.448196,-99) , 
8, -0.599565, 1, 0, 0.480957,-99) , 
8, 1.47943, 0, 0, 0.493308,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0276197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474999,-99) , 
6, -951.286, 1, 0, 0.544404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386644,-99) , 
7, -1.85715, 0, 0, 0.496248,-99) , 
9, -0.454895, 1, 0, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408302,-99) , 
4, 0.997143, 0, 0, 0.498443,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0244403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.07113, 1, 1, 0.524277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43903,-99) , 
7, -1.28572, 0, 0, 0.494601,-99) , 
9, 0.246913, 1, 0, 0.500321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440771,-99) , 
3, 9.33289, 1, 0, 0.497268,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0533988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477027,-99) , 
6, -951.286, 1, 0, 0.535766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488145,-99) , 
9, 1.1066, 1, 0, 0.496347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373105,-99) , 
9, 2.00635, 0, 0, 0.434647,-99) , 
7, -1.28571, 0, 0, 0.489688,-99) , 
9, -0.523207, 1, 0, 0.493816,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0481631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.540863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488316,-99) , 
8, 1.88551, 0, 0, 0.497508,-99) , 
9, 9.85287, 0, 0, 0.50149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374002,-99) , 
6, -951.286, 0, 0, 0.451775,-99) , 
4, 0.999048, 0, 0, 0.497835,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0511839);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480484,-99) , 
4, 0.999773, 0, 0, 0.515589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484545,-99) , 
2, 0.075856, 0, 0, 0.490084,-99) , 
0, 0.49809, 1, 0, 0.502668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372091,-99) , 
6, -951.286, 0, 0, 0.45243,-99) , 
4, 0.999048, 0, 0, 0.498914,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0323595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461012,-99) , 
6, -951.286, 1, 0, 0.527123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401098,-99) , 
7, -1.85715, 0, 0, 0.49534,-99) , 
8, -1.94583, 1, 0, 0.500808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420231,-99) , 
4, 0.997143, 0, 0, 0.498712,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0271039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.06223, 1, 1, 0.526535,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.492681,-99) , 
9, 0.229181, 1, 0, 0.499157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436096,-99) , 
3, 9.48998, 1, 0, 0.496112,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0259984);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499609,-99) , 
4, 0.999997, 0, 0, 0.509168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439735,-99) , 
3, 4.6448, 1, 0, 0.486057,-99) , 
4, 0.999932, 0, 0, 0.50194,-99) , 
NN(
0, 
0, 
-1, 0.996939, 0, -1, 0.453554,-99) , 
4, 0.998571, 0, 0, 0.499379,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0252901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27223, 0, 1, 0.507049,-99) , 
NN(
0, 
0, 
-1, 4.65503, 1, -1, 0.477493,-99) , 
4, 0.999887, 0, 0, 0.499726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431964,-99) , 
4, 0.997619, 0, 0, 0.497636,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0281892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493225,-99) , 
2, 0.0721362, 0, 0, 0.497943,-99) , 
3, 0.555647, 1, 0, 0.501142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446965,-99) , 
3, 9.26727, 1, 0, 0.498324,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0353853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13927, 1, 1, 0.536967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453449,-99) , 
7, -0.999936, 0, 0, 0.498803,-99) , 
9, -0.205938, 1, 0, 0.503648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450359,-99) , 
3, 9.47659, 1, 0, 0.501038,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0347702);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481275,-99) , 
5, 0.00226584, 0, 0, 0.503833,-99) , 
NN(
0, 
0, 
-1, 0.0242026, 1, -1, 0.456459,-99) , 
5, 0.0237918, 1, 0, 0.501052,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.467138,-99) , 
0, 0.502852, 1, 0, 0.497066,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0286985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.979376, 1, 1, 0.569622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486259,-99) , 
6, -951.286, 1, 0, 0.533125,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.488966,-99) , 
9, -0.454895, 1, 0, 0.493251,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0584418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57306, 1, 1, 0.530495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482982,-99) , 
9, 10.6768, 0, 0, 0.490143,-99) , 
9, 2.44009, 1, 0, 0.508866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489674,-99) , 
9, -1.18819, 1, 0, 0.517314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457892,-99) , 
9, 3.17893, 0, 0, 0.478162,-99) , 
9, -0.140083, 1, 0, 0.488454,-99) , 
7, -0.142879, 0, 0, 0.499232,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0246393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.95383, 1, 1, 0.572523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497409,-99) , 
6, -951.286, 1, 0, 0.539798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430068,-99) , 
4, 0.998095, 0, 0, 0.501011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417531,-99) , 
7, -1.85713, 0, 0, 0.497509,-99) , 
9, -0.393077, 1, 0, 0.501883,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0190809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.41627, 0, 1, 0.504846,-99) , 
NN(
0, 
0, 
-1, 4.65503, 1, -1, 0.484486,-99) , 
4, 0.999909, 0, 0, 0.499211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446022,-99) , 
4, 0.998095, 0, 0, 0.497206,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0437893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470829,-99) , 
7, -1.14907, 0, 0, 0.505212,-99) , 
8, -3.36606, 1, 0, 0.526248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48805,-99) , 
9, 1.56744, 1, 0, 0.49751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383746,-99) , 
9, 1.47392, 0, 0, 0.444569,-99) , 
7, -1.28571, 0, 0, 0.492185,-99) , 
9, -0.205938, 1, 0, 0.496498,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0354253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0223651, 0, 1, 0.523483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482563,-99) , 
3, 3.4368, 0, 0, 0.491512,-99) , 
3, 1.02089, 1, 0, 0.497974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445448,-99) , 
3, 9.47659, 1, 0, 0.495433,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0351321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478633,-99) , 
6, -951.286, 1, 0, 0.525521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47226,-99) , 
7, -0.428591, 0, 0, 0.495137,-99) , 
9, -0.205938, 1, 0, 0.498879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428433,-99) , 
4, 0.997143, 0, 0, 0.497084,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0135591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463013,-99) , 
5, 0.0238055, 1, 0, 0.498657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441175,-99) , 
7, 2.02035, 1, 0, 0.496754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443849,-99) , 
7, -2.14286, 0, 0, 0.49491,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0376758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484862,-99) , 
7, -0.999991, 1, 0, 0.495467,-99) , 
4, 0.999524, 1, 0, 0.504814,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.486142,-99) , 
6, -951.286, 0, 0, 0.493238,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0538267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4908,-99) , 
9, 4.97555, 1, 0, 0.506989,-99) , 
7, -1.28561, 1, 0, 0.512688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4993,-99) , 
9, -1.08943, 1, 0, 0.50627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424945,-99) , 
6, -951.286, 0, 0, 0.460163,-99) , 
8, -0.560202, 1, 0, 0.488886,-99) , 
8, 1.17592, 0, 0, 0.49753,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0382034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999729, 1, 1, 0.517644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470091,-99) , 
8, -0.449296, 1, 0, 0.496403,-99) , 
8, 1.2855, 0, 0, 0.503922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458343,-99) , 
0, 0.504757, 1, 0, 0.501605,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0300031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.983739, 1, 1, 0.516746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486492,-99) , 
6, -951.286, 0, 0, 0.49609,-99) , 
9, 0.36017, 1, 0, 0.500403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440503,-99) , 
4, 0.997143, 0, 0, 0.498867,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0202378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 14.0283, 1, 1, 0.528884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42021,-99) , 
5, 0.0238055, 1, 0, 0.498813,-99) , 
9, 10.0645, 0, 0, 0.501388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409198,-99) , 
3, 5.19089, 1, 0, 0.453863,-99) , 
2, -0.214229, 0, 0, 0.498747,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0308451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48313,-99) , 
7, -1.00016, 0, 0, 0.524246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490398,-99) , 
3, 1.0057, 1, 0, 0.496116,-99) , 
2, 0.0702367, 0, 0, 0.50024,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.459072,-99) , 
3, 9.21944, 1, 0, 0.498103,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0218186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27439, 0, 1, 0.506297,-99) , 
NN(
0, 
0, 
-1, 4.5364, 1, -1, 0.485363,-99) , 
4, 0.999932, 0, 0, 0.499753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451756,-99) , 
4, 0.998571, 0, 0, 0.497309,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.027157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496743,-99) , 
4, 0.999954, 0, 0, 0.520559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496368,-99) , 
3, 9.27699, 0, 0, 0.497741,-99) , 
2, 0.0707203, 0, 0, 0.500865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393813,-99) , 
6, -951.286, 0, 0, 0.459654,-99) , 
4, 0.999048, 0, 0, 0.497876,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0240577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447682,-99) , 
1, 0.0242341, 1, 0, 0.506161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452323,-99) , 
7, -2.07484, 0, 0, 0.503942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460805,-99) , 
7, 1.85704, 1, 0, 0.502079,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0245825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499458,-99) , 
3, 9.27614, 0, 0, 0.502681,-99) , 
NN(
0, 
0, 
-1, 4.54663, 1, -1, 0.477008,-99) , 
4, 0.999773, 0, 0, 0.499564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395919,-99) , 
6, -951.286, 0, 0, 0.462472,-99) , 
4, 0.999048, 0, 0, 0.496842,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0253867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472837,-99) , 
5, 0.0237849, 1, 0, 0.506455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424746,-99) , 
7, -2.30613, 0, 0, 0.504299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459195,-99) , 
7, 1.85708, 1, 0, 0.502389,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0222482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.448885, 1, 1, 0.529263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494268,-99) , 
2, -0.0712671, 1, 0, 0.49808,-99) , 
3, 0.576038, 1, 0, 0.500101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448312,-99) , 
3, 9.47676, 1, 0, 0.497607,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0310313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497923,-99) , 
9, 2.4022, 1, 0, 0.508725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484927,-99) , 
9, -0.427327, 1, 0, 0.493923,-99) , 
7, -0.142862, 0, 0, 0.501732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442863,-99) , 
4, 0.997143, 0, 0, 0.50022,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0185979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.539474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497065,-99) , 
2, 0.0696004, 0, 0, 0.500694,-99) , 
3, 0.566263, 1, 0, 0.503124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460954,-99) , 
3, 9.48998, 1, 0, 0.501062,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0285209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.512261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460965,-99) , 
3, 4.5364, 1, 0, 0.494945,-99) , 
4, 0.999932, 0, 0, 0.506837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458943,-99) , 
4, 0.998571, 0, 0, 0.504368,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0307316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 22.0633, 0, 1, 0.527037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493125,-99) , 
5, 0.0101989, 0, 0, 0.500528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439194,-99) , 
5, 0.0237976, 1, 0, 0.497906,-99) , 
9, 9.59407, 0, 0, 0.500544,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.022311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.30234, 1, 1, 0.52491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440321,-99) , 
7, -1.85713, 0, 0, 0.502182,-99) , 
9, -0.0509712, 1, 0, 0.505531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45471,-99) , 
3, 9.48998, 1, 0, 0.503096,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.019327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495923,-99) , 
9, 0.737391, 1, 0, 0.501173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46833,-99) , 
3, 9.46687, 1, 0, 0.499568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453729,-99) , 
7, -2.14283, 0, 0, 0.497993,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0346048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490609,-99) , 
6, -951.286, 1, 0, 0.507759,-99) , 
7, -1.28561, 1, 0, 0.512836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460118,-99) , 
9, 2.10951, 1, 0, 0.498092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422581,-99) , 
3, 9.48356, 1, 0, 0.494083,-99) , 
8, 1.23098, 0, 0, 0.500795,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0296045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80624, 0, 1, 0.508248,-99) , 
NN(
0, 
0, 
-1, 4.70391, 1, -1, 0.486569,-99) , 
4, 0.999909, 0, 0, 0.502882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415296,-99) , 
6, -951.286, 0, 0, 0.475728,-99) , 
4, 0.999048, 0, 0, 0.500872,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0249528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.94205, 1, 1, 0.536515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468557,-99) , 
2, 0.207574, 1, 0, 0.497344,-99) , 
3, 4.74867, 1, 0, 0.519519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49475,-99) , 
9, 10.1615, 0, 0, 0.497218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441389,-99) , 
2, -0.302583, 0, 0, 0.495105,-99) , 
2, 0.0715316, 0, 0, 0.498907,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0386267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999724, 1, 1, 0.516399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4903,-99) , 
9, -0.793713, 1, 0, 0.495601,-99) , 
8, 1.46392, 0, 0, 0.502957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409089,-99) , 
6, -951.286, 0, 0, 0.470086,-99) , 
4, 0.999048, 0, 0, 0.500555,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0242852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496722,-99) , 
3, 0.559273, 1, 0, 0.498754,-99) , 
3, 9.12457, 0, 0, 0.500805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405459,-99) , 
6, -951.286, 0, 0, 0.465833,-99) , 
4, 0.999048, 0, 0, 0.498263,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0353471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496182,-99) , 
6, -951.286, 1, 0, 0.519127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458592,-99) , 
4, 0.999524, 0, 0, 0.499572,-99) , 
9, 1.63994, 1, 0, 0.507433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427373,-99) , 
9, 0.0840894, 1, 0, 0.45857,-99) , 
6, -951.286, 0, 0, 0.484337,-99) , 
7, -1.28572, 0, 0, 0.504203,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0397899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49348,-99) , 
5, 0.00339968, 0, 0, 0.507575,-99) , 
NN(
0, 
0, 
-1, -0.023994, 0, -1, 0.465603,-99) , 
5, 0.0237977, 1, 0, 0.505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418087,-99) , 
9, -0.105682, 1, 0, 0.451149,-99) , 
6, -951.286, 0, 0, 0.482459,-99) , 
7, -1.28573, 0, 0, 0.501864,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0257266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496985,-99) , 
2, -0.0645872, 1, 0, 0.500557,-99) , 
3, 9.27946, 0, 0, 0.502463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411006,-99) , 
6, -951.286, 0, 0, 0.473875,-99) , 
4, 0.999048, 0, 0, 0.50037,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0317749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483832,-99) , 
6, -951.286, 1, 0, 0.529152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49037,-99) , 
7, -0.142917, 0, 0, 0.503625,-99) , 
9, -0.393077, 1, 0, 0.506316,-99) , 
NN(
0, 
0, 
-1, -0.428894, 0, -1, 0.47303,-99) , 
0, 0.503804, 1, 0, 0.503672,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0346844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493796,-99) , 
6, -951.286, 1, 0, 0.518116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430075,-99) , 
4, 0.999048, 0, 0, 0.498561,-99) , 
9, 1.53578, 1, 0, 0.506054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559664,-99) , 
NN(
0, 
0, 
-1, -2.02044, 0, -1, 0.453809,-99) , 
6, -951.286, 0, 0, 0.484358,-99) , 
7, -1.28572, 0, 0, 0.50307,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0353584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.9643, 1, 1, 0.54479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485223,-99) , 
6, -951.286, 1, 0, 0.51958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473174,-99) , 
9, 4.21116, 1, 0, 0.509746,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.492103,-99) , 
6, -951.286, 0, 0, 0.498674,-99) , 
9, -0.0509712, 1, 0, 0.501814,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0197194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.02121, 1, 1, 0.521422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495764,-99) , 
3, 1.45533, 1, 0, 0.500505,-99) , 
9, -0.0509712, 1, 0, 0.50358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46158,-99) , 
3, 9.46687, 1, 0, 0.501554,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0183953);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480118,-99) , 
6, -951.286, 0, 0, 0.522336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499366,-99) , 
2, 0.114836, 0, 0, 0.501719,-99) , 
4, 0.999524, 1, 0, 0.504096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466175,-99) , 
3, 9.37618, 1, 0, 0.502217,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0173706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55028, 1, 1, 0.523077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498613,-99) , 
2, 0.0778212, 0, 0, 0.502196,-99) , 
2, -0.0717699, 1, 0, 0.505404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465499,-99) , 
3, 9.47676, 1, 0, 0.503478,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0250407);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.26727, 0, 1, 0.507632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415426,-99) , 
6, -951.286, 0, 0, 0.471686,-99) , 
4, 0.999048, 0, 0, 0.50504,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0170752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490217,-99) , 
9, 4.50122, 1, 0, 0.518108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473409,-99) , 
7, 1.5714, 1, 0, 0.499665,-99) , 
3, 1.02307, 1, 0, 0.503386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468233,-99) , 
3, 9.4997, 1, 0, 0.501703,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0367716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492737,-99) , 
4, 0.999987, 0, 0, 0.504578,-99) , 
NN(
0, 
0, 
-1, 0.999533, 1, -1, 0.47892,-99) , 
4, 0.999728, 0, 0, 0.501967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409724,-99) , 
6, -951.286, 0, 0, 0.469275,-99) , 
4, 0.999048, 0, 0, 0.499616,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0206174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.25702, 1, 1, 0.52658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49601,-99) , 
2, 0.0778207, 0, 0, 0.49915,-99) , 
2, -0.0717699, 1, 0, 0.503405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466205,-99) , 
3, 9.33536, 1, 0, 0.501552,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0162882);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.25366, 0, 1, 0.503511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424324,-99) , 
6, -951.286, 0, 0, 0.474532,-99) , 
4, 0.999048, 0, 0, 0.501407,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0195493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.569, 1, 1, 0.509628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492809,-99) , 
4, 0.999524, 1, 0, 0.49524,-99) , 
0, 0.49809, 1, 0, 0.502443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472757,-99) , 
3, 9.33289, 1, 0, 0.500949,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0164371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48209,-99) , 
6, -951.286, 1, 0, 0.522619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45977,-99) , 
7, -1.85715, 0, 0, 0.500228,-99) , 
9, -0.392925, 1, 0, 0.502431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468712,-99) , 
4, 0.998572, 0, 0, 0.500717,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0219492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497164,-99) , 
2, -0.0752826, 1, 0, 0.499712,-99) , 
3, 9.11468, 0, 0, 0.501536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417827,-99) , 
6, -951.286, 0, 0, 0.472162,-99) , 
4, 0.999048, 0, 0, 0.499429,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0192865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48445,-99) , 
6, -951.286, 1, 0, 0.522125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469161,-99) , 
7, -1.57144, 0, 0, 0.499868,-99) , 
9, -0.438634, 1, 0, 0.502013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415866,-99) , 
3, 5.19089, 1, 0, 0.464621,-99) , 
2, -0.214175, 0, 0, 0.499936,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0174116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26672, 0, 1, 0.504332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40999,-99) , 
3, 4.70409, 1, 0, 0.486697,-99) , 
4, 0.999773, 0, 0, 0.501504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454621,-99) , 
4, 0.997619, 0, 0, 0.500135,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0193746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26659, 0, 1, 0.504017,-99) , 
NN(
0, 
0, 
-1, -0.0729268, 1, -1, 0.473532,-99) , 
4, 0.999683, 0, 0, 0.501424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430047,-99) , 
6, -951.286, 0, 0, 0.471694,-99) , 
4, 0.999048, 0, 0, 0.499276,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0189554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474879,-99) , 
5, 0.00113321, 0, 0, 0.498826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419701,-99) , 
9, 5.71857, 0, 0, 0.476484,-99) , 
5, 0.0237976, 1, 0, 0.497482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451472,-99) , 
0, 0.490471, 0, 0, 0.495874,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0466243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494936,-99) , 
6, -951.286, 1, 0, 0.514801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436615,-99) , 
6, -951.286, 0, 0, 0.467052,-99) , 
7, -1.02434, 0, 0, 0.500872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537565,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.483866,-99) , 
7, -1.28542, 1, 0, 0.487463,-99) , 
9, 1.83255, 1, 0, 0.493912,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0251426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493503,-99) , 
3, 0.566531, 1, 0, 0.495328,-99) , 
3, 9.27716, 0, 0, 0.497115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424133,-99) , 
6, -951.286, 0, 0, 0.469208,-99) , 
4, 0.999048, 0, 0, 0.4951,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0143191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497042,-99) , 
2, 0.0718043, 0, 0, 0.499387,-99) , 
4, 0.998095, 1, 0, 0.500825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464761,-99) , 
3, 9.48998, 1, 0, 0.499125,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0179582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26084, 0, 1, 0.504447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40778,-99) , 
3, 4.54663, 1, 0, 0.487127,-99) , 
4, 0.999728, 0, 0, 0.502105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453012,-99) , 
4, 0.998095, 0, 0, 0.500319,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0224186);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496756,-99) , 
4, 0.999954, 0, 0, 0.513135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495088,-99) , 
3, 8.69981, 0, 0, 0.496367,-99) , 
2, 0.0714166, 0, 0, 0.498634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427482,-99) , 
6, -951.286, 0, 0, 0.471733,-99) , 
4, 0.999048, 0, 0, 0.496693,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0147599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493921,-99) , 
6, -951.286, 0, 0, 0.525885,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.497917,-99) , 
4, 0.999524, 1, 0, 0.501146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457952,-99) , 
3, 9.4997, 1, 0, 0.499134,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0192372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493616,-99) , 
6, -951.286, 1, 0, 0.527142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476211,-99) , 
7, -1.57144, 0, 0, 0.502611,-99) , 
9, -0.392925, 1, 0, 0.505121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469099,-99) , 
3, 9.48998, 1, 0, 0.503395,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0274755);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479564,-99) , 
8, -3.00771, 1, 0, 0.543167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490626,-99) , 
6, -951.286, 1, 0, 0.520144,-99) , 
NN(
NN(
0, 
0, 
-1, 1.29592, 1, 1, 0.506621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481412,-99) , 
9, 2.95003, 0, 0, 0.489384,-99) , 
7, 0.142827, 0, 0, 0.497564,-99) , 
9, -0.393077, 1, 0, 0.499899,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.020337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494277,-99) , 
9, 1.98651, 1, 0, 0.502456,-99) , 
NN(
0, 
0, 
-1, -0.143061, 1, -1, 0.475884,-99) , 
5, 0.0237683, 1, 0, 0.500896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463963,-99) , 
0, 0.504757, 1, 0, 0.499053,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0176819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498233,-99) , 
2, 0.119238, 0, 0, 0.500305,-99) , 
3, 9.26338, 0, 0, 0.501975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432596,-99) , 
6, -951.286, 0, 0, 0.474714,-99) , 
4, 0.999048, 0, 0, 0.500016,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0183562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.513843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496814,-99) , 
2, 0.213884, 0, 0, 0.498497,-99) , 
3, 1.4719, 1, 0, 0.50362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458687,-99) , 
3, 9.50217, 1, 0, 0.501508,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.026988);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473619,-99) , 
4, 0.999909, 0, 0, 0.518691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498958,-99) , 
3, 0.783144, 1, 0, 0.502462,-99) , 
3, 4.6971, 0, 0, 0.505781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425421,-99) , 
6, -951.286, 0, 0, 0.465077,-99) , 
4, 0.999048, 0, 0, 0.502867,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0218383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461907,-99) , 
1, -0.0249756, 0, 0, 0.506868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459891,-99) , 
1, 0.0247997, 1, 0, 0.505577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46874,-99) , 
3, 9.33289, 1, 0, 0.503747,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0172558);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.25366, 0, 1, 0.505693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441709,-99) , 
6, -951.286, 0, 0, 0.474346,-99) , 
4, 0.999048, 0, 0, 0.503427,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0197548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.2602, 0, 1, 0.505565,-99) , 
NN(
0, 
0, 
-1, 4.50195, 1, -1, 0.482461,-99) , 
4, 0.999773, 0, 0, 0.502787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440252,-99) , 
6, -951.286, 0, 0, 0.473409,-99) , 
4, 0.999048, 0, 0, 0.500676,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0307453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491215,-99) , 
4, 0.999989, 0, 0, 0.501133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462907,-99) , 
9, 1.54492, 1, 0, 0.484131,-99) , 
4, 0.999773, 0, 0, 0.499096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422362,-99) , 
6, -951.286, 0, 0, 0.458184,-99) , 
4, 0.999048, 0, 0, 0.496208,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.013068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13928, 1, 1, 0.518965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477289,-99) , 
4, 0.999728, 0, 0, 0.497987,-99) , 
9, -0.205938, 1, 0, 0.500509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464206,-99) , 
4, 0.998571, 0, 0, 0.49871,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0271882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459831,-99) , 
7, -0.714558, 0, 0, 0.520051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489073,-99) , 
8, 1.46392, 0, 0, 0.49503,-99) , 
4, 0.999524, 1, 0, 0.497911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467623,-99) , 
3, 9.36646, 1, 0, 0.496432,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0135819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490832,-99) , 
6, -951.286, 1, 0, 0.520466,-99) , 
NN(
0, 
0, 
-1, 7.57017, 1, -1, 0.497903,-99) , 
9, -0.205938, 1, 0, 0.50074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466259,-99) , 
3, 9.32317, 1, 0, 0.499048,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0138956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497244,-99) , 
8, -3.06444, 1, 0, 0.516587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47229,-99) , 
7, -1.57144, 0, 0, 0.500317,-99) , 
9, -0.140083, 1, 0, 0.502536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465537,-99) , 
0, 0.490471, 0, 0, 0.501225,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0347338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467867,-99) , 
7, -1.28574, 0, 0, 0.498267,-99) , 
8, 2.0923, 0, 0, 0.502735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468513,-99) , 
7, 1.40816, 0, 0, 0.476939,-99) , 
7, -0.713973, 1, 0, 0.486513,-99) , 
9, 4.024, 1, 0, 0.498527,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0202554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499127,-99) , 
9, -1.13186, 1, 0, 0.519289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494118,-99) , 
3, 9.17941, 0, 0, 0.495534,-99) , 
9, -0.427327, 1, 0, 0.497733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446389,-99) , 
6, -951.286, 0, 0, 0.471612,-99) , 
4, 0.999048, 0, 0, 0.495846,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0164886);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494916,-99) , 
9, 2.02619, 1, 0, 0.519057,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.496237,-99) , 
2, -0.0714215, 1, 0, 0.499774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464493,-99) , 
3, 9.46687, 1, 0, 0.498096,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0115501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45328,-99) , 
1, 0.026004, 1, 0, 0.50149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467698,-99) , 
1, -0.0238562, 0, 0, 0.500491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463246,-99) , 
4, 0.997619, 0, 0, 0.499385,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0212177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494307,-99) , 
0, 0.496186, 1, 0, 0.499433,-99) , 
3, 9.26727, 0, 0, 0.50085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447086,-99) , 
6, -951.286, 0, 0, 0.473598,-99) , 
4, 0.999048, 0, 0, 0.498875,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0243025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492489,-99) , 
6, -951.286, 1, 0, 0.504222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460632,-99) , 
8, 0.787116, 0, 0, 0.485595,-99) , 
7, 1.28568, 1, 0, 0.50218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467335,-99) , 
4, 0.998571, 0, 0, 0.500457,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0200951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.16599, 1, 1, 0.518399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4919,-99) , 
6, -951.286, 0, 0, 0.496654,-99) , 
9, 0.15525, 1, 0, 0.500534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467002,-99) , 
3, 9.49987, 1, 0, 0.49893,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0119379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.43847, 1, 1, 0.523886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498026,-99) , 
2, 0.0715675, 0, 0, 0.499962,-99) , 
3, 0.587171, 1, 0, 0.501615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469,-99) , 
3, 9.509, 1, 0, 0.500078,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0313139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493157,-99) , 
7, -0.719154, 0, 0, 0.511594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490869,-99) , 
7, -1.28541, 1, 0, 0.49541,-99) , 
9, 1.86498, 1, 0, 0.503256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464699,-99) , 
3, 9.4997, 1, 0, 0.501434,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.013829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499409,-99) , 
2, -0.0739084, 1, 0, 0.501751,-99) , 
3, 9.26727, 0, 0, 0.503271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441071,-99) , 
6, -951.286, 0, 0, 0.470355,-99) , 
4, 0.999048, 0, 0, 0.500932,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0200304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.79673, 0, 1, 0.507195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478197,-99) , 
9, 1.15542, 1, 0, 0.490365,-99) , 
4, 0.999773, 0, 0, 0.505157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433776,-99) , 
9, 0.982801, 1, 0, 0.473327,-99) , 
4, 0.999048, 0, 0, 0.502875,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0174719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497412,-99) , 
2, 0.0162745, 0, 0, 0.501765,-99) , 
3, 9.25773, 0, 0, 0.50296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445721,-99) , 
6, -951.286, 0, 0, 0.472526,-99) , 
4, 0.999048, 0, 0, 0.50078,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0193685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49746,-99) , 
6, -951.286, 0, 0, 0.520475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49592,-99) , 
8, 1.39836, 0, 0, 0.501512,-99) , 
4, 0.999524, 1, 0, 0.503688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46837,-99) , 
3, 9.46687, 1, 0, 0.502005,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0115526);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.25773, 0, 1, 0.503845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458236,-99) , 
6, -951.286, 0, 0, 0.47958,-99) , 
4, 0.999048, 0, 0, 0.502093,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0132465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.11198, 1, 1, 0.517661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464426,-99) , 
3, 7.26882, 1, 0, 0.499544,-99) , 
9, 0.236272, 1, 0, 0.503013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471571,-99) , 
3, 9.4997, 1, 0, 0.501525,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0119262);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490795,-99) , 
3, 1.86938, 1, 0, 0.519365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461945,-99) , 
4, 0.99966, 0, 0, 0.499369,-99) , 
4, 0.999524, 1, 0, 0.501656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471838,-99) , 
3, 9.2579, 1, 0, 0.500154,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0199571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.86644, 1, 1, 0.541461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485004,-99) , 
6, -951.286, 1, 0, 0.517314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495644,-99) , 
3, 9.16953, 0, 0, 0.497192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447975,-99) , 
9, 1.26601, 1, 0, 0.474047,-99) , 
4, 0.999048, 0, 0, 0.495726,-99) , 
9, -0.205938, 1, 0, 0.498487,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0142532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484686,-99) , 
9, 3.97107, 1, 0, 0.515416,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.497488,-99) , 
2, -0.071908, 1, 0, 0.500233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464032,-99) , 
3, 9.46687, 1, 0, 0.498536,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0121326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498961,-99) , 
3, 1.01024, 1, 0, 0.501964,-99) , 
4, 0.998095, 1, 0, 0.503367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472156,-99) , 
3, 9.46687, 1, 0, 0.501879,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0218727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494968,-99) , 
6, -951.286, 1, 0, 0.526949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485803,-99) , 
4, 0.999773, 0, 0, 0.503404,-99) , 
9, -0.393077, 1, 0, 0.505685,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.463898,-99) , 
4, 0.999048, 0, 0, 0.502771,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0149373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476451,-99) , 
3, 3.263, 1, 0, 0.522564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499296,-99) , 
7, -1.85715, 1, 0, 0.501341,-99) , 
4, 0.999524, 1, 0, 0.503755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471174,-99) , 
3, 9.50217, 1, 0, 0.502225,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0153603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.25859, 1, 1, 0.53027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47371,-99) , 
3, 7.13195, 1, 0, 0.501342,-99) , 
9, -0.438634, 1, 0, 0.504124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467031,-99) , 
3, 9.32317, 1, 0, 0.50231,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0148971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495619,-99) , 
9, 4.31879, 1, 0, 0.503814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477536,-99) , 
0, 0.505165, 1, 0, 0.502709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469775,-99) , 
0, 0.490471, 0, 0, 0.50156,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.006915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476103,-99) , 
3, 7.70512, 1, 0, 0.499509,-99) , 
4, 0.998571, 1, 0, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472901,-99) , 
3, 9.48998, 1, 0, 0.49942,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0221888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28532, 1, 1, 0.508235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491624,-99) , 
9, -1.15181, 1, 0, 0.495386,-99) , 
8, 1.17592, 0, 0, 0.500282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469576,-99) , 
4, 0.998571, 0, 0, 0.49875,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0212495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499748,-99) , 
8, 1.79459, 0, 0, 0.504425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481937,-99) , 
7, -0.713888, 1, 0, 0.491158,-99) , 
9, 3.71406, 1, 0, 0.500675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4688,-99) , 
3, 9.25366, 1, 0, 0.49908,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0176303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.81984, 0, 1, 0.505315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47521,-99) , 
6, -951.286, 1, 0, 0.49394,-99) , 
9, 4.024, 1, 0, 0.502255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456904,-99) , 
4, 0.997619, 0, 0, 0.500951,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0172275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496455,-99) , 
2, -0.0640077, 1, 0, 0.499509,-99) , 
3, 9.26355, 0, 0, 0.501021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440721,-99) , 
9, 1.00419, 1, 0, 0.477391,-99) , 
4, 0.999048, 0, 0, 0.499333,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0173211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.81984, 0, 1, 0.505171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488616,-99) , 
7, -0.713888, 1, 0, 0.495233,-99) , 
9, 4.20097, 1, 0, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469417,-99) , 
4, 0.998571, 0, 0, 0.500949,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0109882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498433,-99) , 
9, -0.427327, 1, 0, 0.500317,-99) , 
4, 0.998095, 1, 0, 0.501598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471084,-99) , 
3, 9.48998, 1, 0, 0.500164,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0247559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453492,-99) , 
7, -1.89335, 0, 0, 0.511405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494482,-99) , 
0, 0.496186, 1, 0, 0.498101,-99) , 
9, 1.47336, 1, 0, 0.503594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474326,-99) , 
3, 9.4997, 1, 0, 0.502229,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0215941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.2602, 0, 1, 0.507542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457323,-99) , 
3, 4.54663, 1, 0, 0.496565,-99) , 
4, 0.999909, 0, 0, 0.504528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469754,-99) , 
4, 0.998095, 0, 0, 0.503279,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0107352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475369,-99) , 
3, 7.2414, 1, 0, 0.502023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471677,-99) , 
3, 9.46687, 1, 0, 0.500594,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0103338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540762,-99) , 
NN(
0, 
0, 
-1, 0.0247997, 1, -1, 0.49876,-99) , 
3, 9.2801, 0, 0, 0.500743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448149,-99) , 
6, -951.286, 0, 0, 0.469439,-99) , 
4, 0.999048, 0, 0, 0.498548,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0154781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496628,-99) , 
1, 0.00150789, 0, 0, 0.502401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470462,-99) , 
1, -0.0234148, 0, 0, 0.501435,-99) , 
NN(
0, 
0, 
-1, 1.80345, 0, -1, 0.478709,-99) , 
0, 0.491424, 0, 0, 0.500204,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0300062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494965,-99) , 
9, 2.81599, 1, 0, 0.503937,-99) , 
7, -1.57136, 1, 0, 0.506347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493242,-99) , 
7, 0.421263, 0, 0, 0.500113,-99) , 
NN(
0, 
0, 
-1, 2.30848, 1, -1, 0.452189,-99) , 
9, 1.92316, 1, 0, 0.494133,-99) , 
8, 0.466998, 0, 0, 0.499587,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.012024);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.89355, 0, 1, 0.50476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44039,-99) , 
7, -0.428598, 0, 0, 0.479988,-99) , 
4, 0.999048, 0, 0, 0.502991,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0161476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473015,-99) , 
7, -2.18366, 0, 0, 0.502654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457156,-99) , 
8, 0.839872, 0, 0, 0.489403,-99) , 
7, 1.28566, 1, 0, 0.501189,-99) , 
NN(
0, 
0, 
-1, -0.143863, 0, -1, 0.476392,-99) , 
0, 0.491424, 0, 0, 0.499832,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0112844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485698,-99) , 
7, -0.999847, 0, 0, 0.512941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461869,-99) , 
2, -0.302381, 0, 0, 0.499897,-99) , 
2, 0.0716806, 0, 0, 0.501871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47573,-99) , 
0, 0.490471, 0, 0, 0.50096,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.019278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485895,-99) , 
9, 5.82656, 1, 0, 0.507229,-99) , 
NN(
0, 
0, 
-1, -2.27438, 0, -1, 0.495284,-99) , 
7, 0.047576, 0, 0, 0.500277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447819,-99) , 
8, 0.871173, 0, 0, 0.478746,-99) , 
7, 1.57137, 1, 0, 0.498767,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0127557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497744,-99) , 
2, 0.18909, 0, 0, 0.499225,-99) , 
3, 8.95273, 0, 0, 0.50081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446052,-99) , 
9, 1.21034, 1, 0, 0.480234,-99) , 
4, 0.999048, 0, 0, 0.499344,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0224854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493466,-99) , 
4, 0.999955, 0, 0, 0.505762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464159,-99) , 
9, 1.37665, 1, 0, 0.493447,-99) , 
8, 0.178998, 0, 0, 0.499692,-99) , 
NN(
0, 
0, 
-1, 1.15207, 1, -1, 0.473854,-99) , 
4, 0.999048, 0, 0, 0.497865,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0169016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999674, 1, 1, 0.509874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450429,-99) , 
9, 2.93859, 1, 0, 0.498032,-99) , 
8, 1.98365, 0, 0, 0.501766,-99) , 
NN(
0, 
0, 
-1, 1.15207, 1, -1, 0.477979,-99) , 
4, 0.999048, 0, 0, 0.500085,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0236955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464808,-99) , 
7, -1.37537, 0, 0, 0.495769,-99) , 
8, -3.16965, 1, 0, 0.506772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49353,-99) , 
7, 1.291, 0, 0, 0.502324,-99) , 
NN(
0, 
0, 
-1, 1.57137, 1, -1, 0.492442,-99) , 
6, -951.286, 0, 0, 0.496121,-99) , 
9, 0.15525, 1, 0, 0.498031,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0222081);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493651,-99) , 
5, 0.0079325, 0, 0, 0.499563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463261,-99) , 
5, 0.0237976, 1, 0, 0.497756,-99) , 
8, 22.0484, 0, 0, 0.499053,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0164438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495054,-99) , 
3, 1.85977, 1, 0, 0.519577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495729,-99) , 
2, 0.109831, 0, 0, 0.497279,-99) , 
4, 0.999524, 1, 0, 0.499795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475399,-99) , 
3, 9.25366, 1, 0, 0.498578,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0084595);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478237,-99) , 
3, 9.26727, 1, 0, 0.502076,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0148302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496641,-99) , 
8, 2.05147, 0, 0, 0.501092,-99) , 
8, 22.1562, 0, 0, 0.501969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465407,-99) , 
4, 0.997619, 0, 0, 0.500935,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.00880815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476875,-99) , 
0, 0.490199, 0, 0, 0.502019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463238,-99) , 
0, 0.505709, 1, 0, 0.500933,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0119557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499588,-99) , 
2, -0.0587899, 1, 0, 0.502127,-99) , 
3, 9.1275, 0, 0, 0.503599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460568,-99) , 
6, -951.286, 0, 0, 0.481008,-99) , 
4, 0.999048, 0, 0, 0.502014,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0143029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.503413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430828,-99) , 
3, 4.70391, 1, 0, 0.493626,-99) , 
4, 0.999773, 0, 0, 0.501848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469316,-99) , 
4, 0.997619, 0, 0, 0.500919,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0101857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.303126, 1, 1, 0.503085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485083,-99) , 
2, -0.0681124, 1, 0, 0.489807,-99) , 
0, 0.50326, 1, 0, 0.501623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484059,-99) , 
0, 0.491404, 1, 0, 0.492989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468679,-99) , 
0, 0.490108, 0, 0, 0.484485,-99) , 
0, 0.492376, 0, 0, 0.500233,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0255222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486458,-99) , 
7, -0.953079, 0, 0, 0.50378,-99) , 
9, -1.28174, 1, 0, 0.521262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490439,-99) , 
9, 2.95017, 1, 0, 0.499876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41832,-99) , 
9, 1.29584, 0, 0, 0.47076,-99) , 
7, -1.57144, 0, 0, 0.49802,-99) , 
9, -0.392925, 1, 0, 0.500428,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0166291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496151,-99) , 
9, 1.67498, 1, 0, 0.5229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495927,-99) , 
7, -1.57144, 1, 0, 0.497984,-99) , 
4, 0.999524, 1, 0, 0.500812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47901,-99) , 
3, 9.49987, 1, 0, 0.499791,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0171974);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530295,-99) , 
NN(
NN(
0, 
0, 
-1, -1.27199, 1, 1, 0.529525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49475,-99) , 
8, 2.40669, 0, 0, 0.498573,-99) , 
9, -0.849238, 1, 0, 0.500449,-99) , 
8, 22.0484, 0, 0, 0.501622,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0147169);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496679,-99) , 
3, 4.89636, 1, 0, 0.523962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492709,-99) , 
8, -0.2136, 0, 0, 0.502797,-99) , 
2, -0.0710363, 1, 0, 0.506322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49839,-99) , 
9, -1.13823, 1, 0, 0.500167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463814,-99) , 
7, -2.2517, 0, 0, 0.49843,-99) , 
7, 0.142836, 0, 0, 0.501784,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0173122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482697,-99) , 
7, -0.714307, 0, 0, 0.523705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49799,-99) , 
2, 0.0444301, 0, 0, 0.501472,-99) , 
4, 0.999524, 1, 0, 0.504029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479649,-99) , 
3, 9.36646, 1, 0, 0.502848,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0141036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495351,-99) , 
9, 4.36302, 1, 0, 0.502761,-99) , 
4, 0.998095, 1, 0, 0.503901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474507,-99) , 
3, 9.47969, 1, 0, 0.502539,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0344762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49575,-99) , 
9, 3.43461, 1, 0, 0.501081,-99) , 
7, -0.999567, 1, 0, 0.507955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482671,-99) , 
8, -1.1278, 0, 0, 0.515752,-99) , 
NN(
0, 
0, 
-1, -1.85716, 0, -1, 0.490242,-99) , 
6, -951.286, 0, 0, 0.49955,-99) , 
8, 1.2855, 0, 0, 0.502527,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0163121);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.26355, 0, 1, 0.506924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463924,-99) , 
9, 0.935086, 1, 0, 0.489501,-99) , 
4, 0.999048, 0, 0, 0.505688,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0180529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 0, 1, 0.519239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496765,-99) , 
2, -0.00267149, 1, 0, 0.503981,-99) , 
2, 0.0721186, 0, 0, 0.50612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48396,-99) , 
4, 0.998571, 0, 0, 0.505035,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0300661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49077,-99) , 
8, -3.05622, 1, 0, 0.540169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488887,-99) , 
6, -951.286, 1, 0, 0.51744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49514,-99) , 
6, -951.286, 1, 0, 0.504361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463013,-99) , 
6, -951.286, 0, 0, 0.486509,-99) , 
7, -1.00002, 0, 0, 0.501556,-99) , 
9, -0.454895, 1, 0, 0.503084,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0225118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.955711, 1, 1, 0.540829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49283,-99) , 
6, -951.286, 1, 0, 0.519715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489251,-99) , 
6, -951.286, 1, 0, 0.510061,-99) , 
NN(
0, 
0, 
-1, -1.85716, 0, -1, 0.494641,-99) , 
8, 2.47218, 0, 0, 0.499385,-99) , 
9, -0.427327, 1, 0, 0.501425,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0228318);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.50815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475655,-99) , 
2, 0.112275, 1, 0, 0.503443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446516,-99) , 
2, -0.214249, 0, 0, 0.494285,-99) , 
3, 4.72162, 1, 0, 0.505337,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0216809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.81984, 0, 1, 0.507995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485184,-99) , 
7, -0.598668, 1, 0, 0.493059,-99) , 
9, 4.31879, 1, 0, 0.504476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463637,-99) , 
8, 0.746263, 0, 0, 0.491013,-99) , 
7, 1.57139, 1, 0, 0.503513,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0090633);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463687,-99) , 
1, -0.0255589, 0, 0, 0.501136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475363,-99) , 
1, 0.0242713, 1, 0, 0.500396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468767,-99) , 
4, 0.997619, 0, 0, 0.499497,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0276936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473356,-99) , 
7, -1.29427, 0, 0, 0.500346,-99) , 
8, -3.25048, 1, 0, 0.517458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494367,-99) , 
9, 2.91905, 1, 0, 0.500745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454115,-99) , 
6, -951.286, 0, 0, 0.481014,-99) , 
7, -1.00004, 0, 0, 0.497713,-99) , 
9, -0.427327, 1, 0, 0.499688,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0110014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499429,-99) , 
3, 9.27375, 0, 0, 0.502276,-99) , 
NN(
0, 
0, 
-1, 4.6448, 1, -1, 0.488587,-99) , 
4, 0.999773, 0, 0, 0.500094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465558,-99) , 
4, 0.997619, 0, 0, 0.499107,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0283743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488952,-99) , 
4, 0.999977, 0, 0, 0.506955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471808,-99) , 
4, 0.999524, 0, 0, 0.504596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495006,-99) , 
9, -1.0806, 1, 0, 0.498224,-99) , 
NN(
0, 
0, 
-1, 1.88334, 1, -1, 0.462454,-99) , 
9, 1.6879, 1, 0, 0.493137,-99) , 
8, 0.178998, 0, 0, 0.498716,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.00918971);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483524,-99) , 
3, 9.37618, 1, 0, 0.503008,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0258026);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.111937, 1, 1, 0.512366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493924,-99) , 
5, 0.00793222, 0, 0, 0.501567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431465,-99) , 
5, 0.0237976, 1, 0, 0.498865,-99) , 
9, 8.32574, 0, 0, 0.500413,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0198521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496488,-99) , 
9, 4.87481, 1, 0, 0.504417,-99) , 
7, -1.28541, 1, 0, 0.508281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497019,-99) , 
8, 0.601787, 0, 0, 0.50056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439258,-99) , 
9, 2.82584, 1, 0, 0.49767,-99) , 
8, 1.29567, 0, 0, 0.501411,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0143906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466686,-99) , 
5, 0.0237849, 1, 0, 0.502929,-99) , 
9, 10.8267, 0, 0, 0.503941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475247,-99) , 
0, 0.505709, 1, 0, 0.503127,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0174844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.9353, 0, 1, 0.523349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494493,-99) , 
9, -1.1882, 1, 0, 0.499632,-99) , 
7, 0.0910709, 0, 0, 0.506242,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495122,-99) , 
9, 1.69411, 1, 0, 0.5002,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.00671918);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481528,-99) , 
3, 9.48998, 1, 0, 0.501652,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0140667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497562,-99) , 
2, 0.0304693, 0, 0, 0.501112,-99) , 
2, -0.214362, 1, 0, 0.502844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478685,-99) , 
3, 9.48998, 1, 0, 0.501734,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0168086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486635,-99) , 
9, 4.58098, 1, 0, 0.508569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478762,-99) , 
7, -2.22254, 0, 0, 0.50073,-99) , 
7, 0.26527, 0, 0, 0.503354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452132,-99) , 
7, 2.11558, 1, 0, 0.489018,-99) , 
7, 1.57138, 1, 0, 0.502345,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.021808);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.2115, 1, 1, 0.520953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494976,-99) , 
5, 0.00793458, 0, 0, 0.501046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4581,-99) , 
5, 0.0238055, 1, 0, 0.499204,-99) , 
9, 10.1365, 0, 0, 0.501033,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.011534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497751,-99) , 
2, -0.0771465, 1, 0, 0.499709,-99) , 
4, 0.998095, 1, 0, 0.501195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478793,-99) , 
3, 9.17924, 1, 0, 0.500069,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0242581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.236564, 0, 1, 0.514758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492029,-99) , 
6, -951.286, 0, 0, 0.499363,-99) , 
9, 2.61396, 1, 0, 0.507067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49084,-99) , 
4, 0.999977, 0, 0, 0.500807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43847,-99) , 
7, -0.823124, 0, 0, 0.4726,-99) , 
4, 0.999524, 0, 0, 0.497618,-99) , 
7, -0.142881, 0, 0, 0.502635,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0188106);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.476, 1, 1, 0.516873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484739,-99) , 
5, 0.00113359, 0, 0, 0.503111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456646,-99) , 
5, 0.0238055, 1, 0, 0.50111,-99) , 
9, 10.445, 0, 0, 0.502363,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0120101);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27699, 0, 1, 0.50446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462691,-99) , 
6, -951.286, 0, 0, 0.480998,-99) , 
4, 0.999048, 0, 0, 0.502819,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0117181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499062,-99) , 
3, 8.80688, 0, 0, 0.50194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433727,-99) , 
3, 4.61738, 1, 0, 0.48632,-99) , 
4, 0.999728, 0, 0, 0.499853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476269,-99) , 
4, 0.998095, 0, 0, 0.499021,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0198327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.83439, 1, 1, 0.5224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489517,-99) , 
8, 0.400101, 0, 0, 0.499895,-99) , 
2, 0.0710472, 0, 0, 0.50341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494799,-99) , 
7, -1.56753, 1, 0, 0.498027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455231,-99) , 
7, -2.25168, 0, 0, 0.496064,-99) , 
7, 0.142837, 0, 0, 0.499197,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0265252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.904727, 0, 1, 0.514156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471744,-99) , 
4, 0.999524, 0, 0, 0.498078,-99) , 
9, 1.67401, 1, 0, 0.504368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460062,-99) , 
9, -0.801909, 1, 0, 0.47645,-99) , 
6, -951.286, 0, 0, 0.493775,-99) , 
7, -1.00001, 0, 0, 0.502266,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0147476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494176,-99) , 
6, -951.286, 1, 0, 0.507952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494627,-99) , 
7, 0.142824, 0, 0, 0.499063,-99) , 
9, 0.248562, 1, 0, 0.500765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488768,-99) , 
0, 0.492693, 1, 0, 0.49765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458067,-99) , 
4, 0.999524, 0, 0, 0.490306,-99) , 
0, 0.494281, 0, 0, 0.499043,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.016054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496081,-99) , 
2, 0.0351806, 0, 0, 0.499459,-99) , 
3, 9.11468, 0, 0, 0.500932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466427,-99) , 
6, -951.286, 0, 0, 0.481945,-99) , 
4, 0.999048, 0, 0, 0.499605,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.01481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494427,-99) , 
0, 0.497138, 1, 0, 0.49825,-99) , 
3, 9.2579, 0, 0, 0.499563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462436,-99) , 
6, -951.286, 0, 0, 0.480717,-99) , 
4, 0.999048, 0, 0, 0.498239,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0120275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.3131, 0, 1, 0.50373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445624,-99) , 
3, 4.65503, 1, 0, 0.491734,-99) , 
4, 0.999773, 0, 0, 0.501815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477412,-99) , 
4, 0.997619, 0, 0, 0.501116,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0122858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497327,-99) , 
7, -1.57145, 1, 0, 0.498786,-99) , 
4, 0.998095, 1, 0, 0.500486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473547,-99) , 
3, 9.47906, 1, 0, 0.499248,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.00821675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.919367, 1, 1, 0.509652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498564,-99) , 
5, 0.0237918, 0, 0, 0.499502,-99) , 
9, 0.236272, 1, 0, 0.50139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477205,-99) , 
4, 0.997619, 0, 0, 0.500706,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.00848111);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471666,-99) , 
3, 9.48356, 1, 0, 0.50165,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.016694);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497338,-99) , 
8, -1.38759, 0, 0, 0.506308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494763,-99) , 
5, 0.0238055, 0, 0, 0.496127,-99) , 
9, 1.47336, 1, 0, 0.500349,-99) , 
NN(
0, 
0, 
-1, 0.489972, 0, -1, 0.473785,-99) , 
0, 0.491424, 0, 0, 0.498925,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0130002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491203,-99) , 
9, 1.14518, 1, 0, 0.527797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497592,-99) , 
2, -0.0568362, 1, 0, 0.499817,-99) , 
4, 0.999048, 1, 0, 0.501733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483867,-99) , 
3, 9.47676, 1, 0, 0.500904,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0181788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26084, 0, 1, 0.506944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437274,-99) , 
3, 4.61738, 1, 0, 0.489983,-99) , 
4, 0.999773, 0, 0, 0.504259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470656,-99) , 
4, 0.997619, 0, 0, 0.50332,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0187551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491125,-99) , 
8, -2.92933, 1, 0, 0.523012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492895,-99) , 
6, -951.286, 1, 0, 0.509895,-99) , 
NN(
NN(
0, 
0, 
-1, -0.999722, 1, 1, 0.507696,-99) , 
NN(
0, 
0, 
-1, 3.10587, 1, -1, 0.492434,-99) , 
8, 1.82436, 0, 0, 0.497885,-99) , 
9, -0.205938, 1, 0, 0.49941,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0395151);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42998,-99) , 
7, -2.04763, 0, 0, 0.507586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48692,-99) , 
7, -1.28546, 1, 0, 0.494219,-99) , 
6, -951.286, 1, 0, 0.502422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537402,-99) , 
NN(
0, 
0, 
-1, 1.7619, 1, -1, 0.465524,-99) , 
6, -951.286, 0, 0, 0.49166,-99) , 
7, 0.999966, 1, 0, 0.500628,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.012611);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489727,-99) , 
6, -951.286, 1, 0, 0.508704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489754,-99) , 
7, -0.714326, 0, 0, 0.499369,-99) , 
9, -0.0509712, 1, 0, 0.500764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475816,-99) , 
0, 0.505709, 1, 0, 0.500047,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.021533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484012,-99) , 
7, -1.06898, 0, 0, 0.505037,-99) , 
9, -1.21525, 1, 0, 0.511005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496117,-99) , 
3, 9.26703, 0, 0, 0.498403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455133,-99) , 
6, -951.286, 0, 0, 0.481797,-99) , 
4, 0.999524, 0, 0, 0.496715,-99) , 
9, -0.0509712, 1, 0, 0.498845,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0121532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499546,-99) , 
3, 1.02578, 1, 0, 0.502477,-99) , 
4, 0.998572, 1, 0, 0.504706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479703,-99) , 
3, 9.50217, 1, 0, 0.503564,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0173945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488562,-99) , 
7, -1.57435, 0, 0, 0.507571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496598,-99) , 
7, -1.28525, 1, 0, 0.499086,-99) , 
9, 2.02619, 1, 0, 0.503443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477414,-99) , 
0, 0.490471, 0, 0, 0.502542,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0141875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47616,-99) , 
9, 12.3705, 1, 0, 0.503892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470821,-99) , 
1, -0.0252507, 0, 0, 0.502973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478677,-99) , 
1, 0.0245512, 1, 0, 0.502294,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0146794);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498029,-99) , 
9, 4.55745, 1, 0, 0.51137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447595,-99) , 
9, 3.07864, 1, 0, 0.497038,-99) , 
8, 2.06426, 0, 0, 0.500912,-99) , 
8, 22.1675, 0, 0, 0.501731,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0147612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496329,-99) , 
8, 1.37565, 0, 0, 0.499881,-99) , 
3, 9.27716, 0, 0, 0.501324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460087,-99) , 
6, -951.286, 0, 0, 0.480878,-99) , 
4, 0.999048, 0, 0, 0.499896,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0103207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49789,-99) , 
3, 0.576958, 1, 0, 0.499289,-99) , 
4, 0.997619, 1, 0, 0.500935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486638,-99) , 
3, 9.4997, 1, 0, 0.500272,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0122476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486601,-99) , 
3, 6.37971, 1, 0, 0.501983,-99) , 
4, 0.998095, 1, 0, 0.503348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476157,-99) , 
3, 9.50281, 1, 0, 0.502105,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0087724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499313,-99) , 
2, -0.21504, 1, 0, 0.500306,-99) , 
3, 8.80394, 0, 0, 0.501449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458763,-99) , 
6, -951.286, 0, 0, 0.476959,-99) , 
4, 0.999048, 0, 0, 0.499748,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0121988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499337,-99) , 
2, -0.145433, 1, 0, 0.500663,-99) , 
3, 9.26659, 0, 0, 0.502775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511671,-99) , 
NN(
0, 
0, 
-1, 1.25555, 1, -1, 0.470578,-99) , 
6, -951.286, 0, 0, 0.486759,-99) , 
4, 0.999524, 0, 0, 0.500925,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0160238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80688, 0, 1, 0.505728,-99) , 
NN(
0, 
0, 
-1, -0.142882, 0, -1, 0.486995,-99) , 
4, 0.999773, 0, 0, 0.50347,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.473112,-99) , 
4, 0.999048, 0, 0, 0.501366,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.00770996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499665,-99) , 
2, 0.210832, 0, 0, 0.500622,-99) , 
4, 0.998572, 1, 0, 0.502351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47817,-99) , 
3, 9.46687, 1, 0, 0.501214,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0077906);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.26338, 0, 1, 0.503075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480006,-99) , 
4, 0.998572, 0, 0, 0.501956,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0125916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497076,-99) , 
3, 1.44094, 1, 0, 0.500446,-99) , 
4, 0.998095, 1, 0, 0.501724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478613,-99) , 
3, 9.36646, 1, 0, 0.500627,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0106628);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213587, 1, 1, 0.50443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476044,-99) , 
3, 9.48998, 1, 0, 0.50312,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.00917036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498852,-99) , 
2, 0.20583, 0, 0, 0.499643,-99) , 
3, 9.2801, 0, 0, 0.501014,-99) , 
NN(
0, 
0, 
-1, -0.142888, 0, -1, 0.475979,-99) , 
4, 0.999048, 0, 0, 0.49927,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0126332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27375, 0, 1, 0.504634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470697,-99) , 
3, 4.71125, 1, 0, 0.493875,-99) , 
4, 0.999932, 0, 0, 0.501291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47607,-99) , 
4, 0.998572, 0, 0, 0.500077,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.00552036);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478638,-99) , 
1, 0.0243539, 1, 0, 0.499901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477902,-99) , 
0, 0.490471, 0, 0, 0.499138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470272,-99) , 
7, -2.14286, 0, 0, 0.498217,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0252579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479761,-99) , 
4, 0.999955, 0, 0, 0.510764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49275,-99) , 
2, 0.0121613, 0, 0, 0.496989,-99) , 
3, 4.65503, 0, 0, 0.499839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454578,-99) , 
6, -951.286, 0, 0, 0.475179,-99) , 
4, 0.999048, 0, 0, 0.498132,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.00714461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499593,-99) , 
7, -1.85713, 1, 0, 0.500809,-99) , 
4, 0.998572, 1, 0, 0.501755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473724,-99) , 
3, 9.47659, 1, 0, 0.500474,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0099981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498497,-99) , 
7, -1.85716, 1, 0, 0.49989,-99) , 
4, 0.998571, 1, 0, 0.501199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473704,-99) , 
3, 9.26338, 1, 0, 0.499841,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.00699525);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.17924, 0, 1, 0.502335,-99) , 
NN(
0, 
0, 
-1, -0.142888, 0, -1, 0.481051,-99) , 
4, 0.999048, 0, 0, 0.500847,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.00836714);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48213,-99) , 
3, 2.32531, 1, 0, 0.519598,-99) , 
NN(
0, 
0, 
-1, -2.14287, 1, 1, 0.50072,-99) , 
4, 0.999048, 1, 0, 0.50202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471955,-99) , 
3, 9.32317, 1, 0, 0.500588,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0105567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497391,-99) , 
3, 0.575841, 1, 0, 0.498462,-99) , 
4, 0.998095, 1, 0, 0.49964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475246,-99) , 
3, 9.47659, 1, 0, 0.498531,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0172093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496489,-99) , 
2, -0.0585043, 1, 0, 0.498817,-99) , 
3, 9.26659, 0, 0, 0.500889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511899,-99) , 
NN(
0, 
0, 
-1, -0.428825, 0, -1, 0.468346,-99) , 
6, -951.286, 0, 0, 0.485724,-99) , 
4, 0.999524, 0, 0, 0.499146,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0138835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26703, 0, 1, 0.505009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444267,-99) , 
3, 4.69368, 1, 0, 0.491463,-99) , 
4, 0.999728, 0, 0, 0.503198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473617,-99) , 
4, 0.998095, 0, 0, 0.50217,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.00686662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499577,-99) , 
2, 0.208689, 0, 0, 0.50044,-99) , 
4, 0.998095, 1, 0, 0.501994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482978,-99) , 
3, 9.50217, 1, 0, 0.501121,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0154792);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.02505, 1, 1, 0.507449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49898,-99) , 
8, -1.31975, 0, 0, 0.503917,-99) , 
NN(
0, 
0, 
-1, 0.679809, 0, -1, 0.473356,-99) , 
9, 1.72057, 1, 0, 0.499859,-99) , 
8, 0.178998, 0, 0, 0.503554,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0301266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139149, 0, 1, 0.51154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466199,-99) , 
4, 0.999524, 0, 0, 0.499296,-99) , 
9, 2.18582, 1, 0, 0.504725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46943,-99) , 
9, 1.93562, 1, 0, 0.511044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477736,-99) , 
9, 3.52829, 0, 0, 0.489637,-99) , 
6, -951.286, 0, 0, 0.497217,-99) , 
7, -0.428591, 0, 0, 0.501943,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.00790064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499155,-99) , 
2, -0.214086, 1, 0, 0.499957,-99) , 
4, 0.998095, 1, 0, 0.501218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472966,-99) , 
3, 9.32317, 1, 0, 0.499859,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.00683791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46931,-99) , 
3, 7.69939, 1, 0, 0.499239,-99) , 
4, 0.998095, 1, 0, 0.500688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480984,-99) , 
3, 9.47969, 1, 0, 0.499767,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0113412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492946,-99) , 
8, -2.358, 0, 0, 0.501229,-99) , 
9, -1.21526, 1, 0, 0.509144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498058,-99) , 
3, 9.26727, 0, 0, 0.49921,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.483403,-99) , 
4, 0.999048, 0, 0, 0.498252,-99) , 
9, -0.0509712, 1, 0, 0.499883,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.016208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.12122, 1, 1, 0.520902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496114,-99) , 
2, 0.036524, 0, 0, 0.499223,-99) , 
4, 0.999524, 1, 0, 0.501692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474953,-99) , 
3, 9.48998, 1, 0, 0.50048,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0173022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496067,-99) , 
4, 0.999977, 0, 0, 0.501418,-99) , 
3, 9.26585, 0, 0, 0.50333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48696,-99) , 
0, 0.497137, 0, 0, 0.502778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458279,-99) , 
7, -0.714004, 0, 0, 0.490782,-99) , 
4, 0.999524, 0, 0, 0.501882,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.00952771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498933,-99) , 
3, 9.26585, 0, 0, 0.501077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459853,-99) , 
7, -0.71448, 0, 0, 0.489619,-99) , 
4, 0.99966, 0, 0, 0.499718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472316,-99) , 
4, 0.997619, 0, 0, 0.498942,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0113292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499131,-99) , 
3, 1.85223, 1, 0, 0.502757,-99) , 
2, -0.216965, 1, 0, 0.503896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478101,-99) , 
3, 9.13212, 1, 0, 0.502598,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0151943);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27236, 0, 1, 0.505108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477482,-99) , 
7, -0.321466, 0, 0, 0.501782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46991,-99) , 
9, 1.59029, 1, 0, 0.489756,-99) , 
4, 0.999524, 0, 0, 0.503345,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0185223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484189,-99) , 
4, 0.999955, 0, 0, 0.508975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497148,-99) , 
2, 0.0316819, 0, 0, 0.49973,-99) , 
3, 4.405, 0, 0, 0.501819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45727,-99) , 
9, 1.16194, 1, 0, 0.48292,-99) , 
4, 0.999048, 0, 0, 0.500498,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.00951835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498627,-99) , 
9, -0.0509712, 1, 0, 0.500564,-99) , 
4, 0.997619, 1, 0, 0.501533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477255,-99) , 
3, 9.27716, 1, 0, 0.500332,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0132582);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27223, 0, 1, 0.504753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507249,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.4696,-99) , 
6, -951.286, 0, 0, 0.48459,-99) , 
4, 0.999524, 0, 0, 0.502451,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.00969445);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.26727, 0, 1, 0.503162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466925,-99) , 
7, 0.428227, 0, 0, 0.484891,-99) , 
4, 0.999048, 0, 0, 0.501884,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.00937709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470267,-99) , 
1, -0.0249482, 0, 0, 0.501968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47984,-99) , 
1, 0.024806, 1, 0, 0.50135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474927,-99) , 
0, 0.505709, 1, 0, 0.500602,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0230781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486884,-99) , 
7, -0.71427, 0, 0, 0.517461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491112,-99) , 
2, -0.00676275, 1, 0, 0.497887,-99) , 
4, 0.999524, 1, 0, 0.500107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465063,-99) , 
3, 9.36646, 1, 0, 0.498475,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0156864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491515,-99) , 
8, 0.199138, 1, 0, 0.520567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49709,-99) , 
7, -1.57143, 1, 0, 0.499137,-99) , 
4, 0.999524, 1, 0, 0.501571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47067,-99) , 
3, 9.36646, 1, 0, 0.50014,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0200257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494599,-99) , 
4, 0.999985, 0, 0, 0.502287,-99) , 
NN(
0, 
0, 
-1, 0.999531, 1, -1, 0.480041,-99) , 
4, 0.999683, 0, 0, 0.500409,-99) , 
NN(
0, 
0, 
-1, 0.878547, 1, -1, 0.47856,-99) , 
4, 0.999048, 0, 0, 0.498886,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.00729961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499044,-99) , 
2, 0.220082, 0, 0, 0.49984,-99) , 
4, 0.998572, 1, 0, 0.500933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477998,-99) , 
3, 9.2579, 1, 0, 0.499803,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0139007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26659, 0, 1, 0.505298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460192,-99) , 
3, 4.62761, 1, 0, 0.494238,-99) , 
4, 0.999728, 0, 0, 0.50383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467873,-99) , 
4, 0.998095, 0, 0, 0.502586,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0269754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491959,-99) , 
7, -0.714439, 0, 0, 0.529813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44749,-99) , 
9, 2.27147, 1, 0, 0.499505,-99) , 
8, 0.612605, 0, 0, 0.504571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484284,-99) , 
5, 0.0237657, 0, 0, 0.488533,-99) , 
7, -0.713419, 1, 0, 0.494811,-99) , 
9, 3.34009, 1, 0, 0.501518,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0112922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.47607, 1, 1, 0.515784,-99) , 
NN(
0, 
0, 
-1, 7.27137, 1, -1, 0.496814,-99) , 
4, 0.999524, 1, 0, 0.498967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472687,-99) , 
3, 9.50217, 1, 0, 0.497775,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0069845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.47551, 1, 1, 0.523475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4996,-99) , 
2, -0.205151, 1, 0, 0.500479,-99) , 
4, 0.999048, 1, 0, 0.502076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481879,-99) , 
3, 9.4997, 1, 0, 0.501156,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0176266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496784,-99) , 
4, 0.999955, 0, 0, 0.508888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47181,-99) , 
9, 1.78719, 1, 0, 0.497976,-99) , 
8, 0.332609, 0, 0, 0.503257,-99) , 
NN(
0, 
0, 
-1, 1.16194, 1, -1, 0.484723,-99) , 
4, 0.999048, 0, 0, 0.501957,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.00699515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499647,-99) , 
2, 0.213316, 0, 0, 0.500638,-99) , 
4, 0.998095, 1, 0, 0.501899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478213,-99) , 
3, 9.26727, 1, 0, 0.500741,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0145168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.77575, 1, 1, 0.512501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463509,-99) , 
9, 2.78695, 1, 0, 0.498426,-99) , 
8, 1.69878, 0, 0, 0.502559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483955,-99) , 
9, 14.4518, 1, 0, 0.501831,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0107162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497242,-99) , 
2, 0.205211, 0, 0, 0.498366,-99) , 
4, 0.998095, 1, 0, 0.499454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479248,-99) , 
3, 9.25366, 1, 0, 0.498471,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.012663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.52806, 0, 1, 0.50337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46278,-99) , 
4, 0.99966, 0, 0, 0.502122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482681,-99) , 
9, 1.4213, 1, 0, 0.496323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458479,-99) , 
7, -0.71427, 0, 0, 0.486156,-99) , 
4, 0.999524, 0, 0, 0.500278,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.00818581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486383,-99) , 
7, -0.999973, 0, 0, 0.50924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499541,-99) , 
3, 9.37618, 0, 0, 0.500271,-99) , 
2, 0.0715656, 0, 0, 0.501575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48018,-99) , 
7, -0.714493, 0, 0, 0.494634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468185,-99) , 
3, 4.6711, 1, 0, 0.488802,-99) , 
0, 0.493328, 0, 0, 0.500079,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0174471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499649,-99) , 
9, 3.99168, 1, 0, 0.505979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473911,-99) , 
4, 0.999524, 0, 0, 0.503939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472622,-99) , 
7, -1.65394, 0, 0, 0.496935,-99) , 
NN(
0, 
0, 
-1, 0.25195, 0, -1, 0.468421,-99) , 
9, 1.53907, 1, 0, 0.49113,-99) , 
8, 0.298751, 0, 0, 0.497163,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0104178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498334,-99) , 
7, 0.999919, 0, 0, 0.500496,-99) , 
4, 0.997619, 1, 0, 0.501524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473746,-99) , 
3, 9.4997, 1, 0, 0.500279,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0177562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49939,-99) , 
9, 3.54325, 1, 0, 0.505126,-99) , 
7, -0.999729, 1, 0, 0.50954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542972,-99) , 
NN(
0, 
0, 
-1, 2.23635, 1, -1, 0.49412,-99) , 
8, 0.88386, 0, 0, 0.49691,-99) , 
8, 1.23098, 0, 0, 0.501469,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.00961506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498708,-99) , 
9, 2.25448, 0, 0, 0.50195,-99) , 
4, 0.998572, 1, 0, 0.502756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480509,-99) , 
3, 9.33306, 1, 0, 0.501698,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0168266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49641,-99) , 
6, -951.286, 1, 0, 0.506816,-99) , 
7, 1.85702, 0, 0, 0.508375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460761,-99) , 
3, 9.38962, 1, 0, 0.499656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456076,-99) , 
9, 2.12253, 1, 0, 0.497158,-99) , 
8, 0.288579, 0, 0, 0.502469,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0228718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492584,-99) , 
5, 0.00452984, 1, 0, 0.504023,-99) , 
5, 0.0237823, 0, 0, 0.506851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498268,-99) , 
9, -1.1015, 1, 0, 0.500847,-99) , 
NN(
0, 
0, 
-1, 0.7191, 0, -1, 0.459553,-99) , 
9, 1.82482, 1, 0, 0.495893,-99) , 
8, 0.288579, 0, 0, 0.50108,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0156796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.58672, 0, 1, 0.505949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4557,-99) , 
3, 4.69368, 1, 0, 0.492322,-99) , 
4, 0.999819, 0, 0, 0.503514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463284,-99) , 
4, 0.998095, 0, 0, 0.502136,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0099124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497844,-99) , 
4, 0.999932, 1, 0, 0.50035,-99) , 
3, 9.28598, 0, 0, 0.501544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483526,-99) , 
4, 0.998571, 0, 0, 0.500667,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0136124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27223, 0, 1, 0.50527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479041,-99) , 
7, 0.142773, 0, 0, 0.489638,-99) , 
4, 0.999728, 0, 0, 0.503691,-99) , 
NN(
0, 
0, 
-1, 1.21034, 1, -1, 0.483608,-99) , 
4, 0.999048, 0, 0, 0.5023,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0158397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49884,-99) , 
9, 14.0283, 1, 0, 0.511402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496341,-99) , 
5, 0.0113351, 0, 0, 0.499681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461068,-99) , 
5, 0.0238055, 1, 0, 0.498032,-99) , 
9, 10.0645, 0, 0, 0.49916,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.00795533);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480502,-99) , 
3, 9.12457, 1, 0, 0.501998,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.00987832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49967,-99) , 
2, -0.190749, 1, 0, 0.500563,-99) , 
3, 9.2602, 0, 0, 0.502421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487325,-99) , 
9, 1.50313, 1, 0, 0.499406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457552,-99) , 
7, -0.71427, 0, 0, 0.488199,-99) , 
4, 0.999524, 0, 0, 0.5008,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0111304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492151,-99) , 
7, -2.2381, 0, 0, 0.516195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498103,-99) , 
8, 0.945942, 0, 0, 0.501536,-99) , 
7, -1.85715, 1, 0, 0.502388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477121,-99) , 
4, 0.998095, 0, 0, 0.501506,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0164542);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490192,-99) , 
5, 0.00122873, 0, 0, 0.504145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464982,-99) , 
1, -0.0258036, 0, 0, 0.503081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472322,-99) , 
1, 0.0240083, 1, 0, 0.502203,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0252562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.89783, 1, 1, 0.539207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490908,-99) , 
5, 0.0237824, 0, 0, 0.497172,-99) , 
9, 4.64386, 1, 0, 0.507302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497567,-99) , 
8, 0.844657, 0, 0, 0.5014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435445,-99) , 
9, 3.02221, 1, 0, 0.496874,-99) , 
8, 2.00487, 0, 0, 0.500037,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.020161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480932,-99) , 
7, -1.57151, 0, 0, 0.507438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497595,-99) , 
7, -0.997996, 1, 0, 0.500498,-99) , 
9, 2.29865, 1, 0, 0.504362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491207,-99) , 
0, 0.491742, 1, 0, 0.50069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471635,-99) , 
4, 0.999524, 0, 0, 0.495384,-99) , 
0, 0.494281, 0, 0, 0.502876,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.00923514);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481859,-99) , 
3, 9.32317, 1, 0, 0.502894,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0145064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482443,-99) , 
8, 12.8179, 1, 0, 0.50394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481126,-99) , 
1, -0.0249934, 0, 0, 0.503281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475741,-99) , 
1, 0.0247584, 1, 0, 0.50251,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.00745043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469442,-99) , 
3, 7.71495, 1, 0, 0.499718,-99) , 
4, 0.998095, 1, 0, 0.501031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480467,-99) , 
3, 9.4997, 1, 0, 0.500101,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0128198);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496939,-99) , 
9, 0.941297, 1, 0, 0.500669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468786,-99) , 
5, 0.0238055, 1, 0, 0.499127,-99) , 
8, 22.0484, 0, 0, 0.499817,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0125188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498258,-99) , 
3, 8.79781, 0, 0, 0.500536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47942,-99) , 
7, 0.713952, 0, 0, 0.488343,-99) , 
4, 0.99966, 0, 0, 0.499102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472208,-99) , 
4, 0.997619, 0, 0, 0.498346,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.00890302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.327935, 1, 1, 0.503791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487405,-99) , 
1, -0.0234283, 0, 0, 0.503298,-99) , 
NN(
0, 
0, 
-1, -0.142972, 0, -1, 0.488619,-99) , 
0, 0.491424, 0, 0, 0.502506,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0236485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49928,-99) , 
9, 2.64427, 1, 0, 0.518201,-99) , 
NN(
0, 
0, 
-1, 1.57138, 1, -1, 0.49509,-99) , 
6, -951.286, 0, 0, 0.503524,-99) , 
NN(
NN(
0, 
0, 
-1, -2.96387, 1, 1, 0.51033,-99) , 
NN(
0, 
0, 
-1, -0.189002, 1, -1, 0.477201,-99) , 
6, -951.286, 1, 0, 0.496473,-99) , 
8, -1.02427, 0, 0, 0.501285,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.00864114);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484602,-99) , 
3, 9.48998, 1, 0, 0.502919,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0102068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.91828, 1, 1, 0.525891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498168,-99) , 
2, 0.215417, 0, 0, 0.498994,-99) , 
4, 0.999048, 1, 0, 0.500832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47427,-99) , 
3, 9.47969, 1, 0, 0.499645,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0153689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237961, 0, 1, 0.5088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47794,-99) , 
9, 1.72057, 1, 0, 0.498842,-99) , 
8, 0.178998, 0, 0, 0.503887,-99) , 
NN(
0, 
0, 
-1, 1.22158, 1, -1, 0.48016,-99) , 
4, 0.999048, 0, 0, 0.50225,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0110606);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.504223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494551,-99) , 
8, 3.8633, 0, 0, 0.498998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475837,-99) , 
4, 0.999524, 0, 0, 0.495251,-99) , 
0, 0.495233, 0, 0, 0.50218,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0312354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498778,-99) , 
9, 3.3792, 1, 0, 0.50269,-99) , 
7, -1.28471, 1, 0, 0.506338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468828,-99) , 
8, -1.44011, 0, 0, 0.504986,-99) , 
NN(
0, 
0, 
-1, -1.85717, 0, -1, 0.488333,-99) , 
6, -951.286, 0, 0, 0.494411,-99) , 
8, 1.2855, 0, 0, 0.49866,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0157447);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495078,-99) , 
6, -951.286, 1, 0, 0.50737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497225,-99) , 
8, -3.20144, 1, 0, 0.499248,-99) , 
8, 1.30832, 0, 0, 0.502101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505433,-99) , 
NN(
0, 
0, 
-1, -0.428592, 0, -1, 0.478534,-99) , 
6, -951.286, 0, 0, 0.488904,-99) , 
0, 0.502852, 1, 0, 0.500549,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.019646);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497405,-99) , 
9, 2.71983, 1, 0, 0.504634,-99) , 
NN(
0, 
0, 
-1, 0.142546, 1, -1, 0.489166,-99) , 
5, 0.0237961, 1, 0, 0.503688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529872,-99) , 
NN(
0, 
0, 
-1, -2.02041, 0, -1, 0.472595,-99) , 
6, -951.286, 0, 0, 0.489314,-99) , 
7, -1.28572, 0, 0, 0.501728,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0132579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.509887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496478,-99) , 
7, -0.22454, 0, 0, 0.499663,-99) , 
7, 0.428528, 0, 0, 0.503014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475112,-99) , 
1, 0.0247997, 1, 0, 0.502256,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.00908215);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27716, 0, 1, 0.503745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47516,-99) , 
7, 0.142543, 0, 0, 0.487722,-99) , 
4, 0.999048, 0, 0, 0.502631,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0123452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26084, 0, 1, 0.504576,-99) , 
NN(
0, 
0, 
-1, 0.999508, 1, -1, 0.487559,-99) , 
4, 0.999728, 0, 0, 0.502516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480974,-99) , 
4, 0.998572, 0, 0, 0.501489,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0275267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47057,-99) , 
5, 0.00679569, 1, 0, 0.504164,-99) , 
5, 0.0237831, 0, 0, 0.50897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558068,-99) , 
NN(
0, 
0, 
-1, 3.227, 1, -1, 0.495757,-99) , 
8, 2.37822, 0, 0, 0.49882,-99) , 
8, 3.27233, 0, 0, 0.501288,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0250219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477533,-99) , 
5, 0.00566216, 1, 0, 0.504483,-99) , 
5, 0.0237825, 0, 0, 0.50835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453568,-99) , 
9, 3.14733, 1, 0, 0.497484,-99) , 
8, 2.37822, 0, 0, 0.49984,-99) , 
8, 3.27233, 0, 0, 0.501922,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.012199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.3934, 1, 1, 0.516819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498713,-99) , 
5, 0.0124583, 0, 0, 0.501412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463049,-99) , 
5, 0.023785, 1, 0, 0.499762,-99) , 
9, 10.3481, 0, 0, 0.501135,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.00744793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499258,-99) , 
3, 0.560374, 1, 0, 0.500477,-99) , 
4, 0.998095, 1, 0, 0.501769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483861,-99) , 
3, 9.36646, 1, 0, 0.500931,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.00877055);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.50401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488201,-99) , 
3, 9.26727, 1, 0, 0.50325,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0110168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479914,-99) , 
9, 12.1739, 1, 0, 0.502635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479494,-99) , 
7, -0.143232, 1, 0, 0.494416,-99) , 
5, 0.0237977, 1, 0, 0.502145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485012,-99) , 
0, 0.490471, 0, 0, 0.501558,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.00743658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499878,-99) , 
9, 8.32574, 0, 0, 0.501389,-99) , 
3, 9.27699, 0, 0, 0.502451,-99) , 
NN(
0, 
0, 
-1, 0.982801, 1, -1, 0.481786,-99) , 
4, 0.999048, 0, 0, 0.50104,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0155043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496643,-99) , 
2, -0.00676275, 1, 0, 0.500992,-99) , 
3, 9.18823, 0, 0, 0.502484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482218,-99) , 
0, 0.499043, 1, 0, 0.497193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46075,-99) , 
7, -0.714417, 0, 0, 0.487534,-99) , 
4, 0.999524, 0, 0, 0.500786,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0111405);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.13835, 1, 1, 0.506307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499764,-99) , 
8, -3.36134, 1, 0, 0.501472,-99) , 
NN(
0, 
0, 
-1, 0.878986, 0, -1, 0.471745,-99) , 
9, 1.82048, 1, 0, 0.498108,-99) , 
8, 0.234058, 0, 0, 0.502038,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.00773191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502473,-99) , 
NN(
0, 
0, 
-1, -0.714526, 0, -1, 0.490545,-99) , 
0, 0.502988, 1, 0, 0.501059,-99) , 
NN(
0, 
0, 
-1, -0.144059, 0, -1, 0.486288,-99) , 
0, 0.491424, 0, 0, 0.500257,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0115079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45264, 1, 1, 0.517995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497162,-99) , 
7, -2.14286, 1, 0, 0.498114,-99) , 
4, 0.999524, 1, 0, 0.500359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483474,-99) , 
3, 9.33986, 1, 0, 0.499557,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0125272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.453969, 1, 1, 0.504815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47982,-99) , 
3, 7.13195, 1, 0, 0.50366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478718,-99) , 
3, 9.32317, 1, 0, 0.502492,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.00776887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18172, 0, 1, 0.502152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469711,-99) , 
7, 0.142536, 0, 0, 0.485926,-99) , 
4, 0.999365, 0, 0, 0.50115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478426,-99) , 
4, 0.998095, 0, 0, 0.500367,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.00856762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497752,-99) , 
3, 9.10407, 0, 0, 0.498711,-99) , 
2, 0.214375, 0, 0, 0.49942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469307,-99) , 
4, 0.997619, 0, 0, 0.498588,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0225724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490307,-99) , 
6, -951.286, 1, 0, 0.500568,-99) , 
7, 1.77546, 0, 0, 0.501576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524466,-99) , 
NN(
0, 
0, 
-1, -2.02039, 0, -1, 0.473044,-99) , 
6, -951.286, 0, 0, 0.488157,-99) , 
7, -1.28571, 0, 0, 0.499738,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0201923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486819,-99) , 
8, -2.6298, 0, 0, 0.506907,-99) , 
9, -1.27828, 1, 0, 0.515615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498443,-99) , 
7, 1.29038, 0, 0, 0.505771,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.492785,-99) , 
6, -951.286, 0, 0, 0.497661,-99) , 
9, -0.266181, 1, 0, 0.499813,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00957192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495033,-99) , 
4, 0.999886, 0, 0, 0.50991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499513,-99) , 
8, 3.38191, 0, 0, 0.501595,-99) , 
2, 0.0717156, 0, 0, 0.502803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473902,-99) , 
4, 0.997619, 0, 0, 0.502002,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0128519);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51977,-99) , 
NN(
NN(
0, 
0, 
-1, 4.55745, 1, 1, 0.511182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458989,-99) , 
9, 3.04815, 1, 0, 0.498259,-99) , 
8, 2.04154, 0, 0, 0.501761,-99) , 
8, 22.147, 0, 0, 0.502454,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.017104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999637, 1, 1, 0.513276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490095,-99) , 
7, 0.729322, 0, 0, 0.498091,-99) , 
6, -951.286, 1, 0, 0.507004,-99) , 
NN(
NN(
0, 
0, 
-1, -1.54092, 1, 1, 0.524184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423153,-99) , 
7, -1.85716, 0, 0, 0.496683,-99) , 
9, -0.732433, 1, 0, 0.499597,-99) , 
8, 1.32953, 0, 0, 0.502205,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0154374);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494394,-99) , 
8, 1.78418, 0, 0, 0.498833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48295,-99) , 
9, 14.3671, 1, 0, 0.498183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471869,-99) , 
4, 0.997619, 0, 0, 0.497451,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.00795815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497215, 0, 1, 0.502981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485195,-99) , 
7, 0.142713, 0, 0, 0.493426,-99) , 
0, 0.503124, 1, 0, 0.502224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481401,-99) , 
0, 0.505709, 1, 0, 0.50163,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.017438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.510699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494192,-99) , 
2, -0.21456, 1, 0, 0.495833,-99) , 
3, 1.43757, 1, 0, 0.500699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476262,-99) , 
3, 9.27716, 1, 0, 0.499557,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0215457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490768,-99) , 
7, -0.754042, 1, 0, 0.497488,-99) , 
7, 1.28619, 0, 0, 0.50359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453038,-99) , 
7, -2.12926, 0, 0, 0.500213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459098,-99) , 
7, 1.57137, 1, 0, 0.497042,-99) , 
6, -951.286, 0, 0, 0.499556,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0147467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496232,-99) , 
7, -0.95846, 1, 0, 0.501041,-99) , 
7, 1.28529, 0, 0, 0.506487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45279,-99) , 
7, -2.07483, 0, 0, 0.497639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454971,-99) , 
7, 1.85709, 1, 0, 0.495589,-99) , 
6, -951.286, 0, 0, 0.499744,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.026337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493122,-99) , 
6, -0.142794, 1, 0, 0.499421,-99) , 
7, 1.28557, 0, 0, 0.50551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478761,-99) , 
8, -2.83166, 1, 0, 0.51404,-99) , 
NN(
0, 
0, 
-1, -1.57146, 0, -1, 0.489892,-99) , 
9, -0.131994, 1, 0, 0.492952,-99) , 
6, -951.286, 0, 0, 0.497754,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0114112);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.15878, 1, 1, 0.504549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523425,-99) , 
NN(
0, 
0, 
-1, -1.85722, 0, -1, 0.494541,-99) , 
8, -3.2948, 1, 0, 0.496597,-99) , 
8, 0.298751, 0, 0, 0.500348,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.00985126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.15058, 0, 1, 0.50339,-99) , 
NN(
0, 
0, 
-1, 0.999887, 0, -1, 0.493468,-99) , 
9, 4.11896, 1, 0, 0.500791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470238,-99) , 
4, 0.997619, 0, 0, 0.499938,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0141483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496448,-99) , 
7, -0.959049, 1, 0, 0.500953,-99) , 
7, 1.28548, 0, 0, 0.504586,-99) , 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.494574,-99) , 
6, -951.286, 0, 0, 0.498408,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.00595139);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480781,-99) , 
3, 9.19645, 1, 0, 0.501091,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0112104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497625,-99) , 
2, 0.205356, 0, 0, 0.498713,-99) , 
3, 9.24801, 0, 0, 0.500302,-99) , 
NN(
0, 
0, 
-1, 0.142587, 0, -1, 0.481693,-99) , 
4, 0.999048, 0, 0, 0.49903,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0110281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495155,-99) , 
3, 1.9197, 1, 0, 0.528782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498363,-99) , 
2, 0.187965, 0, 0, 0.499579,-99) , 
4, 0.999048, 1, 0, 0.501591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479863,-99) , 
3, 9.48998, 1, 0, 0.500619,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0287549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0113351, 0, 1, 0.508661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460554,-99) , 
5, 0.0238055, 1, 0, 0.506999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458014,-99) , 
5, 0.00679127, 1, 0, 0.489425,-99) , 
5, 0.0237693, 0, 0, 0.498089,-99) , 
9, 6.10082, 1, 0, 0.505469,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0183929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495072,-99) , 
5, 0.0237781, 0, 0, 0.500536,-99) , 
9, 5.16604, 1, 0, 0.507118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477921,-99) , 
7, -1.14968, 0, 0, 0.497336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452775,-99) , 
7, 1.85709, 1, 0, 0.49559,-99) , 
8, 2.63681, 0, 0, 0.498693,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0151028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490598,-99) , 
9, 2.48238, 1, 0, 0.499378,-99) , 
7, 1.28481, 0, 0, 0.503026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464581,-99) , 
7, 1.53057, 1, 0, 0.498179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450469,-99) , 
7, -2.14285, 0, 0, 0.496136,-99) , 
6, -951.286, 0, 0, 0.49877,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0222938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498443,-99) , 
7, -1.16067, 1, 0, 0.50177,-99) , 
7, 1.28625, 0, 0, 0.505412,-99) , 
NN(
NN(
0, 
0, 
-1, -0.713918, 1, 1, 0.510089,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.485339,-99) , 
8, 1.50206, 0, 0, 0.493186,-99) , 
6, -951.286, 0, 0, 0.497864,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.00961045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497175,-99) , 
6, -951.286, 0, 0, 0.500116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476897,-99) , 
9, -1.09772, 0, 0, 0.499373,-99) , 
7, -2.14285, 1, 0, 0.500137,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.010662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492918,-99) , 
7, -2.2381, 0, 0, 0.51593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495594,-99) , 
9, 2.17184, 1, 0, 0.499439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472697,-99) , 
1, 0.0239055, 1, 0, 0.498655,-99) , 
7, -1.85715, 1, 0, 0.499652,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.00948859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498201,-99) , 
0, 0.491424, 1, 0, 0.499126,-99) , 
3, 9.24801, 0, 0, 0.500536,-99) , 
NN(
0, 
0, 
-1, -0.143028, 0, -1, 0.482465,-99) , 
4, 0.999048, 0, 0, 0.499289,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0221922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.984849, 1, 1, 0.509145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478279,-99) , 
9, -0.477576, 0, 0, 0.505773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492368,-99) , 
9, 1.0988, 1, 0, 0.499236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465976,-99) , 
7, -1.85715, 0, 0, 0.496931,-99) , 
6, -951.286, 0, 0, 0.500313,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.00917486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499531,-99) , 
9, 2.67446, 1, 0, 0.507349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499005,-99) , 
9, 7.8559, 0, 0, 0.500393,-99) , 
7, 0.42853, 0, 0, 0.502669,-99) , 
NN(
0, 
0, 
-1, -0.144857, 0, -1, 0.485743,-99) , 
0, 0.491424, 0, 0, 0.501752,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0132357);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48463,-99) , 
3, 6.25793, 1, 0, 0.516771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498086,-99) , 
2, 0.152896, 0, 0, 0.499544,-99) , 
2, -0.0715201, 1, 0, 0.502182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481699,-99) , 
3, 9.26338, 1, 0, 0.501185,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0103907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85715, 1, 1, 0.503589,-99) , 
NN(
0, 
0, 
-1, -0.143095, 0, -1, 0.482341,-99) , 
4, 0.99932, 0, 0, 0.502249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469271,-99) , 
4, 0.997619, 0, 0, 0.501345,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0114445);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525453,-99) , 
NN(
NN(
0, 
0, 
-1, 2.25777, 1, 1, 0.505616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472863,-99) , 
9, 1.65981, 1, 0, 0.495633,-99) , 
8, 0.228793, 0, 0, 0.500494,-99) , 
7, -2.14285, 1, 0, 0.501343,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0198647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.18395, 1, 1, 0.507091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482828,-99) , 
9, 1.5197, 1, 0, 0.498413,-99) , 
8, 0.0217663, 0, 0, 0.503157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473586,-99) , 
6, -951.286, 0, 0, 0.488702,-99) , 
8, -2.6984, 1, 0, 0.4943,-99) , 
7, -1.00001, 0, 0, 0.501394,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.00898252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488577,-99) , 
8, -1.13094, 1, 0, 0.515813,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0238055, 1, -1, 0.498454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457594,-99) , 
6, -951.286, 1, 0, 0.486289,-99) , 
7, -1.1633, 0, 0, 0.497075,-99) , 
7, -1.85716, 1, 0, 0.49814,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0144997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49415,-99) , 
7, -2.23809, 0, 0, 0.519137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483766,-99) , 
7, -1.16327, 0, 0, 0.502228,-99) , 
7, -1.85714, 1, 0, 0.503188,-99) , 
NN(
0, 
0, 
-1, -0.142496, 0, -1, 0.486608,-99) , 
0, 0.491424, 0, 0, 0.502295,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0165606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45131, 1, 1, 0.525218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494297,-99) , 
7, -2.14286, 1, 0, 0.49529,-99) , 
4, 0.999048, 1, 0, 0.497359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478466,-99) , 
3, 9.32317, 1, 0, 0.496463,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0089231);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499964,-99) , 
3, 8.80624, 0, 0, 0.502154,-99) , 
NN(
0, 
0, 
-1, 4.43445, 1, -1, 0.48911,-99) , 
4, 0.999773, 0, 0, 0.500096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464651,-99) , 
4, 0.997619, 0, 0, 0.499124,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0100168);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.2602, 0, 1, 0.50307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516448,-99) , 
NN(
0, 
0, 
-1, -0.877482, 0, -1, 0.47849,-99) , 
7, 0.714296, 0, 0, 0.488317,-99) , 
4, 0.999524, 0, 0, 0.501401,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0163867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488251,-99) , 
4, 0.999773, 0, 0, 0.503647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491153,-99) , 
7, -1.28583, 1, 0, 0.494361,-99) , 
8, -0.174817, 0, 0, 0.499481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46508,-99) , 
4, 0.997619, 0, 0, 0.498531,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.00896688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49882,-99) , 
5, 0.0122145, 0, 0, 0.500994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465637,-99) , 
1, -0.0256528, 0, 0, 0.500042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475596,-99) , 
1, 0.0241676, 1, 0, 0.499351,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0106602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467931,-99) , 
1, -0.0256806, 0, 0, 0.502312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476786,-99) , 
1, 0.0241607, 1, 0, 0.501572,-99) , 
7, -2.14284, 1, 0, 0.502386,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0143011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4774, 1, 1, 0.517763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496057,-99) , 
2, -0.0276706, 1, 0, 0.499163,-99) , 
4, 0.999524, 1, 0, 0.501253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482479,-99) , 
3, 9.50743, 1, 0, 0.500402,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0146037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498024,-99) , 
3, 1.46582, 1, 0, 0.51468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494451,-99) , 
2, 0.00787536, 0, 0, 0.498345,-99) , 
4, 0.999524, 1, 0, 0.500204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479497,-99) , 
3, 9.47659, 1, 0, 0.49926,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0143739);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490437,-99) , 
5, 0.00226519, 0, 0, 0.500899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478388,-99) , 
5, 0.023785, 1, 0, 0.499782,-99) , 
8, 22.0979, 0, 0, 0.500559,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0210021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143499, 0, 1, 0.531453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495841,-99) , 
7, -0.713371, 1, 0, 0.501191,-99) , 
9, 4.66891, 1, 0, 0.50831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476732,-99) , 
7, -1.28583, 0, 0, 0.498258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450528,-99) , 
9, 3.05934, 1, 0, 0.495022,-99) , 
8, 2.05718, 0, 0, 0.498999,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.00801248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
7, -2.14289, 1, 0, 0.4993,-99) , 
4, 0.998572, 1, 0, 0.500308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478187,-99) , 
3, 9.47659, 1, 0, 0.499325,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.00875035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497895,-99) , 
3, 9.27699, 0, 0, 0.498757,-99) , 
7, -2.14281, 1, 0, 0.499498,-99) , 
NN(
0, 
0, 
-1, 0.142821, 0, -1, 0.482251,-99) , 
4, 0.999048, 0, 0, 0.498304,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0139948);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493599,-99) , 
7, 1.20406, 1, 0, 0.503744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494942,-99) , 
8, 5.89185, 0, 0, 0.497035,-99) , 
7, -0.142879, 0, 0, 0.500581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465395,-99) , 
4, 0.997619, 0, 0, 0.499621,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.010751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495552,-99) , 
7, -2.23812, 0, 0, 0.518493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497532,-99) , 
2, 0.0307846, 0, 0, 0.499848,-99) , 
NN(
0, 
0, 
-1, 1.67593, 1, -1, 0.481907,-99) , 
2, -0.214081, 0, 0, 0.498884,-99) , 
7, -1.85716, 1, 0, 0.500016,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0212008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475676,-99) , 
4, 0.999048, 0, 0, 0.50285,-99) , 
9, 0.880707, 1, 0, 0.505116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496458,-99) , 
8, -2.85263, 1, 0, 0.505896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447379,-99) , 
7, -0.484634, 1, 0, 0.474715,-99) , 
6, -951.286, 1, 0, 0.492641,-99) , 
8, -1.22107, 0, 0, 0.50155,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0183274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998096, 1, 1, 0.506088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4702,-99) , 
3, 9.50856, 1, 0, 0.504293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485898,-99) , 
5, 0.0045303, 1, 0, 0.494107,-99) , 
5, 0.023785, 0, 0, 0.496198,-99) , 
9, 2.12583, 1, 0, 0.50051,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0107198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489957,-99) , 
8, -1.13445, 1, 0, 0.514524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49378,-99) , 
6, -951.286, 1, 0, 0.498548,-99) , 
7, -1.85715, 1, 0, 0.499457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469494,-99) , 
4, 0.997619, 0, 0, 0.498627,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0118278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142705, 0, 1, 0.522786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497015,-99) , 
0, 0.492376, 1, 0, 0.498585,-99) , 
4, 0.999048, 1, 0, 0.500258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483153,-99) , 
3, 9.47676, 1, 0, 0.499487,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0108648);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490834,-99) , 
4, 0.999955, 0, 0, 0.516399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476114,-99) , 
7, -1.35374, 0, 0, 0.500619,-99) , 
7, -1.57144, 1, 0, 0.502068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461446,-99) , 
0, 0.497138, 0, 0, 0.486128,-99) , 
4, 0.999048, 0, 0, 0.50097,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.00750843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499152,-99) , 
0, 0.491424, 1, 0, 0.500017,-99) , 
7, -2.14284, 1, 0, 0.501065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473087,-99) , 
4, 0.998571, 0, 0, 0.499758,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0172782);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4926,-99) , 
3, 2.36562, 1, 0, 0.519456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491152,-99) , 
8, 1.49508, 0, 0, 0.49544,-99) , 
4, 0.999048, 1, 0, 0.49707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479231,-99) , 
3, 9.48998, 1, 0, 0.496275,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0126754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.5854, 1, 1, 0.512681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496013,-99) , 
8, 2.47218, 0, 0, 0.499393,-99) , 
9, -0.427327, 1, 0, 0.500709,-99) , 
NN(
0, 
0, 
-1, -0.143413, 0, -1, 0.482157,-99) , 
0, 0.491424, 0, 0, 0.499711,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0142486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.294553, 0, 1, 0.506632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474056,-99) , 
8, 0.856737, 0, 0, 0.498779,-99) , 
9, 2.25853, 1, 0, 0.503296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478718,-99) , 
9, 14.3928, 1, 0, 0.502325,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0211503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552742,-99) , 
NN(
0, 
0, 
-1, 3.10112, 1, -1, 0.497443,-99) , 
8, 1.77015, 0, 0, 0.50102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471889,-99) , 
5, 0.00452717, 1, 0, 0.488182,-99) , 
5, 0.0237702, 0, 0, 0.491496,-99) , 
9, 3.86195, 1, 0, 0.498433,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.00742404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527345,-99) , 
NN(
NN(
0, 
0, 
-1, 9.26338, 0, 1, 0.502127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482172,-99) , 
4, 0.998571, 0, 0, 0.501178,-99) , 
7, -2.14286, 1, 0, 0.502076,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0117127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51175, 0, 1, 0.504632,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.493834,-99) , 
9, 3.86195, 1, 0, 0.501573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478181,-99) , 
4, 0.998571, 0, 0, 0.500471,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0113988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44703, 1, 1, 0.521766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498112,-99) , 
7, -1.85715, 1, 0, 0.499897,-99) , 
4, 0.999048, 1, 0, 0.501387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474206,-99) , 
3, 9.25366, 1, 0, 0.500101,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0127423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.86297, 1, 1, 0.522264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492986,-99) , 
7, -2.2517, 0, 0, 0.513613,-99) , 
NN(
NN(
0, 
0, 
-1, 0.673975, 0, 1, 0.504828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491183,-99) , 
6, -951.286, 0, 0, 0.495383,-99) , 
9, 2.75866, 1, 0, 0.501046,-99) , 
7, -1.57144, 1, 0, 0.502195,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.010604);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499758,-99) , 
8, 1.82263, 0, 0, 0.503038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484276,-99) , 
6, -951.286, 1, 0, 0.494437,-99) , 
9, 3.71406, 1, 0, 0.500673,-99) , 
7, 1.8571, 0, 0, 0.501523,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0130849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489796,-99) , 
9, 4.75887, 1, 0, 0.511481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499823,-99) , 
7, 1.85702, 0, 0, 0.500663,-99) , 
1, 0.00340015, 0, 0, 0.503969,-99) , 
NN(
0, 
0, 
-1, -0.143708, 1, -1, 0.480093,-99) , 
5, 0.0238055, 1, 0, 0.502562,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0111264);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.18172, 0, 1, 0.504925,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.485844,-99) , 
4, 0.999048, 0, 0, 0.503605,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.00656915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.014019, 1, 1, 0.51159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474306,-99) , 
7, -1.35376, 0, 0, 0.499795,-99) , 
7, -1.57144, 1, 0, 0.500877,-99) , 
NN(
0, 
0, 
-1, 0.489972, 0, -1, 0.485212,-99) , 
0, 0.491424, 0, 0, 0.500034,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.00822965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481775,-99) , 
3, 7.25344, 1, 0, 0.500615,-99) , 
4, 0.998095, 1, 0, 0.501986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48436,-99) , 
3, 9.47906, 1, 0, 0.501191,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.010662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494357,-99) , 
7, -2.23808, 0, 0, 0.520031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494116,-99) , 
3, 4.80631, 1, 0, 0.501354,-99) , 
7, -1.85712, 1, 0, 0.502427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478003,-99) , 
0, 0.505709, 1, 0, 0.501745,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0171967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490691,-99) , 
7, -0.551121, 1, 0, 0.498596,-99) , 
7, 1.28519, 0, 0, 0.502428,-99) , 
NN(
0, 
0, 
-1, 1.85709, 1, -1, 0.494517,-99) , 
6, -951.286, 0, 0, 0.497558,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0123289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495775,-99) , 
3, 8.78744, 0, 0, 0.496761,-99) , 
0, 0.504757, 0, 0, 0.497851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467476,-99) , 
9, 1.00419, 1, 0, 0.485087,-99) , 
4, 0.999048, 0, 0, 0.496972,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.00720195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499272,-99) , 
2, -0.198697, 1, 0, 0.50008,-99) , 
3, 9.26727, 0, 0, 0.501141,-99) , 
NN(
0, 
0, 
-1, -0.142888, 0, -1, 0.481122,-99) , 
4, 0.999048, 0, 0, 0.499768,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.00794586);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.4877, 0, 1, 0.502629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468796,-99) , 
7, 0.142595, 0, 0, 0.487574,-99) , 
4, 0.999048, 0, 0, 0.501592,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0144609);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498668,-99) , 
8, 0.731409, 0, 0, 0.501808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489512,-99) , 
5, 0.0237823, 0, 0, 0.49174,-99) , 
9, 2.79622, 1, 0, 0.497965,-99) , 
7, -2.1429, 1, 0, 0.498935,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0127494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498763,-99) , 
8, 0.319005, 0, 0, 0.505233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477713,-99) , 
4, 0.999773, 0, 0, 0.498105,-99) , 
7, -0.428619, 0, 0, 0.502596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475304,-99) , 
4, 0.997619, 0, 0, 0.501851,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0117233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0106871, 0, 1, 0.504408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46851,-99) , 
1, -0.0248576, 0, 0, 0.503384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469948,-99) , 
1, 0.0249097, 1, 0, 0.502469,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0112761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.425868, 0, 1, 0.50565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49605,-99) , 
5, 0.02377, 0, 0, 0.497568,-99) , 
9, 2.25864, 1, 0, 0.502054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479379,-99) , 
0, 0.505709, 1, 0, 0.501416,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0167729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.940404, 1, 1, 0.530082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491975,-99) , 
7, -0.428582, 0, 0, 0.499511,-99) , 
9, 1.19639, 1, 0, 0.502081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495319,-99) , 
9, -0.901456, 1, 0, 0.502288,-99) , 
NN(
0, 
0, 
-1, -0.189002, 1, -1, 0.481583,-99) , 
6, -951.286, 1, 0, 0.493598,-99) , 
8, -1.02134, 0, 0, 0.499379,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.00674827);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.1326, 1, 1, 0.501751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456347,-99) , 
3, 5.19089, 1, 0, 0.485478,-99) , 
2, -0.214229, 0, 0, 0.500876,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0141063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.61057, 0, 1, 0.521441,-99) , 
NN(
0, 
0, 
-1, 2.52259, 1, -1, 0.497824,-99) , 
8, 0.799935, 0, 0, 0.501603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494824,-99) , 
5, 0.0237786, 0, 0, 0.498982,-99) , 
NN(
0, 
0, 
-1, 2.59858, 0, -1, 0.482148,-99) , 
8, 5.54709, 0, 0, 0.492561,-99) , 
9, 3.59679, 1, 0, 0.498977,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0107236);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498582,-99) , 
5, 0.0124583, 0, 0, 0.501041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469911,-99) , 
5, 0.0237849, 1, 0, 0.499501,-99) , 
8, 21.6619, 0, 0, 0.500195,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.00680031);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.14285, 1, 1, 0.502397,-99) , 
NN(
0, 
0, 
-1, 1.22158, 1, -1, 0.482769,-99) , 
4, 0.999048, 0, 0, 0.501069,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0118996);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498728,-99) , 
8, 2.08223, 0, 0, 0.501365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489223,-99) , 
7, -0.686365, 1, 0, 0.493111,-99) , 
9, 4.37512, 1, 0, 0.499402,-99) , 
7, 1.85707, 0, 0, 0.50023,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0134815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47656,-99) , 
7, -1.85993, 0, 0, 0.505733,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.498168,-99) , 
9, 2.17711, 1, 0, 0.502316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475104,-99) , 
1, -0.0233341, 0, 0, 0.501492,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0074488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0134494, 0, 1, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46144,-99) , 
1, -0.0256806, 0, 0, 0.501194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479744,-99) , 
1, 0.0241607, 1, 0, 0.500579,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.00786348);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499141,-99) , 
5, 0.0144282, 0, 0, 0.50123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475538,-99) , 
1, -0.0252495, 0, 0, 0.50052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47797,-99) , 
1, 0.0245512, 1, 0, 0.499881,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0131685);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495592,-99) , 
9, 2.68887, 1, 0, 0.501744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471458,-99) , 
9, -1.09772, 0, 0, 0.500769,-99) , 
7, -2.14287, 1, 0, 0.501442,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0168156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619256, 0, 1, 0.506494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489884,-99) , 
8, 7.28428, 0, 0, 0.496955,-99) , 
9, 4.02215, 1, 0, 0.503636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477435,-99) , 
4, 0.999909, 0, 0, 0.501208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458718,-99) , 
4, 0.999524, 0, 0, 0.496653,-99) , 
7, -0.714302, 0, 0, 0.501696,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0119229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496719,-99) , 
7, 1.85693, 0, 0, 0.497667,-99) , 
4, 0.998095, 1, 0, 0.499061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47726,-99) , 
3, 9.2711, 1, 0, 0.498033,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0180605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483644,-99) , 
3, 4.67796, 1, 0, 0.499689,-99) , 
0, 0.495868, 0, 0, 0.503994,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0106705, 0, 1, 0.511202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480243,-99) , 
8, 2.13066, 0, 0, 0.48836,-99) , 
6, -951.286, 0, 0, 0.497152,-99) , 
0, 0.499995, 1, 0, 0.501852,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0135045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488241,-99) , 
9, 3.36395, 1, 0, 0.507756,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.497507,-99) , 
1, 0.00566885, 0, 0, 0.49962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446892,-99) , 
9, 5.95637, 0, 0, 0.478355,-99) , 
5, 0.0238055, 1, 0, 0.498368,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.014963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495317,-99) , 
7, -2.2381, 0, 0, 0.517852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482354,-99) , 
5, 0.02377, 1, 0, 0.50384,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.491581,-99) , 
7, -0.700688, 0, 0, 0.500912,-99) , 
7, -1.85714, 1, 0, 0.501879,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.012542);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.87593, 1, 1, 0.514132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497425,-99) , 
5, 0.0135981, 0, 0, 0.499445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466562,-99) , 
5, 0.0237976, 1, 0, 0.49811,-99) , 
9, 9.15127, 0, 0, 0.499729,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0183441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496926,-99) , 
4, 0.999989, 0, 0, 0.503822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486533,-99) , 
7, 0.999666, 0, 0, 0.492994,-99) , 
4, 0.999773, 0, 0, 0.502108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474098,-99) , 
4, 0.997619, 0, 0, 0.50134,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0137121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.82409, 1, 1, 0.509252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474587,-99) , 
9, 2.78249, 1, 0, 0.501004,-99) , 
8, 1.71889, 0, 0, 0.50342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485137,-99) , 
9, 14.7054, 1, 0, 0.502729,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.00941492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498802,-99) , 
4, 0.999524, 1, 0, 0.50101,-99) , 
3, 9.36646, 0, 0, 0.50159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482298,-99) , 
7, -0.55207, 0, 0, 0.493489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470417,-99) , 
7, 0.427212, 1, 0, 0.486043,-99) , 
0, 0.492376, 0, 0, 0.500338,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0155798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498292,-99) , 
5, 0.00226529, 1, 0, 0.503123,-99) , 
5, 0.023785, 0, 0, 0.504764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498407,-99) , 
8, -0.899142, 0, 0, 0.502661,-99) , 
NN(
0, 
0, 
-1, 0.207968, 0, -1, 0.480447,-99) , 
9, 1.49619, 1, 0, 0.497872,-99) , 
8, 0.298751, 0, 0, 0.501124,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0108397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499877,-99) , 
7, -1.85714, 1, 0, 0.501639,-99) , 
3, 9.26585, 0, 0, 0.503665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482845,-99) , 
0, 0.497138, 0, 0, 0.497136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468511,-99) , 
7, -0.714152, 0, 0, 0.489503,-99) , 
4, 0.999524, 0, 0, 0.502062,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0125546);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482165,-99) , 
7, -1.85762, 0, 0, 0.505611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499032,-99) , 
7, -0.999567, 1, 0, 0.500671,-99) , 
9, 2.29865, 1, 0, 0.503419,-99) , 
0, 0.490471, 1, 0, 0.503909,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0126744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.05416, 0, 1, 0.512731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481878,-99) , 
7, -1.28572, 0, 0, 0.500724,-99) , 
9, 0.384148, 1, 0, 0.503347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479109,-99) , 
0, 0.490471, 0, 0, 0.502514,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0112118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498402,-99) , 
8, 3.24191, 0, 0, 0.500154,-99) , 
3, 9.27267, 0, 0, 0.502279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492134,-99) , 
0, 0.49936, 1, 0, 0.500637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476414,-99) , 
0, 0.495233, 0, 0, 0.492896,-99) , 
4, 0.999524, 0, 0, 0.501211,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0147728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488452,-99) , 
8, 15.7591, 1, 0, 0.505464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472597,-99) , 
1, 0.0260024, 1, 0, 0.504601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487523,-99) , 
1, -0.0238562, 0, 0, 0.504099,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0133339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.955745, 1, 1, 0.529225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49373,-99) , 
6, -951.286, 1, 0, 0.513549,-99) , 
NN(
NN(
0, 
0, 
-1, 4.98915, 1, 1, 0.508448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430498,-99) , 
7, -1.85715, 0, 0, 0.497731,-99) , 
8, 2.47344, 0, 0, 0.501021,-99) , 
9, -0.427327, 1, 0, 0.502264,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0156552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485004,-99) , 
7, -2.2381, 0, 0, 0.512289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497766,-99) , 
8, 0.843639, 0, 0, 0.500868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490278,-99) , 
7, 1.84353, 0, 0, 0.491559,-99) , 
9, 2.83383, 1, 0, 0.497306,-99) , 
7, -1.85715, 1, 0, 0.498148,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.00856572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.02821, 0, 1, 0.519927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492641,-99) , 
0, 0.496186, 0, 0, 0.511343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499042,-99) , 
3, 9.24801, 0, 0, 0.500078,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.481143,-99) , 
4, 0.999048, 0, 0, 0.498908,-99) , 
9, -0.393077, 1, 0, 0.500179,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0174509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494264,-99) , 
9, 3.67911, 1, 0, 0.503462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478938,-99) , 
6, -951.286, 0, 0, 0.48918,-99) , 
5, 0.00113293, 0, 0, 0.50163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45481,-99) , 
9, 6.0291, 0, 0, 0.483358,-99) , 
5, 0.0237918, 1, 0, 0.500556,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0142018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494532,-99) , 
4, 0.999977, 0, 0, 0.511111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497483,-99) , 
7, -1.85716, 1, 0, 0.498692,-99) , 
3, 4.66663, 0, 0, 0.501259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487481,-99) , 
0, 0.49809, 1, 0, 0.494696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47367,-99) , 
7, -0.42874, 0, 0, 0.487185,-99) , 
4, 0.999524, 0, 0, 0.499659,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.00887222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.503955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485273,-99) , 
3, 9.50217, 1, 0, 0.50312,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0173491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.19619, 1, 1, 0.511199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47164,-99) , 
7, 1.57138, 1, 0, 0.500034,-99) , 
6, -951.286, 0, 0, 0.504299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495833,-99) , 
8, -0.868811, 0, 0, 0.499303,-99) , 
NN(
0, 
0, 
-1, 0.891215, 0, -1, 0.466831,-99) , 
9, 1.63412, 1, 0, 0.495517,-99) , 
8, -0.0212058, 0, 0, 0.500066,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.00752632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.33784, 1, 1, 0.524985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49972,-99) , 
9, 10.4451, 0, 0, 0.500957,-99) , 
4, 0.999048, 1, 0, 0.502606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482302,-99) , 
3, 9.37635, 1, 0, 0.501663,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.00683163);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48143,-99) , 
3, 9.47659, 1, 0, 0.501746,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.00760056);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.21456, 1, 1, 0.502736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474571,-99) , 
3, 9.27699, 1, 0, 0.501416,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0124985);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518556,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494382,-99) , 
8, -1.83448, 0, 0, 0.506439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486023,-99) , 
7, -0.673464, 0, 0, 0.497598,-99) , 
9, 0.735262, 1, 0, 0.499947,-99) , 
7, -2.14286, 1, 0, 0.500566,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0106917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497083,-99) , 
0, 0.504757, 0, 0, 0.498214,-99) , 
4, 0.998095, 1, 0, 0.499394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482957,-99) , 
3, 9.25366, 1, 0, 0.498603,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0185926);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484367,-99) , 
7, -1.70197, 0, 0, 0.518675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465819,-99) , 
8, -2.5479, 0, 0, 0.492639,-99) , 
6, -951.286, 1, 0, 0.507718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497489,-99) , 
3, 9.26585, 0, 0, 0.498795,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.484,-99) , 
4, 0.999524, 0, 0, 0.497379,-99) , 
9, 0.367895, 1, 0, 0.499585,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0171369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999653, 1, 1, 0.509528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46672,-99) , 
9, 2.923, 1, 0, 0.501913,-99) , 
8, 1.99709, 0, 0, 0.50427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478363,-99) , 
4, 0.997619, 0, 0, 0.503556,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.010538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496546,-99) , 
3, 1.01151, 1, 0, 0.498373,-99) , 
4, 0.997619, 1, 0, 0.499529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487246,-99) , 
3, 9.37635, 1, 0, 0.498958,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00996279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499383,-99) , 
8, 2.21663, 0, 0, 0.502445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480924,-99) , 
8, 15.7591, 1, 0, 0.501324,-99) , 
NN(
0, 
0, 
-1, -0.143348, 1, -1, 0.482721,-99) , 
5, 0.0237976, 1, 0, 0.500236,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0116352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0133879, 0, 1, 0.504976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477102,-99) , 
1, -0.0255589, 0, 0, 0.504215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48211,-99) , 
1, 0.0242713, 1, 0, 0.503589,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00908108);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.11468, 0, 1, 0.503545,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.481811,-99) , 
4, 0.999048, 0, 0, 0.502068,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0104084);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498985,-99) , 
9, 4.55665, 1, 0, 0.506982,-99) , 
NN(
0, 
0, 
-1, 2.98117, 1, -1, 0.496648,-99) , 
8, 2.04142, 0, 0, 0.49944,-99) , 
8, 22.147, 0, 0, 0.500111,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.00703926);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480593,-99) , 
3, 9.48998, 1, 0, 0.501799,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0164102);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4931,-99) , 
8, -1.61885, 0, 0, 0.505603,-99) , 
NN(
0, 
0, 
-1, -1.40813, 0, -1, 0.495494,-99) , 
9, 0.811335, 1, 0, 0.498338,-99) , 
7, -2.14285, 1, 0, 0.499109,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.00822996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48773,-99) , 
0, 0.49088, 0, 0, 0.502642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488317,-99) , 
0, 0.504757, 1, 0, 0.501928,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0066329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4992,-99) , 
7, -1.85714, 1, 0, 0.500314,-99) , 
0, 0.490471, 1, 0, 0.501083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474311,-99) , 
4, 0.998095, 0, 0, 0.500185,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0155815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492909,-99) , 
4, 0.999909, 0, 0, 0.513643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496436,-99) , 
4, 0.999955, 1, 0, 0.500129,-99) , 
3, 4.70642, 0, 0, 0.502885,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.485965,-99) , 
4, 0.999048, 0, 0, 0.501727,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.011194);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493761,-99) , 
9, 7.46086, 1, 0, 0.506632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498717,-99) , 
5, 0.0135977, 0, 0, 0.500672,-99) , 
7, 0.428543, 0, 0, 0.502624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462718,-99) , 
9, 5.84247, 0, 0, 0.484079,-99) , 
5, 0.0237961, 1, 0, 0.501544,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0122024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.846389, 1, 1, 0.519096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489617,-99) , 
7, -2.26531, 0, 0, 0.513617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497901,-99) , 
9, 1.80139, 1, 0, 0.501355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486537,-99) , 
7, -1.08165, 0, 0, 0.500631,-99) , 
7, -1.28573, 1, 0, 0.502447,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.00847977);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214134, 1, 1, 0.503469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479054,-99) , 
3, 9.47969, 1, 0, 0.502392,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0121583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497793,-99) , 
2, -0.0276706, 1, 0, 0.500697,-99) , 
3, 9.26585, 0, 0, 0.502223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474155,-99) , 
9, 0.912513, 1, 0, 0.485952,-99) , 
6, -951.286, 0, 0, 0.493187,-99) , 
4, 0.999524, 0, 0, 0.50119,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0128316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.0069, 1, 1, 0.531661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498959,-99) , 
6, -951.286, 1, 0, 0.517239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499252,-99) , 
9, 3.84056, 1, 0, 0.505429,-99) , 
NN(
0, 
0, 
-1, 2.47067, 1, -1, 0.49593,-99) , 
8, 0.832105, 0, 0, 0.500165,-99) , 
9, -0.438634, 1, 0, 0.50185,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0196108);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488101,-99) , 
8, 14.2224, 1, 0, 0.507471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489606,-99) , 
5, 0.0238055, 1, 0, 0.506379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494618,-99) , 
6, -951.286, 0, 0, 0.500602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457486,-99) , 
4, 0.999524, 0, 0, 0.495985,-99) , 
7, -0.714298, 0, 0, 0.503501,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.00853812);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.503665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483729,-99) , 
3, 9.25773, 1, 0, 0.502709,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00865341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.81262, 0, 1, 0.503118,-99) , 
NN(
0, 
0, 
-1, 4.62779, 1, -1, 0.491841,-99) , 
4, 0.999728, 0, 0, 0.501616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480321,-99) , 
4, 0.998095, 0, 0, 0.500896,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.009337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498707,-99) , 
0, 0.502852, 0, 0, 0.49999,-99) , 
4, 0.998571, 1, 0, 0.50187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483033,-99) , 
3, 9.26585, 1, 0, 0.500969,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.00702492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498529,-99) , 
0, 0.491424, 1, 0, 0.499273,-99) , 
4, 0.998572, 1, 0, 0.500506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489269,-99) , 
3, 9.48356, 1, 0, 0.500001,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0152319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495277,-99) , 
8, 0.332609, 0, 0, 0.499825,-99) , 
3, 9.26659, 0, 0, 0.501341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473949,-99) , 
0, 0.494598, 0, 0, 0.496349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466292,-99) , 
0, 0.500947, 1, 0, 0.488091,-99) , 
4, 0.999524, 0, 0, 0.499842,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0108174);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490505,-99) , 
8, 11.2875, 1, 0, 0.502644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477596,-99) , 
1, 0.0245512, 1, 0, 0.501942,-99) , 
7, -2.14286, 1, 0, 0.502542,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.00851012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.93013, 1, 1, 0.528674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49926,-99) , 
7, -2.14287, 1, 0, 0.500213,-99) , 
4, 0.999048, 1, 0, 0.502183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479683,-99) , 
3, 9.51008, 1, 0, 0.501189,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0190829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.570551, 0, 1, 0.51605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497213,-99) , 
0, 0.499043, 0, 0, 0.502869,-99) , 
9, 2.67064, 1, 0, 0.508812,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499083,-99) , 
8, -1.54912, 0, 0, 0.505782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488371,-99) , 
8, 4.6169, 0, 0, 0.496744,-99) , 
9, 1.42198, 1, 0, 0.501373,-99) , 
7, 0.428534, 0, 0, 0.503813,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.00681097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.21433, 1, 1, 0.502703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482398,-99) , 
3, 9.26727, 1, 0, 0.501746,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0241793);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493964,-99) , 
4, 0.999998, 0, 0, 0.503619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488921,-99) , 
9, 1.3569, 1, 0, 0.4965,-99) , 
4, 0.999977, 0, 0, 0.500212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514969,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.478414,-99) , 
8, -2.19605, 1, 0, 0.487814,-99) , 
4, 0.999524, 0, 0, 0.498803,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.00629836);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477966,-99) , 
3, 9.27946, 1, 0, 0.501098,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.00768644);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489811,-99) , 
4, 0.99932, 0, 0, 0.501556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482841,-99) , 
4, 0.997619, 0, 0, 0.501053,-99) , 
7, 1.85709, 0, 0, 0.501765,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0134);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 13.5141, 1, 1, 0.512023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493485,-99) , 
2, 0.139519, 0, 0, 0.50962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496234,-99) , 
8, 2.43062, 0, 0, 0.498567,-99) , 
2, 0.071499, 0, 0, 0.500286,-99) , 
9, 9.59407, 0, 0, 0.501367,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0135698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495254,-99) , 
2, -0.0228265, 1, 0, 0.49936,-99) , 
2, 0.132653, 0, 0, 0.500278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486926,-99) , 
2, 0.214284, 1, 0, 0.499607,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0186358);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484739,-99) , 
7, -1.72862, 0, 0, 0.517348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4694,-99) , 
8, -2.62889, 0, 0, 0.493045,-99) , 
6, -951.286, 1, 0, 0.50697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492694,-99) , 
9, 3.97875, 1, 0, 0.498894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461841,-99) , 
9, 1.98246, 0, 0, 0.482634,-99) , 
7, -1.28572, 0, 0, 0.497469,-99) , 
9, 0.327935, 1, 0, 0.499449,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0125225);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.12238, 0, 1, 0.512866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496263,-99) , 
6, -951.286, 0, 0, 0.499,-99) , 
9, 0.327935, 1, 0, 0.501897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471053,-99) , 
0, 0.505709, 1, 0, 0.501032,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.00990907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.503219,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.490184,-99) , 
4, 0.999796, 0, 0, 0.501236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48035,-99) , 
4, 0.998571, 0, 0, 0.500246,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0140746);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496067,-99) , 
3, 1.91095, 1, 0, 0.501333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478817,-99) , 
3, 9.47659, 1, 0, 0.500339,-99) , 
8, 19.1099, 0, 0, 0.501328,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00816628);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.28584, 0, 1, 0.503468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483529,-99) , 
4, 0.998571, 0, 0, 0.502524,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.00768267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.987305, 1, 1, 0.522141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496377,-99) , 
6, -951.286, 1, 0, 0.51104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492716,-99) , 
7, -1.00007, 0, 0, 0.499433,-99) , 
0, 0.505709, 0, 0, 0.500073,-99) , 
9, -0.105682, 1, 0, 0.501631,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.015624);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465538,-99) , 
7, 1.77546, 1, 0, 0.501106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490837,-99) , 
7, 1.28511, 0, 0, 0.494786,-99) , 
6, -951.286, 1, 0, 0.498664,-99) , 
7, -2.14286, 1, 0, 0.49932,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00971779);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499278,-99) , 
7, -2.2381, 0, 0, 0.518969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494415,-99) , 
6, -951.286, 1, 0, 0.498812,-99) , 
7, -1.85715, 1, 0, 0.499985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475003,-99) , 
4, 0.998095, 0, 0, 0.499127,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0108157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499886,-99) , 
8, -2.06531, 0, 0, 0.506364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494594,-99) , 
6, -951.286, 0, 0, 0.49731,-99) , 
9, 0.329584, 1, 0, 0.499183,-99) , 
NN(
0, 
0, 
-1, 0.489972, 1, -1, 0.480454,-99) , 
0, 0.491424, 0, 0, 0.498182,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.00949312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496885,-99) , 
5, 0.00603337, 0, 0, 0.499883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473799,-99) , 
1, -0.025343, 0, 0, 0.499172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478618,-99) , 
1, 0.0244476, 1, 0, 0.498597,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0176591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488826,-99) , 
2, -0.00424776, 1, 0, 0.50175,-99) , 
2, 0.0705247, 0, 0, 0.507098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49316,-99) , 
3, 3.60937, 1, 0, 0.505491,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.492803,-99) , 
8, 6.25872, 0, 0, 0.495323,-99) , 
9, -0.0509712, 1, 0, 0.497065,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0202041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49651,-99) , 
7, -0.753645, 1, 0, 0.500354,-99) , 
7, 1.28568, 0, 0, 0.504161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493231,-99) , 
9, 0.737391, 1, 0, 0.498593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439435,-99) , 
7, -2.14284, 0, 0, 0.496168,-99) , 
6, -951.286, 0, 0, 0.499227,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.00898665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.226847, 0, 1, 0.505537,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497643,-99) , 
9, 2.0662, 1, 0, 0.501825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479923,-99) , 
1, -0.0245694, 0, 0, 0.501208,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0168691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48722,-99) , 
4, 0.999887, 0, 0, 0.511172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496423,-99) , 
2, -0.0177564, 1, 0, 0.500222,-99) , 
3, 4.69728, 0, 0, 0.502449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475264,-99) , 
4, 0.997619, 0, 0, 0.501709,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0195799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499425,-99) , 
4, 0.999977, 0, 0, 0.508186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484518,-99) , 
4, 0.999524, 0, 0, 0.506525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492698,-99) , 
2, 0.214538, 0, 0, 0.494793,-99) , 
9, -1.28615, 1, 0, 0.497717,-99) , 
8, -0.174817, 0, 0, 0.502486,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0127543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.80293, 1, 1, 0.514136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490421,-99) , 
7, -1.00016, 0, 0, 0.509394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497543,-99) , 
2, 0.0180622, 0, 0, 0.500584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480632,-99) , 
2, -0.302601, 0, 0, 0.499869,-99) , 
2, 0.0715065, 0, 0, 0.501336,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0113264);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499068,-99) , 
3, 4.73446, 1, 0, 0.503553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476074,-99) , 
7, 0.00660229, 0, 0, 0.490777,-99) , 
0, 0.503804, 1, 0, 0.502549,-99) , 
7, 1.85704, 0, 0, 0.50338,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.015076);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520411,-99) , 
NN(
NN(
0, 
0, 
-1, 0.457376, 0, 1, 0.507538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490574,-99) , 
6, -951.286, 1, 0, 0.499479,-99) , 
7, 0.306096, 0, 0, 0.502542,-99) , 
7, -2.14286, 1, 0, 0.503145,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.00630064);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517347,-99) , 
NN(
NN(
0, 
0, 
-1, -1.26563, 1, 1, 0.515618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466956,-99) , 
7, -1.85715, 0, 0, 0.498797,-99) , 
9, -0.691151, 1, 0, 0.500044,-99) , 
8, 22.0484, 0, 0, 0.500724,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.00950531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483649,-99) , 
3, 7.08906, 1, 0, 0.501555,-99) , 
3, 9.26727, 0, 0, 0.50242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467307,-99) , 
9, 1.22158, 1, 0, 0.489715,-99) , 
4, 0.999048, 0, 0, 0.501554,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.00688838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499776,-99) , 
3, 0.435925, 1, 0, 0.500977,-99) , 
NN(
0, 
0, 
-1, 7.87095, 1, -1, 0.48287,-99) , 
3, 6.38391, 1, 0, 0.499637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477475,-99) , 
3, 9.50668, 1, 0, 0.498672,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0138047);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476899,-99) , 
4, 0.999773, 0, 0, 0.509377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497719,-99) , 
3, 0.555656, 1, 0, 0.499533,-99) , 
3, 4.69368, 0, 0, 0.501543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474913,-99) , 
4, 0.997619, 0, 0, 0.500833,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.00831924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499496,-99) , 
6, -951.286, 0, 0, 0.502328,-99) , 
0, 0.50394, 0, 0, 0.502938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484049,-99) , 
0, 0.504757, 1, 0, 0.501999,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.00703881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.410997, 1, 1, 0.508559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483701,-99) , 
4, 0.998572, 0, 0, 0.500528,-99) , 
9, 0.15525, 1, 0, 0.501972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477014,-99) , 
0, 0.505709, 1, 0, 0.501271,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.00898057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483845,-99) , 
9, 14.1216, 1, 0, 0.501958,-99) , 
7, 1.8571, 0, 0, 0.502473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469048,-99) , 
4, 0.997619, 0, 0, 0.501593,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.00745403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499349,-99) , 
4, 0.998571, 1, 0, 0.500138,-99) , 
7, -1.85715, 1, 0, 0.500903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506309,-99) , 
NN(
0, 
0, 
-1, 0.777306, 0, -1, 0.477515,-99) , 
6, -951.286, 0, 0, 0.488779,-99) , 
0, 0.502852, 1, 0, 0.499481,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.00653129);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.502469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473736,-99) , 
4, 0.998095, 0, 0, 0.501508,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.00635326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499496,-99) , 
2, -0.213729, 1, 0, 0.500247,-99) , 
4, 0.998571, 1, 0, 0.50139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478957,-99) , 
3, 9.33289, 1, 0, 0.500358,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.00499136);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53034,-99) , 
NN(
0, 
0, 
-1, -0.023901, 0, -1, 0.498509,-99) , 
7, -2.14286, 1, 0, 0.499617,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.00775006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476671,-99) , 
3, 9.19867, 1, 0, 0.501633,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.00470842);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27699, 0, 1, 0.50195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483199,-99) , 
4, 0.997619, 0, 0, 0.501441,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00621404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496762,-99) , 
7, 2.1156, 1, 0, 0.509277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48828,-99) , 
4, 0.999048, 0, 0, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472573,-99) , 
7, 1.3537, 1, 0, 0.499186,-99) , 
7, 1.57139, 0, 0, 0.499904,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0153231);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522919,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493907,-99) , 
9, 3.90755, 1, 0, 0.500824,-99) , 
NN(
0, 
0, 
-1, 1.23627, 1, -1, 0.493563,-99) , 
8, 0.178998, 0, 0, 0.497035,-99) , 
7, 1.8571, 0, 0, 0.498162,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.00601363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0179002, 0, 1, 0.502024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479009,-99) , 
1, -0.025063, 0, 0, 0.501373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481345,-99) , 
1, 0.0246829, 1, 0, 0.500817,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0114957);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499044,-99) , 
9, 4.36781, 1, 0, 0.50593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45755,-99) , 
9, 3.00552, 1, 0, 0.498619,-99) , 
8, 1.93041, 0, 0, 0.500651,-99) , 
8, 22.0484, 0, 0, 0.501365,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0153294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493679,-99) , 
9, 14.0862, 1, 0, 0.504281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495788,-99) , 
9, 3.79753, 1, 0, 0.503778,-99) , 
NN(
0, 
0, 
-1, 2.39797, 1, -1, 0.493722,-99) , 
8, 1.65787, 0, 0, 0.496394,-99) , 
9, 10.1321, 0, 0, 0.49706,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.018496);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491255,-99) , 
8, 2.61646, 1, 0, 0.512215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487387,-99) , 
7, -0.428109, 1, 0, 0.496867,-99) , 
6, 0.142841, 1, 0, 0.504701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468163,-99) , 
7, 1.77546, 1, 0, 0.499742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447363,-99) , 
7, -2.14285, 0, 0, 0.497548,-99) , 
6, -951.286, 0, 0, 0.500287,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0144216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491852,-99) , 
9, 12.8185, 1, 0, 0.50723,-99) , 
7, 1.00041, 0, 0, 0.510715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538942,-99) , 
NN(
0, 
0, 
-1, 3.13845, 1, -1, 0.496568,-99) , 
8, 2.37821, 0, 0, 0.498713,-99) , 
8, 3.27233, 0, 0, 0.501638,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.00982071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49503,-99) , 
9, 12.3844, 1, 0, 0.505382,-99) , 
7, 0.715119, 0, 0, 0.508285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47908,-99) , 
9, 3.65943, 1, 0, 0.498404,-99) , 
8, 4.72822, 0, 0, 0.499488,-99) , 
8, 6.526, 0, 0, 0.500921,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.00983374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497795,-99) , 
4, 0.998095, 1, 0, 0.499042,-99) , 
3, 9.49987, 0, 0, 0.49994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475289,-99) , 
0, 0.490562, 1, 0, 0.488279,-99) , 
0, 0.492376, 0, 0, 0.499002,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0102135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.47972, 1, 1, 0.516102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486756,-99) , 
2, -0.207317, 0, 0, 0.494276,-99) , 
3, 4.93047, 1, 0, 0.507054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497639,-99) , 
9, -0.852715, 1, 0, 0.49867,-99) , 
9, 11.0921, 0, 0, 0.499592,-99) , 
2, -0.0712741, 1, 0, 0.500811,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0117385);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498607,-99) , 
6, -951.286, 1, 0, 0.517816,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.501598,-99) , 
9, -0.579273, 1, 0, 0.512164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499566,-99) , 
9, 6.41822, 1, 0, 0.506584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457441,-99) , 
9, 2.96819, 1, 0, 0.498076,-99) , 
8, 1.62756, 0, 0, 0.501263,-99) , 
9, -0.205938, 1, 0, 0.502647,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0119311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499178,-99) , 
6, -0.469358, 1, 0, 0.504335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481234,-99) , 
6, -1.28574, 0, 0, 0.501991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461138,-99) , 
7, 1.84347, 1, 0, 0.498448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455976,-99) , 
7, -1.85715, 0, 0, 0.495518,-99) , 
6, -951.286, 0, 0, 0.498005,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0159243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482253,-99) , 
8, 2.78552, 1, 0, 0.510372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491044,-99) , 
8, 5.70113, 0, 0, 0.497163,-99) , 
6, -0.142932, 1, 0, 0.502514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479802,-99) , 
7, 1.53057, 1, 0, 0.498399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458312,-99) , 
7, -2.14285, 0, 0, 0.49669,-99) , 
6, -951.286, 0, 0, 0.498921,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0184013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499661,-99) , 
6, -0.0611895, 1, 0, 0.50525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469788,-99) , 
6, -1.28559, 0, 0, 0.501672,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.490148,-99) , 
6, -951.286, 0, 0, 0.494573,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0156376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493984,-99) , 
7, -0.143347, 1, 0, 0.501829,-99) , 
7, 1.28481, 0, 0, 0.504123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480212,-99) , 
7, 1.38091, 1, 0, 0.500166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461582,-99) , 
7, -1.85715, 0, 0, 0.497532,-99) , 
6, -951.286, 0, 0, 0.500053,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0112868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.36732, 1, 1, 0.527682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497741,-99) , 
2, 0.18909, 0, 0, 0.498958,-99) , 
4, 0.999048, 1, 0, 0.500931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479685,-99) , 
3, 9.4997, 1, 0, 0.500001,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.00816507);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.40555, 1, 1, 0.520542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498899,-99) , 
0, 0.5019, 0, 0, 0.500434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480498,-99) , 
7, 1.35369, 1, 0, 0.499807,-99) , 
7, 1.57138, 0, 0, 0.501305,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0108179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49628,-99) , 
7, -0.142879, 0, 0, 0.500767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470871,-99) , 
1, -0.0256806, 0, 0, 0.499958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478354,-99) , 
1, 0.0241607, 1, 0, 0.499354,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0166819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496889,-99) , 
2, 0.00805267, 0, 0, 0.501096,-99) , 
3, 9.2602, 0, 0, 0.503038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49265,-99) , 
7, 0.713875, 0, 0, 0.503679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464323,-99) , 
7, -0.428854, 0, 0, 0.489908,-99) , 
4, 0.999524, 0, 0, 0.501561,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.021612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494878,-99) , 
8, -0.244603, 0, 0, 0.507874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473323,-99) , 
6, -1.28565, 0, 0, 0.504426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493444,-99) , 
8, 1.88488, 0, 0, 0.497695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464025,-99) , 
7, -1.85717, 0, 0, 0.495388,-99) , 
6, -951.286, 0, 0, 0.498861,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0145548);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.505987,-99) , 
NN(
NN(
0, 
0, 
-1, 0.140648, 0, 1, 0.509694,-99) , 
NN(
0, 
0, 
-1, 9.24449, 1, -1, 0.48558,-99) , 
6, -951.286, 0, 0, 0.494818,-99) , 
3, 4.79347, 1, 0, 0.50381,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00960265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.47658, 1, 1, 0.514395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494399,-99) , 
9, 3.86195, 1, 0, 0.500591,-99) , 
7, 1.57138, 0, 0, 0.50157,-99) , 
NN(
0, 
0, 
-1, -0.143544, 0, -1, 0.486221,-99) , 
0, 0.491424, 0, 0, 0.500749,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.00721915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52787,-99) , 
NN(
NN(
0, 
0, 
-1, -0.214535, 1, 1, 0.502039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482395,-99) , 
3, 9.33289, 1, 0, 0.501123,-99) , 
7, -2.14286, 1, 0, 0.502023,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00682867);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499564,-99) , 
7, -1.84352, 1, 0, 0.500755,-99) , 
NN(
0, 
0, 
-1, -0.687207, 0, -1, 0.491442,-99) , 
2, -0.071409, 0, 0, 0.499249,-99) , 
7, 1.85709, 0, 0, 0.500108,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.018839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.71483, 1, 1, 0.50699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480204,-99) , 
6, -1.28461, 0, 0, 0.50432,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494856,-99) , 
9, 0.892358, 1, 0, 0.500066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454629,-99) , 
7, -1.85714, 0, 0, 0.497006,-99) , 
6, -951.286, 0, 0, 0.499795,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.00982706);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484973,-99) , 
3, 1.91954, 1, 0, 0.518458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498747,-99) , 
5, 0.0237918, 0, 0, 0.500013,-99) , 
4, 0.999048, 1, 0, 0.501257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483528,-99) , 
3, 9.48998, 1, 0, 0.500484,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.00870941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495628,-99) , 
7, -2.2381, 0, 0, 0.516107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491607,-99) , 
8, 13.3339, 1, 0, 0.501109,-99) , 
NN(
0, 
0, 
-1, -0.00710195, 0, -1, 0.486936,-99) , 
0, 0.492376, 0, 0, 0.499972,-99) , 
7, -1.85715, 1, 0, 0.500881,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.00924955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499209,-99) , 
6, 1.28585, 0, 0, 0.502171,-99) , 
7, 1.28619, 0, 0, 0.504665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463559,-99) , 
7, -2.07484, 0, 0, 0.498893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46958,-99) , 
7, 1.85709, 1, 0, 0.497514,-99) , 
6, -951.286, 0, 0, 0.500255,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.00855938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498641,-99) , 
9, 0.89023, 1, 0, 0.500521,-99) , 
7, -2.14286, 1, 0, 0.501384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501598,-99) , 
NN(
0, 
0, 
-1, 1.77587, 1, -1, 0.481333,-99) , 
6, -951.286, 0, 0, 0.48908,-99) , 
0, 0.502852, 1, 0, 0.499937,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0128172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495479,-99) , 
4, 0.999977, 0, 0, 0.500134,-99) , 
7, 1.8571, 0, 0, 0.501154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505009,-99) , 
NN(
0, 
0, 
-1, 0.142627, 0, -1, 0.477877,-99) , 
6, -951.286, 0, 0, 0.488582,-99) , 
4, 0.999524, 0, 0, 0.499749,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0110972);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493821,-99) , 
3, 4.80371, 1, 0, 0.501526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494886,-99) , 
7, -2.07484, 1, 0, 0.495757,-99) , 
0, 0.496185, 1, 0, 0.497538,-99) , 
7, 1.85708, 0, 0, 0.498381,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.00897797);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520837,-99) , 
NN(
NN(
0, 
0, 
-1, 2.83109, 1, 1, 0.505886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493759,-99) , 
9, 2.40309, 1, 0, 0.498493,-99) , 
7, 0.306093, 0, 0, 0.501303,-99) , 
7, -2.14286, 1, 0, 0.501943,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0106668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497338,-99) , 
2, -0.0227338, 1, 0, 0.500436,-99) , 
2, 0.132736, 0, 0, 0.501337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484612,-99) , 
2, 0.214378, 1, 0, 0.500516,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.00646512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499486,-99) , 
2, 0.275085, 0, 0, 0.500426,-99) , 
2, -0.214461, 1, 0, 0.501524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480832,-99) , 
3, 9.37618, 1, 0, 0.500585,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.00686334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499335,-99) , 
7, -2.2381, 0, 0, 0.516956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499396,-99) , 
2, 0.0510533, 0, 0, 0.500892,-99) , 
7, -1.85715, 1, 0, 0.50181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484907,-99) , 
2, 0.214319, 1, 0, 0.500968,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.00854503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495021,-99) , 
7, 1.04081, 1, 0, 0.501699,-99) , 
7, -2.14281, 1, 0, 0.502307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481109,-99) , 
4, 0.997619, 0, 0, 0.50173,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.00812322);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517079,-99) , 
NN(
NN(
0, 
0, 
-1, 8.80624, 0, 1, 0.501172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47847,-99) , 
8, -2.19341, 1, 0, 0.490589,-99) , 
4, 0.999524, 0, 0, 0.499984,-99) , 
7, 1.85709, 0, 0, 0.500707,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.00752057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499184,-99) , 
3, 4.69368, 0, 0, 0.500757,-99) , 
7, -2.14284, 1, 0, 0.501585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477292,-99) , 
4, 0.998571, 0, 0, 0.500461,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0127185);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496498,-99) , 
9, 3.72144, 1, 0, 0.503655,-99) , 
NN(
0, 
0, 
-1, 2.47338, 1, -1, 0.495855,-99) , 
8, 0.711229, 0, 0, 0.498931,-99) , 
8, 22.1562, 0, 0, 0.499824,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0133686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4376, 1, 1, 0.520913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49749,-99) , 
2, -0.017905, 1, 0, 0.500865,-99) , 
4, 0.999524, 1, 0, 0.50316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486404,-99) , 
3, 9.27716, 1, 0, 0.502361,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.00724998);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471335,-99) , 
1, -0.0256963, 0, 0, 0.501181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48438,-99) , 
1, 0.0241304, 1, 0, 0.5007,-99) , 
7, -2.14285, 1, 0, 0.5013,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0208975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.24903, 1, 1, 0.50784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484114,-99) , 
8, 2.15681, 0, 0, 0.492987,-99) , 
7, -0.42862, 0, 0, 0.503313,-99) , 
NN(
NN(
0, 
0, 
-1, -3.20212, 1, 1, 0.505889,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.472814,-99) , 
7, -0.207647, 1, 0, 0.494464,-99) , 
8, -1.44473, 0, 0, 0.501095,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0133358);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498437,-99) , 
9, 4.52267, 1, 0, 0.504499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471155,-99) , 
9, 2.58015, 1, 0, 0.497731,-99) , 
8, 1.9864, 0, 0, 0.499598,-99) , 
8, 22.0979, 0, 0, 0.500397,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0122298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496321, 0, 1, 0.530139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491359,-99) , 
0, 0.499042, 1, 0, 0.514527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499169,-99) , 
8, 2.32367, 0, 0, 0.502692,-99) , 
NN(
0, 
0, 
-1, -1.35373, 0, -1, 0.494531,-99) , 
7, -0.0476348, 0, 0, 0.498969,-99) , 
7, -1.57143, 1, 0, 0.5004,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.00908834);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.502619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504303,-99) , 
NN(
0, 
0, 
-1, -0.143072, 0, -1, 0.469673,-99) , 
6, -951.286, 0, 0, 0.483585,-99) , 
4, 0.999524, 0, 0, 0.500495,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0179374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491425,-99) , 
8, 6.13291, 0, 0, 0.51392,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491334,-99) , 
9, 2.99456, 1, 0, 0.506615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495062,-99) , 
8, 1.83772, 0, 0, 0.498647,-99) , 
1, 0.00339902, 0, 0, 0.501109,-99) , 
5, 0.0237918, 0, 0, 0.50188,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.00748064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49979,-99) , 
0, 0.497138, 0, 0, 0.512826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498662,-99) , 
0, 0.504757, 0, 0, 0.49966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471629,-99) , 
7, -0.170105, 0, 0, 0.487342,-99) , 
4, 0.999048, 0, 0, 0.49883,-99) , 
7, 1.57137, 0, 0, 0.499815,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.016642);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497062,-99) , 
7, 0.469312, 0, 0, 0.500726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483554,-99) , 
7, -0.685921, 1, 0, 0.489311,-99) , 
9, 4.3645, 1, 0, 0.498003,-99) , 
7, 1.85708, 0, 0, 0.499041,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00642605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482202,-99) , 
9, 13.8468, 1, 0, 0.500273,-99) , 
7, 1.85708, 0, 0, 0.501172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477211,-99) , 
4, 0.997619, 0, 0, 0.500532,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0174917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499796,-99) , 
7, -0.213522, 0, 0, 0.522938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484091,-99) , 
8, -0.429321, 1, 0, 0.501918,-99) , 
8, -0.153064, 0, 0, 0.505346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48492,-99) , 
5, 0.00679438, 1, 0, 0.496107,-99) , 
5, 0.0237824, 0, 0, 0.498128,-99) , 
9, 2.22394, 1, 0, 0.502084,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.00486332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499571,-99) , 
0, 0.490471, 1, 0, 0.500168,-99) , 
4, 0.997619, 1, 0, 0.500857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480912,-99) , 
3, 9.47659, 1, 0, 0.49998,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00590505);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.502001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464351,-99) , 
0, 0.499043, 1, 0, 0.488136,-99) , 
4, 0.999048, 0, 0, 0.501055,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0284614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471274,-99) , 
9, 2.12439, 1, 0, 0.514147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45646,-99) , 
8, -1.36721, 0, 0, 0.498553,-99) , 
7, -0.427772, 1, 0, 0.503968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494737,-99) , 
8, 1.88488, 0, 0, 0.499492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460389,-99) , 
7, -1.85713, 0, 0, 0.496834,-99) , 
6, -951.286, 0, 0, 0.49958,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0153548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.537213, 0, 1, 0.533465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498047,-99) , 
5, 0.0237961, 0, 0, 0.499215,-99) , 
9, 0.796063, 1, 0, 0.501842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49891,-99) , 
8, -3.03844, 1, 0, 0.508646,-99) , 
NN(
0, 
0, 
-1, -0.312164, 1, -1, 0.477745,-99) , 
6, -951.286, 1, 0, 0.495239,-99) , 
8, -1.49979, 0, 0, 0.500246,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.010356);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.504389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468788,-99) , 
0, 0.497138, 0, 0, 0.487919,-99) , 
4, 0.999048, 0, 0, 0.503269,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.014225);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494936,-99) , 
9, 3.45361, 1, 0, 0.502215,-99) , 
NN(
0, 
0, 
-1, -1.75803, 0, -1, 0.4837,-99) , 
7, -1.40818, 0, 0, 0.500659,-99) , 
7, -2.14286, 1, 0, 0.501545,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0109669);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482829,-99) , 
7, 1.77547, 1, 0, 0.503567,-99) , 
NN(
0, 
0, 
-1, -2.55281, 0, -1, 0.495904,-99) , 
6, -951.286, 1, 0, 0.500602,-99) , 
7, -2.14286, 1, 0, 0.501256,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.00711484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.501392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46969,-99) , 
4, 0.99966, 0, 0, 0.500413,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486199,-99) , 
2, 0.0715656, 1, 0, 0.497209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470563,-99) , 
7, -0.714509, 0, 0, 0.490188,-99) , 
4, 0.999524, 0, 0, 0.499251,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0126065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498068,-99) , 
7, -1.85716, 1, 0, 0.499477,-99) , 
4, 0.998571, 1, 0, 0.500755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490403,-99) , 
6, -951.286, 0, 0, 0.497861,-99) , 
NN(
0, 
0, 
-1, 1.13727, 1, -1, 0.476184,-99) , 
2, -0.0711123, 0, 0, 0.490099,-99) , 
3, 4.76084, 1, 0, 0.498658,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.00767277);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85706, 0, 1, 0.502452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494898,-99) , 
0, 0.505789, 0, 0, 0.498393,-99) , 
NN(
0, 
0, 
-1, 0.503457, 0, -1, 0.476728,-99) , 
0, 0.504666, 0, 0, 0.486602,-99) , 
0, 0.502852, 1, 0, 0.500584,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00973671);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495489,-99) , 
9, 2.75866, 1, 0, 0.49996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483957,-99) , 
7, -1.65305, 0, 0, 0.49921,-99) , 
7, -2.14285, 1, 0, 0.5001,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0142719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.218794, 0, 1, 0.506725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476987,-99) , 
6, -1.28575, 0, 0, 0.503747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492585,-99) , 
0, 0.499995, 1, 0, 0.500284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473818,-99) , 
7, -1.85715, 0, 0, 0.498451,-99) , 
6, -951.286, 0, 0, 0.500473,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00977744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497991,-99) , 
7, -2.14286, 1, 0, 0.498795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479326,-99) , 
0, 0.499995, 0, 0, 0.489194,-99) , 
4, 0.99966, 0, 0, 0.497678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471915,-99) , 
4, 0.997619, 0, 0, 0.496977,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.013635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47898,-99) , 
8, -2.80407, 0, 0, 0.499115,-99) , 
9, -1.28174, 1, 0, 0.505879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491919,-99) , 
9, 2.98458, 1, 0, 0.497783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473107,-99) , 
7, -1.85715, 0, 0, 0.496867,-99) , 
9, -0.392925, 1, 0, 0.497788,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0123949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499814,-99) , 
6, -951.286, 1, 0, 0.507267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491295,-99) , 
2, -0.073473, 0, 0, 0.504781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52564,-99) , 
NN(
0, 
0, 
-1, 2.31753, 1, -1, 0.495732,-99) , 
8, 0.938539, 0, 0, 0.497332,-99) , 
8, 1.2855, 0, 0, 0.499981,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0105101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49782,-99) , 
3, 2.31253, 1, 0, 0.516672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497223,-99) , 
7, -1.85715, 1, 0, 0.498419,-99) , 
4, 0.999048, 1, 0, 0.499656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482887,-99) , 
3, 9.26727, 1, 0, 0.498854,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0136579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496369,-99) , 
2, 0.0311292, 0, 0, 0.500085,-99) , 
2, -0.213511, 1, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482003,-99) , 
3, 9.27654, 1, 0, 0.500159,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0145962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496594,-99) , 
7, -2.2381, 0, 0, 0.526567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494354,-99) , 
8, -0.790826, 0, 0, 0.50136,-99) , 
7, -1.85714, 1, 0, 0.502807,-99) , 
NN(
0, 
0, 
-1, 0.142578, 0, -1, 0.481645,-99) , 
4, 0.999048, 0, 0, 0.501376,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0144354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482102,-99) , 
8, -0.606406, 1, 0, 0.49999,-99) , 
7, -1.77551, 0, 0, 0.511455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497999,-99) , 
4, 0.999524, 1, 0, 0.500419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486938,-99) , 
0, 0.5019, 0, 0, 0.493096,-99) , 
3, 4.80631, 1, 0, 0.498991,-99) , 
7, -1.57143, 1, 0, 0.500125,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0112216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26659, 0, 1, 0.504052,-99) , 
NN(
0, 
0, 
-1, 0.999002, 1, -1, 0.488549,-99) , 
4, 0.999365, 0, 0, 0.5031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461802,-99) , 
4, 0.998095, 0, 0, 0.501747,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.00592625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499611,-99) , 
0, 0.490472, 1, 0, 0.500373,-99) , 
3, 9.27946, 0, 0, 0.501255,-99) , 
NN(
0, 
0, 
-1, -0.0715535, 1, -1, 0.483442,-99) , 
4, 0.999048, 0, 0, 0.500046,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0187899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47918,-99) , 
5, 0.00905864, 1, 0, 0.508294,-99) , 
5, 0.0237783, 0, 0, 0.512461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492632,-99) , 
9, 3.01044, 1, 0, 0.501197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477374,-99) , 
7, -1.85715, 0, 0, 0.499746,-99) , 
8, 5.81837, 0, 0, 0.502007,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0140163);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23809, 0, 1, 0.517039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490416,-99) , 
8, -1.14169, 0, 0, 0.50036,-99) , 
NN(
0, 
0, 
-1, -0.214249, 0, -1, 0.491313,-99) , 
3, 4.79347, 1, 0, 0.498579,-99) , 
7, -1.85714, 1, 0, 0.499623,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0145189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488563,-99) , 
8, -2.9002, 0, 0, 0.503098,-99) , 
7, -1.75973, 1, 0, 0.511704,-99) , 
NN(
NN(
0, 
0, 
-1, 5.21033, 1, 1, 0.507468,-99) , 
NN(
0, 
0, 
-1, 3.42107, 1, -1, 0.495326,-99) , 
8, 2.49572, 0, 0, 0.499058,-99) , 
9, -0.393077, 1, 0, 0.500361,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0100663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469477,-99) , 
3, 7.53482, 1, 0, 0.501964,-99) , 
3, 9.27699, 0, 0, 0.502655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487432,-99) , 
4, 0.998571, 0, 0, 0.501933,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0059964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499593,-99) , 
2, -0.205989, 1, 0, 0.500657,-99) , 
3, 9.26727, 0, 0, 0.501693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485561,-99) , 
4, 0.998572, 0, 0, 0.500938,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.00807779);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483653,-99) , 
7, -2.25171, 0, 0, 0.509947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485061,-99) , 
5, 0.0237977, 1, 0, 0.499856,-99) , 
7, -1.57145, 1, 0, 0.500777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468133,-99) , 
4, 0.997619, 0, 0, 0.499914,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0155132);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495428,-99) , 
4, 0.998571, 1, 0, 0.497981,-99) , 
NN(
0, 
0, 
-1, -0.214114, 0, -1, 0.490012,-99) , 
3, 4.80503, 1, 0, 0.496438,-99) , 
7, 1.8571, 0, 0, 0.497329,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0113258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494398,-99) , 
8, -1.99992, 0, 0, 0.507011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498507,-99) , 
0, 0.491424, 1, 0, 0.499435,-99) , 
9, 0.588226, 1, 0, 0.501249,-99) , 
7, -2.14284, 1, 0, 0.501866,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.00711931);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.51795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485803,-99) , 
5, 0.0237918, 1, 0, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48848,-99) , 
9, 13.5141, 1, 0, 0.500088,-99) , 
7, 1.57138, 0, 0, 0.501365,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0131749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497268,-99) , 
3, 2.74275, 1, 0, 0.501703,-99) , 
3, 9.26585, 0, 0, 0.502968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473777,-99) , 
6, -951.286, 0, 0, 0.48452,-99) , 
8, -2.19341, 1, 0, 0.494643,-99) , 
4, 0.999524, 0, 0, 0.502017,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0128304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493794,-99) , 
4, 0.999955, 0, 0, 0.508851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498217,-99) , 
3, 0.773448, 1, 0, 0.500667,-99) , 
3, 4.69368, 0, 0, 0.502328,-99) , 
NN(
0, 
0, 
-1, 1.16194, 1, -1, 0.485473,-99) , 
4, 0.999048, 0, 0, 0.501187,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0161233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00204, 0, 1, 0.506034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489517,-99) , 
6, -951.286, 0, 0, 0.497158,-99) , 
9, 3.56654, 1, 0, 0.503117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493654,-99) , 
7, -1.82539, 1, 0, 0.49811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463967,-99) , 
7, -2.2381, 0, 0, 0.493645,-99) , 
7, -1.00002, 0, 0, 0.501252,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0157511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498831,-99) , 
4, 0.999987, 0, 0, 0.504672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479447,-99) , 
4, 0.999728, 0, 0, 0.503301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50558,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.479873,-99) , 
8, -2.19341, 1, 0, 0.486397,-99) , 
4, 0.999524, 0, 0, 0.501407,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.012254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.507415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491466,-99) , 
3, 9.38795, 1, 0, 0.506577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509627,-99) , 
NN(
0, 
0, 
-1, 0.170015, 0, -1, 0.49573,-99) , 
7, -1.57144, 1, 0, 0.49697,-99) , 
0, 0.49809, 0, 0, 0.501828,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0111096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488322,-99) , 
0, 0.489927, 0, 0, 0.504237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486024,-99) , 
1, -0.0234283, 0, 0, 0.50369,-99) , 
NN(
0, 
0, 
-1, -0.428587, 0, -1, 0.489953,-99) , 
0, 0.503804, 1, 0, 0.5026,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0093537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49878,-99) , 
3, 1.45533, 1, 0, 0.513224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498039,-99) , 
0, 0.502852, 0, 0, 0.499341,-99) , 
4, 0.999524, 1, 0, 0.500904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484187,-99) , 
3, 9.46687, 1, 0, 0.500165,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0113391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498243,-99) , 
7, 0.14282, 1, 0, 0.502379,-99) , 
3, 9.26338, 0, 0, 0.503402,-99) , 
NN(
0, 
0, 
-1, 0.0714448, 0, -1, 0.482444,-99) , 
4, 0.999048, 0, 0, 0.501998,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.00527115);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485714,-99) , 
3, 9.33289, 1, 0, 0.501307,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00670002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498579,-99) , 
0, 0.491424, 1, 0, 0.499548,-99) , 
3, 9.24801, 0, 0, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487015,-99) , 
4, 0.998571, 0, 0, 0.499678,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00707026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499932,-99) , 
7, 1.85708, 0, 0, 0.501063,-99) , 
3, 9.18235, 0, 0, 0.502255,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.487364,-99) , 
4, 0.999524, 0, 0, 0.500577,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0109942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.85359, 1, 1, 0.509336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453055,-99) , 
9, 3.13296, 1, 0, 0.500035,-99) , 
8, 1.69878, 0, 0, 0.502771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489975,-99) , 
9, 14.5391, 1, 0, 0.502275,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00938577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.2855, 0, 1, 0.508181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499586,-99) , 
0, 0.499179, 0, 0, 0.501624,-99) , 
7, -0.999992, 1, 0, 0.502926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491879,-99) , 
9, 2.76073, 1, 0, 0.501263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478512,-99) , 
7, -0.999866, 0, 0, 0.496811,-99) , 
0, 0.5019, 1, 0, 0.50189,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0125683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495753,-99) , 
9, -0.926222, 1, 0, 0.521303,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.501131,-99) , 
6, -951.286, 1, 0, 0.5124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479115,-99) , 
4, 0.999683, 0, 0, 0.502598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476496,-99) , 
6, -951.286, 0, 0, 0.486783,-99) , 
4, 0.999524, 0, 0, 0.500978,-99) , 
9, -0.392925, 1, 0, 0.502158,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.00550429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499568,-99) , 
3, 9.26355, 0, 0, 0.500702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477979,-99) , 
4, 0.99941, 0, 0, 0.49998,-99) , 
NN(
0, 
0, 
-1, 1.16194, 1, -1, 0.489311,-99) , 
4, 0.999048, 0, 0, 0.499259,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0100462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497142,-99) , 
9, 2.70632, 1, 0, 0.501181,-99) , 
7, -2.14286, 1, 0, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.484354,-99) , 
4, 0.999048, 0, 0, 0.500831,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0145534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496049,-99) , 
2, 0.0130537, 0, 0, 0.49951,-99) , 
4, 0.998095, 1, 0, 0.501084,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482342,-99) , 
9, 2.50948, 1, 0, 0.493218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480169,-99) , 
3, 9.27697, 1, 0, 0.490077,-99) , 
3, 4.81544, 1, 0, 0.498934,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.00737541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496653,-99) , 
9, -0.512382, 1, 0, 0.508376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4837,-99) , 
7, -1.85716, 0, 0, 0.50076,-99) , 
9, -0.131994, 1, 0, 0.501816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485826,-99) , 
0, 0.504757, 1, 0, 0.501021,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.004937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499972,-99) , 
7, 1.8571, 0, 0, 0.500726,-99) , 
4, 0.998095, 1, 0, 0.50169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481705,-99) , 
3, 9.48431, 1, 0, 0.500811,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.011412);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520915,-99) , 
NN(
NN(
0, 
0, 
-1, 4.56052, 1, 1, 0.510505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472868,-99) , 
7, -1.85715, 0, 0, 0.499473,-99) , 
8, 2.05141, 0, 0, 0.502458,-99) , 
8, 22.1562, 0, 0, 0.503157,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0154639);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.13942, 1, 1, 0.506548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495699,-99) , 
8, -0.300191, 0, 0, 0.497901,-99) , 
NN(
0, 
0, 
-1, 0.666528, 0, -1, 0.472119,-99) , 
9, 1.77539, 1, 0, 0.494395,-99) , 
8, 0.298751, 0, 0, 0.500124,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0144235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495583,-99) , 
7, -0.138069, 1, 0, 0.502104,-99) , 
9, 5.08987, 1, 0, 0.505259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497393,-99) , 
8, 0.884563, 0, 0, 0.499818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461519,-99) , 
9, 3.37932, 1, 0, 0.497697,-99) , 
8, 2.53271, 0, 0, 0.499758,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.017701);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47659,-99) , 
3, 9.21712, 1, 0, 0.50937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483789,-99) , 
7, -1.85721, 0, 0, 0.507233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498923,-99) , 
9, 9.22487, 0, 0, 0.501702,-99) , 
NN(
0, 
0, 
-1, 0.501083, 0, -1, 0.493629,-99) , 
0, 0.499043, 1, 0, 0.498358,-99) , 
9, 2.29865, 1, 0, 0.503315,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0117119);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524053,-99) , 
NN(
NN(
0, 
0, 
-1, 4.52764, 1, 1, 0.50649,-99) , 
NN(
0, 
0, 
-1, 2.98897, 1, -1, 0.495373,-99) , 
8, 2.10597, 0, 0, 0.498387,-99) , 
8, 22.205, 0, 0, 0.499369,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0106404);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496608,-99) , 
8, -1.49506, 0, 0, 0.504212,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.497019,-99) , 
9, 0.93018, 1, 0, 0.499195,-99) , 
7, -2.14284, 1, 0, 0.499771,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0139588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.965499, 1, 1, 0.526627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497853,-99) , 
6, -951.286, 1, 0, 0.51398,-99) , 
NN(
NN(
0, 
0, 
-1, 1.57058, 0, 1, 0.507459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472378,-99) , 
9, 2.61722, 1, 0, 0.499391,-99) , 
8, 1.42884, 0, 0, 0.502461,-99) , 
9, -0.438634, 1, 0, 0.503596,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00850728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.433106, 1, 1, 0.50269,-99) , 
NN(
0, 
0, 
-1, 7.82062, 1, -1, 0.480836,-99) , 
3, 6.69371, 1, 0, 0.501373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483939,-99) , 
3, 9.32317, 1, 0, 0.500568,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00789099);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482656,-99) , 
4, 0.999637, 0, 0, 0.49963,-99) , 
NN(
0, 
0, 
-1, 1.16063, 1, -1, 0.482606,-99) , 
4, 0.999048, 0, 0, 0.498495,-99) , 
7, 1.85708, 0, 0, 0.499521,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.00816181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498713,-99) , 
4, 0.999048, 1, 0, 0.500158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477004,-99) , 
3, 7.27137, 1, 0, 0.499123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482575,-99) , 
3, 9.50217, 1, 0, 0.498402,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.00853516);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.11558, 1, 1, 0.511433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499431,-99) , 
8, -2.25598, 0, 0, 0.505637,-99) , 
NN(
0, 
0, 
-1, -0.605478, 0, -1, 0.496956,-99) , 
9, 0.19748, 1, 0, 0.498698,-99) , 
7, 1.57137, 0, 0, 0.499599,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0100202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497375,-99) , 
7, -0.429028, 1, 0, 0.502096,-99) , 
9, 5.62673, 1, 0, 0.50672,-99) , 
NN(
NN(
0, 
0, 
-1, 2.09202, 0, 1, 0.501938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474373,-99) , 
7, -1.85717, 0, 0, 0.500149,-99) , 
8, 3.32739, 0, 0, 0.501742,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0115259);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498452,-99) , 
9, 7.47566, 1, 0, 0.512295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490719,-99) , 
8, -0.736454, 0, 0, 0.500291,-99) , 
8, 0.299741, 0, 0, 0.507597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498194,-99) , 
3, 9.26727, 0, 0, 0.499434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481679,-99) , 
4, 0.999048, 0, 0, 0.498269,-99) , 
7, 0.714258, 0, 0, 0.500525,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0179552);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498656,-99) , 
9, 4.35627, 1, 0, 0.507512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475,-99) , 
9, 2.11549, 1, 0, 0.496884,-99) , 
8, 0.463869, 0, 0, 0.502614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490712,-99) , 
9, -0.341824, 1, 0, 0.494703,-99) , 
9, 8.32574, 0, 0, 0.496097,-99) , 
7, 0.142824, 0, 0, 0.498875,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00792197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499542,-99) , 
7, -2.14285, 1, 0, 0.500431,-99) , 
3, 9.26084, 0, 0, 0.501545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508709,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.478279,-99) , 
6, -951.286, 0, 0, 0.490683,-99) , 
4, 0.999524, 0, 0, 0.500328,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.011479);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475784,-99) , 
3, 9.24801, 1, 0, 0.503483,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00542681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499388,-99) , 
3, 9.27946, 0, 0, 0.500322,-99) , 
7, 1.85709, 0, 0, 0.501105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483345,-99) , 
4, 0.998095, 0, 0, 0.500505,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0166066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496486,-99) , 
5, 0.0237783, 0, 0, 0.498955,-99) , 
9, 4.99336, 1, 0, 0.504095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495878,-99) , 
8, 0.885254, 0, 0, 0.499153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468599,-99) , 
9, 3.27907, 1, 0, 0.497093,-99) , 
8, 2.53271, 0, 0, 0.499015,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00898771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482993,-99) , 
3, 9.50281, 1, 0, 0.502993,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0152954);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496795,-99) , 
6, -951.286, 1, 0, 0.506077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467882,-99) , 
9, 2.59209, 1, 0, 0.498729,-99) , 
8, 1.72566, 0, 0, 0.501136,-99) , 
7, -2.14285, 1, 0, 0.501651,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0181033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495442,-99) , 
7, -0.142749, 1, 0, 0.501797,-99) , 
9, 6.05921, 1, 0, 0.507138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495555,-99) , 
8, 0.606739, 0, 0, 0.499268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441003,-99) , 
8, 2.52423, 0, 0, 0.478722,-99) , 
9, 3.52623, 1, 0, 0.49733,-99) , 
8, 3.8633, 0, 0, 0.499545,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0136671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485866,-99) , 
8, 5.78485, 0, 0, 0.50107,-99) , 
9, 4.68275, 1, 0, 0.504907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480595,-99) , 
7, -1.8572, 0, 0, 0.50084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466848,-99) , 
9, 3.08733, 1, 0, 0.498581,-99) , 
8, 2.1012, 0, 0, 0.500453,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0184635);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490753,-99) , 
9, 7.89397, 1, 0, 0.503489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486112,-99) , 
5, 0.0237683, 1, 0, 0.502426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492566,-99) , 
6, -951.286, 0, 0, 0.501952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475987,-99) , 
8, 4.95303, 0, 0, 0.488011,-99) , 
9, 1.42198, 1, 0, 0.496348,-99) , 
7, -0.428594, 0, 0, 0.500179,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0181656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492859,-99) , 
7, -0.991619, 0, 0, 0.520745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476701,-99) , 
6, -951.286, 1, 0, 0.499438,-99) , 
8, -2.17141, 0, 0, 0.505762,-99) , 
NN(
NN(
0, 
0, 
-1, 6.21417, 1, 1, 0.504425,-99) , 
NN(
0, 
0, 
-1, -1.57142, 0, -1, 0.493839,-99) , 
8, 4.39623, 0, 0, 0.496621,-99) , 
9, 0.278503, 1, 0, 0.498461,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0141529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.928212, 1, 1, 0.526081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485736,-99) , 
7, -2.2517, 0, 0, 0.514643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491237,-99) , 
3, 4.65827, 1, 0, 0.503235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495604,-99) , 
2, -0.071409, 1, 0, 0.497347,-99) , 
0, 0.49809, 1, 0, 0.500271,-99) , 
7, -1.57143, 1, 0, 0.501575,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.00720723);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498497,-99) , 
8, 2.19674, 0, 0, 0.500292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476386,-99) , 
9, -1.09772, 0, 0, 0.499529,-99) , 
7, -2.14286, 1, 0, 0.500197,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0209177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.40652, 0, 1, 0.510594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490816,-99) , 
8, 0.0144457, 0, 0, 0.500149,-99) , 
9, 0.905972, 1, 0, 0.505857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4959,-99) , 
7, -0.713894, 1, 0, 0.500932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457756,-99) , 
7, -0.411159, 0, 0, 0.491129,-99) , 
6, -951.286, 1, 0, 0.497086,-99) , 
9, 2.34704, 1, 0, 0.50206,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0117429);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497149,-99) , 
9, 3.63037, 1, 0, 0.502577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473247,-99) , 
9, 1.21032, 1, 0, 0.490439,-99) , 
7, -1.16328, 0, 0, 0.500977,-99) , 
7, -2.14286, 1, 0, 0.501754,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.00811909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49791,-99) , 
7, 1.85711, 0, 0, 0.498585,-99) , 
0, 0.504757, 0, 0, 0.49946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472638,-99) , 
4, 0.998095, 0, 0, 0.498575,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.013551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494604,-99) , 
6, -951.286, 1, 0, 0.505133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486182,-99) , 
2, -0.071409, 0, 0, 0.498846,-99) , 
7, -0.224495, 0, 0, 0.50224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489958,-99) , 
7, 1.85711, 1, 0, 0.501738,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0116201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.141753, 0, 1, 0.52126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492102,-99) , 
3, 4.92199, 1, 0, 0.503686,-99) , 
0, 0.499043, 0, 0, 0.511626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496366,-99) , 
8, 0.685718, 0, 0, 0.499287,-99) , 
7, -2.14286, 1, 0, 0.499986,-99) , 
2, -0.071409, 1, 0, 0.501893,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.010105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495061,-99) , 
9, 6.47307, 1, 0, 0.5076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485181,-99) , 
7, -1.28572, 0, 0, 0.504567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492465,-99) , 
0, 0.491635, 0, 0, 0.501092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485212,-99) , 
6, -951.286, 0, 0, 0.491412,-99) , 
0, 0.499677, 1, 0, 0.499718,-99) , 
0, 0.500947, 0, 0, 0.500867,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0162922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492741,-99) , 
7, -0.545364, 0, 0, 0.525911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494652,-99) , 
7, -1.28922, 1, 0, 0.498775,-99) , 
8, -0.329426, 0, 0, 0.503098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498135,-99) , 
0, 0.496186, 1, 0, 0.500075,-99) , 
NN(
0, 
0, 
-1, 3.56196, 0, -1, 0.485685,-99) , 
7, -0.713985, 0, 0, 0.497702,-99) , 
9, 1.98651, 1, 0, 0.500429,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0179246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00418, 0, 1, 0.533059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481496,-99) , 
9, 0.593957, 1, 0, 0.500069,-99) , 
8, -0.83031, 0, 0, 0.505038,-99) , 
NN(
NN(
0, 
0, 
-1, 5.45828, 1, 1, 0.504081,-99) , 
NN(
0, 
0, 
-1, -0.999996, 0, -1, 0.492659,-99) , 
8, 3.05437, 0, 0, 0.497461,-99) , 
9, 1.38063, 1, 0, 0.500498,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00911819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499483,-99) , 
9, 2.69643, 1, 0, 0.513566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48796,-99) , 
7, -0.714382, 0, 0, 0.506509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49837,-99) , 
3, 9.26585, 0, 0, 0.499139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481499,-99) , 
4, 0.998571, 0, 0, 0.498579,-99) , 
2, -0.0713794, 1, 0, 0.499883,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0168978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495146,-99) , 
7, -0.142876, 1, 0, 0.502672,-99) , 
7, 0.999813, 0, 0, 0.505359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48674,-99) , 
7, -0.91839, 0, 0, 0.500061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465112,-99) , 
7, 1.85708, 1, 0, 0.498449,-99) , 
6, -951.286, 0, 0, 0.501106,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.00924752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497501,-99) , 
9, 3.58374, 1, 0, 0.516318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48335,-99) , 
9, 13.7534, 1, 0, 0.501326,-99) , 
7, 1.57138, 0, 0, 0.502387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47544,-99) , 
4, 0.998095, 0, 0, 0.501487,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0232194);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471141,-99) , 
7, -1.5749, 0, 0, 0.51407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492098,-99) , 
7, -1.87596, 1, 0, 0.495844,-99) , 
8, -1.19427, 0, 0, 0.503643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496424,-99) , 
9, 3.73293, 1, 0, 0.501529,-99) , 
NN(
0, 
0, 
-1, 3.69243, 0, -1, 0.486718,-99) , 
7, -0.142397, 0, 0, 0.496686,-99) , 
9, 1.98651, 1, 0, 0.50022,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.00746003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57139, 0, 1, 0.501329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489066,-99) , 
6, -951.286, 0, 0, 0.494653,-99) , 
0, 0.500675, 1, 0, 0.499529,-99) , 
NN(
0, 
0, 
-1, 0.489972, 1, -1, 0.486146,-99) , 
0, 0.491424, 0, 0, 0.498809,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0117981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496172,-99) , 
7, -2.2381, 0, 0, 0.51316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499099,-99) , 
2, 0.0716227, 0, 0, 0.502345,-99) , 
NN(
0, 
0, 
-1, 1.16058, 1, -1, 0.493747,-99) , 
7, 0.224474, 0, 0, 0.497379,-99) , 
7, -1.85714, 1, 0, 0.498269,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0120229);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.513237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497239,-99) , 
9, 1.28622, 1, 0, 0.501392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478603,-99) , 
7, -2.00487, 0, 0, 0.488756,-99) , 
7, -1.69389, 0, 0, 0.500418,-99) , 
7, 1.57133, 0, 0, 0.501323,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0108519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499923,-99) , 
5, 0.0237824, 0, 0, 0.501869,-99) , 
9, 2.07841, 1, 0, 0.50445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497034,-99) , 
8, -0.420524, 0, 0, 0.498804,-99) , 
NN(
0, 
0, 
-1, 0.946345, 0, -1, 0.476639,-99) , 
9, 1.80034, 1, 0, 0.496355,-99) , 
8, 0.178998, 0, 0, 0.500317,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0076382);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.905132, 0, 1, 0.51293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488477,-99) , 
8, 12.7127, 1, 0, 0.50095,-99) , 
1, -0.0237187, 1, 0, 0.501386,-99) , 
7, 1.57138, 0, 0, 0.502198,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0182619);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498434,-99) , 
4, 0.999977, 0, 0, 0.513519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494293,-99) , 
8, 1.82356, 0, 0, 0.498717,-99) , 
3, 4.70037, 0, 0, 0.501743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484318,-99) , 
0, 0.49936, 1, 0, 0.495206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466802,-99) , 
0, 0.494281, 0, 0, 0.487823,-99) , 
4, 0.999524, 0, 0, 0.500186,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0126074);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214155, 1, 1, 0.506572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496756,-99) , 
3, 4.65503, 0, 0, 0.499905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4858,-99) , 
4, 0.999048, 0, 0, 0.498789,-99) , 
0, 0.497138, 0, 0, 0.503476,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.00794916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0145246, 0, 1, 0.502912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479162,-99) , 
1, 0.0263861, 1, 0, 0.502278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47695,-99) , 
1, -0.0234307, 0, 0, 0.501526,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0188171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.711396, 0, 1, 0.527326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489031,-99) , 
9, 0.673448, 1, 0, 0.499588,-99) , 
8, -0.780139, 0, 0, 0.504015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492636,-99) , 
2, 0.0702531, 1, 0, 0.503075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479562,-99) , 
8, 0.618681, 0, 0, 0.490198,-99) , 
9, 3.07317, 0, 0, 0.497754,-99) , 
9, 1.47336, 1, 0, 0.500357,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.00881379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88276, 1, 1, 0.522546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498536,-99) , 
0, 0.492376, 1, 0, 0.499582,-99) , 
4, 0.999048, 1, 0, 0.501155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48084,-99) , 
3, 9.26727, 1, 0, 0.5002,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0184481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482425,-99) , 
7, -1.57144, 0, 0, 0.504981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466603,-99) , 
4, 0.999048, 0, 0, 0.503223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478214,-99) , 
6, -951.286, 1, 0, 0.490998,-99) , 
4, 0.998571, 1, 0, 0.494332,-99) , 
8, -1.22107, 0, 0, 0.500682,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00875612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.672436, 1, 1, 0.505688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481695,-99) , 
6, -1.28458, 0, 0, 0.503302,-99) , 
NN(
0, 
0, 
-1, -2.14286, 0, -1, 0.49721,-99) , 
6, -951.286, 0, 0, 0.499538,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00525123);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485352,-99) , 
8, 10.0302, 1, 0, 0.499293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480921,-99) , 
5, 0.0237976, 1, 0, 0.498381,-99) , 
8, 22.0979, 0, 0, 0.499034,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.00924222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497484,-99) , 
2, -0.0305949, 1, 0, 0.499836,-99) , 
2, 0.214292, 0, 0, 0.500583,-99) , 
8, 22.147, 0, 0, 0.501252,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0130767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487024,-99) , 
8, -1.22108, 0, 0, 0.500611,-99) , 
9, 9.89557, 0, 0, 0.502185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488901,-99) , 
9, 0.944826, 1, 0, 0.493787,-99) , 
7, -2.10205, 1, 0, 0.494883,-99) , 
7, 0.14282, 0, 0, 0.497998,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0143439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49965,-99) , 
9, 3.60288, 1, 0, 0.50851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495052,-99) , 
8, 1.88128, 0, 0, 0.497585,-99) , 
NN(
0, 
0, 
-1, 7.64049, 0, -1, 0.49144,-99) , 
9, 4.37512, 1, 0, 0.496146,-99) , 
7, 1.57138, 0, 0, 0.497019,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00884529);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.14286, 1, 1, 0.50347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4841,-99) , 
7, -0.551653, 0, 0, 0.498137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48062,-99) , 
7, 0.427606, 1, 0, 0.492448,-99) , 
0, 0.492376, 0, 0, 0.502585,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0126799);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476199,-99) , 
7, -1.28572, 0, 0, 0.500627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48436,-99) , 
7, -0.143036, 1, 0, 0.494992,-99) , 
8, -0.751795, 0, 0, 0.498497,-99) , 
8, 22.0484, 0, 0, 0.499162,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00897837);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.515358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516638,-99) , 
NN(
0, 
0, 
-1, 4.72162, 1, -1, 0.496691,-99) , 
2, 0.132998, 0, 0, 0.497576,-99) , 
2, 0.214615, 0, 0, 0.498489,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00559739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486835,-99) , 
9, 6.21625, 1, 0, 0.498876,-99) , 
8, 15.8578, 0, 0, 0.499573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48719,-99) , 
0, 0.504757, 1, 0, 0.498959,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0149402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.272651, 0, 1, 0.520212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478395,-99) , 
9, 1.23362, 1, 0, 0.498197,-99) , 
8, -0.283126, 0, 0, 0.501797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498291,-99) , 
9, 7.77649, 1, 0, 0.502313,-99) , 
NN(
0, 
0, 
-1, 4.03637, 1, -1, 0.491671,-99) , 
8, 4.75206, 0, 0, 0.496089,-99) , 
9, 2.0662, 1, 0, 0.499069,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.00724632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499316,-99) , 
2, 0.210718, 0, 0, 0.500239,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.479768,-99) , 
3, 6.35117, 1, 0, 0.498704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481965,-99) , 
3, 9.46687, 1, 0, 0.497966,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0140001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0165627, 1, 1, 0.5072,-99) , 
NN(
0, 
0, 
-1, -1.04704, 0, -1, 0.495162,-99) , 
3, 1.90042, 1, 0, 0.501575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50773,-99) , 
NN(
0, 
0, 
-1, -0.214015, 0, -1, 0.488672,-99) , 
7, 0.999955, 0, 0, 0.491952,-99) , 
3, 4.79347, 1, 0, 0.49969,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.00845175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499385,-99) , 
0, 0.494507, 1, 0, 0.50089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491447,-99) , 
6, -951.286, 0, 0, 0.496163,-99) , 
7, -0.428626, 0, 0, 0.499138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483006,-99) , 
0, 0.505709, 1, 0, 0.49868,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0114257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495546,-99) , 
9, 2.30452, 1, 0, 0.500937,-99) , 
NN(
0, 
0, 
-1, 1.31976, 1, -1, 0.492117,-99) , 
7, -1.28573, 0, 0, 0.499713,-99) , 
8, 22.0484, 0, 0, 0.500259,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0136877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428548, 1, 1, 0.513809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484502,-99) , 
6, -0.141481, 0, 0, 0.502381,-99) , 
6, -951.286, 1, 0, 0.508957,-99) , 
NN(
NN(
0, 
0, 
-1, 0.884563, 0, 1, 0.502246,-99) , 
NN(
0, 
0, 
-1, 3.5524, 1, -1, 0.472054,-99) , 
9, 3.22299, 1, 0, 0.500034,-99) , 
8, 2.53271, 0, 0, 0.502482,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00765937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499914,-99) , 
3, 9.27223, 0, 0, 0.502613,-99) , 
NN(
0, 
0, 
-1, -1.28566, 0, -1, 0.494532,-99) , 
4, 0.999909, 0, 0, 0.500403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48718,-99) , 
4, 0.998095, 0, 0, 0.499953,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0120127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499028,-99) , 
3, 9.26585, 0, 0, 0.501253,-99) , 
NN(
0, 
0, 
-1, -1.28577, 0, -1, 0.490263,-99) , 
4, 0.999909, 0, 0, 0.498558,-99) , 
NN(
0, 
0, 
-1, 1.16194, 1, -1, 0.476069,-99) , 
4, 0.999048, 0, 0, 0.497065,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00495912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499732,-99) , 
2, 0.275401, 0, 0, 0.500445,-99) , 
2, -0.214013, 1, 0, 0.501568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488821,-99) , 
3, 9.38656, 1, 0, 0.500985,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0106647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214134, 1, 1, 0.504747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481939,-99) , 
3, 9.4997, 1, 0, 0.503745,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.00947248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499835,-99) , 
5, 0.0237961, 0, 0, 0.50139,-99) , 
9, 1.7371, 1, 0, 0.503182,-99) , 
NN(
0, 
0, 
-1, -2.43801, 0, -1, 0.493746,-99) , 
8, -0.174817, 0, 0, 0.498875,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0116172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.87633, 1, 1, 0.50905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4663,-99) , 
9, 3.27246, 1, 0, 0.499451,-99) , 
8, 2.46669, 0, 0, 0.50201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471498,-99) , 
1, 0.0247002, 1, 0, 0.50116,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0104386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497223,-99) , 
5, 0.00604386, 0, 0, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462437,-99) , 
1, -0.0253858, 0, 0, 0.499552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482214,-99) , 
1, 0.0243999, 1, 0, 0.499065,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.00740517);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23807, 0, 1, 0.515083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490862,-99) , 
0, 0.492376, 0, 0, 0.501045,-99) , 
7, 1.8435, 0, 0, 0.501619,-99) , 
7, -1.85712, 1, 0, 0.502379,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0187189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4794, 1, 1, 0.507248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493047,-99) , 
7, -0.278944, 0, 0, 0.495558,-99) , 
7, -0.142885, 0, 0, 0.502616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494741,-99) , 
9, -0.905753, 1, 0, 0.49965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470082,-99) , 
6, -0.428483, 1, 0, 0.480514,-99) , 
6, -951.286, 1, 0, 0.491546,-99) , 
8, -1.22107, 0, 0, 0.499452,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.005042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.14286, 1, 1, 0.501893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484798,-99) , 
4, 0.998572, 0, 0, 0.501085,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.00872942);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.41265, 1, 1, 0.513437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498771,-99) , 
4, 0.998095, 1, 0, 0.500393,-99) , 
NN(
0, 
0, 
-1, -0.0713794, 0, -1, 0.492571,-99) , 
3, 4.81526, 1, 0, 0.498877,-99) , 
7, 1.57139, 0, 0, 0.499911,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0158523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491327,-99) , 
7, -1.07951, 0, 0, 0.523736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494808,-99) , 
8, -1.66644, 0, 0, 0.499487,-99) , 
8, -0.315344, 0, 0, 0.503218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490424,-99) , 
6, -951.286, 0, 0, 0.494971,-99) , 
7, -1.28524, 1, 0, 0.496318,-99) , 
9, 1.98651, 1, 0, 0.499818,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0079006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 0, 1, 0.508718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484603,-99) , 
3, 3.56744, 1, 0, 0.498411,-99) , 
3, 4.6448, 0, 0, 0.500549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486135,-99) , 
4, 0.998572, 0, 0, 0.499871,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0129289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497015,-99) , 
7, -2.2381, 0, 0, 0.516224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489346,-99) , 
9, 7.02128, 1, 0, 0.502478,-99) , 
NN(
0, 
0, 
-1, -2.42485, 0, -1, 0.494543,-99) , 
6, -951.286, 1, 0, 0.499376,-99) , 
7, -1.85715, 1, 0, 0.500314,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0101044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.502963,-99) , 
NN(
0, 
0, 
-1, -1.00017, 0, -1, 0.490162,-99) , 
4, 0.999819, 0, 0, 0.500701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469192,-99) , 
4, 0.998095, 0, 0, 0.499667,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0109774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51921,-99) , 
NN(
0, 
0, 
-1, 6.65358, 1, -1, 0.495905,-99) , 
2, -0.215645, 1, 0, 0.496988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480513,-99) , 
3, 9.26727, 1, 0, 0.496214,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.00694086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529557,-99) , 
NN(
0, 
0, 
-1, 7.2412, 1, -1, 0.498639,-99) , 
4, 0.998572, 1, 0, 0.500095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47964,-99) , 
3, 9.46687, 1, 0, 0.49919,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0151387);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.17522, 1, 1, 0.507803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497633,-99) , 
8, -0.565549, 0, 0, 0.499918,-99) , 
NN(
0, 
0, 
-1, 0.339196, 0, -1, 0.479354,-99) , 
9, 1.58193, 1, 0, 0.495869,-99) , 
8, 0.332609, 0, 0, 0.50145,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0123019);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.07599, 1, 1, 0.518509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494734,-99) , 
9, 2.72128, 1, 0, 0.500445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480187,-99) , 
9, -0.890622, 0, 0, 0.499618,-99) , 
7, -1.85715, 1, 0, 0.500687,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.00575564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499567,-99) , 
2, -0.214974, 1, 0, 0.500443,-99) , 
4, 0.997619, 1, 0, 0.501436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484216,-99) , 
3, 9.26355, 1, 0, 0.500631,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0132058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498189,-99) , 
7, 0.143173, 0, 0, 0.504069,-99) , 
9, 2.13942, 1, 0, 0.506265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498092,-99) , 
4, 0.998571, 1, 0, 0.500595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468348,-99) , 
3, 9.28472, 1, 0, 0.498946,-99) , 
8, 0.288579, 0, 0, 0.502411,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00711283);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527296,-99) , 
NN(
NN(
0, 
0, 
-1, 0.139613, 0, 1, 0.510645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484797,-99) , 
4, 0.998572, 0, 0, 0.500333,-99) , 
2, 0.0715926, 0, 0, 0.501922,-99) , 
7, -2.14286, 1, 0, 0.502774,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0102012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.36429, 1, 1, 0.528648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495128,-99) , 
7, -0.142878, 0, 0, 0.498189,-99) , 
4, 0.999048, 1, 0, 0.500287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483185,-99) , 
3, 9.48998, 1, 0, 0.499537,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.00818388);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518036,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479198,-99) , 
2, 0.0712183, 1, 0, 0.494054,-99) , 
3, 4.81544, 1, 0, 0.500825,-99) , 
7, 1.85707, 0, 0, 0.501563,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.00669065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499238,-99) , 
2, 0.214249, 0, 0, 0.499886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475549,-99) , 
7, 0.142536, 0, 0, 0.488172,-99) , 
4, 0.999365, 0, 0, 0.499173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463444,-99) , 
4, 0.998095, 0, 0, 0.497999,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.00816803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26648, 0, 1, 0.502965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485757,-99) , 
4, 0.999388, 0, 0, 0.502096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484682,-99) , 
4, 0.998572, 0, 0, 0.501284,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0079703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.502156,-99) , 
NN(
0, 
0, 
-1, 6.26628, 1, -1, 0.495127,-99) , 
9, 2.37602, 1, 0, 0.499123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482259,-99) , 
3, 9.33289, 1, 0, 0.498354,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.00880525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44326, 1, 1, 0.522006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498551,-99) , 
0, 0.491424, 1, 0, 0.499453,-99) , 
4, 0.999048, 1, 0, 0.500999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478639,-99) , 
3, 9.26727, 1, 0, 0.499951,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0132785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489027,-99) , 
1, -0.00566398, 0, 0, 0.500463,-99) , 
5, 0.023785, 0, 0, 0.502582,-99) , 
NN(
NN(
0, 
0, 
-1, -0.213958, 1, 1, 0.501381,-99) , 
NN(
0, 
0, 
-1, 0.644524, 0, -1, 0.466584,-99) , 
9, 1.77539, 1, 0, 0.496737,-99) , 
8, 0.298751, 0, 0, 0.499501,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0259412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496079,-99) , 
6, -951.286, 0, 0, 0.512612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484717,-99) , 
6, -951.286, 1, 0, 0.49935,-99) , 
8, -1.48769, 0, 0, 0.50479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495218,-99) , 
0, 0.496186, 0, 0, 0.504925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483688,-99) , 
8, 1.7728, 0, 0, 0.491927,-99) , 
8, 5.47952, 0, 0, 0.49602,-99) , 
9, 1.47358, 1, 0, 0.499668,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0111458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498257,-99) , 
2, 0.0130537, 0, 0, 0.50038,-99) , 
4, 0.998095, 1, 0, 0.501689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483543,-99) , 
3, 6.64015, 1, 0, 0.497675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483724,-99) , 
3, 9.15607, 1, 0, 0.494251,-99) , 
3, 4.7535, 1, 0, 0.500217,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0162699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496013,-99) , 
3, 0.788293, 1, 0, 0.49837,-99) , 
4, 0.998572, 1, 0, 0.499642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488568,-99) , 
2, 0.0780368, 1, 0, 0.501262,-99) , 
NN(
0, 
0, 
-1, -0.207631, 0, -1, 0.475995,-99) , 
2, -0.0715964, 0, 0, 0.492339,-99) , 
3, 4.73203, 1, 0, 0.4982,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.00604294);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.85709, 0, 1, 0.502221,-99) , 
NN(
0, 
0, 
-1, 0.998186, 0, -1, 0.485907,-99) , 
4, 0.999048, 0, 0, 0.501122,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0210122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486093,-99) , 
7, -1.00005, 0, 0, 0.525685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493641,-99) , 
6, -951.286, 0, 0, 0.499068,-99) , 
8, 0.656438, 0, 0, 0.503332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497635,-99) , 
9, 14.5089, 1, 0, 0.504409,-99) , 
NN(
0, 
0, 
-1, 2.14819, 0, -1, 0.487706,-99) , 
8, 7.4642, 0, 0, 0.495549,-99) , 
9, 3.34009, 1, 0, 0.500886,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.00718097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521538,-99) , 
NN(
NN(
0, 
0, 
-1, 9.25366, 0, 1, 0.502004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467342,-99) , 
6, -951.286, 1, 0, 0.488005,-99) , 
4, 0.999048, 0, 0, 0.501067,-99) , 
7, 1.85709, 0, 0, 0.501945,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0112595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.2381, 0, 1, 0.515389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494687,-99) , 
9, 2.94475, 1, 0, 0.500608,-99) , 
7, -1.85715, 1, 0, 0.50143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487045,-99) , 
4, 0.998572, 0, 0, 0.500749,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.00892915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491055,-99) , 
9, -0.131994, 0, 0, 0.50065,-99) , 
2, 0.213884, 0, 0, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480022,-99) , 
3, 9.26355, 1, 0, 0.500401,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.00642092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486616,-99) , 
8, 12.7644, 1, 0, 0.500736,-99) , 
8, 22.147, 0, 0, 0.50139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483134,-99) , 
4, 0.998095, 0, 0, 0.500772,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0185236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.324887, 0, 1, 0.514496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493799,-99) , 
7, -1.86003, 1, 0, 0.496034,-99) , 
8, -0.763089, 0, 0, 0.500791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491141,-99) , 
9, 14.5938, 1, 0, 0.505726,-99) , 
NN(
0, 
0, 
-1, 0.776682, 0, -1, 0.491567,-99) , 
9, 9.77525, 0, 0, 0.494065,-99) , 
9, 1.8704, 1, 0, 0.497342,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.00799725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498045,-99) , 
2, -0.198697, 1, 0, 0.498751,-99) , 
3, 9.26659, 0, 0, 0.499744,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.486817,-99) , 
4, 0.999048, 0, 0, 0.498865,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.00785028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477542,-99) , 
3, 7.60504, 1, 0, 0.500748,-99) , 
4, 0.998095, 1, 0, 0.501768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481639,-99) , 
3, 9.36646, 1, 0, 0.500862,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.00452264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.12687, 0, 1, 0.500848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485965,-99) , 
2, -0.214155, 0, 0, 0.500166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474173,-99) , 
4, 0.998095, 0, 0, 0.499304,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0122684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494773,-99) , 
9, 4.08235, 1, 0, 0.503178,-99) , 
NN(
0, 
0, 
-1, 2.47004, 1, -1, 0.496427,-99) , 
8, 1.93548, 0, 0, 0.498224,-99) , 
8, 17.7604, 0, 0, 0.499071,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.00803763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499664,-99) , 
2, -0.0781905, 1, 0, 0.501518,-99) , 
7, -2.14286, 1, 0, 0.502277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505189,-99) , 
NN(
0, 
0, 
-1, 0.999523, 0, -1, 0.485659,-99) , 
6, -951.286, 0, 0, 0.493253,-99) , 
2, 0.0714698, 1, 0, 0.500907,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0181277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494482,-99) , 
4, 0.999996, 0, 0, 0.502126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467745,-99) , 
7, -1.28566, 0, 0, 0.496099,-99) , 
4, 0.999909, 0, 0, 0.500488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479677,-99) , 
4, 0.998095, 0, 0, 0.499788,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0116119);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499399,-99) , 
4, 0.999983, 0, 0, 0.503407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478477,-99) , 
9, 1.32635, 0, 0, 0.495099,-99) , 
4, 0.999637, 0, 0, 0.50253,-99) , 
4, 0.998095, 1, 0, 0.503117,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0198306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493929,-99) , 
0, 0.497138, 1, 0, 0.504013,-99) , 
0, 0.5019, 0, 0, 0.508665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492684,-99) , 
4, 0.999524, 0, 0, 0.504246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485255,-99) , 
2, 0.0146182, 0, 0, 0.496984,-99) , 
2, -0.00319501, 1, 0, 0.500935,-99) , 
2, 0.0716227, 0, 0, 0.502131,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0102611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49833,-99) , 
7, -1.28574, 1, 0, 0.500114,-99) , 
3, 9.18235, 0, 0, 0.5012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486856,-99) , 
0, 0.4941, 0, 0, 0.499606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476227,-99) , 
0, 0.499995, 1, 0, 0.491728,-99) , 
4, 0.999524, 0, 0, 0.500135,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0108515);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495063,-99) , 
3, 0.438781, 1, 0, 0.517441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499433,-99) , 
8, 2.10897, 0, 0, 0.502628,-99) , 
3, 0.566263, 1, 0, 0.503723,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481162,-99) , 
2, 0.194001, 1, 0, 0.4967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471832,-99) , 
2, -0.214102, 0, 0, 0.492789,-99) , 
3, 4.80503, 1, 0, 0.501605,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0112484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.17834, 0, 1, 0.519258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480258,-99) , 
9, 0.940068, 1, 0, 0.50115,-99) , 
8, -1.08, 0, 0, 0.505857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498024,-99) , 
2, 0.0507887, 0, 0, 0.49962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482819,-99) , 
2, 0.214004, 1, 0, 0.498893,-99) , 
9, 1.47358, 1, 0, 0.501791,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.010446);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491616,-99) , 
4, 0.999365, 0, 0, 0.503023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480178,-99) , 
4, 0.998095, 0, 0, 0.502276,-99) , 
7, 1.8571, 0, 0, 0.503032,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0111027);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.17292, 1, 1, 0.506855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466149,-99) , 
9, 3.50855, 1, 0, 0.500191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474667,-99) , 
7, -1.85715, 0, 0, 0.498529,-99) , 
8, 2.6585, 0, 0, 0.500763,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0107672);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496917,-99) , 
7, -0.143232, 1, 0, 0.511113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496348,-99) , 
7, 1.85708, 0, 0, 0.497213,-99) , 
5, 0.0238056, 0, 0, 0.498072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478751,-99) , 
4, 0.998095, 0, 0, 0.497428,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.00842078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.46557, 1, 1, 0.509813,-99) , 
NN(
0, 
0, 
-1, -0.0713115, 0, -1, 0.498084,-99) , 
7, 1.28567, 0, 0, 0.499409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505636,-99) , 
NN(
0, 
0, 
-1, 0.428493, 1, -1, 0.482065,-99) , 
2, -0.0720545, 1, 0, 0.48784,-99) , 
0, 0.502852, 1, 0, 0.49807,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0103959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497315,-99) , 
5, 0.00358066, 0, 0, 0.502388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484683,-99) , 
1, -0.025069, 0, 0, 0.501884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481167,-99) , 
1, 0.024696, 1, 0, 0.501305,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.00987953);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476368,-99) , 
3, 9.25366, 1, 0, 0.50277,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00641197);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479896,-99) , 
5, 0.0237976, 1, 0, 0.499788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47968,-99) , 
9, 13.7544, 1, 0, 0.498899,-99) , 
7, 1.85702, 0, 0, 0.499715,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00573412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499422,-99) , 
0, 0.492376, 1, 0, 0.500421,-99) , 
1, 0.0236587, 0, 0, 0.501165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483303,-99) , 
4, 0.998572, 0, 0, 0.500341,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0103844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.17941, 0, 1, 0.504387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481596,-99) , 
7, -0.142917, 0, 0, 0.492108,-99) , 
4, 0.999456, 0, 0, 0.50351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481152,-99) , 
4, 0.998095, 0, 0, 0.502764,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0130987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.67588, 1, 1, 0.517386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487939,-99) , 
7, 0.931933, 0, 0, 0.502709,-99) , 
0, 0.499043, 0, 0, 0.508745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496778,-99) , 
3, 9.27716, 0, 0, 0.497783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483063,-99) , 
4, 0.999048, 0, 0, 0.496821,-99) , 
7, 0.714255, 0, 0, 0.499699,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0153772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85716, 1, 1, 0.511286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487069,-99) , 
2, -0.0712136, 0, 0, 0.507402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497401,-99) , 
8, 0.807914, 0, 0, 0.502115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483941,-99) , 
6, -951.286, 0, 0, 0.491555,-99) , 
9, 6.72706, 1, 0, 0.500287,-99) , 
7, -1.00004, 1, 0, 0.501712,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.00658734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.212261, 0, 1, 0.502204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476474,-99) , 
3, 7.68649, 1, 0, 0.50133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488727,-99) , 
3, 9.46687, 1, 0, 0.500778,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0124696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.790787, 0, 1, 0.50547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481707,-99) , 
7, -1.89336, 0, 0, 0.503288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49515,-99) , 
0, 0.496186, 1, 0, 0.497959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477558,-99) , 
7, -1.28565, 0, 0, 0.496546,-99) , 
9, 1.47358, 1, 0, 0.499349,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.00818971);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.502297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494191,-99) , 
2, 0.0783193, 1, 0, 0.502684,-99) , 
NN(
0, 
0, 
-1, 2.49045, 1, -1, 0.483498,-99) , 
2, -0.0713343, 0, 0, 0.495966,-99) , 
3, 4.70409, 1, 0, 0.501019,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.00780903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51739,-99) , 
NN(
0, 
0, 
-1, -1.16322, 0, -1, 0.497568,-99) , 
7, -2.14283, 1, 0, 0.49822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500638,-99) , 
NN(
0, 
0, 
-1, 0.142561, 1, -1, 0.48524,-99) , 
2, -0.071409, 1, 0, 0.489018,-99) , 
0, 0.502852, 1, 0, 0.497141,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0136077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.521185,-99) , 
NN(
0, 
0, 
-1, 2.48779, 1, -1, 0.497524,-99) , 
8, 0.737891, 0, 0, 0.501778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493719,-99) , 
0, 0.499043, 1, 0, 0.499904,-99) , 
NN(
0, 
0, 
-1, 2.88589, 0, -1, 0.486953,-99) , 
8, 7.85567, 0, 0, 0.493289,-99) , 
9, 3.67911, 1, 0, 0.499351,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0071227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.98589, 1, 1, 0.51562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487301,-99) , 
7, 0.142944, 0, 0, 0.497928,-99) , 
3, 4.87649, 1, 0, 0.508413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499388,-99) , 
8, 19.0631, 0, 0, 0.499997,-99) , 
0, 0.490471, 1, 0, 0.500482,-99) , 
2, 0.0715316, 0, 0, 0.501708,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.00975912);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0711297, 0, 1, 0.505523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492994,-99) , 
0, 0.505573, 1, 0, 0.504563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496669,-99) , 
7, -0.143119, 1, 0, 0.503802,-99) , 
NN(
0, 
0, 
-1, 3.79955, 1, -1, 0.496598,-99) , 
8, 4.17126, 0, 0, 0.498121,-99) , 
0, 0.499043, 0, 0, 0.500758,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0142809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49611,-99) , 
2, -0.00519729, 1, 0, 0.500604,-99) , 
4, 0.998571, 1, 0, 0.502554,-99) , 
NN(
0, 
0, 
-1, -0.214249, 0, -1, 0.49183,-99) , 
3, 4.81184, 1, 0, 0.500492,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00969331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499281,-99) , 
9, 2.25864, 1, 0, 0.509994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48874,-99) , 
3, 4.05053, 1, 0, 0.501548,-99) , 
3, 4.70391, 0, 0, 0.503257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484123,-99) , 
4, 0.997619, 0, 0, 0.50275,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0195365);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499158,-99) , 
3, 3.5851, 1, 0, 0.515403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482313,-99) , 
8, 0.66974, 1, 0, 0.496055,-99) , 
3, 4.92199, 1, 0, 0.507431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49733,-99) , 
6, -951.286, 1, 0, 0.502778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480802,-99) , 
2, -0.0107354, 1, 0, 0.495548,-99) , 
2, 0.00351597, 0, 0, 0.49937,-99) , 
2, -0.0713037, 1, 0, 0.500686,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0102694);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.514924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494992,-99) , 
8, 2.46669, 0, 0, 0.497018,-99) , 
2, 0.132663, 0, 0, 0.497741,-99) , 
2, 0.214292, 0, 0, 0.49862,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0156293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487807,-99) , 
8, 1.70758, 0, 0, 0.51538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471934,-99) , 
9, 2.57817, 1, 0, 0.501068,-99) , 
8, 1.27763, 0, 0, 0.502443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50443,-99) , 
NN(
0, 
0, 
-1, 2.87324, 0, -1, 0.491039,-99) , 
8, 21.7599, 0, 0, 0.49289,-99) , 
9, 3.63488, 1, 0, 0.499697,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00711324);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48049,-99) , 
3, 5.18131, 1, 0, 0.508042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49907,-99) , 
3, 9.47659, 0, 0, 0.499807,-99) , 
2, -0.214134, 1, 0, 0.500265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484931,-99) , 
9, 14.3928, 1, 0, 0.499643,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00819979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27223, 0, 1, 0.502858,-99) , 
NN(
0, 
0, 
-1, 4.80535, 1, -1, 0.49478,-99) , 
4, 0.999887, 0, 0, 0.500885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471087,-99) , 
4, 0.997619, 0, 0, 0.500107,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0101471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463018,-99) , 
5, 0.0237056, 1, 0, 0.500498,-99) , 
NN(
0, 
0, 
-1, 14.4286, 1, -1, 0.489994,-99) , 
9, 6.85587, 1, 0, 0.498815,-99) , 
NN(
0, 
0, 
-1, -1.9796, 0, -1, 0.48604,-99) , 
7, -1.57144, 0, 0, 0.497703,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00663949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498625,-99) , 
2, 0.220082, 0, 0, 0.499311,-99) , 
3, 9.26585, 0, 0, 0.500313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487012,-99) , 
4, 0.998571, 0, 0, 0.499698,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0070254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499363,-99) , 
8, 1.7079, 0, 0, 0.50139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484781,-99) , 
9, 14.2114, 1, 0, 0.500712,-99) , 
7, 1.8571, 0, 0, 0.501495,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00824425);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497587,-99) , 
9, 2.68885, 1, 0, 0.501281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482485,-99) , 
9, -1.09772, 0, 0, 0.500675,-99) , 
7, -2.14286, 1, 0, 0.501183,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0104174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43558, 1, 1, 0.518612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497781,-99) , 
5, 0.0238055, 0, 0, 0.498753,-99) , 
4, 0.999524, 1, 0, 0.501002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484163,-99) , 
3, 9.26355, 1, 0, 0.500215,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00782187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.47114, 1, 1, 0.527798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499675,-99) , 
0, 0.493328, 1, 0, 0.501041,-99) , 
4, 0.999048, 1, 0, 0.50288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485238,-99) , 
3, 9.46687, 1, 0, 0.502115,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.00669072);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505437, 0, 1, 0.502804,-99) , 
NN(
0, 
0, 
-1, 0.142389, 1, -1, 0.490498,-99) , 
0, 0.492376, 0, 0, 0.50181,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00811193);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.89602, 0, 1, 0.502651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474001,-99) , 
8, -2.11843, 1, 0, 0.486108,-99) , 
8, 0.193436, 0, 0, 0.491996,-99) , 
4, 0.999524, 0, 0, 0.501446,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00577608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.465492, 1, 1, 0.507313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480828,-99) , 
4, 0.999048, 0, 0, 0.49911,-99) , 
9, 0.286872, 1, 0, 0.500782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483499,-99) , 
1, -0.02362, 0, 0, 0.500263,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0108148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497999,-99) , 
3, 9.18172, 0, 0, 0.499242,-99) , 
7, -2.14286, 1, 0, 0.500229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490212,-99) , 
0, 0.499995, 0, 0, 0.496546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460207,-99) , 
7, -0.714498, 0, 0, 0.487145,-99) , 
4, 0.999524, 0, 0, 0.498764,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0115412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0712741, 1, 1, 0.504021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490772,-99) , 
9, -0.014019, 1, 0, 0.497883,-99) , 
7, -0.714298, 0, 0, 0.502322,-99) , 
NN(
0, 
0, 
-1, 0.142654, 1, -1, 0.491825,-99) , 
0, 0.503804, 1, 0, 0.501501,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0100452);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.504084,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490815,-99) , 
6, -951.286, 0, 0, 0.496652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484496,-99) , 
8, -1.67174, 0, 0, 0.4939,-99) , 
0, 0.494281, 0, 0, 0.502406,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.00562037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497902,-99) , 
4, 0.998186, 0, 0, 0.50953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524758,-99) , 
NN(
0, 
0, 
-1, 0.99941, 0, -1, 0.498967,-99) , 
3, 9.25366, 0, 0, 0.50017,-99) , 
4, 0.999048, 1, 0, 0.500825,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.00749571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14284, 1, 1, 0.502061,-99) , 
NN(
0, 
0, 
-1, 0.0732771, 1, -1, 0.486143,-99) , 
4, 0.999683, 0, 0, 0.500717,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.486705,-99) , 
4, 0.999048, 0, 0, 0.499773,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0117714);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498366,-99) , 
7, 0.550951, 1, 0, 0.501757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479029,-99) , 
5, 0.023743, 1, 0, 0.500399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495282,-99) , 
5, 0.0237976, 0, 0, 0.496457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475888,-99) , 
4, 0.999048, 0, 0, 0.4951,-99) , 
7, 0.142795, 0, 0, 0.497358,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00584394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495349,-99) , 
8, -1.02684, 1, 0, 0.514467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480253,-99) , 
1, 0.0247997, 1, 0, 0.500296,-99) , 
7, -1.85716, 1, 0, 0.501091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486821,-99) , 
2, 0.214284, 1, 0, 0.500387,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00434211);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472635,-99) , 
3, 7.62444, 1, 0, 0.499232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485326,-99) , 
3, 9.38548, 1, 0, 0.498599,-99) , 
8, 22.0484, 0, 0, 0.499234,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0136408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495033,-99) , 
3, 0.787705, 1, 0, 0.49675,-99) , 
4, 0.998095, 1, 0, 0.498177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502241,-99) , 
NN(
0, 
0, 
-1, 0.0715926, 1, -1, 0.489012,-99) , 
0, 0.5019, 0, 0, 0.492178,-99) , 
3, 4.79347, 1, 0, 0.497006,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0163633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.5768, 0, 1, 0.510178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494025,-99) , 
8, 0.288931, 0, 0, 0.499359,-99) , 
9, 0.813369, 1, 0, 0.505181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492837,-99) , 
6, -951.286, 1, 0, 0.499643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483901,-99) , 
7, 1.85723, 1, 0, 0.498424,-99) , 
9, 2.22551, 1, 0, 0.50212,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0129377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497169,-99) , 
4, 0.999997, 0, 0, 0.502339,-99) , 
NN(
0, 
0, 
-1, 5.82556, 1, -1, 0.495073,-99) , 
4, 0.999932, 0, 0, 0.500082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487067,-99) , 
4, 0.998571, 0, 0, 0.499474,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00756968);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490073,-99) , 
0, 0.501899, 1, 0, 0.507594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475021,-99) , 
7, -2.23808, 0, 0, 0.500186,-99) , 
7, 0.999975, 0, 0, 0.501423,-99) , 
4, 0.997619, 1, 0, 0.501988,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.00974926);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499197,-99) , 
9, 3.07953, 1, 0, 0.50497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496664,-99) , 
2, -0.214229, 1, 0, 0.497619,-99) , 
0, 0.496821, 1, 0, 0.500058,-99) , 
NN(
0, 
0, 
-1, -0.143413, 0, -1, 0.48779,-99) , 
0, 0.491424, 0, 0, 0.499391,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0130484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00044, 0, 1, 0.51029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468976,-99) , 
9, 3.22292, 1, 0, 0.500913,-99) , 
8, 2.22815, 0, 0, 0.503659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494917,-99) , 
3, 4.80371, 0, 0, 0.496985,-99) , 
NN(
0, 
0, 
-1, -0.139482, 1, -1, 0.487037,-99) , 
2, -0.071473, 0, 0, 0.495363,-99) , 
0, 0.497138, 0, 0, 0.50038,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.00726761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49758,-99) , 
7, -2.22902, 0, 0, 0.511705,-99) , 
NN(
0, 
0, 
-1, 5.04378, 1, -1, 0.497944,-99) , 
7, -1.84354, 1, 0, 0.498774,-99) , 
7, 1.8571, 0, 0, 0.499804,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0112804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492407,-99) , 
4, 0.999909, 0, 0, 0.510721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499555,-99) , 
2, 0.0425226, 0, 0, 0.501627,-99) , 
3, 4.47108, 0, 0, 0.50363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470773,-99) , 
0, 0.499043, 1, 0, 0.489302,-99) , 
4, 0.999048, 0, 0, 0.502663,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.00997863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496376,-99) , 
7, -0.714238, 0, 0, 0.510146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495324,-99) , 
9, 3.70765, 1, 0, 0.500679,-99) , 
0, 0.493328, 1, 0, 0.501766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473171,-99) , 
4, 0.997619, 0, 0, 0.501016,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.00703337);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.183363, 1, 1, 0.502377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506766,-99) , 
NN(
0, 
0, 
-1, 0.42854, 1, -1, 0.491521,-99) , 
7, 0.999987, 0, 0, 0.494127,-99) , 
3, 4.80388, 1, 0, 0.500759,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0109889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.738336, 1, 1, 0.515925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497103,-99) , 
7, -0.823175, 1, 0, 0.499412,-99) , 
7, 1.57132, 0, 0, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0.999959, 1, -1, 0.489819,-99) , 
0, 0.5019, 1, 0, 0.498787,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.00836705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48995,-99) , 
3, 5.34333, 1, 0, 0.513189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478193,-99) , 
4, 0.998571, 0, 0, 0.5009,-99) , 
2, -0.132528, 1, 0, 0.501685,-99) , 
2, -0.214155, 1, 0, 0.502318,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0160254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49353,-99) , 
9, 5.73223, 1, 0, 0.502089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485557,-99) , 
5, 0.0237976, 1, 0, 0.501088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478051,-99) , 
6, -951.286, 0, 0, 0.488129,-99) , 
8, -2.94101, 1, 0, 0.494471,-99) , 
7, -1.00001, 0, 0, 0.499785,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00976521);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495713,-99) , 
9, 5.91565, 1, 0, 0.502919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47692,-99) , 
7, -0.719491, 1, 0, 0.498304,-99) , 
7, -0.60546, 0, 0, 0.501372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477697,-99) , 
9, 3.49371, 1, 0, 0.492081,-99) , 
7, 1.57139, 1, 0, 0.500724,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0147217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.822247, 1, 1, 0.512914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493251,-99) , 
9, 11.0933, 0, 0, 0.498422,-99) , 
7, -0.142132, 1, 0, 0.503941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495135,-99) , 
9, -1.20858, 1, 0, 0.496249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466386,-99) , 
7, 1.85709, 1, 0, 0.495091,-99) , 
8, 3.27233, 0, 0, 0.497256,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0145507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.1249, 1, 1, 0.504626,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.484731,-99) , 
7, -1.28572, 0, 0, 0.502744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494741,-99) , 
8, -1.02352, 0, 0, 0.49834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478857,-99) , 
0, 0.496185, 1, 0, 0.485833,-99) , 
9, 1.16058, 1, 0, 0.495385,-99) , 
8, -0.174817, 0, 0, 0.499367,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00386551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0145331, 0, 1, 0.500923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476501,-99) , 
1, 0.0263922, 1, 0, 0.500289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484286,-99) , 
1, -0.0234075, 0, 0, 0.499811,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.01647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.12711, 1, 1, 0.509524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495533,-99) , 
8, 2.17878, 0, 0, 0.497809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460173,-99) , 
9, 4.17207, 1, 0, 0.496017,-99) , 
8, 4.11946, 0, 0, 0.49896,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.00813596);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49909,-99) , 
3, 9.2602, 0, 0, 0.500375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467959,-99) , 
4, 0.99966, 0, 0, 0.499361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505137,-99) , 
NN(
0, 
0, 
-1, 0.998617, 1, -1, 0.483204,-99) , 
6, -951.286, 0, 0, 0.491962,-99) , 
4, 0.999524, 0, 0, 0.498531,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0111639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493009,-99) , 
4, 0.999637, 0, 0, 0.502894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478573,-99) , 
1, 0.0248352, 1, 0, 0.502226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472235,-99) , 
4, 0.998095, 0, 0, 0.501252,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.00566197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499647,-99) , 
2, 0.275012, 0, 0, 0.500639,-99) , 
2, -0.21456, 1, 0, 0.501371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480101,-99) , 
3, 9.36646, 1, 0, 0.500412,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0105845);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497523,-99) , 
0, 0.49809, 1, 0, 0.508773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455883,-99) , 
9, 1.15426, 1, 0, 0.486918,-99) , 
8, 0.234058, 0, 0, 0.497312,-99) , 
3, 4.80503, 1, 0, 0.502303,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0174661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487074,-99) , 
8, 6.35276, 0, 0, 0.499338,-99) , 
9, 4.9361, 1, 0, 0.503444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496133,-99) , 
8, -0.0236047, 0, 0, 0.499356,-99) , 
NN(
0, 
0, 
-1, 0.621374, 0, -1, 0.48054,-99) , 
9, 2.30242, 1, 0, 0.495175,-99) , 
8, 2.41438, 0, 0, 0.497497,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.00607034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.448887, 1, 1, 0.501644,-99) , 
NN(
0, 
0, 
-1, 0.499041, 0, -1, 0.486566,-99) , 
3, 6.80647, 1, 0, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481912,-99) , 
3, 9.47676, 1, 0, 0.49992,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0117863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0724355, 0, 1, 0.505141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472736,-99) , 
7, -1.85803, 0, 0, 0.502455,-99) , 
NN(
0, 
0, 
-1, 4.48854, 1, -1, 0.495409,-99) , 
9, 2.22551, 1, 0, 0.499258,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0076479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49592,-99) , 
4, 0.999524, 0, 0, 0.505453,-99) , 
7, 0.99953, 0, 0, 0.508661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498561,-99) , 
2, -0.152938, 1, 0, 0.499468,-99) , 
0, 0.491424, 1, 0, 0.500124,-99) , 
2, 0.0715316, 0, 0, 0.501434,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.013403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497435,-99) , 
3, 5.0699, 1, 0, 0.514385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47918,-99) , 
7, -1.28583, 0, 0, 0.506189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489594,-99) , 
0, 0.499995, 1, 0, 0.497998,-99) , 
2, 0.030788, 0, 0, 0.500084,-99) , 
2, -0.21404, 1, 0, 0.500877,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00749851);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498205,-99) , 
7, -0.224515, 0, 0, 0.501165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487658,-99) , 
9, 14.2114, 1, 0, 0.500621,-99) , 
7, 1.8571, 0, 0, 0.501254,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.00697064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486911,-99) , 
7, -0.142982, 0, 0, 0.513998,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0664863, 0, 1, 0.505602,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.498462,-99) , 
2, -0.0509422, 1, 0, 0.499557,-99) , 
2, -0.214151, 1, 0, 0.500365,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.00942273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428559, 1, 1, 0.512179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486873,-99) , 
7, 0.999707, 1, 0, 0.499352,-99) , 
6, -951.286, 0, 0, 0.504272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496094,-99) , 
8, 0.332609, 0, 0, 0.498638,-99) , 
7, 1.85709, 0, 0, 0.499572,-99) , 
0, 0.499995, 0, 0, 0.501054,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.00963162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472895,-99) , 
9, 4.03839, 1, 0, 0.500083,-99) , 
8, 3.88393, 0, 0, 0.501366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481305,-99) , 
9, 12.2712, 0, 0, 0.487706,-99) , 
7, -0.142749, 1, 0, 0.492876,-99) , 
9, 6.06148, 1, 0, 0.499879,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.010869);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.2381, 0, 1, 0.512139,-99) , 
NN(
NN(
0, 
0, 
-1, 0.648071, 0, 1, 0.504099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493526,-99) , 
5, 0.023778, 0, 0, 0.495381,-99) , 
9, 3.03099, 1, 0, 0.500976,-99) , 
7, -1.85714, 1, 0, 0.501601,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00751821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498108,-99) , 
2, -0.193497, 1, 0, 0.498867,-99) , 
2, 0.214426, 0, 0, 0.499608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480959,-99) , 
3, 9.2711, 1, 0, 0.498751,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00812263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49912,-99) , 
0, 0.504757, 0, 0, 0.500003,-99) , 
4, 0.998571, 1, 0, 0.501039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49736,-99) , 
0, 0.499043, 1, 0, 0.504538,-99) , 
NN(
0, 
0, 
-1, 9.2541, 1, -1, 0.48837,-99) , 
8, 1.17592, 0, 0, 0.494254,-99) , 
3, 4.80371, 1, 0, 0.499728,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0122427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499765,-99) , 
0, 0.499995, 0, 0, 0.505937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473103,-99) , 
9, 2.48352, 1, 0, 0.499264,-99) , 
8, 1.17592, 0, 0, 0.50174,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494929,-99) , 
8, -0.921262, 0, 0, 0.5013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489457,-99) , 
2, 0.0732158, 0, 0, 0.491324,-99) , 
9, 1.69411, 1, 0, 0.495953,-99) , 
0, 0.496185, 0, 0, 0.499963,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0134883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48955,-99) , 
8, 0.56504, 0, 0, 0.503847,-99) , 
4, 0.999524, 1, 0, 0.50677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497496,-99) , 
7, -2.11565, 1, 0, 0.498459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471169,-99) , 
4, 0.998572, 0, 0, 0.497251,-99) , 
7, 0.714255, 0, 0, 0.49954,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0111598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484271,-99) , 
8, -2.87501, 0, 0, 0.503573,-99) , 
7, -1.75231, 1, 0, 0.508808,-99) , 
NN(
NN(
0, 
0, 
-1, 5.8726, 1, 1, 0.508134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457559,-99) , 
7, -1.85716, 0, 0, 0.498335,-99) , 
8, 3.82292, 0, 0, 0.500814,-99) , 
9, -0.392925, 1, 0, 0.501642,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00648313);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489293,-99) , 
8, 13.686, 1, 0, 0.500136,-99) , 
NN(
0, 
0, 
-1, 1.31358, 1, -1, 0.487901,-99) , 
7, -1.40816, 0, 0, 0.499114,-99) , 
7, -2.14285, 1, 0, 0.499636,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.011268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.792208, 0, 1, 0.511897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487895,-99) , 
0, 0.492376, 0, 0, 0.49814,-99) , 
9, 1.84878, 1, 0, 0.504963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497149,-99) , 
7, -0.428324, 1, 0, 0.499913,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.494851,-99) , 
6, -951.286, 0, 0, 0.496798,-99) , 
0, 0.494281, 1, 0, 0.498162,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.00543068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519553,-99) , 
NN(
0, 
0, 
-1, 7.69636, 1, -1, 0.498463,-99) , 
4, 0.998095, 1, 0, 0.49916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484678,-99) , 
3, 9.47659, 1, 0, 0.498519,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00623906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499262,-99) , 
8, 1.74558, 0, 0, 0.500974,-99) , 
NN(
0, 
0, 
-1, 2.04757, 1, -1, 0.488522,-99) , 
7, 1.57137, 1, 0, 0.500135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486004,-99) , 
9, 14.3928, 1, 0, 0.499568,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.00842867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525834,-99) , 
NN(
0, 
0, 
-1, 3.16425, 1, -1, 0.498558,-99) , 
8, 2.08223, 0, 0, 0.500463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504811,-99) , 
NN(
0, 
0, 
-1, 5.13014, 0, -1, 0.491853,-99) , 
8, 19.7278, 0, 0, 0.494362,-99) , 
9, 4.31879, 1, 0, 0.498966,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.014548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494778,-99) , 
9, 0.531136, 1, 0, 0.501712,-99) , 
8, -0.0565528, 0, 0, 0.503768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498274,-99) , 
9, 6.86731, 1, 0, 0.503031,-99) , 
NN(
0, 
0, 
-1, 0.677638, 0, -1, 0.49327,-99) , 
8, 5.00164, 0, 0, 0.497131,-99) , 
9, 1.98651, 1, 0, 0.500492,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0121742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428807, 1, 1, 0.515678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498939,-99) , 
9, 14.0848, 1, 0, 0.511345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498789,-99) , 
9, 4.34152, 1, 0, 0.513062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479615,-99) , 
9, 3.17694, 1, 0, 0.500582,-99) , 
8, 2.2772, 0, 0, 0.502422,-99) , 
8, 6.47369, 0, 0, 0.503887,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.014406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999997, 0, 1, 0.505352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489202,-99) , 
0, 0.500947, 0, 0, 0.494678,-99) , 
4, 0.999932, 0, 0, 0.502039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487266,-99) , 
4, 0.998572, 0, 0, 0.501356,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.00751239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0114377, 1, 1, 0.502818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477594,-99) , 
1, -0.0256806, 0, 0, 0.502141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482024,-99) , 
1, 0.0241607, 1, 0, 0.501574,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0103169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503465,-99) , 
NN(
0, 
0, 
-1, 21.3122, 0, -1, 0.489947,-99) , 
8, 12.8257, 1, 0, 0.502293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471847,-99) , 
3, 9.19645, 1, 0, 0.500877,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.00830162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492446,-99) , 
6, -951.286, 1, 0, 0.497358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481341,-99) , 
7, -2.07483, 0, 0, 0.496754,-99) , 
7, 1.8571, 0, 0, 0.497306,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.00920187);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496746,-99) , 
8, 1.6144, 0, 0, 0.499195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486477,-99) , 
9, 13.7222, 1, 0, 0.498634,-99) , 
7, 1.85703, 0, 0, 0.499245,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0121339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.96259, 0, 1, 0.507771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487784,-99) , 
9, 6.26219, 1, 0, 0.503256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495986,-99) , 
7, -1.52609, 1, 0, 0.496828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468226,-99) , 
7, -2.23357, 0, 0, 0.487301,-99) , 
7, -1.76192, 0, 0, 0.496027,-99) , 
7, 0.714245, 0, 0, 0.497761,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0103227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493328, 1, 1, 0.502208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478978,-99) , 
9, 3.45947, 1, 0, 0.49046,-99) , 
7, 1.40813, 1, 0, 0.500718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490318,-99) , 
0, 0.497138, 1, 0, 0.496146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466944,-99) , 
7, -2.2381, 0, 0, 0.493447,-99) , 
7, -0.714302, 0, 0, 0.498702,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0101903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497431,-99) , 
2, -0.198065, 1, 0, 0.4981,-99) , 
3, 9.27699, 0, 0, 0.499286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460679,-99) , 
9, 1.16194, 1, 0, 0.487397,-99) , 
4, 0.999048, 0, 0, 0.498483,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.017717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.03309, 0, 1, 0.504867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486574,-99) , 
6, -951.286, 0, 0, 0.495959,-99) , 
9, 4.02865, 1, 0, 0.50218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486301,-99) , 
8, -2.74872, 1, 0, 0.507568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485712,-99) , 
9, 4.67339, 0, 0, 0.490121,-99) , 
9, -0.392925, 1, 0, 0.495026,-99) , 
7, -0.714296, 0, 0, 0.5002,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0104194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496841,-99) , 
4, 0.998571, 1, 0, 0.497855,-99) , 
7, 1.85708, 0, 0, 0.498678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479345,-99) , 
3, 9.27699, 1, 0, 0.497772,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00790512);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498895,-99) , 
3, 9.27614, 0, 0, 0.50056,-99) , 
NN(
0, 
0, 
-1, -1.00002, 0, -1, 0.494316,-99) , 
4, 0.999887, 0, 0, 0.499042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475958,-99) , 
4, 0.997619, 0, 0, 0.498427,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.00869747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45819, 1, 1, 0.513934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49871,-99) , 
7, -2.14286, 1, 0, 0.499639,-99) , 
4, 0.999524, 1, 0, 0.501243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475687,-99) , 
3, 9.48998, 1, 0, 0.500149,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.011841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0169227, 1, 1, 0.505209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495971,-99) , 
0, 0.492376, 1, 0, 0.49797,-99) , 
3, 2.28517, 1, 0, 0.501843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481124,-99) , 
3, 9.17924, 1, 0, 0.500854,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0135474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495525,-99) , 
4, 0.999932, 0, 0, 0.507578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49762,-99) , 
8, 0.828672, 0, 0, 0.499354,-99) , 
8, 1.17592, 0, 0, 0.502485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477829,-99) , 
4, 0.998571, 0, 0, 0.501363,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0125997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495673,-99) , 
6, -951.286, 1, 0, 0.501133,-99) , 
3, 9.26084, 0, 0, 0.502346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503493,-99) , 
NN(
0, 
0, 
-1, 0.00644811, 1, -1, 0.484159,-99) , 
7, 0.713869, 0, 0, 0.489119,-99) , 
4, 0.999524, 0, 0, 0.500863,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_2_4_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_2_4_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_2_4_noPCts *ReadBDT_maker_LHC19c2b_2_4_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_2_4_noPCts(theInpVar);
  }
}
