#include "LHC19c2b_TMVAClassification_BDT_8_12_noPCts.class.h"

double ReadBDT_LHC19c2b_8_12_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_8_12_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.476045908340115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.706606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.129119,-99) , 
4, 0.999524, 0, 0, 0.654811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275427,-99) , 
6, -951.286, 0, 0, 0.374865,-99) , 
NN(
0, 
0, 
-1, 2.23959, 1, -1, 0.0995221,-99) , 
7, 1.85947, 1, 0, 0.278682,-99) , 
9, -0.125897, 1, 0, 0.501356,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.421758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292311,-99) , 
8, -1.26869, 1, 0, 0.605253,-99) , 
NN(
0, 
0, 
-1, 0.274078, 1, -1, 0.151191,-99) , 
4, 0.999525, 0, 0, 0.571934,-99) , 
NN(
0, 
0, 
-1, 2.18415, 1, -1, 0.208105,-99) , 
7, 1.28673, 1, 0, 0.480887,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.352437);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377059,-99) , 
4, 0.999977, 0, 0, 0.557313,-99) , 
NN(
0, 
0, 
-1, 0.998164, 0, -1, 0.156963,-99) , 
4, 0.999524, 0, 0, 0.527534,-99) , 
NN(
0, 
0, 
-1, 0.999525, 0, -1, 0.196355,-99) , 
7, 1.57166, 1, 0, 0.467246,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.32018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417928,-99) , 
4, 0.999977, 0, 0, 0.554495,-99) , 
NN(
0, 
0, 
-1, 0.4475, 1, -1, 0.1621,-99) , 
4, 0.999524, 0, 0, 0.519161,-99) , 
NN(
0, 
0, 
-1, 2.4296, 1, -1, 0.241852,-99) , 
9, 0.676775, 1, 0, 0.456817,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.294817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29854,-99) , 
4, 0.999524, 0, 0, 0.600532,-99) , 
NN(
0, 
0, 
-1, 0.790478, 1, -1, 0.346108,-99) , 
7, 0.589579, 1, 0, 0.561508,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.344029,-99) , 
9, -0.376708, 1, 0, 0.458087,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.227983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363492,-99) , 
4, 0.999932, 0, 0, 0.529374,-99) , 
NN(
0, 
0, 
-1, 2.437, 1, -1, 0.310065,-99) , 
9, 0.949338, 1, 0, 0.492456,-99) , 
NN(
0, 
0, 
-1, 0.775372, 1, -1, 0.156409,-99) , 
4, 0.999524, 0, 0, 0.463648,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.18945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46033,-99) , 
8, -3.51751, 1, 0, 0.500924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.162647,-99) , 
4, 0.999048, 0, 0, 0.483174,-99) , 
NN(
0, 
0, 
-1, 2.46917, 1, -1, 0.157796,-99) , 
7, 2.14264, 1, 0, 0.456449,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.162767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400378,-99) , 
4, 0.999955, 0, 0, 0.506163,-99) , 
NN(
0, 
0, 
-1, 2.46913, 1, -1, 0.225164,-99) , 
7, 2.14262, 1, 0, 0.485735,-99) , 
NN(
0, 
0, 
-1, 1.0114, 1, -1, 0.125076,-99) , 
4, 0.999048, 0, 0, 0.465044,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.157818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43723,-99) , 
6, -951.286, 0, 0, 0.492787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.138781,-99) , 
7, 2.42852, 1, 0, 0.478389,-99) , 
NN(
0, 
0, 
-1, 1.0114, 1, -1, 0.13084,-99) , 
4, 0.999048, 0, 0, 0.458604,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.155701);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459642,-99) , 
9, -1.11662, 1, 0, 0.491465,-99) , 
NN(
0, 
0, 
-1, 2.42836, 1, -1, 0.230629,-99) , 
7, 2.14264, 1, 0, 0.473421,-99) , 
NN(
0, 
0, 
-1, 1.01085, 1, -1, 0.145875,-99) , 
4, 0.999048, 0, 0, 0.454848,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.115453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351106,-99) , 
4, 0.999864, 0, 0, 0.504515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.17746,-99) , 
7, 2.42852, 1, 0, 0.491939,-99) , 
NN(
0, 
0, 
-1, 1.0114, 1, -1, 0.214114,-99) , 
4, 0.999524, 0, 0, 0.470177,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0826799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372842,-99) , 
8, -0.823978, 1, 0, 0.489912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.169784,-99) , 
7, 2.42852, 1, 0, 0.476904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.129776,-99) , 
4, 0.998572, 0, 0, 0.46216,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.100479);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.449929,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0782483);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.460956,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0916144);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333212,-99) , 
3, 7.9925, 1, 0, 0.502254,-99) , 
NN(
0, 
0, 
-1, 2.5512, 1, -1, 0.27028,-99) , 
7, 2.14296, 1, 0, 0.486756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.176372,-99) , 
4, 0.999048, 0, 0, 0.471172,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.134057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.15985, 1, 1, 0.654279,-99) , 
NN(
0, 
0, 
-1, 2.14264, 1, -1, 0.454973,-99) , 
1, 0.00592662, 0, 0, 0.474178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0960271,-99) , 
4, 0.998096, 0, 0, 0.462158,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0951153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485746,-99) , 
1, 0.00592662, 0, 0, 0.501012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.236496,-99) , 
7, 2.42862, 1, 0, 0.490864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.153874,-99) , 
4, 0.998572, 0, 0, 0.478313,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.113264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422919,-99) , 
4, 0.999909, 0, 0, 0.514666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.211811,-99) , 
7, 2.42871, 1, 0, 0.503719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196817,-99) , 
4, 0.999048, 0, 0, 0.488702,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.141903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.480511, 0, 1, 0.720324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473381,-99) , 
8, -1.26185, 1, 0, 0.667408,-99) , 
NN(
0, 
0, 
-1, 0.998101, 0, -1, 0.446349,-99) , 
1, -0.00445233, 1, 0, 0.47607,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0834198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00592662, 0, 1, 0.521282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256912,-99) , 
7, 2.42831, 1, 0, 0.512033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.209857,-99) , 
4, 0.999048, 0, 0, 0.497484,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0869081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.288, 0, 1, 0.666151,-99) , 
NN(
0, 
0, 
-1, 2.14282, 1, -1, 0.478436,-99) , 
1, -0.00621516, 1, 0, 0.494672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.146625,-99) , 
4, 0.998096, 0, 0, 0.484561,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.085411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495837,-99) , 
8, -3.45817, 1, 0, 0.517922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274292,-99) , 
7, 2.42833, 1, 0, 0.509041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.226067,-99) , 
4, 0.999048, 0, 0, 0.495614,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.095559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330961,-99) , 
3, 8.56364, 1, 0, 0.519182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.250396,-99) , 
7, 2.42837, 1, 0, 0.509585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.135272,-99) , 
4, 0.998096, 0, 0, 0.499725,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0728348);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497408,-99) , 
1, 0.00592662, 0, 0, 0.51054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27822,-99) , 
3, 8.82294, 1, 0, 0.501505,-99) , 
NN(
0, 
0, 
-1, 2.59178, 1, -1, 0.280367,-99) , 
7, 2.14282, 1, 0, 0.486764,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0908495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378021,-99) , 
7, -1.52983, 0, 0, 0.51291,-99) , 
NN(
0, 
0, 
-1, 2.55085, 1, -1, 0.336932,-99) , 
7, 2.14278, 1, 0, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.146483,-99) , 
4, 0.998096, 0, 0, 0.492544,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.078208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.653038,-99) , 
NN(
0, 
0, 
-1, 2.42852, 1, -1, 0.483621,-99) , 
1, -0.00621516, 1, 0, 0.498297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231765,-99) , 
4, 0.999048, 0, 0, 0.486297,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0723928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00592662, 0, 1, 0.51533,-99) , 
NN(
0, 
0, 
-1, 2.45562, 1, -1, 0.36407,-99) , 
7, 1.85695, 1, 0, 0.500678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.235256,-99) , 
3, 8.93425, 1, 0, 0.490494,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.101867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465979,-99) , 
6, -951.286, 0, 0, 0.507744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293117,-99) , 
7, 2.42852, 1, 0, 0.500209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.178959,-99) , 
4, 0.998096, 0, 0, 0.491998,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.170608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438359,-99) , 
4, 0.999996, 0, 0, 0.510028,-99) , 
NN(
0, 
0, 
-1, 1.00425, 1, -1, 0.397065,-99) , 
4, 0.999909, 0, 0, 0.49367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.173844,-99) , 
4, 0.998096, 0, 0, 0.485524,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0803827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00445233, 1, 1, 0.521256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328749,-99) , 
6, -951.286, 0, 0, 0.400315,-99) , 
9, 1.2031, 1, 0, 0.506485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251257,-99) , 
3, 8.9721, 1, 0, 0.496913,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0685519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39774,-99) , 
8, -0.842568, 1, 0, 0.501113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302708,-99) , 
7, 2.42862, 1, 0, 0.494268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278978,-99) , 
3, 8.74922, 1, 0, 0.485619,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0640652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348442,-99) , 
7, -1.85732, 0, 0, 0.502911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329476,-99) , 
6, -951.288, 0, 0, 0.396082,-99) , 
9, 1.33544, 1, 0, 0.492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268636,-99) , 
4, 0.999048, 0, 0, 0.482009,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0892267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499626,-99) , 
7, -0.142742, 0, 0, 0.592639,-99) , 
NN(
0, 
0, 
-1, 2.14326, 1, -1, 0.467592,-99) , 
1, 0.00669617, 0, 0, 0.477167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231117,-99) , 
4, 0.998572, 0, 0, 0.469257,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0994152);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431885,-99) , 
7, 0.994526, 1, 0, 0.510816,-99) , 
NN(
0, 
0, 
-1, -0.713657, 0, -1, 0.440938,-99) , 
8, -1.99443, 1, 0, 0.491326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.223336,-99) , 
4, 0.998572, 0, 0, 0.482831,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0817182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491915,-99) , 
7, -0.4281, 0, 0, 0.608913,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.474592,-99) , 
1, 0.00592662, 0, 0, 0.487556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249509,-99) , 
4, 0.998572, 0, 0, 0.480045,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0718449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480428,-99) , 
0, 0.496185, 1, 0, 0.497786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326453,-99) , 
7, 2.42873, 1, 0, 0.49244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247077,-99) , 
4, 0.998575, 0, 0, 0.484882,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0783863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.822597, 1, 1, 0.58401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.160471,-99) , 
7, -1.28493, 0, 0, 0.491156,-99) , 
8, -3.87827, 1, 0, 0.507958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293873,-99) , 
3, 8.95508, 1, 0, 0.500145,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.140543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44728,-99) , 
4, 0.999997, 0, 0, 0.502905,-99) , 
NN(
0, 
0, 
-1, 4.09707, 1, -1, 0.429679,-99) , 
4, 0.999932, 0, 0, 0.49073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2301,-99) , 
4, 0.998572, 0, 0, 0.48284,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.051268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397275,-99) , 
7, 2.07528, 1, 0, 0.499543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338366,-99) , 
7, -1.85416, 0, 0, 0.494191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260624,-99) , 
4, 0.998572, 0, 0, 0.486981,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0587423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.588803,-99) , 
NN(
0, 
0, 
-1, 2.42873, 1, -1, 0.484474,-99) , 
1, 0.00592662, 0, 0, 0.494529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301691,-99) , 
3, 8.74289, 1, 0, 0.487122,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0814955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.301769, 1, 1, 0.629248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477243,-99) , 
8, -4.01878, 1, 0, 0.489112,-99) , 
3, 0.503093, 1, 0, 0.498259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287136,-99) , 
3, 8.80985, 1, 0, 0.490528,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0662899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.57743, 1, 1, 0.616475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487952,-99) , 
1, -0.00721094, 1, 0, 0.497137,-99) , 
3, 0.521333, 1, 0, 0.5054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298853,-99) , 
3, 8.7322, 1, 0, 0.49749,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0571805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401634,-99) , 
7, -1.70584, 0, 0, 0.510905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365719,-99) , 
7, 2.42871, 1, 0, 0.506247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297516,-99) , 
4, 0.998572, 0, 0, 0.500011,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0676689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380985,-99) , 
7, -1.85637, 0, 0, 0.512311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358707,-99) , 
6, -951.286, 0, 0, 0.42476,-99) , 
9, 1.41623, 1, 0, 0.504258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304864,-99) , 
3, 8.9721, 1, 0, 0.497166,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0925489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462061,-99) , 
4, 0.99999, 0, 0, 0.50581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273055,-99) , 
7, 0.732129, 1, 0, 0.417636,-99) , 
4, 0.999797, 0, 0, 0.499141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317928,-99) , 
4, 0.998572, 0, 0, 0.493781,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0556474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494882,-99) , 
8, -1.88, 1, 0, 0.578711,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.485394,-99) , 
1, 0.00592662, 0, 0, 0.494286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306901,-99) , 
4, 0.999048, 0, 0, 0.486953,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0708306);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488692,-99) , 
2, 0.0207755, 0, 0, 0.506965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249818,-99) , 
7, 0.762964, 1, 0, 0.406826,-99) , 
4, 0.999796, 0, 0, 0.499178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287046,-99) , 
4, 0.998572, 0, 0, 0.493078,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0623621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.31451, 1, 1, 0.573139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216245,-99) , 
7, -1.28493, 0, 0, 0.49444,-99) , 
8, -4.16116, 1, 0, 0.504257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29637,-99) , 
4, 0.998572, 0, 0, 0.498345,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0938875);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.16899, 1, 1, 0.634035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454128,-99) , 
8, -2.93981, 1, 0, 0.478533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319654,-99) , 
3, 8.74922, 1, 0, 0.4718,-99) , 
1, -0.00445233, 1, 0, 0.493597,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0503627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460237,-99) , 
7, -0.429182, 0, 0, 0.570758,-99) , 
NN(
0, 
0, 
-1, 2.42877, 1, -1, 0.488149,-99) , 
1, 0.00592662, 0, 0, 0.495786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329043,-99) , 
3, 8.80985, 1, 0, 0.489545,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0754296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480422,-99) , 
4, 0.99999, 0, 0, 0.513666,-99) , 
NN(
0, 
0, 
-1, 1.01663, 1, -1, 0.41566,-99) , 
4, 0.999796, 0, 0, 0.506036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316626,-99) , 
4, 0.998572, 0, 0, 0.500558,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0679494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.548965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477861,-99) , 
2, -0.0654825, 1, 0, 0.488518,-99) , 
3, 0.953035, 1, 0, 0.501056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330563,-99) , 
3, 8.95508, 1, 0, 0.495273,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0434537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.371, 1, 1, 0.601559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262979,-99) , 
7, -1.57137, 0, 0, 0.495859,-99) , 
8, -4.64881, 1, 0, 0.50214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361298,-99) , 
3, 8.80985, 1, 0, 0.497123,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.128985);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476584,-99) , 
3, 4.59901, 1, 0, 0.579902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466331,-99) , 
1, -0.00229309, 1, 0, 0.498973,-99) , 
2, 0.0716687, 0, 0, 0.511536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468532,-99) , 
9, 0.462982, 1, 0, 0.496664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196442,-99) , 
7, -0.427923, 0, 0, 0.456675,-99) , 
8, -1.99443, 1, 0, 0.496539,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0477894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485194,-99) , 
7, -0.42756, 0, 0, 0.581919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493098,-99) , 
8, -4.67784, 1, 0, 0.499179,-99) , 
1, 0.00592662, 0, 0, 0.507004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361967,-99) , 
3, 8.75084, 1, 0, 0.50186,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0903245);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443453,-99) , 
7, -0.997783, 0, 0, 0.517412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39056,-99) , 
4, 0.999819, 0, 0, 0.511166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.177851,-99) , 
7, 0.826813, 1, 0, 0.395882,-99) , 
4, 0.999524, 0, 0, 0.504079,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0519759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401032,-99) , 
7, -0.999913, 0, 0, 0.498673,-99) , 
8, -4.74947, 1, 0, 0.503631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367146,-99) , 
3, 8.82294, 1, 0, 0.498754,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0779347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483355,-99) , 
1, -0.00445233, 1, 0, 0.501644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39064,-99) , 
9, 2.00348, 1, 0, 0.496142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30306,-99) , 
4, 0.998572, 0, 0, 0.490978,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0464918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329373,-99) , 
7, -1.70462, 0, 0, 0.506423,-99) , 
8, -4.91792, 1, 0, 0.510454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377888,-99) , 
7, 2.42867, 1, 0, 0.506135,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0468892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480547,-99) , 
3, 4.31625, 1, 0, 0.56786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381489,-99) , 
4, 0.999796, 0, 0, 0.497677,-99) , 
2, 0.0888371, 0, 0, 0.505277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215523,-99) , 
9, -0.627606, 1, 0, 0.398365,-99) , 
4, 0.999524, 0, 0, 0.498521,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0433231);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497999,-99) , 
2, 0.0770775, 0, 0, 0.507435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362759,-99) , 
4, 0.998572, 0, 0, 0.503301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501343,-99) , 
NN(
0, 
0, 
-1, 2.17591, 1, -1, 0.34541,-99) , 
6, -951.286, 0, 0, 0.406662,-99) , 
9, 1.41623, 1, 0, 0.494659,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0543239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0721475, 0, 1, 0.511991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334146,-99) , 
6, -951.286, 0, 0, 0.41974,-99) , 
8, -0.708392, 1, 0, 0.503829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36646,-99) , 
4, 0.999048, 0, 0, 0.498447,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0395809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61716,-99) , 
NN(
0, 
0, 
-1, -1.7074, 0, -1, 0.488162,-99) , 
8, -4.91792, 1, 0, 0.4928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354803,-99) , 
7, 2.42852, 1, 0, 0.488375,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0573089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487492,-99) , 
7, -1.1364, 1, 0, 0.552235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2488,-99) , 
7, -1.19043, 0, 0, 0.490776,-99) , 
8, -4.12338, 1, 0, 0.499576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347528,-99) , 
7, 2.42852, 1, 0, 0.494957,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0604543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.585606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483296,-99) , 
1, 0.00592662, 0, 0, 0.491026,-99) , 
3, 0.509054, 1, 0, 0.497586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339756,-99) , 
3, 8.93425, 1, 0, 0.492438,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.112216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35143,-99) , 
7, -0.714262, 0, 0, 0.545712,-99) , 
8, -4.00702, 1, 0, 0.561898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475925,-99) , 
7, -1.32896, 1, 0, 0.529136,-99) , 
NN(
0, 
0, 
-1, -0.991148, 0, -1, 0.460938,-99) , 
8, -4.16173, 1, 0, 0.470103,-99) , 
1, -0.00219257, 1, 0, 0.49427,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0717077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439841,-99) , 
9, -2.00382, 0, 0, 0.517414,-99) , 
7, -1.19283, 1, 0, 0.569375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400585,-99) , 
4, 0.999524, 0, 0, 0.503892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290018,-99) , 
7, -1.28313, 0, 0, 0.494687,-99) , 
8, -4.18568, 1, 0, 0.504048,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0591075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.7718, 0, 1, 0.647708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406208,-99) , 
9, -2.11107, 0, 0, 0.508281,-99) , 
7, -1.15615, 1, 0, 0.561521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350125,-99) , 
3, 8.54447, 1, 0, 0.495796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247068,-99) , 
7, -1.28493, 0, 0, 0.485712,-99) , 
8, -4.08019, 1, 0, 0.49668,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0584795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439121,-99) , 
9, -2.37081, 0, 0, 0.541467,-99) , 
7, -1.49947, 1, 0, 0.569859,-99) , 
NN(
0, 
0, 
-1, -1.28251, 0, -1, 0.479858,-99) , 
8, -4.20787, 1, 0, 0.49041,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0493046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.148617, 0, 1, 0.592582,-99) , 
NN(
0, 
0, 
-1, 8.84137, 1, -1, 0.491819,-99) , 
1, -0.00445233, 1, 0, 0.504102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510519,-99) , 
NN(
0, 
0, 
-1, 2.09909, 1, -1, 0.364021,-99) , 
6, -951.286, 0, 0, 0.421863,-99) , 
9, 1.40582, 1, 0, 0.496647,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0821934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.419674, 0, 1, 0.626998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438592,-99) , 
7, 0.136439, 0, 0, 0.523797,-99) , 
6, -951.286, 0, 0, 0.576602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48142,-99) , 
8, -4.35852, 1, 0, 0.488397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349619,-99) , 
3, 8.95508, 1, 0, 0.483523,-99) , 
1, -0.00340812, 1, 0, 0.500424,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0371405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.074538, 0, 1, 0.512007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423229,-99) , 
9, 1.82347, 1, 0, 0.507613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376917,-99) , 
7, 2.42886, 1, 0, 0.503555,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0542433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.140609, 0, 1, 0.62893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423697,-99) , 
7, 0.137914, 0, 0, 0.511013,-99) , 
6, -951.286, 0, 0, 0.571564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497223,-99) , 
2, 0.0865246, 0, 0, 0.504759,-99) , 
NN(
0, 
0, 
-1, 1.40091, 1, -1, 0.428633,-99) , 
7, 1.85845, 1, 0, 0.497396,-99) , 
1, -0.00464865, 1, 0, 0.506568,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0488477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.28598, 1, 1, 0.614826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495328,-99) , 
7, -0.4281, 0, 0, 0.578556,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496214,-99) , 
2, 0.0689116, 0, 0, 0.505122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366129,-99) , 
6, -951.288, 0, 0, 0.435093,-99) , 
9, 1.41623, 1, 0, 0.499303,-99) , 
1, 0.00592662, 0, 0, 0.506674,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0641622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0337899, 0, 1, 0.524284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32352,-99) , 
9, -0.65468, 1, 0, 0.427693,-99) , 
4, 0.999796, 0, 0, 0.51732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345512,-99) , 
4, 0.998573, 0, 0, 0.512844,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0424057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496663,-99) , 
3, 0.964654, 1, 0, 0.508868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405225,-99) , 
3, 8.96578, 1, 0, 0.505254,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.422919,-99) , 
9, 1.64705, 1, 0, 0.499447,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0738751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496986,-99) , 
7, -0.977372, 1, 0, 0.560553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284062,-99) , 
7, -1.28578, 0, 0, 0.509105,-99) , 
8, -4.05214, 1, 0, 0.517313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369406,-99) , 
6, -951.286, 0, 0, 0.424887,-99) , 
9, 1.64606, 1, 0, 0.510709,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0518525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371582,-99) , 
4, 0.999751, 0, 0, 0.507035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.270856,-99) , 
7, 0.726835, 1, 0, 0.417025,-99) , 
4, 0.999524, 0, 0, 0.501517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39242,-99) , 
9, 2.04024, 1, 0, 0.496576,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0663089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445018,-99) , 
4, 0.999524, 0, 0, 0.519919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472591,-99) , 
8, -4.43468, 1, 0, 0.478546,-99) , 
0, 0.49809, 1, 0, 0.498789,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.393683,-99) , 
9, 1.63001, 1, 0, 0.49154,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0344528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404588,-99) , 
9, 2.18294, 1, 0, 0.502762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389333,-99) , 
7, -1.85546, 0, 0, 0.499515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377317,-99) , 
4, 0.999048, 0, 0, 0.495224,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0683512);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.148933, 0, 1, 0.556809,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465402,-99) , 
7, -0.901097, 1, 0, 0.518595,-99) , 
NN(
0, 
0, 
-1, -0.996981, 0, -1, 0.473416,-99) , 
8, -3.96059, 1, 0, 0.481402,-99) , 
1, 0.00592662, 0, 0, 0.488244,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0348764);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417466,-99) , 
9, -2.41628, 0, 0, 0.5036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398203,-99) , 
7, -1.85619, 0, 0, 0.500634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384965,-99) , 
3, 8.80985, 1, 0, 0.496611,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0590591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.11864, 1, 1, 0.57472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485989,-99) , 
2, -0.0675065, 1, 0, 0.494667,-99) , 
1, -0.00445233, 1, 0, 0.504322,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.415973,-99) , 
9, 1.48441, 1, 0, 0.497201,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0374401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371491,-99) , 
9, -2.64043, 0, 0, 0.50287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409046,-99) , 
7, -1.85431, 0, 0, 0.499994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501087,-99) , 
NN(
0, 
0, 
-1, 2.14973, 1, -1, 0.380841,-99) , 
6, -951.288, 0, 0, 0.426532,-99) , 
9, 1.46138, 1, 0, 0.493765,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0858498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460502,-99) , 
4, 0.999994, 0, 0, 0.502894,-99) , 
NN(
0, 
0, 
-1, 1.02252, 1, -1, 0.444627,-99) , 
4, 0.999864, 0, 0, 0.497066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371726,-99) , 
4, 0.998572, 0, 0, 0.493855,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0997278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.192398, 0, 1, 0.609783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468961,-99) , 
8, -1.25691, 1, 0, 0.576418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325056,-99) , 
7, -0.191646, 1, 0, 0.52132,-99) , 
NN(
0, 
0, 
-1, -0.71421, 0, -1, 0.470796,-99) , 
9, -1.33047, 1, 0, 0.484326,-99) , 
1, 0.00498554, 0, 0, 0.495362,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0585709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450501,-99) , 
7, -0.990734, 0, 0, 0.535904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485104,-99) , 
3, 0.508998, 1, 0, 0.491178,-99) , 
0, 0.495232, 1, 0, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395792,-99) , 
3, 8.93425, 1, 0, 0.498953,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0572216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.16173, 1, 1, 0.521655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473183,-99) , 
2, 0.0684877, 0, 0, 0.485206,-99) , 
1, 0.000160057, 0, 0, 0.503101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387809,-99) , 
7, 2.42862, 1, 0, 0.499663,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0392633);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487896,-99) , 
8, -2.4264, 1, 0, 0.567462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493433,-99) , 
2, 0.0759324, 0, 0, 0.500272,-99) , 
3, 0.554282, 1, 0, 0.505686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396703,-99) , 
3, 8.97553, 1, 0, 0.502166,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0505049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470127,-99) , 
7, -0.929658, 0, 0, 0.51103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403182,-99) , 
7, 2.42871, 1, 0, 0.507951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376033,-99) , 
3, 8.7322, 1, 0, 0.50352,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0315573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492532,-99) , 
9, -2.73318, 0, 0, 0.569638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39665,-99) , 
4, 0.999048, 0, 0, 0.500942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362852,-99) , 
7, -1.5686, 0, 0, 0.496602,-99) , 
8, -4.70948, 1, 0, 0.500371,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0494158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497968,-99) , 
6, -951.286, 0, 0, 0.538016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484344,-99) , 
2, 0.0511785, 0, 0, 0.493101,-99) , 
3, 0.940934, 1, 0, 0.502138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404955,-99) , 
3, 8.83068, 1, 0, 0.498717,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0419888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.384165, 1, 1, 0.57811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489669,-99) , 
2, -0.0874903, 1, 0, 0.496518,-99) , 
3, 0.502767, 1, 0, 0.501858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408947,-99) , 
3, 8.80212, 1, 0, 0.498766,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0540722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493416,-99) , 
4, 0.999991, 0, 0, 0.515674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374921,-99) , 
7, 0.450044, 1, 0, 0.445194,-99) , 
4, 0.999819, 0, 0, 0.510674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411225,-99) , 
4, 0.999048, 0, 0, 0.507238,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0634343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.690136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438753,-99) , 
9, -2.61082, 0, 0, 0.518531,-99) , 
1, 0.00307227, 0, 0, 0.549646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435064,-99) , 
4, 0.999524, 0, 0, 0.508271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289084,-99) , 
7, -1.28313, 0, 0, 0.499699,-99) , 
8, -4.10209, 1, 0, 0.506794,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0233243);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417948,-99) , 
7, 2.34678, 1, 0, 0.498317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390958,-99) , 
7, -1.57135, 0, 0, 0.494982,-99) , 
8, -4.77544, 1, 0, 0.499165,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0855193);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.96798, 1, 1, 0.554463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469807,-99) , 
2, -0.0395187, 1, 0, 0.492615,-99) , 
2, 0.0323376, 0, 0, 0.505767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551346,-99) , 
NN(
0, 
0, 
-1, 0.715262, 1, -1, 0.450472,-99) , 
1, 0.0043834, 0, 0, 0.463699,-99) , 
3, 4.44496, 1, 0, 0.49757,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0653162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498084, 1, 1, 0.616235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408368,-99) , 
9, -0.915337, 1, 0, 0.508464,-99) , 
7, 0.430178, 0, 0, 0.553225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488865,-99) , 
7, -1.12212, 1, 0, 0.535194,-99) , 
NN(
0, 
0, 
-1, -1.28037, 0, -1, 0.483497,-99) , 
8, -4.06608, 1, 0, 0.491391,-99) , 
1, -0.00445233, 1, 0, 0.499479,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.113278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422169,-99) , 
4, 0.999524, 0, 0, 0.521557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350763,-99) , 
9, -1.47247, 0, 0, 0.508469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476801,-99) , 
9, -2.52106, 0, 0, 0.548396,-99) , 
NN(
0, 
0, 
-1, -1.04017, 0, -1, 0.277792,-99) , 
9, -1.10868, 1, 0, 0.476535,-99) , 
7, -0.427995, 0, 0, 0.500156,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0686366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.140595, 0, 1, 0.538826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425511,-99) , 
9, 1.4718, 1, 0, 0.527623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480686,-99) , 
2, -0.0575635, 1, 0, 0.490807,-99) , 
NN(
0, 
0, 
-1, 0.0717919, 1, -1, 0.43766,-99) , 
3, 4.55086, 1, 0, 0.480585,-99) , 
1, -0.00178541, 1, 0, 0.494741,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0446881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405748,-99) , 
9, -2.17527, 0, 0, 0.496697,-99) , 
7, -1.27954, 1, 0, 0.544496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408424,-99) , 
4, 0.999048, 0, 0, 0.498011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320626,-99) , 
7, -1.28086, 0, 0, 0.49133,-99) , 
8, -4.08019, 1, 0, 0.498812,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0259029);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598628,-99) , 
NN(
0, 
0, 
-1, -1.57132, 0, -1, 0.490207,-99) , 
8, -4.88536, 1, 0, 0.494058,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0458076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497452,-99) , 
9, 0.203986, 1, 0, 0.513767,-99) , 
8, -4.50569, 1, 0, 0.517995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54578,-99) , 
NN(
0, 
0, 
-1, -1.00016, 0, -1, 0.475057,-99) , 
8, -4.63, 1, 0, 0.479167,-99) , 
1, 0.000160057, 0, 0, 0.498222,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0412393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463145,-99) , 
9, -1.87957, 0, 0, 0.515666,-99) , 
7, -1.2935, 1, 0, 0.547207,-99) , 
NN(
0, 
0, 
-1, -1.28495, 0, -1, 0.488939,-99) , 
8, -4.10209, 1, 0, 0.497026,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0336193);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418906,-99) , 
9, 2.40635, 1, 0, 0.504897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369897,-99) , 
7, -1.57136, 0, 0, 0.50049,-99) , 
8, -4.85498, 1, 0, 0.503746,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0579654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403802,-99) , 
9, -2.22462, 0, 0, 0.510776,-99) , 
7, -1.2935, 1, 0, 0.552654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472448,-99) , 
3, 4.4301, 1, 0, 0.501147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330407,-99) , 
7, -1.28246, 0, 0, 0.494546,-99) , 
8, -4.12338, 1, 0, 0.502251,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0417874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488268,-99) , 
9, -2.61602, 0, 0, 0.558659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479312,-99) , 
7, -0.428013, 0, 0, 0.503469,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.477277,-99) , 
1, 0.000160057, 0, 0, 0.490039,-99) , 
8, -4.60401, 1, 0, 0.494344,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.107499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.49013, 0, 1, 0.557337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272846,-99) , 
7, 0.215044, 1, 0, 0.385214,-99) , 
7, 0.0445626, 1, 0, 0.527066,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383102,-99) , 
4, 0.999524, 0, 0, 0.511037,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.339172,-99) , 
7, -0.139385, 0, 0, 0.485844,-99) , 
9, -1.03665, 1, 0, 0.499964,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0607595);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462855,-99) , 
9, -0.201428, 1, 0, 0.526959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462476,-99) , 
2, -0.00728023, 1, 0, 0.48507,-99) , 
2, 0.0673037, 0, 0, 0.491637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38403,-99) , 
7, 2.42833, 1, 0, 0.488502,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.117333);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390277,-99) , 
6, -0.998378, 0, 0, 0.575131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451502,-99) , 
7, -0.141874, 0, 0, 0.525545,-99) , 
6, -951.286, 0, 0, 0.552273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46105,-99) , 
4, 0.999525, 1, 0, 0.467013,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.426645,-99) , 
7, 1.57216, 1, 0, 0.461248,-99) , 
1, 0.00236311, 0, 0, 0.485833,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0461784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.59921, 1, 1, 0.61062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401783,-99) , 
9, -2.13892, 0, 0, 0.503052,-99) , 
7, -1.16148, 1, 0, 0.544617,-99) , 
NN(
0, 
0, 
-1, -1.28489, 0, -1, 0.486811,-99) , 
8, -4.12661, 1, 0, 0.494534,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0791492);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436561,-99) , 
7, 0.157361, 1, 0, 0.530291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360319,-99) , 
7, 0.143263, 0, 0, 0.49657,-99) , 
9, -0.661389, 1, 0, 0.512188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432634,-99) , 
9, -1.60259, 0, 0, 0.492421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361621,-99) , 
9, -2.24947, 1, 0, 0.456432,-99) , 
7, -0.997088, 0, 0, 0.487892,-99) , 
0, 0.499043, 1, 0, 0.501779,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0259272);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.70434, 0, 1, 0.546848,-99) , 
NN(
0, 
0, 
-1, -1.57137, 0, -1, 0.488864,-99) , 
8, -4.70948, 1, 0, 0.491827,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0438275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.567818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490166,-99) , 
2, -0.0709862, 1, 0, 0.495729,-99) , 
1, -0.00445233, 1, 0, 0.504216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512129,-99) , 
NN(
0, 
0, 
-1, 2.14953, 1, -1, 0.419805,-99) , 
6, -951.286, 0, 0, 0.454299,-99) , 
9, 1.46138, 1, 0, 0.500012,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0433988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0385063, 0, 1, 0.520203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482286,-99) , 
2, 0.211285, 0, 0, 0.485475,-99) , 
3, 1.8145, 1, 0, 0.500749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409156,-99) , 
3, 8.97269, 1, 0, 0.497964,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0260744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.456964, 0, 1, 0.556312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394031,-99) , 
9, -2.60106, 0, 0, 0.500498,-99) , 
1, -0.00621516, 1, 0, 0.504986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416379,-99) , 
7, -1.85547, 0, 0, 0.502539,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.084327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.11551, 0, 1, 0.528366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392043,-99) , 
7, 0.659986, 1, 0, 0.517034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474549,-99) , 
1, 0.00458981, 0, 0, 0.487746,-99) , 
NN(
0, 
0, 
-1, -0.686488, 0, -1, 0.329959,-99) , 
7, -0.142369, 0, 0, 0.466889,-99) , 
9, -0.526386, 1, 0, 0.492318,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0788381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463587,-99) , 
9, 1.66801, 1, 0, 0.504399,-99) , 
8, -4.74947, 1, 0, 0.507479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368263,-99) , 
6, -0.42874, 0, 0, 0.491647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426237,-99) , 
7, 0.430258, 0, 0, 0.461934,-99) , 
6, -951.286, 0, 0, 0.478669,-99) , 
0, 0.499042, 1, 0, 0.49518,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0335177);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48996,-99) , 
7, -1.53267, 1, 0, 0.519462,-99) , 
NN(
0, 
0, 
-1, -1.44625, 0, -1, 0.488402,-99) , 
8, -4.27016, 1, 0, 0.491955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395044,-99) , 
7, 2.42886, 1, 0, 0.489245,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0490052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.37661, 1, 1, 0.590029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48647,-99) , 
8, -1.16908, 1, 0, 0.501698,-99) , 
8, -2.22715, 1, 0, 0.552323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484397,-99) , 
0, 0.493327, 1, 0, 0.489548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411517,-99) , 
9, -2.6728, 0, 0, 0.486439,-99) , 
1, 0.00458981, 0, 0, 0.495339,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0672842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.09818, 0, 1, 0.568362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441988,-99) , 
7, 0.0577949, 1, 0, 0.486004,-99) , 
1, 0.00228185, 0, 0, 0.50719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422569,-99) , 
7, 0.170586, 0, 0, 0.493375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261709,-99) , 
7, -0.71363, 0, 0, 0.480595,-99) , 
9, -0.501104, 1, 0, 0.494131,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0441961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0336362, 1, 1, 0.517503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468366,-99) , 
8, -2.64594, 0, 0, 0.482435,-99) , 
3, 1.52135, 1, 0, 0.498176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461634,-99) , 
0, 0.499995, 1, 0, 0.493555,-99) , 
NN(
0, 
0, 
-1, 0.959132, 1, -1, 0.423757,-99) , 
9, 0.0363352, 1, 0, 0.471522,-99) , 
3, 4.38855, 1, 0, 0.492858,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0662154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.218816, 0, 1, 0.596804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478272,-99) , 
8, -2.15985, 1, 0, 0.547131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481746,-99) , 
8, -3.04408, 0, 0, 0.49465,-99) , 
NN(
0, 
0, 
-1, -0.141014, 0, -1, 0.468682,-99) , 
9, -0.543334, 1, 0, 0.481978,-99) , 
1, 0.00458981, 0, 0, 0.490413,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0343168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427582,-99) , 
7, -1.16233, 0, 0, 0.503358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337104,-99) , 
7, -1.27798, 1, 0, 0.446978,-99) , 
9, -2.29915, 0, 0, 0.500083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406227,-99) , 
7, -1.85619, 0, 0, 0.497654,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0280345);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498081, 1, 1, 0.552178,-99) , 
NN(
0, 
0, 
-1, -1.57059, 0, -1, 0.488128,-99) , 
8, -4.68363, 1, 0, 0.49153,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0630499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478128,-99) , 
4, 0.999991, 0, 0, 0.509556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408441,-99) , 
4, 0.999562, 1, 0, 0.44528,-99) , 
4, 0.999819, 0, 0, 0.504829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431093,-99) , 
4, 0.999048, 0, 0, 0.502217,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0394105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.03623, 1, 1, 0.561857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430564,-99) , 
7, 1.28963, 0, 0, 0.477341,-99) , 
9, -0.252256, 1, 0, 0.527179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489384,-99) , 
2, -0.0748897, 1, 0, 0.494736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451282,-99) , 
9, 2.06746, 1, 0, 0.492766,-99) , 
2, 0.0744248, 0, 0, 0.497768,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0515694);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47724,-99) , 
4, 0.999994, 0, 0, 0.500215,-99) , 
NN(
0, 
0, 
-1, -0.116426, 1, -1, 0.442233,-99) , 
4, 0.999864, 0, 0, 0.494593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417218,-99) , 
4, 0.998572, 0, 0, 0.492641,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0438241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473498,-99) , 
9, 0.354993, 1, 0, 0.544808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489414,-99) , 
3, 0.543648, 1, 0, 0.494915,-99) , 
2, 0.0758447, 0, 0, 0.501668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426234,-99) , 
3, 8.96578, 1, 0, 0.499281,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0493742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.19584, 1, 1, 0.538246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477141,-99) , 
2, -0.0206772, 1, 0, 0.490984,-99) , 
2, 0.0522712, 0, 0, 0.49955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425113,-99) , 
3, 8.80985, 1, 0, 0.497089,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.129579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493285,-99) , 
6, -0.0613779, 0, 0, 0.555584,-99) , 
NN(
0, 
0, 
-1, 0.154465, 1, -1, 0.290967,-99) , 
6, -1.2854, 0, 0, 0.513786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481551,-99) , 
7, 0.999867, 0, 0, 0.500407,-99) , 
NN(
0, 
0, 
-1, 0.718961, 0, -1, 0.403768,-99) , 
8, -0.868153, 1, 0, 0.48703,-99) , 
6, -951.286, 0, 0, 0.502102,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0400234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.20737, 0, 1, 0.513014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373429,-99) , 
4, 0.999728, 0, 0, 0.509275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382815,-99) , 
8, -3.0346, 1, 0, 0.468894,-99) , 
4, 0.999524, 0, 0, 0.506958,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0705616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.98492, 0, 1, 0.526949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386966,-99) , 
7, 0.70319, 1, 0, 0.517188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458506,-99) , 
2, -0.0743827, 0, 0, 0.51091,-99) , 
NN(
0, 
0, 
-1, -0.687046, 0, -1, 0.36921,-99) , 
7, -0.14255, 0, 0, 0.492091,-99) , 
9, -0.501104, 1, 0, 0.504954,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0210702);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499285,-99) , 
7, -0.915525, 1, 0, 0.504267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386399,-99) , 
7, -1.56816, 0, 0, 0.500819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426838,-99) , 
9, -2.84183, 0, 0, 0.498755,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0642217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.21736, 1, 1, 0.554449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457122,-99) , 
8, -0.687566, 1, 0, 0.544062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470705,-99) , 
3, 1.3611, 1, 0, 0.482777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402266,-99) , 
3, 8.74938, 1, 0, 0.480017,-99) , 
1, 0.00236311, 0, 0, 0.496734,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0645188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.712455, 0, 1, 0.544679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455442,-99) , 
9, 1.53655, 1, 0, 0.536031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460021,-99) , 
3, 4.66524, 1, 0, 0.51844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475967,-99) , 
8, -1.26185, 0, 0, 0.482971,-99) , 
2, 0.0717919, 0, 0, 0.488375,-99) , 
1, 0.00236311, 0, 0, 0.501118,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0756881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465732,-99) , 
7, 0.175237, 0, 0, 0.57994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414264,-99) , 
7, 0.412431, 1, 0, 0.505375,-99) , 
8, -2.79866, 0, 0, 0.515482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498264,-99) , 
1, -0.00750855, 1, 0, 0.505728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344915,-99) , 
7, -0.426558, 0, 0, 0.492179,-99) , 
9, -0.306395, 1, 0, 0.505407,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0242605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.05286, 0, 1, 0.551369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453088,-99) , 
7, -0.714592, 0, 0, 0.531623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445209,-99) , 
7, -1.28566, 0, 0, 0.498902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430825,-99) , 
9, -2.66864, 0, 0, 0.496185,-99) , 
1, 0.00458981, 0, 0, 0.500871,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0744106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.797144, 1, 1, 0.523024,-99) , 
NN(
0, 
0, 
-1, -0.786469, 0, -1, 0.449951,-99) , 
8, -2.84056, 0, 0, 0.505085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480113,-99) , 
8, -3.30519, 0, 0, 0.502787,-99) , 
NN(
0, 
0, 
-1, -0.712114, 0, -1, 0.420416,-99) , 
9, -0.548845, 1, 0, 0.484264,-99) , 
7, 0.430036, 0, 0, 0.493851,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0752675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456945,-99) , 
7, 0.206106, 0, 0, 0.56026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414563,-99) , 
7, 0.97947, 1, 0, 0.50339,-99) , 
8, -2.43773, 0, 0, 0.509745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449652,-99) , 
7, 2.02305, 1, 0, 0.509901,-99) , 
NN(
0, 
0, 
-1, -0.378614, 0, -1, 0.390397,-99) , 
7, 0.435501, 0, 0, 0.481104,-99) , 
9, 0.0908633, 1, 0, 0.500562,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.03157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489141,-99) , 
7, -0.8297, 1, 0, 0.551179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441039,-99) , 
9, -2.72402, 0, 0, 0.524437,-99) , 
NN(
0, 
0, 
-1, -1.28489, 0, -1, 0.491568,-99) , 
8, -4.10209, 1, 0, 0.496033,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0518855);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489112,-99) , 
2, 0.0224324, 0, 0, 0.503873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412337,-99) , 
4, 0.999796, 0, 0, 0.50007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372516,-99) , 
7, 0.449639, 1, 0, 0.45061,-99) , 
4, 0.999524, 0, 0, 0.497312,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0325972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0393854, 0, 1, 0.50748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386875,-99) , 
4, 0.999796, 0, 0, 0.502314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361376,-99) , 
7, 0.497862, 1, 0, 0.449314,-99) , 
4, 0.999524, 0, 0, 0.499328,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0277684);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442071,-99) , 
7, -1.28313, 0, 0, 0.503233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438306,-99) , 
9, -2.68844, 0, 0, 0.500807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376358,-99) , 
1, 0.0121806, 1, 0, 0.497252,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0293864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494103,-99) , 
7, -0.699835, 1, 0, 0.499874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386817,-99) , 
7, -1.57058, 0, 0, 0.496685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428875,-99) , 
9, -2.82568, 0, 0, 0.494761,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0207935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.12752, 0, 1, 0.505973,-99) , 
NN(
0, 
0, 
-1, 1.08513, 1, -1, 0.463088,-99) , 
9, 1.59571, 1, 0, 0.503083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430085,-99) , 
1, 0.0103564, 1, 0, 0.500325,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0332587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488625,-99) , 
6, -951.286, 1, 0, 0.498166,-99) , 
8, -1.09009, 0, 0, 0.500743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515843,-99) , 
NN(
0, 
0, 
-1, 1.93971, 1, -1, 0.437868,-99) , 
6, -951.288, 0, 0, 0.469258,-99) , 
9, 1.34586, 1, 0, 0.497704,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0360349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4913,-99) , 
1, -0.00557425, 1, 0, 0.497539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409344,-99) , 
1, 0.0113546, 1, 0, 0.495032,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.458957,-99) , 
9, 1.34586, 1, 0, 0.491612,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0601212);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470524,-99) , 
9, -1.68976, 0, 0, 0.531512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397134,-99) , 
8, -4.15203, 1, 0, 0.481308,-99) , 
7, -0.999958, 0, 0, 0.525298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556997,-99) , 
NN(
0, 
0, 
-1, 0.428944, 0, -1, 0.481636,-99) , 
8, -4.78902, 1, 0, 0.484923,-99) , 
1, -0.000651124, 1, 0, 0.501953,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0596916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.1361, 0, 1, 0.599728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435984,-99) , 
7, 0.141134, 0, 0, 0.50372,-99) , 
6, -951.286, 0, 0, 0.552601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403967,-99) , 
9, 0.348499, 1, 0, 0.516887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481294,-99) , 
8, -2.15885, 0, 0, 0.488766,-99) , 
2, -0.0708144, 1, 0, 0.493187,-99) , 
1, -0.00464865, 1, 0, 0.50026,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0301938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474023,-99) , 
9, -2.74182, 0, 0, 0.542341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439296,-99) , 
7, -1.18975, 0, 0, 0.501539,-99) , 
8, -4.30616, 1, 0, 0.50574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407949,-99) , 
7, 2.42847, 1, 0, 0.502992,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0474675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.583403, 0, 1, 0.534143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467608,-99) , 
9, 1.0968, 1, 0, 0.524346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483897,-99) , 
4, 0.999524, 1, 0, 0.48694,-99) , 
NN(
0, 
0, 
-1, -1.94818, 0, -1, 0.467282,-99) , 
7, 1.57188, 1, 0, 0.484101,-99) , 
1, -0.00178541, 1, 0, 0.496005,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.027854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459811,-99) , 
4, 0.999524, 0, 0, 0.50568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448922,-99) , 
7, -1.28243, 0, 0, 0.502946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444905,-99) , 
9, -2.66864, 0, 0, 0.500705,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0531892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490814,-99) , 
4, 0.999996, 0, 0, 0.514479,-99) , 
NN(
0, 
0, 
-1, 4.3389, 1, -1, 0.461554,-99) , 
4, 0.999909, 0, 0, 0.50784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452757,-99) , 
4, 0.999048, 0, 0, 0.505952,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0254195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46754, 1, 1, 0.536573,-99) , 
NN(
0, 
0, 
-1, -1.28489, 0, -1, 0.492821,-99) , 
8, -4.16173, 1, 0, 0.498209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422599,-99) , 
3, 8.97226, 1, 0, 0.496044,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0340751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481888,-99) , 
0, 0.501898, 1, 0, 0.55117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494018,-99) , 
2, -0.0709862, 1, 0, 0.499012,-99) , 
1, -0.00445233, 1, 0, 0.505361,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.459633,-99) , 
9, 1.59571, 1, 0, 0.501981,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0414995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714175, 0, 1, 0.514891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414328,-99) , 
4, 0.999751, 0, 0, 0.511854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363897,-99) , 
8, -2.97548, 1, 0, 0.45489,-99) , 
4, 0.999525, 0, 0, 0.508658,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0302166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491877,-99) , 
3, 2.63162, 1, 0, 0.533163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494079,-99) , 
2, -0.0739961, 1, 0, 0.499146,-99) , 
2, 0.0691459, 0, 0, 0.504204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451037,-99) , 
3, 8.80212, 1, 0, 0.502511,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0201989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.544188, 1, 1, 0.507171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453965,-99) , 
3, 8.83996, 1, 0, 0.505379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456709,-99) , 
9, 2.00348, 1, 0, 0.503116,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0228152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456801,-99) , 
4, 0.999049, 0, 0, 0.504496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433949,-99) , 
7, -1.57136, 0, 0, 0.502319,-99) , 
8, -4.77544, 1, 0, 0.504719,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0194724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45313,-99) , 
7, 2.14324, 1, 0, 0.502654,-99) , 
8, -0.553296, 0, 0, 0.504265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466802,-99) , 
9, 2.00348, 1, 0, 0.502492,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0252674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446196,-99) , 
3, 8.82294, 1, 0, 0.505209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446088,-99) , 
7, -1.28489, 0, 0, 0.502388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445025,-99) , 
9, -2.66864, 0, 0, 0.500097,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0451258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471436,-99) , 
0, 0.503802, 1, 0, 0.528317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449863,-99) , 
7, -0.999958, 0, 0, 0.517512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485159,-99) , 
8, -0.253288, 0, 0, 0.487168,-99) , 
8, -4.82902, 1, 0, 0.48946,-99) , 
1, -0.00178541, 1, 0, 0.49785,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0273581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495613,-99) , 
7, -0.434243, 0, 0, 0.554763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4839,-99) , 
9, 0.237401, 1, 0, 0.49823,-99) , 
1, 0.00498554, 0, 0, 0.504677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448473,-99) , 
9, 1.98267, 1, 0, 0.501952,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0274629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491258,-99) , 
2, -0.0225874, 1, 0, 0.498537,-99) , 
2, 0.132839, 0, 0, 0.500881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444989,-99) , 
2, 0.214436, 1, 0, 0.498812,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0536797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.43789, 1, 1, 0.567718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460357,-99) , 
3, 2.38133, 1, 0, 0.493036,-99) , 
2, 0.103501, 0, 0, 0.498769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438834,-99) , 
2, 0.0810957, 1, 0, 0.495862,-99) , 
NN(
0, 
0, 
-1, 0.498104, 0, -1, 0.417726,-99) , 
2, -0.0682022, 0, 0, 0.47347,-99) , 
3, 4.42839, 1, 0, 0.493771,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0318144);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406438,-99) , 
4, 0.999751, 0, 0, 0.503238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361201,-99) , 
7, 0.528443, 1, 0, 0.461067,-99) , 
4, 0.999524, 0, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442734,-99) , 
9, 2.07892, 1, 0, 0.498268,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0450128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399118,-99) , 
9, -2.10778, 0, 0, 0.481836,-99) , 
7, -1.2911, 1, 0, 0.527137,-99) , 
NN(
NN(
0, 
0, 
-1, -1.71346, 0, -1, 0.494732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299383,-99) , 
9, -1.04036, 1, 0, 0.430898,-99) , 
7, -0.999913, 0, 0, 0.490503,-99) , 
8, -4.12661, 1, 0, 0.495403,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0657079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.797586, 1, 1, 0.522604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369512,-99) , 
9, -0.781903, 0, 0, 0.472055,-99) , 
8, -2.86377, 0, 0, 0.510754,-99) , 
NN(
NN(
0, 
0, 
-1, -3.12, 0, 1, 0.517892,-99) , 
NN(
0, 
0, 
-1, -0.222455, 0, -1, 0.426592,-99) , 
9, -0.811191, 1, 0, 0.491011,-99) , 
7, 0.430247, 0, 0, 0.500118,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0666101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497559,-99) , 
7, -0.0469543, 1, 0, 0.50491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333567,-99) , 
7, -0.999277, 0, 0, 0.49606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4518,-99) , 
9, -2.76865, 0, 0, 0.565628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264348,-99) , 
7, -0.870621, 1, 0, 0.464691,-99) , 
9, -1.92837, 0, 0, 0.492017,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0568362);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45192,-99) , 
9, -0.720818, 0, 0, 0.503286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422903,-99) , 
9, -0.938929, 1, 0, 0.487606,-99) , 
7, 0.144598, 0, 0, 0.496459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385343,-99) , 
1, 0.0121806, 1, 0, 0.493414,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0197564);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.83539, 0, -1, 0.490123,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.076685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.755545, 1, 1, 0.521258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292178,-99) , 
9, -1.34227, 0, 0, 0.421282,-99) , 
9, -1.04951, 0, 0, 0.507393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483901,-99) , 
8, -3.68559, 0, 0, 0.511007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332987,-99) , 
6, -951.286, 0, 0, 0.39339,-99) , 
9, -0.916709, 1, 0, 0.481031,-99) , 
7, -0.142269, 0, 0, 0.498275,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0634197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483502,-99) , 
3, 2.66777, 1, 0, 0.525068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474295,-99) , 
2, 0.0507083, 0, 0, 0.485283,-99) , 
2, -0.0183238, 1, 0, 0.497358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435017,-99) , 
2, 0.0787888, 1, 0, 0.489522,-99) , 
NN(
0, 
0, 
-1, 0.498099, 0, -1, 0.431625,-99) , 
2, -0.0708144, 0, 0, 0.47293,-99) , 
3, 4.55258, 1, 0, 0.492739,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0237553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00768, 0, 1, 0.527529,-99) , 
NN(
0, 
0, 
-1, 2.42852, 1, -1, 0.493352,-99) , 
0, 0.492377, 1, 0, 0.496888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391955,-99) , 
1, 0.0119697, 1, 0, 0.493646,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0377872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.368631, 1, 1, 0.514997,-99) , 
NN(
0, 
0, 
-1, 4.08972, 1, -1, 0.484532,-99) , 
3, 1.56219, 1, 0, 0.498506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433536,-99) , 
2, 0.150389, 1, 0, 0.489347,-99) , 
NN(
0, 
0, 
-1, 0.498093, 0, -1, 0.416707,-99) , 
2, -0.0730526, 0, 0, 0.468644,-99) , 
3, 4.51103, 1, 0, 0.49281,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0688784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409111,-99) , 
7, -0.61854, 0, 0, 0.504876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282371,-99) , 
7, -0.491386, 1, 0, 0.456939,-99) , 
9, -1.64693, 0, 0, 0.499562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499691,-99) , 
8, -4.45116, 0, 0, 0.557962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299365,-99) , 
9, -1.74303, 1, 0, 0.473725,-99) , 
7, -0.999913, 0, 0, 0.496403,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0457676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497719,-99) , 
8, -3.13322, 0, 0, 0.514658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389117,-99) , 
7, 0.475048, 1, 0, 0.503117,-99) , 
NN(
0, 
0, 
-1, -0.712, 0, -1, 0.480488,-99) , 
9, -0.718658, 1, 0, 0.490552,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0308498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49347,-99) , 
7, -0.468659, 1, 0, 0.50034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421362,-99) , 
9, -2.42572, 0, 0, 0.496755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432828,-99) , 
7, -1.85622, 0, 0, 0.495098,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.078845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.15746, 0, 1, 0.598212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28751,-99) , 
7, -0.682239, 1, 0, 0.524688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48721,-99) , 
7, 0.877445, 1, 0, 0.504404,-99) , 
NN(
0, 
0, 
-1, -1.04094, 0, -1, 0.364835,-99) , 
7, -0.71429, 0, 0, 0.492941,-99) , 
9, -1.81637, 1, 0, 0.497602,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0848834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402532,-99) , 
4, 0.999524, 0, 0, 0.522705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316082,-99) , 
9, -1.07801, 0, 0, 0.421421,-99) , 
9, -0.874164, 0, 0, 0.509194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484113,-99) , 
8, -3.3526, 0, 0, 0.503614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371549,-99) , 
7, -0.303926, 0, 0, 0.429026,-99) , 
9, -0.938929, 1, 0, 0.482101,-99) , 
7, 0.144844, 0, 0, 0.497147,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0577197);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.57134, 0, 1, 0.538653,-99) , 
NN(
0, 
0, 
-1, 1.57131, 1, -1, 0.474779,-99) , 
1, 0.00236311, 0, 0, 0.49193,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0295335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552795,-99) , 
NN(
0, 
0, 
-1, 0.0709004, 1, -1, 0.4908,-99) , 
8, -1.26465, 0, 0, 0.494193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432387,-99) , 
9, 2.19739, 1, 0, 0.471891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42063,-99) , 
7, 1.89544, 1, 0, 0.45544,-99) , 
9, 1.34586, 1, 0, 0.490587,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0650014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.59349, 1, 1, 0.542044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476123,-99) , 
2, 0.0241032, 0, 0, 0.499201,-99) , 
2, -0.0462684, 1, 0, 0.507168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489783,-99) , 
2, 0.00403723, 1, 0, 0.501219,-99) , 
NN(
0, 
0, 
-1, -3.05993, 1, -1, 0.448622,-99) , 
2, -0.0708144, 0, 0, 0.486431,-99) , 
3, 4.47075, 1, 0, 0.503151,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0224613);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573538,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.491551,-99) , 
8, -4.78429, 1, 0, 0.495052,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0252427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.42789, 1, 1, 0.541803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463059,-99) , 
2, -0.217681, 0, 0, 0.504566,-99) , 
8, -4.34583, 1, 0, 0.508349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451911,-99) , 
9, 2.01494, 1, 0, 0.505715,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0725668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.72528, 0, 1, 0.566482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.243381,-99) , 
9, -1.56948, 0, 0, 0.392193,-99) , 
7, -0.355947, 1, 0, 0.51684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448707,-99) , 
4, 0.999525, 0, 0, 0.504582,-99) , 
NN(
0, 
0, 
-1, -0.796258, 0, -1, 0.39831,-99) , 
7, -0.428507, 0, 0, 0.493575,-99) , 
9, -1.33047, 1, 0, 0.49963,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0508512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00192363, 1, 1, 0.563278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436575,-99) , 
7, 1.00477, 0, 0, 0.495652,-99) , 
9, -0.0598844, 1, 0, 0.532114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489018,-99) , 
8, -2.30052, 0, 0, 0.497658,-99) , 
NN(
0, 
0, 
-1, -0.129559, 0, -1, 0.476526,-99) , 
9, 0.0914826, 1, 0, 0.491275,-99) , 
1, 0.00458981, 0, 0, 0.496753,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0511352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413648,-99) , 
9, -2.363, 0, 0, 0.506038,-99) , 
7, -1.5901, 1, 0, 0.529534,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481338,-99) , 
8, -2.95453, 0, 0, 0.499199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359778,-99) , 
9, -1.06209, 1, 0, 0.448428,-99) , 
7, -0.999232, 0, 0, 0.495913,-99) , 
8, -4.08019, 1, 0, 0.500715,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0329545);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471519,-99) , 
7, 0.141771, 0, 0, 0.515342,-99) , 
NN(
0, 
0, 
-1, 0.492377, 0, -1, 0.488791,-99) , 
1, -0.00464865, 1, 0, 0.492056,-99) , 
8, -4.7443, 1, 0, 0.494668,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0273658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438248,-99) , 
4, 0.999775, 0, 0, 0.503372,-99) , 
4, 0.999526, 1, 0, 0.506292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454115,-99) , 
0, 0.501271, 1, 0, 0.487964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438356,-99) , 
0, 0.494293, 0, 0, 0.47848,-99) , 
3, 4.42151, 1, 0, 0.500829,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0660637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478253,-99) , 
9, -2.70913, 0, 0, 0.573854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359234,-99) , 
9, -1.86536, 0, 0, 0.485129,-99) , 
7, -0.822192, 1, 0, 0.520357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493834,-99) , 
7, 0.170048, 1, 0, 0.502545,-99) , 
NN(
0, 
0, 
-1, 0.497166, 0, -1, 0.394637,-99) , 
7, -0.71429, 0, 0, 0.493764,-99) , 
8, -3.61141, 1, 0, 0.500677,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0260555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.98562, 0, 1, 0.508533,-99) , 
NN(
0, 
0, 
-1, -951.287, 1, -1, 0.443673,-99) , 
4, 0.999819, 0, 0, 0.50387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455811,-99) , 
4, 0.999048, 0, 0, 0.502295,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0454182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.44385, 1, 1, 0.543174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483692,-99) , 
9, -0.661389, 1, 0, 0.495078,-99) , 
1, 0.00236311, 0, 0, 0.507918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438401,-99) , 
9, 1.09527, 1, 0, 0.489457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392193,-99) , 
9, -1.6734, 1, 0, 0.441171,-99) , 
7, -0.137183, 0, 0, 0.471904,-99) , 
0, 0.501898, 1, 0, 0.500756,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0520893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499663,-99) , 
9, -1.71888, 1, 0, 0.515028,-99) , 
7, 1.28481, 0, 0, 0.527371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465271,-99) , 
7, 0.434004, 0, 0, 0.516902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475776,-99) , 
2, 0.0673584, 0, 0, 0.482673,-99) , 
8, -1.20773, 0, 0, 0.487035,-99) , 
1, 0.00236311, 0, 0, 0.497554,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0568571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498081, 1, 1, 0.566647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455093,-99) , 
9, 0.429766, 1, 0, 0.508452,-99) , 
7, 1.28749, 0, 0, 0.519537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428148,-99) , 
9, -1.68552, 1, 0, 0.524122,-99) , 
NN(
0, 
0, 
-1, -1.33849, 0, -1, 0.482466,-99) , 
7, -0.713657, 1, 0, 0.489574,-99) , 
1, -0.00178541, 1, 0, 0.498719,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0348179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497275,-99) , 
7, 0.427542, 0, 0, 0.549566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49591,-99) , 
1, -0.000897991, 1, 0, 0.508077,-99) , 
8, -1.33993, 0, 0, 0.511026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467031,-99) , 
7, 0.79009, 0, 0, 0.490579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445294,-99) , 
7, 1.90209, 1, 0, 0.476528,-99) , 
9, 1.41623, 1, 0, 0.507979,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0169571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.407066, 0, 1, 0.505227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432836,-99) , 
1, 0.0113546, 1, 0, 0.503131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454496,-99) , 
9, 2.19903, 1, 0, 0.501288,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0168124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.215158, 0, 1, 0.505061,-99) , 
NN(
0, 
0, 
-1, 1.3685, 0, -1, 0.470355,-99) , 
9, 1.66454, 1, 0, 0.502571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452391,-99) , 
9, -2.66864, 0, 0, 0.500625,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0560793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0399287, 1, 1, 0.555205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486285,-99) , 
8, -2.32495, 0, 0, 0.494769,-99) , 
1, 0.0033992, 0, 0, 0.505399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464778,-99) , 
8, -1.9315, 0, 0, 0.5011,-99) , 
NN(
0, 
0, 
-1, 2.0838, 1, -1, 0.418039,-99) , 
7, 0.15058, 0, 0, 0.486436,-99) , 
9, 0.0908633, 1, 0, 0.499335,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0266342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483931,-99) , 
7, 1.57214, 1, 0, 0.506496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43851,-99) , 
1, 0.0110856, 1, 0, 0.5043,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.478881,-99) , 
0, 0.504757, 1, 0, 0.502562,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0556489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.5099, 1, 1, 0.588005,-99) , 
NN(
0, 
0, 
-1, 0.434109, 0, -1, 0.475598,-99) , 
6, -951.286, 0, 0, 0.521597,-99) , 
NN(
NN(
0, 
0, 
-1, -3.58206, 1, 1, 0.54616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481181,-99) , 
7, -1.28269, 1, 0, 0.484962,-99) , 
1, -0.00345402, 1, 0, 0.494721,-99) , 
8, -1.28043, 0, 0, 0.498727,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0217417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478849,-99) , 
9, 1.03685, 1, 0, 0.504588,-99) , 
8, -0.356855, 0, 0, 0.506153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444478,-99) , 
9, 2.50887, 1, 0, 0.504381,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0267178);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498223,-99) , 
8, -2.42597, 0, 0, 0.50857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433078,-99) , 
2, -0.0677683, 0, 0, 0.491135,-99) , 
9, 0.0396629, 1, 0, 0.502572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459074,-99) , 
9, -2.66864, 0, 0, 0.500884,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.020845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498414,-99) , 
4, 0.999525, 1, 0, 0.501261,-99) , 
7, 2.1427, 0, 0, 0.503555,-99) , 
NN(
0, 
0, 
-1, 0.793176, 0, -1, 0.452249,-99) , 
9, 1.34586, 1, 0, 0.498592,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0304504);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442752,-99) , 
9, 2.26839, 1, 0, 0.506879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442618,-99) , 
7, -1.28307, 0, 0, 0.504089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451061,-99) , 
9, -2.55987, 0, 0, 0.50153,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0216534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499276,-99) , 
1, -0.00675144, 1, 0, 0.501952,-99) , 
8, -1.29693, 0, 0, 0.503774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456394,-99) , 
6, -0.159387, 0, 0, 0.507635,-99) , 
NN(
0, 
0, 
-1, 1.05195, 0, -1, 0.455837,-99) , 
6, -951.287, 0, 0, 0.476972,-99) , 
9, 1.02362, 1, 0, 0.500132,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0305175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.20751, 0, 1, 0.510447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431827,-99) , 
1, -0.00964224, 0, 0, 0.507637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43349,-99) , 
8, 0.138255, 0, 0, 0.469626,-99) , 
9, 1.41623, 1, 0, 0.50423,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0362938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493521,-99) , 
2, 0.0224324, 0, 0, 0.503565,-99) , 
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.426819,-99) , 
4, 0.999841, 0, 0, 0.498975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455404,-99) , 
4, 0.999524, 0, 0, 0.496725,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0317355);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498103,-99) , 
9, 0.0703923, 1, 0, 0.510626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418455,-99) , 
1, 0.0110864, 1, 0, 0.507547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487983,-99) , 
1, -0.00345402, 1, 0, 0.494856,-99) , 
NN(
0, 
0, 
-1, -951.289, 0, -1, 0.454617,-99) , 
7, -0.42254, 0, 0, 0.484186,-99) , 
0, 0.5019, 1, 0, 0.502847,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0427675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436685,-99) , 
4, 0.999955, 0, 0, 0.526808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489226,-99) , 
6, -951.286, 0, 0, 0.502253,-99) , 
7, 1.286, 0, 0, 0.507212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467205,-99) , 
4, 0.999049, 0, 0, 0.505887,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0406563);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445406,-99) , 
7, 2.14285, 1, 0, 0.523025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346879,-99) , 
5, 0.0130239, 1, 0, 0.501053,-99) , 
8, -1.85205, 0, 0, 0.505478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468317,-99) , 
9, 2.06746, 1, 0, 0.503826,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0673306);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483901,-99) , 
9, -2.83065, 0, 0, 0.586257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378979,-99) , 
9, -1.43054, 1, 0, 0.524425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494513,-99) , 
7, -0.00493971, 1, 0, 0.502429,-99) , 
NN(
0, 
0, 
-1, -0.503486, 1, -1, 0.374234,-99) , 
9, -1.69087, 0, 0, 0.493565,-99) , 
7, -0.71208, 1, 0, 0.498989,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0154141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503453,-99) , 
NN(
0, 
0, 
-1, 0.493647, 0, -1, 0.482484,-99) , 
3, 4.47075, 1, 0, 0.499456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453971,-99) , 
0, 0.505708, 1, 0, 0.497662,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0535016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474667,-99) , 
8, -3.07558, 0, 0, 0.511572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429937,-99) , 
9, -0.893638, 1, 0, 0.490692,-99) , 
7, 0.142899, 0, 0, 0.502474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436768,-99) , 
1, 0.0103564, 1, 0, 0.499964,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0425281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461835,-99) , 
0, 0.499041, 0, 0, 0.480012,-99) , 
6, -951.286, 0, 0, 0.520563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452495,-99) , 
8, -2.09707, 1, 0, 0.51473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484774,-99) , 
7, -1.28568, 1, 0, 0.487983,-99) , 
2, -0.0709862, 1, 0, 0.492166,-99) , 
8, -0.708392, 0, 0, 0.49457,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.100075);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481504,-99) , 
9, 1.06164, 1, 0, 0.535547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.238901,-99) , 
6, -1.28497, 0, 0, 0.497534,-99) , 
6, -951.286, 1, 0, 0.513596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482412,-99) , 
3, 4.13691, 1, 0, 0.50849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396922,-99) , 
6, -951.287, 0, 0, 0.435169,-99) , 
9, -0.196312, 1, 0, 0.495842,-99) , 
7, 0.429039, 0, 0, 0.504063,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0636554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475217,-99) , 
4, 0.999996, 0, 0, 0.50324,-99) , 
NN(
0, 
0, 
-1, 4.01671, 1, -1, 0.460638,-99) , 
4, 0.999909, 0, 0, 0.497802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411435,-99) , 
4, 0.999048, 0, 0, 0.495124,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0455151);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499972,-99) , 
6, -951.286, 1, 0, 0.528501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443492,-99) , 
9, -0.0902295, 1, 0, 0.495829,-99) , 
7, 0.71372, 0, 0, 0.507446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4562,-99) , 
7, 0.145956, 0, 0, 0.496375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444075,-99) , 
7, -0.589764, 1, 0, 0.473469,-99) , 
9, -0.936216, 0, 0, 0.487528,-99) , 
1, -0.00141849, 1, 0, 0.494174,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0337771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46423,-99) , 
9, -0.790864, 0, 0, 0.50177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444247,-99) , 
9, -1.0321, 1, 0, 0.484995,-99) , 
7, 0.142899, 0, 0, 0.494419,-99) , 
2, 0.214817, 0, 0, 0.495971,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0449577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497263,-99) , 
6, -951.286, 1, 0, 0.507192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354083,-99) , 
6, -951.286, 0, 0, 0.422778,-99) , 
7, -0.999277, 0, 0, 0.501616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343446,-99) , 
7, -1.32864, 1, 0, 0.466048,-99) , 
9, -2.25995, 0, 0, 0.498912,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.054547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.17612, 1, 1, 0.539865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451954,-99) , 
2, -0.0510416, 0, 0, 0.521746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465908,-99) , 
9, -0.288013, 1, 0, 0.502601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473718,-99) , 
1, -0.00316748, 1, 0, 0.481753,-99) , 
2, -0.0726098, 1, 0, 0.484982,-99) , 
8, -1.23819, 0, 0, 0.490125,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0209439);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.27321, 1, -1, 0.48953,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0294042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493567,-99) , 
9, 0.224846, 1, 0, 0.507124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429885,-99) , 
9, -2.42572, 0, 0, 0.503877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444002,-99) , 
7, -1.85705, 0, 0, 0.502307,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0292874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.09732, 1, 1, 0.55338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491458,-99) , 
2, -0.0710983, 1, 0, 0.495636,-99) , 
8, -1.256, 0, 0, 0.499681,-99) , 
NN(
0, 
0, 
-1, 0.790811, 1, -1, 0.465658,-99) , 
9, 1.55555, 1, 0, 0.497097,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0682043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.905255, 1, 1, 0.51815,-99) , 
NN(
0, 
0, 
-1, -0.958496, 0, -1, 0.45118,-99) , 
7, -0.142369, 0, 0, 0.507349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441393,-99) , 
5, 0.00164081, 0, 0, 0.49128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359509,-99) , 
5, 0.0114862, 1, 0, 0.484773,-99) , 
8, -2.75932, 0, 0, 0.495536,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0422465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.5826, 1, 1, 0.554623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45999,-99) , 
7, 0.714591, 0, 0, 0.49338,-99) , 
6, -951.286, 0, 0, 0.517864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559528,-99) , 
NN(
0, 
0, 
-1, -0.0274403, 1, -1, 0.483607,-99) , 
2, 0.21694, 0, 0, 0.486649,-99) , 
8, -1.26441, 0, 0, 0.491145,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0453468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0420041, 1, 1, 0.561231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495794,-99) , 
4, 0.999524, 1, 0, 0.499602,-99) , 
1, 0.00315096, 0, 0, 0.511601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466975,-99) , 
7, 2.24172, 1, 0, 0.507947,-99) , 
NN(
0, 
0, 
-1, 2.49013, 1, -1, 0.445626,-99) , 
7, 1.00945, 0, 0, 0.48446,-99) , 
9, 0.466863, 1, 0, 0.50534,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0454233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.99593, 0, 1, 0.510481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417553,-99) , 
8, -1.16527, 0, 0, 0.474302,-99) , 
9, 0.288145, 1, 0, 0.505386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479623,-99) , 
7, 1.47729, 1, 0, 0.503348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38993,-99) , 
9, -0.0269669, 0, 0, 0.43801,-99) , 
8, -2.35893, 0, 0, 0.484304,-99) , 
7, 1.00125, 1, 0, 0.499568,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0336415);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457531,-99) , 
9, 2.42693, 1, 0, 0.503285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403266,-99) , 
7, -1.28568, 0, 0, 0.499927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343551,-99) , 
7, -1.34214, 1, 0, 0.467965,-99) , 
9, -2.28251, 0, 0, 0.49754,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0370363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493182,-99) , 
7, 1.28627, 0, 0, 0.501004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413159,-99) , 
4, 0.999819, 0, 0, 0.496698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372915,-99) , 
7, 0.538027, 1, 0, 0.446178,-99) , 
4, 0.999525, 0, 0, 0.494062,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0325842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57911, 0, 1, 0.515038,-99) , 
NN(
0, 
0, 
-1, 1.34308, 0, -1, 0.467079,-99) , 
9, 1.16713, 1, 0, 0.509446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523129,-99) , 
NN(
0, 
0, 
-1, 0.0749763, 1, -1, 0.485092,-99) , 
8, -0.455941, 0, 0, 0.487766,-99) , 
1, 0.000160057, 0, 0, 0.498369,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0387608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492887,-99) , 
7, -0.262787, 1, 0, 0.499323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424185,-99) , 
7, -1.28311, 0, 0, 0.496375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32467,-99) , 
7, -1.52824, 1, 0, 0.454764,-99) , 
9, -2.43955, 0, 0, 0.493977,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0190059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41954,-99) , 
7, -1.57136, 0, 0, 0.501541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437792,-99) , 
9, -2.78079, 0, 0, 0.499422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452829,-99) , 
9, 2.07892, 1, 0, 0.497462,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0421533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.170619, 1, 1, 0.510089,-99) , 
NN(
0, 
0, 
-1, -1.14908, 0, -1, 0.42742,-99) , 
7, -0.713577, 0, 0, 0.503413,-99) , 
NN(
NN(
0, 
0, 
-1, -4.06104, 0, 1, 0.524808,-99) , 
NN(
0, 
0, 
-1, -1.75597, 0, -1, 0.448309,-99) , 
7, -0.660006, 1, 0, 0.4859,-99) , 
8, -3.62717, 0, 0, 0.498966,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0471708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484134,-99) , 
9, -0.256072, 1, 0, 0.513434,-99) , 
7, 1.5715, 0, 0, 0.521576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476322,-99) , 
9, -2.49647, 1, 0, 0.528681,-99) , 
NN(
0, 
0, 
-1, -1.75511, 0, -1, 0.481853,-99) , 
7, -1.28565, 1, 0, 0.485236,-99) , 
1, 0.00236311, 0, 0, 0.49483,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0304039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.67345, 1, 1, 0.505683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43007,-99) , 
7, -1.28566, 0, 0, 0.502732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330288,-99) , 
7, -1.55491, 1, 0, 0.460871,-99) , 
9, -2.46727, 0, 0, 0.500416,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0184678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547096,-99) , 
NN(
0, 
0, 
-1, 1.4345, 1, -1, 0.49691,-99) , 
8, -0.306241, 0, 0, 0.499693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509041,-99) , 
NN(
0, 
0, 
-1, -2.93074, 1, -1, 0.43865,-99) , 
7, 0.714438, 0, 0, 0.461388,-99) , 
1, 0.00592662, 1, 0, 0.496048,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0178931);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550658,-99) , 
NN(
0, 
0, 
-1, -2.38011, 0, -1, 0.493545,-99) , 
8, -5.05079, 1, 0, 0.495038,-99) , 
8, 0.0832446, 0, 0, 0.496925,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0314843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488088,-99) , 
9, 0.234454, 1, 0, 0.504771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420697,-99) , 
9, -2.41315, 0, 0, 0.501042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454601,-99) , 
7, -1.85623, 0, 0, 0.499838,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0191931);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497166,-99) , 
3, 8.20737, 0, 0, 0.499998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406527,-99) , 
4, 0.999751, 0, 0, 0.497315,-99) , 
NN(
0, 
0, 
-1, 0.498087, 0, -1, 0.463124,-99) , 
4, 0.999524, 0, 0, 0.495433,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0442919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408857,-99) , 
7, -0.999277, 0, 0, 0.502439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328509,-99) , 
7, -1.09679, 1, 0, 0.46281,-99) , 
9, -2.13175, 0, 0, 0.500082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44148,-99) , 
9, -2.6728, 0, 0, 0.497804,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0219304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496058,-99) , 
3, 8.21428, 0, 0, 0.49832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423049,-99) , 
4, 0.999751, 0, 0, 0.495961,-99) , 
NN(
0, 
0, 
-1, 0.545119, 1, -1, 0.437721,-99) , 
4, 0.999524, 0, 0, 0.492948,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0589131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481763,-99) , 
5, 0.00352744, 0, 0, 0.50126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435639,-99) , 
1, -0.0105848, 0, 0, 0.498906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437828,-99) , 
1, 0.0103564, 1, 0, 0.496629,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.029077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433776,-99) , 
4, 0.999819, 0, 0, 0.503572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457945,-99) , 
4, 0.999048, 0, 0, 0.502127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457063,-99) , 
9, -2.66864, 0, 0, 0.500404,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0160301);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -5.01963, 1, 1, 0.505736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503365,-99) , 
NN(
0, 
0, 
-1, -0.664328, 1, -1, 0.448527,-99) , 
8, 0.00709518, 0, 0, 0.473354,-99) , 
9, 1.33544, 1, 0, 0.502656,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0465325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421196,-99) , 
9, -2.03455, 1, 0, 0.524906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429925,-99) , 
7, -0.262787, 0, 0, 0.498132,-99) , 
NN(
0, 
0, 
-1, -0.0376243, 1, -1, 0.465594,-99) , 
9, -1.19963, 0, 0, 0.489841,-99) , 
7, -1.28311, 1, 0, 0.492495,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0450647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470832,-99) , 
3, 4.55103, 1, 0, 0.51102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475501,-99) , 
2, -0.0272167, 1, 0, 0.487147,-99) , 
2, 0.0310579, 0, 0, 0.493392,-99) , 
2, -0.213764, 1, 0, 0.495209,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0289382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497224,-99) , 
9, 0.0194071, 1, 0, 0.510394,-99) , 
NN(
0, 
0, 
-1, -0.469589, 1, -1, 0.488586,-99) , 
8, -2.4755, 0, 0, 0.496514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439037,-99) , 
9, 2.24389, 1, 0, 0.49436,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0565592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463755,-99) , 
9, -1.49527, 1, 0, 0.526816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402814,-99) , 
9, -1.35691, 0, 0, 0.499641,-99) , 
7, -0.425955, 1, 0, 0.506247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471316,-99) , 
9, 0.353333, 1, 0, 0.504448,-99) , 
NN(
0, 
0, 
-1, -1.22459, 1, -1, 0.462472,-99) , 
7, 0.142891, 0, 0, 0.485317,-99) , 
0, 0.49428, 0, 0, 0.502259,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0807901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.07437, 0, 1, 0.513593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451517,-99) , 
6, -951.286, 0, 0, 0.477777,-99) , 
9, -0.261051, 1, 0, 0.506348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442084,-99) , 
9, 1.27037, 1, 0, 0.505378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307668,-99) , 
6, -0.714643, 0, 0, 0.464796,-99) , 
6, -951.286, 1, 0, 0.481833,-99) , 
7, 0.714201, 1, 0, 0.497353,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0497967);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492,-99) , 
7, -0.235582, 1, 0, 0.498629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415566,-99) , 
7, -0.996991, 0, 0, 0.49409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495646,-99) , 
8, -4.50332, 0, 0, 0.541923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285017,-99) , 
7, -0.898436, 1, 0, 0.468658,-99) , 
9, -2.00476, 0, 0, 0.491156,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0317043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49178,-99) , 
7, 0.210629, 1, 0, 0.506807,-99) , 
9, 0.971211, 1, 0, 0.517866,-99) , 
NN(
NN(
0, 
0, 
-1, -1.35913, 1, 1, 0.522318,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.487647,-99) , 
8, -4.21271, 1, 0, 0.492294,-99) , 
8, -1.29918, 0, 0, 0.496106,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0473171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.347754, 1, 1, 0.512794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419849,-99) , 
7, -1.28493, 0, 0, 0.50978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497498,-99) , 
8, -4.56954, 0, 0, 0.552968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314164,-99) , 
7, -0.901319, 1, 0, 0.485489,-99) , 
9, -1.99955, 0, 0, 0.507077,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0385844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433403,-99) , 
9, -2.11772, 1, 0, 0.528317,-99) , 
NN(
NN(
0, 
0, 
-1, -0.672167, 0, -1, 0.493042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309959,-99) , 
7, -0.618963, 1, 0, 0.451774,-99) , 
9, -1.7588, 0, 0, 0.488493,-99) , 
7, -1.28568, 1, 0, 0.491475,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0399154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490623,-99) , 
6, -951.286, 0, 0, 0.53568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4897,-99) , 
8, -1.66636, 0, 0, 0.49798,-99) , 
7, -1.28568, 1, 0, 0.500793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463818,-99) , 
3, 4.19481, 1, 0, 0.492407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38372,-99) , 
8, -1.65868, 1, 0, 0.47176,-99) , 
2, -0.0702072, 0, 0, 0.496235,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.024787);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471875,-99) , 
9, 2.41896, 1, 0, 0.529285,-99) , 
NN(
0, 
0, 
-1, 1.00106, 1, -1, 0.49349,-99) , 
8, -0.708392, 0, 0, 0.496319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46885,-99) , 
0, 0.501081, 1, 0, 0.494961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429385,-99) , 
0, 0.496186, 0, 0, 0.472954,-99) , 
1, 0.00592662, 1, 0, 0.49424,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.040329);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467937,-99) , 
2, -0.0835287, 0, 0, 0.522851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452344,-99) , 
2, 0.0653736, 1, 0, 0.512047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498796,-99) , 
4, 0.999524, 1, 0, 0.50279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420346,-99) , 
6, -951.286, 1, 0, 0.45067,-99) , 
7, 1.01018, 1, 0, 0.493306,-99) , 
8, -2.02438, 0, 0, 0.498535,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0299809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480562,-99) , 
9, 0.367598, 1, 0, 0.503515,-99) , 
8, -0.264253, 0, 0, 0.505902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435694,-99) , 
9, 2.44326, 1, 0, 0.503855,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0160637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.917428, 1, 1, 0.504178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415056,-99) , 
7, -1.57054, 0, 0, 0.50178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433184,-99) , 
9, -2.82568, 0, 0, 0.499874,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0223806);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496992,-99) , 
3, 0.544724, 1, 0, 0.501712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448911,-99) , 
3, 8.84769, 1, 0, 0.500009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435205,-99) , 
9, 2.04072, 1, 0, 0.497114,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0462836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435899,-99) , 
9, -1.55903, 1, 0, 0.526071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396805,-99) , 
9, -1.6607, 0, 0, 0.497171,-99) , 
7, -0.71421, 1, 0, 0.501445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433156,-99) , 
9, -2.792, 0, 0, 0.499311,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0402854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434141,-99) , 
9, -2.03455, 1, 0, 0.522939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437405,-99) , 
7, -0.876795, 0, 0, 0.502281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273517,-99) , 
7, -0.742184, 1, 0, 0.440082,-99) , 
9, -1.90008, 0, 0, 0.496988,-99) , 
7, -1.28493, 1, 0, 0.498936,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0358517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466059,-99) , 
9, 0.233906, 1, 0, 0.503817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459787,-99) , 
8, -2.20585, 0, 0, 0.481829,-99) , 
7, 0.715519, 1, 0, 0.495696,-99) , 
NN(
0, 
0, 
-1, 0.711255, 0, -1, 0.456513,-99) , 
1, 0.00592662, 1, 0, 0.492124,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0530972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494478,-99) , 
9, -2.46074, 0, 0, 0.558753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38742,-99) , 
6, -951.286, 0, 0, 0.453124,-99) , 
9, -1.8942, 1, 0, 0.513305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4923,-99) , 
8, -3.96787, 1, 0, 0.495316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3241,-99) , 
7, -0.50726, 1, 0, 0.406002,-99) , 
9, -1.69087, 0, 0, 0.489211,-99) , 
7, -0.713657, 1, 0, 0.493379,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0306959);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.149185, 0, 1, 0.535813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49217,-99) , 
8, -2.84792, 0, 0, 0.499264,-99) , 
NN(
0, 
0, 
-1, -2.06336, 0, -1, 0.480184,-99) , 
7, 0.714162, 1, 0, 0.492226,-99) , 
0, 0.491424, 1, 0, 0.495417,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0498366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484075,-99) , 
9, -2.78768, 0, 0, 0.568379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429848,-99) , 
9, -1.76465, 1, 0, 0.521813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476613,-99) , 
7, 1.47607, 1, 0, 0.503006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328061,-99) , 
9, -2.05441, 0, 0, 0.496525,-99) , 
7, -0.999968, 1, 0, 0.499528,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0334188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454418,-99) , 
9, -2.22554, 1, 0, 0.528119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411376,-99) , 
7, -0.876802, 0, 0, 0.499624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334838,-99) , 
7, -0.612017, 1, 0, 0.462634,-99) , 
9, -1.75511, 0, 0, 0.495635,-99) , 
7, -1.28568, 1, 0, 0.497977,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0340116);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53483,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.48842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319597,-99) , 
7, -0.955749, 1, 0, 0.430083,-99) , 
9, -2.05167, 0, 0, 0.484093,-99) , 
7, -1.57054, 1, 0, 0.486335,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0235547);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.42575, 1, 1, 0.543393,-99) , 
NN(
0, 
0, 
-1, 2.46403, 1, -1, 0.490817,-99) , 
7, -1.28562, 1, 0, 0.494802,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0504547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464284,-99) , 
7, 0.18256, 0, 0, 0.546922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463383,-99) , 
7, 0.268757, 1, 0, 0.506697,-99) , 
8, -2.90241, 0, 0, 0.511643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4377,-99) , 
8, -2.42109, 0, 0, 0.487354,-99) , 
8, -2.9293, 1, 0, 0.49335,-99) , 
9, -0.501104, 1, 0, 0.502559,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0670685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404189,-99) , 
6, -0.998877, 0, 0, 0.534068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461775,-99) , 
7, 1.57386, 0, 0, 0.48334,-99) , 
6, -951.286, 0, 0, 0.506733,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469409,-99) , 
5, 0.00163867, 0, 0, 0.495837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402062,-99) , 
5, 0.0114678, 1, 0, 0.491173,-99) , 
8, -2.05549, 0, 0, 0.495527,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0224052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.494633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378065,-99) , 
8, -3.20176, 1, 0, 0.448408,-99) , 
4, 0.999524, 0, 0, 0.492037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412577,-99) , 
9, 2.52834, 1, 0, 0.489983,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0317331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430334,-99) , 
4, 0.999977, 0, 0, 0.550591,-99) , 
NN(
0, 
0, 
-1, 0.0103564, 1, -1, 0.495195,-99) , 
7, 1.85693, 0, 0, 0.500492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380314,-99) , 
8, -3.02392, 1, 0, 0.445453,-99) , 
4, 0.999525, 0, 0, 0.497668,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0450576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.21739, 1, 1, 0.555901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.670227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393992,-99) , 
6, -0.143181, 0, 0, 0.510952,-99) , 
6, -951.286, 1, 0, 0.530326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480789,-99) , 
9, 0.0974829, 1, 0, 0.498509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457871,-99) , 
9, -2.50199, 0, 0, 0.496045,-99) , 
7, 1.57226, 0, 0, 0.501022,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0529682);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49908,-99) , 
3, 4.54421, 1, 0, 0.518292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460516,-99) , 
2, -0.0118754, 1, 0, 0.490855,-99) , 
2, 0.00591238, 0, 0, 0.504356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459441,-99) , 
9, 0.0991387, 1, 0, 0.487256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427684,-99) , 
7, -0.414919, 0, 0, 0.471391,-99) , 
2, -0.0688005, 0, 0, 0.499037,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0328979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4356,-99) , 
9, -2.1919, 1, 0, 0.52076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439949,-99) , 
7, -0.672258, 0, 0, 0.497732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301764,-99) , 
7, -0.61131, 1, 0, 0.436116,-99) , 
9, -1.75198, 0, 0, 0.490831,-99) , 
7, -1.28428, 1, 0, 0.493043,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0392317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481816,-99) , 
9, -2.43156, 1, 0, 0.529569,-99) , 
NN(
0, 
0, 
-1, -1.76822, 0, -1, 0.482667,-99) , 
7, -1.28495, 1, 0, 0.486196,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0580202);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481162,-99) , 
4, 0.999997, 0, 0, 0.505745,-99) , 
NN(
0, 
0, 
-1, 1.02106, 1, -1, 0.464307,-99) , 
4, 0.999932, 0, 0, 0.500192,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.457369,-99) , 
4, 0.999524, 0, 0, 0.497811,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0583489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455536,-99) , 
7, -0.142804, 0, 0, 0.498224,-99) , 
8, -3.59921, 1, 0, 0.503589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475254,-99) , 
8, -3.57978, 0, 0, 0.502759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359469,-99) , 
7, -0.129407, 1, 0, 0.477673,-99) , 
9, -1.24076, 0, 0, 0.496252,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.035861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.03708, 0, 1, 0.551819,-99) , 
NN(
0, 
0, 
-1, 0.498074, 0, -1, 0.448067,-99) , 
9, -1.49621, 1, 0, 0.519838,-99) , 
NN(
0, 
0, 
-1, -1.78311, 0, -1, 0.489048,-99) , 
7, -0.71421, 1, 0, 0.494296,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0267535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48379,-99) , 
9, -0.438433, 1, 0, 0.496974,-99) , 
8, -0.705915, 0, 0, 0.498762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45738,-99) , 
9, 2.01494, 1, 0, 0.496825,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.039139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481897,-99) , 
9, -1.9593, 0, 0, 0.50658,-99) , 
NN(
0, 
0, 
-1, -1.09786, 0, -1, 0.479041,-99) , 
0, 0.502852, 1, 0, 0.50277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399163,-99) , 
6, -0.711306, 0, 0, 0.501561,-99) , 
NN(
0, 
0, 
-1, 0.143298, 0, -1, 0.452088,-99) , 
6, -951.286, 0, 0, 0.47921,-99) , 
2, -0.0679183, 0, 0, 0.498824,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0385804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479425,-99) , 
9, -2.83158, 0, 0, 0.552864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477532,-99) , 
9, -1.84764, 1, 0, 0.525072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493033,-99) , 
7, -0.2356, 1, 0, 0.498628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37616,-99) , 
9, -2.0043, 0, 0, 0.493332,-99) , 
7, -0.997018, 1, 0, 0.497134,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0327631);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456738,-99) , 
9, 2.46757, 1, 0, 0.51739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487081,-99) , 
2, 0.0270861, 0, 0, 0.493322,-99) , 
8, -1.17155, 0, 0, 0.496511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454865,-99) , 
2, -0.216928, 0, 0, 0.494969,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0428518);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.13477, 1, 1, 0.510283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430707,-99) , 
9, -2.84412, 0, 0, 0.528657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349406,-99) , 
7, -0.870111, 1, 0, 0.47189,-99) , 
9, -1.89719, 0, 0, 0.505372,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.043176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.531952, 0, 1, 0.577692,-99) , 
NN(
0, 
0, 
-1, -2.19288, 0, -1, 0.49003,-99) , 
9, -0.329273, 1, 0, 0.500448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482609,-99) , 
0, 0.496186, 0, 0, 0.520381,-99) , 
NN(
0, 
0, 
-1, 0.434955, 1, -1, 0.477037,-99) , 
2, -0.0776622, 1, 0, 0.483409,-99) , 
8, -2.68968, 0, 0, 0.491021,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0870287);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482251,-99) , 
2, 0.0637149, 1, 0, 0.515818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301647,-99) , 
6, -1.28543, 0, 0, 0.495859,-99) , 
6, -951.286, 1, 0, 0.504401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439987,-99) , 
9, 2.42925, 1, 0, 0.502503,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0504179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.579113, 1, 1, 0.515366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459641,-99) , 
2, -0.00981284, 1, 0, 0.491416,-99) , 
2, 0.00442853, 0, 0, 0.503779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457154,-99) , 
7, -0.0737414, 0, 0, 0.498479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424695,-99) , 
9, 0.348499, 1, 0, 0.480109,-99) , 
2, -0.0703192, 0, 0, 0.499967,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0337937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458802,-99) , 
5, 0.00100787, 0, 0, 0.494648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441265,-99) , 
1, -0.0105881, 0, 0, 0.492802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446105,-99) , 
1, 0.0103564, 1, 0, 0.491024,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0374242);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486976,-99) , 
7, -0.918002, 1, 0, 0.491665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427087,-99) , 
7, -1.57137, 0, 0, 0.489933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431355,-99) , 
9, -2.79366, 0, 0, 0.488109,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0176428);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545035,-99) , 
NN(
0, 
0, 
-1, -2.1707, 0, -1, 0.492552,-99) , 
8, -4.85455, 1, 0, 0.494469,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0218062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497397,-99) , 
7, 2.14341, 0, 0, 0.501471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408737,-99) , 
4, 0.999774, 0, 0, 0.498124,-99) , 
NN(
0, 
0, 
-1, -0.83341, 1, -1, 0.463951,-99) , 
4, 0.999524, 0, 0, 0.496239,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0774687);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474127,-99) , 
6, -1.00041, 0, 0, 0.551222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463279,-99) , 
9, 0.981103, 1, 0, 0.479044,-99) , 
6, -951.286, 0, 0, 0.511538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476915,-99) , 
7, -0.0431825, 0, 0, 0.509891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.234946,-99) , 
6, -1.57061, 0, 0, 0.486474,-99) , 
6, -951.286, 1, 0, 0.495919,-99) , 
8, -1.94235, 0, 0, 0.499901,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0309572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442306,-99) , 
9, -2.11772, 1, 0, 0.526692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417003,-99) , 
7, -0.876246, 0, 0, 0.497756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301393,-99) , 
7, -0.722464, 1, 0, 0.437607,-99) , 
9, -1.86976, 0, 0, 0.49236,-99) , 
7, -1.28493, 1, 0, 0.494876,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0495805);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487753,-99) , 
9, -2.67827, 0, 0, 0.559342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43485,-99) , 
6, -951.286, 0, 0, 0.479122,-99) , 
9, -2.05008, 1, 0, 0.518259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49037,-99) , 
8, -3.96787, 1, 0, 0.493262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327414,-99) , 
7, -0.504895, 1, 0, 0.410981,-99) , 
9, -1.6851, 0, 0, 0.487552,-99) , 
7, -0.71363, 1, 0, 0.492825,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0601299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.969525, 1, 1, 0.56146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448482,-99) , 
0, 0.49904, 1, 0, 0.497187,-99) , 
9, 1.42618, 1, 0, 0.521946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495576,-99) , 
7, 1.28246, 0, 0, 0.504852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257098,-99) , 
6, -1.57197, 0, 0, 0.486165,-99) , 
6, -951.286, 1, 0, 0.493886,-99) , 
8, -1.28043, 0, 0, 0.498016,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0755522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.22213, 1, 1, 0.513183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432724,-99) , 
7, 0.429349, 0, 0, 0.476989,-99) , 
2, -0.0721981, 0, 0, 0.50752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462476,-99) , 
6, -0.265287, 0, 0, 0.505087,-99) , 
NN(
0, 
0, 
-1, -2.11503, 0, -1, 0.299516,-99) , 
6, -1.57099, 0, 0, 0.482617,-99) , 
6, -951.286, 1, 0, 0.493665,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0415019);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491141,-99) , 
9, -1.58813, 1, 0, 0.501317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.226065,-99) , 
6, -1.85627, 0, 0, 0.481782,-99) , 
6, -951.286, 1, 0, 0.490278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41155,-99) , 
1, 0.0119697, 1, 0, 0.488047,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0694758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28585, 0, 1, 0.513182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463378,-99) , 
0, 0.503802, 1, 0, 0.507735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470097,-99) , 
6, 0.167765, 0, 0, 0.498867,-99) , 
NN(
0, 
0, 
-1, -2.04674, 0, -1, 0.30287,-99) , 
6, -1.57121, 0, 0, 0.478362,-99) , 
6, -951.286, 1, 0, 0.491268,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0662128);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452899,-99) , 
6, -0.998462, 0, 0, 0.530343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473041,-99) , 
9, 0.279141, 1, 0, 0.486712,-99) , 
6, -951.286, 0, 0, 0.507031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473345,-99) , 
5, 0.00309915, 0, 0, 0.49075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385727,-99) , 
5, 0.0130239, 1, 0, 0.48681,-99) , 
8, -2.15985, 0, 0, 0.492989,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0881279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465164,-99) , 
4, 0.999998, 0, 0, 0.503137,-99) , 
NN(
0, 
0, 
-1, 4.05409, 1, -1, 0.471922,-99) , 
4, 0.999955, 0, 0, 0.497501,-99) , 
NN(
0, 
0, 
-1, 0.497862, 1, -1, 0.442551,-99) , 
4, 0.999524, 0, 0, 0.494603,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0771972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00065246, 1, 1, 0.537037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413294,-99) , 
7, -0.424386, 0, 0, 0.498651,-99) , 
8, -3.42017, 1, 0, 0.509111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473045,-99) , 
6, 0.222531, 0, 0, 0.499692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260568,-99) , 
6, -1.85727, 0, 0, 0.483048,-99) , 
6, -951.286, 1, 0, 0.494444,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0280745);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.28926, 0, 1, 0.523894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482147,-99) , 
8, -2.39201, 0, 0, 0.487888,-99) , 
2, -0.213764, 1, 0, 0.489501,-99) , 
8, -0.603931, 0, 0, 0.492235,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0414011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444027,-99) , 
9, -2.16277, 1, 0, 0.524425,-99) , 
NN(
NN(
0, 
0, 
-1, 0.755922, 1, -1, 0.489982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306024,-99) , 
7, -0.551371, 1, 0, 0.463113,-99) , 
9, -1.73402, 0, 0, 0.4869,-99) , 
7, -1.28427, 1, 0, 0.489698,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0307085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498096, 0, 1, 0.571687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494043,-99) , 
8, -4.90822, 1, 0, 0.496114,-99) , 
8, -1.29772, 0, 0, 0.500565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462987,-99) , 
9, 2.39767, 1, 0, 0.503337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42982,-99) , 
8, -0.39691, 0, 0, 0.476473,-99) , 
9, 1.34586, 1, 0, 0.498212,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0197179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.931316, 1, 1, 0.506632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42747,-99) , 
9, -2.54351, 0, 0, 0.504163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447641,-99) , 
7, -1.85702, 0, 0, 0.502649,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0234894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49513,-99) , 
7, 1.28556, 0, 0, 0.500592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451201,-99) , 
4, 0.999728, 0, 0, 0.498375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442658,-99) , 
4, 0.999048, 0, 0, 0.496611,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0176091);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496648,-99) , 
8, -1.11887, 0, 0, 0.499363,-99) , 
NN(
0, 
0, 
-1, 0.211956, 0, -1, 0.465592,-99) , 
9, 1.628, 1, 0, 0.497031,-99) , 
0, 0.505707, 0, 0, 0.498604,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0242555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459815,-99) , 
9, -2.07305, 0, 0, 0.502287,-99) , 
7, -1.57135, 1, 0, 0.504315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505459,-99) , 
NN(
0, 
0, 
-1, 0.498065, 0, -1, 0.448118,-99) , 
2, -0.013869, 1, 0, 0.470938,-99) , 
1, 0.00592662, 1, 0, 0.501257,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0332581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.391596, 1, 1, 0.537583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489629,-99) , 
2, 0.00398065, 1, 0, 0.518775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489165,-99) , 
3, 0.509052, 1, 0, 0.49336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438906,-99) , 
3, 8.93425, 1, 0, 0.491651,-99) , 
1, 0.00458981, 0, 0, 0.495181,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0485873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.13716, 1, 1, 0.545385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436887,-99) , 
7, 1.14216, 1, 0, 0.505898,-99) , 
8, -2.27916, 0, 0, 0.510536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47451,-99) , 
0, 0.496183, 1, 0, 0.499049,-99) , 
NN(
0, 
0, 
-1, 0.500946, 0, -1, 0.464479,-99) , 
7, 1.0012, 0, 0, 0.485623,-99) , 
9, 0.34666, 1, 0, 0.504172,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0367146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.628179, 1, 1, 0.526423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464122,-99) , 
8, -1.24305, 0, 0, 0.490954,-99) , 
7, 1.00026, 0, 0, 0.510069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484913,-99) , 
2, -0.0901074, 1, 0, 0.488391,-99) , 
4, 0.999048, 1, 0, 0.490558,-99) , 
8, -1.99443, 0, 0, 0.495752,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0335461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.788039, 0, 1, 0.535515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479465,-99) , 
9, 0.461431, 1, 0, 0.520672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470193,-99) , 
9, -2.3303, 0, 0, 0.507729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405922,-99) , 
9, -1.12595, 0, 0, 0.49055,-99) , 
7, -0.141774, 1, 0, 0.496375,-99) , 
0, 0.503803, 0, 0, 0.498819,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0342831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489394,-99) , 
2, 0.0717919, 0, 0, 0.494888,-99) , 
8, -1.256, 0, 0, 0.497729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501615,-99) , 
NN(
0, 
0, 
-1, 0.499041, 1, -1, 0.444025,-99) , 
7, 0.517347, 1, 0, 0.46054,-99) , 
9, 1.34586, 1, 0, 0.494217,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0334106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.28069, 1, 1, 0.547645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474684,-99) , 
3, 3.9544, 1, 0, 0.529676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494546,-99) , 
8, -3.71893, 1, 0, 0.499188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351613,-99) , 
9, -2.05441, 0, 0, 0.494325,-99) , 
7, -0.998739, 1, 0, 0.498612,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0450394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464625,-99) , 
9, -2.1919, 1, 0, 0.532069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451424,-99) , 
7, -0.672224, 0, 0, 0.507862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32583,-99) , 
7, -0.63362, 1, 0, 0.452311,-99) , 
9, -1.78542, 0, 0, 0.502014,-99) , 
7, -1.28489, 1, 0, 0.504253,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0178549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.20737, 0, 1, 0.503705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4053,-99) , 
4, 0.999751, 0, 0, 0.500762,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.447122,-99) , 
4, 0.999524, 0, 0, 0.497875,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0543679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484622,-99) , 
4, 0.999998, 0, 0, 0.507368,-99) , 
NN(
0, 
0, 
-1, 0.364034, 1, -1, 0.474679,-99) , 
4, 0.999955, 0, 0, 0.500873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446676,-99) , 
4, 0.999048, 0, 0, 0.499138,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0294695);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456881,-99) , 
4, 0.999909, 0, 0, 0.523637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494295,-99) , 
2, 0.146506, 0, 0, 0.49746,-99) , 
2, -0.0739092, 1, 0, 0.501224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448603,-99) , 
4, 0.999048, 0, 0, 0.49953,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0206307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470904,-99) , 
7, -0.419935, 0, 0, 0.522023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498143,-99) , 
7, -1.28495, 1, 0, 0.500766,-99) , 
2, 0.0736227, 0, 0, 0.503873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46503,-99) , 
9, 2.07892, 1, 0, 0.502182,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0274447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497219,-99) , 
0, 0.492797, 1, 0, 0.506739,-99) , 
0, 0.496685, 0, 0, 0.513141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460096,-99) , 
9, 1.19012, 1, 0, 0.497367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405787,-99) , 
7, -0.824314, 1, 0, 0.474881,-99) , 
9, -1.81637, 0, 0, 0.494149,-99) , 
0, 0.497138, 1, 0, 0.501713,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0221275);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445207,-99) , 
9, -2.06992, 0, 0, 0.499919,-99) , 
7, -1.57132, 1, 0, 0.501977,-99) , 
2, -0.212914, 1, 0, 0.504014,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0393762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0106193, 0, 1, 0.554894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495313,-99) , 
2, -0.104826, 1, 0, 0.500435,-99) , 
3, 0.742545, 1, 0, 0.509829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478644,-99) , 
8, -4.05933, 0, 0, 0.509543,-99) , 
NN(
0, 
0, 
-1, 0.0768247, 1, -1, 0.462287,-99) , 
9, -0.758258, 1, 0, 0.483815,-99) , 
3, 4.53295, 1, 0, 0.504882,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0298867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.19254, 0, 1, 0.512065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455188,-99) , 
9, -2.79613, 0, 0, 0.510228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50987,-99) , 
NN(
0, 
0, 
-1, 1.70566, 1, -1, 0.449456,-99) , 
8, 0.0550896, 0, 0, 0.476369,-99) , 
9, 1.34586, 1, 0, 0.507041,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0295281);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493402,-99) , 
3, 1.35158, 1, 0, 0.502651,-99) , 
NN(
0, 
0, 
-1, -0.0680901, 0, -1, 0.476946,-99) , 
3, 4.51103, 1, 0, 0.497908,-99) , 
7, 2.42852, 0, 0, 0.500262,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.017108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452803,-99) , 
4, 0.999819, 0, 0, 0.499472,-99) , 
2, 0.20157, 0, 0, 0.501695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455004,-99) , 
4, 0.999048, 0, 0, 0.500217,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0136094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453434,-99) , 
7, -1.85371, 0, 0, 0.50116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452696,-99) , 
0, 0.489519, 0, 0, 0.499728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452282,-99) , 
9, 2.06746, 1, 0, 0.497694,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0244331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485316,-99) , 
9, 1.13183, 1, 0, 0.524844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387364,-99) , 
5, 0.0130239, 1, 0, 0.496394,-99) , 
8, -1.44519, 0, 0, 0.500066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448963,-99) , 
9, 2.01494, 1, 0, 0.497719,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0324332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487192,-99) , 
7, 1.28584, 0, 0, 0.491866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439751,-99) , 
4, 0.999774, 0, 0, 0.489939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450298,-99) , 
4, 0.999524, 0, 0, 0.487904,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.026623);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546678,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435757,-99) , 
9, -2.52113, 1, 0, 0.528412,-99) , 
NN(
0, 
0, 
-1, -2.15075, 0, -1, 0.492671,-99) , 
7, -1.44814, 1, 0, 0.494797,-99) , 
7, 2.42862, 0, 0, 0.496496,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0215406);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48609,-99) , 
6, -951.286, 1, 0, 0.509039,-99) , 
NN(
0, 
0, 
-1, -1.11288, 0, -1, 0.493199,-99) , 
8, -4.08019, 1, 0, 0.495454,-99) , 
0, 0.505708, 0, 0, 0.497107,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.03683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.469266, 1, 1, 0.512558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442093,-99) , 
7, -1.28562, 0, 0, 0.510061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372104,-99) , 
7, -1.31255, 1, 0, 0.464594,-99) , 
9, -2.26759, 0, 0, 0.506703,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0377874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474019,-99) , 
6, -951.287, 0, 0, 0.536336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492621,-99) , 
7, 0.961761, 1, 0, 0.505525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334927,-99) , 
7, -0.735833, 1, 0, 0.446338,-99) , 
9, -1.87659, 0, 0, 0.500507,-99) , 
7, -1.28065, 1, 0, 0.50315,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0340346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487367,-99) , 
0, 0.498089, 1, 0, 0.4996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433511,-99) , 
4, 0.999774, 0, 0, 0.497295,-99) , 
NN(
0, 
0, 
-1, 0.497402, 1, -1, 0.438586,-99) , 
4, 0.999524, 0, 0, 0.494273,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0167341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48846,-99) , 
9, 0.325638, 1, 0, 0.536761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490104,-99) , 
7, -0.136209, 0, 0, 0.520273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497012,-99) , 
8, -0.740452, 0, 0, 0.498319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470619,-99) , 
9, 1.8102, 1, 0, 0.496758,-99) , 
0, 0.503804, 0, 0, 0.499166,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0289044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493192,-99) , 
9, -2.20281, 1, 0, 0.542951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462942,-99) , 
9, -1.96332, 0, 0, 0.503534,-99) , 
NN(
0, 
0, 
-1, 4.5606, 1, -1, 0.479335,-99) , 
0, 0.495233, 0, 0, 0.497519,-99) , 
7, -1.28565, 1, 0, 0.50098,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0425142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476719,-99) , 
0, 0.501627, 1, 0, 0.524246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420484,-99) , 
9, -1.37395, 0, 0, 0.497254,-99) , 
7, -0.427442, 1, 0, 0.503835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472413,-99) , 
6, -951.286, 1, 0, 0.488063,-99) , 
NN(
0, 
0, 
-1, 1.31789, 0, -1, 0.457392,-99) , 
9, 0.769952, 1, 0, 0.482354,-99) , 
0, 0.496185, 0, 0, 0.496901,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0493761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403164,-99) , 
9, -2.36615, 0, 0, 0.508827,-99) , 
7, -1.52904, 1, 0, 0.52111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457471,-99) , 
9, -1.59061, 1, 0, 0.513788,-99) , 
NN(
0, 
0, 
-1, -1.32855, 0, -1, 0.49219,-99) , 
7, -0.427982, 1, 0, 0.49555,-99) , 
8, -3.96471, 1, 0, 0.499659,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0400789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.78942, 0, 1, 0.54939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475253,-99) , 
9, -1.98494, 1, 0, 0.520577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448466,-99) , 
7, -0.427366, 0, 0, 0.500597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31229,-99) , 
7, -0.4034, 1, 0, 0.473805,-99) , 
9, -1.60389, 0, 0, 0.497478,-99) , 
7, -0.998672, 1, 0, 0.500223,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0457829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480377,-99) , 
9, -1.44372, 1, 0, 0.523697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409513,-99) , 
9, -1.37395, 0, 0, 0.499205,-99) , 
7, -0.426566, 1, 0, 0.504574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454175,-99) , 
9, -2.66864, 0, 0, 0.502721,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0368545);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495754,-99) , 
0, 0.506118, 0, 0, 0.513456,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.482898,-99) , 
0, 0.504757, 0, 0, 0.484882,-99) , 
8, 0.131629, 0, 0, 0.487423,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0336144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57047, 1, 1, 0.564649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46046,-99) , 
9, -1.94208, 1, 0, 0.525675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494183,-99) , 
6, -951.288, 0, 0, 0.513298,-99) , 
NN(
0, 
0, 
-1, 0.502125, 1, -1, 0.489269,-99) , 
0, 0.502851, 0, 0, 0.492722,-99) , 
7, -0.999232, 1, 0, 0.496468,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0216871);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436921,-99) , 
7, -0.915356, 0, 0, 0.498193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349365,-99) , 
7, -0.949059, 1, 0, 0.449455,-99) , 
9, -2.04576, 0, 0, 0.494461,-99) , 
7, -1.56816, 1, 0, 0.49657,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0209052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483486,-99) , 
0, 0.5019, 1, 0, 0.501495,-99) , 
8, -0.356855, 0, 0, 0.503092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453494,-99) , 
9, 2.55886, 1, 0, 0.50181,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0272517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447647,-99) , 
9, -2.11772, 1, 0, 0.51604,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.496002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357255,-99) , 
7, -0.63196, 1, 0, 0.462994,-99) , 
9, -1.7588, 0, 0, 0.492391,-99) , 
7, -1.28568, 1, 0, 0.494161,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.047083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489546,-99) , 
8, -3.8322, 0, 0, 0.526726,-99) , 
NN(
0, 
0, 
-1, -2.44994, 0, -1, 0.465088,-99) , 
9, -1.12296, 1, 0, 0.508679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499832,-99) , 
8, -3.54129, 1, 0, 0.505327,-99) , 
NN(
0, 
0, 
-1, -1.3736, 0, -1, 0.404935,-99) , 
9, -1.15464, 0, 0, 0.494365,-99) , 
7, -0.142269, 1, 0, 0.499207,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0479015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4878,-99) , 
9, -1.07125, 1, 0, 0.533385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464068,-99) , 
6, -951.286, 1, 0, 0.494827,-99) , 
8, -4.06235, 0, 0, 0.517823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499734,-99) , 
0, 0.503804, 0, 0, 0.505128,-99) , 
NN(
0, 
0, 
-1, -1.35904, 0, -1, 0.427862,-99) , 
9, -1.06572, 0, 0, 0.494812,-99) , 
7, -0.141774, 1, 0, 0.502554,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0373381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.70709, 1, 1, 0.549807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454568,-99) , 
8, -2.89581, 1, 0, 0.495244,-99) , 
3, 4.24557, 1, 0, 0.529671,-99) , 
NN(
NN(
0, 
0, 
-1, -4.51406, 0, 1, 0.54069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46473,-99) , 
9, -1.94356, 0, 0, 0.506928,-99) , 
7, -1.28562, 1, 0, 0.509465,-99) , 
2, 0.0723769, 0, 0, 0.512362,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.024013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.34618, 0, 1, 0.528993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44437,-99) , 
7, -1.47613, 0, 0, 0.503778,-99) , 
7, 1.57131, 0, 0, 0.507581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457211,-99) , 
9, -2.55987, 0, 0, 0.505354,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0196128);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496411,-99) , 
7, 1.28585, 0, 0, 0.500831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448449,-99) , 
4, 0.999728, 0, 0, 0.498473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451517,-99) , 
4, 0.999048, 0, 0, 0.497034,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0175066);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539432,-99) , 
NN(
NN(
0, 
0, 
-1, 0.437981, 0, 1, 0.518961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486502,-99) , 
8, -3.49372, 0, 0, 0.497701,-99) , 
0, 0.502852, 0, 0, 0.50072,-99) , 
2, 0.214776, 0, 0, 0.502187,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0399694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.38277, 0, 1, 0.555906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447573,-99) , 
6, -951.286, 0, 0, 0.485419,-99) , 
9, -1.88979, 1, 0, 0.527114,-99) , 
NN(
NN(
0, 
0, 
-1, -3.73034, 1, 1, 0.504784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325364,-99) , 
7, -0.1789, 1, 0, 0.471338,-99) , 
9, -1.40641, 0, 0, 0.500394,-99) , 
7, -0.714273, 1, 0, 0.504977,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0351216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503275, 0, 1, 0.519492,-99) , 
NN(
0, 
0, 
-1, -0.137873, 0, -1, 0.48918,-99) , 
0, 0.50444, 1, 0, 0.51054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470091,-99) , 
9, -1.57938, 1, 0, 0.513151,-99) , 
NN(
0, 
0, 
-1, -1.80211, 0, -1, 0.485135,-99) , 
7, -0.713641, 1, 0, 0.489956,-99) , 
0, 0.500948, 0, 0, 0.495451,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0291601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.0733, 0, 1, 0.52791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456216,-99) , 
0, 0.494283, 0, 0, 0.512504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476663,-99) , 
0, 0.500947, 1, 0, 0.495233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422385,-99) , 
9, -1.76939, 0, 0, 0.491828,-99) , 
7, -0.711445, 1, 0, 0.495434,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0263274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.481394, 0, 1, 0.526505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49355,-99) , 
7, -1.36031, 1, 0, 0.495881,-99) , 
8, -1.85469, 0, 0, 0.502139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453715,-99) , 
9, 2.06746, 1, 0, 0.500003,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0178953);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498882,-99) , 
8, -1.90742, 0, 0, 0.504061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463425,-99) , 
7, 2.14282, 1, 0, 0.502066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457145,-99) , 
9, 2.07892, 1, 0, 0.500102,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0346677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0106193, 0, 1, 0.538687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494172,-99) , 
2, -0.0313346, 1, 0, 0.501776,-99) , 
3, 0.74253, 1, 0, 0.5081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465388,-99) , 
0, 0.502714, 1, 0, 0.500356,-99) , 
NN(
0, 
0, 
-1, 0.156394, 0, -1, 0.457647,-99) , 
0, 0.496184, 0, 0, 0.486525,-99) , 
3, 4.53295, 1, 0, 0.503997,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0307032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498192,-99) , 
0, 0.497138, 1, 0, 0.508528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416454,-99) , 
0, 0.499039, 0, 0, 0.461546,-99) , 
4, 0.999819, 0, 0, 0.505259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437128,-99) , 
4, 0.999048, 0, 0, 0.503187,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0226675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.414973, 1, 1, 0.509234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456267,-99) , 
9, -2.82691, 0, 0, 0.507726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448864,-99) , 
7, 2.42852, 1, 0, 0.506122,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0502043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.3523, 1, 1, 0.517272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431448,-99) , 
2, 0.138987, 0, 0, 0.471709,-99) , 
2, 0.0712709, 1, 0, 0.510178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488527,-99) , 
8, -3.11109, 1, 0, 0.496954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328271,-99) , 
9, -1.11026, 0, 0, 0.467509,-99) , 
9, -0.731801, 0, 0, 0.491276,-99) , 
7, 0.143748, 1, 0, 0.499431,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0273362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429749,-99) , 
4, 0.999774, 0, 0, 0.504995,-99) , 
4, 0.999524, 1, 0, 0.507238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486875,-99) , 
0, 0.498101, 1, 0, 0.504906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443795,-99) , 
9, 1.19756, 1, 0, 0.479479,-99) , 
7, 1.857, 1, 0, 0.504704,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0326978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493711,-99) , 
0, 0.500948, 0, 0, 0.499387,-99) , 
8, 0.307263, 0, 0, 0.501078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47882,-99) , 
8, -4.59062, 0, 0, 0.511244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35114,-99) , 
7, -0.921554, 1, 0, 0.467935,-99) , 
9, -2.01268, 0, 0, 0.497471,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0364425);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492726,-99) , 
1, 0.0020005, 1, 0, 0.532694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479643,-99) , 
9, 0.461128, 1, 0, 0.520198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490454,-99) , 
7, 0.144873, 1, 0, 0.499526,-99) , 
NN(
0, 
0, 
-1, -0.348011, 1, -1, 0.478835,-99) , 
8, -3.45888, 0, 0, 0.493278,-99) , 
2, 0.0724048, 0, 0, 0.497218,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0217665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.431332, 0, 1, 0.520462,-99) , 
NN(
0, 
0, 
-1, 1.19535, 1, -1, 0.495439,-99) , 
1, 0.00236311, 0, 0, 0.502155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44571,-99) , 
9, -2.55987, 0, 0, 0.499605,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0447799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.426067, 1, 1, 0.51643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440799,-99) , 
6, -951.286, 0, 0, 0.473071,-99) , 
7, -0.997088, 0, 0, 0.513583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409193,-99) , 
7, -1.57431, 1, 0, 0.473599,-99) , 
9, -2.28667, 0, 0, 0.510818,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0476071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476107,-99) , 
7, -0.142334, 0, 0, 0.502976,-99) , 
8, -3.60115, 1, 0, 0.506071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479181,-99) , 
8, -3.69713, 0, 0, 0.504995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384527,-99) , 
7, -0.140817, 1, 0, 0.483324,-99) , 
9, -1.24076, 0, 0, 0.499699,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.031582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49969,-99) , 
8, -3.91587, 0, 0, 0.531075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446644,-99) , 
8, -2.47561, 0, 0, 0.490694,-99) , 
9, -1.59278, 1, 0, 0.516092,-99) , 
NN(
NN(
0, 
0, 
-1, -3.82658, 1, 1, 0.503522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422995,-99) , 
9, -1.47878, 0, 0, 0.497865,-99) , 
7, -0.428507, 1, 0, 0.50239,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0275968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493034,-99) , 
7, 1.28571, 0, 0, 0.498024,-99) , 
4, 0.999524, 1, 0, 0.499916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464558,-99) , 
3, 4.46038, 1, 0, 0.496118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431004,-99) , 
1, -0.00269751, 0, 0, 0.482645,-99) , 
2, -0.0739901, 0, 0, 0.4972,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0405658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.16915, 0, 1, 0.552413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455973,-99) , 
8, -2.47457, 0, 0, 0.483454,-99) , 
9, -1.73209, 1, 0, 0.527352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492474,-99) , 
8, -3.93914, 1, 0, 0.495527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32785,-99) , 
8, -4.2114, 1, 0, 0.429049,-99) , 
9, -1.66613, 0, 0, 0.491042,-99) , 
7, -0.71429, 1, 0, 0.49731,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0313618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.7854, 0, 1, 0.516717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462652,-99) , 
7, 0.71925, 0, 0, 0.491558,-99) , 
9, -0.164602, 1, 0, 0.506784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482422,-99) , 
0, 0.503294, 0, 0, 0.488698,-99) , 
0, 0.498544, 1, 0, 0.491692,-99) , 
0, 0.49809, 1, 0, 0.498998,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.016851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.99246, 0, 1, 0.503295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433457,-99) , 
7, 0.146128, 1, 0, 0.460091,-99) , 
4, 0.999864, 0, 0, 0.499366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437818,-99) , 
4, 0.999048, 0, 0, 0.497485,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0227215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478053,-99) , 
9, -2.49647, 1, 0, 0.527215,-99) , 
NN(
NN(
0, 
0, 
-1, -0.877333, 0, -1, 0.49709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352113,-99) , 
7, -0.886292, 1, 0, 0.443375,-99) , 
9, -1.98893, 0, 0, 0.493582,-99) , 
7, -1.28568, 1, 0, 0.496096,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.062026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.18199, 1, 1, 0.516123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340345,-99) , 
6, -1.2845, 0, 0, 0.493781,-99) , 
6, -951.286, 1, 0, 0.503107,-99) , 
NN(
0, 
0, 
-1, 0.498079, 0, -1, 0.466354,-99) , 
9, 1.34586, 1, 0, 0.499557,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0407888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.468458, 0, 1, 0.536312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471408,-99) , 
9, 2.37502, 1, 0, 0.520504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471304,-99) , 
9, -1.4148, 1, 0, 0.51135,-99) , 
NN(
0, 
0, 
-1, -1.58341, 0, -1, 0.485239,-99) , 
7, -0.428566, 1, 0, 0.492217,-99) , 
8, -1.16899, 0, 0, 0.496063,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0250244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49398,-99) , 
2, 0.0741005, 0, 0, 0.497547,-99) , 
NN(
0, 
0, 
-1, -0.142919, 1, -1, 0.472495,-99) , 
2, -0.0750664, 0, 0, 0.493827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439263,-99) , 
0, 0.505709, 1, 0, 0.491698,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0398663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.224393, 0, 1, 0.55353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463967,-99) , 
7, 0.143313, 0, 0, 0.496446,-99) , 
9, -1.03184, 1, 0, 0.501288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547092,-99) , 
NN(
0, 
0, 
-1, -0.167547, 1, -1, 0.474293,-99) , 
9, -1.06467, 0, 0, 0.484587,-99) , 
8, -3.38434, 0, 0, 0.49586,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0384939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479247,-99) , 
9, -1.9334, 0, 0, 0.516885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459852,-99) , 
8, -1.87106, 0, 0, 0.483099,-99) , 
7, 1.00001, 1, 0, 0.507603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524947,-99) , 
NN(
0, 
0, 
-1, -1.79664, 0, -1, 0.487501,-99) , 
8, -4.45359, 1, 0, 0.490525,-99) , 
0, 0.498091, 0, 0, 0.49923,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0134977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.46908, 1, 1, 0.537652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461244,-99) , 
9, 1.83904, 1, 0, 0.498863,-99) , 
7, 2.14261, 0, 0, 0.501147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431864,-99) , 
4, 0.999048, 0, 0, 0.499027,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0358457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481222,-99) , 
9, 0.463235, 1, 0, 0.505482,-99) , 
7, 2.14319, 0, 0, 0.508453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493962,-99) , 
6, -951.286, 0, 0, 0.520574,-99) , 
NN(
0, 
0, 
-1, -3.72846, 0, -1, 0.481737,-99) , 
7, -0.714262, 1, 0, 0.48859,-99) , 
0, 0.497138, 1, 0, 0.496527,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0452607);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443341,-99) , 
7, -0.0319694, 1, 0, 0.525515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478648,-99) , 
7, 0.142827, 0, 0, 0.499804,-99) , 
9, -1.14341, 1, 0, 0.505694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479224,-99) , 
9, -2.68725, 1, 0, 0.512391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399122,-99) , 
7, -1.12418, 1, 0, 0.471805,-99) , 
9, -2.0935, 0, 0, 0.502523,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0121364);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.493932,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0342378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488514,-99) , 
0, 0.496184, 0, 0, 0.52383,-99) , 
NN(
0, 
0, 
-1, -1.06364, 0, -1, 0.491681,-99) , 
7, -0.142913, 1, 0, 0.501586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450257,-99) , 
9, -2.55987, 0, 0, 0.499208,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0155068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42521, 1, 1, 0.533874,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.496717,-99) , 
8, -0.603931, 0, 0, 0.49984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431845,-99) , 
4, 0.999048, 0, 0, 0.497769,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0263576);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491055,-99) , 
2, -0.0301995, 1, 0, 0.497655,-99) , 
2, 0.21457, 0, 0, 0.499354,-99) , 
8, 0.107185, 0, 0, 0.501103,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0422175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497125,-99) , 
9, -0.43823, 1, 0, 0.551279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465349,-99) , 
8, -2.31778, 0, 0, 0.502819,-99) , 
9, -0.197764, 1, 0, 0.512293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605333,-99) , 
NN(
0, 
0, 
-1, 0.393607, 1, -1, 0.484416,-99) , 
9, -0.342039, 0, 0, 0.490916,-99) , 
8, -2.79295, 0, 0, 0.501308,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0323123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498904,-99) , 
4, 0.999977, 1, 0, 0.505057,-99) , 
4, 0.999524, 1, 0, 0.508355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458288,-99) , 
2, 0.0674288, 0, 0, 0.469148,-99) , 
1, -0.00265936, 1, 0, 0.48638,-99) , 
7, 1.28571, 1, 0, 0.504018,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0390913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495266,-99) , 
4, 0.999997, 0, 0, 0.511021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407204,-99) , 
9, 0.0401244, 1, 0, 0.479556,-99) , 
4, 0.999932, 0, 0, 0.506748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402489,-99) , 
9, -0.834208, 1, 0, 0.456386,-99) , 
4, 0.999524, 0, 0, 0.504094,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0360449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476925,-99) , 
9, -0.635267, 1, 0, 0.510109,-99) , 
NN(
0, 
0, 
-1, 0.552398, 0, -1, 0.489642,-99) , 
7, 0.43, 1, 0, 0.500212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4608,-99) , 
9, -2.56404, 0, 0, 0.498414,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.040105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498907, 1, 1, 0.547857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487469,-99) , 
0, 0.492377, 0, 0, 0.541093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499647,-99) , 
8, -3.69366, 1, 0, 0.505529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364731,-99) , 
7, -0.146094, 1, 0, 0.457618,-99) , 
9, -1.37395, 0, 0, 0.500932,-99) , 
7, -0.427482, 1, 0, 0.510911,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0450522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49925,-99) , 
4, 0.999989, 0, 0, 0.519349,-99) , 
NN(
0, 
0, 
-1, 0.999566, 1, -1, 0.456913,-99) , 
4, 0.999774, 0, 0, 0.515751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438238,-99) , 
4, 0.999048, 0, 0, 0.513347,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0435448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.562707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477364,-99) , 
9, 0.395261, 1, 0, 0.514039,-99) , 
8, -1.66893, 0, 0, 0.517821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492283,-99) , 
8, 0.462827, 0, 0, 0.514674,-99) , 
NN(
0, 
0, 
-1, 1.44049, 1, -1, 0.469112,-99) , 
8, -0.303225, 0, 0, 0.487874,-99) , 
9, 0.949338, 1, 0, 0.513439,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0372009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498096, 0, 1, 0.55915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472925,-99) , 
8, -0.421425, 0, 0, 0.519372,-99) , 
9, 1.42618, 1, 0, 0.535108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489663,-99) , 
7, -0.401768, 0, 0, 0.52522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491224,-99) , 
8, -3.13062, 0, 0, 0.50263,-99) , 
2, 0.0736227, 0, 0, 0.505881,-99) , 
8, -1.28043, 0, 0, 0.510277,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0266206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451592,-99) , 
7, -1.28568, 0, 0, 0.506667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465459,-99) , 
9, -2.47817, 0, 0, 0.504557,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.460512,-99) , 
4, 0.999524, 0, 0, 0.502277,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0261056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499107,-99) , 
2, 0.0600581, 0, 0, 0.503782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446759,-99) , 
4, 0.999051, 0, 0, 0.502146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479163,-99) , 
8, -4.4642, 0, 0, 0.511144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397161,-99) , 
7, -0.877112, 1, 0, 0.477218,-99) , 
9, -1.92837, 0, 0, 0.499054,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0141149);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.720477, 0, 1, 0.523368,-99) , 
NN(
0, 
0, 
-1, 0.505573, 1, -1, 0.497671,-99) , 
0, 0.493328, 1, 0, 0.50146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436442,-99) , 
1, 0.0121806, 1, 0, 0.499641,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0260111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.29217, 0, 1, 0.557181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479011,-99) , 
9, 1.4488, 1, 0, 0.535269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486013,-99) , 
3, 4.44883, 1, 0, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460931,-99) , 
9, 2.00667, 1, 0, 0.501161,-99) , 
7, 1.85712, 0, 0, 0.504408,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0229638);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495032,-99) , 
2, 0.00971883, 0, 0, 0.51783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495051,-99) , 
7, -1.28421, 1, 0, 0.497541,-99) , 
3, 0.917366, 1, 0, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452955,-99) , 
3, 8.80212, 1, 0, 0.500056,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0246377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28584, 0, 1, 0.508507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443428,-99) , 
4, 0.999819, 0, 0, 0.505444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427099,-99) , 
0, 0.498093, 0, 0, 0.467393,-99) , 
4, 0.999524, 0, 0, 0.503468,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0387033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502851, 0, 1, 0.529148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457961,-99) , 
0, 0.497143, 0, 0, 0.494382,-99) , 
7, 0.143298, 0, 0, 0.513519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491081,-99) , 
9, -0.857709, 1, 0, 0.497022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40649,-99) , 
7, -0.747637, 1, 0, 0.473159,-99) , 
9, -1.72067, 0, 0, 0.493155,-99) , 
1, 0.00149974, 0, 0, 0.500311,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0255872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.677099, 1, 1, 0.537331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491883,-99) , 
2, 0.185028, 0, 0, 0.494353,-99) , 
3, 0.502767, 1, 0, 0.497237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451325,-99) , 
3, 8.80212, 1, 0, 0.495848,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0308773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999995, 0, 1, 0.511988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460532,-99) , 
6, -951.287, 1, 0, 0.478108,-99) , 
4, 0.999887, 0, 0, 0.509038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415048,-99) , 
9, -0.820074, 1, 0, 0.466138,-99) , 
4, 0.999524, 0, 0, 0.506756,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0208285);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483125,-99) , 
4, 0.999909, 0, 0, 0.50419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466436,-99) , 
4, 0.999048, 0, 0, 0.503044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463738,-99) , 
9, -2.474, 0, 0, 0.50106,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0244997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499442,-99) , 
2, -0.0321018, 1, 0, 0.507329,-99) , 
NN(
0, 
0, 
-1, -1.96415, 1, -1, 0.479854,-99) , 
3, 4.55086, 1, 0, 0.502256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45017,-99) , 
9, 2.00348, 1, 0, 0.499811,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0659404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480276,-99) , 
6, -0.699287, 0, 0, 0.521323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307042,-99) , 
6, -1.85501, 0, 0, 0.507364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487649,-99) , 
0, 0.501624, 1, 0, 0.505195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464186,-99) , 
8, -3.78138, 1, 0, 0.473463,-99) , 
0, 0.497136, 0, 0, 0.492335,-99) , 
6, -951.286, 0, 0, 0.500713,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0443796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000579617, 1, 1, 0.519084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306096,-99) , 
6, -1.57052, 0, 0, 0.501129,-99) , 
6, -951.286, 1, 0, 0.508947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485227,-99) , 
0, 0.500808, 1, 0, 0.516568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476182,-99) , 
0, 0.500811, 0, 0, 0.488824,-99) , 
7, -0.999913, 1, 0, 0.492094,-99) , 
0, 0.49809, 1, 0, 0.50027,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0256173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42862, 0, 1, 0.541534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491011,-99) , 
7, 0.918599, 0, 0, 0.496562,-99) , 
7, 2.14296, 0, 0, 0.499191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45341,-99) , 
4, 0.999048, 0, 0, 0.497793,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0368024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.46986, 1, 1, 0.511381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457815,-99) , 
7, -0.997579, 0, 0, 0.508588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486174,-99) , 
7, -1.50036, 1, 0, 0.519867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357674,-99) , 
7, -0.901319, 1, 0, 0.477377,-99) , 
9, -1.99955, 0, 0, 0.505253,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0157761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.29508, 1, 1, 0.531805,-99) , 
NN(
0, 
0, 
-1, -0.0103251, 0, -1, 0.496864,-99) , 
8, -0.455941, 0, 0, 0.499073,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.462611,-99) , 
1, 0.00592662, 1, 0, 0.495769,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0335027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498868,-99) , 
6, -951.286, 1, 0, 0.527877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465231,-99) , 
7, 2.31974, 1, 0, 0.49471,-99) , 
9, 1.04521, 1, 0, 0.514479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487029,-99) , 
2, 0.0338417, 0, 0, 0.494334,-99) , 
2, -0.210605, 1, 0, 0.495673,-99) , 
7, 1.57171, 0, 0, 0.498396,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.015795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.3061, 0, 1, 0.505298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447651,-99) , 
7, -1.85702, 0, 0, 0.503804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448623,-99) , 
4, 0.999048, 0, 0, 0.502108,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0395236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49623, 0, 1, 0.52726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472981,-99) , 
7, 0.0274144, 1, 0, 0.499535,-99) , 
8, -2.95302, 0, 0, 0.514585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49988,-99) , 
9, -1.05593, 0, 0, 0.514421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475482,-99) , 
7, 0.428602, 1, 0, 0.486187,-99) , 
8, -3.29059, 1, 0, 0.49592,-99) , 
0, 0.497137, 1, 0, 0.503479,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0286709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474118,-99) , 
9, -2.34837, 0, 0, 0.505778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462318,-99) , 
6, -951.286, 0, 0, 0.484874,-99) , 
9, 1.01124, 1, 0, 0.502985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416281,-99) , 
1, -0.0116379, 0, 0, 0.500529,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0296798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.46943, 1, 1, 0.523648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486104,-99) , 
2, -0.041257, 1, 0, 0.491327,-99) , 
7, 2.14296, 0, 0, 0.493183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444639,-99) , 
3, 8.93425, 1, 0, 0.491777,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0179359);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464888,-99) , 
7, 1.91193, 1, 0, 0.501621,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.469194,-99) , 
1, 0.00592662, 1, 0, 0.498745,-99) , 
7, 2.42858, 0, 0, 0.500384,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0300442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454218,-99) , 
4, 0.999841, 0, 0, 0.501531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459177,-99) , 
4, 0.999524, 0, 0, 0.499452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485847,-99) , 
0, 0.501446, 1, 0, 0.500518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460626,-99) , 
7, -0.874894, 1, 0, 0.470498,-99) , 
7, 0.715798, 0, 0, 0.481286,-99) , 
0, 0.499995, 1, 0, 0.493218,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0245732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495282,-99) , 
3, 0.964766, 1, 0, 0.501402,-99) , 
NN(
0, 
0, 
-1, 1.34298, 1, -1, 0.467344,-99) , 
9, 1.52672, 1, 0, 0.498668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436804,-99) , 
3, 8.96578, 1, 0, 0.496844,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0305848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487548,-99) , 
8, -5.01737, 1, 0, 0.489211,-99) , 
8, -0.407066, 0, 0, 0.49101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463599,-99) , 
9, 2.21289, 1, 0, 0.48999,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0463267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.21029, 1, 1, 0.518552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371465,-99) , 
6, -1.28532, 0, 0, 0.499617,-99) , 
6, -951.286, 1, 0, 0.508075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525677,-99) , 
NN(
0, 
0, 
-1, 1.78982, 1, -1, 0.485022,-99) , 
7, -1.28046, 1, 0, 0.488043,-99) , 
0, 0.49809, 0, 0, 0.498355,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0266994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.132048, 0, 1, 0.529447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465682,-99) , 
0, 0.50607, 0, 0, 0.494701,-99) , 
0, 0.50512, 1, 0, 0.515252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481384,-99) , 
7, 0.999916, 1, 0, 0.496255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429557,-99) , 
7, 0.143298, 0, 0, 0.471697,-99) , 
2, -0.0767401, 0, 0, 0.492724,-99) , 
0, 0.502852, 0, 0, 0.496082,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0287113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494344,-99) , 
3, 3.84737, 1, 0, 0.519184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490481,-99) , 
7, 0.713071, 0, 0, 0.494915,-99) , 
0, 0.494281, 1, 0, 0.49943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470788,-99) , 
0, 0.499043, 0, 0, 0.491754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433152,-99) , 
2, -0.0631039, 0, 0, 0.481855,-99) , 
8, -1.57008, 1, 0, 0.496066,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.034392);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48414,-99) , 
5, 0.00251988, 0, 0, 0.497256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447118,-99) , 
1, -0.0105848, 0, 0, 0.495438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453247,-99) , 
1, 0.0103564, 1, 0, 0.493846,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0553872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486563,-99) , 
9, 0.713612, 1, 0, 0.519599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4721,-99) , 
9, -1.04687, 1, 0, 0.494429,-99) , 
7, 0.428944, 0, 0, 0.505326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490383,-99) , 
6, 0.455013, 0, 0, 0.504081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284175,-99) , 
6, -1.85639, 0, 0, 0.489844,-99) , 
6, -951.286, 1, 0, 0.496736,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.017402);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495744,-99) , 
8, -1.85469, 0, 0, 0.499909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466611,-99) , 
2, 0.214952, 1, 0, 0.498724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459766,-99) , 
9, 2.31593, 1, 0, 0.497329,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0335108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576953,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49711,-99) , 
8, -3.86681, 1, 0, 0.500825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484418,-99) , 
8, -4.11031, 0, 0, 0.513869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32141,-99) , 
7, -0.369222, 1, 0, 0.482175,-99) , 
9, -1.56604, 0, 0, 0.497137,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0362824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495566,-99) , 
9, -1.46564, 0, 0, 0.515218,-99) , 
7, -1.57132, 1, 0, 0.517529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496193,-99) , 
0, 0.49487, 1, 0, 0.509006,-99) , 
NN(
0, 
0, 
-1, -1.60212, 1, -1, 0.475667,-99) , 
7, -0.13921, 0, 0, 0.497237,-99) , 
0, 0.497138, 0, 0, 0.509331,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0444566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.43681, 0, 1, 0.56558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465987,-99) , 
9, -0.421645, 1, 0, 0.50885,-99) , 
8, -2.5044, 0, 0, 0.516378,-99) , 
NN(
NN(
0, 
0, 
-1, 0.042941, 0, 1, 0.509662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432551,-99) , 
8, -1.09328, 0, 0, 0.466899,-99) , 
7, 0.71943, 0, 0, 0.496456,-99) , 
9, 0.0825298, 1, 0, 0.509933,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0373449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714273, 1, 1, 0.511884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443284,-99) , 
7, 0.720163, 0, 0, 0.473849,-99) , 
0, 0.492376, 0, 0, 0.508261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449551,-99) , 
9, 0.231929, 1, 0, 0.494401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442263,-99) , 
7, -0.424184, 0, 0, 0.480456,-99) , 
2, 0.0717919, 1, 0, 0.504167,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0391617);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471055,-99) , 
3, 4.0948, 1, 0, 0.51363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472277,-99) , 
2, -0.00800406, 1, 0, 0.487283,-99) , 
2, 0.0268701, 0, 0, 0.494478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457048,-99) , 
2, -0.217241, 0, 0, 0.493152,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0271888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491057,-99) , 
7, -1.18192, 0, 0, 0.526423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489765,-99) , 
8, -4.34055, 1, 0, 0.491171,-99) , 
8, -4.55712, 1, 0, 0.493736,-99) , 
8, -0.00888225, 0, 0, 0.495347,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0318901);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496981,-99) , 
7, 0.467552, 0, 0, 0.557188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466737,-99) , 
9, -0.421676, 1, 0, 0.50091,-99) , 
8, -2.5044, 0, 0, 0.508368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492445,-99) , 
3, 4.4492, 0, 0, 0.498246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465211,-99) , 
2, 0.0650595, 1, 0, 0.493179,-99) , 
9, 0.0825298, 1, 0, 0.503483,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.025782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.289, 0, 1, 0.538212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463844,-99) , 
7, -0.713641, 0, 0, 0.498633,-99) , 
1, -0.00721094, 1, 0, 0.501152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48379,-99) , 
8, -4.46438, 0, 0, 0.511121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392303,-99) , 
7, -0.872967, 1, 0, 0.474723,-99) , 
9, -1.89719, 0, 0, 0.497794,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0295936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498086, 0, 1, 0.563719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47088,-99) , 
0, 0.49713, 1, 0, 0.490271,-99) , 
9, 1.33504, 1, 0, 0.516568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496214,-99) , 
8, -2.36008, 0, 0, 0.501037,-99) , 
NN(
0, 
0, 
-1, 0.93019, 0, -1, 0.478995,-99) , 
9, 0.0797161, 1, 0, 0.496436,-99) , 
8, -1.29918, 0, 0, 0.499493,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0222326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478952,-99) , 
0, 0.500955, 1, 0, 0.500613,-99) , 
9, 1.14547, 1, 0, 0.514624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494303,-99) , 
8, -4.21731, 1, 0, 0.497605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450611,-99) , 
8, -1.3932, 1, 0, 0.495671,-99) , 
8, -1.12358, 0, 0, 0.498142,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0375187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494274,-99) , 
7, 0.636101, 0, 0, 0.546721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472921,-99) , 
7, 0.708016, 1, 0, 0.499739,-99) , 
8, -2.38629, 0, 0, 0.5041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482798,-99) , 
9, 2.20558, 1, 0, 0.510119,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.472022,-99) , 
8, -0.462598, 0, 0, 0.480218,-99) , 
9, 0.0825298, 1, 0, 0.496424,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0375574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.410443, 1, 1, 0.528649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482053,-99) , 
9, -0.508396, 0, 0, 0.496279,-99) , 
3, 0.703769, 1, 0, 0.501377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478281,-99) , 
6, -951.286, 0, 0, 0.499321,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.443678,-99) , 
9, 0.051383, 1, 0, 0.482997,-99) , 
3, 4.39959, 1, 0, 0.49784,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0173851);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436571,-99) , 
9, -2.48547, 0, 0, 0.501196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449979,-99) , 
7, -1.85546, 0, 0, 0.499794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459355,-99) , 
9, 2.00348, 1, 0, 0.497795,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0323443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493889,-99) , 
9, -2.52113, 1, 0, 0.531628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454599,-99) , 
7, -0.0590576, 0, 0, 0.517646,-99) , 
NN(
0, 
0, 
-1, 0.496005, 0, -1, 0.489367,-99) , 
0, 0.492377, 1, 0, 0.492238,-99) , 
7, -1.28421, 1, 0, 0.495237,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0562294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326867,-99) , 
6, -1.56945, 0, 0, 0.523217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485707,-99) , 
9, -1.75514, 1, 0, 0.490623,-99) , 
6, -951.286, 0, 0, 0.508747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49352,-99) , 
7, 1.85738, 0, 0, 0.496322,-99) , 
NN(
0, 
0, 
-1, 0.499742, 1, -1, 0.472504,-99) , 
0, 0.500267, 0, 0, 0.490376,-99) , 
0, 0.499042, 1, 0, 0.500913,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0197884);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46444,-99) , 
7, -1.16002, 0, 0, 0.505084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471369,-99) , 
9, -2.33281, 0, 0, 0.503444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450477,-99) , 
7, -1.85416, 0, 0, 0.502106,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49122, 0, 1, 0.542213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45465,-99) , 
9, 0.372524, 1, 0, 0.505724,-99) , 
8, -1.67759, 0, 0, 0.508376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475614,-99) , 
8, -0.462794, 0, 0, 0.490815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417011,-99) , 
9, 2.43055, 1, 0, 0.476631,-99) , 
9, 0.921519, 1, 0, 0.503623,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0249869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497875,-99) , 
2, -0.0545903, 1, 0, 0.504137,-99) , 
NN(
0, 
0, 
-1, -0.0716577, 0, -1, 0.486325,-99) , 
3, 1.80696, 1, 0, 0.494158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4418,-99) , 
3, 8.96578, 1, 0, 0.492699,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0338114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.715675, 0, 1, 0.556837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450177,-99) , 
8, -1.38359, 0, 0, 0.492416,-99) , 
9, 0.82199, 1, 0, 0.51187,-99) , 
NN(
NN(
0, 
0, 
-1, -0.732296, 1, 1, 0.523793,-99) , 
NN(
0, 
0, 
-1, 0.0128433, 1, -1, 0.4868,-99) , 
2, 0.0745751, 0, 0, 0.492045,-99) , 
8, -1.84068, 0, 0, 0.496686,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0181745);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506252, 0, 1, 0.538244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49557,-99) , 
2, -0.211624, 1, 0, 0.497276,-99) , 
4, 0.999048, 1, 0, 0.498667,-99) , 
0, 0.504756, 0, 0, 0.501357,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0336308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139061, 1, 1, 0.512563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470103,-99) , 
9, -2.48999, 0, 0, 0.510329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474159,-99) , 
7, 0.0693393, 0, 0, 0.502327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448636,-99) , 
8, -2.20314, 1, 0, 0.485858,-99) , 
2, -0.0748489, 0, 0, 0.506627,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0247483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483624,-99) , 
0, 0.496187, 0, 0, 0.531743,-99) , 
NN(
NN(
0, 
0, 
-1, -3.27821, 1, 1, 0.513108,-99) , 
NN(
0, 
0, 
-1, -2.18396, 0, -1, 0.492872,-99) , 
7, 0.550927, 0, 0, 0.502034,-99) , 
7, -1.28568, 1, 0, 0.504231,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.023223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461811,-99) , 
1, 0.0099254, 1, 0, 0.506268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447122,-99) , 
9, -2.81661, 0, 0, 0.504452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462956,-99) , 
9, 2.24389, 1, 0, 0.502979,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0314482);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494553, 1, 1, 0.534743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441859,-99) , 
9, 0.204146, 1, 0, 0.501698,-99) , 
7, 0.714438, 0, 0, 0.513831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497278,-99) , 
0, 0.500358, 1, 0, 0.501891,-99) , 
NN(
0, 
0, 
-1, -0.0827511, 0, -1, 0.483891,-99) , 
0, 0.499995, 0, 0, 0.493004,-99) , 
0, 0.496185, 1, 0, 0.499658,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0507342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.42178, 0, 1, 0.520979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46039,-99) , 
7, -0.605405, 1, 0, 0.484966,-99) , 
9, -0.686317, 1, 0, 0.512296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490888,-99) , 
8, -3.1165, 1, 0, 0.500771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358231,-99) , 
9, -1.06771, 0, 0, 0.465864,-99) , 
9, -0.736407, 0, 0, 0.49423,-99) , 
7, 0.142789, 1, 0, 0.502069,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0345237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486522,-99) , 
2, -0.0700353, 0, 0, 0.509539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47333,-99) , 
0, 0.490723, 1, 0, 0.484053,-99) , 
0, 0.494869, 0, 0, 0.502944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465575,-99) , 
8, -3.07175, 0, 0, 0.486065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442836,-99) , 
1, -0.00345281, 0, 0, 0.477323,-99) , 
0, 0.50285, 1, 0, 0.499144,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.027864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.54346, 1, 1, 0.510233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403001,-99) , 
7, 0.000420888, 1, 0, 0.485286,-99) , 
9, -1.11504, 0, 0, 0.501552,-99) , 
NN(
0, 
0, 
-1, 1.61916, 0, -1, 0.468907,-99) , 
9, 1.40582, 1, 0, 0.498583,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0461746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466263,-99) , 
3, 3.00288, 1, 0, 0.513228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465516,-99) , 
8, -3.20729, 1, 0, 0.491714,-99) , 
3, 4.44004, 1, 0, 0.508681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488728,-99) , 
0, 0.496681, 0, 0, 0.495969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469303,-99) , 
2, -0.0738985, 1, 0, 0.478341,-99) , 
0, 0.497636, 1, 0, 0.490189,-99) , 
0, 0.499995, 0, 0, 0.4966,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0270373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483865,-99) , 
0, 0.499995, 1, 0, 0.537493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479853,-99) , 
8, -1.02088, 0, 0, 0.505845,-99) , 
9, 0.82199, 1, 0, 0.517063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496786,-99) , 
8, -2.17382, 0, 0, 0.500074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467692,-99) , 
7, 1.57087, 1, 0, 0.498231,-99) , 
8, -1.94313, 0, 0, 0.503055,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0361011);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534432,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4855,-99) , 
8, -1.8611, 1, 0, 0.512225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484026,-99) , 
2, 0.00769422, 0, 0, 0.491269,-99) , 
2, 0.0310069, 0, 0, 0.496615,-99) , 
2, -0.213764, 1, 0, 0.498084,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0496298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474406,-99) , 
8, -2.95166, 0, 0, 0.500218,-99) , 
8, -3.47407, 1, 0, 0.504105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470642,-99) , 
8, -3.49248, 0, 0, 0.492062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40497,-99) , 
7, -0.0761111, 1, 0, 0.476984,-99) , 
9, -1.16499, 0, 0, 0.49583,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.050602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426407,-99) , 
7, -1.28568, 0, 0, 0.515186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309053,-99) , 
6, -1.85774, 0, 0, 0.499817,-99) , 
6, -951.286, 1, 0, 0.506666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453208,-99) , 
9, -2.56404, 0, 0, 0.504172,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0278762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491637,-99) , 
9, -2.52113, 1, 0, 0.523886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499063,-99) , 
9, -1.15957, 1, 0, 0.502124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463819,-99) , 
9, -1.21415, 0, 0, 0.480441,-99) , 
8, -3.61561, 0, 0, 0.497341,-99) , 
7, -1.28562, 1, 0, 0.499379,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0259683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497903,-99) , 
8, -4.73551, 0, 0, 0.536264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421964,-99) , 
9, -2.17673, 0, 0, 0.503098,-99) , 
7, -1.28568, 1, 0, 0.505789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45716,-99) , 
9, 2.06746, 1, 0, 0.503632,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0289345);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478967,-99) , 
2, -0.0680901, 0, 0, 0.501489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45466,-99) , 
8, -1.89322, 0, 0, 0.48276,-99) , 
7, 1.13621, 1, 0, 0.497393,-99) , 
7, 2.42843, 0, 0, 0.498641,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0249362);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.487534,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0179121);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496192,-99) , 
3, 8.52364, 0, 0, 0.498512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448262,-99) , 
4, 0.999048, 0, 0, 0.497001,-99) , 
8, -4.81026, 1, 0, 0.499139,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0144439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.6622, 0, 1, 0.503213,-99) , 
NN(
0, 
0, 
-1, 0.162086, 0, -1, 0.471719,-99) , 
3, 5.4248, 1, 0, 0.500055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451354,-99) , 
3, 8.71137, 1, 0, 0.498359,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0340489);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00736184, 0, 1, 0.538935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472382,-99) , 
6, -951.287, 0, 0, 0.525343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488641,-99) , 
8, -0.0591138, 0, 0, 0.490352,-99) , 
7, -1.28311, 1, 0, 0.492928,-99) , 
1, -0.00621516, 1, 0, 0.496581,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0204908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496562,-99) , 
2, -0.0234752, 1, 0, 0.503583,-99) , 
2, 0.218704, 0, 0, 0.504958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471951,-99) , 
3, 8.63983, 1, 0, 0.503912,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0326076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.542958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481088,-99) , 
9, -0.225954, 0, 0, 0.507586,-99) , 
2, -0.0764273, 1, 0, 0.512785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492877,-99) , 
0, 0.498098, 1, 0, 0.522606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467472,-99) , 
9, -0.74276, 1, 0, 0.492759,-99) , 
7, 0.537298, 0, 0, 0.495473,-99) , 
7, 0.714305, 0, 0, 0.501858,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0142842);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213101, 1, 1, 0.50509,-99) , 
NN(
0, 
0, 
-1, 1.06697, 0, -1, 0.468033,-99) , 
9, 1.58307, 1, 0, 0.502262,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0161567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558452,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496674,-99) , 
8, -4.81026, 1, 0, 0.499411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415381,-99) , 
1, 0.0119697, 1, 0, 0.496949,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0423665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464632,-99) , 
9, -1.98304, 1, 0, 0.516366,-99) , 
9, -0.637982, 0, 0, 0.528843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490464,-99) , 
2, -0.0676581, 1, 0, 0.495612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409975,-99) , 
9, -1.78311, 0, 0, 0.491778,-99) , 
7, -0.712992, 1, 0, 0.498144,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0353929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499155,-99) , 
7, 0.388656, 0, 0, 0.562227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467014,-99) , 
8, -2.25005, 0, 0, 0.497526,-99) , 
9, -0.288419, 1, 0, 0.507104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489918,-99) , 
7, 0.91053, 0, 0, 0.494391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418575,-99) , 
5, 0.0112565, 1, 0, 0.49077,-99) , 
8, -2.73769, 0, 0, 0.498402,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0154677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.931316, 1, 1, 0.50523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457903,-99) , 
9, -2.41628, 0, 0, 0.503342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453612,-99) , 
7, -1.85702, 0, 0, 0.502048,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0225004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498715,-99) , 
7, -0.426566, 1, 0, 0.504116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439281,-99) , 
4, 0.999524, 0, 0, 0.500753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433244,-99) , 
9, 2.12943, 1, 0, 0.497972,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0299184);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.511855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475889,-99) , 
0, 0.505435, 1, 0, 0.50259,-99) , 
NN(
0, 
0, 
-1, 0.503532, 0, -1, 0.444218,-99) , 
9, 0.107778, 1, 0, 0.483412,-99) , 
0, 0.5019, 1, 0, 0.506244,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.021129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494052,-99) , 
8, -0.710208, 0, 0, 0.495582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455885,-99) , 
9, 2.1525, 1, 0, 0.49432,-99) , 
NN(
0, 
0, 
-1, 1.0796, 1, -1, 0.463733,-99) , 
7, 1.85731, 1, 0, 0.491679,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0172564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499749,-99) , 
7, 1.28673, 0, 0, 0.504387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438105,-99) , 
4, 0.999751, 0, 0, 0.502446,-99) , 
NN(
0, 
0, 
-1, 0.442819, 1, -1, 0.45199,-99) , 
4, 0.999524, 0, 0, 0.499819,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0360887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471,-99) , 
4, 0.999932, 0, 0, 0.507398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467278,-99) , 
4, 0.999524, 0, 0, 0.505215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442055,-99) , 
9, -0.391596, 1, 0, 0.466794,-99) , 
1, 0.00592662, 1, 0, 0.501832,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0270462);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494231,-99) , 
6, -951.286, 1, 0, 0.501828,-99) , 
NN(
0, 
0, 
-1, 2.20716, 1, -1, 0.4568,-99) , 
9, 1.10314, 1, 0, 0.497701,-99) , 
8, 0.196083, 0, 0, 0.50004,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0361389);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480495,-99) , 
3, 8.35029, 1, 0, 0.515056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483444,-99) , 
7, 1.66963, 1, 0, 0.513519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485875,-99) , 
8, -0.915929, 0, 0, 0.503482,-99) , 
NN(
0, 
0, 
-1, 1.58049, 0, -1, 0.472384,-99) , 
6, -951.286, 0, 0, 0.485826,-99) , 
9, 0.676775, 1, 0, 0.508275,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0129796);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498144,-99) , 
7, -1.39431, 1, 0, 0.500148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459721,-99) , 
7, -1.85702, 0, 0, 0.499076,-99) , 
2, -0.217323, 1, 0, 0.501087,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0312982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449,-99) , 
7, -1.28779, 0, 0, 0.505926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463119,-99) , 
9, -2.6494, 0, 0, 0.503997,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475876,-99) , 
9, 1.31499, 1, 0, 0.500316,-99) , 
NN(
0, 
0, 
-1, 1.28585, 1, -1, 0.461451,-99) , 
6, -951.286, 0, 0, 0.477332,-99) , 
8, -1.39204, 1, 0, 0.499835,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0303081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.39959, 0, 1, 0.51179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442471,-99) , 
9, 0.678259, 1, 0, 0.491531,-99) , 
2, -0.0811696, 0, 0, 0.508456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490434,-99) , 
0, 0.496192, 1, 0, 0.513862,-99) , 
NN(
0, 
0, 
-1, -0.750329, 1, -1, 0.459098,-99) , 
7, 0.146466, 0, 0, 0.489881,-99) , 
2, 0.0679668, 1, 0, 0.505535,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0378944);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446905,-99) , 
4, 0.999955, 0, 0, 0.518771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484475,-99) , 
8, -2.70506, 0, 0, 0.491244,-99) , 
7, 1.28588, 0, 0, 0.496607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443159,-99) , 
4, 0.999048, 0, 0, 0.494974,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0268765);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486125,-99) , 
3, 0.344882, 1, 0, 0.530914,-99) , 
NN(
0, 
0, 
-1, 7.22687, 1, -1, 0.489674,-99) , 
3, 0.503093, 1, 0, 0.492473,-99) , 
3, 8.80985, 0, 0, 0.493681,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0253625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497672,-99) , 
6, -951.286, 0, 0, 0.509445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456112,-99) , 
4, 0.999955, 0, 0, 0.491173,-99) , 
7, 0.430396, 1, 0, 0.501019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433069,-99) , 
4, 0.999048, 0, 0, 0.498981,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0314981);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491207,-99) , 
8, -3.43683, 0, 0, 0.504789,-99) , 
NN(
0, 
0, 
-1, 1.9099, 1, -1, 0.480096,-99) , 
8, -1.41985, 1, 0, 0.500837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47845,-99) , 
0, 0.50447, 1, 0, 0.49575,-99) , 
NN(
0, 
0, 
-1, 0.500721, 1, -1, 0.474387,-99) , 
0, 0.502535, 0, 0, 0.484285,-99) , 
0, 0.499995, 1, 0, 0.495146,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0321425);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495303,-99) , 
8, -3.04348, 0, 0, 0.502475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483274,-99) , 
8, -3.06986, 1, 0, 0.488015,-99) , 
9, -0.661389, 1, 0, 0.494611,-99) , 
0, 0.505709, 0, 0, 0.496211,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0269217);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495889,-99) , 
9, -1.02904, 1, 0, 0.500865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38706,-99) , 
9, -2.39241, 0, 0, 0.474727,-99) , 
9, -2.0516, 0, 0, 0.498934,-99) , 
7, -1.57136, 1, 0, 0.500846,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0381335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473285,-99) , 
9, -2.36084, 1, 0, 0.533598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455048,-99) , 
9, -1.42722, 0, 0, 0.503432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442747,-99) , 
9, -1.72468, 1, 0, 0.478147,-99) , 
7, -0.46661, 0, 0, 0.498788,-99) , 
7, -1.28251, 1, 0, 0.501495,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0172955);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486626,-99) , 
9, -2.33009, 1, 0, 0.53852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431603,-99) , 
9, -2.25334, 0, 0, 0.498934,-99) , 
7, -1.28562, 1, 0, 0.502015,-99) , 
8, 0.196083, 0, 0, 0.504043,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0276651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4881,-99) , 
9, -1.85718, 1, 0, 0.52381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439685,-99) , 
9, -1.70812, 0, 0, 0.500348,-99) , 
7, -0.71421, 1, 0, 0.504425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423787,-99) , 
1, 0.0123239, 1, 0, 0.502038,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0376664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486992,-99) , 
8, -4.67276, 0, 0, 0.526764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482689,-99) , 
2, 0.0473759, 0, 0, 0.488201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450013,-99) , 
3, 8.52038, 1, 0, 0.486927,-99) , 
7, -1.28243, 1, 0, 0.490016,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0121718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552575,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497126,-99) , 
8, -0.356855, 0, 0, 0.498973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443089,-99) , 
9, 2.42925, 1, 0, 0.497313,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0454289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462886,-99) , 
9, -1.23787, 1, 0, 0.527411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409407,-99) , 
9, -1.14435, 0, 0, 0.49412,-99) , 
7, 0.0183482, 1, 0, 0.515007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461331,-99) , 
4, 0.999955, 0, 0, 0.495957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431531,-99) , 
4, 0.999524, 0, 0, 0.493023,-99) , 
8, -2.97465, 1, 0, 0.502864,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0206844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471196,-99) , 
7, 2.11554, 1, 0, 0.494858,-99) , 
1, 0.00227624, 0, 0, 0.511253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493124,-99) , 
7, 0.265247, 1, 0, 0.499224,-99) , 
NN(
0, 
0, 
-1, 0.000160057, 0, -1, 0.466223,-99) , 
0, 0.504756, 1, 0, 0.496933,-99) , 
7, 1.57131, 0, 0, 0.498937,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.023728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414932,-99) , 
9, -2.61343, 0, 0, 0.500466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46765,-99) , 
2, 0.0679668, 0, 0, 0.478484,-99) , 
7, 1.38148, 1, 0, 0.496469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447356,-99) , 
7, -1.85546, 0, 0, 0.495149,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0404672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.12661, 1, 1, 0.514631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464112,-99) , 
2, -0.0108646, 1, 0, 0.483927,-99) , 
2, 0.00691202, 0, 0, 0.498556,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471134,-99) , 
9, 0.228809, 1, 0, 0.501857,-99) , 
NN(
0, 
0, 
-1, -0.993481, 1, -1, 0.461793,-99) , 
7, 0.431512, 0, 0, 0.480005,-99) , 
2, -0.0677529, 0, 0, 0.495569,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0464642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498498,-99) , 
8, -3.97283, 0, 0, 0.527568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439992,-99) , 
8, -2.90687, 0, 0, 0.477606,-99) , 
9, -1.57938, 1, 0, 0.508428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4859,-99) , 
8, -3.68427, 1, 0, 0.490377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353699,-99) , 
9, -1.61583, 0, 0, 0.446607,-99) , 
9, -1.36397, 0, 0, 0.486274,-99) , 
7, -0.426197, 1, 0, 0.491691,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0221212);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536735,-99) , 
NN(
NN(
0, 
0, 
-1, -0.712053, 0, -1, 0.493244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39573,-99) , 
7, -1.03523, 1, 0, 0.460381,-99) , 
9, -2.01366, 0, 0, 0.491233,-99) , 
8, -4.74947, 1, 0, 0.49334,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0306117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497361,-99) , 
6, -951.287, 0, 0, 0.534148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456832,-99) , 
9, -1.78542, 0, 0, 0.501213,-99) , 
7, -1.28495, 1, 0, 0.503731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472692,-99) , 
3, 3.67995, 1, 0, 0.504535,-99) , 
NN(
0, 
0, 
-1, 0.51607, 1, -1, 0.463172,-99) , 
8, -3.01162, 1, 0, 0.482165,-99) , 
2, 0.071981, 1, 0, 0.500564,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0232473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492933,-99) , 
2, -0.180106, 1, 0, 0.495141,-99) , 
3, 8.20737, 0, 0, 0.497382,-99) , 
NN(
0, 
0, 
-1, 0.498087, 0, -1, 0.467849,-99) , 
4, 0.999524, 0, 0, 0.495851,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0390985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.982987, 1, 1, 0.563925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494554,-99) , 
9, -0.723159, 1, 0, 0.503762,-99) , 
8, -4.06698, 1, 0, 0.510897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463731,-99) , 
6, -1.16244, 0, 0, 0.502462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328992,-99) , 
6, -1.8569, 0, 0, 0.491375,-99) , 
6, -951.286, 1, 0, 0.499944,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.017827);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495257,-99) , 
8, -4.52293, 1, 0, 0.496806,-99) , 
8, 0.00810392, 0, 0, 0.498598,-99) , 
8, -4.74947, 1, 0, 0.500536,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0400382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480383,-99) , 
7, 0.26974, 0, 0, 0.539609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455568,-99) , 
7, 0.471786, 1, 0, 0.495056,-99) , 
8, -2.7955, 0, 0, 0.50209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528084,-99) , 
NN(
0, 
0, 
-1, 0.607305, 0, -1, 0.480777,-99) , 
7, -0.140698, 1, 0, 0.486666,-99) , 
9, -0.223225, 1, 0, 0.495795,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0212032);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494729,-99) , 
0, 0.495369, 1, 0, 0.4991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460502,-99) , 
0, 0.490471, 0, 0, 0.497326,-99) , 
8, 0.0526358, 0, 0, 0.499651,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0229124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484449,-99) , 
3, 3.44292, 1, 0, 0.535431,-99) , 
NN(
0, 
0, 
-1, 0.0308297, 0, 1, 0.506354,-99) , 
0, 0.503802, 0, 0, 0.509397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454978,-99) , 
3, 8.84137, 1, 0, 0.507766,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0125422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499876,-99) , 
2, 0.106424, 0, 0, 0.503018,-99) , 
2, -0.214165, 1, 0, 0.504851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455263,-99) , 
4, 0.999048, 0, 0, 0.503347,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0494176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2496, 0, 1, 0.551578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475965,-99) , 
7, 0.143275, 0, 0, 0.500027,-99) , 
9, -1.03184, 1, 0, 0.504254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412778,-99) , 
9, -1.55204, 1, 0, 0.504238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426922,-99) , 
9, -0.970767, 0, 0, 0.462831,-99) , 
7, -0.306645, 1, 0, 0.487297,-99) , 
8, -3.38434, 0, 0, 0.498784,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0303915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464806,-99) , 
8, -0.202872, 0, 0, 0.484588,-99) , 
9, 1.02362, 1, 0, 0.504877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492687,-99) , 
7, 0.434118, 0, 0, 0.523092,-99) , 
NN(
0, 
0, 
-1, -2.15885, 1, -1, 0.471941,-99) , 
0, 0.490879, 1, 0, 0.483996,-99) , 
0, 0.495233, 0, 0, 0.499599,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0271239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499933,-99) , 
7, 1.0094, 0, 0, 0.522188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49165,-99) , 
8, -1.67759, 0, 0, 0.494243,-99) , 
9, 0.681099, 0, 0, 0.498615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453814,-99) , 
9, 2.06746, 1, 0, 0.496649,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0216684);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454268,-99) , 
4, 0.999774, 0, 0, 0.500231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3933,-99) , 
7, -0.874229, 1, 0, 0.470987,-99) , 
9, -1.89719, 0, 0, 0.496441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423447,-99) , 
4, 0.999048, 0, 0, 0.494336,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.017405);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.000658477, 0, 1, 0.539842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496197,-99) , 
0, 0.489519, 1, 0, 0.497329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429382,-99) , 
1, 0.0119697, 1, 0, 0.495198,-99) , 
7, 2.14285, 0, 0, 0.497793,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0275059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505074, 1, 1, 0.544416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496051,-99) , 
7, -0.143063, 0, 0, 0.527572,-99) , 
NN(
NN(
0, 
0, 
-1, 1.25503, 1, 1, 0.533535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483643,-99) , 
6, -951.286, 1, 0, 0.492214,-99) , 
7, 2.14282, 0, 0, 0.494673,-99) , 
0, 0.503804, 0, 0, 0.498007,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0243002);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.12662, 1, 1, 0.505988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447325,-99) , 
9, -2.37083, 1, 0, 0.496653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408053,-99) , 
7, -0.870621, 1, 0, 0.47052,-99) , 
9, -1.89719, 0, 0, 0.501404,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0345116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485194,-99) , 
3, 4.44219, 1, 0, 0.517245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486307,-99) , 
3, 4.48706, 0, 0, 0.491184,-99) , 
2, -0.0743827, 1, 0, 0.495102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458096,-99) , 
9, 2.07892, 1, 0, 0.493518,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0162939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486688,-99) , 
7, 1.15004, 1, 0, 0.497328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440106,-99) , 
9, -2.33281, 0, 0, 0.494334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451218,-99) , 
7, -1.85619, 0, 0, 0.493192,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0374526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491711,-99) , 
0, 0.494278, 1, 0, 0.500016,-99) , 
7, 1.44921, 1, 0, 0.512077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485783,-99) , 
8, -2.23409, 1, 0, 0.508785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448148,-99) , 
7, 0.47108, 1, 0, 0.489079,-99) , 
8, -2.70506, 0, 0, 0.495775,-99) , 
7, 1.2859, 0, 0, 0.499017,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0539886);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336007,-99) , 
6, -1.85639, 0, 0, 0.504563,-99) , 
NN(
0, 
0, 
-1, 0.492377, 0, -1, 0.485293,-99) , 
6, -951.286, 0, 0, 0.495845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477824,-99) , 
8, -4.06002, 0, 0, 0.495134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370028,-99) , 
7, -0.54441, 1, 0, 0.465516,-99) , 
9, -1.61491, 0, 0, 0.490382,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.037449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498927,-99) , 
8, -3.46734, 1, 0, 0.526754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465683,-99) , 
7, -1.28175, 1, 0, 0.493581,-99) , 
8, -4.24221, 0, 0, 0.513674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440086,-99) , 
7, -0.0997225, 0, 0, 0.498571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331787,-99) , 
7, -0.131728, 1, 0, 0.447937,-99) , 
9, -1.36397, 0, 0, 0.493805,-99) , 
7, -0.42621, 1, 0, 0.498764,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0106525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440115,-99) , 
9, -2.49364, 0, 0, 0.498564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449854,-99) , 
7, -1.85417, 0, 0, 0.497269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450544,-99) , 
4, 0.999048, 0, 0, 0.495849,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0241109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494311,-99) , 
5, 0.00740858, 0, 0, 0.497474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454908,-99) , 
1, -0.00904791, 0, 0, 0.495395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425177,-99) , 
1, 0.0119697, 1, 0, 0.493207,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0354739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491596,-99) , 
7, 1.28792, 1, 0, 0.509642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486691,-99) , 
8, -4.50616, 1, 0, 0.491802,-99) , 
8, -2.54683, 0, 0, 0.499204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490194,-99) , 
0, 0.493782, 0, 0, 0.49919,-99) , 
NN(
0, 
0, 
-1, 1.00007, 0, -1, 0.456724,-99) , 
8, -2.32619, 1, 0, 0.483358,-99) , 
0, 0.495233, 0, 0, 0.495313,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0448792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502847, 0, 1, 0.51332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424184,-99) , 
8, -3.80694, 1, 0, 0.46894,-99) , 
7, -0.999287, 0, 0, 0.507357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459452,-99) , 
6, -0.930831, 0, 0, 0.502737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328158,-99) , 
6, -1.85578, 0, 0, 0.491843,-99) , 
6, -951.286, 1, 0, 0.498753,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0387032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465633,-99) , 
7, -0.73336, 0, 0, 0.501692,-99) , 
7, -1.55503, 1, 0, 0.512757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462542,-99) , 
6, -951.286, 0, 0, 0.512366,-99) , 
NN(
0, 
0, 
-1, -1.48187, 0, -1, 0.48857,-99) , 
7, -0.712, 1, 0, 0.490885,-99) , 
8, -4.01789, 1, 0, 0.494233,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.041137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488181,-99) , 
9, 1.79063, 1, 0, 0.512066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48211,-99) , 
7, -1.28568, 0, 0, 0.509446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478884,-99) , 
8, -3.5168, 0, 0, 0.501421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329254,-99) , 
6, -1.85672, 0, 0, 0.490274,-99) , 
6, -951.286, 1, 0, 0.498712,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0235527);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549392,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494343,-99) , 
9, -1.76755, 0, 0, 0.50676,-99) , 
NN(
0, 
0, 
-1, -1.26301, 0, -1, 0.490722,-99) , 
8, -4.04547, 1, 0, 0.493227,-99) , 
8, 0.195878, 0, 0, 0.495412,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0364389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498232,-99) , 
9, 1.39507, 0, 0, 0.502697,-99) , 
0, 0.503802, 0, 0, 0.506928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481065,-99) , 
8, -3.45817, 0, 0, 0.501945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330703,-99) , 
6, -1.8572, 0, 0, 0.490885,-99) , 
6, -951.286, 1, 0, 0.49801,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.03372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455508,-99) , 
2, -0.210287, 0, 0, 0.501365,-99) , 
8, -3.5876, 1, 0, 0.504715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480151,-99) , 
8, -3.55253, 0, 0, 0.497936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416484,-99) , 
7, -0.118606, 1, 0, 0.484907,-99) , 
9, -1.23451, 0, 0, 0.499114,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0275125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499161,-99) , 
2, 0.02598, 0, 0, 0.505873,-99) , 
4, 0.999524, 1, 0, 0.50842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454305,-99) , 
0, 0.503124, 1, 0, 0.505669,-99) , 
NN(
0, 
0, 
-1, -0.418553, 0, -1, 0.471473,-99) , 
0, 0.499042, 0, 0, 0.487095,-99) , 
3, 4.55086, 1, 0, 0.504505,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0362986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.18869, 1, 1, 0.516877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357677,-99) , 
6, -1.56913, 0, 0, 0.491159,-99) , 
6, -951.286, 1, 0, 0.5024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484229,-99) , 
7, 1.2868, 0, 0, 0.488265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446988,-99) , 
9, 1.58532, 1, 0, 0.485069,-99) , 
0, 0.499043, 1, 0, 0.495027,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0406606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474326,-99) , 
0, 0.494292, 0, 0, 0.523956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488792,-99) , 
7, 1.28556, 0, 0, 0.498708,-99) , 
8, -3.25173, 1, 0, 0.506645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497112,-99) , 
6, 1.91162, 0, 0, 0.502264,-99) , 
NN(
0, 
0, 
-1, 0.727431, 1, -1, 0.3719,-99) , 
6, -1.5712, 0, 0, 0.488989,-99) , 
6, -951.286, 1, 0, 0.496813,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0260651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469433,-99) , 
6, -951.286, 1, 0, 0.491757,-99) , 
9, -1.96384, 0, 0, 0.510467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53913,-99) , 
NN(
0, 
0, 
-1, 1.24696, 1, -1, 0.49224,-99) , 
8, 0.422435, 0, 0, 0.493923,-99) , 
8, -4.08019, 1, 0, 0.496362,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0337458);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.997149, 1, 1, 0.520734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49433,-99) , 
8, -3.9104, 0, 0, 0.51489,-99) , 
NN(
0, 
0, 
-1, -1.36525, 0, -1, 0.488284,-99) , 
7, -0.424629, 1, 0, 0.494958,-99) , 
0, 0.499043, 0, 0, 0.505937,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0437235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.302181, 0, 1, 0.574432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439584,-99) , 
7, 1.14351, 1, 0, 0.502091,-99) , 
8, -2.13026, 0, 0, 0.507778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476703,-99) , 
9, 1.40417, 1, 0, 0.499715,-99) , 
NN(
0, 
0, 
-1, 1.21895, 0, -1, 0.473582,-99) , 
8, -1.28907, 0, 0, 0.487419,-99) , 
9, 0.323426, 1, 0, 0.502463,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0229264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.75916, 0, 1, 0.562162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446802,-99) , 
9, -1.10323, 0, 0, 0.489915,-99) , 
9, -2.20716, 1, 0, 0.526752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472792,-99) , 
7, -0.619, 0, 0, 0.498881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414973,-99) , 
9, -2.04917, 0, 0, 0.496061,-99) , 
7, -0.999958, 1, 0, 0.499683,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0307299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.58895, 1, 1, 0.52186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484663,-99) , 
8, -2.45872, 0, 0, 0.495927,-99) , 
8, -4.06608, 1, 0, 0.499606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457246,-99) , 
4, 0.999524, 0, 0, 0.497517,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0345865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441934,-99) , 
7, -1.47541, 0, 0, 0.526098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486528,-99) , 
7, 0.524212, 0, 0, 0.497617,-99) , 
7, -0.713657, 1, 0, 0.501685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456044,-99) , 
9, -2.66864, 0, 0, 0.499957,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0362831);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492799,-99) , 
8, -4.27903, 0, 0, 0.530258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421577,-99) , 
8, -3.1942, 0, 0, 0.476126,-99) , 
9, -1.85718, 1, 0, 0.507891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491648,-99) , 
8, -4.07892, 1, 0, 0.494111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397403,-99) , 
9, -1.81533, 0, 0, 0.490103,-99) , 
7, -0.71429, 1, 0, 0.493184,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0412426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.39164, 0, 1, 0.516676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458472,-99) , 
8, -1.45171, 0, 0, 0.477111,-99) , 
9, -0.816866, 1, 0, 0.506029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48976,-99) , 
8, -3.21042, 1, 0, 0.495522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389013,-99) , 
7, 0.415376, 1, 0, 0.464117,-99) , 
9, -0.814929, 0, 0, 0.490698,-99) , 
7, 0.142779, 1, 0, 0.49732,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0419077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462983,-99) , 
9, -0.887805, 0, 0, 0.501585,-99) , 
8, -3.64918, 1, 0, 0.50515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488761,-99) , 
8, -3.76889, 0, 0, 0.505328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337016,-99) , 
9, -1.5078, 0, 0, 0.427832,-99) , 
7, -0.327913, 1, 0, 0.485255,-99) , 
9, -1.31142, 0, 0, 0.500051,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0292103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478009,-99) , 
7, -1.60465, 1, 0, 0.510934,-99) , 
7, -0.910516, 0, 0, 0.533308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495946,-99) , 
0, 0.496186, 1, 0, 0.505593,-99) , 
NN(
0, 
0, 
-1, -0.232057, 1, -1, 0.49001,-99) , 
7, 1.00001, 0, 0, 0.494888,-99) , 
8, -4.23684, 1, 0, 0.499228,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0281932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.78996, 0, 1, 0.567848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449035,-99) , 
7, -0.594355, 0, 0, 0.49388,-99) , 
7, -1.12853, 1, 0, 0.523745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48763,-99) , 
4, 0.999955, 0, 0, 0.502163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452681,-99) , 
4, 0.999048, 0, 0, 0.50067,-99) , 
8, -4.08019, 1, 0, 0.503849,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0121046);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532319,-99) , 
NN(
0, 
0, 
-1, -1.73581, 0, -1, 0.497165,-99) , 
7, -1.28568, 1, 0, 0.498863,-99) , 
8, -4.7443, 1, 0, 0.5009,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0202541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.414747, 1, 1, 0.539987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481366,-99) , 
0, 0.505572, 1, 0, 0.522481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499269,-99) , 
7, -0.997018, 1, 0, 0.502402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432751,-99) , 
8, -2.47821, 1, 0, 0.475559,-99) , 
0, 0.5014, 1, 0, 0.499686,-99) , 
0, 0.502851, 0, 0, 0.503045,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.020477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.99246, 0, 1, 0.507235,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.469346,-99) , 
4, 0.999841, 0, 0, 0.505027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457834,-99) , 
4, 0.999524, 0, 0, 0.502724,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0237695);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562507,-99) , 
NN(
NN(
0, 
0, 
-1, -3.34681, 1, 1, 0.507898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42092,-99) , 
7, 0.141926, 1, 0, 0.488045,-99) , 
9, -0.936216, 0, 0, 0.500351,-99) , 
7, 2.42873, 0, 0, 0.502381,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0294809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498088,-99) , 
9, -1.11536, 0, 0, 0.532799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452717,-99) , 
6, -951.287, 1, 0, 0.492356,-99) , 
9, 0.299175, 1, 0, 0.520829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467267,-99) , 
7, -1.28251, 0, 0, 0.50224,-99) , 
NN(
0, 
0, 
-1, -1.85735, 0, -1, 0.488046,-99) , 
6, -951.286, 1, 0, 0.494306,-99) , 
0, 0.494281, 1, 0, 0.499378,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0226476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.01091, 1, 1, 0.516154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478456,-99) , 
7, 0.716006, 1, 0, 0.493519,-99) , 
2, -0.0710983, 1, 0, 0.497039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440392,-99) , 
9, 2.48523, 1, 0, 0.495464,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0185887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497139,-99) , 
8, -4.43991, 1, 0, 0.498827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438018,-99) , 
9, 2.12463, 1, 0, 0.496212,-99) , 
NN(
0, 
0, 
-1, -1.44978, 0, -1, 0.447371,-99) , 
8, -4.74947, 0, 0, 0.493545,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0419286);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.85319, 1, 1, 0.550402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467449,-99) , 
4, 0.999977, 0, 0, 0.515726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4891,-99) , 
4, 0.999977, 1, 0, 0.497029,-99) , 
7, 0.999896, 0, 0, 0.502083,-99) , 
4, 0.999525, 1, 0, 0.504879,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0142032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497075,-99) , 
0, 0.491423, 1, 0, 0.499114,-99) , 
4, 0.999048, 1, 0, 0.501045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465503,-99) , 
3, 8.96578, 1, 0, 0.500055,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0219754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495832,-99) , 
7, 0.714201, 0, 0, 0.503118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463761,-99) , 
9, 2.01494, 1, 0, 0.501376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455903,-99) , 
1, 0.0103564, 1, 0, 0.499737,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0110239);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.211624, 1, 1, 0.503507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427406,-99) , 
4, 0.999048, 0, 0, 0.501298,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0329606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.98033, 0, 1, 0.545997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484032,-99) , 
8, -1.88134, 0, 0, 0.508634,-99) , 
1, 0.000658477, 0, 0, 0.524891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486108,-99) , 
9, -1.39566, 0, 0, 0.503813,-99) , 
NN(
0, 
0, 
-1, 0.500253, 1, -1, 0.470512,-99) , 
9, 0.887332, 1, 0, 0.500349,-99) , 
7, 1.57245, 0, 0, 0.503765,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0354431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444492,-99) , 
9, -0.535548, 1, 0, 0.507027,-99) , 
7, 0.966983, 0, 0, 0.511435,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49807, 1, 1, 0.532577,-99) , 
NN(
0, 
0, 
-1, -2.17041, 0, -1, 0.486418,-99) , 
9, -0.288419, 1, 0, 0.492177,-99) , 
8, -2.6538, 1, 0, 0.50283,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0239072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489312,-99) , 
3, 1.35091, 1, 0, 0.495396,-99) , 
2, 0.207947, 0, 0, 0.497472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456818,-99) , 
3, 8.72082, 1, 0, 0.496233,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0145988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498623,-99) , 
8, -3.70834, 1, 0, 0.501778,-99) , 
8, -4.85498, 1, 0, 0.503569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447842,-99) , 
2, 0.215158, 1, 0, 0.501658,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0225501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.4705, 0, 1, 0.516436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488636,-99) , 
0, 0.496095, 0, 0, 0.49941,-99) , 
8, -3.77807, 1, 0, 0.503014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490176,-99) , 
0, 0.505435, 1, 0, 0.502939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434367,-99) , 
9, -1.19893, 0, 0, 0.483367,-99) , 
0, 0.503804, 1, 0, 0.501002,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0115205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458758,-99) , 
0, 0.490472, 0, 0, 0.49891,-99) , 
2, -0.213865, 1, 0, 0.50069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44439,-99) , 
7, 2.42849, 1, 0, 0.499214,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0231395);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453628,-99) , 
7, -1.56602, 0, 0, 0.503937,-99) , 
NN(
0, 
0, 
-1, 1.26637, 1, -1, 0.487281,-99) , 
0, 0.498815, 1, 0, 0.496902,-99) , 
0, 0.505708, 0, 0, 0.498699,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0193442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.539536, 1, 1, 0.512205,-99) , 
NN(
0, 
0, 
-1, 0.0124404, 1, -1, 0.493253,-99) , 
8, -2.12774, 0, 0, 0.499011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44792,-99) , 
4, 0.999048, 0, 0, 0.497531,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0386368);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43351,-99) , 
7, -0.997611, 0, 0, 0.509541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432558,-99) , 
8, -4.81608, 1, 0, 0.468747,-99) , 
9, -2.0935, 0, 0, 0.505616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495894,-99) , 
2, 0.0590629, 0, 0, 0.505282,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.476222,-99) , 
8, -3.28274, 1, 0, 0.486596,-99) , 
0, 0.499043, 1, 0, 0.497634,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0272148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503435, 1, 1, 0.54161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486909,-99) , 
9, -0.964422, 0, 0, 0.515342,-99) , 
0, 0.504213, 1, 0, 0.525918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477887,-99) , 
7, 1.00052, 1, 0, 0.495008,-99) , 
NN(
0, 
0, 
-1, 0.435139, 0, -1, 0.469324,-99) , 
2, 0.071981, 1, 0, 0.491339,-99) , 
0, 0.502852, 0, 0, 0.496368,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0352982);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474686,-99) , 
9, 1.15522, 1, 0, 0.519158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466221,-99) , 
2, 0.0590629, 1, 0, 0.494047,-99) , 
1, 0.000160057, 0, 0, 0.506297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491152,-99) , 
9, -0.718349, 0, 0, 0.499223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477489,-99) , 
8, -0.183084, 0, 0, 0.482305,-99) , 
8, -2.95302, 1, 0, 0.49001,-99) , 
0, 0.499043, 0, 0, 0.496856,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0383607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491183,-99) , 
7, 0.879062, 0, 0, 0.51006,-99) , 
7, -0.426539, 1, 0, 0.513087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491663,-99) , 
8, -2.77438, 0, 0, 0.500816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430443,-99) , 
7, 0.837706, 1, 0, 0.495164,-99) , 
9, -0.306395, 0, 0, 0.502886,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0324968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.21675, 1, 1, 0.534538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467147,-99) , 
0, 0.49905, 0, 0, 0.493475,-99) , 
3, 4.46779, 1, 0, 0.520455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463395,-99) , 
7, -0.71429, 0, 0, 0.503866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409203,-99) , 
7, -0.516394, 1, 0, 0.486482,-99) , 
9, -1.5681, 0, 0, 0.500552,-99) , 
2, -0.0703481, 1, 0, 0.503743,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0163674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496113,-99) , 
8, -4.33644, 1, 0, 0.498503,-99) , 
8, -0.638943, 0, 0, 0.500246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457925,-99) , 
9, 2.23062, 1, 0, 0.49868,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0318525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.17906, 0, 1, 0.528175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492483,-99) , 
8, -2.90339, 0, 0, 0.501377,-99) , 
8, -4.36951, 1, 0, 0.504843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47675,-99) , 
2, 0.0209919, 0, 0, 0.488684,-99) , 
NN(
0, 
0, 
-1, 0.499053, 1, -1, 0.467534,-99) , 
3, 4.22532, 1, 0, 0.484375,-99) , 
7, 1.00021, 1, 0, 0.499127,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.014071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.418752, 1, 1, 0.515158,-99) , 
NN(
0, 
0, 
-1, 2.12943, 1, -1, 0.495446,-99) , 
0, 0.502851, 0, 0, 0.498341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462811,-99) , 
4, 0.999048, 0, 0, 0.497285,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0481818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424968,-99) , 
7, 0.803663, 1, 0, 0.5047,-99) , 
4, 0.999524, 1, 0, 0.509723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596388,-99) , 
NN(
0, 
0, 
-1, -2.28131, 0, -1, 0.477404,-99) , 
8, -2.78313, 1, 0, 0.486068,-99) , 
9, -0.3434, 1, 0, 0.49918,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0331544);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487062,-99) , 
7, -0.139601, 0, 0, 0.519407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488548,-99) , 
2, 0.0067213, 0, 0, 0.501291,-99) , 
2, -0.0679247, 1, 0, 0.504237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448072,-99) , 
1, 0.0121806, 1, 0, 0.502666,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0292841);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498791,-99) , 
9, -0.95059, 0, 0, 0.510407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477197,-99) , 
0, 0.500629, 0, 0, 0.492266,-99) , 
9, 0.753548, 1, 0, 0.507148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488976,-99) , 
0, 0.491652, 0, 0, 0.509119,-99) , 
NN(
0, 
0, 
-1, 0.493682, 0, -1, 0.48328,-99) , 
0, 0.492602, 1, 0, 0.49041,-99) , 
0, 0.497138, 0, 0, 0.500458,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0342555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.17083, 1, 1, 0.534988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4812,-99) , 
6, -951.287, 0, 0, 0.496642,-99) , 
9, 1.03083, 1, 0, 0.519623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493493,-99) , 
8, -3.79526, 1, 0, 0.497573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44036,-99) , 
9, -1.88979, 1, 0, 0.479737,-99) , 
7, -0.605383, 0, 0, 0.493346,-99) , 
7, 1.57141, 0, 0, 0.497086,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0242805);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.61172, 0, 1, 0.536173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499938,-99) , 
9, -0.783418, 1, 0, 0.505867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38046,-99) , 
9, -2.28174, 0, 0, 0.479786,-99) , 
9, -1.7823, 0, 0, 0.503303,-99) , 
7, -1.28493, 1, 0, 0.505762,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0223871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.13812, 1, 1, 0.50754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413329,-99) , 
9, -2.60106, 0, 0, 0.504937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435396,-99) , 
7, -1.85702, 0, 0, 0.50308,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0249562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497628,-99) , 
9, -0.362704, 0, 0, 0.505605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459713,-99) , 
7, 1.87242, 1, 0, 0.485357,-99) , 
9, 0.809775, 1, 0, 0.502251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472504,-99) , 
3, 4.49235, 1, 0, 0.500341,-99) , 
NN(
0, 
0, 
-1, 0.502171, 0, -1, 0.473399,-99) , 
9, -0.792142, 0, 0, 0.489278,-99) , 
0, 0.499994, 1, 0, 0.497774,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0227003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495049,-99) , 
7, -0.235805, 1, 0, 0.500747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434652,-99) , 
9, -2.4506, 0, 0, 0.498243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444856,-99) , 
7, -1.85416, 0, 0, 0.496893,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0214547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42952, 0, 1, 0.507135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452204,-99) , 
4, 0.999048, 0, 0, 0.505444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412441,-99) , 
1, 0.0121806, 1, 0, 0.502697,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.029374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477928,-99) , 
7, -0.46457, 0, 0, 0.508392,-99) , 
7, -1.28015, 1, 0, 0.510821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490752,-99) , 
9, 0.303828, 0, 0, 0.496507,-99) , 
NN(
0, 
0, 
-1, 0.506189, 0, -1, 0.464595,-99) , 
0, 0.50512, 1, 0, 0.493572,-99) , 
0, 0.497138, 1, 0, 0.500411,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0138181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.84474, 1, 1, 0.52102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498793,-99) , 
3, 0.502614, 1, 0, 0.500956,-99) , 
2, -0.0672996, 1, 0, 0.504105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462078,-99) , 
3, 8.80212, 1, 0, 0.502882,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0277582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471251,-99) , 
9, 1.98285, 1, 0, 0.508889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466761,-99) , 
0, 0.496505, 0, 0, 0.490941,-99) , 
8, -4.05567, 0, 0, 0.506093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48224,-99) , 
0, 0.505165, 1, 0, 0.499287,-99) , 
NN(
0, 
0, 
-1, 0.501492, 1, -1, 0.469266,-99) , 
0, 0.5019, 0, 0, 0.491635,-99) , 
0, 0.500948, 1, 0, 0.502218,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0218185);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457014,-99) , 
0, 0.490472, 0, 0, 0.502724,-99) , 
NN(
0, 
0, 
-1, 1.92863, 1, -1, 0.461327,-99) , 
9, 1.24242, 1, 0, 0.499165,-99) , 
8, 0.546764, 0, 0, 0.500877,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0215539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00209529, 0, 1, 0.528422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47795,-99) , 
2, 0.0595324, 1, 0, 0.519179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524958,-99) , 
NN(
0, 
0, 
-1, 2.41963, 1, -1, 0.492637,-99) , 
2, -0.21045, 1, 0, 0.493994,-99) , 
8, -4.08019, 1, 0, 0.497509,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0221373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485421,-99) , 
9, -2.07847, 0, 0, 0.505704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462871,-99) , 
2, -0.213101, 0, 0, 0.504008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46111,-99) , 
9, 2.0983, 1, 0, 0.502115,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0277252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498424,-99) , 
0, 0.501264, 1, 0, 0.514986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478076,-99) , 
7, 1.16331, 0, 0, 0.492009,-99) , 
7, 0.428602, 1, 0, 0.504235,-99) , 
NN(
0, 
0, 
-1, 0.906923, 1, -1, 0.487746,-99) , 
0, 0.49809, 0, 0, 0.496181,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0258911);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.509173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486253,-99) , 
8, -2.28631, 1, 0, 0.495218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470051,-99) , 
9, 2.14215, 1, 0, 0.491929,-99) , 
9, 0.0908633, 1, 0, 0.503648,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0126916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497921,-99) , 
8, -4.5549, 1, 0, 0.499264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460956,-99) , 
9, -2.42572, 0, 0, 0.497738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430992,-99) , 
7, -1.85418, 0, 0, 0.496055,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0226576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497823,-99) , 
8, -0.683336, 1, 0, 0.520748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489324,-99) , 
6, -951.286, 1, 0, 0.495343,-99) , 
8, -1.5113, 0, 0, 0.49911,-99) , 
NN(
0, 
0, 
-1, 0.000281234, 1, -1, 0.466691,-99) , 
7, 2.14268, 1, 0, 0.497392,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0421484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482435,-99) , 
4, 0.999977, 0, 0, 0.512456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461131,-99) , 
4, 0.999524, 0, 0, 0.509349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49338,-99) , 
8, -3.34174, 0, 0, 0.505882,-99) , 
NN(
0, 
0, 
-1, 0.0349482, 1, -1, 0.477624,-99) , 
9, -0.932046, 1, 0, 0.496179,-99) , 
7, 0.428602, 0, 0, 0.502146,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0115649);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.42843, 0, 1, 0.504256,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.465991,-99) , 
4, 0.999524, 0, 0, 0.502294,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0187577);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550681,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504537,-99) , 
NN(
0, 
0, 
-1, -0.820344, 1, -1, 0.478863,-99) , 
7, 1.13594, 1, 0, 0.499048,-99) , 
7, 2.42852, 0, 0, 0.500614,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0227518);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49513,-99) , 
6, -951.286, 0, 0, 0.50235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4661,-99) , 
0, 0.489519, 0, 0, 0.500876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47637,-99) , 
7, 0.334552, 1, 0, 0.491255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453919,-99) , 
7, -0.997471, 0, 0, 0.486289,-99) , 
0, 0.500944, 1, 0, 0.496986,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.02555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.186959, 0, 1, 0.534073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466413,-99) , 
9, 2.57347, 1, 0, 0.517595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493378,-99) , 
8, -4.65626, 1, 0, 0.495215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421883,-99) , 
9, -2.83299, 0, 0, 0.492859,-99) , 
8, -0.946962, 0, 0, 0.495538,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0248639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488995,-99) , 
9, -2.20314, 1, 0, 0.531393,-99) , 
NN(
NN(
0, 
0, 
-1, -4.20881, 1, 1, 0.507187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397099,-99) , 
7, -0.806781, 1, 0, 0.467807,-99) , 
9, -1.94356, 0, 0, 0.504377,-99) , 
7, -1.28427, 1, 0, 0.5064,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0195733);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491861,-99) , 
0, 0.499993, 0, 0, 0.496366,-99) , 
7, -1.28565, 1, 0, 0.497902,-99) , 
8, -4.7443, 1, 0, 0.500076,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0249384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545742,-99) , 
NN(
0, 
0, 
-1, 0.502851, 1, -1, 0.495721,-99) , 
8, -4.02091, 1, 0, 0.497459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477128,-99) , 
8, -4.06002, 0, 0, 0.500112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404366,-99) , 
7, -0.592701, 1, 0, 0.480819,-99) , 
9, -1.72067, 0, 0, 0.49479,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0176165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0602041, 1, 1, 0.517735,-99) , 
NN(
0, 
0, 
-1, -0.0697383, 0, -1, 0.495068,-99) , 
7, 1.28781, 0, 0, 0.499597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448113,-99) , 
4, 0.999048, 0, 0, 0.498071,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0156853);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438992,-99) , 
9, -2.17072, 0, 0, 0.501245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451043,-99) , 
7, -1.57137, 0, 0, 0.499761,-99) , 
8, -4.85455, 1, 0, 0.501451,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0359981);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490329,-99) , 
2, 0.00341778, 0, 0, 0.509613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438214,-99) , 
7, -0.129899, 0, 0, 0.481106,-99) , 
2, -0.071094, 0, 0, 0.50527,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.522305,-99) , 
NN(
0, 
0, 
-1, -0.712064, 0, -1, 0.484012,-99) , 
9, -1.75364, 1, 0, 0.489613,-99) , 
1, 0.000160057, 1, 0, 0.497524,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0118909);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.531876, 1, 1, 0.505041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463794,-99) , 
3, 8.95508, 1, 0, 0.503845,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0154311);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544425,-99) , 
NN(
NN(
0, 
0, 
-1, -4.1795, 1, 1, 0.504,-99) , 
NN(
0, 
0, 
-1, -1.37663, 0, -1, 0.481666,-99) , 
0, 0.502851, 1, 0, 0.500774,-99) , 
8, -4.77544, 1, 0, 0.502646,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.013085);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498316,-99) , 
8, -0.856405, 0, 0, 0.499822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421598,-99) , 
9, 1.15563, 1, 0, 0.476171,-99) , 
7, 1.8572, 1, 0, 0.497875,-99) , 
8, 0.131629, 0, 0, 0.499144,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0181262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499302,-99) , 
0, 0.491424, 1, 0, 0.50169,-99) , 
4, 0.999048, 1, 0, 0.503576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463617,-99) , 
7, 2.04767, 1, 0, 0.490184,-99) , 
NN(
0, 
0, 
-1, 2.18381, 0, -1, 0.453751,-99) , 
1, 0.000658477, 0, 0, 0.469779,-99) , 
7, 1.5715, 1, 0, 0.499069,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0107684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540122,-99) , 
NN(
NN(
0, 
0, 
-1, -0.701554, 0, 1, 0.502898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470054,-99) , 
9, 2.24207, 1, 0, 0.501609,-99) , 
2, -0.213764, 1, 0, 0.503126,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0425268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494794,-99) , 
7, -0.221082, 0, 0, 0.52858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466222,-99) , 
7, -0.219977, 1, 0, 0.497039,-99) , 
8, -3.33242, 0, 0, 0.510864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488211,-99) , 
1, 0.00149974, 0, 0, 0.498603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456166,-99) , 
7, 0.553708, 0, 0, 0.494733,-99) , 
7, 0.431374, 1, 0, 0.503456,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0332907);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.49656, 1, 1, 0.507927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479241,-99) , 
8, -3.62462, 0, 0, 0.499054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43823,-99) , 
7, -0.0742065, 1, 0, 0.488447,-99) , 
9, -1.16499, 0, 0, 0.502066,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0283879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.2231, 0, 1, 0.53342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436054,-99) , 
9, -0.501647, 0, 0, 0.479712,-99) , 
9, -1.68843, 1, 0, 0.513758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496287,-99) , 
8, -4.12798, 1, 0, 0.497793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400183,-99) , 
9, -1.83818, 0, 0, 0.494408,-99) , 
7, -0.710145, 1, 0, 0.4978,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0598915);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482878,-99) , 
4, 0.999998, 0, 0, 0.509242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375814,-99) , 
9, 0.396521, 1, 0, 0.483054,-99) , 
4, 0.999955, 0, 0, 0.5043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449329,-99) , 
4, 0.999048, 0, 0, 0.502709,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0326281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.360147, 1, 1, 0.549968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457685,-99) , 
9, -0.615354, 1, 0, 0.508242,-99) , 
7, 0.714591, 0, 0, 0.523083,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497592, 0, 1, 0.507774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48634,-99) , 
0, 0.498545, 1, 0, 0.49003,-99) , 
0, 0.498091, 1, 0, 0.498489,-99) , 
2, -0.0677683, 1, 0, 0.502569,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0304818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493407,-99) , 
3, 4.38855, 1, 0, 0.517466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492714,-99) , 
2, -0.0179512, 1, 0, 0.497761,-99) , 
2, -0.029605, 1, 0, 0.503267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447846,-99) , 
2, 0.215158, 1, 0, 0.501313,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0458236);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499213,-99) , 
9, -0.852423, 1, 0, 0.525344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399854,-99) , 
9, -1.03468, 1, 0, 0.502231,-99) , 
8, -3.13417, 0, 0, 0.510833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491575,-99) , 
8, -1.96377, 1, 0, 0.504461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385563,-99) , 
9, -0.795584, 0, 0, 0.470661,-99) , 
9, -0.501423, 0, 0, 0.497711,-99) , 
7, 0.428961, 1, 0, 0.504668,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0309586);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452896,-99) , 
7, -1.28562, 0, 0, 0.506578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387109,-99) , 
7, -1.53185, 1, 0, 0.465713,-99) , 
9, -2.42207, 0, 0, 0.504205,-99) , 
8, 0.196083, 0, 0, 0.506341,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0253265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457783,-99) , 
3, 6.8668, 1, 0, 0.506338,-99) , 
4, 0.999048, 1, 0, 0.508483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456503,-99) , 
3, 8.9721, 1, 0, 0.50706,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0280925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.5716, 1, 1, 0.551205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42764,-99) , 
9, -1.31692, 0, 0, 0.465834,-99) , 
9, -2.21219, 1, 0, 0.510043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493658,-99) , 
8, 0.443751, 0, 0, 0.495182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427291,-99) , 
9, -2.00638, 0, 0, 0.492514,-99) , 
7, -0.999287, 1, 0, 0.494592,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0246073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479875,-99) , 
9, 0.639856, 1, 0, 0.541015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494387,-99) , 
6, -951.286, 0, 0, 0.50515,-99) , 
9, 0.873007, 1, 0, 0.517381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451838,-99) , 
7, -1.05078, 0, 0, 0.498064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391205,-99) , 
7, -1.15848, 1, 0, 0.471453,-99) , 
9, -2.18378, 0, 0, 0.49524,-99) , 
8, -1.85423, 0, 0, 0.500552,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0332988);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.546059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469227,-99) , 
7, 2.15456, 1, 0, 0.50872,-99) , 
9, 1.03074, 1, 0, 0.521813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493469,-99) , 
5, 0.00855816, 0, 0, 0.496789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407608,-99) , 
5, 0.0128437, 1, 0, 0.493246,-99) , 
8, -1.66154, 0, 0, 0.499127,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.016871);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554448,-99) , 
NN(
0, 
0, 
-1, -1.92837, 0, -1, 0.492993,-99) , 
7, 2.42862, 0, 0, 0.494842,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0469772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46642,-99) , 
8, -2.79148, 0, 0, 0.502444,-99) , 
8, -3.29038, 1, 0, 0.50684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488986,-99) , 
8, -3.37956, 0, 0, 0.50392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375956,-99) , 
7, 0.363989, 1, 0, 0.492212,-99) , 
9, -0.876362, 0, 0, 0.501192,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0213497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485235,-99) , 
6, -951.286, 0, 0, 0.523694,-99) , 
NN(
NN(
0, 
0, 
-1, -0.252032, 1, 1, 0.518362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491785,-99) , 
8, -3.63101, 1, 0, 0.494869,-99) , 
0, 0.504756, 0, 0, 0.496463,-99) , 
7, -1.28565, 1, 0, 0.49846,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0376834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499512,-99) , 
7, -0.997149, 1, 0, 0.501793,-99) , 
8, -3.56174, 1, 0, 0.506164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48097,-99) , 
8, -3.85486, 0, 0, 0.505781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363427,-99) , 
9, -1.41214, 0, 0, 0.444903,-99) , 
7, -0.277561, 1, 0, 0.48961,-99) , 
9, -1.22533, 0, 0, 0.501517,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0255862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85814, 0, 1, 0.509654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461275,-99) , 
0, 0.495244, 1, 0, 0.476087,-99) , 
4, 0.999909, 0, 0, 0.506202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468258,-99) , 
4, 0.999524, 0, 0, 0.504276,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.03504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482214,-99) , 
2, -0.0700353, 0, 0, 0.504193,-99) , 
8, -3.40848, 1, 0, 0.507839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491484,-99) , 
8, -3.5324, 0, 0, 0.504227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432076,-99) , 
7, 0.106117, 1, 0, 0.492384,-99) , 
9, -0.989768, 0, 0, 0.502376,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0282928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.144269, 0, 1, 0.511775,-99) , 
NN(
0, 
0, 
-1, 4.16501, 1, -1, 0.479584,-99) , 
4, 0.999932, 0, 0, 0.507462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462841,-99) , 
4, 0.999524, 0, 0, 0.505234,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0457999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477219,-99) , 
7, -0.285513, 1, 0, 0.507548,-99) , 
9, -1.01054, 0, 0, 0.514996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484932,-99) , 
7, 0.551398, 1, 0, 0.496966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404028,-99) , 
9, -0.647562, 0, 0, 0.460035,-99) , 
7, -0.428013, 0, 0, 0.492638,-99) , 
8, -3.3263, 1, 0, 0.500214,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0272478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484998,-99) , 
6, -951.287, 0, 0, 0.527787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490894,-99) , 
3, 8.82294, 0, 0, 0.492373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45365,-99) , 
7, 2.38792, 1, 0, 0.491127,-99) , 
7, -1.28421, 1, 0, 0.493883,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0268988);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214776, 0, 1, 0.508695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478187,-99) , 
7, -1.66391, 1, 0, 0.50877,-99) , 
NN(
0, 
0, 
-1, 0.498082, 0, -1, 0.438502,-99) , 
9, -2.12263, 1, 0, 0.478431,-99) , 
7, -0.999287, 0, 0, 0.504941,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0315287);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49253,-99) , 
7, 2.40131, 1, 0, 0.532695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489583,-99) , 
8, -1.66951, 0, 0, 0.518292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487054,-99) , 
4, 0.999977, 1, 0, 0.493819,-99) , 
4, 0.999524, 1, 0, 0.496388,-99) , 
7, 1.85712, 0, 0, 0.498396,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0292173);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.26903, 0, 1, 0.53585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492887,-99) , 
3, 4.34782, 0, 0, 0.500536,-99) , 
4, 0.999525, 1, 0, 0.502421,-99) , 
7, 2.14296, 0, 0, 0.504323,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0223861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.88509, 1, 1, 0.506042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446891,-99) , 
0, 0.49905, 0, 0, 0.471061,-99) , 
7, -0.997533, 0, 0, 0.50374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428145,-99) , 
7, -1.57335, 1, 0, 0.47068,-99) , 
9, -2.28667, 0, 0, 0.501408,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.022576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.540294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495848,-99) , 
9, 1.45445, 1, 0, 0.527756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488179,-99) , 
7, -0.0703864, 0, 0, 0.497216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456646,-99) , 
6, -951.287, 1, 0, 0.477778,-99) , 
7, 1.39439, 1, 0, 0.495456,-99) , 
7, 1.857, 0, 0, 0.498442,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0332281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475043,-99) , 
2, 0.0671058, 1, 0, 0.516248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42593,-99) , 
6, -1.2854, 0, 0, 0.496227,-99) , 
6, -951.286, 1, 0, 0.505074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532191,-99) , 
NN(
0, 
0, 
-1, 0.999977, 0, -1, 0.487125,-99) , 
4, 0.999525, 1, 0, 0.4894,-99) , 
0, 0.497138, 1, 0, 0.495593,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0282092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496951,-99) , 
1, -0.00219257, 0, 0, 0.517768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455711,-99) , 
7, 1.9394, 0, 0, 0.483613,-99) , 
7, 1.2868, 1, 0, 0.511125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493348,-99) , 
2, 0.0807212, 0, 0, 0.49598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453175,-99) , 
7, 2.14282, 1, 0, 0.493786,-99) , 
0, 0.499995, 0, 0, 0.499723,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0369843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474673,-99) , 
2, 0.059382, 1, 0, 0.524875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385689,-99) , 
9, -1.58744, 0, 0, 0.501437,-99) , 
7, -0.428607, 1, 0, 0.507461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452369,-99) , 
9, 2.01494, 1, 0, 0.504866,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0310423);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.96384, 1, 1, 0.517754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488836,-99) , 
9, -1.04244, 0, 0, 0.499757,-99) , 
NN(
0, 
0, 
-1, -0.139385, 0, -1, 0.486268,-99) , 
8, -3.29059, 1, 0, 0.491024,-99) , 
0, 0.504757, 0, 0, 0.492843,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0269735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.408724, 1, 1, 0.517097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491888,-99) , 
0, 0.494285, 1, 0, 0.495865,-99) , 
3, 1.77278, 1, 0, 0.505179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453122,-99) , 
3, 8.93425, 1, 0, 0.503661,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.014223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0501047, 1, 1, 0.50505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466551,-99) , 
2, -0.213256, 0, 0, 0.503615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472581,-99) , 
7, -1.56573, 0, 0, 0.502155,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0262428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484168,-99) , 
9, 1.04928, 1, 0, 0.508641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458996,-99) , 
7, -1.19238, 1, 0, 0.485682,-99) , 
9, -2.00476, 0, 0, 0.506198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488376,-99) , 
9, -0.108493, 1, 0, 0.512712,-99) , 
NN(
0, 
0, 
-1, -2.82629, 0, -1, 0.490112,-99) , 
2, -0.0677529, 1, 0, 0.493701,-99) , 
0, 0.498091, 0, 0, 0.500049,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0309875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.94975, 1, 1, 0.530802,-99) , 
NN(
0, 
0, 
-1, 0.428702, 1, -1, 0.483705,-99) , 
3, 4.35753, 1, 0, 0.51366,-99) , 
NN(
NN(
0, 
0, 
-1, -2.67833, 1, 1, 0.524772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484908,-99) , 
1, -0.000579617, 1, 0, 0.49579,-99) , 
0, 0.504757, 0, 0, 0.49756,-99) , 
2, -0.0748489, 1, 0, 0.499967,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0150905);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497065,-99) , 
7, 2.14374, 0, 0, 0.499289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467148,-99) , 
4, 0.999524, 0, 0, 0.497732,-99) , 
8, -4.81026, 1, 0, 0.499438,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0257866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.373276, 0, 1, 0.507917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409308,-99) , 
8, -3.46861, 0, 0, 0.472174,-99) , 
7, -0.999968, 0, 0, 0.505456,-99) , 
NN(
0, 
0, 
-1, -2.85378, 0, -1, 0.465272,-99) , 
9, -2.26759, 0, 0, 0.502633,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0233608);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.510722,-99) , 
NN(
0, 
0, 
-1, 0.503802, 1, -1, 0.48524,-99) , 
9, 0.466863, 1, 0, 0.504686,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0360403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496023,-99) , 
6, -951.286, 1, 0, 0.532491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361095,-99) , 
6, -1.8569, 0, 0, 0.500719,-99) , 
NN(
0, 
0, 
-1, -1.28425, 0, -1, 0.48515,-99) , 
6, -951.286, 0, 0, 0.493827,-99) , 
7, 2.14298, 0, 0, 0.496059,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0211506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49541,-99) , 
7, 1.85776, 0, 0, 0.499091,-99) , 
NN(
0, 
0, 
-1, 0.497131, 0, -1, 0.46167,-99) , 
4, 0.999819, 0, 0, 0.496482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458184,-99) , 
4, 0.999048, 0, 0, 0.495342,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0211446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00683807, 1, 1, 0.50646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453247,-99) , 
1, 0.0115451, 1, 0, 0.504637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390658,-99) , 
1, -0.0125855, 0, 0, 0.501572,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0296097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.530738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479254,-99) , 
0, 0.50285, 1, 0, 0.500844,-99) , 
NN(
0, 
0, 
-1, -1.5712, 0, -1, 0.481496,-99) , 
6, -951.286, 1, 0, 0.489915,-99) , 
7, -1.28562, 1, 0, 0.492969,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0499888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43932,-99) , 
7, -1.50072, 0, 0, 0.520866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446607,-99) , 
9, -2.79098, 0, 0, 0.515653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492171,-99) , 
8, -3.21587, 1, 0, 0.497444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39773,-99) , 
8, -3.55896, 1, 0, 0.454289,-99) , 
9, -0.839017, 0, 0, 0.491008,-99) , 
7, 0.144511, 1, 0, 0.50173,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0198154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490147,-99) , 
0, 0.497138, 0, 0, 0.499047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441744,-99) , 
9, 2.31593, 1, 0, 0.497392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4624,-99) , 
7, 2.14332, 1, 0, 0.495605,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0263464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0634758, 0, 1, 0.51059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473235,-99) , 
3, 4.46241, 0, 0, 0.489864,-99) , 
3, 3.05857, 1, 0, 0.503899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455545,-99) , 
3, 8.95508, 1, 0, 0.502517,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.027813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999997, 0, 1, 0.510443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464183,-99) , 
0, 0.495239, 1, 0, 0.480663,-99) , 
4, 0.999932, 0, 0, 0.506495,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.473552,-99) , 
4, 0.999524, 0, 0, 0.504805,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0473565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491134,-99) , 
9, 0.949562, 1, 0, 0.520641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449155,-99) , 
8, -2.82174, 1, 0, 0.486343,-99) , 
9, 0.132936, 0, 0, 0.50994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480071,-99) , 
7, -1.09453, 1, 0, 0.48355,-99) , 
4, 0.999524, 1, 0, 0.486192,-99) , 
7, 1.00021, 0, 0, 0.492777,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0245909);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.4981, 0, 1, 0.520206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495341,-99) , 
7, -0.151361, 0, 0, 0.509956,-99) , 
NN(
0, 
0, 
-1, 0.215414, 1, -1, 0.490081,-99) , 
8, -3.87806, 1, 0, 0.494095,-99) , 
8, -0.75815, 0, 0, 0.49642,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0307846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49376,-99) , 
6, -951.286, 1, 0, 0.503376,-99) , 
4, 0.999524, 1, 0, 0.506822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512741,-99) , 
NN(
0, 
0, 
-1, 0.493736, 0, -1, 0.471741,-99) , 
0, 0.5019, 0, 0, 0.480681,-99) , 
3, 4.53295, 1, 0, 0.502058,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0460518);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497407,-99) , 
7, 0.686981, 1, 0, 0.512683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448699,-99) , 
9, -0.677846, 0, 0, 0.486541,-99) , 
8, -3.03614, 0, 0, 0.506671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48125,-99) , 
3, 1.31231, 0, 0, 0.496674,-99) , 
NN(
0, 
0, 
-1, -3.42875, 0, -1, 0.464989,-99) , 
3, 3.76142, 1, 0, 0.48833,-99) , 
7, 0.142789, 0, 0, 0.498527,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0353485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.867311, 1, 1, 0.517479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477761,-99) , 
0, 0.500933, 0, 0, 0.487955,-99) , 
3, 3.99595, 1, 0, 0.510044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491805,-99) , 
7, 0.30805, 1, 0, 0.500045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438461,-99) , 
7, -0.684461, 1, 0, 0.47051,-99) , 
7, -0.140633, 0, 0, 0.494976,-99) , 
8, -3.23255, 1, 0, 0.500527,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0160753);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545643,-99) , 
NN(
NN(
0, 
0, 
-1, -1.2859, 1, 1, 0.504501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449395,-99) , 
7, -0.139601, 0, 0, 0.486123,-99) , 
2, -0.0719762, 0, 0, 0.501665,-99) , 
8, -4.91132, 1, 0, 0.50317,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0308478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69408, 1, 1, 0.520709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482001,-99) , 
7, 1.36726, 1, 0, 0.494067,-99) , 
0, 0.501898, 1, 0, 0.515695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475157,-99) , 
2, -0.0816599, 0, 0, 0.500359,-99) , 
NN(
0, 
0, 
-1, 0.134768, 0, -1, 0.46105,-99) , 
2, 0.0671317, 1, 0, 0.494149,-99) , 
7, 0.714694, 0, 0, 0.502124,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.028183);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483777,-99) , 
9, -1.20995, 0, 0, 0.49557,-99) , 
NN(
0, 
0, 
-1, 0.428482, 0, -1, 0.482622,-99) , 
8, -2.56215, 1, 0, 0.489905,-99) , 
8, -4.85498, 1, 0, 0.491756,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0324091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491876,-99) , 
0, 0.495097, 0, 0, 0.510536,-99) , 
NN(
0, 
0, 
-1, 0.548852, 1, -1, 0.494719,-99) , 
9, -0.661389, 0, 0, 0.503277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500559,-99) , 
NN(
0, 
0, 
-1, -0.0609222, 1, -1, 0.456361,-99) , 
0, 0.506253, 0, 0, 0.4625,-99) , 
0, 0.501899, 1, 0, 0.495075,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0239149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49978,-99) , 
9, -1.27001, 0, 0, 0.511459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489041,-99) , 
7, 0.715664, 0, 0, 0.498007,-99) , 
8, -3.51751, 1, 0, 0.501853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475961,-99) , 
9, -0.564812, 1, 0, 0.486876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436069,-99) , 
7, -0.421493, 0, 0, 0.47186,-99) , 
0, 0.492376, 0, 0, 0.498736,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0246261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.52759, 0, 1, 0.526062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498461,-99) , 
3, 0.531947, 1, 0, 0.503657,-99) , 
3, 4.53295, 0, 0, 0.507829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472585,-99) , 
7, 1.05595, 1, 0, 0.500281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451569,-99) , 
7, -0.140733, 0, 0, 0.482362,-99) , 
0, 0.503804, 1, 0, 0.505239,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.01986);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495283,-99) , 
7, 1.13603, 0, 0, 0.51636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459784,-99) , 
7, 1.65265, 1, 0, 0.500504,-99) , 
8, -1.67637, 0, 0, 0.50348,-99) , 
7, 2.42852, 0, 0, 0.505011,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0241858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.880291, 1, 1, 0.541087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462003,-99) , 
6, -0.144792, 1, 0, 0.495743,-99) , 
6, -951.286, 1, 0, 0.523667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538734,-99) , 
NN(
0, 
0, 
-1, -1.93063, 0, -1, 0.493757,-99) , 
8, -5.00726, 1, 0, 0.495235,-99) , 
8, -1.29918, 0, 0, 0.499517,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0186442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497148, 1, 1, 0.541832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499152,-99) , 
7, 0.793221, 0, 0, 0.526757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496313,-99) , 
8, -1.76224, 0, 0, 0.499043,-99) , 
2, -0.210706, 1, 0, 0.500685,-99) , 
9, 1.2031, 0, 0, 0.503759,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0331053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450402,-99) , 
7, -1.28251, 0, 0, 0.508706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463865,-99) , 
9, -2.474, 0, 0, 0.506343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454819,-99) , 
3, 4.1532, 1, 0, 0.49662,-99) , 
NN(
0, 
0, 
-1, -1.79136, 1, -1, 0.458455,-99) , 
8, -3.17097, 0, 0, 0.481911,-99) , 
0, 0.5019, 1, 0, 0.501436,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0268386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.911893, 0, 1, 0.515877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451333,-99) , 
7, -0.264022, 0, 0, 0.497816,-99) , 
8, -3.22538, 1, 0, 0.50421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467426,-99) , 
7, -1.56982, 0, 0, 0.502471,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0253716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490639,-99) , 
8, -1.41752, 1, 0, 0.527122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491161,-99) , 
7, -0.548543, 1, 0, 0.495955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447132,-99) , 
9, -2.82691, 0, 0, 0.494596,-99) , 
7, 2.14341, 0, 0, 0.496442,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0365963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466739,-99) , 
9, -2.13061, 1, 0, 0.499526,-99) , 
7, -0.432651, 0, 0, 0.513311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479614,-99) , 
8, -2.63116, 0, 0, 0.504113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482942,-99) , 
7, -0.700095, 1, 0, 0.489181,-99) , 
7, 0.714564, 0, 0, 0.495664,-99) , 
8, -4.00702, 1, 0, 0.498383,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0306603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484928,-99) , 
9, -0.324822, 0, 0, 0.494938,-99) , 
3, 8.55516, 0, 0, 0.497253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449369,-99) , 
4, 0.999524, 0, 0, 0.49488,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.045188);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442788,-99) , 
9, -2.86603, 0, 0, 0.525394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408899,-99) , 
9, -1.45668, 0, 0, 0.491273,-99) , 
7, -0.267794, 1, 0, 0.51189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486596,-99) , 
9, -0.865697, 1, 0, 0.504782,-99) , 
NN(
0, 
0, 
-1, -0.506426, 0, -1, 0.4888,-99) , 
7, 0.428602, 1, 0, 0.49466,-99) , 
8, -3.40424, 1, 0, 0.500078,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0295771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.56311, 0, 1, 0.512867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469004,-99) , 
4, 0.999524, 0, 0, 0.510591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45426,-99) , 
9, 2.42925, 1, 0, 0.508869,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0441669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417637,-99) , 
6, -1.57061, 0, 0, 0.526496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470664,-99) , 
7, -0.713692, 0, 0, 0.498671,-99) , 
6, -951.286, 0, 0, 0.51402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481667,-99) , 
7, -0.646884, 0, 0, 0.504209,-99) , 
NN(
0, 
0, 
-1, 0.501897, 1, -1, 0.476555,-99) , 
9, 0.156529, 1, 0, 0.495913,-99) , 
1, 0.000160057, 0, 0, 0.504768,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0245086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496187, 1, 1, 0.516179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464816,-99) , 
0, 0.497161, 0, 0, 0.492012,-99) , 
8, -3.45888, 0, 0, 0.509624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492438,-99) , 
2, 0.0340807, 0, 0, 0.497779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461592,-99) , 
2, -0.210425, 0, 0, 0.496329,-99) , 
1, 0.00236311, 0, 0, 0.499796,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0326692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.913621, 1, 1, 0.529246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494426,-99) , 
3, 4.32582, 1, 0, 0.52221,-99) , 
NN(
NN(
0, 
0, 
-1, 1.5208, 1, 1, 0.516561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485627,-99) , 
2, -0.0735793, 1, 0, 0.489534,-99) , 
8, -1.17537, 0, 0, 0.492993,-99) , 
0, 0.49428, 1, 0, 0.498307,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0182944);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498068, 0, 1, 0.546658,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.493215,-99) , 
8, -0.172408, 0, 0, 0.496381,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0272256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491776,-99) , 
7, -0.192897, 0, 0, 0.507873,-99) , 
7, -1.50833, 1, 0, 0.521462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468461,-99) , 
7, -0.426138, 0, 0, 0.500808,-99) , 
9, -1.63147, 1, 0, 0.502159,-99) , 
8, -3.91329, 1, 0, 0.505503,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0204539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499058,-99) , 
9, -1.80637, 1, 0, 0.523688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452272,-99) , 
9, -1.47247, 0, 0, 0.498611,-99) , 
7, -0.428507, 1, 0, 0.503863,-99) , 
NN(
0, 
0, 
-1, 0.498071, 0, -1, 0.470228,-99) , 
9, -2.47438, 0, 0, 0.50214,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0419434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461699,-99) , 
8, -2.91457, 1, 0, 0.503193,-99) , 
8, -1.70347, 0, 0, 0.511927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499008,-99) , 
8, -3.13657, 1, 0, 0.504277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425519,-99) , 
8, -3.09762, 0, 0, 0.457229,-99) , 
9, -0.720818, 0, 0, 0.495145,-99) , 
7, 0.142827, 1, 0, 0.502524,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0530096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419057,-99) , 
9, -1.06364, 0, 0, 0.505003,-99) , 
8, -3.84182, 1, 0, 0.509635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490833,-99) , 
8, -3.8322, 0, 0, 0.513035,-99) , 
NN(
0, 
0, 
-1, -0.00166954, 0, -1, 0.458536,-99) , 
9, -1.45336, 1, 0, 0.490517,-99) , 
7, -0.141774, 0, 0, 0.503187,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0424359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.81922, 0, 1, 0.53197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480482,-99) , 
9, -0.248738, 0, 0, 0.500382,-99) , 
9, -1.45336, 1, 0, 0.518624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566222,-99) , 
NN(
0, 
0, 
-1, -1.08348, 0, -1, 0.484644,-99) , 
8, -3.86833, 1, 0, 0.48796,-99) , 
7, -0.142378, 1, 0, 0.498222,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.018725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.70269, 0, 1, 0.554722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476118,-99) , 
9, -2.02531, 1, 0, 0.523408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499045,-99) , 
7, 2.42858, 0, 0, 0.50066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421612,-99) , 
9, -2.05441, 0, 0, 0.498072,-99) , 
7, -0.999913, 1, 0, 0.501032,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0346204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483553,-99) , 
0, 0.502303, 1, 0, 0.515802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432489,-99) , 
9, -1.71095, 1, 0, 0.479717,-99) , 
0, 0.495231, 0, 0, 0.506501,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493675,-99) , 
8, -3.76634, 1, 0, 0.496793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370714,-99) , 
9, -1.63077, 0, 0, 0.454754,-99) , 
9, -1.44377, 0, 0, 0.493766,-99) , 
7, -0.427473, 1, 0, 0.496867,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0278076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469598,-99) , 
4, 0.999819, 0, 0, 0.507093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448565,-99) , 
7, -1.85705, 0, 0, 0.505499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42868,-99) , 
4, 0.999048, 0, 0, 0.503352,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0404948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490562, 1, 1, 0.545557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478915,-99) , 
9, 2.47911, 1, 0, 0.516178,-99) , 
0, 0.492376, 1, 0, 0.519296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489993,-99) , 
8, -2.87276, 0, 0, 0.496596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427872,-99) , 
7, 0.676804, 1, 0, 0.491204,-99) , 
9, -0.512567, 0, 0, 0.505339,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0169363);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.67974, 0, 1, 0.536465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478702,-99) , 
7, -0.997611, 0, 0, 0.501834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455765,-99) , 
0, 0.505708, 1, 0, 0.499933,-99) , 
8, -4.67472, 1, 0, 0.501905,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0283792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496736, 1, 1, 0.519109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478365,-99) , 
3, 2.61121, 1, 0, 0.499159,-99) , 
3, 4.47814, 0, 0, 0.502881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494136,-99) , 
9, 0.414567, 0, 0, 0.501055,-99) , 
NN(
0, 
0, 
-1, -0.70091, 1, -1, 0.4667,-99) , 
7, 0.713218, 0, 0, 0.478934,-99) , 
0, 0.49333, 0, 0, 0.499433,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0336063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488812,-99) , 
4, 0.999977, 1, 0, 0.497195,-99) , 
4, 0.999524, 1, 0, 0.499821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473953,-99) , 
6, -951.286, 0, 0, 0.491418,-99) , 
NN(
0, 
0, 
-1, 1.72292, 0, -1, 0.463591,-99) , 
7, 0.715579, 0, 0, 0.482762,-99) , 
9, 0.31494, 1, 0, 0.495292,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.023618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493445,-99) , 
6, -951.286, 1, 0, 0.507859,-99) , 
9, 0.58973, 0, 0, 0.517896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494895,-99) , 
7, 0.428468, 0, 0, 0.500981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468078,-99) , 
0, 0.501381, 0, 0, 0.483032,-99) , 
0, 0.500538, 1, 0, 0.498697,-99) , 
0, 0.501899, 0, 0, 0.50262,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0483567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.699095, 1, 1, 0.513289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420633,-99) , 
0, 0.497131, 0, 0, 0.480619,-99) , 
1, 0.00592662, 1, 0, 0.510132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472803,-99) , 
7, 1.69406, 1, 0, 0.500767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456681,-99) , 
8, -3.00901, 1, 0, 0.479147,-99) , 
8, -2.15708, 0, 0, 0.490337,-99) , 
7, 0.714564, 1, 0, 0.50287,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0391888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.80613, 0, 1, 0.532604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474988,-99) , 
7, -0.278988, 0, 0, 0.486985,-99) , 
9, -1.44324, 1, 0, 0.514094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436725,-99) , 
4, 0.999524, 0, 0, 0.497496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425125,-99) , 
8, -3.71753, 1, 0, 0.466903,-99) , 
8, -3.28517, 0, 0, 0.491754,-99) , 
7, -0.142904, 1, 0, 0.499143,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0377707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483574,-99) , 
2, -0.125739, 1, 0, 0.486017,-99) , 
3, 8.54447, 0, 0, 0.487649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451281,-99) , 
4, 0.999524, 0, 0, 0.485906,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0249334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46279,-99) , 
9, -1.7823, 0, 0, 0.498999,-99) , 
7, -1.28088, 1, 0, 0.503738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489526,-99) , 
8, -4.17986, 1, 0, 0.491816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448791,-99) , 
7, -1.28428, 0, 0, 0.488476,-99) , 
0, 0.49809, 1, 0, 0.495853,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0170677);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497174,-99) , 
7, -1.28566, 1, 0, 0.499738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470016,-99) , 
8, -4.78859, 0, 0, 0.49832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503042,-99) , 
NN(
0, 
0, 
-1, -0.00737016, 0, -1, 0.472511,-99) , 
2, 0.0669146, 0, 0, 0.479589,-99) , 
0, 0.49333, 0, 0, 0.49564,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.039242);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.538478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410977,-99) , 
9, -1.44699, 0, 0, 0.499093,-99) , 
7, -0.32063, 1, 0, 0.522589,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.525838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482195,-99) , 
7, 0.143313, 0, 0, 0.49973,-99) , 
9, -1.03184, 1, 0, 0.502065,-99) , 
8, -3.41989, 1, 0, 0.50839,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0165311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531668,-99) , 
NN(
0, 
0, 
-1, -0.0679401, 0, -1, 0.494284,-99) , 
7, -1.28251, 1, 0, 0.496187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464184,-99) , 
8, -4.85498, 0, 0, 0.494822,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.030486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498567,-99) , 
7, 0.144897, 1, 0, 0.506661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439271,-99) , 
9, -1.27964, 0, 0, 0.47187,-99) , 
7, -0.997088, 0, 0, 0.504577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460866,-99) , 
8, -4.83339, 0, 0, 0.507273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374911,-99) , 
7, -1.1392, 1, 0, 0.467688,-99) , 
9, -2.16881, 0, 0, 0.501465,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0298634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.718976, 1, 1, 0.539274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478596,-99) , 
9, -1.92213, 0, 0, 0.505204,-99) , 
8, -1.01158, 0, 0, 0.509314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485932,-99) , 
0, 0.493601, 1, 0, 0.492655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435903,-99) , 
9, 1.68357, 1, 0, 0.489071,-99) , 
0, 0.49809, 0, 0, 0.499485,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0420315);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491431,-99) , 
4, 0.999998, 0, 0, 0.510443,-99) , 
NN(
0, 
0, 
-1, 4.13026, 1, -1, 0.481908,-99) , 
4, 0.999955, 0, 0, 0.504906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459845,-99) , 
4, 0.999048, 0, 0, 0.503638,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0231857);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491839,-99) , 
2, 0.217152, 0, 0, 0.493213,-99) , 
NN(
0, 
0, 
-1, 2.13292, 1, -1, 0.451744,-99) , 
7, 1.91122, 1, 0, 0.491035,-99) , 
7, 2.4284, 0, 0, 0.49217,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.04097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000897991, 1, 1, 0.521119,-99) , 
NN(
0, 
0, 
-1, -1.9783, 0, -1, 0.422184,-99) , 
6, -1.57023, 0, 0, 0.51165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487577,-99) , 
9, -0.994524, 0, 0, 0.502708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455505,-99) , 
0, 0.504753, 1, 0, 0.499487,-99) , 
6, -951.286, 0, 0, 0.506261,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0318962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.14945, 1, 1, 0.510023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383211,-99) , 
7, -0.842443, 1, 0, 0.48331,-99) , 
9, -1.87515, 0, 0, 0.506648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462144,-99) , 
9, -0.77035, 1, 0, 0.483637,-99) , 
7, 1.28615, 0, 0, 0.490014,-99) , 
2, -0.0705199, 0, 0, 0.504036,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0278684);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482368,-99) , 
0, 0.494279, 0, 0, 0.502391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480393,-99) , 
8, -2.812, 1, 0, 0.489706,-99) , 
7, 1.00134, 1, 0, 0.499005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472642,-99) , 
8, -0.0950245, 1, 0, 0.497713,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0133859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494801,-99) , 
7, 0.151479, 0, 0, 0.535908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498663,-99) , 
0, 0.490471, 1, 0, 0.500285,-99) , 
3, 0.502674, 1, 0, 0.502699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45329,-99) , 
3, 8.80212, 1, 0, 0.501148,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0149);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49538,-99) , 
8, -4.8711, 1, 0, 0.496719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469085,-99) , 
9, 2.14376, 1, 0, 0.495609,-99) , 
0, 0.48952, 1, 0, 0.496769,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0309721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.15645, 0, 1, 0.523345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480168,-99) , 
6, -951.286, 1, 0, 0.49329,-99) , 
3, 4.3896, 1, 0, 0.516985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492699,-99) , 
6, -951.288, 0, 0, 0.517029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488804,-99) , 
8, -2.52583, 0, 0, 0.494995,-99) , 
7, 1.57129, 0, 0, 0.498129,-99) , 
0, 0.499995, 0, 0, 0.504614,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0239722);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494085,-99) , 
7, -0.670644, 1, 0, 0.498606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452837,-99) , 
7, -1.28271, 0, 0, 0.49676,-99) , 
NN(
0, 
0, 
-1, -5.0465, 1, -1, 0.4664,-99) , 
9, -2.43955, 0, 0, 0.495102,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0477297);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489704,-99) , 
0, 0.494281, 0, 0, 0.516904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360878,-99) , 
6, -1.85657, 0, 0, 0.507516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489671,-99) , 
0, 0.495367, 0, 0, 0.503696,-99) , 
NN(
0, 
0, 
-1, 0.501082, 0, -1, 0.48214,-99) , 
0, 0.496184, 1, 0, 0.489072,-99) , 
6, -951.286, 0, 0, 0.499309,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0324723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.153279, 0, 1, 0.545545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4852,-99) , 
8, -3.10841, 1, 0, 0.513636,-99) , 
1, -7.59846e-05, 1, 0, 0.529417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479659,-99) , 
3, 4.56745, 1, 0, 0.519446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492315,-99) , 
2, -0.226512, 1, 0, 0.494371,-99) , 
2, 0.0725002, 0, 0, 0.497808,-99) , 
0, 0.493329, 1, 0, 0.502218,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.022364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00980576, 0, 1, 0.535428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499515,-99) , 
7, 0.429445, 1, 0, 0.507653,-99) , 
1, -0.00621516, 1, 0, 0.509817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4651,-99) , 
2, -0.210542, 0, 0, 0.508106,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0231659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.436105, 0, 1, 0.525391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467877,-99) , 
7, 2.14264, 1, 0, 0.504349,-99) , 
2, -0.0708144, 1, 0, 0.507758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453821,-99) , 
9, 2.27534, 1, 0, 0.505861,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0313561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42862, 0, 1, 0.5132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468563,-99) , 
9, -2.79366, 0, 0, 0.51182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526684,-99) , 
NN(
0, 
0, 
-1, -0.137821, 0, -1, 0.465593,-99) , 
2, -0.050129, 1, 0, 0.481873,-99) , 
0, 0.503804, 1, 0, 0.508743,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0354325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.4782, 1, 1, 0.510837,-99) , 
NN(
0, 
0, 
-1, -0.15436, 1, -1, 0.480367,-99) , 
7, 0.144763, 0, 0, 0.503898,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490833,-99) , 
8, -3.56825, 0, 0, 0.503194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410752,-99) , 
7, -0.0405889, 1, 0, 0.488567,-99) , 
9, -1.15874, 0, 0, 0.499348,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0507832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463466,-99) , 
7, 0.441464, 1, 0, 0.503809,-99) , 
7, 1.01389, 0, 0, 0.507484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483563,-99) , 
7, 1.04303, 1, 0, 0.501835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439292,-99) , 
8, -1.43089, 0, 0, 0.470033,-99) , 
7, 0.431374, 0, 0, 0.492035,-99) , 
8, -2.66805, 1, 0, 0.500603,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0334134);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47149,-99) , 
4, 0.999955, 0, 0, 0.521735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490864,-99) , 
7, -1.16324, 1, 0, 0.494799,-99) , 
7, 1.28559, 0, 0, 0.500108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44691,-99) , 
4, 0.999048, 0, 0, 0.498607,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.026307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.11513, 0, 1, 0.526225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495495,-99) , 
0, 0.504413, 0, 0, 0.498415,-99) , 
0, 0.496413, 1, 0, 0.501833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486675,-99) , 
0, 0.492278, 0, 0, 0.49757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448314,-99) , 
8, -3.1739, 1, 0, 0.470773,-99) , 
0, 0.493056, 1, 0, 0.484679,-99) , 
0, 0.495233, 0, 0, 0.497511,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0219073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.424353, 0, 1, 0.539132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496594,-99) , 
0, 0.505618, 1, 0, 0.522195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496024,-99) , 
7, -0.138824, 1, 0, 0.5027,-99) , 
NN(
0, 
0, 
-1, -0.713667, 0, -1, 0.483424,-99) , 
2, -0.0708144, 0, 0, 0.499791,-99) , 
0, 0.503804, 0, 0, 0.502158,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0145297);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498613,-99) , 
8, -4.55657, 1, 0, 0.534068,-99) , 
NN(
0, 
0, 
-1, -1.52823, 0, -1, 0.496478,-99) , 
8, -4.25695, 1, 0, 0.499118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460518,-99) , 
8, -4.82902, 0, 0, 0.497424,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0288675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476835,-99) , 
9, -0.227115, 1, 0, 0.504859,-99) , 
0, 0.504712, 1, 0, 0.518741,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999663, 0, 1, 0.512726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487068,-99) , 
3, 4.15375, 0, 0, 0.491247,-99) , 
2, -0.0755059, 1, 0, 0.494231,-99) , 
0, 0.503804, 0, 0, 0.496642,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0261089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491446,-99) , 
7, 2.04766, 1, 0, 0.503982,-99) , 
1, -0.00178506, 1, 0, 0.522973,-99) , 
NN(
NN(
0, 
0, 
-1, -1.4705, 0, 1, 0.515826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484303,-99) , 
0, 0.499994, 1, 0, 0.497864,-99) , 
8, -3.75146, 1, 0, 0.502325,-99) , 
7, 1.57125, 0, 0, 0.505189,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0271498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.437905, 0, 1, 0.510078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461818,-99) , 
7, -1.28505, 0, 0, 0.508322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439916,-99) , 
7, -1.60012, 1, 0, 0.473897,-99) , 
9, -2.28251, 0, 0, 0.505869,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0345869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.509039, 1, 1, 0.510162,-99) , 
NN(
0, 
0, 
-1, 0.071981, 1, -1, 0.483255,-99) , 
3, 4.51103, 1, 0, 0.505312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481878,-99) , 
8, -3.74384, 0, 0, 0.495475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403522,-99) , 
7, -0.192104, 1, 0, 0.48154,-99) , 
9, -1.33672, 0, 0, 0.499326,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0131663);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49802,-99) , 
8, -1.00942, 0, 0, 0.499408,-99) , 
NN(
0, 
0, 
-1, 0.498077, 1, -1, 0.454689,-99) , 
9, 1.45895, 1, 0, 0.49696,-99) , 
8, 0.334481, 0, 0, 0.498324,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0274934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486345,-99) , 
8, -1.59995, 1, 0, 0.50385,-99) , 
8, -0.361622, 0, 0, 0.506504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465941,-99) , 
7, -0.713641, 0, 0, 0.503834,-99) , 
NN(
0, 
0, 
-1, -1.28611, 0, -1, 0.479537,-99) , 
6, -951.286, 1, 0, 0.49028,-99) , 
0, 0.497138, 0, 0, 0.499898,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0311905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488551,-99) , 
2, -0.0326131, 0, 0, 0.519771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492451,-99) , 
3, 0.721972, 1, 0, 0.49842,-99) , 
3, 4.31806, 0, 0, 0.502403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452352,-99) , 
2, 0.211603, 1, 0, 0.500585,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0190259);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477926,-99) , 
4, 0.999909, 0, 0, 0.517353,-99) , 
NN(
0, 
0, 
-1, -1.56816, 0, -1, 0.496677,-99) , 
0, 0.495232, 1, 0, 0.501758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445885,-99) , 
4, 0.999048, 0, 0, 0.500224,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0210535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483219,-99) , 
9, -1.50479, 0, 0, 0.499826,-99) , 
8, -5.02077, 1, 0, 0.501489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455429,-99) , 
9, 2.49421, 1, 0, 0.486387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443529,-99) , 
8, -0.285557, 0, 0, 0.47146,-99) , 
9, 1.46138, 1, 0, 0.499038,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0266385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429321,-99) , 
9, -2.37637, 1, 0, 0.506781,-99) , 
7, -0.744272, 0, 0, 0.525967,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498078, 1, 1, 0.524536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488588,-99) , 
8, -3.08133, 0, 0, 0.498249,-99) , 
7, -0.997073, 1, 0, 0.499863,-99) , 
8, -4.16173, 1, 0, 0.503116,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.035463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476491,-99) , 
7, 0.674438, 0, 0, 0.500161,-99) , 
8, -3.4022, 1, 0, 0.503091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481842,-99) , 
8, -3.26143, 0, 0, 0.493562,-99) , 
NN(
0, 
0, 
-1, -1.74684, 0, -1, 0.468842,-99) , 
9, -0.677094, 1, 0, 0.487142,-99) , 
7, 0.429349, 0, 0, 0.494499,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0209455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.509052, 1, 1, 0.508779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46918,-99) , 
3, 8.93425, 1, 0, 0.507518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470566,-99) , 
9, 2.00348, 1, 0, 0.505684,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0324486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436056,-99) , 
9, -1.27317, 1, 0, 0.502111,-99) , 
7, 0.257496, 0, 0, 0.512433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487947,-99) , 
0, 0.499042, 0, 0, 0.495343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459564,-99) , 
0, 0.49523, 1, 0, 0.473926,-99) , 
2, -0.0739901, 0, 0, 0.492212,-99) , 
8, -3.41989, 1, 0, 0.498382,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0306076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.138821, 0, 1, 0.528219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478887,-99) , 
9, -1.56128, 1, 0, 0.501383,-99) , 
7, 0.428702, 0, 0, 0.513574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488794,-99) , 
9, 2.06746, 0, 0, 0.490563,-99) , 
4, 0.999525, 1, 0, 0.492288,-99) , 
2, -0.0708144, 1, 0, 0.495564,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.00953095);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498349,-99) , 
9, 1.28311, 1, 0, 0.520747,-99) , 
NN(
0, 
0, 
-1, 1.62562, 1, -1, 0.498252,-99) , 
7, 1.8572, 0, 0, 0.500295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465879,-99) , 
0, 0.505709, 1, 0, 0.49896,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0183714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487148,-99) , 
0, 0.499041, 1, 0, 0.495676,-99) , 
7, 2.42852, 0, 0, 0.496921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444947,-99) , 
2, 0.21457, 1, 0, 0.495188,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0308447);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499307,-99) , 
9, 0.219781, 1, 0, 0.515981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484818,-99) , 
9, -1.98053, 0, 0, 0.512443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468487,-99) , 
6, -0.998071, 0, 0, 0.499519,-99) , 
NN(
0, 
0, 
-1, -1.50616, 1, -1, 0.483459,-99) , 
6, -951.286, 0, 0, 0.492373,-99) , 
0, 0.497138, 1, 0, 0.500433,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0368715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.370573, 0, 1, 0.548021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472907,-99) , 
9, -0.761553, 1, 0, 0.50675,-99) , 
8, -2.79866, 0, 0, 0.512037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468704,-99) , 
7, 0.879073, 0, 0, 0.493624,-99) , 
7, -0.426197, 1, 0, 0.497843,-99) , 
9, -0.332114, 1, 0, 0.505689,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0205737);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489229,-99) , 
9, 1.16845, 1, 0, 0.526102,-99) , 
NN(
0, 
0, 
-1, -1.03914, 0, -1, 0.493663,-99) , 
7, 1.85695, 0, 0, 0.496599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444323,-99) , 
4, 0.999048, 0, 0, 0.495109,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0311234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47667,-99) , 
9, 0.625129, 1, 0, 0.508661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468203,-99) , 
8, -2.38553, 0, 0, 0.490837,-99) , 
7, 0.999916, 1, 0, 0.503547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477768,-99) , 
6, 0.426857, 0, 0, 0.494118,-99) , 
NN(
0, 
0, 
-1, 0.499989, 1, -1, 0.460684,-99) , 
6, -951.286, 0, 0, 0.478932,-99) , 
2, -0.0679183, 0, 0, 0.499626,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0312577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.939875, 1, 1, 0.514009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481551,-99) , 
2, -0.0140037, 1, 0, 0.495724,-99) , 
2, 0.0207044, 0, 0, 0.501287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456835,-99) , 
2, -0.222325, 0, 0, 0.499829,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.029081);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477479,-99) , 
9, -2.12106, 0, 0, 0.505859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446083,-99) , 
8, -0.0913531, 0, 0, 0.4771,-99) , 
9, 1.42525, 1, 0, 0.503426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515344,-99) , 
NN(
0, 
0, 
-1, -2.23443, 1, -1, 0.47231,-99) , 
8, -1.19406, 0, 0, 0.479293,-99) , 
0, 0.5019, 1, 0, 0.498686,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0292557);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498769,-99) , 
0, 0.492329, 0, 0, 0.520655,-99) , 
NN(
0, 
0, 
-1, -1.28568, 0, -1, 0.49502,-99) , 
0, 0.495232, 1, 0, 0.501472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48818,-99) , 
6, 1.8403, 0, 0, 0.492007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408675,-99) , 
6, -1.85661, 0, 0, 0.486856,-99) , 
6, -951.286, 1, 0, 0.493312,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0491509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484952,-99) , 
4, 0.999998, 0, 0, 0.505195,-99) , 
NN(
0, 
0, 
-1, 4.00982, 1, -1, 0.476416,-99) , 
4, 0.999955, 0, 0, 0.499988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458948,-99) , 
4, 0.999524, 0, 0, 0.498038,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0292488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496162,-99) , 
9, -2.19473, 0, 0, 0.532286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462769,-99) , 
3, 2.44159, 1, 0, 0.488718,-99) , 
9, -1.45336, 1, 0, 0.513909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442571,-99) , 
9, -1.06364, 0, 0, 0.495381,-99) , 
8, -3.85063, 1, 0, 0.49768,-99) , 
7, -0.142883, 1, 0, 0.503119,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.051101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.538193, 0, 1, 0.518166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44795,-99) , 
9, -0.780899, 1, 0, 0.503036,-99) , 
8, -2.84721, 0, 0, 0.507908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481042,-99) , 
9, 0.588216, 1, 0, 0.505406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44075,-99) , 
6, 0.429287, 0, 0, 0.473413,-99) , 
6, -951.286, 1, 0, 0.487145,-99) , 
7, 0.714924, 1, 0, 0.500322,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0309084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.67759, 0, 1, 0.513964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481985,-99) , 
7, 0.45838, 1, 0, 0.491782,-99) , 
9, 0.809775, 1, 0, 0.510314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528503,-99) , 
NN(
0, 
0, 
-1, -0.0833001, 0, -1, 0.484267,-99) , 
0, 0.489657, 1, 0, 0.488284,-99) , 
0, 0.496186, 0, 0, 0.503195,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0241445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476553,-99) , 
9, 0.303828, 1, 0, 0.497268,-99) , 
4, 0.999524, 1, 0, 0.499612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530686,-99) , 
NN(
0, 
0, 
-1, 0.499994, 0, -1, 0.473259,-99) , 
2, -0.0740699, 1, 0, 0.481707,-99) , 
7, 1.00111, 1, 0, 0.494723,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0312464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48545,-99) , 
3, 1.18223, 1, 0, 0.492797,-99) , 
NN(
0, 
0, 
-1, 0.49333, 0, -1, 0.474778,-99) , 
3, 4.55086, 1, 0, 0.48948,-99) , 
8, -0.0247478, 0, 0, 0.49162,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0221562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.6246, 1, 1, 0.505848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408123,-99) , 
7, -0.176117, 1, 0, 0.48702,-99) , 
9, -1.33672, 0, 0, 0.50124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520392,-99) , 
NN(
0, 
0, 
-1, 0.139364, 0, -1, 0.468152,-99) , 
1, 0.00294777, 0, 0, 0.478548,-99) , 
2, 0.0716687, 1, 0, 0.497823,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0280288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498074,-99) , 
0, 0.498073, 1, 0, 0.538323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487823,-99) , 
3, 4.04989, 0, 0, 0.49279,-99) , 
4, 0.999524, 1, 0, 0.494591,-99) , 
7, 2.14256, 0, 0, 0.497031,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0262289);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547478,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489751,-99) , 
2, -0.0555183, 1, 0, 0.494006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442899,-99) , 
3, 8.93425, 1, 0, 0.49255,-99) , 
8, 0.565252, 0, 0, 0.494049,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.033647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5038, 0, 1, 0.5081,-99) , 
NN(
0, 
0, 
-1, -1.85678, 0, -1, 0.485124,-99) , 
6, -951.286, 1, 0, 0.495114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482928,-99) , 
8, -3.82659, 0, 0, 0.492932,-99) , 
NN(
0, 
0, 
-1, -0.0292646, 0, -1, 0.450689,-99) , 
9, -1.57938, 1, 0, 0.476964,-99) , 
7, -0.427995, 0, 0, 0.490609,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0350931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463834,-99) , 
2, -0.193019, 0, 0, 0.505955,-99) , 
2, 0.213335, 0, 0, 0.509067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48745,-99) , 
9, 0.492553, 1, 0, 0.497373,-99) , 
NN(
0, 
0, 
-1, -2.27563, 1, -1, 0.448052,-99) , 
8, -1.94436, 0, 0, 0.484728,-99) , 
9, 0.0825298, 1, 0, 0.501066,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0369292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.198464, 1, 1, 0.564755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465294,-99) , 
0, 0.499038, 0, 0, 0.486999,-99) , 
7, 0.431727, 0, 0, 0.522741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489955,-99) , 
2, -0.00665645, 1, 0, 0.498401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464289,-99) , 
7, 1.28583, 0, 0, 0.472835,-99) , 
2, -0.0779001, 0, 0, 0.493972,-99) , 
2, 0.0716687, 0, 0, 0.498189,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0477061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.84401, 0, 1, 0.517557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385563,-99) , 
6, -1.85527, 0, 0, 0.509383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46698,-99) , 
2, 0.0637149, 1, 0, 0.509527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468536,-99) , 
8, -3.85676, 1, 0, 0.484781,-99) , 
9, -0.272337, 0, 0, 0.496462,-99) , 
6, -951.286, 0, 0, 0.503575,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0399654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48997,-99) , 
6, -951.286, 0, 0, 0.523658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489316,-99) , 
0, 0.505705, 0, 0, 0.492557,-99) , 
3, 0.754237, 1, 0, 0.49779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515604,-99) , 
NN(
0, 
0, 
-1, 0.0747501, 1, -1, 0.459573,-99) , 
8, -3.88282, 1, 0, 0.470085,-99) , 
3, 4.54421, 1, 0, 0.492667,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0190443);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533385,-99) , 
NN(
0, 
0, 
-1, -0.945429, 0, -1, 0.467666,-99) , 
2, 0.0807809, 0, 0, 0.47993,-99) , 
0, 0.493329, 0, 0, 0.501995,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.043344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.02155, 0, 1, 0.524012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483848,-99) , 
2, 0.01755, 0, 0, 0.494154,-99) , 
0, 0.5019, 0, 0, 0.499842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469201,-99) , 
0, 0.499052, 0, 0, 0.490067,-99) , 
NN(
0, 
0, 
-1, 0.498104, 1, -1, 0.456125,-99) , 
6, -951.286, 1, 0, 0.47049,-99) , 
3, 4.54421, 1, 0, 0.494508,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0107139);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.42831, 0, 1, 0.503852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442783,-99) , 
4, 0.999048, 0, 0, 0.502131,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0297958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484342,-99) , 
7, -0.753637, 1, 0, 0.510574,-99) , 
9, -1.43615, 0, 0, 0.520027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463393,-99) , 
7, -0.999968, 0, 0, 0.500302,-99) , 
NN(
0, 
0, 
-1, -1.5712, 0, -1, 0.485297,-99) , 
6, -951.286, 1, 0, 0.492207,-99) , 
8, -3.75647, 1, 0, 0.497979,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0198184);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482824,-99) , 
9, -1.33047, 0, 0, 0.498156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445686,-99) , 
4, 0.999751, 0, 0, 0.496605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451041,-99) , 
4, 0.999524, 0, 0, 0.494353,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0328367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498214,-99) , 
0, 0.496095, 0, 0, 0.505276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447485,-99) , 
9, 1.59916, 1, 0, 0.501156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485052,-99) , 
1, -0.00621516, 1, 0, 0.488804,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.448802,-99) , 
2, -0.0709862, 0, 0, 0.482639,-99) , 
0, 0.49809, 1, 0, 0.491622,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0262087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498053,-99) , 
9, -2.53705, 1, 0, 0.538417,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5, 0, 1, 0.515755,-99) , 
NN(
0, 
0, 
-1, -3.0301, 1, -1, 0.49001,-99) , 
7, 1.5719, 0, 0, 0.493814,-99) , 
7, -1.28421, 1, 0, 0.497212,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0191078);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494895,-99) , 
2, 0.0243029, 0, 0, 0.498879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452208,-99) , 
2, -0.13113, 0, 0, 0.496738,-99) , 
2, -0.21276, 1, 0, 0.498797,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0409678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.63257, 1, 1, 0.50963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400277,-99) , 
7, -0.13255, 1, 0, 0.477459,-99) , 
9, -1.36189, 0, 0, 0.506548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456834,-99) , 
8, -4.94611, 0, 0, 0.514798,-99) , 
NN(
0, 
0, 
-1, 0.0497209, 1, -1, 0.460012,-99) , 
9, -1.88979, 1, 0, 0.485285,-99) , 
7, -0.427473, 0, 0, 0.501054,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.029551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489196,-99) , 
9, -1.93981, 0, 0, 0.510158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488684,-99) , 
0, 0.496094, 1, 0, 0.494978,-99) , 
7, -0.141774, 1, 0, 0.500017,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, -1, 0.46403,-99) , 
0, 0.503804, 1, 0, 0.496487,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0289109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495855,-99) , 
7, -1.59468, 1, 0, 0.512318,-99) , 
9, -1.93825, 0, 0, 0.529228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495865,-99) , 
9, -0.775125, 0, 0, 0.504728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465698,-99) , 
1, -0.00108431, 1, 0, 0.486116,-99) , 
7, 1.57166, 1, 0, 0.501719,-99) , 
8, -4.08019, 1, 0, 0.505558,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.00931113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499646,-99) , 
7, 2.14282, 0, 0, 0.501402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444936,-99) , 
3, 7.28801, 1, 0, 0.499778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457697,-99) , 
3, 8.97269, 1, 0, 0.498625,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0190997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.55516, 0, 1, 0.506566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469517,-99) , 
4, 0.999524, 0, 0, 0.504565,-99) , 
NN(
0, 
0, 
-1, 0.190575, 0, -1, 0.468769,-99) , 
9, 1.59571, 1, 0, 0.501974,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0409506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498094, 0, 1, 0.553141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472228,-99) , 
9, -1.61582, 1, 0, 0.498657,-99) , 
1, 0.00308802, 0, 0, 0.510094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487491,-99) , 
9, -0.413958, 1, 0, 0.498544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350552,-99) , 
9, -1.62695, 0, 0, 0.441853,-99) , 
9, -1.37395, 0, 0, 0.493478,-99) , 
7, -0.426566, 1, 0, 0.497591,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0224379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49754,-99) , 
8, -3.47796, 1, 0, 0.502903,-99) , 
7, 2.14363, 0, 0, 0.505728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494764,-99) , 
7, -1.28258, 1, 0, 0.497088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39493,-99) , 
6, -1.85627, 0, 0, 0.49077,-99) , 
6, -951.286, 1, 0, 0.497431,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0175218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494819,-99) , 
0, 0.504756, 0, 0, 0.496666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459404,-99) , 
7, 2.14313, 1, 0, 0.494854,-99) , 
8, 0.510893, 0, 0, 0.496039,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0293524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.74467, 0, 1, 0.515625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474912,-99) , 
0, 0.500266, 0, 0, 0.497937,-99) , 
0, 0.499042, 1, 0, 0.508255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445576,-99) , 
9, 2.44326, 1, 0, 0.506404,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0203602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4943,-99) , 
8, -4.67, 0, 0, 0.530027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486901,-99) , 
7, 0.552555, 0, 0, 0.515685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495653,-99) , 
8, -4.28528, 1, 0, 0.497597,-99) , 
0, 0.492376, 1, 0, 0.499441,-99) , 
7, -1.28493, 1, 0, 0.50176,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0354432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.79627, 1, 1, 0.528858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490845,-99) , 
3, 1.78306, 0, 0, 0.502126,-99) , 
2, -0.0182767, 1, 0, 0.510052,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49083,-99) , 
0, 0.493735, 0, 0, 0.515955,-99) , 
NN(
0, 
0, 
-1, 0.0677132, 1, -1, 0.485113,-99) , 
0, 0.496185, 1, 0, 0.494341,-99) , 
3, 4.48201, 1, 0, 0.507119,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0273131);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49279,-99) , 
9, -0.932046, 1, 0, 0.513777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473915,-99) , 
8, -3.1571, 0, 0, 0.497931,-99) , 
7, 0.102453, 1, 0, 0.504703,-99) , 
7, 2.42849, 0, 0, 0.506142,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0259162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999947, 1, 1, 0.532886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472234,-99) , 
0, 0.498088, 0, 0, 0.505768,-99) , 
6, -951.286, 0, 0, 0.517609,-99) , 
NN(
0, 
0, 
-1, 0.417016, 1, -1, 0.49269,-99) , 
8, -1.79874, 0, 0, 0.498417,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0348134);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00624669, 0, 1, 0.521581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440266,-99) , 
9, -1.4836, 1, 0, 0.482568,-99) , 
2, 0.0776435, 1, 0, 0.516009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474825,-99) , 
9, -0.712342, 0, 0, 0.499413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436363,-99) , 
4, 0.999524, 0, 0, 0.496135,-99) , 
7, 0.143385, 1, 0, 0.504709,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0298102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45996,-99) , 
2, 0.0657248, 1, 0, 0.513853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479716,-99) , 
9, -1.90418, 0, 0, 0.499435,-99) , 
0, 0.497772, 0, 0, 0.504835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478662,-99) , 
6, -951.288, 1, 0, 0.493812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461262,-99) , 
0, 0.501309, 1, 0, 0.469986,-99) , 
0, 0.502851, 0, 0, 0.482814,-99) , 
0, 0.500946, 1, 0, 0.498982,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.010886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534634,-99) , 
NN(
0, 
0, 
-1, -1.57135, 0, -1, 0.495715,-99) , 
8, -4.85455, 1, 0, 0.4972,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0271406);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537201,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491573,-99) , 
9, -1.85761, 1, 0, 0.509795,-99) , 
NN(
0, 
0, 
-1, -1.38884, 0, -1, 0.489456,-99) , 
7, -0.428578, 1, 0, 0.49472,-99) , 
8, 0.194701, 0, 0, 0.49643,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0263591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.883257, 0, 1, 0.527937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488936,-99) , 
0, 0.503077, 0, 0, 0.498649,-99) , 
0, 0.49809, 1, 0, 0.512613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550919,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.491192,-99) , 
4, 0.999048, 1, 0, 0.493431,-99) , 
1, 0.00236311, 0, 0, 0.498443,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0281761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470844,-99) , 
3, 3.45242, 1, 0, 0.529911,-99) , 
NN(
0, 
0, 
-1, -0.183216, 1, 1, 0.50391,-99) , 
2, 0.0323376, 0, 0, 0.509438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482922,-99) , 
1, -0.000631, 1, 0, 0.501239,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.472456,-99) , 
9, -0.179806, 1, 0, 0.490913,-99) , 
3, 4.48479, 1, 0, 0.50597,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0226442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487992,-99) , 
9, 0.156529, 1, 0, 0.500655,-99) , 
2, -0.205088, 1, 0, 0.502691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444286,-99) , 
3, 8.64615, 1, 0, 0.500852,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0316343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503172, 1, 1, 0.540574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49604,-99) , 
2, 0.0744519, 0, 0, 0.505954,-99) , 
0, 0.500949, 0, 0, 0.516491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498501,-99) , 
8, -1.99443, 0, 0, 0.504215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468213,-99) , 
3, 0.40335, 1, 0, 0.486852,-99) , 
3, 0.964827, 0, 0, 0.499658,-99) , 
3, 4.54421, 0, 0, 0.502756,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0169461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49976,-99) , 
6, -951.286, 1, 0, 0.505534,-99) , 
2, 0.133113, 0, 0, 0.507218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462878,-99) , 
2, 0.214776, 1, 0, 0.505724,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0173768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480099,-99) , 
7, 0.719174, 1, 0, 0.523845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496478,-99) , 
8, -4.15486, 1, 0, 0.498632,-99) , 
0, 0.48952, 1, 0, 0.499662,-99) , 
8, -0.586623, 0, 0, 0.501548,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.020346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447058,-99) , 
7, -1.57132, 0, 0, 0.505358,-99) , 
8, -4.81026, 1, 0, 0.506646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470031,-99) , 
0, 0.489519, 0, 0, 0.505584,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0148594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498256,-99) , 
7, -1.13313, 1, 0, 0.500248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435646,-99) , 
8, -4.70101, 1, 0, 0.470144,-99) , 
8, -4.39677, 0, 0, 0.498119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461758,-99) , 
7, -1.56863, 0, 0, 0.496404,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0451277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488408,-99) , 
8, -4.05567, 0, 0, 0.519846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386387,-99) , 
6, -1.85779, 0, 0, 0.511567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486009,-99) , 
0, 0.500946, 0, 0, 0.492686,-99) , 
7, 2.14278, 0, 0, 0.495075,-99) , 
6, -951.286, 0, 0, 0.504138,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0155385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502124, 0, 1, 0.502916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45214,-99) , 
7, -0.150579, 0, 0, 0.485471,-99) , 
0, 0.50285, 1, 0, 0.500404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476353,-99) , 
8, 0.486927, 1, 0, 0.489931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455357,-99) , 
8, -0.276914, 0, 0, 0.476624,-99) , 
9, 1.41623, 1, 0, 0.498282,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0350322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498217,-99) , 
9, -1.22533, 0, 0, 0.514182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389968,-99) , 
6, -1.85627, 0, 0, 0.506524,-99) , 
NN(
0, 
0, 
-1, 1.85748, 1, -1, 0.486923,-99) , 
6, -951.286, 0, 0, 0.497748,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0296485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47007, 1, 1, 0.533652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482538,-99) , 
7, -0.711696, 0, 0, 0.498318,-99) , 
0, 0.499903, 1, 0, 0.509494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477943,-99) , 
2, 0.0696895, 1, 0, 0.50542,-99) , 
NN(
0, 
0, 
-1, 0.145875, 0, -1, 0.482143,-99) , 
0, 0.495096, 1, 0, 0.493573,-99) , 
0, 0.498089, 0, 0, 0.501691,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0369712);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471125,-99) , 
9, -2.75168, 0, 0, 0.51386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48678,-99) , 
2, 0.0747501, 0, 0, 0.494422,-99) , 
7, 0.715054, 1, 0, 0.506704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42034,-99) , 
1, -0.0125855, 0, 0, 0.504397,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0271084);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484778,-99) , 
9, -1.29263, 0, 0, 0.505733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389876,-99) , 
7, -0.644846, 1, 0, 0.471002,-99) , 
9, -1.79158, 0, 0, 0.502131,-99) , 
8, -4.78429, 1, 0, 0.503799,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0178672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14284, 0, 1, 0.505444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417961,-99) , 
3, 4.04015, 1, 0, 0.483694,-99) , 
4, 0.999955, 0, 0, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453749,-99) , 
4, 0.999048, 0, 0, 0.499703,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0432489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485409,-99) , 
4, 0.999998, 0, 0, 0.499864,-99) , 
NN(
0, 
0, 
-1, 1.58265, 1, -1, 0.469347,-99) , 
4, 0.999955, 0, 0, 0.493962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43621,-99) , 
4, 0.999049, 0, 0, 0.492361,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0317858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467519,-99) , 
2, 0.0673693, 1, 0, 0.512129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470681,-99) , 
0, 0.502852, 1, 0, 0.505442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490214,-99) , 
8, -3.82658, 1, 0, 0.492817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460696,-99) , 
9, -1.47381, 0, 0, 0.490782,-99) , 
7, -0.427995, 1, 0, 0.494433,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.037141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.508222, 0, 1, 0.52306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472277,-99) , 
8, -2.08055, 1, 0, 0.498402,-99) , 
0, 0.495323, 0, 0, 0.507527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484981,-99) , 
0, 0.506116, 0, 0, 0.487075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445186,-99) , 
7, -1.28562, 0, 0, 0.483684,-99) , 
0, 0.497137, 1, 0, 0.493181,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0156767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.170423, 0, 1, 0.519264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456995,-99) , 
4, 0.999524, 0, 0, 0.499693,-99) , 
8, -3.70078, 1, 0, 0.503674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458329,-99) , 
9, -2.79366, 0, 0, 0.50233,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0387552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477776,-99) , 
7, -0.13955, 1, 0, 0.507579,-99) , 
9, -0.811576, 0, 0, 0.514047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470291,-99) , 
4, 0.999977, 0, 0, 0.498469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427122,-99) , 
4, 0.999524, 0, 0, 0.495603,-99) , 
8, -3.26725, 1, 0, 0.502262,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0206625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.54421, 0, 1, 0.507749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465625,-99) , 
9, 2.48523, 1, 0, 0.506544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445344,-99) , 
0, 0.505709, 1, 0, 0.50413,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0232048);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497467,-99) , 
8, -3.96666, 1, 0, 0.505228,-99) , 
NN(
0, 
0, 
-1, 0.00472225, 0, -1, 0.489191,-99) , 
2, -0.0302427, 1, 0, 0.49346,-99) , 
2, 0.214776, 0, 0, 0.495246,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0243726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481175,-99) , 
8, -1.64961, 1, 0, 0.497378,-99) , 
2, -0.21276, 1, 0, 0.499517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465599,-99) , 
0, 0.498074, 0, 0, 0.494542,-99) , 
NN(
0, 
0, 
-1, -3.46282, 0, -1, 0.439398,-99) , 
9, -2.27225, 1, 0, 0.467112,-99) , 
7, -0.998672, 0, 0, 0.495599,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0179284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48232,-99) , 
7, -0.714262, 0, 0, 0.501302,-99) , 
2, -0.208565, 1, 0, 0.502657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528374,-99) , 
NN(
0, 
0, 
-1, -0.562803, 1, -1, 0.471371,-99) , 
7, -1.66393, 1, 0, 0.481267,-99) , 
9, -1.73103, 0, 0, 0.499319,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0250622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.72205, 1, 1, 0.529564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467315,-99) , 
0, 0.50512, 1, 0, 0.49759,-99) , 
8, -1.14533, 0, 0, 0.501686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479655,-99) , 
0, 0.496684, 0, 0, 0.482306,-99) , 
7, -1.28311, 1, 0, 0.486624,-99) , 
0, 0.497138, 0, 0, 0.495629,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0363214);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485587,-99) , 
9, 2.13648, 1, 0, 0.513719,-99) , 
NN(
0, 
0, 
-1, 0.0312093, 0, -1, 0.483508,-99) , 
8, -0.756868, 0, 0, 0.486278,-99) , 
2, -0.21361, 1, 0, 0.488213,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0308384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51982, 1, 1, 0.530153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487748,-99) , 
3, 3.76106, 1, 0, 0.517845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470095,-99) , 
7, -0.713692, 0, 0, 0.504902,-99) , 
NN(
0, 
0, 
-1, 1.89276, 1, -1, 0.484944,-99) , 
0, 0.497137, 1, 0, 0.493003,-99) , 
8, -3.96059, 1, 0, 0.497139,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0196085);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491924,-99) , 
7, 0.619238, 0, 0, 0.497649,-99) , 
4, 0.999048, 1, 0, 0.498924,-99) , 
7, 2.42852, 0, 0, 0.50038,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0138318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.877324, 1, 1, 0.503808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450924,-99) , 
7, -1.28565, 0, 0, 0.501511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463368,-99) , 
9, -2.6728, 0, 0, 0.500101,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0297057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489114,-99) , 
9, -0.326091, 1, 0, 0.532575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49783,-99) , 
2, 0.0538745, 0, 0, 0.502398,-99) , 
0, 0.50462, 0, 0, 0.505859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487342,-99) , 
0, 0.493768, 0, 0, 0.492908,-99) , 
NN(
0, 
0, 
-1, -1.43669, 0, -1, 0.471236,-99) , 
0, 0.494416, 1, 0, 0.481805,-99) , 
0, 0.497137, 0, 0, 0.496097,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.034322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492683,-99) , 
7, 0.878294, 1, 0, 0.507686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456337,-99) , 
8, -3.56895, 1, 0, 0.488467,-99) , 
7, -0.712992, 0, 0, 0.504311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492389,-99) , 
0, 0.491968, 1, 0, 0.501752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455661,-99) , 
9, 0.70055, 0, 0, 0.470258,-99) , 
7, -0.134142, 1, 0, 0.481083,-99) , 
0, 0.495233, 0, 0, 0.498588,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0359976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485837,-99) , 
7, -1.62026, 1, 0, 0.493923,-99) , 
9, -1.19715, 0, 0, 0.508412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529174,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.487548,-99) , 
9, -1.18472, 1, 0, 0.490409,-99) , 
8, -3.5168, 1, 0, 0.495435,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0219179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.452802, 1, 1, 0.509187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470059,-99) , 
3, 6.86882, 1, 0, 0.507741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455287,-99) , 
3, 8.97425, 1, 0, 0.506226,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0283049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499962,-99) , 
7, 0.716996, 0, 0, 0.506836,-99) , 
8, -4.89687, 1, 0, 0.508318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481085,-99) , 
9, -0.365877, 1, 0, 0.497303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418908,-99) , 
9, -1.57287, 1, 0, 0.469336,-99) , 
7, -0.135176, 0, 0, 0.487326,-99) , 
0, 0.495233, 0, 0, 0.503151,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0270285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499054, 0, 1, 0.544658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470039,-99) , 
9, 1.58584, 1, 0, 0.487384,-99) , 
7, 0.715664, 1, 0, 0.511977,-99) , 
NN(
NN(
0, 
0, 
-1, -0.997664, 0, -1, 0.493516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420544,-99) , 
7, -1.57544, 1, 0, 0.459935,-99) , 
9, -2.28589, 0, 0, 0.490801,-99) , 
8, -1.26185, 0, 0, 0.493831,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0125661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499861,-99) , 
8, -3.43988, 1, 0, 0.502469,-99) , 
NN(
0, 
0, 
-1, 0.0444766, 1, -1, 0.488916,-99) , 
9, -1.0742, 0, 0, 0.498474,-99) , 
8, -4.85455, 1, 0, 0.499819,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0356429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.20238, 1, 1, 0.513013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47823,-99) , 
2, -0.0102424, 1, 0, 0.496221,-99) , 
2, 0.00400535, 0, 0, 0.504816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445853,-99) , 
9, 0.448211, 1, 0, 0.503253,-99) , 
NN(
0, 
0, 
-1, -951.288, 0, -1, 0.464779,-99) , 
7, 0.146116, 0, 0, 0.486277,-99) , 
2, -0.0708144, 0, 0, 0.501921,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0213758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.4302, 0, 1, 0.512112,-99) , 
NN(
0, 
0, 
-1, -2.34453, 0, -1, 0.494891,-99) , 
7, 0.606947, 0, 0, 0.502097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437732,-99) , 
7, -1.5686, 0, 0, 0.498955,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0360573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495225, 1, 1, 0.514178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472531,-99) , 
1, -0.00621516, 0, 0, 0.510431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484198,-99) , 
9, 0.307893, 1, 0, 0.498271,-99) , 
NN(
0, 
0, 
-1, -0.999251, 0, -1, 0.47484,-99) , 
6, -951.286, 1, 0, 0.484801,-99) , 
7, 0.143385, 1, 0, 0.495931,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0272845);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45834,-99) , 
7, -1.47609, 0, 0, 0.524584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480587,-99) , 
9, -1.48674, 0, 0, 0.503756,-99) , 
7, -0.71421, 1, 0, 0.50663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461074,-99) , 
9, -2.55987, 0, 0, 0.504597,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0191848);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493537,-99) , 
7, 0.387856, 1, 0, 0.49994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459319,-99) , 
7, -1.57132, 0, 0, 0.498004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456409,-99) , 
0, 0.505706, 1, 0, 0.496343,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0339891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480423,-99) , 
0, 0.493326, 0, 0, 0.50767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454952,-99) , 
0, 0.504753, 1, 0, 0.503861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491567,-99) , 
7, 1.0013, 0, 0, 0.498843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379554,-99) , 
6, -1.85578, 0, 0, 0.49144,-99) , 
6, -951.286, 1, 0, 0.496909,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0203961);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482876,-99) , 
4, 0.999955, 0, 0, 0.500368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445543,-99) , 
4, 0.999048, 0, 0, 0.498868,-99) , 
7, 2.42871, 0, 0, 0.501068,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.023823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483458,-99) , 
8, -0.664374, 1, 0, 0.516763,-99) , 
8, 0.0269904, 0, 0, 0.53281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45809,-99) , 
9, -2.37684, 0, 0, 0.504023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465785,-99) , 
7, -1.57135, 0, 0, 0.5021,-99) , 
9, 1.34586, 0, 0, 0.505226,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0242775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485895,-99) , 
8, -4.69033, 0, 0, 0.535813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493933,-99) , 
2, 0.0736227, 0, 0, 0.497261,-99) , 
7, -1.28566, 1, 0, 0.50014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433573,-99) , 
0, 0.48952, 0, 0, 0.498329,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0128083);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54548,-99) , 
NN(
0, 
0, 
-1, 0.209674, 1, -1, 0.49689,-99) , 
0, 0.505708, 0, 0, 0.498836,-99) , 
7, 2.42874, 0, 0, 0.500614,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.017748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499103,-99) , 
7, 1.34308, 1, 0, 0.533003,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497591, 0, 1, 0.506915,-99) , 
NN(
0, 
0, 
-1, 0.498544, 0, -1, 0.493321,-99) , 
0, 0.49809, 1, 0, 0.499865,-99) , 
9, 1.58307, 0, 0, 0.50242,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0141191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499308,-99) , 
2, -0.066284, 1, 0, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446776,-99) , 
7, -1.85619, 0, 0, 0.501515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436435,-99) , 
4, 0.999048, 0, 0, 0.49971,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0233626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.4871, 1, 1, 0.516372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487279,-99) , 
6, -951.286, 0, 0, 0.497652,-99) , 
0, 0.494507, 1, 0, 0.501587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458912,-99) , 
0, 0.505708, 1, 0, 0.499894,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0169669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.060219, 1, 1, 0.523814,-99) , 
NN(
0, 
0, 
-1, -1.56861, 0, -1, 0.497064,-99) , 
7, 1.28673, 0, 0, 0.502313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462247,-99) , 
4, 0.999524, 0, 0, 0.500421,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0122062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539758,-99) , 
NN(
NN(
0, 
0, 
-1, -0.40965, 0, 1, 0.503322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457907,-99) , 
9, 2.40022, 1, 0, 0.501845,-99) , 
8, -4.77544, 1, 0, 0.503483,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0305173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00711004, 0, 1, 0.511306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4477,-99) , 
5, 0.0114865, 1, 0, 0.508204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480365,-99) , 
6, -951.286, 1, 0, 0.49453,-99) , 
NN(
0, 
0, 
-1, -1.81523, 1, -1, 0.459023,-99) , 
2, 0.0679668, 1, 0, 0.489416,-99) , 
9, -0.223225, 1, 0, 0.500436,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.02715);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472035,-99) , 
9, 2.00348, 1, 0, 0.506715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442946,-99) , 
0, 0.501083, 0, 0, 0.47894,-99) , 
2, 0.0726892, 1, 0, 0.503043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491339,-99) , 
0, 0.489479, 0, 0, 0.505682,-99) , 
NN(
0, 
0, 
-1, 0.492396, 0, -1, 0.485306,-99) , 
0, 0.490879, 1, 0, 0.48888,-99) , 
0, 0.496185, 0, 0, 0.498495,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0160178);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498062,-99) , 
7, -0.876715, 1, 0, 0.500971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46559,-99) , 
7, -1.28489, 0, 0, 0.499315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443039,-99) , 
9, -2.6728, 0, 0, 0.497071,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0311822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.29901, 0, 1, 0.514544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45261,-99) , 
9, -2.4115, 1, 0, 0.483975,-99) , 
7, -0.999958, 0, 0, 0.511005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494843,-99) , 
0, 0.497092, 0, 0, 0.500506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464954,-99) , 
8, -2.03585, 0, 0, 0.484294,-99) , 
7, 0.716789, 1, 0, 0.494491,-99) , 
0, 0.49809, 0, 0, 0.502897,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00967218);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.504836,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0277319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496829,-99) , 
0, 0.49351, 0, 0, 0.510041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479403,-99) , 
7, 0.362007, 0, 0, 0.493069,-99) , 
0, 0.499995, 1, 0, 0.504171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441593,-99) , 
7, 2.42837, 1, 0, 0.502595,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0296462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487742,-99) , 
8, -4.66726, 0, 0, 0.529029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493213,-99) , 
8, -4.1826, 1, 0, 0.495157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374302,-99) , 
7, -0.806158, 1, 0, 0.466371,-99) , 
9, -1.92904, 0, 0, 0.49307,-99) , 
7, -1.28311, 1, 0, 0.495834,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0138722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.4293, 0, 1, 0.53093,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490473, 0, -1, 0.498185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440438,-99) , 
6, -951.286, 1, 0, 0.463348,-99) , 
9, -2.19586, 0, 0, 0.495204,-99) , 
1, -0.00621516, 1, 0, 0.497937,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0364616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485247,-99) , 
9, -1.63614, 0, 0, 0.513749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428969,-99) , 
6, -1.85556, 0, 0, 0.508606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496003,-99) , 
7, -0.422062, 1, 0, 0.503557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483717,-99) , 
7, 1.28554, 0, 0, 0.488759,-99) , 
0, 0.497136, 1, 0, 0.494582,-99) , 
6, -951.286, 0, 0, 0.50227,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0193446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492511, 0, 1, 0.51708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494111,-99) , 
0, 0.494688, 1, 0, 0.495701,-99) , 
0, 0.493327, 1, 0, 0.498742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448685,-99) , 
9, 2.24207, 1, 0, 0.496823,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0271155);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482396,-99) , 
7, -0.997589, 0, 0, 0.510073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468384,-99) , 
9, -2.20354, 0, 0, 0.508774,-99) , 
NN(
0, 
0, 
-1, 0.498072, 0, -1, 0.47416,-99) , 
8, -4.74947, 0, 0, 0.50703,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0179654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57086, 1, 1, 0.549333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470055,-99) , 
7, -1.37922, 0, 0, 0.502711,-99) , 
9, -2.3433, 1, 0, 0.523839,-99) , 
NN(
0, 
0, 
-1, -0.808263, 0, -1, 0.494879,-99) , 
7, -0.998672, 1, 0, 0.498291,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0443086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.468313, 1, 1, 0.527506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469497,-99) , 
9, -1.14378, 1, 0, 0.49876,-99) , 
8, -3.08361, 0, 0, 0.509991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472223,-99) , 
9, 1.53321, 1, 0, 0.501545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428779,-99) , 
8, -2.71508, 0, 0, 0.467933,-99) , 
9, -0.149516, 0, 0, 0.49243,-99) , 
7, 0.714118, 1, 0, 0.503592,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0195734);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.800908, 1, 1, 0.536124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53784,-99) , 
NN(
0, 
0, 
-1, 1.00248, 1, -1, 0.493372,-99) , 
8, 0.288335, 0, 0, 0.494994,-99) , 
0, 0.491423, 1, 0, 0.497923,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0317128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.32737, 1, 1, 0.506762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461104,-99) , 
8, -0.138715, 1, 0, 0.503493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481097,-99) , 
8, -3.49248, 0, 0, 0.492329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426329,-99) , 
7, -0.0289848, 1, 0, 0.482365,-99) , 
9, -1.15874, 0, 0, 0.497117,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0358414);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546861,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.516491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482756,-99) , 
2, -0.0295718, 1, 0, 0.490325,-99) , 
3, 4.49093, 0, 0, 0.495261,-99) , 
8, 0.196083, 0, 0, 0.497397,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0166601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49225,-99) , 
7, -0.917054, 1, 0, 0.50645,-99) , 
9, 0.0693803, 0, 0, 0.513278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53141,-99) , 
NN(
0, 
0, 
-1, -1.36189, 0, -1, 0.496558,-99) , 
8, -4.10033, 1, 0, 0.497953,-99) , 
7, -0.427383, 1, 0, 0.501786,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0142171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484821,-99) , 
8, -1.9404, 1, 0, 0.498219,-99) , 
9, 2.01494, 0, 0, 0.499886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466688,-99) , 
1, 0.0103564, 1, 0, 0.498627,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0403683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454671,-99) , 
7, -0.728246, 0, 0, 0.52298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493467,-99) , 
9, -0.753436, 1, 0, 0.498397,-99) , 
8, -3.22744, 1, 0, 0.506145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431559,-99) , 
7, -1.29332, 1, 0, 0.473013,-99) , 
9, -2.19586, 0, 0, 0.503454,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0201581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.211624, 1, 1, 0.508167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462084,-99) , 
4, 0.999048, 0, 0, 0.506851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467552,-99) , 
9, -2.55987, 0, 0, 0.505071,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0439253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498085, 1, 1, 0.546806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460098,-99) , 
8, -2.19273, 0, 0, 0.498432,-99) , 
9, -0.32851, 1, 0, 0.504297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492778,-99) , 
0, 0.503536, 1, 0, 0.51196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476713,-99) , 
7, -1.39401, 1, 0, 0.480333,-99) , 
0, 0.501902, 0, 0, 0.486443,-99) , 
8, -2.68968, 0, 0, 0.494605,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.00991887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46912,-99) , 
3, 8.96578, 1, 0, 0.500892,-99) , 
8, -5.07511, 1, 0, 0.501751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459573,-99) , 
8, 0.168703, 1, 0, 0.500071,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0224422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496821,-99) , 
7, 2.42869, 1, 0, 0.524044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48588,-99) , 
9, -1.74786, 0, 0, 0.502082,-99) , 
NN(
0, 
0, 
-1, -0.550409, 0, -1, 0.484651,-99) , 
8, -2.17405, 1, 0, 0.497383,-99) , 
7, 2.14296, 0, 0, 0.498883,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_8_12_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_8_12_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_8_12_noPCts *ReadBDT_maker_LHC19c2b_8_12_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_8_12_noPCts(theInpVar);
  }
}
