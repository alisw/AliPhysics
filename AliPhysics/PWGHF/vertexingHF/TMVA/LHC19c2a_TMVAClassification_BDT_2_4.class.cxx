#include "LHC19c2a_TMVAClassification_BDT_2_4.class.h"

double ReadBDT_LHC19c2a_2_4::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_2_4::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.545427558316838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999864, 0, 1, 0.792499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330184,-99) , 
5, 0.999048, 0, 0, 0.745576,-99) , 
NN(
NN(
0, 
0, 
-1, -0.420594, 1, 1, 0.727394,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.266275,-99) , 
12, 3.57611, 0, 0, 0.372636,-99) , 
9, -948.705, 0, 0, 0.499686,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.412166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.192967, 1, 1, 0.75182,-99) , 
NN(
0, 
0, 
-1, 1.91269, 0, -1, 0.439379,-99) , 
5, 0.999524, 0, 0, 0.702984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.7435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430487,-99) , 
6, -0.420571, 1, 0, 0.67155,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.325013,-99) , 
12, 3.57208, 0, 0, 0.404834,-99) , 
9, -948.705, 0, 0, 0.505244,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.323005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.371427, 1, 1, 0.622596,-99) , 
NN(
0, 
0, 
-1, 1.3745, 0, -1, 0.257901,-99) , 
10, -1.57144, 0, 0, 0.575594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478471,-99) , 
3, 1.91256, 0, 0, 0.49432,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.175094,-99) , 
9, -951.223, 0, 0, 0.267947,-99) , 
5, 0.999524, 0, 0, 0.518105,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.317771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.189028, 1, 1, 0.672439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37124,-99) , 
5, 0.998572, 0, 0, 0.64811,-99) , 
NN(
NN(
0, 
0, 
-1, -0.624916, 1, 1, 0.667055,-99) , 
NN(
0, 
0, 
-1, -1.85716, 0, -1, 0.359164,-99) , 
11, 2.91762, 0, 0, 0.420616,-99) , 
9, -949.13, 0, 0, 0.497064,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.2591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.125351,-99) , 
7, 0.0476053, 1, 0, 0.568286,-99) , 
NN(
0, 
0, 
-1, 1.40932, 0, -1, 0.223949,-99) , 
10, -1.85708, 0, 0, 0.53831,-99) , 
NN(
0, 
0, 
-1, -949.113, 0, -1, 0.2551,-99) , 
5, 0.999048, 0, 0, 0.50252,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.212772);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.10049, 1, 1, 0.599031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263851,-99) , 
5, 0.999524, 0, 0, 0.475411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.163377,-99) , 
3, 1.56089, 0, 0, 0.237793,-99) , 
10, -1.28569, 0, 0, 0.426297,-99) , 
9, -949.024, 0, 0, 0.484034,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.170518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.538435, 1, 1, 0.653774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480349,-99) , 
11, -2.12708, 1, 0, 0.509788,-99) , 
6, -0.192697, 1, 0, 0.569579,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.416715,-99) , 
9, -949.024, 0, 0, 0.467785,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.149479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.136996,-99) , 
7, 0.0476053, 1, 0, 0.519663,-99) , 
NN(
0, 
0, 
-1, 0.996168, 0, -1, 0.226071,-99) , 
5, 0.998095, 0, 0, 0.499275,-99) , 
NN(
0, 
0, 
-1, -2.5102, 0, -1, 0.174475,-99) , 
10, -2.14285, 0, 0, 0.48193,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.211965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.694843, 1, 1, 0.656277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473515,-99) , 
7, 0.0238027, 1, 0, 0.622583,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451694,-99) , 
3, 1.9478, 0, 0, 0.601167,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.406086,-99) , 
11, -2.01833, 1, 0, 0.436938,-99) , 
11, 4.22601, 0, 0, 0.469232,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.155621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.006792, 0, 1, 0.618557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464694,-99) , 
7, 0.0237723, 1, 0, 0.595025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.20705,-99) , 
5, 0.997143, 0, 0, 0.485215,-99) , 
NN(
0, 
0, 
-1, 1.8634, 0, -1, 0.258754,-99) , 
3, 1.34708, 0, 0, 0.44426,-99) , 
11, 2.10924, 0, 0, 0.482679,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.111102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.161623,-99) , 
7, 0.0475829, 1, 0, 0.504121,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.284646,-99) , 
5, 0.998571, 0, 0, 0.484693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.200361,-99) , 
10, -2.14285, 0, 0, 0.470445,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.157575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.487595, 1, 1, 0.59038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445164,-99) , 
11, -2.37326, 1, 0, 0.468004,-99) , 
6, 0.0760373, 1, 0, 0.541569,-99) , 
NN(
0, 
0, 
-1, -1.57139, 0, -1, 0.419928,-99) , 
9, -948.526, 0, 0, 0.460677,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.162759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814743, 1, 1, 0.63894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496048,-99) , 
12, 4.71664, 1, 0, 0.530656,-99) , 
6, -0.646346, 1, 0, 0.579226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247412,-99) , 
10, 1.57151, 1, 0, 0.486147,-99) , 
NN(
0, 
0, 
-1, 1.77068, 0, -1, 0.327818,-99) , 
3, 1.49228, 0, 0, 0.437026,-99) , 
11, 2.32414, 0, 0, 0.471475,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.1443);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.687178, 1, 1, 0.573425,-99) , 
NN(
0, 
0, 
-1, 1.28621, 0, -1, 0.428955,-99) , 
11, 2.10924, 0, 0, 0.465874,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.183483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436844,-99) , 
5, 0.999524, 0, 0, 0.58335,-99) , 
NN(
0, 
0, 
-1, -2.14287, 0, -1, 0.427894,-99) , 
7, 0.00679749, 0, 0, 0.484289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.151968,-99) , 
7, 0.0475829, 1, 0, 0.474063,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.17958);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349949,-99) , 
10, -1.85715, 0, 0, 0.551589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412436,-99) , 
11, -2.67325, 1, 0, 0.428034,-99) , 
7, 0.00453362, 0, 0, 0.493397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.170391,-99) , 
7, 0.0476053, 1, 0, 0.483627,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0873739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.243653,-99) , 
5, 0.996667, 0, 0, 0.503659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247439,-99) , 
10, -2.14285, 0, 0, 0.491913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.178993,-99) , 
7, 0.0476053, 1, 0, 0.48271,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0560597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249108,-99) , 
5, 0.996667, 0, 0, 0.491386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.192837,-99) , 
10, -2.42858, 0, 0, 0.483322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.188661,-99) , 
7, 0.0476053, 1, 0, 0.474742,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0643711);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.0476028, 1, -1, 0.467859,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0641882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249326,-99) , 
10, 2.02039, 1, 0, 0.494629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26558,-99) , 
10, -2.14284, 0, 0, 0.484393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.197236,-99) , 
7, 0.0476028, 1, 0, 0.476284,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.13396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312022,-99) , 
10, -2.14284, 0, 0, 0.520477,-99) , 
NN(
0, 
0, 
-1, 1.88882, 0, -1, 0.398556,-99) , 
5, 0.999909, 0, 0, 0.490991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487157,-99) , 
0, 0.49809, 1, 0, 0.495398,-99) , 
NN(
0, 
0, 
-1, 2.02718, 0, -1, 0.303282,-99) , 
9, -949.113, 0, 0, 0.368714,-99) , 
5, 0.999524, 0, 0, 0.469912,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0911197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384442,-99) , 
10, -1.1497, 0, 0, 0.483545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280284,-99) , 
10, 1.85708, 1, 0, 0.473488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.191186,-99) , 
7, 0.0475804, 1, 0, 0.465498,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.165005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475379,-99) , 
6, 0.166616, 1, 0, 0.528441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412291,-99) , 
11, -1.99939, 1, 0, 0.436316,-99) , 
9, -948.526, 0, 0, 0.467445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.203985,-99) , 
7, 0.0476028, 1, 0, 0.460026,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.111825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494536,-99) , 
3, 1.8967, 0, 0, 0.515821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402944,-99) , 
3, 2.06946, 0, 0, 0.431228,-99) , 
7, 0.00453363, 0, 0, 0.475911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.209003,-99) , 
7, 0.0476053, 1, 0, 0.468566,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.115399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46581,-99) , 
7, 0.00906753, 0, 0, 0.491747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230181,-99) , 
7, 0.0476053, 1, 0, 0.484518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281274,-99) , 
5, 0.997619, 0, 0, 0.47431,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.050576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263585,-99) , 
10, 2.14283, 1, 0, 0.497821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247972,-99) , 
7, 0.0476028, 1, 0, 0.491033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.246694,-99) , 
5, 0.99619, 0, 0, 0.482998,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0842271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423495,-99) , 
5, 0.999796, 0, 0, 0.492825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.239854,-99) , 
7, 0.0476053, 1, 0, 0.486032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.23887,-99) , 
5, 0.995714, 0, 0, 0.478887,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.109264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458087,-99) , 
3, 1.75556, 0, 0, 0.486963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265007,-99) , 
10, 2.1428, 1, 0, 0.480902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25597,-99) , 
5, 0.996191, 0, 0, 0.473543,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.125029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.806949, 1, 1, 0.60035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424312,-99) , 
5, 0.999905, 0, 0, 0.564311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65935,-99) , 
NN(
0, 
0, 
-1, -1.28573, 0, -1, 0.449914,-99) , 
11, -2.89831, 1, 0, 0.460336,-99) , 
6, -0.549733, 1, 0, 0.477762,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0788435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410114,-99) , 
10, -1.28573, 0, 0, 0.500736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272729,-99) , 
5, 0.995714, 0, 0, 0.494341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253707,-99) , 
7, 0.0476053, 1, 0, 0.48807,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0501888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316052,-99) , 
5, 0.996667, 0, 0, 0.497305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27915,-99) , 
10, -2.30613, 0, 0, 0.490336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316819,-99) , 
10, 1.85708, 1, 0, 0.482124,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0891815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999962, 1, 1, 0.546606,-99) , 
NN(
0, 
0, 
-1, 1.19666, 0, -1, 0.463141,-99) , 
11, 2.10924, 0, 0, 0.484089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261797,-99) , 
7, 0.0476028, 1, 0, 0.478314,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0384003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307251,-99) , 
5, 0.995715, 0, 0, 0.496594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302376,-99) , 
10, -2.26531, 0, 0, 0.490067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279049,-99) , 
10, 2.14279, 1, 0, 0.48422,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0543278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377905,-99) , 
7, 0.0238014, 1, 0, 0.495307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281246,-99) , 
10, -2.34694, 0, 0, 0.488884,-99) , 
NN(
0, 
0, 
-1, -0.0129055, 1, -1, 0.357124,-99) , 
10, 1.57141, 1, 0, 0.47881,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0799025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.36043, 0, 1, 0.5139,-99) , 
NN(
0, 
0, 
-1, -949.13, 0, -1, 0.441551,-99) , 
7, 0.00453377, 0, 0, 0.479957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2669,-99) , 
7, 0.0476053, 1, 0, 0.474514,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.104764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.9386, 1, 1, 0.53635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417769,-99) , 
12, 2.59625, 0, 0, 0.461103,-99) , 
3, 1.93411, 0, 0, 0.479848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278618,-99) , 
10, 2.1428, 1, 0, 0.474318,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.102478);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497266,-99) , 
6, -0.0103161, 1, 0, 0.520309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365689,-99) , 
11, 1.01168, 0, 0, 0.452919,-99) , 
3, 1.59861, 0, 0, 0.482627,-99) , 
NN(
0, 
0, 
-1, -0.0104552, 1, -1, 0.360866,-99) , 
10, 1.57138, 1, 0, 0.473462,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0908725);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45938,-99) , 
3, 1.74151, 0, 0, 0.484597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298048,-99) , 
10, 2.14283, 1, 0, 0.4795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290816,-99) , 
7, 0.0476028, 1, 0, 0.474557,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0936501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466076,-99) , 
5, 0.999981, 0, 0, 0.499652,-99) , 
NN(
0, 
0, 
-1, 1.61555, 0, -1, 0.430101,-99) , 
5, 0.999796, 0, 0, 0.483243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285808,-99) , 
5, 0.995715, 0, 0, 0.477849,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0794574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473792,-99) , 
11, -1.20333, 1, 0, 0.491646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319958,-99) , 
5, 0.996191, 0, 0, 0.486244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286349,-99) , 
7, 0.0476028, 1, 0, 0.481114,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0718622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4191,-99) , 
7, 0.0237802, 1, 0, 0.510505,-99) , 
NN(
0, 
0, 
-1, 1.58634, 0, -1, 0.449273,-99) , 
5, 0.999887, 0, 0, 0.492111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360639,-99) , 
5, 0.997619, 0, 0, 0.485706,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0618641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440889,-99) , 
0, 0.501899, 1, 0, 0.497695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307064,-99) , 
10, -2.34694, 0, 0, 0.492147,-99) , 
NN(
0, 
0, 
-1, -0.0082311, 1, -1, 0.387546,-99) , 
10, 1.57141, 1, 0, 0.484349,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0643065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491858,-99) , 
3, 2.39456, 0, 0, 0.500324,-99) , 
NN(
0, 
0, 
-1, -951.203, 0, -1, 0.435421,-99) , 
7, 0.00226659, 0, 0, 0.484045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298225,-99) , 
7, 0.0475984, 1, 0, 0.479302,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.039379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403089,-99) , 
7, 0.0238014, 1, 0, 0.497873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362372,-99) , 
10, -2.14285, 0, 0, 0.492501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332658,-99) , 
5, 0.995714, 0, 0, 0.488165,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0542989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.561596,-99) , 
NN(
0, 
0, 
-1, 0.999841, 0, -1, 0.481065,-99) , 
3, 2.37499, 0, 0, 0.488344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354465,-99) , 
5, 0.996667, 0, 0, 0.483619,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0372195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394195,-99) , 
10, 1.77549, 1, 0, 0.498562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373738,-99) , 
10, -2.14286, 0, 0, 0.493617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335812,-99) , 
5, 0.995714, 0, 0, 0.489371,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0705999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485685,-99) , 
3, 1.59862, 0, 0, 0.50614,-99) , 
NN(
0, 
0, 
-1, -951.223, 0, -1, 0.442385,-99) , 
7, 0.00226689, 0, 0, 0.49018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310873,-99) , 
7, 0.0476053, 1, 0, 0.485666,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0453248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.83345, 1, 1, 0.574123,-99) , 
NN(
0, 
0, 
-1, 0.0237801, 1, -1, 0.486266,-99) , 
6, -0.731042, 1, 0, 0.49297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359525,-99) , 
5, 0.996667, 0, 0, 0.488267,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0753856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476267,-99) , 
3, 1.43113, 0, 0, 0.506286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376335,-99) , 
6, -0.105353, 1, 0, 0.436035,-99) , 
10, 1.28567, 1, 0, 0.498229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342951,-99) , 
5, 0.995715, 0, 0, 0.494111,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0991398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38515,-99) , 
10, -1.85719, 0, 0, 0.535321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463976,-99) , 
11, -2.3558, 1, 0, 0.477618,-99) , 
6, -0.279451, 1, 0, 0.498313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329212,-99) , 
7, 0.0476028, 1, 0, 0.494042,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0880312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455604,-99) , 
10, 1.09523, 1, 0, 0.511498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411272,-99) , 
9, -949.657, 0, 0, 0.459112,-99) , 
10, -1, 0, 0, 0.500514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371023,-99) , 
5, 0.996191, 0, 0, 0.49661,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0540142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429079,-99) , 
7, 0.0237858, 1, 0, 0.509367,-99) , 
NN(
0, 
0, 
-1, -951.223, 0, -1, 0.465592,-99) , 
0, 0.499995, 1, 0, 0.495454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382714,-99) , 
4, 9.79252, 1, 0, 0.491061,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0942007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425316,-99) , 
5, 0.999672, 0, 0, 0.521498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342494,-99) , 
10, -2.14297, 0, 0, 0.511353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572315,-99) , 
NN(
0, 
0, 
-1, -0.159494, 0, -1, 0.454017,-99) , 
11, -2.68666, 1, 0, 0.467307,-99) , 
6, -0.099319, 1, 0, 0.489722,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0749919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474362,-99) , 
7, 0.00566648, 0, 0, 0.499587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290934,-99) , 
6, -0.466786, 1, 0, 0.414959,-99) , 
7, 0.0237992, 1, 0, 0.494249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387639,-99) , 
4, 9.79006, 1, 0, 0.490169,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0584744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49674,-99) , 
7, 0.00793259, 0, 0, 0.514048,-99) , 
NN(
0, 
0, 
-1, 1.29238, 0, -1, 0.461883,-99) , 
3, 1.29674, 0, 0, 0.498174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274077,-99) , 
6, -0.37815, 1, 0, 0.410515,-99) , 
7, 0.0237992, 1, 0, 0.492683,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0689929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434057,-99) , 
12, -0.520757, 0, 0, 0.535758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395663,-99) , 
10, -1.28565, 0, 0, 0.48364,-99) , 
9, -948.526, 0, 0, 0.501934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303049,-99) , 
6, -0.463657, 1, 0, 0.413329,-99) , 
7, 0.0238027, 1, 0, 0.496404,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0913627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466366,-99) , 
12, 3.91713, 1, 0, 0.529812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465107,-99) , 
3, 2.25281, 0, 0, 0.479506,-99) , 
9, -948.705, 0, 0, 0.497131,-99) , 
NN(
0, 
0, 
-1, -0.463145, 1, -1, 0.41168,-99) , 
7, 0.0238014, 1, 0, 0.491769,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0562019);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476731,-99) , 
7, 0.0034003, 0, 0, 0.503596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329638,-99) , 
6, -0.467498, 1, 0, 0.42983,-99) , 
7, 0.0238027, 1, 0, 0.498907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389862,-99) , 
5, 0.996667, 0, 0, 0.495196,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0536622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483189,-99) , 
3, 1.61543, 0, 0, 0.501815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326467,-99) , 
6, -0.464049, 1, 0, 0.422529,-99) , 
7, 0.0238027, 1, 0, 0.496819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365694,-99) , 
10, 2.14283, 1, 0, 0.493478,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0382519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494305,-99) , 
7, 0.0101997, 0, 0, 0.502848,-99) , 
NN(
0, 
0, 
-1, -0.467091, 1, -1, 0.423892,-99) , 
7, 0.0238014, 1, 0, 0.497868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371483,-99) , 
5, 0.995715, 0, 0, 0.494617,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0527606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478705,-99) , 
3, 1.27697, 0, 0, 0.507231,-99) , 
NN(
0, 
0, 
-1, -0.465945, 1, -1, 0.431266,-99) , 
7, 0.0238027, 1, 0, 0.502462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410588,-99) , 
5, 0.997619, 0, 0, 0.498149,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0715888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.236697, 1, 1, 0.562638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286281,-99) , 
12, 0.964412, 0, 0, 0.494586,-99) , 
8, 1.59157, 0, 0, 0.513923,-99) , 
NN(
0, 
0, 
-1, 1.85719, 1, -1, 0.469998,-99) , 
6, -0.0113861, 1, 0, 0.49544,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0265648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.5715, 0, 1, 0.505505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345037,-99) , 
6, -0.465896, 1, 0, 0.429177,-99) , 
7, 0.0237915, 1, 0, 0.500695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406523,-99) , 
4, 9.3665, 1, 0, 0.496634,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0494153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472099,-99) , 
10, -0.687087, 0, 0, 0.501331,-99) , 
NN(
0, 
0, 
-1, -0.464049, 1, -1, 0.429826,-99) , 
7, 0.0238014, 1, 0, 0.49685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409427,-99) , 
10, 1.85709, 1, 0, 0.493005,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0426077);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46249,-99) , 
3, 1.28474, 0, 0, 0.493183,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.396273,-99) , 
7, 0.0238014, 1, 0, 0.487958,-99) , 
6, -0.82018, 1, 0, 0.491486,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0537903);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477022,-99) , 
9, -2.17862, 0, 0, 0.490217,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.398603,-99) , 
7, 0.0238027, 1, 0, 0.485325,-99) , 
6, -0.820122, 1, 0, 0.48895,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0741073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.629523, 0, 1, 0.600828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382426,-99) , 
11, 2.35586, 0, 0, 0.499331,-99) , 
8, 1.3546, 0, 0, 0.52025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625493,-99) , 
NN(
0, 
0, 
-1, -0.718097, 0, -1, 0.471603,-99) , 
11, -2.9485, 1, 0, 0.479811,-99) , 
6, -0.369451, 1, 0, 0.491673,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0446666);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488539,-99) , 
3, 1.59861, 0, 0, 0.503659,-99) , 
NN(
0, 
0, 
-1, 1.77676, 0, -1, 0.443281,-99) , 
0, 0.503804, 1, 0, 0.498162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381022,-99) , 
10, 2.1428, 1, 0, 0.495215,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0510058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405127,-99) , 
6, 0.16201, 1, 0, 0.518085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291981,-99) , 
8, 1.39206, 0, 0, 0.487758,-99) , 
12, 2.16808, 0, 0, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40997,-99) , 
4, 9.79006, 1, 0, 0.497106,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0509657);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471409,-99) , 
6, -0.101378, 1, 0, 0.509521,-99) , 
NN(
0, 
0, 
-1, 1.5675, 0, -1, 0.476113,-99) , 
12, 1.63016, 0, 0, 0.493178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395671,-99) , 
10, 2.14279, 1, 0, 0.490683,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0465621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493953,-99) , 
6, -0.212898, 1, 0, 0.507385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368729,-99) , 
11, 1.7048, 0, 0, 0.472723,-99) , 
3, 1.28473, 0, 0, 0.496058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399559,-99) , 
5, 0.99619, 0, 0, 0.493267,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0592926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.29601, 1, 1, 0.516809,-99) , 
NN(
0, 
0, 
-1, 0.128118, 1, -1, 0.437379,-99) , 
10, 1.28568, 1, 0, 0.506511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472011,-99) , 
6, -0.691788, 1, 0, 0.4884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264597,-99) , 
12, 1.32161, 0, 0, 0.469977,-99) , 
3, 1.28941, 0, 0, 0.494772,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0428275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476438,-99) , 
7, 0.00226626, 0, 0, 0.502056,-99) , 
NN(
0, 
0, 
-1, 0.5058, 1, -1, 0.446915,-99) , 
0, 0.503804, 1, 0, 0.497055,-99) , 
NN(
0, 
0, 
-1, -0.466946, 1, -1, 0.423263,-99) , 
7, 0.0237973, 1, 0, 0.492533,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0342156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497762,-99) , 
11, -3.0059, 1, 0, 0.503072,-99) , 
NN(
0, 
0, 
-1, -0.585582, 1, -1, 0.461616,-99) , 
3, 1.12501, 0, 0, 0.495023,-99) , 
NN(
0, 
0, 
-1, -0.466996, 1, -1, 0.42551,-99) , 
7, 0.0238027, 1, 0, 0.490788,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0571028);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48716,-99) , 
3, 1.77473, 0, 0, 0.500404,-99) , 
NN(
0, 
0, 
-1, -0.22046, 0, -1, 0.439558,-99) , 
6, 0.347878, 1, 0, 0.491225,-99) , 
3, 2.73084, 0, 0, 0.494444,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0376512);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497365,-99) , 
6, -0.209026, 1, 0, 0.510092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298049,-99) , 
12, 1.58378, 0, 0, 0.480161,-99) , 
3, 1.28942, 0, 0, 0.500274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406106,-99) , 
5, 0.995715, 0, 0, 0.497873,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0339164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.397254, 1, 1, 0.511468,-99) , 
NN(
0, 
0, 
-1, 3.03669, 0, -1, 0.477174,-99) , 
8, 1.34208, 0, 0, 0.502264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428169,-99) , 
4, 9.42577, 1, 0, 0.499116,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0531413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457029,-99) , 
6, 0.255413, 1, 0, 0.509655,-99) , 
NN(
0, 
0, 
-1, 1.27868, 0, -1, 0.473404,-99) , 
5, 0.999841, 0, 0, 0.500214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417393,-99) , 
5, 0.996667, 0, 0, 0.497452,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0353987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.83217, 1, 1, 0.5105,-99) , 
NN(
0, 
0, 
-1, 1.32161, 0, -1, 0.475224,-99) , 
3, 1.29673, 0, 0, 0.498989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417616,-99) , 
4, 9.80004, 1, 0, 0.495922,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0484227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999924, 1, 1, 0.514199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385617,-99) , 
8, 1.58796, 0, 0, 0.48735,-99) , 
12, 2.16808, 0, 0, 0.498981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407582,-99) , 
5, 0.995715, 0, 0, 0.496673,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0303254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555795,-99) , 
NN(
0, 
0, 
-1, 0.25298, 1, -1, 0.490191,-99) , 
3, 2.5715, 0, 0, 0.493907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414859,-99) , 
4, 9.79756, 1, 0, 0.490923,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0269096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498485,-99) , 
3, 2.36082, 0, 0, 0.502919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439531,-99) , 
0, 0.490516, 0, 0, 0.499572,-99) , 
NN(
0, 
0, 
-1, 0.505346, 1, -1, 0.453482,-99) , 
0, 0.502852, 1, 0, 0.493612,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0363675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49615,-99) , 
6, -0.191228, 1, 0, 0.507372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421089,-99) , 
0, 0.489519, 0, 0, 0.504368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470451,-99) , 
2, 0.0723943, 0, 0, 0.479226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430095,-99) , 
0, 0.506027, 1, 0, 0.47384,-99) , 
0, 0.500947, 1, 0, 0.49683,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0246921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.09347, 0, 1, 0.506374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430732,-99) , 
0, 0.489791, 0, 0, 0.50365,-99) , 
NN(
0, 
0, 
-1, 0.50512, 1, -1, 0.462769,-99) , 
0, 0.502852, 1, 0, 0.498354,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0650852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459138,-99) , 
11, -1.11924, 1, 0, 0.564985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40329,-99) , 
12, -0.0280001, 0, 0, 0.477387,-99) , 
9, -951.286, 1, 0, 0.52655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490765,-99) , 
8, 1.9027, 0, 0, 0.498068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420864,-99) , 
9, -951.216, 0, 0, 0.450442,-99) , 
6, 0.138909, 1, 0, 0.489338,-99) , 
3, 2.07881, 0, 0, 0.49639,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0588536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.61235, 1, 1, 0.547058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460833,-99) , 
6, 0.0512965, 1, 0, 0.498613,-99) , 
3, 2.0788, 0, 0, 0.504836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576304,-99) , 
NN(
0, 
0, 
-1, -0.58422, 0, -1, 0.408198,-99) , 
11, -2.82139, 1, 0, 0.462523,-99) , 
12, -0.118879, 0, 0, 0.498811,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0220699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498986,-99) , 
7, 0.0113341, 0, 0, 0.504134,-99) , 
NN(
0, 
0, 
-1, -0.465791, 1, -1, 0.449831,-99) , 
7, 0.0238027, 1, 0, 0.500741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428104,-99) , 
4, 9.79252, 1, 0, 0.497991,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0372888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497024,-99) , 
11, 1.02599, 0, 0, 0.508939,-99) , 
NN(
0, 
0, 
-1, 2.79705, 0, -1, 0.474829,-99) , 
3, 1.13738, 0, 0, 0.502095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371778,-99) , 
6, -0.465871, 1, 0, 0.442285,-99) , 
7, 0.0237992, 1, 0, 0.498419,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0338587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.351518, 1, 1, 0.512506,-99) , 
NN(
0, 
0, 
-1, -0.481305, 1, -1, 0.478341,-99) , 
3, 1.1236, 0, 0, 0.505852,-99) , 
NN(
0, 
0, 
-1, -0.465871, 1, -1, 0.442945,-99) , 
7, 0.0238027, 1, 0, 0.501978,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0412935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459354,-99) , 
7, 0.0237903, 1, 0, 0.509733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444247,-99) , 
0, 0.490154, 0, 0, 0.506399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479916,-99) , 
12, 3.79781, 1, 0, 0.49855,-99) , 
NN(
0, 
0, 
-1, 1.68786, 0, -1, 0.463425,-99) , 
11, 1.06847, 0, 0, 0.476214,-99) , 
0, 0.500947, 1, 0, 0.499044,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0336257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491865,-99) , 
7, 0.00793309, 0, 0, 0.499771,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.427538,-99) , 
7, 0.0238014, 1, 0, 0.495888,-99) , 
6, -0.820146, 1, 0, 0.49838,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0489846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484706,-99) , 
6, 0.338737, 1, 0, 0.515938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404145,-99) , 
12, 1.10432, 0, 0, 0.48875,-99) , 
3, 1.61542, 0, 0, 0.500671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438832,-99) , 
10, 1.85708, 1, 0, 0.497932,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0307676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.94586, 1, 1, 0.508999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377598,-99) , 
12, 1.44727, 0, 0, 0.483746,-99) , 
3, 1.44168, 0, 0, 0.498002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416041,-99) , 
10, 2.1428, 1, 0, 0.495934,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0313787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47219,-99) , 
9, -951.286, 1, 0, 0.530914,-99) , 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.488721,-99) , 
3, 2.37077, 0, 0, 0.492812,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0466962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466536,-99) , 
10, 1.00003, 1, 0, 0.51099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373828,-99) , 
12, 1.32977, 0, 0, 0.484971,-99) , 
3, 1.44166, 0, 0, 0.49979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436672,-99) , 
4, 9.36329, 1, 0, 0.49708,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0462401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.311433, 1, 1, 0.554411,-99) , 
NN(
0, 
0, 
-1, 1.85713, 1, -1, 0.49237,-99) , 
6, -0.161076, 1, 0, 0.502565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48798,-99) , 
10, -1.28584, 1, 0, 0.496757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325479,-99) , 
12, 1.32161, 0, 0, 0.478302,-99) , 
8, 1.55213, 0, 0, 0.492887,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0405883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.61204, 1, 1, 0.511376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41607,-99) , 
10, 1.85711, 1, 0, 0.506089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458859,-99) , 
6, -0.36938, 1, 0, 0.490814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374321,-99) , 
12, 0.991719, 0, 0, 0.480463,-99) , 
3, 1.43112, 0, 0, 0.495278,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0252692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499168,-99) , 
11, -2.98434, 1, 0, 0.504014,-99) , 
NN(
0, 
0, 
-1, 2.79705, 0, -1, 0.47277,-99) , 
3, 1.1374, 0, 0, 0.49768,-99) , 
NN(
0, 
0, 
-1, -0.466946, 1, -1, 0.446984,-99) , 
7, 0.0237992, 1, 0, 0.494562,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0266042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420806,-99) , 
5, 0.998572, 0, 0, 0.499258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420761,-99) , 
5, 0.999524, 1, 0, 0.455267,-99) , 
6, 0.436968, 1, 0, 0.494822,-99) , 
3, 2.68748, 0, 0, 0.497372,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0279943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.99548, 1, 1, 0.505952,-99) , 
NN(
0, 
0, 
-1, -0.519248, 1, -1, 0.468899,-99) , 
3, 1.13738, 0, 0, 0.498458,-99) , 
NN(
0, 
0, 
-1, -0.467165, 1, -1, 0.440617,-99) , 
7, 0.0237992, 1, 0, 0.494923,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0535254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459288,-99) , 
10, 1.00032, 1, 0, 0.545699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406033,-99) , 
12, -0.0108776, 0, 0, 0.471272,-99) , 
9, -12.1436, 1, 0, 0.512851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47079,-99) , 
10, 0.714336, 1, 0, 0.493378,-99) , 
NN(
0, 
0, 
-1, 1.6882, 0, -1, 0.458849,-99) , 
12, 0.863138, 0, 0, 0.485789,-99) , 
3, 2.06945, 0, 0, 0.49104,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0411795);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487483,-99) , 
3, 1.97346, 0, 0, 0.493572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434507,-99) , 
5, 0.999524, 1, 0, 0.458955,-99) , 
6, 0.347273, 1, 0, 0.488447,-99) , 
3, 2.71031, 0, 0, 0.490699,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0238943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.374967, 1, 1, 0.506292,-99) , 
NN(
0, 
0, 
-1, 1.63552, 0, -1, 0.483202,-99) , 
3, 1.28125, 0, 0, 0.499046,-99) , 
NN(
0, 
0, 
-1, -0.101615, 1, -1, 0.450355,-99) , 
0, 0.504757, 1, 0, 0.496182,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0184668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558875,-99) , 
NN(
0, 
0, 
-1, 0.0237973, 1, -1, 0.494764,-99) , 
6, -0.819612, 1, 0, 0.497153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42289,-99) , 
5, 0.99619, 0, 0, 0.495031,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0262905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.998983, 1, 1, 0.511832,-99) , 
NN(
0, 
0, 
-1, 1.36875, 0, -1, 0.488866,-99) , 
12, 2.35915, 0, 0, 0.498156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427567,-99) , 
5, 0.996191, 0, 0, 0.496159,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0237402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.9514, 1, 1, 0.506778,-99) , 
NN(
0, 
0, 
-1, 1.44387, 0, -1, 0.482565,-99) , 
3, 1.27949, 0, 0, 0.498912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432966,-99) , 
5, 0.996191, 0, 0, 0.497022,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0287912);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578852,-99) , 
NN(
0, 
0, 
-1, 0.531453, 0, -1, 0.489962,-99) , 
11, -2.89037, 1, 0, 0.493787,-99) , 
6, -0.819847, 1, 0, 0.495867,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0463471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489002,-99) , 
12, 3.55114, 1, 0, 0.504513,-99) , 
10, -1.28562, 1, 0, 0.512505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494831,-99) , 
10, -1.8604, 1, 0, 0.500666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336789,-99) , 
8, 1.43844, 0, 0, 0.487838,-99) , 
12, 1.95822, 0, 0, 0.499268,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0342473);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496127,-99) , 
3, 1.64957, 0, 0, 0.506891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452936,-99) , 
5, 0.999456, 1, 0, 0.478098,-99) , 
6, 0.433392, 1, 0, 0.503457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443008,-99) , 
5, 0.996191, 0, 0, 0.501738,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0574347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.03651, 0, 1, 0.518408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467903,-99) , 
6, -0.00903108, 1, 0, 0.491392,-99) , 
10, 0.714244, 1, 0, 0.51011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466345,-99) , 
9, -12.1436, 1, 0, 0.546514,-99) , 
NN(
0, 
0, 
-1, -0.42274, 0, -1, 0.447705,-99) , 
11, -2.47841, 1, 0, 0.483095,-99) , 
12, 0.301516, 0, 0, 0.504402,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0252907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.75171, 0, 1, 0.545234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49491,-99) , 
6, -0.370929, 1, 0, 0.501732,-99) , 
3, 2.51546, 0, 0, 0.504581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452367,-99) , 
4, 9.36896, 1, 0, 0.502372,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0520089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499738,-99) , 
11, -1.43045, 1, 0, 0.55641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428173,-99) , 
12, -0.110271, 0, 0, 0.487488,-99) , 
9, -949.96, 1, 0, 0.526023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495683,-99) , 
3, 1.10699, 0, 0, 0.514759,-99) , 
NN(
0, 
0, 
-1, 1.42925, 0, -1, 0.480413,-99) , 
11, 0.565681, 0, 0, 0.498142,-99) , 
3, 2.09346, 0, 0, 0.503252,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0322112);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472095,-99) , 
7, 0.00113341, 0, 0, 0.504809,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.44242,-99) , 
7, 0.0238027, 1, 0, 0.501505,-99) , 
6, -0.819847, 1, 0, 0.503603,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0281481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.96722, 1, 1, 0.511911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417655,-99) , 
12, 1.4006, 0, 0, 0.490494,-99) , 
3, 1.4561, 0, 0, 0.502451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451672,-99) , 
4, 9.79252, 1, 0, 0.500572,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0466682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4399,-99) , 
11, -2.84868, 1, 0, 0.487582,-99) , 
12, -0.209868, 0, 0, 0.530377,-99) , 
NN(
NN(
0, 
0, 
-1, 0.669432, 0, 1, 0.535841,-99) , 
NN(
0, 
0, 
-1, 0.394437, 0, -1, 0.489604,-99) , 
12, 9.49276, 0, 0, 0.4934,-99) , 
11, -1.91133, 1, 0, 0.498835,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.053088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440892,-99) , 
11, -1.75443, 1, 0, 0.49763,-99) , 
12, 0.558986, 0, 0, 0.517863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486434,-99) , 
6, -0.370929, 1, 0, 0.498933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394172,-99) , 
12, 0.670905, 0, 0, 0.494872,-99) , 
11, -1.0324, 1, 0, 0.50171,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0516507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.780039, 0, 1, 0.558656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469272,-99) , 
12, -0.276155, 0, 0, 0.50229,-99) , 
6, -0.316457, 1, 0, 0.509297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479772,-99) , 
10, -0.714383, 1, 0, 0.499378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393493,-99) , 
11, 2.44804, 0, 0, 0.481186,-99) , 
8, 1.34175, 0, 0, 0.501759,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0334434);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457151,-99) , 
3, 0.962943, 0, 0, 0.526084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495155,-99) , 
12, 8.24568, 0, 0, 0.498054,-99) , 
7, 0.0102002, 0, 0, 0.503024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398169,-99) , 
6, -0.466358, 1, 0, 0.458038,-99) , 
7, 0.0238014, 1, 0, 0.500306,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0374379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57119, 1, 1, 0.514755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460015,-99) , 
11, 1.84984, 0, 0, 0.492165,-99) , 
3, 1.44166, 0, 0, 0.505019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454439,-99) , 
4, 9.42256, 1, 0, 0.502927,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.026737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.5712, 1, 1, 0.509628,-99) , 
NN(
0, 
0, 
-1, 1.194, 0, -1, 0.486141,-99) , 
8, 1.55213, 0, 0, 0.500703,-99) , 
NN(
0, 
0, 
-1, -0.463839, 1, -1, 0.454111,-99) , 
7, 0.0238014, 1, 0, 0.49784,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0319259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.20926, 0, 1, 0.506551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415655,-99) , 
11, -2.39764, 1, 0, 0.477285,-99) , 
12, -0.0532287, 0, 0, 0.501991,-99) , 
NN(
0, 
0, 
-1, 1.08681, 1, -1, 0.455085,-99) , 
7, 0.0237902, 1, 0, 0.499094,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0308465);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496471,-99) , 
11, -0.91795, 1, 0, 0.504397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419142,-99) , 
5, 0.998096, 0, 0, 0.501716,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.461383,-99) , 
6, 0.43872, 1, 0, 0.496528,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0479872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.74155, 1, 1, 0.544296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448547,-99) , 
12, 1.21349, 0, 0, 0.495993,-99) , 
8, 1.85522, 0, 0, 0.505354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479295,-99) , 
9, -951.286, 0, 0, 0.516228,-99) , 
NN(
0, 
0, 
-1, 2.42374, 0, -1, 0.466871,-99) , 
5, 0.999524, 1, 0, 0.482459,-99) , 
6, 0.170465, 1, 0, 0.498684,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0469963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.23269, 1, 1, 0.551896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475529,-99) , 
10, 0.428484, 1, 0, 0.496452,-99) , 
3, 2.2528, 0, 0, 0.500329,-99) , 
NN(
NN(
0, 
0, 
-1, -1.21194, 1, 1, 0.53971,-99) , 
NN(
0, 
0, 
-1, -0.480251, 0, -1, 0.437398,-99) , 
11, -2.59247, 1, 0, 0.474752,-99) , 
12, 0.0997583, 0, 0, 0.495829,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0326491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490143,-99) , 
12, 0.400969, 0, 0, 0.514139,-99) , 
NN(
0, 
0, 
-1, 0.557198, 0, -1, 0.490909,-99) , 
11, -1.22553, 1, 0, 0.497011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432989,-99) , 
0, 0.505709, 1, 0, 0.49486,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0234031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85705, 1, 1, 0.506863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419799,-99) , 
11, 3.08541, 0, 0, 0.485695,-99) , 
8, 1.33584, 0, 0, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444494,-99) , 
5, 0.996191, 0, 0, 0.499501,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0392061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496077,-99) , 
12, 3.54188, 1, 0, 0.541198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422125,-99) , 
8, 1.48948, 0, 0, 0.494866,-99) , 
11, 1.33765, 0, 0, 0.502091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475673,-99) , 
10, -0.714277, 1, 0, 0.490013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389769,-99) , 
12, 3.14509, 0, 0, 0.47747,-99) , 
3, 1.13152, 0, 0, 0.496625,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0244408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495909,-99) , 
11, -1.22553, 1, 0, 0.501615,-99) , 
NN(
0, 
0, 
-1, 1.58051, 0, -1, 0.458897,-99) , 
0, 0.50453, 1, 0, 0.49864,-99) , 
NN(
0, 
0, 
-1, 0.0726185, 1, -1, 0.456853,-99) , 
0, 0.491424, 0, 0, 0.495812,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0569709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480632,-99) , 
5, 0.999955, 0, 0, 0.507381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445821,-99) , 
5, 0.999049, 0, 0, 0.503952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473027,-99) , 
11, -1.83172, 1, 0, 0.49444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36735,-99) , 
11, -2.72524, 1, 0, 0.44537,-99) , 
12, -0.389667, 0, 0, 0.482,-99) , 
6, 0.170879, 1, 0, 0.497618,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0337422);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489315,-99) , 
0, 0.499042, 1, 0, 0.502193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443034,-99) , 
5, 0.998572, 0, 0, 0.49923,-99) , 
NN(
NN(
0, 
0, 
-1, 0.143103, 0, 1, 0.513618,-99) , 
NN(
0, 
0, 
-1, 0.0482228, 0, -1, 0.440193,-99) , 
5, 0.999524, 1, 0, 0.46956,-99) , 
6, 0.441077, 1, 0, 0.495426,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0494477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.512543, 1, 1, 0.529672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47867,-99) , 
6, -0.234816, 1, 0, 0.494769,-99) , 
3, 1.90147, 0, 0, 0.500822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449118,-99) , 
12, -0.620382, 0, 0, 0.497647,-99) , 
NN(
0, 
0, 
-1, -1.07571, 1, -1, 0.414588,-99) , 
11, -1.88962, 1, 0, 0.472978,-99) , 
12, 0.26054, 0, 0, 0.495168,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0242969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49887,-99) , 
6, -0.396981, 1, 0, 0.504447,-99) , 
NN(
0, 
0, 
-1, 3.26991, 0, -1, 0.480958,-99) , 
8, 1.3361, 0, 0, 0.498204,-99) , 
NN(
0, 
0, 
-1, 1.37644, 0, -1, 0.456588,-99) , 
0, 0.491424, 0, 0, 0.495378,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0248837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.38308, 1, 1, 0.506207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421072,-99) , 
11, 3.07778, 0, 0, 0.483454,-99) , 
8, 1.33624, 0, 0, 0.500195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466258,-99) , 
5, 0.999955, 0, 0, 0.490872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418347,-99) , 
5, 0.999524, 0, 0, 0.469212,-99) , 
0, 0.492376, 0, 0, 0.497179,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0387766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42013,-99) , 
8, 1.45129, 0, 0, 0.476916,-99) , 
9, -951.265, 0, 0, 0.517722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466466,-99) , 
3, 0.967169, 0, 0, 0.495181,-99) , 
NN(
0, 
0, 
-1, -2.49593, 1, -1, 0.442177,-99) , 
12, -0.280254, 0, 0, 0.490953,-99) , 
10, -1.28572, 1, 0, 0.494709,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0290506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465539,-99) , 
8, 1.45937, 0, 0, 0.520231,-99) , 
NN(
0, 
0, 
-1, -0.518331, 0, -1, 0.489637,-99) , 
10, -1.57138, 1, 0, 0.492452,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0500908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496516,-99) , 
10, 0.553802, 1, 0, 0.524958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482964,-99) , 
11, 1.4669, 0, 0, 0.495044,-99) , 
3, 2.04929, 0, 0, 0.499013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457041,-99) , 
12, -1.0496, 0, 0, 0.520681,-99) , 
NN(
0, 
0, 
-1, -0.683215, 1, -1, 0.422339,-99) , 
11, -2.49364, 1, 0, 0.468746,-99) , 
12, -0.0224326, 0, 0, 0.494278,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0430363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.68186, 1, 1, 0.509221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390234,-99) , 
11, -2.99413, 1, 0, 0.459215,-99) , 
12, -0.585612, 0, 0, 0.503987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490964,-99) , 
10, -0.716135, 1, 0, 0.506865,-99) , 
NN(
0, 
0, 
-1, 3.24846, 0, -1, 0.446537,-99) , 
6, -0.626121, 1, 0, 0.479081,-99) , 
3, 1.13738, 0, 0, 0.498377,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0406943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494439,-99) , 
11, -1.66616, 1, 0, 0.511838,-99) , 
NN(
0, 
0, 
-1, 1.5788, 0, -1, 0.489623,-99) , 
3, 1.61545, 0, 0, 0.497741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549982,-99) , 
NN(
0, 
0, 
-1, -0.720669, 0, -1, 0.448776,-99) , 
11, -2.93765, 1, 0, 0.47231,-99) , 
12, 0.0157684, 0, 0, 0.493633,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0217897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.857, 1, 1, 0.505786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419449,-99) , 
11, 3.34521, 0, 0, 0.484316,-99) , 
8, 1.31066, 0, 0, 0.500896,-99) , 
NN(
0, 
0, 
-1, -0.467577, 1, -1, 0.461367,-99) , 
7, 0.0237992, 1, 0, 0.498449,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0184445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.77676, 0, 1, 0.521762,-99) , 
NN(
0, 
0, 
-1, -0.321964, 0, -1, 0.494651,-99) , 
10, -1.28572, 1, 0, 0.498425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449173,-99) , 
4, 9.78684, 1, 0, 0.496615,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.044802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492103,-99) , 
10, 1.00718, 1, 0, 0.534544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493819,-99) , 
6, -0.474363, 1, 0, 0.50108,-99) , 
3, 2.05719, 0, 0, 0.504917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465002,-99) , 
12, -0.862346, 0, 0, 0.520018,-99) , 
NN(
0, 
0, 
-1, -0.368596, 1, -1, 0.441621,-99) , 
11, -2.29908, 1, 0, 0.478924,-99) , 
12, 0.239737, 0, 0, 0.49972,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0361989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.24315, 1, 1, 0.513023,-99) , 
NN(
0, 
0, 
-1, 0.999671, 0, -1, 0.487181,-99) , 
8, 1.30007, 0, 0, 0.50514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55918,-99) , 
NN(
0, 
0, 
-1, -0.739483, 0, -1, 0.465713,-99) , 
11, -2.97522, 1, 0, 0.482072,-99) , 
12, 0.239737, 0, 0, 0.500532,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0226094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28568, 1, 1, 0.506682,-99) , 
NN(
0, 
0, 
-1, 0.241581, 0, -1, 0.461804,-99) , 
5, 0.998572, 0, 0, 0.504109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436971,-99) , 
5, 0.999524, 1, 0, 0.469545,-99) , 
6, 0.531162, 1, 0, 0.501143,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.026313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471152,-99) , 
8, 1.48867, 0, 0, 0.522859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477018,-99) , 
3, 0.978056, 0, 0, 0.498027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420685,-99) , 
12, -0.649415, 0, 0, 0.494007,-99) , 
10, -1.57143, 1, 0, 0.496659,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0354595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443196,-99) , 
8, 1.68671, 0, 0, 0.476954,-99) , 
9, -949.657, 0, 0, 0.516897,-99) , 
NN(
0, 
0, 
-1, -0.506761, 0, -1, 0.49157,-99) , 
10, -1.28573, 1, 0, 0.495067,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.026706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.278566, 1, 1, 0.543854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448939,-99) , 
5, 0.998572, 0, 0, 0.501508,-99) , 
3, 2.17613, 0, 0, 0.504803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523413,-99) , 
NN(
0, 
0, 
-1, -951.218, 1, -1, 0.451689,-99) , 
5, 0.999048, 1, 0, 0.473319,-99) , 
6, 0.437732, 1, 0, 0.500724,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0150812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495599,-99) , 
3, 0.640823, 0, 0, 0.530211,-99) , 
NN(
0, 
0, 
-1, 0.0238027, 1, -1, 0.494333,-99) , 
12, 9.98416, 0, 0, 0.496644,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0179765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497687,-99) , 
12, 9.64884, 0, 0, 0.500441,-99) , 
3, 2.37891, 0, 0, 0.502581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441614,-99) , 
5, 0.999524, 1, 0, 0.466903,-99) , 
6, 0.52689, 1, 0, 0.499491,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0392692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.48105, 1, 1, 0.516915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460573,-99) , 
12, 1.62623, 0, 0, 0.497124,-99) , 
3, 1.60516, 0, 0, 0.504436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550607,-99) , 
NN(
0, 
0, 
-1, -0.741508, 0, -1, 0.453391,-99) , 
11, -2.96087, 1, 0, 0.474991,-99) , 
12, 0.04107, 0, 0, 0.499602,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.019948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485644,-99) , 
8, 1.45129, 0, 0, 0.531574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445346,-99) , 
10, 2.12919, 1, 0, 0.49927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424989,-99) , 
12, -0.649978, 0, 0, 0.495382,-99) , 
10, -1.57143, 1, 0, 0.498712,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0444976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446065,-99) , 
13, 1.56744, 0, 0, 0.482481,-99) , 
9, -951.236, 0, 0, 0.518976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489394,-99) , 
8, 1.97301, 0, 0, 0.496435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403217,-99) , 
11, -2.60323, 1, 0, 0.460985,-99) , 
12, -0.274282, 0, 0, 0.493627,-99) , 
10, -1.2857, 1, 0, 0.497099,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0253393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.01568, 0, 1, 0.524494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494452,-99) , 
3, 2.31037, 0, 0, 0.496504,-99) , 
10, -1.28573, 1, 0, 0.500606,-99) , 
NN(
NN(
0, 
0, 
-1, 0.144554, 0, 1, 0.505444,-99) , 
NN(
0, 
0, 
-1, 2.42094, 0, -1, 0.44799,-99) , 
5, 0.999524, 1, 0, 0.470869,-99) , 
6, 0.441077, 1, 0, 0.49677,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0265729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57145, 1, 1, 0.50588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450521,-99) , 
5, 0.998572, 0, 0, 0.503528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473769,-99) , 
10, -0.0241, 1, 0, 0.492621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436559,-99) , 
12, -0.596316, 0, 0, 0.479145,-99) , 
6, 0.351011, 1, 0, 0.499235,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.00997516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.73084, 0, 1, 0.501554,-99) , 
NN(
0, 
0, 
-1, -0.0993513, 1, -1, 0.466842,-99) , 
0, 0.491061, 0, 0, 0.499483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451672,-99) , 
0, 0.505709, 1, 0, 0.497834,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.037046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.159313, 1, 1, 0.514935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428217,-99) , 
12, 1.34608, 0, 0, 0.490756,-99) , 
8, 1.68143, 0, 0, 0.499612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471631,-99) , 
10, -0.139633, 1, 0, 0.487489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44216,-99) , 
12, -0.581195, 0, 0, 0.477404,-99) , 
6, 0.258147, 1, 0, 0.494449,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.023291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465418,-99) , 
3, 1.25533, 0, 0, 0.529015,-99) , 
NN(
0, 
0, 
-1, -0.921053, 0, -1, 0.49277,-99) , 
10, -1.85713, 1, 0, 0.494852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439499,-99) , 
0, 0.489519, 0, 0, 0.493433,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0390734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443732,-99) , 
13, 1.56744, 0, 0, 0.482021,-99) , 
9, -949.657, 0, 0, 0.516886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492103,-99) , 
3, 2.5715, 0, 0, 0.494237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454228,-99) , 
12, -0.411339, 0, 0, 0.491726,-99) , 
10, -1.28572, 1, 0, 0.49519,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0190899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475818,-99) , 
3, 1.24104, 0, 0, 0.540698,-99) , 
NN(
NN(
0, 
0, 
-1, 9.47975, 0, 1, 0.502982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416722,-99) , 
12, -0.892114, 0, 0, 0.499498,-99) , 
10, -1.85716, 1, 0, 0.501914,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0291088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475025,-99) , 
8, 1.43511, 0, 0, 0.529665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490445,-99) , 
10, -0.00681088, 1, 0, 0.499087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436762,-99) , 
12, -0.789969, 0, 0, 0.496096,-99) , 
10, -1.85714, 1, 0, 0.498032,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0201886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483271,-99) , 
8, 1.23761, 0, 0, 0.498568,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.457201,-99) , 
6, 0.526804, 1, 0, 0.495959,-99) , 
3, 2.69723, 0, 0, 0.497753,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.042039);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484251,-99) , 
12, 1.64651, 0, 0, 0.528559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491641,-99) , 
3, 1.58772, 0, 0, 0.499451,-99) , 
10, -1.28572, 1, 0, 0.502172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455257,-99) , 
12, -0.938151, 0, 0, 0.515189,-99) , 
NN(
0, 
0, 
-1, -0.711458, 1, -1, 0.43767,-99) , 
11, -2.35299, 1, 0, 0.477646,-99) , 
12, 0.0623895, 0, 0, 0.498033,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0343031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88837, 0, 1, 0.506525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452651,-99) , 
10, 2.1428, 1, 0, 0.504783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45462,-99) , 
9, -12.1436, 1, 0, 0.500776,-99) , 
NN(
0, 
0, 
-1, -0.818877, 1, -1, 0.426629,-99) , 
11, -1.74638, 1, 0, 0.480474,-99) , 
12, 0.379125, 0, 0, 0.499371,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0276049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487489,-99) , 
8, 1.45166, 0, 0, 0.526443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493049,-99) , 
3, 2.41215, 0, 0, 0.495262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440754,-99) , 
12, -0.580026, 0, 0, 0.492058,-99) , 
10, -1.57145, 1, 0, 0.495213,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0363383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481588,-99) , 
3, 0.946099, 0, 0, 0.50278,-99) , 
10, -1.28569, 1, 0, 0.507402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490902,-99) , 
10, -1.88125, 1, 0, 0.495708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374779,-99) , 
8, 1.42167, 0, 0, 0.487893,-99) , 
12, 1.79305, 0, 0, 0.497601,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.024103);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.811333, 1, 1, 0.540004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495192,-99) , 
7, 0.0113343, 0, 0, 0.499405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444356,-99) , 
7, 0.0238027, 1, 0, 0.496734,-99) , 
12, 9.88145, 0, 0, 0.499552,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0251428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498613,-99) , 
8, 0.727711, 0, 0, 0.534732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458255,-99) , 
3, 0.974822, 0, 0, 0.502344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440992,-99) , 
7, 0.0237973, 1, 0, 0.499461,-99) , 
12, 9.49449, 0, 0, 0.501958,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0234784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495828,-99) , 
3, 0.640814, 0, 0, 0.530124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494882,-99) , 
11, -1.96763, 1, 0, 0.499205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44576,-99) , 
7, 0.0237973, 1, 0, 0.496622,-99) , 
12, 9.88145, 0, 0, 0.498832,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0287025);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.74446, 0, 1, 0.53596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495636,-99) , 
11, 1.56047, 0, 0, 0.502204,-99) , 
NN(
0, 
0, 
-1, 4.96002, 0, -1, 0.464465,-99) , 
8, 1.17557, 0, 0, 0.497871,-99) , 
12, 8.96386, 0, 0, 0.500838,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0233395);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457057,-99) , 
3, 0.818714, 0, 0, 0.504288,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.45463,-99) , 
7, 0.0238027, 1, 0, 0.501649,-99) , 
6, -0.820776, 1, 0, 0.503243,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0309175);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.687959, 0, 1, 0.535673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493478,-99) , 
11, -1.39093, 1, 0, 0.501643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445762,-99) , 
12, -1.05429, 0, 0, 0.499168,-99) , 
12, 9.08228, 0, 0, 0.50196,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.037809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.90658, 0, 1, 0.517214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49436,-99) , 
3, 2.21486, 0, 0, 0.498567,-99) , 
10, 0.142801, 1, 0, 0.50755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473796,-99) , 
12, -1.19501, 0, 0, 0.531516,-99) , 
NN(
0, 
0, 
-1, -0.490183, 0, -1, 0.460692,-99) , 
11, -2.55663, 1, 0, 0.484913,-99) , 
12, 0.222023, 0, 0, 0.503114,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0188881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.73084, 0, 1, 0.507196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471783,-99) , 
0, 0.505029, 1, 0, 0.505353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447717,-99) , 
0, 0.489519, 0, 0, 0.503843,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.019373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475477,-99) , 
3, 1.2363, 0, 0, 0.533999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44329,-99) , 
12, -0.761033, 0, 0, 0.49992,-99) , 
10, -1.85716, 1, 0, 0.501887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447492,-99) , 
0, 0.489519, 0, 0, 0.500458,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0294776);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.530435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490982,-99) , 
11, 1.08692, 0, 0, 0.4992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452819,-99) , 
8, 0.951397, 0, 0, 0.497194,-99) , 
12, 9.99987, 0, 0, 0.499317,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0168361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474083,-99) , 
3, 1.25489, 0, 0, 0.532872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445654,-99) , 
10, 2.07474, 1, 0, 0.499858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450149,-99) , 
12, -0.822162, 0, 0, 0.497584,-99) , 
10, -1.85716, 1, 0, 0.499618,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0274047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.55821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484615,-99) , 
3, 1.2702, 0, 0, 0.525563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493507,-99) , 
10, -0.0476422, 1, 0, 0.500956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451755,-99) , 
12, -0.515693, 0, 0, 0.497775,-99) , 
10, -1.57142, 1, 0, 0.500308,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0282794);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494882,-99) , 
8, 1.5525, 0, 0, 0.504934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464324,-99) , 
4, 8.99077, 1, 0, 0.503199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48897,-99) , 
4, 4.56233, 1, 0, 0.508149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471097,-99) , 
2, -0.0781625, 1, 0, 0.480481,-99) , 
2, 0.071474, 0, 0, 0.486185,-99) , 
0, 0.499995, 1, 0, 0.497774,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0327134);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435389,-99) , 
5, 0.99981, 0, 0, 0.514825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464707,-99) , 
8, 1.50057, 0, 0, 0.495812,-99) , 
6, -0.461409, 1, 0, 0.500296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442834,-99) , 
5, 0.996191, 0, 0, 0.498725,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0155708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492006,-99) , 
8, 1.4315, 0, 0, 0.531644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480911,-99) , 
8, 1.11638, 0, 0, 0.496802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44005,-99) , 
12, -0.811599, 0, 0, 0.494187,-99) , 
10, -1.85714, 1, 0, 0.496331,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0378225);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491549,-99) , 
5, 0.999986, 0, 0, 0.530937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459059,-99) , 
5, 0.999905, 0, 0, 0.516256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488703,-99) , 
11, -1.67996, 1, 0, 0.494951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425199,-99) , 
7, 0.0238027, 1, 0, 0.492341,-99) , 
6, -0.549649, 1, 0, 0.496439,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0358445);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498019,-99) , 
3, 1.20573, 0, 0, 0.534665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479534,-99) , 
3, 0.809758, 0, 0, 0.502416,-99) , 
10, -1.28574, 1, 0, 0.505408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463356,-99) , 
12, -0.735703, 0, 0, 0.510832,-99) , 
NN(
0, 
0, 
-1, -0.669044, 1, -1, 0.442981,-99) , 
11, -2.30723, 1, 0, 0.478298,-99) , 
12, 0.116956, 0, 0, 0.500625,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0207028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486917,-99) , 
8, 1.43102, 0, 0, 0.524579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48493,-99) , 
12, 1.06716, 0, 0, 0.496221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442637,-99) , 
12, -0.649978, 0, 0, 0.49343,-99) , 
10, -1.57141, 1, 0, 0.496247,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0300924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475928,-99) , 
13, 1.5838, 0, 0, 0.507847,-99) , 
6, -0.465789, 1, 0, 0.526978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489501,-99) , 
2, 0.0712588, 0, 0, 0.492796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44812,-99) , 
12, -0.646778, 0, 0, 0.49046,-99) , 
10, -1.57144, 1, 0, 0.493775,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0230316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.24501, 0, 1, 0.538566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492326,-99) , 
11, 1.20463, 0, 0, 0.498468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454907,-99) , 
12, -0.808312, 0, 0, 0.496449,-99) , 
10, -1.85713, 1, 0, 0.498889,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0153284);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490612,-99) , 
3, 1.24394, 0, 0, 0.529922,-99) , 
NN(
0, 
0, 
-1, -0.73156, 0, -1, 0.4958,-99) , 
10, -1.85715, 1, 0, 0.49777,-99) , 
3, 2.73085, 0, 0, 0.499551,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.021647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.376677, 1, 1, 0.528703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496001,-99) , 
5, 0.999524, 1, 0, 0.501104,-99) , 
10, -1.57145, 1, 0, 0.503615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463083,-99) , 
4, 9.37401, 1, 0, 0.501911,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0134416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.72271, 0, 1, 0.536113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498488,-99) , 
10, -1.85708, 1, 0, 0.500529,-99) , 
2, 0.214127, 0, 0, 0.502666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461862,-99) , 
4, 9.42577, 1, 0, 0.500955,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0204058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.79144, 0, 1, 0.525925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499854,-99) , 
6, -0.447633, 1, 0, 0.504354,-99) , 
NN(
0, 
0, 
-1, 4.71377, 0, -1, 0.459204,-99) , 
8, 1.19607, 0, 0, 0.499402,-99) , 
12, 8.07998, 0, 0, 0.501867,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0201426);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46611,-99) , 
8, 0.933914, 0, 0, 0.503629,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.464081,-99) , 
7, 0.0238014, 1, 0, 0.501507,-99) , 
6, -0.819757, 1, 0, 0.502928,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0309434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39649, 0, 1, 0.538427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496278,-99) , 
3, 1.8985, 0, 0, 0.502228,-99) , 
10, -1.28572, 1, 0, 0.505671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530521,-99) , 
NN(
0, 
0, 
-1, -0.587142, 0, -1, 0.454195,-99) , 
11, -2.63921, 1, 0, 0.483532,-99) , 
12, -0.00766644, 0, 0, 0.50222,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0376579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999988, 0, 1, 0.52322,-99) , 
NN(
0, 
0, 
-1, -0.420958, 0, -1, 0.449125,-99) , 
5, 0.999741, 0, 0, 0.513968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463246,-99) , 
3, 1.4721, 0, 0, 0.498873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436621,-99) , 
10, 1.85713, 1, 0, 0.495492,-99) , 
6, -0.189385, 1, 0, 0.503613,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0361033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.32213, 1, 1, 0.512847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470067,-99) , 
6, -0.504912, 1, 0, 0.495251,-99) , 
8, 1.4151, 0, 0, 0.506162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486107,-99) , 
9, -949.113, 0, 0, 0.508088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422706,-99) , 
9, -951.273, 1, 0, 0.469028,-99) , 
5, 0.999524, 1, 0, 0.483386,-99) , 
6, 0.348046, 1, 0, 0.502103,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0317071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480842,-99) , 
11, 0.712631, 0, 0, 0.500654,-99) , 
8, 2.02843, 0, 0, 0.503842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454197,-99) , 
12, -0.605608, 0, 0, 0.491063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43695,-99) , 
10, 1.57145, 1, 0, 0.485594,-99) , 
6, 0.079024, 1, 0, 0.497407,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0347839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452236,-99) , 
8, 1.64438, 0, 0, 0.481194,-99) , 
9, -951.236, 0, 0, 0.510613,-99) , 
NN(
0, 
0, 
-1, 0.525285, 1, -1, 0.491812,-99) , 
10, -1.00001, 1, 0, 0.495531,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0439282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999067, 1, 1, 0.52204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448215,-99) , 
11, 1.85521, 0, 0, 0.495292,-99) , 
8, 1.51902, 0, 0, 0.506419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535822,-99) , 
NN(
0, 
0, 
-1, -0.632274, 0, -1, 0.482268,-99) , 
3, 2.77354, 0, 0, 0.487104,-99) , 
6, 0.0810337, 1, 0, 0.499649,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.027825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44043, 0, 1, 0.541727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449229,-99) , 
4, 8.98818, 1, 0, 0.497967,-99) , 
6, -0.309976, 1, 0, 0.503609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467769,-99) , 
9, -951.227, 1, 0, 0.497232,-99) , 
NN(
0, 
0, 
-1, 1.76397, 0, -1, 0.438237,-99) , 
11, 3.07778, 0, 0, 0.484385,-99) , 
8, 1.34175, 0, 0, 0.498441,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0232774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491282,-99) , 
8, 1.45166, 0, 0, 0.528027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488071,-99) , 
10, 0.224514, 1, 0, 0.497313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45377,-99) , 
12, -0.741647, 0, 0, 0.495045,-99) , 
10, -1.85714, 1, 0, 0.496924,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0206583);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497466,-99) , 
10, -1.28567, 1, 0, 0.500327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446539,-99) , 
11, -1.99855, 1, 0, 0.476413,-99) , 
12, 0.38965, 0, 0, 0.49542,-99) , 
3, 2.73085, 0, 0, 0.497088,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0307599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487053,-99) , 
12, 0.826645, 0, 0, 0.503986,-99) , 
NN(
0, 
0, 
-1, 2.79705, 0, -1, 0.486217,-99) , 
3, 1.13738, 0, 0, 0.499976,-99) , 
NN(
0, 
0, 
-1, 0.490154, 0, -1, 0.466905,-99) , 
0, 0.491424, 0, 0, 0.497773,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0218755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.503155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460454,-99) , 
11, -2.48462, 1, 0, 0.484703,-99) , 
12, 0.301516, 0, 0, 0.499448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450832,-99) , 
5, 0.99619, 0, 0, 0.49811,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0211488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498334,-99) , 
3, 1.24093, 0, 0, 0.523485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491601,-99) , 
8, 1.76253, 0, 0, 0.49867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45185,-99) , 
12, -0.822162, 0, 0, 0.496584,-99) , 
10, -1.85715, 1, 0, 0.498122,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0322264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50428, 0, 1, 0.527462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492663,-99) , 
8, 1.96259, 0, 0, 0.49792,-99) , 
10, -1.00001, 1, 0, 0.502179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5409,-99) , 
NN(
0, 
0, 
-1, -0.661261, 0, -1, 0.449158,-99) , 
11, -2.82139, 1, 0, 0.478082,-99) , 
12, -0.0983186, 0, 0, 0.498753,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0189344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28558, 1, 1, 0.507786,-99) , 
NN(
0, 
0, 
-1, 1.39206, 0, -1, 0.491875,-99) , 
12, 1.89059, 0, 0, 0.499502,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.465952,-99) , 
0, 0.504757, 1, 0, 0.497568,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0346294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.17357, 0, 1, 0.53355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461182,-99) , 
10, 0.718747, 0, 0, 0.475782,-99) , 
9, -43.5495, 1, 0, 0.511463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453264,-99) , 
10, 1.28569, 1, 0, 0.49775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421735,-99) , 
3, 1.19907, 0, 0, 0.493786,-99) , 
11, 1.80972, 0, 0, 0.498927,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0336111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494903,-99) , 
3, 2.20361, 0, 0, 0.497284,-99) , 
10, -1.57143, 1, 0, 0.49961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457438,-99) , 
12, -0.862711, 0, 0, 0.511706,-99) , 
NN(
0, 
0, 
-1, -0.375891, 1, -1, 0.455345,-99) , 
11, -2.29908, 1, 0, 0.481937,-99) , 
12, 0.239737, 0, 0, 0.496144,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0248793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48644,-99) , 
8, 1.0286, 0, 0, 0.502075,-99) , 
10, -1.28564, 1, 0, 0.505894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436274,-99) , 
10, 0.861943, 1, 0, 0.494379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387594,-99) , 
8, 1.39804, 0, 0, 0.488624,-99) , 
12, 1.77483, 0, 0, 0.49728,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0478726);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489398,-99) , 
8, 0.741891, 0, 0, 0.529031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490545,-99) , 
11, -1.39286, 1, 0, 0.496202,-99) , 
12, 9.05629, 0, 0, 0.499434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464104,-99) , 
12, -0.187206, 0, 0, 0.490799,-99) , 
NN(
0, 
0, 
-1, -1.01716, 1, -1, 0.442612,-99) , 
11, -1.83208, 1, 0, 0.475799,-99) , 
12, 0.361928, 0, 0, 0.494268,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0348346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714274, 1, 1, 0.519826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430913,-99) , 
5, 0.999048, 0, 0, 0.499551,-99) , 
9, -2.17862, 0, 0, 0.506369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540072,-99) , 
NN(
0, 
0, 
-1, -0.739486, 0, -1, 0.473314,-99) , 
11, -2.93034, 1, 0, 0.486033,-99) , 
12, 0.239737, 0, 0, 0.50236,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0273953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490246,-99) , 
8, 1.22811, 0, 0, 0.502303,-99) , 
10, -1.28571, 1, 0, 0.506786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438887,-99) , 
10, 0.829539, 1, 0, 0.495509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409392,-99) , 
13, 1.43039, 0, 0, 0.489711,-99) , 
12, 1.72945, 0, 0, 0.49842,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0335017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.973972, 0, 1, 0.532027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466885,-99) , 
10, 0.720309, 0, 0, 0.480592,-99) , 
9, -43.22, 1, 0, 0.512234,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494013,-99) , 
10, -1.85705, 1, 0, 0.497253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398447,-99) , 
13, 1.3021, 0, 0, 0.493582,-99) , 
11, 2.10924, 0, 0, 0.498609,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0403256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714274, 1, 1, 0.518436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428363,-99) , 
5, 0.999048, 0, 0, 0.495321,-99) , 
9, -949.024, 0, 0, 0.503301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466473,-99) , 
12, -0.500511, 0, 0, 0.508834,-99) , 
NN(
0, 
0, 
-1, -0.305382, 1, -1, 0.453141,-99) , 
11, -2.04561, 1, 0, 0.483482,-99) , 
12, 0.413866, 0, 0, 0.498784,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0340768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.23211, 0, 1, 0.5103,-99) , 
NN(
0, 
0, 
-1, 3.08541, 0, -1, 0.4787,-99) , 
8, 1.32129, 0, 0, 0.501854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487296,-99) , 
9, -1.69972, 0, 0, 0.498168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423961,-99) , 
12, 1.17482, 0, 0, 0.486425,-99) , 
10, 0.428555, 1, 0, 0.49668,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.02034);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49976,-99) , 
10, -1.28573, 1, 0, 0.503087,-99) , 
NN(
0, 
0, 
-1, 1.41447, 0, -1, 0.485115,-99) , 
12, 1.89195, 0, 0, 0.49407,-99) , 
3, 2.73085, 0, 0, 0.49556,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0371435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472795,-99) , 
12, 8.35485, 0, 0, 0.501474,-99) , 
8, 1.12913, 0, 0, 0.515512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493353,-99) , 
11, 1.81941, 0, 0, 0.497997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4369,-99) , 
12, 3.56813, 1, 0, 0.493479,-99) , 
11, 3.67998, 0, 0, 0.497923,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0166957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486839,-99) , 
12, 0.436451, 0, 0, 0.500522,-99) , 
10, -2.14284, 1, 0, 0.501982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466561,-99) , 
5, 0.997143, 0, 0, 0.500673,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0476972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462213,-99) , 
3, 1.91252, 1, 0, 0.546946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466363,-99) , 
8, 1.742, 0, 0, 0.49327,-99) , 
9, -949.96, 0, 0, 0.51049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479305,-99) , 
10, 1.36734, 1, 0, 0.497927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416155,-99) , 
9, -950.041, 1, 0, 0.463176,-99) , 
12, 0.438655, 0, 0, 0.493749,-99) , 
10, -0.428558, 1, 0, 0.499864,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0482611);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465802,-99) , 
8, 2.0906, 1, 0, 0.538217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476902,-99) , 
8, 1.94969, 0, 0, 0.495977,-99) , 
9, -949.113, 0, 0, 0.509486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491393,-99) , 
3, 2.04876, 0, 0, 0.495786,-99) , 
NN(
0, 
0, 
-1, -1.83251, 1, -1, 0.457669,-99) , 
12, 0.470221, 0, 0, 0.491059,-99) , 
10, -0.428577, 1, 0, 0.497775,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0225515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4982,-99) , 
5, 0.999524, 1, 0, 0.501841,-99) , 
10, -1.57142, 1, 0, 0.504304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527752,-99) , 
NN(
0, 
0, 
-1, -0.440074, 0, -1, 0.465425,-99) , 
11, -2.78041, 1, 0, 0.483983,-99) , 
12, 0.0308507, 0, 0, 0.501021,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0358315);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476152,-99) , 
8, 2.08991, 1, 0, 0.540091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477114,-99) , 
8, 1.74219, 0, 0, 0.499521,-99) , 
9, -949.657, 0, 0, 0.512506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498851,-99) , 
12, 10.2924, 0, 0, 0.501436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463549,-99) , 
12, 0.245683, 0, 0, 0.498088,-99) , 
10, -0.428592, 1, 0, 0.503336,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0364356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.193448, 1, 1, 0.518207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450324,-99) , 
5, 0.999524, 0, 0, 0.493392,-99) , 
0, 0.493102, 0, 0, 0.51199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477817,-99) , 
9, -951.223, 0, 0, 0.524148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491362,-99) , 
10, -1.5714, 1, 0, 0.495563,-99) , 
5, 0.999524, 1, 0, 0.499997,-99) , 
0, 0.49809, 1, 0, 0.506017,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0253521);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499692,-99) , 
9, -951.286, 0, 0, 0.517442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490639,-99) , 
9, -948.705, 1, 0, 0.502778,-99) , 
10, -0.714295, 1, 0, 0.506793,-99) , 
NN(
0, 
0, 
-1, 1.45938, 0, -1, 0.479332,-99) , 
0, 0.491424, 0, 0, 0.504941,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0253397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495008,-99) , 
12, 0.750086, 0, 0, 0.507484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446591,-99) , 
12, -0.98288, 0, 0, 0.505105,-99) , 
10, -2.14285, 1, 0, 0.50631,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.013825);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540926,-99) , 
NN(
NN(
0, 
0, 
-1, 2.1839, 0, 1, 0.504109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46899,-99) , 
13, 2.66722, 1, 0, 0.502226,-99) , 
3, 2.71032, 0, 0, 0.503714,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0208357);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493612,-99) , 
9, -951.273, 0, 0, 0.511805,-99) , 
NN(
0, 
0, 
-1, 0.460622, 0, -1, 0.495166,-99) , 
10, -0.714317, 1, 0, 0.499761,-99) , 
3, 2.68748, 0, 0, 0.501315,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0185926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464616,-99) , 
8, 2.70021, 1, 0, 0.504261,-99) , 
3, 2.68007, 0, 0, 0.505511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467553,-99) , 
1, 0.0237438, 1, 0, 0.504337,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0321407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.40408, 1, 1, 0.536476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421764,-99) , 
8, 1.42625, 0, 0, 0.498413,-99) , 
11, 1.25769, 0, 0, 0.505573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483558,-99) , 
3, 0.877276, 0, 0, 0.499364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434533,-99) , 
12, 4.94168, 0, 0, 0.488721,-99) , 
13, 1.18327, 0, 0, 0.502321,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0177794);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496948,-99) , 
10, -0.673455, 1, 0, 0.501328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4356,-99) , 
12, -1.07662, 0, 0, 0.499159,-99) , 
10, -2.14285, 1, 0, 0.500417,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.021568);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489589,-99) , 
12, 1.84107, 0, 0, 0.497815,-99) , 
11, -2.95491, 1, 0, 0.499569,-99) , 
6, -0.819757, 1, 0, 0.500926,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0196053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496812,-99) , 
8, 1.45166, 0, 0, 0.524985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495416,-99) , 
3, 1.76304, 0, 0, 0.501253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464581,-99) , 
12, -0.811599, 0, 0, 0.499566,-99) , 
10, -1.85716, 1, 0, 0.50101,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0306647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28548, 1, 1, 0.531573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487739,-99) , 
3, 1.71205, 0, 0, 0.502438,-99) , 
9, -951.203, 0, 0, 0.511783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495334,-99) , 
8, 2.11409, 0, 0, 0.500019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428667,-99) , 
3, 2.36043, 0, 0, 0.470421,-99) , 
12, 0.339136, 0, 0, 0.496973,-99) , 
10, -0.428577, 1, 0, 0.502356,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0351351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99999, 0, 1, 0.523647,-99) , 
NN(
0, 
0, 
-1, 1.08628, 0, -1, 0.462189,-99) , 
5, 0.999799, 0, 0, 0.514835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495574,-99) , 
11, -2.17548, 1, 0, 0.502568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447885,-99) , 
12, -1.09028, 0, 0, 0.499292,-99) , 
6, -0.279389, 1, 0, 0.504974,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0315731);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472715,-99) , 
9, -951.227, 0, 0, 0.530764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477231,-99) , 
9, 0.525285, 1, 0, 0.502947,-99) , 
5, 0.999048, 1, 0, 0.505904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461964,-99) , 
4, 9.42577, 1, 0, 0.504111,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0164424);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497818,-99) , 
10, -0.673441, 1, 0, 0.50197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439785,-99) , 
12, -1.07662, 0, 0, 0.499942,-99) , 
10, -2.14283, 1, 0, 0.501314,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0225739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490633,-99) , 
13, 0.809633, 0, 0, 0.521731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467433,-99) , 
8, 1.19107, 0, 0, 0.501221,-99) , 
12, 8.04958, 0, 0, 0.503164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469098,-99) , 
0, 0.505709, 1, 0, 0.502009,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0316389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466144,-99) , 
12, 13.4628, 0, 0, 0.497323,-99) , 
13, 0.81875, 0, 0, 0.522739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48773,-99) , 
7, 0.00339948, 0, 0, 0.501202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450021,-99) , 
7, 0.0237973, 1, 0, 0.498954,-99) , 
12, 7.95311, 0, 0, 0.501275,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0228381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.999927, 1, 1, 0.507545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4487,-99) , 
10, 0.997133, 1, 0, 0.4991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42947,-99) , 
8, 1.42961, 0, 0, 0.493687,-99) , 
12, 2.16808, 0, 0, 0.499678,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0307543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466915,-99) , 
9, -951.227, 0, 0, 0.524586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493212,-99) , 
10, -1.85713, 1, 0, 0.495782,-99) , 
5, 0.999048, 1, 0, 0.498814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466339,-99) , 
4, 9.14073, 1, 0, 0.497356,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0422412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38561, 1, 1, 0.511057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439303,-99) , 
11, 3.80829, 0, 0, 0.494626,-99) , 
8, 1.30714, 0, 0, 0.506141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462474,-99) , 
11, -2.02141, 1, 0, 0.516237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426121,-99) , 
11, -2.86866, 1, 0, 0.462596,-99) , 
12, -0.411911, 0, 0, 0.485123,-99) , 
12, 0.0997583, 0, 0, 0.502519,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.036065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462402,-99) , 
6, -0.810715, 1, 0, 0.493628,-99) , 
13, 0.837977, 0, 0, 0.515821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490364,-99) , 
11, -1.7594, 1, 0, 0.496688,-99) , 
NN(
0, 
0, 
-1, -1.21423, 0, -1, 0.457573,-99) , 
12, -0.836276, 0, 0, 0.494171,-99) , 
12, 7.62986, 0, 0, 0.496412,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0141309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499136,-99) , 
11, 3.80048, 0, 0, 0.502302,-99) , 
NN(
0, 
0, 
-1, 7.23861, 0, -1, 0.482886,-99) , 
8, 1.12696, 0, 0, 0.499054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457653,-99) , 
10, 2.14279, 1, 0, 0.49801,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0255632);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538286,-99) , 
NN(
NN(
0, 
0, 
-1, 1.44729, 0, 1, 0.508535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440402,-99) , 
11, -1.58701, 1, 0, 0.484688,-99) , 
12, 0.681222, 0, 0, 0.502193,-99) , 
10, -2.14286, 1, 0, 0.503377,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.04239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494256,-99) , 
8, 1.60979, 0, 0, 0.508805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447285,-99) , 
11, -2.81795, 1, 0, 0.473416,-99) , 
12, -0.234654, 0, 0, 0.503045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485271,-99) , 
9, -951.232, 0, 0, 0.498997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426608,-99) , 
12, 1.42394, 0, 0, 0.486841,-99) , 
10, 0.714251, 1, 0, 0.499048,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0265641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480748,-99) , 
8, 0.843488, 0, 0, 0.504619,-99) , 
10, -1.28574, 1, 0, 0.508199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45169,-99) , 
12, -1.04944, 0, 0, 0.499014,-99) , 
NN(
0, 
0, 
-1, -0.339956, 1, -1, 0.449632,-99) , 
8, 1.55335, 0, 0, 0.492926,-99) , 
12, 1.77483, 0, 0, 0.500643,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0346907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.01615, 0, 1, 0.50996,-99) , 
NN(
0, 
0, 
-1, 1.60374, 0, -1, 0.48913,-99) , 
10, 0.428555, 1, 0, 0.50175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445116,-99) , 
12, -1.04949, 0, 0, 0.511638,-99) , 
NN(
0, 
0, 
-1, -0.443567, 0, -1, 0.455092,-99) , 
11, -2.49364, 1, 0, 0.481465,-99) , 
12, -0.0224326, 0, 0, 0.498655,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0258623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47623,-99) , 
13, 0.860159, 0, 0, 0.499702,-99) , 
10, -1.57143, 1, 0, 0.501367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464003,-99) , 
12, -0.553294, 0, 0, 0.497564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426455,-99) , 
10, -0.0678978, 1, 0, 0.485483,-99) , 
12, 0.361928, 0, 0, 0.497903,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0341501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497781,-99) , 
13, 0.789845, 0, 0, 0.522513,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489239,-99) , 
11, 1.17778, 0, 0, 0.496631,-99) , 
NN(
0, 
0, 
-1, 5.27034, 0, -1, 0.46088,-99) , 
8, 1.17011, 0, 0, 0.493126,-99) , 
12, 8.06315, 0, 0, 0.495914,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0359489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473795,-99) , 
12, 1.93164, 0, 0, 0.491527,-99) , 
9, -951.286, 0, 0, 0.512404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491295,-99) , 
9, -949.113, 0, 0, 0.513502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473784,-99) , 
9, -948.705, 1, 0, 0.490374,-99) , 
5, 0.999524, 1, 0, 0.494221,-99) , 
10, -0.999975, 1, 0, 0.497802,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0335083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475041,-99) , 
12, 1.96955, 0, 0, 0.492661,-99) , 
9, -951.236, 0, 0, 0.512948,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487559,-99) , 
3, 0.681961, 0, 0, 0.518797,-99) , 
NN(
0, 
0, 
-1, 1.04971, 0, -1, 0.491054,-99) , 
12, 9.14088, 0, 0, 0.493462,-99) , 
10, -1.00007, 1, 0, 0.497276,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0182299);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498765,-99) , 
10, -1.57129, 1, 0, 0.50267,-99) , 
NN(
0, 
0, 
-1, 2.96843, 0, -1, 0.48536,-99) , 
3, 1.18414, 0, 0, 0.49801,-99) , 
3, 2.55243, 0, 0, 0.500152,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.015009);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540055,-99) , 
NN(
NN(
0, 
0, 
-1, 4.62826, 0, 1, 0.504046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460892,-99) , 
8, 0.930501, 0, 0, 0.501656,-99) , 
12, 11.8934, 0, 0, 0.503365,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0202419);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4948,-99) , 
10, -0.673492, 1, 0, 0.499538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455555,-99) , 
12, -0.960835, 0, 0, 0.49778,-99) , 
10, -2.14286, 1, 0, 0.499279,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0181171);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.527955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457911,-99) , 
7, 0.0237902, 1, 0, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450959,-99) , 
8, 0.940642, 0, 0, 0.500425,-99) , 
12, 9.99987, 0, 0, 0.502193,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0199385);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.715273, 0, 1, 0.527422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496682,-99) , 
11, -2.26948, 1, 0, 0.500755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4529,-99) , 
12, -1.12184, 0, 0, 0.498851,-99) , 
6, -0.730314, 1, 0, 0.501027,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0193434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49047,-99) , 
8, 0.728158, 0, 0, 0.524383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461275,-99) , 
12, -0.995202, 0, 0, 0.502088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446366,-99) , 
8, 0.948447, 0, 0, 0.500035,-99) , 
12, 9.49449, 0, 0, 0.501776,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0307681);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.43696, 0, 1, 0.532508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498057,-99) , 
3, 1.44729, 0, 0, 0.506272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446172,-99) , 
11, -1.52294, 1, 0, 0.487735,-99) , 
12, 0.922954, 0, 0, 0.500621,-99) , 
10, -1.85715, 1, 0, 0.502423,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0250335);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496967,-99) , 
11, -1.90141, 1, 0, 0.501456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423465,-99) , 
11, -2.92435, 1, 0, 0.465888,-99) , 
12, -0.513812, 0, 0, 0.498215,-99) , 
12, 11.9198, 0, 0, 0.499919,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0338947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999985, 0, 1, 0.515342,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.46583,-99) , 
5, 0.999682, 0, 0, 0.50978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491338,-99) , 
9, -949.113, 0, 0, 0.518961,-99) , 
NN(
0, 
0, 
-1, 0.509141, 1, -1, 0.487783,-99) , 
5, 0.999524, 1, 0, 0.495423,-99) , 
6, -0.101659, 1, 0, 0.502724,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.04006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28378, 1, 1, 0.514297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463506,-99) , 
11, 4.70549, 0, 0, 0.497218,-99) , 
8, 1.30714, 0, 0, 0.509054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456723,-99) , 
12, -1.17424, 0, 0, 0.520501,-99) , 
NN(
0, 
0, 
-1, -0.358385, 0, -1, 0.475011,-99) , 
11, -2.52319, 1, 0, 0.491098,-99) , 
12, 0.23922, 0, 0, 0.505537,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0261117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475561,-99) , 
3, 1.20728, 0, 0, 0.525057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496777,-99) , 
5, 0.999524, 1, 0, 0.500099,-99) , 
10, -1.28572, 1, 0, 0.50241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439436,-99) , 
12, -0.385195, 0, 0, 0.469717,-99) , 
11, -2.79305, 1, 0, 0.485338,-99) , 
12, -0.0224326, 0, 0, 0.499805,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0322709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466068,-99) , 
13, 1.37204, 0, 0, 0.493752,-99) , 
9, -949.657, 0, 0, 0.519132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464867,-99) , 
0, 0.493328, 0, 0, 0.516945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483451,-99) , 
9, -949.135, 1, 0, 0.496137,-99) , 
5, 0.999524, 1, 0, 0.499573,-99) , 
10, -1.2857, 1, 0, 0.502218,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0262845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475554,-99) , 
6, -0.764897, 1, 0, 0.498195,-99) , 
8, 1.03603, 0, 0, 0.513253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470623,-99) , 
12, -0.506155, 0, 0, 0.500137,-99) , 
NN(
0, 
0, 
-1, 4.72982, 0, -1, 0.459972,-99) , 
8, 1.24738, 0, 0, 0.497019,-99) , 
6, -0.55117, 1, 0, 0.499809,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0207212);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.45129, 0, 1, 0.522931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494945,-99) , 
4, 4.82129, 1, 0, 0.511881,-99) , 
NN(
0, 
0, 
-1, 1.29289, 0, -1, 0.492359,-99) , 
2, 0.0716093, 0, 0, 0.49593,-99) , 
10, -1.57143, 1, 0, 0.498356,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0239459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.10391, 0, 1, 0.52563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459797,-99) , 
8, 0.966511, 0, 0, 0.488714,-99) , 
9, -40.0028, 1, 0, 0.511482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447656,-99) , 
10, 1.85713, 1, 0, 0.50061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445318,-99) , 
3, 1.20106, 0, 0, 0.496984,-99) , 
11, 2.43801, 0, 0, 0.500631,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0268918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495757,-99) , 
11, 3.72209, 0, 0, 0.50139,-99) , 
10, -1.28533, 1, 0, 0.504023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452859,-99) , 
10, 0.914952, 1, 0, 0.499658,-99) , 
NN(
0, 
0, 
-1, -1.1557, 1, -1, 0.448737,-99) , 
13, 1.65706, 0, 0, 0.489851,-99) , 
12, 1.81325, 0, 0, 0.496909,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0123932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497393,-99) , 
3, 2.46059, 0, 0, 0.498849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469216,-99) , 
6, 0.61578, 1, 0, 0.497492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453007,-99) , 
5, 0.996191, 0, 0, 0.496269,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0323938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.43332, 0, 1, 0.513729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450824,-99) , 
12, 8.46933, 0, 0, 0.488655,-99) , 
3, 0.935756, 0, 0, 0.506332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461165,-99) , 
12, -0.774776, 0, 0, 0.497202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431813,-99) , 
11, 0.508906, 0, 0, 0.456545,-99) , 
8, 1.61131, 0, 0, 0.489921,-99) , 
12, 2.13051, 0, 0, 0.497113,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0303853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476942,-99) , 
10, 1.97953, 1, 0, 0.502015,-99) , 
10, -1.28571, 1, 0, 0.504813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480812,-99) , 
10, -0.532684, 1, 0, 0.493953,-99) , 
NN(
0, 
0, 
-1, 0.109155, 0, -1, 0.447113,-99) , 
8, 1.58206, 0, 0, 0.487475,-99) , 
12, 1.77483, 0, 0, 0.496221,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0442319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466226,-99) , 
12, 6.6698, 0, 0, 0.49339,-99) , 
8, 1.24271, 0, 0, 0.506304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479891,-99) , 
12, -0.0393395, 0, 0, 0.507002,-99) , 
NN(
0, 
0, 
-1, 0.996661, 0, -1, 0.483346,-99) , 
11, -1.59504, 1, 0, 0.489251,-99) , 
6, -0.460478, 1, 0, 0.493177,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0219673);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472574,-99) , 
13, 0.897579, 0, 0, 0.500589,-99) , 
NN(
0, 
0, 
-1, 0.1646, 1, -1, 0.481549,-99) , 
12, 0.546641, 0, 0, 0.496013,-99) , 
10, -2.14286, 1, 0, 0.497537,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0339756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480325,-99) , 
13, 1.75333, 0, 0, 0.496728,-99) , 
9, -949.96, 0, 0, 0.513097,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491309,-99) , 
12, 0.855835, 0, 0, 0.505877,-99) , 
NN(
0, 
0, 
-1, 0.67073, 0, -1, 0.48863,-99) , 
8, 2.1715, 0, 0, 0.49303,-99) , 
10, -1.00003, 1, 0, 0.496988,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0202758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.533475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489783,-99) , 
3, 1.93415, 0, 0, 0.500693,-99) , 
9, -949.024, 0, 0, 0.512495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483205,-99) , 
4, 5.24923, 1, 0, 0.515385,-99) , 
NN(
0, 
0, 
-1, 0.351045, 1, -1, 0.495575,-99) , 
2, 0.152881, 0, 0, 0.497997,-99) , 
2, -0.0715747, 1, 0, 0.500621,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0115659);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499176,-99) , 
10, -1.16329, 1, 0, 0.501815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451393,-99) , 
12, -1.07662, 0, 0, 0.500163,-99) , 
10, -2.14287, 1, 0, 0.501329,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0229551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.145904, 1, 1, 0.528535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49448,-99) , 
9, -948.526, 0, 0, 0.500726,-99) , 
3, 2.18106, 0, 0, 0.502825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436704,-99) , 
9, -950.041, 1, 0, 0.471958,-99) , 
5, 0.999048, 1, 0, 0.484848,-99) , 
6, 0.441156, 1, 0, 0.500535,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0213327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489947,-99) , 
12, 0.744792, 0, 0, 0.503459,-99) , 
10, -2.14286, 1, 0, 0.504736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470943,-99) , 
5, 0.997143, 0, 0, 0.50347,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0152418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496025,-99) , 
13, 1.38452, 0, 0, 0.532774,-99) , 
NN(
NN(
0, 
0, 
-1, 4.78217, 0, 1, 0.503873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453488,-99) , 
9, -951.211, 1, 0, 0.484923,-99) , 
3, 0.978039, 0, 0, 0.50107,-99) , 
10, -1.85714, 1, 0, 0.50285,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0414483);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474104,-99) , 
12, -0.646301, 0, 0, 0.519311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461919,-99) , 
11, 1.8688, 0, 0, 0.490208,-99) , 
8, 1.51327, 0, 0, 0.506938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494399,-99) , 
8, 2.10024, 0, 0, 0.499056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44654,-99) , 
12, 0.557772, 0, 0, 0.493272,-99) , 
10, -0.14287, 1, 0, 0.499553,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0308194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460845,-99) , 
11, -2.4746, 1, 0, 0.493221,-99) , 
12, -0.0446836, 0, 0, 0.518205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498217,-99) , 
8, 1.40646, 0, 0, 0.527504,-99) , 
NN(
0, 
0, 
-1, 0.367477, 0, -1, 0.493636,-99) , 
10, -1.28573, 1, 0, 0.497198,-99) , 
11, -1.66992, 1, 0, 0.500986,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0202235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491136,-99) , 
12, 0.483072, 0, 0, 0.504101,-99) , 
10, -2.14278, 1, 0, 0.505545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461979,-99) , 
5, 0.996191, 0, 0, 0.504362,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0220993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494457,-99) , 
12, 0.932305, 0, 0, 0.504801,-99) , 
10, -1.85716, 1, 0, 0.506474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49061,-99) , 
4, 2.82941, 0, 0, 0.500284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44815,-99) , 
6, 0.164462, 1, 0, 0.484166,-99) , 
0, 0.492376, 0, 0, 0.504319,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.030456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460952,-99) , 
12, 3.8024, 1, 0, 0.503038,-99) , 
11, 3.85429, 0, 0, 0.505989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479396,-99) , 
13, 0.808948, 0, 0, 0.506271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440438,-99) , 
12, 7.24914, 0, 0, 0.485087,-99) , 
8, 1.11649, 0, 0, 0.502627,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0100195);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535725,-99) , 
NN(
0, 
0, 
-1, -0.810912, 0, -1, 0.49717,-99) , 
10, -2.14286, 1, 0, 0.498437,-99) , 
3, 2.71032, 0, 0, 0.499747,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0160808);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.735077, 0, 1, 0.522945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498558,-99) , 
11, 3.68614, 0, 0, 0.502054,-99) , 
NN(
0, 
0, 
-1, -0.143595, 0, -1, 0.465914,-99) , 
8, 1.05842, 0, 0, 0.499497,-99) , 
6, -0.730143, 1, 0, 0.501291,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0116312);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499573,-99) , 
10, -1.16329, 1, 0, 0.502313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454103,-99) , 
12, -1.0097, 0, 0, 0.500529,-99) , 
10, -2.14287, 1, 0, 0.50182,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.019571);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484039,-99) , 
3, 1.2568, 0, 0, 0.515207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497852,-99) , 
5, 0.999093, 1, 0, 0.50058,-99) , 
10, -1.00002, 1, 0, 0.503453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460758,-99) , 
5, 0.996191, 0, 0, 0.5023,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0214127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.61432, 0, 1, 0.507799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454006,-99) , 
12, 7.45665, 0, 0, 0.491077,-99) , 
8, 1.11605, 0, 0, 0.505128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467642,-99) , 
0, 0.489519, 0, 0, 0.504161,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0345003);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.25515, 0, 1, 0.527826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48152,-99) , 
3, 0.815781, 0, 0, 0.50576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455581,-99) , 
11, -1.58024, 1, 0, 0.491309,-99) , 
12, 0.999443, 0, 0, 0.501121,-99) , 
10, -1.85714, 1, 0, 0.50261,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0101899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 0, 1, 0.517484,-99) , 
NN(
0, 
0, 
-1, 0.527843, 1, -1, 0.497732,-99) , 
2, -0.0919791, 1, 0, 0.500282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4633,-99) , 
2, -0.357242, 0, 0, 0.499298,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0128231);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462564,-99) , 
5, 0.997143, 0, 0, 0.501411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454902,-99) , 
8, 2.71163, 1, 0, 0.499952,-99) , 
3, 2.55244, 0, 0, 0.501722,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0206972);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496539,-99) , 
11, -2.23588, 1, 0, 0.501046,-99) , 
NN(
0, 
0, 
-1, -1.20586, 0, -1, 0.463561,-99) , 
12, -0.826513, 0, 0, 0.49872,-99) , 
12, 10.4589, 0, 0, 0.500298,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0296309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495866,-99) , 
12, 0.590686, 0, 0, 0.509354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4881,-99) , 
9, -948.526, 0, 0, 0.497564,-99) , 
11, -1.0324, 1, 0, 0.501007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466396,-99) , 
0, 0.505709, 1, 0, 0.499858,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0188657);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492528,-99) , 
6, -0.0984673, 1, 0, 0.522397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494758,-99) , 
8, 1.70297, 0, 0, 0.501673,-99) , 
10, -1.57143, 1, 0, 0.503506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460139,-99) , 
2, -0.357184, 0, 0, 0.502341,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0228635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490331,-99) , 
13, 0.713083, 0, 0, 0.526959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496833,-99) , 
11, 0.964384, 0, 0, 0.503668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459495,-99) , 
8, 0.958572, 0, 0, 0.501938,-99) , 
12, 9.48182, 0, 0, 0.503726,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0197667);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491618,-99) , 
10, 0.795926, 1, 0, 0.503821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459403,-99) , 
12, -1.03079, 0, 0, 0.502223,-99) , 
10, -2.1428, 1, 0, 0.503294,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0251389);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478691,-99) , 
9, -40.0028, 1, 0, 0.511083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439817,-99) , 
8, 1.35471, 0, 0, 0.49693,-99) , 
11, 2.68905, 0, 0, 0.500536,-99) , 
3, 2.55244, 0, 0, 0.502079,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0192142);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482121,-99) , 
10, 2.02033, 1, 0, 0.505444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413299,-99) , 
10, 0.321811, 1, 0, 0.488313,-99) , 
12, 0.836727, 0, 0, 0.500368,-99) , 
10, -2.14285, 1, 0, 0.501613,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0142529);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497431,-99) , 
6, -0.613878, 1, 0, 0.499619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450611,-99) , 
13, 0.905599, 0, 0, 0.497777,-99) , 
12, 10.4707, 0, 0, 0.499215,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0455354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438816,-99) , 
10, 0.120054, 1, 0, 0.496599,-99) , 
12, 0.639388, 0, 0, 0.508827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485688,-99) , 
11, 1.45253, 1, 0, 0.510499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460645,-99) , 
12, 2.14738, 0, 0, 0.488606,-99) , 
9, -1.58995, 0, 0, 0.495515,-99) , 
11, -0.988433, 1, 0, 0.499509,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0192709);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492699,-99) , 
9, -2.17862, 0, 0, 0.498201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466156,-99) , 
8, 2.74975, 1, 0, 0.496868,-99) , 
3, 2.73084, 0, 0, 0.497998,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0152936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.133937, 0, 1, 0.526687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491256,-99) , 
9, -40.0028, 1, 0, 0.499217,-99) , 
10, -1.85714, 1, 0, 0.500748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460336,-99) , 
5, 0.996191, 0, 0, 0.499653,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0292456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487796,-99) , 
13, 1.39775, 0, 0, 0.524479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492179,-99) , 
3, 1.74717, 0, 0, 0.497902,-99) , 
10, -1.28572, 1, 0, 0.500343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524614,-99) , 
NN(
0, 
0, 
-1, -0.436083, 0, -1, 0.462844,-99) , 
11, -2.82139, 1, 0, 0.4826,-99) , 
12, -0.0983186, 0, 0, 0.497852,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.027625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.15401, 1, 1, 0.507023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429935,-99) , 
11, -2.79059, 1, 0, 0.470385,-99) , 
12, -0.574848, 0, 0, 0.502315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479139,-99) , 
9, -43.5495, 1, 0, 0.499358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437817,-99) , 
12, 1.55802, 0, 0, 0.492795,-99) , 
8, 1.51253, 0, 0, 0.498744,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0283148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467897,-99) , 
12, 7.32984, 0, 0, 0.502673,-99) , 
13, 1.09336, 0, 0, 0.514779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495393,-99) , 
6, -0.3709, 1, 0, 0.498844,-99) , 
NN(
0, 
0, 
-1, 1.21569, 0, -1, 0.466599,-99) , 
8, 1.37657, 0, 0, 0.494928,-99) , 
11, 4.02185, 0, 0, 0.498741,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0254636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469141,-99) , 
12, 8.46571, 0, 0, 0.493563,-99) , 
8, 1.06737, 0, 0, 0.511624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446593,-99) , 
12, -1.16322, 0, 0, 0.500131,-99) , 
NN(
0, 
0, 
-1, 1.13565, 0, -1, 0.467474,-99) , 
8, 1.39804, 0, 0, 0.495783,-99) , 
11, 3.88413, 0, 0, 0.498876,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0244173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487015,-99) , 
3, 1.17784, 0, 0, 0.533411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486411,-99) , 
6, -0.107028, 1, 0, 0.517251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492078,-99) , 
3, 1.41897, 0, 0, 0.498847,-99) , 
NN(
0, 
0, 
-1, 0.33845, 1, -1, 0.485603,-99) , 
12, 1.09184, 0, 0, 0.494492,-99) , 
10, -1.57141, 1, 0, 0.496495,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0269098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.236, 0, 1, 0.519253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446063,-99) , 
12, -1.23838, 0, 0, 0.476456,-99) , 
12, -0.678671, 0, 0, 0.509923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499916,-99) , 
10, 1.76184, 0, 0, 0.504815,-99) , 
NN(
0, 
0, 
-1, 1.78135, 0, -1, 0.48506,-99) , 
11, 0.661454, 0, 0, 0.494074,-99) , 
10, -0.714283, 1, 0, 0.498369,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0247286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.37557, 0, 1, 0.527729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480793,-99) , 
12, 11.6165, 0, 0, 0.497371,-99) , 
3, 0.914935, 0, 0, 0.514008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430522,-99) , 
10, 1.8571, 1, 0, 0.499554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424117,-99) , 
13, 1.30057, 0, 0, 0.496876,-99) , 
11, 2.10924, 0, 0, 0.5015,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0388374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484138,-99) , 
3, 1.71071, 0, 0, 0.497912,-99) , 
9, -949.657, 0, 0, 0.512268,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496157,-99) , 
8, 1.12906, 0, 0, 0.507414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483611,-99) , 
11, -2.22465, 1, 0, 0.487889,-99) , 
11, 3.57713, 0, 0, 0.492271,-99) , 
10, -0.999979, 1, 0, 0.496181,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0289385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.06261, 0, 1, 0.522796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475093,-99) , 
6, -0.574054, 1, 0, 0.490563,-99) , 
9, -43.6462, 1, 0, 0.510391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495834,-99) , 
11, -2.01055, 1, 0, 0.501555,-99) , 
NN(
0, 
0, 
-1, -2.75354, 1, -1, 0.467947,-99) , 
12, -0.446247, 0, 0, 0.497143,-99) , 
11, 2.10924, 0, 0, 0.500732,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0269972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493434,-99) , 
3, 1.21413, 0, 0, 0.532059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493366,-99) , 
10, 0.550994, 1, 0, 0.501511,-99) , 
10, -1.28572, 1, 0, 0.504245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549158,-99) , 
NN(
0, 
0, 
-1, -0.683025, 0, -1, 0.472093,-99) , 
11, -3.00576, 1, 0, 0.486906,-99) , 
12, 0.0998317, 0, 0, 0.501283,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0259714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492542,-99) , 
11, 0.311798, 0, 0, 0.503782,-99) , 
8, 2.25584, 0, 0, 0.506128,-99) , 
NN(
NN(
0, 
0, 
-1, 0.997324, 0, 1, 0.522924,-99) , 
NN(
0, 
0, 
-1, -951.266, 1, -1, 0.482797,-99) , 
5, 0.999048, 1, 0, 0.492859,-99) , 
6, 0.261107, 1, 0, 0.50309,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0142751);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.285033, 1, 1, 0.534001,-99) , 
NN(
NN(
0, 
0, 
-1, 5.597, 0, 1, 0.503112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454756,-99) , 
10, 0.222493, 0, 0, 0.477879,-99) , 
3, 0.818724, 0, 0, 0.500809,-99) , 
10, -1.85714, 1, 0, 0.502647,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0344331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470867,-99) , 
9, 0.525285, 1, 0, 0.513541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443805,-99) , 
11, 0.142083, 0, 0, 0.473187,-99) , 
10, 1.28585, 1, 0, 0.507255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494534,-99) , 
10, -1.5716, 1, 0, 0.498008,-99) , 
NN(
0, 
0, 
-1, -1.50178, 1, -1, 0.461713,-99) , 
12, 0.96018, 0, 0, 0.494004,-99) , 
8, 1.76286, 0, 0, 0.500102,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0173915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496562,-99) , 
9, -949.024, 0, 0, 0.501664,-99) , 
3, 2.5018, 0, 0, 0.503107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463592,-99) , 
5, 0.999524, 1, 0, 0.480307,-99) , 
6, 0.528609, 1, 0, 0.501154,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0224396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49599,-99) , 
6, -0.285033, 1, 0, 0.531702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495183,-99) , 
10, 0.224463, 1, 0, 0.50364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458314,-99) , 
12, -0.72173, 0, 0, 0.501246,-99) , 
10, -1.85715, 1, 0, 0.502935,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0185447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48723,-99) , 
12, 0.518183, 0, 0, 0.502041,-99) , 
3, 2.5715, 0, 0, 0.50337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471056,-99) , 
0, 0.505709, 1, 0, 0.502294,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0173949);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551997,-99) , 
NN(
NN(
0, 
0, 
-1, 2.3158, 0, 1, 0.504508,-99) , 
NN(
0, 
0, 
-1, 0.225407, 1, -1, 0.485188,-99) , 
12, 0.681222, 0, 0, 0.499379,-99) , 
10, -2.14286, 1, 0, 0.501088,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0109839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49801,-99) , 
2, 0.214539, 0, 0, 0.499594,-99) , 
10, -2.14286, 1, 0, 0.500806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471471,-99) , 
5, 0.997619, 0, 0, 0.499522,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0215203);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.43696, 0, 1, 0.528738,-99) , 
NN(
NN(
0, 
0, 
-1, 2.30431, 0, 1, 0.503454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454339,-99) , 
11, -1.504, 1, 0, 0.491149,-99) , 
12, 0.922954, 0, 0, 0.49972,-99) , 
10, -1.85714, 1, 0, 0.501311,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0337197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446488,-99) , 
12, -1.08566, 0, 0, 0.515121,-99) , 
NN(
0, 
0, 
-1, -0.588931, 1, -1, 0.473869,-99) , 
3, 1.12507, 0, 0, 0.505374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495882,-99) , 
12, 3.2902, 1, 0, 0.503018,-99) , 
NN(
0, 
0, 
-1, 1.63474, 0, -1, 0.488272,-99) , 
11, 1.19235, 0, 0, 0.493982,-99) , 
10, -0.714297, 1, 0, 0.497065,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0119774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.525526, 0, 1, 0.519709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471053,-99) , 
12, -0.518331, 0, 0, 0.500171,-99) , 
10, -1.57144, 1, 0, 0.501896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472268,-99) , 
0, 0.505709, 1, 0, 0.500888,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0346237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.6968, 0, 1, 0.531082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466438,-99) , 
12, 8.25624, 0, 0, 0.495631,-99) , 
8, 1.07036, 0, 0, 0.511437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481864,-99) , 
10, 0.714373, 1, 0, 0.502541,-99) , 
NN(
0, 
0, 
-1, 0.703317, 0, -1, 0.46535,-99) , 
8, 1.45043, 0, 0, 0.4981,-99) , 
11, 2.33638, 0, 0, 0.501515,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0234135);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492905,-99) , 
3, 1.17503, 0, 0, 0.535282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485064,-99) , 
6, -0.0992137, 1, 0, 0.51867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48833,-99) , 
9, -951.286, 1, 0, 0.516175,-99) , 
NN(
0, 
0, 
-1, -0.141796, 0, -1, 0.492931,-99) , 
3, 2.2528, 0, 0, 0.495951,-99) , 
10, -1.5714, 1, 0, 0.497949,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0227876);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497971,-99) , 
8, 1.27702, 0, 0, 0.544775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498849,-99) , 
8, 2.38067, 0, 0, 0.502295,-99) , 
10, -1.57142, 1, 0, 0.504888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538936,-99) , 
NN(
0, 
0, 
-1, -0.787686, 0, -1, 0.456753,-99) , 
11, -2.92477, 1, 0, 0.481397,-99) , 
12, -0.190733, 0, 0, 0.501893,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0259718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493355,-99) , 
3, 1.17091, 0, 0, 0.534028,-99) , 
NN(
0, 
0, 
-1, 2.10019, 0, 1, 0.50342,-99) , 
10, -1.28572, 1, 0, 0.50609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475913,-99) , 
11, -2.04103, 1, 0, 0.509316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430563,-99) , 
11, -2.80092, 1, 0, 0.469171,-99) , 
12, -0.494884, 0, 0, 0.490928,-99) , 
12, 0.239737, 0, 0, 0.503125,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0150311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494727,-99) , 
12, 0.316986, 0, 0, 0.525131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499545,-99) , 
8, 2.1003, 0, 0, 0.503062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431873,-99) , 
10, 0.254698, 1, 0, 0.489803,-99) , 
12, 0.831273, 0, 0, 0.499268,-99) , 
10, -1.85713, 1, 0, 0.500693,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0295325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499913,-99) , 
3, 1.20269, 0, 0, 0.532842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494999,-99) , 
8, 1.88097, 0, 0, 0.500749,-99) , 
10, -1.28573, 1, 0, 0.503608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472534,-99) , 
11, -2.47843, 1, 0, 0.496178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442309,-99) , 
12, -1.2468, 0, 0, 0.486977,-99) , 
12, 0.116956, 0, 0, 0.500708,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0205154);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.133937, 0, 1, 0.533736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4755,-99) , 
8, 0.700667, 0, 0, 0.505015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426606,-99) , 
10, 0.389613, 1, 0, 0.488784,-99) , 
12, 1.06286, 0, 0, 0.499605,-99) , 
10, -1.85715, 1, 0, 0.501496,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0410793);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490921,-99) , 
5, 0.999959, 0, 0, 0.510064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434015,-99) , 
5, 0.999148, 0, 0, 0.506326,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48194,-99) , 
12, 1.30391, 0, 0, 0.493728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430011,-99) , 
10, 1.85719, 1, 0, 0.48985,-99) , 
6, -0.00920552, 1, 0, 0.499468,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0262975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466084,-99) , 
12, 8.41998, 0, 0, 0.497974,-99) , 
8, 1.03874, 0, 0, 0.513509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497002,-99) , 
11, 1.62001, 0, 0, 0.501196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40872,-99) , 
13, 1.21535, 0, 0, 0.498055,-99) , 
11, 3.93894, 0, 0, 0.501035,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0149718);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.06635, 1, 1, 0.525461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463579,-99) , 
5, 0.998095, 0, 0, 0.502607,-99) , 
NN(
0, 
0, 
-1, 2.52016, 1, -1, 0.477698,-99) , 
6, 0.436968, 1, 0, 0.500422,-99) , 
3, 2.54027, 0, 0, 0.501948,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0154785);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49822,-99) , 
8, 2.01674, 0, 0, 0.501849,-99) , 
NN(
0, 
0, 
-1, -0.649398, 0, -1, 0.485012,-99) , 
6, 0.250013, 1, 0, 0.498623,-99) , 
3, 2.5715, 0, 0, 0.499988,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0189901);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494948,-99) , 
3, 1.20728, 0, 0, 0.529484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499853,-99) , 
5, 0.999524, 1, 0, 0.503287,-99) , 
10, -1.28571, 1, 0, 0.505769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515913,-99) , 
NN(
0, 
0, 
-1, -0.67827, 0, -1, 0.461913,-99) , 
11, -2.90947, 1, 0, 0.478991,-99) , 
12, -0.235092, 0, 0, 0.502514,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0167861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495792,-99) , 
11, 0.311295, 0, 0, 0.502218,-99) , 
10, -2.14285, 1, 0, 0.503348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461826,-99) , 
5, 0.996191, 0, 0, 0.502225,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0161514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.267781, 0, 1, 0.528687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475074,-99) , 
13, 0.704315, 0, 0, 0.504071,-99) , 
10, -1.85715, 1, 0, 0.505415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478829,-99) , 
5, 0.997619, 0, 0, 0.504259,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0310976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475498,-99) , 
12, -0.746314, 0, 0, 0.523566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458172,-99) , 
11, 0.0528224, 0, 0, 0.497699,-99) , 
13, 1.64896, 0, 0, 0.509325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496898,-99) , 
3, 2.23668, 0, 0, 0.499476,-99) , 
NN(
0, 
0, 
-1, -0.0325956, 0, -1, 0.475169,-99) , 
12, 0.315635, 0, 0, 0.497072,-99) , 
10, -0.428531, 1, 0, 0.501505,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0185607);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.38193, 0, 1, 0.527796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493942,-99) , 
9, -950.041, 1, 0, 0.519212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459676,-99) , 
12, -0.254405, 0, 0, 0.501092,-99) , 
3, 2.20925, 0, 0, 0.50369,-99) , 
10, -1.85714, 1, 0, 0.505009,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0192066);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489965,-99) , 
12, 0.189837, 0, 0, 0.51296,-99) , 
NN(
0, 
0, 
-1, 0.523061, 0, -1, 0.496644,-99) , 
11, -1.47442, 1, 0, 0.500008,-99) , 
10, -2.14286, 1, 0, 0.501326,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.012009);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499422,-99) , 
4, 4.5594, 1, 0, 0.515761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474516,-99) , 
6, 0.617611, 1, 0, 0.500072,-99) , 
2, -0.0714997, 1, 0, 0.502919,-99) , 
10, -2.14286, 1, 0, 0.503931,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0190567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491492,-99) , 
9, -12.1436, 1, 0, 0.531474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490547,-99) , 
10, 0.714389, 1, 0, 0.518449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499883,-99) , 
3, 1.57509, 0, 0, 0.504306,-99) , 
NN(
0, 
0, 
-1, -0.239893, 1, -1, 0.486498,-99) , 
12, 0.758589, 0, 0, 0.500374,-99) , 
3, 2.23668, 0, 0, 0.502722,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0196424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497306,-99) , 
9, -950.041, 1, 0, 0.526139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492731,-99) , 
13, 0.831224, 0, 0, 0.513343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417728,-99) , 
8, 1.26959, 0, 0, 0.498504,-99) , 
11, 2.7817, 0, 0, 0.502328,-99) , 
3, 2.41215, 0, 0, 0.50435,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0119619);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.37428, 0, 1, 0.520924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475331,-99) , 
12, -0.153227, 0, 0, 0.499493,-99) , 
3, 2.55244, 0, 0, 0.500852,-99) , 
10, -1.57144, 1, 0, 0.502611,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0385938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493954,-99) , 
12, -0.145147, 0, 0, 0.525913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486801,-99) , 
9, -1.26137, 0, 0, 0.496518,-99) , 
13, 2.00878, 0, 0, 0.504487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468003,-99) , 
10, 2.02039, 1, 0, 0.502037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418845,-99) , 
12, 0.98183, 0, 0, 0.49233,-99) , 
10, 0.428564, 1, 0, 0.500392,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0191778);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484629,-99) , 
12, -0.520175, 0, 0, 0.534711,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.506841,-99) , 
13, 1.33983, 0, 0, 0.524087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496509,-99) , 
11, -1.67868, 1, 0, 0.500545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471103,-99) , 
8, 0.702841, 0, 0, 0.499445,-99) , 
10, -1.57143, 1, 0, 0.501613,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0214381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498991,-99) , 
9, -951.286, 1, 0, 0.525487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494857,-99) , 
8, 1.25642, 0, 0, 0.505962,-99) , 
NN(
0, 
0, 
-1, 1.2853, 1, -1, 0.49242,-99) , 
11, 0.294969, 0, 0, 0.499362,-99) , 
3, 2.41215, 0, 0, 0.501612,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0349386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484056,-99) , 
12, 8.20308, 0, 0, 0.506456,-99) , 
8, 1.09144, 0, 0, 0.517434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491275,-99) , 
10, 0.428585, 1, 0, 0.506144,-99) , 
NN(
0, 
0, 
-1, 1.22642, 0, -1, 0.46389,-99) , 
8, 1.39206, 0, 0, 0.500999,-99) , 
11, 3.67998, 0, 0, 0.504321,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0138092);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.277615, 1, 1, 0.531426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49219,-99) , 
10, 0.455836, 1, 0, 0.513116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468243,-99) , 
12, -0.134511, 0, 0, 0.498802,-99) , 
3, 2.09346, 0, 0, 0.501448,-99) , 
10, -1.85715, 1, 0, 0.503094,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0251419);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480383,-99) , 
10, 1.00011, 1, 0, 0.531523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457087,-99) , 
12, -0.0231252, 0, 0, 0.487619,-99) , 
9, -949.657, 1, 0, 0.512192,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28574, 1, 1, 0.504442,-99) , 
NN(
0, 
0, 
-1, 1.65244, 0, -1, 0.488732,-99) , 
11, 0.00413985, 0, 0, 0.498614,-99) , 
3, 2.0788, 0, 0, 0.501157,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0217457);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.550712, 1, 1, 0.527715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490608,-99) , 
3, 1.17247, 0, 0, 0.518608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49023,-99) , 
8, 1.86281, 0, 0, 0.495098,-99) , 
10, -1.28571, 1, 0, 0.498286,-99) , 
3, 2.51744, 0, 0, 0.500218,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.00858981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544155,-99) , 
NN(
NN(
0, 
0, 
-1, 2.41215, 0, 1, 0.50179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465858,-99) , 
12, -1.0097, 0, 0, 0.500475,-99) , 
10, -2.14286, 1, 0, 0.501874,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0155508);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495011,-99) , 
6, 0.474204, 1, 0, 0.51299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483929,-99) , 
12, 1.26401, 0, 0, 0.495497,-99) , 
3, 2.22639, 0, 0, 0.497886,-99) , 
10, -2.14286, 1, 0, 0.498895,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.025508);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.38448, 0, 1, 0.52617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490535,-99) , 
8, 1.74167, 0, 0, 0.501528,-99) , 
NN(
0, 
0, 
-1, 1.44316, 0, -1, 0.487168,-99) , 
10, 0.918336, 1, 0, 0.498587,-99) , 
10, -1.85713, 1, 0, 0.50012,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0138288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497556,-99) , 
13, 2.96026, 1, 0, 0.516708,-99) , 
NN(
NN(
0, 
0, 
-1, 2.29305, 0, 1, 0.502575,-99) , 
NN(
0, 
0, 
-1, -0.0771873, 1, -1, 0.483787,-99) , 
12, 0.695411, 0, 0, 0.498257,-99) , 
3, 2.39456, 0, 0, 0.499912,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.00716077);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.54027, 0, 1, 0.502463,-99) , 
NN(
0, 
0, 
-1, 1.35919, 0, -1, 0.480911,-99) , 
0, 0.491424, 0, 0, 0.501015,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0181761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527277,-99) , 
NN(
NN(
0, 
0, 
-1, 1.21192, 0, 1, 0.5081,-99) , 
NN(
0, 
0, 
-1, 1.30519, 0, -1, 0.492124,-99) , 
11, 2.70344, 0, 0, 0.49618,-99) , 
3, 2.55243, 0, 0, 0.498035,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0206609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714477, 1, 1, 0.530171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467734,-99) , 
12, -0.832954, 0, 0, 0.497994,-99) , 
6, -0.316713, 1, 0, 0.502065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487509,-99) , 
13, 0.930808, 0, 0, 0.499929,-99) , 
NN(
0, 
0, 
-1, 1.25732, 0, -1, 0.450233,-99) , 
11, 3.07778, 0, 0, 0.489853,-99) , 
8, 1.3361, 0, 0, 0.498819,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0295798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475224,-99) , 
8, 1.45166, 0, 0, 0.496612,-99) , 
9, -951.286, 0, 0, 0.516671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495698,-99) , 
10, 0.142675, 1, 0, 0.509261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487181,-99) , 
11, 5.19415, 0, 0, 0.491237,-99) , 
8, 2.15556, 0, 0, 0.495853,-99) , 
10, -1.28574, 1, 0, 0.49863,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0267295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475337,-99) , 
11, 0.738368, 0, 0, 0.495762,-99) , 
9, -949.657, 0, 0, 0.514269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492453,-99) , 
3, 1.77479, 0, 0, 0.49746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468066,-99) , 
12, -0.444287, 0, 0, 0.495734,-99) , 
10, -1.28571, 1, 0, 0.49821,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0293479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464854,-99) , 
12, -0.93943, 0, 0, 0.516411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436602,-99) , 
12, 4.98642, 0, 0, 0.481075,-99) , 
13, 1.18327, 0, 0, 0.509676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497699,-99) , 
12, 11.0864, 0, 0, 0.499796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455281,-99) , 
12, 0.130838, 0, 0, 0.496611,-99) , 
10, -0.428597, 1, 0, 0.501327,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0201577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496889,-99) , 
11, 1.26029, 0, 0, 0.503381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453669,-99) , 
12, 13.0846, 0, 0, 0.482679,-99) , 
13, 0.829322, 0, 0, 0.501873,-99) , 
NN(
0, 
0, 
-1, 0.0739521, 1, -1, 0.480909,-99) , 
0, 0.491424, 0, 0, 0.500467,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0166449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.03677, 1, 1, 0.505275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455198,-99) , 
12, -1.16502, 0, 0, 0.503395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457226,-99) , 
12, 11.3966, 0, 0, 0.484896,-99) , 
8, 0.905056, 0, 0, 0.50172,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0320354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.40398, 1, 1, 0.533674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475947,-99) , 
8, 1.66283, 0, 0, 0.499925,-99) , 
11, 1.23855, 0, 0, 0.504438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489341,-99) , 
8, 1.01211, 0, 0, 0.503445,-99) , 
NN(
0, 
0, 
-1, 1.20783, 0, -1, 0.468243,-99) , 
11, 5.58205, 0, 0, 0.489437,-99) , 
8, 1.32783, 0, 0, 0.500528,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0162245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.527161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495583,-99) , 
2, -0.11205, 1, 0, 0.498167,-99) , 
2, 0.214327, 0, 0, 0.499876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471979,-99) , 
4, 8.96333, 1, 0, 0.498559,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0233043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478066,-99) , 
8, 1.2829, 0, 0, 0.514141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486824,-99) , 
12, 1.61676, 0, 0, 0.49708,-99) , 
10, -1.00001, 1, 0, 0.500411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467189,-99) , 
5, 0.996667, 0, 0, 0.49936,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0302896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.94303, 0, 1, 0.513709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428052,-99) , 
11, -2.9284, 1, 0, 0.474477,-99) , 
12, -0.668419, 0, 0, 0.507706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496181,-99) , 
8, 2.21578, 0, 0, 0.500065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425405,-99) , 
3, 2.42983, 0, 0, 0.461413,-99) , 
12, 0.723177, 0, 0, 0.494775,-99) , 
10, -0.142883, 1, 0, 0.500718,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0201626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.53632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496902,-99) , 
8, 2.31047, 0, 0, 0.499992,-99) , 
10, -1.57142, 1, 0, 0.502166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520445,-99) , 
NN(
0, 
0, 
-1, -0.440435, 0, -1, 0.464,-99) , 
11, -2.87488, 1, 0, 0.482712,-99) , 
12, -0.227626, 0, 0, 0.499799,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0276205);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4957,-99) , 
8, 1.54488, 0, 0, 0.503422,-99) , 
10, -1.85714, 1, 0, 0.504649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467557,-99) , 
11, -2.57455, 1, 0, 0.494996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443989,-99) , 
12, -1.22061, 0, 0, 0.484538,-99) , 
12, -0.0224326, 0, 0, 0.501592,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.00733508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.44673, 0, 1, 0.502245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476438,-99) , 
8, 0.707117, 0, 0, 0.501286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471839,-99) , 
10, 2.14283, 1, 0, 0.500546,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0210614);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489575,-99) , 
10, 1.04077, 1, 0, 0.50354,-99) , 
NN(
0, 
0, 
-1, 0.227239, 1, -1, 0.485751,-99) , 
12, 0.681222, 0, 0, 0.498846,-99) , 
10, -2.14286, 1, 0, 0.499857,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0125417);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.42472, 0, 1, 0.522421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461354,-99) , 
10, 2.07474, 1, 0, 0.500786,-99) , 
NN(
0, 
0, 
-1, 1.9063, 1, -1, 0.481374,-99) , 
9, 0.525285, 1, 0, 0.498117,-99) , 
10, -1.85715, 1, 0, 0.499454,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0255361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.636791, 1, 1, 0.524511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468084,-99) , 
12, 12.0781, 0, 0, 0.488718,-99) , 
13, 0.872288, 0, 0, 0.509261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495538,-99) , 
6, -0.317965, 1, 0, 0.49948,-99) , 
NN(
0, 
0, 
-1, 1.4088, 0, -1, 0.468599,-99) , 
8, 1.38761, 0, 0, 0.495658,-99) , 
11, 3.80945, 0, 0, 0.498365,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.033752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486952,-99) , 
12, -0.318218, 0, 0, 0.514259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440549,-99) , 
12, 0.778039, 0, 0, 0.490001,-99) , 
10, 0.143034, 1, 0, 0.502798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496275,-99) , 
8, 1.22385, 0, 0, 0.503872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426783,-99) , 
11, 0.79767, 0, 0, 0.473597,-99) , 
11, 2.64423, 0, 0, 0.492868,-99) , 
8, 1.5134, 0, 0, 0.499072,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0226985);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494256,-99) , 
3, 1.10553, 0, 0, 0.523984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466424,-99) , 
5, 0.999524, 0, 0, 0.515404,-99) , 
NN(
NN(
0, 
0, 
-1, 1.13979, 0, 1, 0.510162,-99) , 
NN(
0, 
0, 
-1, 3.57545, 1, -1, 0.493416,-99) , 
11, 3.54086, 0, 0, 0.497209,-99) , 
10, -1.00001, 1, 0, 0.50074,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0240461);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.99382, 1, 1, 0.524625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48157,-99) , 
3, 1.07654, 0, 0, 0.514721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489757,-99) , 
11, 1.33486, 0, 0, 0.49662,-99) , 
10, -1.2857, 1, 0, 0.499104,-99) , 
3, 2.51743, 0, 0, 0.500772,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0325163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477411,-99) , 
12, -0.718517, 0, 0, 0.510458,-99) , 
NN(
0, 
0, 
-1, 1.32977, 0, -1, 0.491467,-99) , 
8, 1.53487, 0, 0, 0.5028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537222,-99) , 
NN(
0, 
0, 
-1, 1.91255, 1, -1, 0.457733,-99) , 
9, -951.286, 0, 0, 0.485741,-99) , 
10, 1.28563, 1, 0, 0.50081,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0302812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483093,-99) , 
12, -0.851199, 0, 0, 0.52535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45816,-99) , 
11, -0.219213, 0, 0, 0.497446,-99) , 
8, 1.71197, 0, 0, 0.508912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491445,-99) , 
10, 0.877544, 1, 0, 0.501025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470956,-99) , 
12, 0.245683, 0, 0, 0.498377,-99) , 
10, -0.428567, 1, 0, 0.502155,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0198158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497123,-99) , 
9, -949.657, 1, 0, 0.529666,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.497192,-99) , 
11, -1.78193, 1, 0, 0.516671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492222,-99) , 
13, 1.4079, 0, 0, 0.515077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487998,-99) , 
12, 2.11173, 0, 0, 0.495343,-99) , 
10, -1.28574, 1, 0, 0.498088,-99) , 
3, 2.22638, 0, 0, 0.500571,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0176241);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.77943, 0, 1, 0.522616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496699,-99) , 
9, -949.96, 0, 0, 0.507177,-99) , 
NN(
0, 
0, 
-1, 0.516219, 0, -1, 0.493579,-99) , 
10, -0.714317, 1, 0, 0.497279,-99) , 
3, 2.54027, 0, 0, 0.498839,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0230094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49006,-99) , 
11, -1.72053, 1, 0, 0.529375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474472,-99) , 
12, -0.132571, 0, 0, 0.497952,-99) , 
9, -949.657, 1, 0, 0.514987,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85706, 0, 1, 0.50731,-99) , 
NN(
0, 
0, 
-1, 1.62304, 0, -1, 0.490738,-99) , 
11, 0.553662, 0, 0, 0.499033,-99) , 
3, 2.20539, 0, 0, 0.501268,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0216352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25926, 0, 1, 0.50972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449285,-99) , 
10, 1.85718, 1, 0, 0.506162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496863,-99) , 
10, -1.2858, 1, 0, 0.499725,-99) , 
NN(
0, 
0, 
-1, -1.30759, 1, -1, 0.465168,-99) , 
12, 1.29672, 0, 0, 0.494888,-99) , 
8, 1.71143, 0, 0, 0.500458,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0244195);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490705,-99) , 
8, 1.50956, 0, 0, 0.506822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441073,-99) , 
12, 0.705428, 0, 0, 0.494952,-99) , 
10, 0.0611999, 1, 0, 0.501104,-99) , 
10, -2.14285, 1, 0, 0.502378,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0251836);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.278405, 1, 1, 0.529606,-99) , 
NN(
NN(
0, 
0, 
-1, 2.10388, 0, 1, 0.504171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475491,-99) , 
11, -2.184, 1, 0, 0.490161,-99) , 
12, 1.13935, 0, 0, 0.499317,-99) , 
10, -1.85711, 1, 0, 0.500999,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0298598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460369,-99) , 
12, -1.20085, 0, 0, 0.517356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463449,-99) , 
6, -0.651895, 1, 0, 0.480051,-99) , 
13, 1.2478, 0, 0, 0.508627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482162,-99) , 
12, -0.158854, 0, 0, 0.509243,-99) , 
NN(
0, 
0, 
-1, 0.657881, 0, -1, 0.491307,-99) , 
3, 2.20804, 0, 0, 0.494026,-99) , 
10, -0.714295, 1, 0, 0.49797,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0221473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.954933, 0, 1, 0.516957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450959,-99) , 
11, 3.59697, 0, 0, 0.48377,-99) , 
3, 1.12027, 0, 0, 0.509392,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49645,-99) , 
12, 11.1285, 0, 0, 0.498637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46119,-99) , 
12, 0.136328, 0, 0, 0.495948,-99) , 
10, -0.428544, 1, 0, 0.500775,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0133442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496843,-99) , 
8, 1.91362, 0, 0, 0.500674,-99) , 
10, -2.14285, 1, 0, 0.50187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466088,-99) , 
5, 0.996667, 0, 0, 0.500761,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.019689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492357,-99) , 
10, 1.14495, 1, 0, 0.529896,-99) , 
NN(
0, 
0, 
-1, -1.28565, 1, 1, 0.502752,-99) , 
8, 2.27551, 0, 0, 0.505468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547249,-99) , 
NN(
0, 
0, 
-1, -0.474363, 0, -1, 0.4818,-99) , 
11, -3.02722, 1, 0, 0.491063,-99) , 
12, 0.413866, 0, 0, 0.502242,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0345114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490979,-99) , 
12, -0.260838, 0, 0, 0.516324,-99) , 
NN(
0, 
0, 
-1, 0.609616, 0, -1, 0.49199,-99) , 
10, 0.143008, 1, 0, 0.504813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487434,-99) , 
3, 0.750932, 0, 0, 0.508173,-99) , 
NN(
0, 
0, 
-1, 1.21344, 0, -1, 0.479188,-99) , 
11, 5.25951, 0, 0, 0.491812,-99) , 
8, 1.5134, 0, 0, 0.499952,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0225724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.146133, 1, 1, 0.512597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489258,-99) , 
11, 0.763537, 0, 0, 0.498594,-99) , 
8, 2.1833, 0, 0, 0.501823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484789,-99) , 
12, 1.82263, 0, 0, 0.501437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447295,-99) , 
5, 0.999524, 0, 0, 0.485713,-99) , 
0, 0.492376, 0, 0, 0.500262,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0154691);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495405,-99) , 
8, 1.76251, 0, 0, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467962,-99) , 
12, -1.07662, 0, 0, 0.500009,-99) , 
10, -2.14286, 1, 0, 0.500985,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0193304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.8578, 1, 1, 0.507119,-99) , 
NN(
0, 
0, 
-1, 1.44768, 0, -1, 0.494306,-99) , 
13, 1.46024, 0, 0, 0.502027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523652,-99) , 
NN(
0, 
0, 
-1, -0.602084, 1, -1, 0.467483,-99) , 
11, -2.85503, 1, 0, 0.484969,-99) , 
12, -0.129857, 0, 0, 0.49974,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0339575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496608,-99) , 
11, 1.36738, 0, 0, 0.51131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464326,-99) , 
11, 6.16217, 0, 0, 0.494217,-99) , 
8, 1.22946, 0, 0, 0.504641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475482,-99) , 
8, 1.80263, 0, 0, 0.499667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446231,-99) , 
10, 0.775882, 1, 0, 0.494024,-99) , 
12, 1.661, 0, 0, 0.499665,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0166971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49626,-99) , 
11, 1.43398, 0, 0, 0.501203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472985,-99) , 
13, 0.740528, 0, 0, 0.499744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461136,-99) , 
5, 0.996191, 0, 0, 0.498721,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0281531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25792, 0, 1, 0.522984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464482,-99) , 
5, 0.999524, 0, 0, 0.514353,-99) , 
NN(
NN(
0, 
0, 
-1, 1.84609, 0, 1, 0.505235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478133,-99) , 
11, -1.68595, 1, 0, 0.492136,-99) , 
12, 1.58608, 0, 0, 0.500054,-99) , 
10, -1.00001, 1, 0, 0.502825,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0259018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39945, 0, 1, 0.511359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4505,-99) , 
12, 6.6991, 0, 0, 0.474301,-99) , 
13, 1.18327, 0, 0, 0.504128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495139,-99) , 
8, 2.47062, 0, 0, 0.498412,-99) , 
NN(
0, 
0, 
-1, 2.34036, 0, -1, 0.456908,-99) , 
12, 0.618904, 0, 0, 0.49344,-99) , 
10, -0.142878, 1, 0, 0.498335,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0249832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492919,-99) , 
3, 1.15399, 0, 0, 0.527256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494413,-99) , 
8, 2.07811, 0, 0, 0.499156,-99) , 
10, -1.28574, 1, 0, 0.501709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516361,-99) , 
NN(
0, 
0, 
-1, -0.485276, 0, -1, 0.472133,-99) , 
11, -2.78041, 1, 0, 0.485599,-99) , 
12, 0.00331226, 0, 0, 0.499207,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.026971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.0527, 1, 1, 0.510267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44808,-99) , 
12, 1.98448, 0, 0, 0.495161,-99) , 
13, 1.42262, 0, 0, 0.504325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476189,-99) , 
11, -2.48336, 1, 0, 0.496077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449816,-99) , 
12, -1.22948, 0, 0, 0.488685,-99) , 
12, 0.239737, 0, 0, 0.501279,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0247062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48978,-99) , 
13, 1.2234, 0, 0, 0.501429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462882,-99) , 
11, -1.77804, 1, 0, 0.487761,-99) , 
12, 0.817656, 0, 0, 0.497455,-99) , 
10, -2.14285, 1, 0, 0.498425,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0251571);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459035,-99) , 
12, -1.0921, 0, 0, 0.513295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45999,-99) , 
6, -0.651562, 1, 0, 0.479909,-99) , 
13, 1.21812, 0, 0, 0.506199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489635,-99) , 
10, 0.523776, 1, 0, 0.496401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468609,-99) , 
12, -0.0515404, 0, 0, 0.494447,-99) , 
10, -0.714307, 1, 0, 0.497623,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0340639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499827,-99) , 
11, -1.25928, 1, 0, 0.511554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491865,-99) , 
10, 1.28521, 0, 0, 0.494928,-99) , 
8, 1.68374, 0, 0, 0.501567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469916,-99) , 
12, -0.492216, 0, 0, 0.505212,-99) , 
NN(
0, 
0, 
-1, -0.302691, 1, -1, 0.469976,-99) , 
11, -2.13175, 1, 0, 0.487305,-99) , 
12, 0.4216, 0, 0, 0.498342,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0173699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499753,-99) , 
3, 1.41033, 0, 0, 0.506208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445391,-99) , 
10, -0.0199124, 1, 0, 0.494579,-99) , 
12, 0.413866, 0, 0, 0.503591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -1, 0.499694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457539,-99) , 
4, 2.00449, 0, 0, 0.481608,-99) , 
4, 4.48892, 0, 0, 0.486985,-99) , 
0, 0.503804, 1, 0, 0.502114,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0202142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497322,-99) , 
12, 0.147899, 0, 0, 0.521345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486957,-99) , 
3, 0.81145, 0, 0, 0.503748,-99) , 
NN(
0, 
0, 
-1, 0.367832, 1, -1, 0.486462,-99) , 
12, 1.06286, 0, 0, 0.49801,-99) , 
10, -1.85714, 1, 0, 0.49928,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0244754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496051,-99) , 
3, 1.2702, 0, 0, 0.519064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462661,-99) , 
10, 2.12921, 1, 0, 0.502611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466664,-99) , 
11, -1.55072, 1, 0, 0.488769,-99) , 
12, 1.2141, 0, 0, 0.497754,-99) , 
10, -1.57138, 1, 0, 0.499608,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0241059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49392,-99) , 
13, 1.48641, 0, 0, 0.518693,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.474501,-99) , 
12, -0.748636, 0, 0, 0.509777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525925,-99) , 
NN(
0, 
0, 
-1, 0.0237992, 1, -1, 0.494275,-99) , 
12, 10.7039, 0, 0, 0.496384,-99) , 
10, -0.714297, 1, 0, 0.500005,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0248522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480801,-99) , 
12, -0.505675, 0, 0, 0.507846,-99) , 
6, -0.458273, 1, 0, 0.51931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49904,-99) , 
3, 1.87841, 0, 0, 0.502516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48027,-99) , 
11, -2.42904, 1, 0, 0.48967,-99) , 
12, 1.22757, 0, 0, 0.497984,-99) , 
10, -1.57144, 1, 0, 0.499831,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.021151);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494206,-99) , 
3, 1.15899, 0, 0, 0.527636,-99) , 
NN(
0, 
0, 
-1, 9.0694, 0, 1, 0.503244,-99) , 
10, -1.28572, 1, 0, 0.505281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482233,-99) , 
11, -2.47184, 1, 0, 0.497111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448859,-99) , 
12, -1.26746, 0, 0, 0.49089,-99) , 
12, 0.379125, 0, 0, 0.502136,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.00900063);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.039997, 0, 1, 0.531424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466578,-99) , 
12, -0.635923, 0, 0, 0.498655,-99) , 
3, 2.73084, 0, 0, 0.499791,-99) , 
10, -1.85715, 1, 0, 0.501523,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0239596);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.18368, 0, 1, 0.52379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458159,-99) , 
10, 1.38096, 1, 0, 0.505829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486348,-99) , 
11, 1.53825, 0, 0, 0.493365,-99) , 
8, 2.18328, 0, 0, 0.49633,-99) , 
10, -1.85715, 1, 0, 0.497824,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0187096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25679, 0, 1, 0.520362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472857,-99) , 
5, 0.999524, 0, 0, 0.51328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498203,-99) , 
5, 0.999524, 1, 0, 0.501282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4584,-99) , 
12, -0.308934, 0, 0, 0.498806,-99) , 
10, -1.00001, 1, 0, 0.501615,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.035124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483498,-99) , 
12, -0.304191, 0, 0, 0.50814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430267,-99) , 
12, 2.25249, 0, 0, 0.475317,-99) , 
10, 1.28569, 1, 0, 0.503879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490558,-99) , 
13, 0.913832, 0, 0, 0.507409,-99) , 
NN(
0, 
0, 
-1, 1.30436, 0, -1, 0.479114,-99) , 
6, -0.603883, 1, 0, 0.491419,-99) , 
13, 1.42262, 0, 0, 0.499879,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0215427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492958,-99) , 
0, 0.49809, 0, 0, 0.503733,-99) , 
6, -0.375124, 1, 0, 0.524119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493403,-99) , 
8, 1.13307, 0, 0, 0.506291,-99) , 
NN(
0, 
0, 
-1, 3.58489, 1, -1, 0.492971,-99) , 
11, 3.07518, 0, 0, 0.496113,-99) , 
10, -1.5714, 1, 0, 0.498557,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0216462);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.60437, 0, 1, 0.505566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465673,-99) , 
12, -0.962265, 0, 0, 0.513016,-99) , 
NN(
0, 
0, 
-1, -0.506643, 1, -1, 0.475933,-99) , 
11, -2.41315, 1, 0, 0.4929,-99) , 
12, 0.0998317, 0, 0, 0.503404,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0245698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.830516, 0, 1, 0.515041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456362,-99) , 
12, 4.80205, 0, 0, 0.482789,-99) , 
13, 1.20839, 0, 0, 0.508351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494953,-99) , 
11, 5.58674, 0, 0, 0.499203,-99) , 
NN(
0, 
0, 
-1, 0.101457, 1, -1, 0.465991,-99) , 
12, 0.438655, 0, 0, 0.495299,-99) , 
10, -0.428582, 1, 0, 0.499974,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0174393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48633,-99) , 
8, 0.724464, 0, 0, 0.520322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497864,-99) , 
7, 0.0102002, 0, 0, 0.501568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462541,-99) , 
7, 0.0238027, 1, 0, 0.499738,-99) , 
12, 9.5102, 0, 0, 0.501199,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.00823253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498666,-99) , 
10, -1.85711, 1, 0, 0.499874,-99) , 
3, 2.69721, 0, 0, 0.500866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463953,-99) , 
0, 0.489519, 0, 0, 0.499931,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0324349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.72221, 0, 1, 0.511992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467957,-99) , 
12, 7.34636, 0, 0, 0.485649,-99) , 
13, 1.23796, 0, 0, 0.506054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493885,-99) , 
9, -948.526, 0, 0, 0.505082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44159,-99) , 
12, 1.11009, 0, 0, 0.496095,-99) , 
10, 0.428533, 1, 0, 0.502701,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0170953);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498087,-99) , 
8, 1.7, 0, 0, 0.503575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452113,-99) , 
10, 0.0531132, 1, 0, 0.491616,-99) , 
12, 0.821127, 0, 0, 0.500099,-99) , 
10, -2.14285, 1, 0, 0.500858,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0192308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499571,-99) , 
10, -1.28569, 1, 0, 0.501607,-99) , 
8, 2.50478, 0, 0, 0.503318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482106,-99) , 
11, -2.5994, 1, 0, 0.494909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444307,-99) , 
12, -1.23115, 0, 0, 0.488101,-99) , 
12, 0.413866, 0, 0, 0.499902,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0181191);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49467,-99) , 
12, 0.867539, 0, 0, 0.504089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460227,-99) , 
12, -0.933002, 0, 0, 0.502206,-99) , 
10, -2.14286, 1, 0, 0.503072,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0266369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69329, 0, 1, 0.518054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480216,-99) , 
11, 5.41507, 0, 0, 0.496075,-99) , 
12, 3.55114, 1, 0, 0.505734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451324,-99) , 
10, 0.991063, 1, 0, 0.500206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442329,-99) , 
8, 1.4231, 0, 0, 0.496455,-99) , 
12, 1.95822, 0, 0, 0.500845,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0334458);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499847,-99) , 
11, 1.71887, 0, 0, 0.510796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445813,-99) , 
12, 7.69333, 0, 0, 0.49368,-99) , 
8, 1.04704, 0, 0, 0.506441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479413,-99) , 
8, 1.95889, 0, 0, 0.498349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453967,-99) , 
10, 0.775882, 1, 0, 0.493664,-99) , 
12, 1.661, 0, 0, 0.500427,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0238365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.934916, 1, 1, 0.524356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493617,-99) , 
8, 1.58221, 0, 0, 0.499482,-99) , 
8, 2.39368, 0, 0, 0.50162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459365,-99) , 
12, -0.905862, 0, 0, 0.495148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448647,-99) , 
10, -0.297074, 1, 0, 0.485691,-99) , 
12, 0.116956, 0, 0, 0.49887,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0314331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495144,-99) , 
11, 1.1847, 0, 0, 0.503072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455725,-99) , 
6, -0.801982, 1, 0, 0.479549,-99) , 
13, 0.860159, 0, 0, 0.500677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476402,-99) , 
11, -2.06537, 1, 0, 0.507594,-99) , 
NN(
0, 
0, 
-1, -2.75435, 1, -1, 0.46546,-99) , 
12, -0.494873, 0, 0, 0.48835,-99) , 
12, 0.239737, 0, 0, 0.498285,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0162187);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531593,-99) , 
NN(
NN(
0, 
0, 
-1, -0.999996, 1, 1, 0.505312,-99) , 
NN(
0, 
0, 
-1, 0.0244435, 1, -1, 0.486264,-99) , 
12, 0.517779, 0, 0, 0.501108,-99) , 
3, 2.71031, 0, 0, 0.502279,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0142117);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496348,-99) , 
10, -1.16325, 1, 0, 0.498765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471364,-99) , 
12, -0.960835, 0, 0, 0.497642,-99) , 
10, -2.14286, 1, 0, 0.49879,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0280442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481951,-99) , 
12, -0.571745, 0, 0, 0.511083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461818,-99) , 
10, 1.85718, 1, 0, 0.507904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489566,-99) , 
8, 1.10133, 0, 0, 0.500186,-99) , 
NN(
0, 
0, 
-1, -1.479, 1, -1, 0.465568,-99) , 
12, 0.971159, 0, 0, 0.496393,-99) , 
8, 1.76253, 0, 0, 0.501683,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.00948316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516703,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460223,-99) , 
7, 0.0237915, 1, 0, 0.498899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463629,-99) , 
8, 0.950724, 0, 0, 0.497146,-99) , 
12, 10.5443, 0, 0, 0.498289,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.021329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.782854, 0, 1, 0.516843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473376,-99) , 
3, 0.968808, 0, 0, 0.510903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519026,-99) , 
NN(
0, 
0, 
-1, 0.0237992, 1, -1, 0.492864,-99) , 
12, 11.1277, 0, 0, 0.494517,-99) , 
10, -0.714295, 1, 0, 0.498936,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0235663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491363, 1, 1, 0.528384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48857,-99) , 
12, -0.483794, 0, 0, 0.515013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493231,-99) , 
8, 1.30988, 0, 0, 0.521893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487662,-99) , 
11, 0.554366, 0, 0, 0.496502,-99) , 
10, -1.57145, 1, 0, 0.498847,-99) , 
3, 2.21486, 0, 0, 0.501058,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.00986024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85715, 1, 1, 0.502767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454504,-99) , 
12, -1.21688, 0, 0, 0.501207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475207,-99) , 
8, 0.710595, 0, 0, 0.500222,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0277705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447755,-99) , 
11, -2.91889, 1, 0, 0.485562,-99) , 
12, -0.527372, 0, 0, 0.515824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496691,-99) , 
3, 1.44728, 0, 0, 0.502945,-99) , 
NN(
0, 
0, 
-1, 0.505442, 1, -1, 0.486112,-99) , 
12, 1.21703, 0, 0, 0.497762,-99) , 
11, -2.17348, 1, 0, 0.499685,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.020052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495449,-99) , 
3, 1.22299, 0, 0, 0.535417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477534,-99) , 
12, -0.733109, 0, 0, 0.518334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495398,-99) , 
8, 1.96268, 0, 0, 0.500186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467425,-99) , 
12, -0.71111, 0, 0, 0.498705,-99) , 
10, -1.57142, 1, 0, 0.500419,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.011288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464216,-99) , 
12, -1.07738, 0, 0, 0.499929,-99) , 
12, 8.96105, 0, 0, 0.501985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476532,-99) , 
8, 0.710595, 0, 0, 0.501,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.013988);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499875,-99) , 
13, 1.33348, 0, 0, 0.519408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488307,-99) , 
12, 0.954833, 0, 0, 0.498062,-99) , 
10, -1.57142, 1, 0, 0.499927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467876,-99) , 
5, 0.997143, 0, 0, 0.498759,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0158008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486663,-99) , 
11, 0.611261, 0, 0, 0.500824,-99) , 
9, -951.286, 0, 0, 0.511681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529913,-99) , 
NN(
0, 
0, 
-1, 0.137416, 0, -1, 0.497276,-99) , 
3, 2.71033, 0, 0, 0.498597,-99) , 
10, -1, 1, 0, 0.501117,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0361322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488587,-99) , 
12, -0.386484, 0, 0, 0.520181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468219,-99) , 
11, 0.587564, 0, 0, 0.49621,-99) , 
13, 1.67792, 0, 0, 0.507235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495859,-99) , 
12, 10.3409, 0, 0, 0.49964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454087,-99) , 
12, 0.827071, 0, 0, 0.494045,-99) , 
10, 0.142855, 1, 0, 0.501466,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0229382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467071,-99) , 
12, 3.40613, 1, 0, 0.501657,-99) , 
11, 3.28067, 0, 0, 0.504256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483275,-99) , 
13, 0.863285, 0, 0, 0.498484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442842,-99) , 
12, 5.09346, 0, 0, 0.490309,-99) , 
13, 1.15614, 0, 0, 0.501714,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0132393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0195908, 0, 1, 0.533055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497557,-99) , 
10, -1.2857, 1, 0, 0.499898,-99) , 
2, 0.180175, 0, 0, 0.501803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463147,-99) , 
2, 0.357034, 1, 0, 0.500771,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.015112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.673952, 0, 1, 0.524733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49332,-99) , 
8, 1.71165, 0, 0, 0.499084,-99) , 
10, -1.85715, 1, 0, 0.500488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468267,-99) , 
5, 0.99619, 0, 0, 0.499626,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0347542);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491874,-99) , 
9, -951.232, 1, 0, 0.512931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491788,-99) , 
11, -1.5442, 1, 0, 0.499035,-99) , 
11, 2.67531, 0, 0, 0.502997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461393,-99) , 
10, -1.45547, 1, 0, 0.475059,-99) , 
11, -2.7924, 1, 0, 0.489008,-99) , 
12, -0.0224326, 0, 0, 0.500886,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0184376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48422,-99) , 
3, 1.16681, 0, 0, 0.501645,-99) , 
12, 9.15123, 0, 0, 0.503358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479897,-99) , 
8, 0.705482, 0, 0, 0.502498,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0200226);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.505467,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460424,-99) , 
12, -1.10398, 0, 0, 0.505673,-99) , 
NN(
0, 
0, 
-1, -1.19687, 1, -1, 0.469896,-99) , 
11, -2.52454, 1, 0, 0.487076,-99) , 
12, -0.0983186, 0, 0, 0.502903,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0312374);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492504,-99) , 
12, 0.574154, 0, 0, 0.507262,-99) , 
NN(
0, 
0, 
-1, 0.999525, 0, -1, 0.492773,-99) , 
8, 1.52697, 0, 0, 0.50143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446057,-99) , 
13, 1.64631, 1, 0, 0.471504,-99) , 
9, -951.218, 0, 0, 0.488974,-99) , 
10, 0.999994, 1, 0, 0.499255,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0134089);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.369324, 1, 1, 0.521063,-99) , 
NN(
NN(
0, 
0, 
-1, 2.30433, 0, 1, 0.50304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447054,-99) , 
10, 0.357258, 1, 0, 0.491046,-99) , 
12, 1.10531, 0, 0, 0.499122,-99) , 
10, -1.57144, 1, 0, 0.501026,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0185374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.8012, 0, 1, 0.505519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478129,-99) , 
13, 0.7192, 0, 0, 0.503083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463701,-99) , 
8, 1.57315, 0, 0, 0.496941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448258,-99) , 
10, 0.861858, 1, 0, 0.492315,-99) , 
12, 1.77676, 0, 0, 0.497772,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0216139);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489031,-99) , 
8, 1.01156, 0, 0, 0.504799,-99) , 
NN(
0, 
0, 
-1, 3.58573, 1, -1, 0.491388,-99) , 
11, 2.7817, 0, 0, 0.494783,-99) , 
3, 2.5715, 0, 0, 0.49596,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0126481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496744,-99) , 
10, -1.16322, 1, 0, 0.498673,-99) , 
10, -2.14285, 1, 0, 0.499871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467987,-99) , 
5, 0.997143, 0, 0, 0.498712,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0234545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.741952, 0, 1, 0.514908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465086,-99) , 
10, 1.57143, 1, 0, 0.509207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495738,-99) , 
10, -0.999962, 1, 0, 0.5069,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.491967,-99) , 
9, -948.526, 0, 0, 0.496957,-99) , 
8, 2.18353, 0, 0, 0.499793,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0179222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498188,-99) , 
8, 0.775089, 0, 0, 0.52007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478113,-99) , 
7, 0.00113343, 0, 0, 0.500501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46231,-99) , 
7, 0.0238027, 1, 0, 0.498688,-99) , 
6, -0.729696, 1, 0, 0.500361,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0240776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.9867, 1, 1, 0.521517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476176,-99) , 
8, 0.966386, 0, 0, 0.495308,-99) , 
9, -43.6462, 1, 0, 0.511453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495009,-99) , 
11, 1.40337, 0, 0, 0.498804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441579,-99) , 
12, 3.48539, 1, 0, 0.49651,-99) , 
11, 2.57113, 0, 0, 0.500181,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00894453);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499933,-99) , 
10, -1.85715, 1, 0, 0.502034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461587,-99) , 
12, -1.17942, 0, 0, 0.500624,-99) , 
12, 12.6356, 0, 0, 0.501782,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0161489);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529829,-99) , 
NN(
NN(
0, 
0, 
-1, 2.30433, 0, 1, 0.505481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44824,-99) , 
10, 0.019629, 1, 0, 0.491238,-99) , 
12, 0.668951, 0, 0, 0.50179,-99) , 
10, -2.14286, 1, 0, 0.502652,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0184655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497296,-99) , 
10, 0.807735, 1, 0, 0.523439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499388,-99) , 
10, -1.28574, 1, 0, 0.501846,-99) , 
8, 2.27384, 0, 0, 0.504212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450272,-99) , 
12, -1.22948, 0, 0, 0.498218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454204,-99) , 
10, -0.280016, 1, 0, 0.488359,-99) , 
12, 0.239737, 0, 0, 0.501163,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0259522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473929,-99) , 
12, -1.01333, 0, 0, 0.520808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459503,-99) , 
12, -0.244254, 0, 0, 0.499659,-99) , 
10, -0.714189, 1, 0, 0.505102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48987,-99) , 
9, -951.211, 1, 0, 0.501612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426972,-99) , 
11, 1.70493, 0, 0, 0.49413,-99) , 
8, 1.34175, 0, 0, 0.502144,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0130678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999047, 1, 1, 0.51849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497468,-99) , 
6, -0.730381, 1, 0, 0.499314,-99) , 
2, -0.0919913, 1, 0, 0.501802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469126,-99) , 
2, -0.357264, 0, 0, 0.50093,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0181082);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495215,-99) , 
8, 1.37138, 0, 0, 0.503147,-99) , 
NN(
0, 
0, 
-1, 0.0099637, 1, -1, 0.485872,-99) , 
12, 0.517779, 0, 0, 0.499345,-99) , 
3, 2.68255, 0, 0, 0.500384,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0080172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.38839, 0, 1, 0.524487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49946,-99) , 
5, 0.999048, 1, 0, 0.500962,-99) , 
10, -1.85714, 1, 0, 0.502243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47034,-99) , 
5, 0.996667, 0, 0, 0.501252,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.025102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.634169, 1, 1, 0.52513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474441,-99) , 
12, 11.9449, 0, 0, 0.49468,-99) , 
13, 0.886676, 0, 0, 0.511274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475691,-99) , 
12, -0.705854, 0, 0, 0.502698,-99) , 
NN(
0, 
0, 
-1, 1.25268, 0, -1, 0.470415,-99) , 
8, 1.38162, 0, 0, 0.498795,-99) , 
11, 3.88413, 0, 0, 0.501261,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0268481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460783,-99) , 
12, 7.25199, 0, 0, 0.50258,-99) , 
8, 1.07198, 0, 0, 0.510998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495541,-99) , 
11, 1.49894, 0, 0, 0.500381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457701,-99) , 
12, 3.76076, 1, 0, 0.497691,-99) , 
11, 3.80945, 0, 0, 0.500335,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0238516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.02536, 0, 1, 0.50815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474381,-99) , 
3, 0.655288, 0, 0, 0.506753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486002,-99) , 
9, -951.286, 0, 0, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436402,-99) , 
12, 1.59139, 0, 0, 0.490477,-99) , 
10, 0.999955, 1, 0, 0.503905,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0253982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.758454, 0, 1, 0.512018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442805,-99) , 
12, 5.40699, 0, 0, 0.479342,-99) , 
13, 1.202, 0, 0, 0.505342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496656,-99) , 
12, 11.0287, 0, 0, 0.499704,-99) , 
NN(
0, 
0, 
-1, -1.87943, 1, -1, 0.455578,-99) , 
12, 0.688856, 0, 0, 0.493983,-99) , 
10, -0.142888, 1, 0, 0.499187,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0134985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0779541, 0, 1, 0.53518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497223,-99) , 
10, -1.85716, 1, 0, 0.498824,-99) , 
2, -0.214305, 1, 0, 0.500986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471694,-99) , 
4, 9.79006, 1, 0, 0.499902,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.021176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49524,-99) , 
13, 0.794954, 0, 0, 0.519823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4978,-99) , 
10, -0.428578, 1, 0, 0.504478,-99) , 
NN(
0, 
0, 
-1, 4.38679, 0, -1, 0.478019,-99) , 
8, 1.2037, 0, 0, 0.501484,-99) , 
12, 8.04958, 0, 0, 0.503252,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0229105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479766,-99) , 
10, 1.41027, 1, 0, 0.527184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496395,-99) , 
12, 1.98445, 0, 0, 0.503141,-99) , 
8, 2.31582, 0, 0, 0.505497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45455,-99) , 
12, -0.437389, 0, 0, 0.483278,-99) , 
11, -2.95098, 1, 0, 0.492671,-99) , 
12, 0.239737, 0, 0, 0.503007,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0256222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474238,-99) , 
0, 0.505709, 1, 0, 0.503783,-99) , 
8, 2.49986, 0, 0, 0.505698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455991,-99) , 
12, -1.14923, 0, 0, 0.516311,-99) , 
NN(
0, 
0, 
-1, -0.328804, 1, -1, 0.477348,-99) , 
11, -2.49448, 1, 0, 0.491338,-99) , 
12, 0.26054, 0, 0, 0.502868,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.029604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.145311, 1, 1, 0.512512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456739,-99) , 
11, 5.30675, 0, 0, 0.494164,-99) , 
8, 1.21217, 0, 0, 0.505633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485328,-99) , 
8, 1.98178, 0, 0, 0.501098,-99) , 
NN(
0, 
0, 
-1, 2.39289, 0, -1, 0.470423,-99) , 
10, 0.51416, 1, 0, 0.49607,-99) , 
12, 1.661, 0, 0, 0.501144,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0300798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479681,-99) , 
12, -0.559712, 0, 0, 0.505428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468755,-99) , 
9, -951.286, 0, 0, 0.484149,-99) , 
10, 1.00002, 1, 0, 0.501494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492256,-99) , 
8, 1.02115, 0, 0, 0.500951,-99) , 
NN(
0, 
0, 
-1, 1.26497, 0, -1, 0.452613,-99) , 
11, 3.29662, 0, 0, 0.489878,-99) , 
8, 1.34175, 0, 0, 0.498368,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0270654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.9524, 1, 1, 0.517992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459804,-99) , 
5, 0.999524, 0, 0, 0.509447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4925,-99) , 
8, 1.70324, 0, 0, 0.499938,-99) , 
NN(
0, 
0, 
-1, 0.606325, 1, -1, 0.485478,-99) , 
12, 1.32619, 0, 0, 0.495033,-99) , 
10, -1.00003, 1, 0, 0.497791,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0242929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493144,-99) , 
10, 0.718351, 1, 0, 0.531754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48931,-99) , 
9, -951.218, 1, 0, 0.512313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494527,-99) , 
8, 1.66769, 0, 0, 0.499593,-99) , 
NN(
0, 
0, 
-1, -0.263148, 1, -1, 0.477594,-99) , 
12, 0.758589, 0, 0, 0.494851,-99) , 
3, 2.21486, 0, 0, 0.497231,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0184193);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.710206, 0, 1, 0.526099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495663,-99) , 
11, 2.06122, 0, 0, 0.499739,-99) , 
8, 2.51134, 0, 0, 0.50161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516773,-99) , 
NN(
0, 
0, 
-1, -0.584808, 1, -1, 0.473284,-99) , 
11, -2.82831, 1, 0, 0.486919,-99) , 
12, -0.0983186, 0, 0, 0.499558,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0201606);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.38657, 0, 1, 0.517885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498378,-99) , 
12, 0.626598, 0, 0, 0.513022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489204,-99) , 
11, 1.34464, 0, 0, 0.495589,-99) , 
8, 2.34782, 0, 0, 0.498694,-99) , 
10, -1.57143, 1, 0, 0.500343,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0190121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45472, 0, 1, 0.536856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469793,-99) , 
4, 9.1556, 1, 0, 0.502059,-99) , 
6, -0.391012, 1, 0, 0.504672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483438,-99) , 
3, 0.698963, 0, 0, 0.500997,-99) , 
NN(
0, 
0, 
-1, 1.25732, 0, -1, 0.459453,-99) , 
11, 3.13824, 0, 0, 0.492424,-99) , 
8, 1.33598, 0, 0, 0.501408,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0228224);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497959,-99) , 
12, 1.25926, 0, 0, 0.506497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465062,-99) , 
10, 1.85714, 1, 0, 0.503941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496847,-99) , 
13, 0.817644, 0, 0, 0.511849,-99) , 
NN(
0, 
0, 
-1, 0.593787, 0, -1, 0.489139,-99) , 
6, -0.669568, 1, 0, 0.493884,-99) , 
8, 1.71534, 0, 0, 0.498821,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0300711);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461764,-99) , 
12, -1.16194, 0, 0, 0.517387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49399,-99) , 
11, 0.765049, 0, 0, 0.498713,-99) , 
10, -0.714219, 1, 0, 0.503485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478209,-99) , 
5, 0.999982, 0, 0, 0.495994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456053,-99) , 
5, 0.999624, 0, 0, 0.492168,-99) , 
8, 1.34175, 0, 0, 0.500426,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0400679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461146,-99) , 
10, 1.28636, 1, 0, 0.528776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466862,-99) , 
12, -0.3251, 0, 0, 0.493243,-99) , 
9, -12.1436, 1, 0, 0.513334,-99) , 
NN(
NN(
0, 
0, 
-1, -1.00021, 1, 1, 0.513205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473873,-99) , 
11, 0.769723, 0, 0, 0.491646,-99) , 
9, -1.69972, 0, 0, 0.498433,-99) , 
8, 2.15556, 0, 0, 0.502057,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0299594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474743,-99) , 
12, -0.892489, 0, 0, 0.509039,-99) , 
NN(
0, 
0, 
-1, 2.2722, 0, -1, 0.477906,-99) , 
10, 1.28578, 1, 0, 0.504734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483983,-99) , 
12, 9.61647, 0, 0, 0.488218,-99) , 
10, -1.85718, 1, 0, 0.490907,-99) , 
8, 1.54513, 0, 0, 0.499237,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0238737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.02365, 0, 1, 0.51494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472946,-99) , 
10, 1.57143, 1, 0, 0.510059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490295,-99) , 
12, 8.06812, 0, 0, 0.492539,-99) , 
10, -1.85714, 1, 0, 0.494786,-99) , 
8, 2.18347, 0, 0, 0.498291,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0157166);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533234,-99) , 
NN(
NN(
0, 
0, 
-1, 0.386378, 1, 1, 0.514719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489198,-99) , 
10, 0.0611776, 1, 0, 0.495732,-99) , 
3, 2.2528, 0, 0, 0.498158,-99) , 
10, -2.14286, 1, 0, 0.499246,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0224532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46158, 0, 1, 0.504966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44695,-99) , 
12, 1.44819, 0, 0, 0.48784,-99) , 
10, 0.428583, 1, 0, 0.499144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474802,-99) , 
13, 0.782322, 0, 0, 0.496505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43338,-99) , 
12, 5.75776, 0, 0, 0.485968,-99) , 
13, 1.11852, 0, 0, 0.496946,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.035878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485841,-99) , 
10, 1.58043, 1, 0, 0.536039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44837,-99) , 
10, 0.335061, 1, 0, 0.496759,-99) , 
12, 0.991328, 0, 0, 0.506982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491739,-99) , 
10, -0.996689, 1, 0, 0.50419,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.487985,-99) , 
9, -1.58995, 0, 0, 0.493024,-99) , 
8, 2.14237, 0, 0, 0.496494,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0200617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49259,-99) , 
10, 0.42856, 1, 0, 0.500129,-99) , 
8, 2.60405, 0, 0, 0.501614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472478,-99) , 
12, -0.771356, 0, 0, 0.494422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446221,-99) , 
10, -0.28187, 1, 0, 0.485468,-99) , 
12, 0.0623895, 0, 0, 0.498949,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.025583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.768075, 0, 1, 0.528128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491384,-99) , 
8, 1.26384, 0, 0, 0.501675,-99) , 
8, 2.50477, 0, 0, 0.503536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465675,-99) , 
12, -1.04947, 0, 0, 0.503563,-99) , 
NN(
0, 
0, 
-1, -0.770565, 1, -1, 0.462316,-99) , 
11, -2.49292, 1, 0, 0.48145,-99) , 
12, -0.0224326, 0, 0, 0.500209,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.020691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495588,-99) , 
8, 1.71063, 0, 0, 0.500875,-99) , 
10, -1.57143, 1, 0, 0.502226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479326,-99) , 
12, -0.513797, 0, 0, 0.495628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444751,-99) , 
10, -0.0199487, 1, 0, 0.487465,-99) , 
12, 0.400445, 0, 0, 0.498965,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.01721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.25702, 0, 1, 0.523963,-99) , 
NN(
NN(
0, 
0, 
-1, 2.27358, 0, 1, 0.503208,-99) , 
NN(
0, 
0, 
-1, 0.206778, 1, -1, 0.485229,-99) , 
12, 1.15298, 0, 0, 0.497109,-99) , 
10, -1.5714, 1, 0, 0.499459,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0297794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.26781, 1, 1, 0.5171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476821,-99) , 
11, 6.31001, 0, 0, 0.490894,-99) , 
9, -951.227, 1, 0, 0.507212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488141,-99) , 
10, 0.142965, 1, 0, 0.49962,-99) , 
NN(
0, 
0, 
-1, 1.23839, 0, -1, 0.455457,-99) , 
8, 1.47168, 0, 0, 0.494902,-99) , 
11, 1.72205, 0, 0, 0.498594,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0156508);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497038,-99) , 
8, 2.5554, 0, 0, 0.498538,-99) , 
NN(
0, 
0, 
-1, -0.561498, 1, -1, 0.477857,-99) , 
12, 0.179724, 0, 0, 0.495186,-99) , 
3, 2.68748, 0, 0, 0.496361,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0232512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498784,-99) , 
10, -1.2857, 1, 0, 0.500339,-99) , 
8, 2.50493, 0, 0, 0.502127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472185,-99) , 
12, -0.513888, 0, 0, 0.505127,-99) , 
NN(
0, 
0, 
-1, -0.302706, 1, -1, 0.46855,-99) , 
11, -2.12878, 1, 0, 0.486774,-99) , 
12, 0.400445, 0, 0, 0.498743,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0259715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.59431, 0, 1, 0.509408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465318,-99) , 
10, 0.140513, 0, 0, 0.486164,-99) , 
3, 0.81144, 0, 0, 0.505691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481701,-99) , 
8, 1.82434, 0, 0, 0.499309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456516,-99) , 
10, 0.725571, 1, 0, 0.49473,-99) , 
12, 1.55032, 0, 0, 0.500779,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0193285);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497558,-99) , 
10, 0.908592, 1, 0, 0.517292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49556,-99) , 
11, 2.4729, 0, 0, 0.499461,-99) , 
8, 2.39368, 0, 0, 0.501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522114,-99) , 
NN(
0, 
0, 
-1, -0.419139, 1, -1, 0.475002,-99) , 
11, -2.93034, 1, 0, 0.485351,-99) , 
12, 0.0998317, 0, 0, 0.498349,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0212746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49573,-99) , 
10, 0.728141, 1, 0, 0.516689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49187,-99) , 
12, 1.78123, 0, 0, 0.499516,-99) , 
8, 2.31598, 0, 0, 0.501334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470932,-99) , 
3, 1.81979, 0, 0, 0.501017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45809,-99) , 
10, -0.617678, 1, 0, 0.486334,-99) , 
12, 0.0998317, 0, 0, 0.498762,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0236239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.627238, 1, 1, 0.51067,-99) , 
NN(
0, 
0, 
-1, 0.259046, 1, -1, 0.490859,-99) , 
12, 0.902623, 0, 0, 0.503332,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498087, 1, 1, 0.507442,-99) , 
NN(
0, 
0, 
-1, 7.29929, 0, -1, 0.467422,-99) , 
6, -0.75088, 1, 0, 0.484948,-99) , 
3, 0.978057, 0, 0, 0.500596,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0243744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488626,-99) , 
12, 0.62067, 0, 0, 0.49916,-99) , 
6, -0.38198, 1, 0, 0.501554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465773,-99) , 
5, 0.999905, 0, 0, 0.501055,-99) , 
NN(
0, 
0, 
-1, 1.67911, 0, -1, 0.481102,-99) , 
6, -0.55672, 1, 0, 0.491349,-99) , 
13, 1.42262, 0, 0, 0.498273,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0208652);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.524518, 1, 1, 0.519539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47668,-99) , 
3, 1.04633, 0, 0, 0.505253,-99) , 
NN(
0, 
0, 
-1, 0.828151, 0, -1, 0.493182,-99) , 
10, -0.428591, 1, 0, 0.497583,-99) , 
3, 2.41215, 0, 0, 0.499468,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0188139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492008,-99) , 
3, 2.70808, 0, 0, 0.503647,-99) , 
6, 0.377062, 1, 0, 0.515279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470109,-99) , 
3, 1.08452, 0, 0, 0.513107,-99) , 
NN(
0, 
0, 
-1, 0.0803387, 0, -1, 0.495458,-99) , 
10, -1.28574, 1, 0, 0.497889,-99) , 
3, 2.2528, 0, 0, 0.500054,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00695675);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46649,-99) , 
12, -0.835001, 0, 0, 0.498957,-99) , 
3, 2.68748, 0, 0, 0.500122,-99) , 
10, -2.14285, 1, 0, 0.501116,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.02318);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489681,-99) , 
12, 0.583746, 0, 0, 0.502879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484834,-99) , 
10, 0.305991, 0, 0, 0.49106,-99) , 
8, 1.55213, 0, 0, 0.49822,-99) , 
10, -2.14285, 1, 0, 0.499213,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0268481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.80612, 0, 1, 0.5129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443812,-99) , 
12, 6.75376, 0, 0, 0.476758,-99) , 
8, 1.10596, 0, 0, 0.507287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493842,-99) , 
13, 2.18246, 0, 0, 0.498235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428736,-99) , 
11, -1.86076, 1, 0, 0.464362,-99) , 
12, 0.674024, 0, 0, 0.493968,-99) , 
10, -0.142888, 1, 0, 0.500076,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.00969044);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528082,-99) , 
NN(
NN(
0, 
0, 
-1, 2.43569, 0, 1, 0.502018,-99) , 
NN(
0, 
0, 
-1, -0.00453225, 1, -1, 0.489206,-99) , 
12, 0.515272, 0, 0, 0.499183,-99) , 
3, 2.73085, 0, 0, 0.500244,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0153369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.30219, 0, 1, 0.502676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460043,-99) , 
13, 0.72797, 0, 0, 0.50065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494631,-99) , 
11, 7.7606, 0, 0, 0.499694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437088,-99) , 
12, 1.40049, 0, 0, 0.489658,-99) , 
10, 0.714251, 1, 0, 0.4979,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0387019);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49039,-99) , 
9, -949.135, 1, 0, 0.506691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457425,-99) , 
10, 1.85717, 1, 0, 0.503617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492361,-99) , 
8, 1.20958, 0, 0, 0.501482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459791,-99) , 
9, -951.286, 0, 0, 0.478553,-99) , 
11, 1.56921, 0, 0, 0.492014,-99) , 
8, 1.74165, 0, 0, 0.497503,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0269249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459163,-99) , 
12, 8.54175, 0, 0, 0.497417,-99) , 
8, 1.01074, 0, 0, 0.508092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495473,-99) , 
11, 1.40908, 0, 0, 0.499399,-99) , 
NN(
0, 
0, 
-1, 2.79406, 0, -1, 0.461976,-99) , 
12, 3.5276, 1, 0, 0.495683,-99) , 
11, 4.29333, 0, 0, 0.498,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0207418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498854,-99) , 
10, 0.127747, 1, 0, 0.513714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495857,-99) , 
10, -1.00018, 1, 0, 0.499437,-99) , 
8, 1.97292, 0, 0, 0.502821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522788,-99) , 
NN(
0, 
0, 
-1, -0.787371, 0, -1, 0.481298,-99) , 
11, -2.93034, 1, 0, 0.490397,-99) , 
12, 0.0998317, 0, 0, 0.500701,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0288675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466772,-99) , 
8, 1.48051, 0, 0, 0.502418,-99) , 
11, 1.65162, 0, 0, 0.506182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496193,-99) , 
13, 0.987193, 0, 0, 0.508094,-99) , 
NN(
0, 
0, 
-1, 2.67561, 0, -1, 0.475387,-99) , 
11, 5.59935, 0, 0, 0.494731,-99) , 
12, 3.54503, 1, 0, 0.503155,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0197189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496986,-99) , 
11, 1.07922, 0, 0, 0.502442,-99) , 
8, 2.60405, 0, 0, 0.503801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528433,-99) , 
NN(
0, 
0, 
-1, -0.819798, 0, -1, 0.472784,-99) , 
11, -3.00294, 1, 0, 0.485591,-99) , 
12, -0.0685417, 0, 0, 0.501211,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0168803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482673,-99) , 
4, 5.14657, 1, 0, 0.523194,-99) , 
NN(
NN(
0, 
0, 
-1, -0.72968, 1, 1, 0.502959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483801,-99) , 
2, -0.112257, 1, 0, 0.490157,-99) , 
0, 0.500947, 1, 0, 0.499898,-99) , 
2, 0.214104, 0, 0, 0.501471,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.00864289);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499422,-99) , 
10, -1.85716, 1, 0, 0.500954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463988,-99) , 
12, -1.03053, 0, 0, 0.499344,-99) , 
12, 13.4227, 0, 0, 0.500267,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0208188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.98977, 1, 1, 0.527195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495621,-99) , 
8, 1.65352, 0, 0, 0.500578,-99) , 
8, 2.51851, 0, 0, 0.502449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473866,-99) , 
11, -2.36939, 1, 0, 0.49755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459589,-99) , 
12, -1.10365, 0, 0, 0.487299,-99) , 
12, -0.0983186, 0, 0, 0.500341,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00882069);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524397,-99) , 
NN(
NN(
0, 
0, 
-1, 7.72995, 0, 1, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466442,-99) , 
11, 12.8849, 1, 0, 0.501176,-99) , 
12, 13.1857, 0, 0, 0.502008,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0177915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48009,-99) , 
12, -0.620387, 0, 0, 0.502839,-99) , 
NN(
0, 
0, 
-1, 1.16266, 0, -1, 0.490885,-99) , 
10, 0.428509, 1, 0, 0.498862,-99) , 
12, 11.3601, 0, 0, 0.500087,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0225363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487879,-99) , 
13, 0.764244, 0, 0, 0.504546,-99) , 
8, 1.28292, 0, 0, 0.510181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495399,-99) , 
11, 1.05646, 0, 0, 0.499526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439382,-99) , 
12, 3.47253, 1, 0, 0.496996,-99) , 
11, 2.61286, 0, 0, 0.500221,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0293263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.890673, 1, 1, 0.529305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451625,-99) , 
10, 0.125962, 1, 0, 0.495979,-99) , 
12, 0.807672, 0, 0, 0.508465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492858,-99) , 
10, 1.61168, 0, 0, 0.494907,-99) , 
10, -1.85727, 1, 0, 0.497455,-99) , 
8, 1.97301, 0, 0, 0.501078,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0142337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493978,-99) , 
13, 0.787034, 0, 0, 0.515577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498664,-99) , 
11, 2.90814, 0, 0, 0.500883,-99) , 
NN(
0, 
0, 
-1, 5.21524, 0, -1, 0.476301,-99) , 
8, 1.18073, 0, 0, 0.498562,-99) , 
12, 7.67087, 0, 0, 0.500352,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0321428);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459295,-99) , 
12, -1.2029, 0, 0, 0.521693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486059,-99) , 
12, 1.05908, 0, 0, 0.501068,-99) , 
10, -0.714189, 1, 0, 0.50633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499953,-99) , 
3, 0.937913, 0, 0, 0.508036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445979,-99) , 
11, 2.52583, 0, 0, 0.47916,-99) , 
11, 5.58205, 0, 0, 0.496116,-99) , 
8, 1.34177, 0, 0, 0.503583,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0169478);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53122,-99) , 
NN(
NN(
0, 
0, 
-1, 8.13668, 0, 1, 0.50542,-99) , 
NN(
0, 
0, 
-1, 1.42979, 0, -1, 0.486709,-99) , 
10, 0.714245, 1, 0, 0.500841,-99) , 
12, 11.8098, 0, 0, 0.502275,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0141169);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.38038, 0, 1, 0.505218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515605,-99) , 
NN(
0, 
0, 
-1, -0.818405, 1, -1, 0.480666,-99) , 
3, 2.54017, 0, 0, 0.489248,-99) , 
12, -0.0983186, 0, 0, 0.502991,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0144918);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499463,-99) , 
10, -0.999906, 1, 0, 0.502792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460123,-99) , 
11, 3.39754, 0, 0, 0.490108,-99) , 
8, 1.35649, 0, 0, 0.49971,-99) , 
12, 11.8098, 0, 0, 0.500897,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0237885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495464,-99) , 
11, -1.4092, 1, 0, 0.511992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496374,-99) , 
12, 8.26282, 0, 0, 0.498918,-99) , 
8, 1.89997, 0, 0, 0.502495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469395,-99) , 
12, -0.84017, 0, 0, 0.496955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461414,-99) , 
10, -0.351319, 1, 0, 0.488476,-99) , 
12, 0.18073, 0, 0, 0.499928,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0146337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491916,-99) , 
4, 5.21832, 1, 0, 0.521912,-99) , 
NN(
NN(
0, 
0, 
-1, 2.3302, 0, 1, 0.505122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448507,-99) , 
10, -0.000714143, 1, 0, 0.492695,-99) , 
12, 0.379125, 0, 0, 0.502429,-99) , 
2, 0.214088, 0, 0, 0.503728,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0185042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480313,-99) , 
12, -0.843655, 0, 0, 0.518768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48626,-99) , 
12, 1.21703, 0, 0, 0.497075,-99) , 
8, 2.66764, 0, 0, 0.49841,-99) , 
11, -2.29409, 1, 0, 0.500259,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0252968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490184,-99) , 
12, -0.350515, 0, 0, 0.51244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46713,-99) , 
12, 0.548752, 0, 0, 0.497381,-99) , 
10, -0.142772, 1, 0, 0.50397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49899,-99) , 
12, 13.442, 0, 0, 0.502632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439952,-99) , 
11, 1.96437, 0, 0, 0.492169,-99) , 
13, 1.38903, 0, 0, 0.50042,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0156747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.23917, 0, 1, 0.512508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495626,-99) , 
10, -1.53061, 1, 0, 0.497914,-99) , 
8, 2.1833, 0, 0, 0.501198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470506,-99) , 
10, 2.14283, 1, 0, 0.500421,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.00801528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502375,-99) , 
NN(
0, 
0, 
-1, 0.107128, 0, -1, 0.483362,-99) , 
0, 0.490879, 0, 0, 0.50129,-99) , 
NN(
0, 
0, 
-1, 0.506117, 1, -1, 0.482736,-99) , 
0, 0.504757, 1, 0, 0.500211,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0123692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.31971, 0, 1, 0.511367,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.496356,-99) , 
8, 2.15576, 0, 0, 0.499919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466407,-99) , 
10, 2.1428, 1, 0, 0.499077,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0269439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39663, 1, 1, 0.508296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485238,-99) , 
6, -0.560524, 1, 0, 0.494477,-99) , 
13, 1.42262, 0, 0, 0.502674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478758,-99) , 
12, -0.514007, 0, 0, 0.506541,-99) , 
NN(
0, 
0, 
-1, -0.305382, 1, -1, 0.474174,-99) , 
11, -2.12445, 1, 0, 0.490545,-99) , 
12, 0.400445, 0, 0, 0.500003,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0233466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85743, 1, 1, 0.505688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453469,-99) , 
5, 0.999163, 0, 0, 0.502985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489552,-99) , 
12, 1.19748, 0, 0, 0.498214,-99) , 
NN(
0, 
0, 
-1, 0.161483, 1, -1, 0.470889,-99) , 
3, 1.71615, 0, 0, 0.491591,-99) , 
6, -0.00941309, 1, 0, 0.498254,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0304915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465448,-99) , 
10, -0.486751, 1, 0, 0.492721,-99) , 
12, 0.371292, 0, 0, 0.507608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496774,-99) , 
5, 0.999524, 1, 0, 0.506039,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.488824,-99) , 
9, -951.206, 0, 0, 0.494652,-99) , 
11, -1.22553, 1, 0, 0.497918,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0157359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495597,-99) , 
6, 0.567697, 1, 0, 0.517783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487821,-99) , 
12, 0.250545, 0, 0, 0.499801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466749,-99) , 
9, -951.286, 0, 0, 0.48319,-99) , 
10, 1.28564, 1, 0, 0.497932,-99) , 
3, 2.41216, 0, 0, 0.499627,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0260304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483225,-99) , 
12, -0.981899, 0, 0, 0.523074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477933,-99) , 
13, 1.24316, 0, 0, 0.512433,-99) , 
NN(
NN(
0, 
0, 
-1, 0.333198, 1, 1, 0.520447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488558,-99) , 
11, 0.744867, 0, 0, 0.496046,-99) , 
3, 2.39455, 0, 0, 0.498351,-99) , 
10, -1.00003, 1, 0, 0.501079,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0338652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493788,-99) , 
12, -0.185855, 0, 0, 0.510624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457435,-99) , 
12, 1.41081, 0, 0, 0.491366,-99) , 
10, 0.428656, 1, 0, 0.503363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481491,-99) , 
13, 0.782461, 0, 0, 0.504889,-99) , 
NN(
0, 
0, 
-1, 2.29829, 1, -1, 0.46575,-99) , 
11, 1.83592, 0, 0, 0.493724,-99) , 
8, 1.53506, 0, 0, 0.499618,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0302957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.15762, 0, 1, 0.515979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453513,-99) , 
10, 1.57148, 1, 0, 0.508808,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493126,-99) , 
10, -1.00039, 1, 0, 0.504062,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.487975,-99) , 
9, -948.526, 0, 0, 0.493309,-99) , 
13, 2.01591, 0, 0, 0.498009,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0237296);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.96657, 1, 1, 0.521545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474022,-99) , 
8, 1.12135, 0, 0, 0.505087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491578,-99) , 
12, 11.4109, 0, 0, 0.494134,-99) , 
10, -0.428577, 1, 0, 0.498049,-99) , 
2, 0.214212, 0, 0, 0.499614,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.022513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.21835, 0, 1, 0.511121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492205,-99) , 
10, -1.97961, 1, 0, 0.494506,-99) , 
8, 1.96268, 0, 0, 0.499767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50751,-99) , 
NN(
0, 
0, 
-1, 1.69381, 1, -1, 0.469999,-99) , 
9, -951.286, 0, 0, 0.483075,-99) , 
10, 1.28564, 1, 0, 0.497798,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0122448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.3158, 0, 1, 0.503131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47366,-99) , 
11, -2.26808, 1, 0, 0.490392,-99) , 
12, 0.160852, 0, 0, 0.500777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468183,-99) , 
10, 2.14283, 1, 0, 0.499955,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.94851, 0, 1, 0.502991,-99) , 
NN(
0, 
0, 
-1, -0.791136, 1, -1, 0.483702,-99) , 
8, 0.90588, 0, 0, 0.501182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492168,-99) , 
9, -948.526, 0, 0, 0.501296,-99) , 
NN(
0, 
0, 
-1, 2.23789, 0, -1, 0.459729,-99) , 
11, 0.150365, 0, 0, 0.487247,-99) , 
10, 0.99998, 1, 0, 0.498744,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0175301);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494043,-99) , 
5, 0.999932, 0, 0, 0.501664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440299,-99) , 
0, 0.496185, 0, 0, 0.478206,-99) , 
5, 0.998572, 0, 0, 0.499955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504239,-99) , 
NN(
0, 
0, 
-1, -0.00562689, 0, -1, 0.472541,-99) , 
10, -0.140911, 1, 0, 0.485744,-99) , 
9, 0.525285, 1, 0, 0.498065,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0213242);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495491,-99) , 
13, 1.6088, 0, 0, 0.501041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472859,-99) , 
11, -2.27963, 1, 0, 0.488064,-99) , 
12, 0.546641, 0, 0, 0.497966,-99) , 
10, -2.14286, 1, 0, 0.499114,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0180875);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479509,-99) , 
12, -0.372926, 0, 0, 0.500255,-99) , 
NN(
0, 
0, 
-1, 1.55135, 0, -1, 0.484619,-99) , 
10, 0.714244, 1, 0, 0.496394,-99) , 
12, 12.6599, 0, 0, 0.497496,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0105784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494958,-99) , 
10, 0.141802, 0, 0, 0.512507,-99) , 
NN(
0, 
0, 
-1, 0.0237973, 1, -1, 0.496541,-99) , 
6, -0.729336, 1, 0, 0.4978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470554,-99) , 
2, -0.357162, 0, 0, 0.497063,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0302935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.513084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486133,-99) , 
11, 5.70791, 0, 0, 0.498961,-99) , 
12, 3.0548, 1, 0, 0.504328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489277,-99) , 
10, -0.713991, 1, 0, 0.497645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424001,-99) , 
13, 1.55794, 0, 0, 0.492488,-99) , 
11, 0.108592, 0, 0, 0.498477,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0217594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480751,-99) , 
8, 1.12093, 0, 0, 0.509247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495352,-99) , 
8, 2.3939, 0, 0, 0.498342,-99) , 
10, -0.551022, 1, 0, 0.502262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508422,-99) , 
NN(
0, 
0, 
-1, 0.169078, 1, -1, 0.470922,-99) , 
9, -951.286, 0, 0, 0.484118,-99) , 
10, 1.28568, 1, 0, 0.500144,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.023622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494865,-99) , 
11, 2.40444, 0, 0, 0.499458,-99) , 
8, 2.66764, 0, 0, 0.50069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472448,-99) , 
11, -2.55517, 1, 0, 0.489465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447948,-99) , 
12, -1.26469, 0, 0, 0.482424,-99) , 
12, 0.0997583, 0, 0, 0.497585,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0218207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.58661, 1, 1, 0.506058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472372,-99) , 
11, 4.44304, 0, 0, 0.491705,-99) , 
13, 1.32543, 0, 0, 0.501596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474539,-99) , 
11, -2.54534, 1, 0, 0.494619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454927,-99) , 
12, -1.22061, 0, 0, 0.486341,-99) , 
12, -0.0224326, 0, 0, 0.499295,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0209268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39087, 1, 1, 0.506912,-99) , 
NN(
0, 
0, 
-1, 2.8327, 0, -1, 0.49028,-99) , 
8, 1.28862, 0, 0, 0.502083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484713,-99) , 
12, -0.351841, 0, 0, 0.497075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451782,-99) , 
10, -0.229311, 1, 0, 0.488846,-99) , 
12, 0.14394, 0, 0, 0.499753,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0228248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18238, 0, 1, 0.51497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484279,-99) , 
13, 0.731269, 0, 0, 0.509352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493481,-99) , 
12, 1.32006, 0, 0, 0.500237,-99) , 
NN(
0, 
0, 
-1, 0.848591, 0, -1, 0.469007,-99) , 
8, 1.42712, 0, 0, 0.497069,-99) , 
11, 2.29227, 0, 0, 0.500296,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0111471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489688,-99) , 
12, 0.821127, 0, 0, 0.497768,-99) , 
10, -2.14285, 1, 0, 0.498922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460028,-99) , 
2, -0.357184, 0, 0, 0.497909,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0138969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.837776, 0, 1, 0.51417,-99) , 
NN(
0, 
0, 
-1, 0.918299, 1, -1, 0.495449,-99) , 
8, 2.39366, 0, 0, 0.498296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456908,-99) , 
10, 2.14277, 1, 0, 0.497253,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0218809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.2676, 0, 1, 0.51278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492835,-99) , 
12, 6.69509, 0, 0, 0.497063,-99) , 
8, 1.9038, 0, 0, 0.50247,-99) , 
NN(
0, 
0, 
-1, 1.53014, 0, -1, 0.485649,-99) , 
10, 0.999984, 1, 0, 0.499508,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.00609981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.68407, 0, 1, 0.501278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473252,-99) , 
3, 0.657881, 0, 0, 0.500268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470109,-99) , 
1, 0.023789, 1, 0, 0.499338,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.00863013);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52335,-99) , 
NN(
NN(
0, 
0, 
-1, 2.50478, 0, 1, 0.501436,-99) , 
NN(
0, 
0, 
-1, 0.32182, 1, -1, 0.490668,-99) , 
12, 0.821127, 0, 0, 0.498325,-99) , 
10, -2.14286, 1, 0, 0.499086,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0141039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43186, 0, 1, 0.519856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496622,-99) , 
5, 0.999547, 1, 0, 0.499062,-99) , 
10, -1.57143, 1, 0, 0.500862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474857,-99) , 
5, 0.997619, 0, 0, 0.499745,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0193298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49205,-99) , 
9, -949.113, 0, 0, 0.515803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495419,-99) , 
10, -1.85713, 1, 0, 0.497243,-99) , 
5, 0.999524, 1, 0, 0.500251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475388,-99) , 
4, 9.79756, 1, 0, 0.499343,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0281642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487644,-99) , 
12, -0.540594, 0, 0, 0.513965,-99) , 
NN(
0, 
0, 
-1, 6.96592, 0, -1, 0.476175,-99) , 
8, 1.10805, 0, 0, 0.508191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488455,-99) , 
10, 1.20406, 1, 0, 0.500838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473655,-99) , 
12, 0.557772, 0, 0, 0.497929,-99) , 
10, -0.14287, 1, 0, 0.502634,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0232921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.86794, 1, 1, 0.525968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487874,-99) , 
11, -1.18508, 1, 0, 0.496393,-99) , 
11, -1.90857, 1, 0, 0.512939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487601,-99) , 
3, 1.32699, 0, 0, 0.508767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487548,-99) , 
11, 0.853588, 0, 0, 0.495498,-99) , 
10, -1.00002, 1, 0, 0.498131,-99) , 
3, 2.23667, 0, 0, 0.500052,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0134408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.292583, 0, 1, 0.524096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494314,-99) , 
11, -1.53593, 1, 0, 0.514945,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85705, 0, 1, 0.502976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45877,-99) , 
8, 1.64212, 0, 0, 0.493349,-99) , 
11, 0.338529, 0, 0, 0.498464,-99) , 
3, 2.2528, 0, 0, 0.500515,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0244575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.21924, 0, 1, 0.508121,-99) , 
NN(
0, 
0, 
-1, 5.55429, 0, -1, 0.481532,-99) , 
13, 1.22713, 0, 0, 0.50231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494371,-99) , 
8, 2.07654, 0, 0, 0.499065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404684,-99) , 
11, -1.63048, 1, 0, 0.453472,-99) , 
12, 0.961583, 0, 0, 0.492358,-99) , 
10, 0.142848, 1, 0, 0.497953,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0191685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47762,-99) , 
12, 7.03682, 0, 0, 0.501703,-99) , 
8, 1.12409, 0, 0, 0.508456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481954,-99) , 
12, -0.315384, 0, 0, 0.498915,-99) , 
NN(
0, 
0, 
-1, 1.25212, 0, -1, 0.47317,-99) , 
8, 1.39206, 0, 0, 0.495526,-99) , 
11, 4.02185, 0, 0, 0.498035,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0176354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.141433, 1, 1, 0.518793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462118,-99) , 
12, 7.98596, 0, 0, 0.490553,-99) , 
8, 1.05643, 0, 0, 0.503755,-99) , 
NN(
0, 
0, 
-1, 1.33078, 0, -1, 0.493988,-99) , 
11, 2.32414, 0, 0, 0.496545,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0272897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.15675, 0, 1, 0.538719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498998,-99) , 
3, 1.2478, 0, 0, 0.52241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492868,-99) , 
13, 1.76963, 0, 0, 0.504049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488822,-99) , 
12, 11.0892, 0, 0, 0.492115,-99) , 
10, -0.0476604, 1, 0, 0.497433,-99) , 
10, -1.57144, 1, 0, 0.499593,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0144219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.04439, 1, 1, 0.503826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479724,-99) , 
8, 0.700177, 0, 0, 0.502764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524228,-99) , 
NN(
0, 
0, 
-1, -0.437389, 0, -1, 0.48306,-99) , 
11, -2.96512, 1, 0, 0.490505,-99) , 
12, 0.239737, 0, 0, 0.500385,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0224314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.01861, 1, 1, 0.509795,-99) , 
NN(
0, 
0, 
-1, 0.479371, 1, -1, 0.484152,-99) , 
12, -0.512413, 0, 0, 0.505314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489457,-99) , 
9, -43.22, 1, 0, 0.499382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455007,-99) , 
11, -0.353074, 0, 0, 0.476374,-99) , 
12, 1.29672, 0, 0, 0.495892,-99) , 
8, 1.75366, 0, 0, 0.500282,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0151215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493992,-99) , 
11, 2.7817, 0, 0, 0.497184,-99) , 
3, 2.53123, 0, 0, 0.498497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475222,-99) , 
4, 9.78684, 1, 0, 0.497649,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00919392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.48392, 1, 1, 0.531016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485229,-99) , 
9, 0.525285, 1, 0, 0.498372,-99) , 
2, 0.180158, 0, 0, 0.500237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471494,-99) , 
2, 0.356993, 1, 0, 0.499447,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0235775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.723806, 0, 1, 0.508793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453536,-99) , 
12, 7.52578, 0, 0, 0.479553,-99) , 
3, 0.958538, 0, 0, 0.504703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48849,-99) , 
8, 2.49247, 0, 0, 0.49221,-99) , 
12, 10.3025, 0, 0, 0.494797,-99) , 
10, -0.142888, 1, 0, 0.499324,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0232861);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489642,-99) , 
8, 1.24494, 0, 0, 0.502058,-99) , 
NN(
0, 
0, 
-1, 1.28539, 1, -1, 0.488895,-99) , 
11, 0.156891, 0, 0, 0.495672,-99) , 
3, 2.73084, 0, 0, 0.496763,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.020497);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48976,-99) , 
10, 0.551007, 1, 0, 0.502959,-99) , 
NN(
0, 
0, 
-1, 2.13355, 0, -1, 0.490745,-99) , 
13, 1.55976, 0, 0, 0.498028,-99) , 
10, -2.14286, 1, 0, 0.498961,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0132964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501899, 0, 1, 0.511465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492511,-99) , 
2, -0.0035273, 1, 0, 0.49802,-99) , 
2, 0.071281, 0, 0, 0.500368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466841,-99) , 
5, 0.996191, 0, 0, 0.499478,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0250883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487028,-99) , 
12, 1.89073, 0, 0, 0.497916,-99) , 
9, -949.96, 0, 0, 0.507093,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469052,-99) , 
12, -0.452148, 0, 0, 0.51092,-99) , 
NN(
0, 
0, 
-1, 0.704012, 0, -1, 0.492515,-99) , 
8, 2.39368, 0, 0, 0.495562,-99) , 
10, -1.00001, 1, 0, 0.497782,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0311375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499032,-99) , 
11, 3.34975, 0, 0, 0.52183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473074,-99) , 
6, -0.779296, 1, 0, 0.494931,-99) , 
13, 0.906111, 0, 0, 0.512538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493656,-99) , 
12, 0.742767, 0, 0, 0.505023,-99) , 
NN(
0, 
0, 
-1, 0.354565, 0, -1, 0.48123,-99) , 
8, 1.65852, 0, 0, 0.498407,-99) , 
11, 2.10924, 0, 0, 0.502276,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0157601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475844,-99) , 
9, -949.113, 0, 0, 0.518779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498957,-99) , 
10, -2.14284, 1, 0, 0.500483,-99) , 
5, 0.999048, 1, 0, 0.502384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478865,-99) , 
4, 9.13827, 1, 0, 0.501324,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.014987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.21211, 0, 1, 0.50632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472793,-99) , 
3, 0.656946, 0, 0, 0.505115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478641,-99) , 
1, 0.0242548, 1, 0, 0.504333,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0231399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479295,-99) , 
12, -1.02752, 0, 0, 0.517299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459234,-99) , 
11, 4.0685, 0, 0, 0.483974,-99) , 
3, 1.11609, 0, 0, 0.50961,-99) , 
NN(
NN(
0, 
0, 
-1, 1.84062, 0, 1, 0.506273,-99) , 
NN(
0, 
0, 
-1, 1.15472, 1, -1, 0.491787,-99) , 
12, 1.89627, 0, 0, 0.499906,-99) , 
10, -0.714289, 1, 0, 0.502508,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0128136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.77623, 0, 1, 0.504455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471882,-99) , 
7, 0.0237902, 1, 0, 0.503049,-99) , 
NN(
0, 
0, 
-1, 11.1856, 0, -1, 0.485394,-99) , 
13, 0.927754, 0, 0, 0.50125,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0234426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.518445, 0, 1, 0.514032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49242,-99) , 
9, -1.26137, 0, 0, 0.498676,-99) , 
3, 1.89488, 0, 0, 0.502438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495943,-99) , 
8, 2.2738, 0, 0, 0.500254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433128,-99) , 
12, 1.29114, 0, 0, 0.491278,-99) , 
10, 0.714268, 1, 0, 0.49965,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0270037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.64864, 1, 1, 0.511901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495965,-99) , 
11, -1.46659, 1, 0, 0.50134,-99) , 
11, 2.75009, 0, 0, 0.504348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475951,-99) , 
11, -2.55346, 1, 0, 0.495349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454495,-99) , 
12, -1.24812, 0, 0, 0.488195,-99) , 
12, 0.0849659, 0, 0, 0.501656,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.017585);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494599,-99) , 
3, 1.15545, 0, 0, 0.53381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493141,-99) , 
12, -0.694591, 0, 0, 0.521315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496812,-99) , 
8, 1.97292, 0, 0, 0.50205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472024,-99) , 
10, 2.12916, 1, 0, 0.501219,-99) , 
10, -1.57145, 1, 0, 0.502956,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0198265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492997,-99) , 
8, 1.21585, 0, 0, 0.50502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471939,-99) , 
6, 0.61406, 1, 0, 0.503558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460968,-99) , 
5, 0.996667, 0, 0, 0.502257,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0142447);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498456,-99) , 
11, -1.31734, 1, 0, 0.502239,-99) , 
NN(
0, 
0, 
-1, -0.65918, 1, -1, 0.482464,-99) , 
12, -0.245245, 0, 0, 0.499793,-99) , 
12, 13.2243, 0, 0, 0.500684,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0172331);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214287, 0, 1, 0.505177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48082,-99) , 
12, -0.659878, 0, 0, 0.501928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465133,-99) , 
10, -0.279995, 1, 0, 0.493788,-99) , 
12, 0.222023, 0, 0, 0.503011,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.00873267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.44339, 1, 1, 0.523422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498251,-99) , 
2, 0.139599, 0, 0, 0.499646,-99) , 
2, -0.1804, 1, 0, 0.500942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477201,-99) , 
2, -0.357266, 0, 0, 0.500307,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0160017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.01591, 0, 1, 0.505334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478384,-99) , 
11, -2.29908, 1, 0, 0.493364,-99) , 
12, 0.239737, 0, 0, 0.502974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473276,-99) , 
10, 2.14283, 1, 0, 0.502222,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0234493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.104835, 1, 1, 0.514458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476155,-99) , 
11, 4.71021, 0, 0, 0.495937,-99) , 
3, 1.23759, 0, 0, 0.504734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496695,-99) , 
11, 0.0784558, 0, 0, 0.499772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44589,-99) , 
10, 0.902565, 1, 0, 0.494897,-99) , 
12, 1.80379, 0, 0, 0.499855,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0191524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462549,-99) , 
10, 1.77552, 1, 0, 0.504517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485924,-99) , 
11, 2.22965, 0, 0, 0.49382,-99) , 
8, 1.75368, 0, 0, 0.498864,-99) , 
10, -2.14283, 1, 0, 0.500031,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0231987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486491,-99) , 
10, -1.61224, 0, 0, 0.502552,-99) , 
9, -949.657, 0, 0, 0.513532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495539,-99) , 
3, 1.60516, 0, 0, 0.501438,-99) , 
NN(
0, 
0, 
-1, 0.673523, 1, -1, 0.488585,-99) , 
12, 1.42489, 0, 0, 0.496595,-99) , 
10, -1.2857, 1, 0, 0.498815,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.00808889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.87647, 0, 1, 0.502186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474798,-99) , 
8, 0.710625, 0, 0, 0.501142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474624,-99) , 
0, 0.490471, 0, 0, 0.499977,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0213106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.9236, 0, 1, 0.508442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466104,-99) , 
12, 7.17474, 0, 0, 0.486814,-99) , 
8, 1.12093, 0, 0, 0.504908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497052,-99) , 
6, -0.731396, 1, 0, 0.499969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413787,-99) , 
8, 2.6908, 0, 0, 0.455562,-99) , 
12, 0.978704, 0, 0, 0.493281,-99) , 
10, 0.142805, 1, 0, 0.499798,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0147054);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475128,-99) , 
8, 0.697147, 0, 0, 0.502476,-99) , 
NN(
0, 
0, 
-1, 0.227258, 1, -1, 0.487906,-99) , 
12, 0.681222, 0, 0, 0.498663,-99) , 
10, -2.14285, 1, 0, 0.499497,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0230043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493645,-99) , 
3, 1.25775, 0, 0, 0.51562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471335,-99) , 
5, 0.999524, 0, 0, 0.509218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492646,-99) , 
12, 3.50268, 1, 0, 0.500883,-99) , 
NN(
0, 
0, 
-1, 0.835147, 1, -1, 0.490671,-99) , 
12, 1.8339, 0, 0, 0.496349,-99) , 
10, -1.00001, 1, 0, 0.498817,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0216419);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469107,-99) , 
12, -1.14942, 0, 0, 0.515474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48425,-99) , 
8, 1.10647, 0, 0, 0.510897,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49655,-99) , 
3, 0.915473, 0, 0, 0.508428,-99) , 
NN(
0, 
0, 
-1, 3.51503, 1, -1, 0.495329,-99) , 
11, 5.52985, 0, 0, 0.497632,-99) , 
10, -0.714326, 1, 0, 0.501197,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0232765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.13416, 1, 1, 0.510649,-99) , 
NN(
0, 
0, 
-1, -949.657, 1, -1, 0.476826,-99) , 
12, -0.602448, 0, 0, 0.505441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487308,-99) , 
6, -0.328954, 1, 0, 0.499418,-99) , 
NN(
0, 
0, 
-1, 1.26199, 0, -1, 0.471239,-99) , 
5, 0.999524, 0, 0, 0.496654,-99) , 
8, 1.73183, 0, 0, 0.500868,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0180794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.22785, 1, 1, 0.519742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485363,-99) , 
12, 0.5886, 0, 0, 0.499975,-99) , 
3, 2.41215, 0, 0, 0.501658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491735,-99) , 
5, 0.999977, 0, 0, 0.501154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454933,-99) , 
5, 0.999524, 0, 0, 0.488874,-99) , 
0, 0.493328, 0, 0, 0.499923,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0234389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.12239, 0, 1, 0.512695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490222,-99) , 
11, 1.8323, 0, 0, 0.49773,-99) , 
13, 1.89509, 0, 0, 0.502866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488264,-99) , 
9, -951.286, 0, 0, 0.496134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44659,-99) , 
12, 1.58512, 0, 0, 0.48814,-99) , 
10, 0.999955, 1, 0, 0.500267,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0172689);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494445,-99) , 
13, 1.46846, 0, 0, 0.501808,-99) , 
NN(
0, 
0, 
-1, 0.321812, 1, -1, 0.489658,-99) , 
12, 0.884696, 0, 0, 0.498157,-99) , 
10, -2.14286, 1, 0, 0.498966,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0194738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.55101, 0, 1, 0.505172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459528,-99) , 
13, 0.74553, 0, 0, 0.502763,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488612,-99) , 
10, 1.40814, 1, 0, 0.500353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440224,-99) , 
12, 1.11095, 0, 0, 0.492056,-99) , 
10, 0.428555, 1, 0, 0.499129,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0217033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497118,-99) , 
11, 0.719693, 0, 0, 0.500495,-99) , 
6, -0.344693, 1, 0, 0.503393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493472,-99) , 
12, 4.64864, 1, 0, 0.500446,-99) , 
NN(
0, 
0, 
-1, 1.27189, 0, -1, 0.474187,-99) , 
11, 2.7636, 0, 0, 0.491901,-99) , 
13, 1.46024, 0, 0, 0.499398,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0184399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.460094, 0, 1, 0.512534,-99) , 
NN(
0, 
0, 
-1, -0.695456, 1, -1, 0.482286,-99) , 
8, 1.12093, 0, 0, 0.507735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516427,-99) , 
NN(
0, 
0, 
-1, 0.0238027, 1, -1, 0.493893,-99) , 
12, 10.0581, 0, 0, 0.495665,-99) , 
10, -0.428607, 1, 0, 0.499978,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0172109);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496801,-99) , 
11, 1.65308, 0, 0, 0.50163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471247,-99) , 
12, 13.3451, 0, 0, 0.486948,-99) , 
8, 0.905437, 0, 0, 0.50026,-99) , 
10, -2.14283, 1, 0, 0.50113,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0255538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.26213, 0, 1, 0.511164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470283,-99) , 
11, 1.83403, 0, 0, 0.495932,-99) , 
8, 1.51253, 0, 0, 0.505277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439407,-99) , 
12, 2.22056, 0, 0, 0.467952,-99) , 
13, 1.90998, 1, 0, 0.485891,-99) , 
10, 1.2857, 1, 0, 0.503013,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0270917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478024,-99) , 
12, -1.13864, 0, 0, 0.519235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470965,-99) , 
12, -0.356583, 0, 0, 0.499256,-99) , 
10, -0.999951, 1, 0, 0.502966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462838,-99) , 
7, 0.00453149, 1, 0, 0.484443,-99) , 
7, 0.0237903, 0, 0, 0.489988,-99) , 
3, 1.13743, 0, 0, 0.499996,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0228734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.077443, 1, 1, 0.531575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490496,-99) , 
13, 1.33861, 0, 0, 0.516358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441045,-99) , 
10, 1.69386, 1, 0, 0.504734,-99) , 
NN(
0, 
0, 
-1, 0.35318, 0, -1, 0.492601,-99) , 
13, 2.00101, 0, 0, 0.496467,-99) , 
10, -1.57142, 1, 0, 0.498169,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0190724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.36211, 0, 1, 0.504758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471635,-99) , 
11, 13.6022, 1, 0, 0.502758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491987,-99) , 
8, 2.30455, 0, 0, 0.496499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436863,-99) , 
12, 0.957184, 0, 0, 0.490041,-99) , 
10, 0.428541, 1, 0, 0.498444,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0241053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494318,-99) , 
11, -1.79241, 1, 0, 0.51107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492928,-99) , 
10, -1.00003, 1, 0, 0.496127,-99) , 
13, 2.0469, 0, 0, 0.499321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462337,-99) , 
10, -1.3762, 1, 0, 0.478128,-99) , 
11, -2.84881, 1, 0, 0.485839,-99) , 
12, -0.129857, 0, 0, 0.497494,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0266386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499681,-99) , 
10, 0.103542, 1, 0, 0.518622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492306,-99) , 
12, -0.487318, 0, 0, 0.510787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492498,-99) , 
8, 1.25401, 0, 0, 0.501981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479563,-99) , 
12, 1.50623, 0, 0, 0.485573,-99) , 
11, -0.18745, 0, 0, 0.496577,-99) , 
3, 2.07879, 0, 0, 0.499198,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0233736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494704,-99) , 
11, -1.58413, 1, 0, 0.518404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482544,-99) , 
12, -0.0596559, 0, 0, 0.495261,-99) , 
9, -949.96, 1, 0, 0.508152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49703,-99) , 
8, 1.04423, 0, 0, 0.508265,-99) , 
NN(
0, 
0, 
-1, 1.27824, 0, -1, 0.490335,-99) , 
11, 3.14834, 0, 0, 0.495215,-99) , 
3, 2.09346, 0, 0, 0.497511,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00842937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499362,-99) , 
10, -1.57143, 1, 0, 0.50095,-99) , 
3, 2.73085, 0, 0, 0.501831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504718,-99) , 
NN(
0, 
0, 
-1, 1.63821, 0, -1, 0.477895,-99) , 
4, 4.63219, 0, 0, 0.485492,-99) , 
0, 0.503804, 1, 0, 0.500383,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0166468);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.6698, 0, 1, 0.505431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532621,-99) , 
NN(
0, 
0, 
-1, -0.00074633, 1, -1, 0.484092,-99) , 
11, -3.00359, 1, 0, 0.491239,-99) , 
12, 0.413866, 0, 0, 0.502258,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0232695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.44574, 1, 1, 0.527842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473361,-99) , 
12, 10.1897, 0, 0, 0.496003,-99) , 
8, 0.973185, 0, 0, 0.510371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497184,-99) , 
11, 1.78368, 0, 0, 0.500496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457467,-99) , 
12, 3.562, 1, 0, 0.497275,-99) , 
11, 3.63558, 0, 0, 0.499989,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0269734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49224,-99) , 
9, -1.26137, 1, 0, 0.51255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46905,-99) , 
10, 1.85717, 1, 0, 0.509881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49637,-99) , 
8, 1.43885, 0, 0, 0.502138,-99) , 
NN(
0, 
0, 
-1, 1.50135, 0, -1, 0.470828,-99) , 
6, 0.0118431, 1, 0, 0.499107,-99) , 
3, 1.60517, 0, 0, 0.503961,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0131127);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.80942, 0, 1, 0.523842,-99) , 
NN(
NN(
0, 
0, 
-1, 5.42987, 0, 1, 0.503418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461642,-99) , 
8, 1.01077, 0, 0, 0.50183,-99) , 
12, 8.13697, 0, 0, 0.503915,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0131932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496053,-99) , 
13, 0.78586, 0, 0, 0.517929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498492,-99) , 
11, -1.86648, 1, 0, 0.501222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46553,-99) , 
12, -1.20236, 0, 0, 0.499977,-99) , 
12, 8.11233, 0, 0, 0.501662,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0209579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.531139, 1, 1, 0.542545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481113,-99) , 
12, 6.6698, 0, 0, 0.504339,-99) , 
13, 1.22266, 0, 0, 0.512699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442124,-99) , 
13, 1.3748, 0, 0, 0.49905,-99) , 
11, 2.67765, 0, 0, 0.500951,-99) , 
6, -0.45969, 1, 0, 0.503688,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0199823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.86717, 0, 1, 0.511237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49626,-99) , 
8, 2.38056, 0, 0, 0.499585,-99) , 
10, -0.142864, 1, 0, 0.503964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518459,-99) , 
NN(
0, 
0, 
-1, -0.787368, 0, -1, 0.479777,-99) , 
11, -3.00576, 1, 0, 0.487309,-99) , 
12, 0.0998317, 0, 0, 0.501139,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0101955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0136284, 0, 1, 0.526759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499544,-99) , 
11, 3.79736, 0, 0, 0.502263,-99) , 
2, 0.21447, 0, 0, 0.503716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472551,-99) , 
5, 0.996667, 0, 0, 0.502765,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0186465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.66251, 1, 1, 0.523957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483441,-99) , 
10, 0.427848, 0, 0, 0.494959,-99) , 
13, 0.931315, 0, 0, 0.509155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498459,-99) , 
11, 1.49899, 0, 0, 0.501584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448216,-99) , 
13, 1.25242, 0, 0, 0.499062,-99) , 
11, 3.80945, 0, 0, 0.501086,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0138122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.35103, 1, 1, 0.51509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494769,-99) , 
0, 0.499995, 1, 0, 0.501919,-99) , 
2, -0.091905, 1, 0, 0.503618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476416,-99) , 
2, -0.357189, 0, 0, 0.502895,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.013979);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.80988, 0, 1, 0.51882,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484711,-99) , 
8, 1.17616, 0, 0, 0.501529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474444,-99) , 
7, 0.0237973, 1, 0, 0.500203,-99) , 
12, 9.88145, 0, 0, 0.501462,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0175985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492435,-99) , 
6, -0.699877, 1, 0, 0.502085,-99) , 
12, 4.58687, 1, 0, 0.507394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496918,-99) , 
11, 1.61578, 0, 0, 0.499289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455665,-99) , 
12, 3.3508, 1, 0, 0.497342,-99) , 
11, 2.39501, 0, 0, 0.499917,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0209066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.31168, 1, 1, 0.507819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472341,-99) , 
12, -0.966159, 0, 0, 0.505342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497879,-99) , 
13, 0.945046, 0, 0, 0.509145,-99) , 
NN(
0, 
0, 
-1, 1.14385, 0, -1, 0.486358,-99) , 
11, 6.22162, 0, 0, 0.496438,-99) , 
3, 1.29673, 0, 0, 0.502427,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0161281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.05297, 0, 1, 0.518173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476919,-99) , 
11, 4.38853, 0, 0, 0.495024,-99) , 
9, -40.0028, 1, 0, 0.509259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498875,-99) , 
10, -1.57131, 1, 0, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454869,-99) , 
13, 1.316, 0, 0, 0.499651,-99) , 
11, 2.10924, 0, 0, 0.502282,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0186947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497143,-99) , 
12, 0.966726, 0, 0, 0.503194,-99) , 
6, 0.212903, 1, 0, 0.511255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498991,-99) , 
12, 3.77011, 1, 0, 0.506628,-99) , 
NN(
0, 
0, 
-1, 1.50266, 0, -1, 0.492413,-99) , 
11, 0.958539, 0, 0, 0.499409,-99) , 
8, 2.18328, 0, 0, 0.502131,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.020321);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.25458, 0, 1, 0.524144,-99) , 
NN(
NN(
0, 
0, 
-1, 2.07672, 0, 1, 0.507014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452078,-99) , 
10, 0.233308, 1, 0, 0.494384,-99) , 
12, 0.923295, 0, 0, 0.503374,-99) , 
10, -1.57144, 1, 0, 0.505176,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0206329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.749807, 0, 1, 0.516347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471561,-99) , 
10, 1.57143, 1, 0, 0.511167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49471,-99) , 
10, -1.14973, 1, 0, 0.498464,-99) , 
10, 1.85705, 0, 0, 0.499743,-99) , 
8, 2.18328, 0, 0, 0.502347,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0154343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.51627, 0, 1, 0.531538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487593,-99) , 
6, -0.816, 1, 0, 0.502144,-99) , 
13, 0.878926, 0, 0, 0.51592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49928,-99) , 
11, 2.58582, 0, 0, 0.501321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44499,-99) , 
8, 1.18062, 0, 0, 0.499233,-99) , 
11, 5.29659, 0, 0, 0.501967,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0214533);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490853,-99) , 
13, 1.23316, 0, 0, 0.513236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481722,-99) , 
12, 0.383394, 0, 0, 0.502496,-99) , 
10, -0.551077, 1, 0, 0.505978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474541,-99) , 
10, 2.14279, 1, 0, 0.505184,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.00840438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56336, 0, 1, 0.526158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499553,-99) , 
5, 0.999048, 1, 0, 0.501392,-99) , 
4, 0.539723, 1, 0, 0.502822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483223,-99) , 
4, 8.96012, 1, 0, 0.501896,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0183885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485184,-99) , 
12, -0.830715, 0, 0, 0.512447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497021,-99) , 
9, -948.705, 0, 0, 0.501794,-99) , 
3, 1.93411, 0, 0, 0.504448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480768,-99) , 
0, 0.490471, 0, 0, 0.503419,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.014793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41165, 0, 1, 0.511585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488451,-99) , 
3, 0.964967, 0, 0, 0.508312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497405,-99) , 
12, 9.5582, 0, 0, 0.49901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477204,-99) , 
12, 0.136328, 0, 0, 0.497467,-99) , 
10, -0.428628, 1, 0, 0.501344,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0216023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.50863, 1, 1, 0.512542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494121,-99) , 
11, 2.99612, 0, 0, 0.500909,-99) , 
8, 1.70297, 0, 0, 0.505725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518999,-99) , 
NN(
0, 
0, 
-1, -0.813494, 0, -1, 0.482474,-99) , 
11, -2.99331, 1, 0, 0.48971,-99) , 
12, 0.0998317, 0, 0, 0.503038,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0248144);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46252,-99) , 
12, -1.26465, 0, 0, 0.508313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478169,-99) , 
11, 14.2859, 1, 0, 0.506525,-99) , 
NN(
NN(
0, 
0, 
-1, 2.27374, 0, 1, 0.50494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431287,-99) , 
12, 1.29114, 0, 0, 0.495043,-99) , 
10, 0.714228, 1, 0, 0.503662,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0236762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.92048, 1, 1, 0.516129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454426,-99) , 
13, 1.60726, 0, 0, 0.498516,-99) , 
11, 0.192971, 0, 0, 0.50422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495697,-99) , 
3, 0.929038, 0, 0, 0.504718,-99) , 
NN(
0, 
0, 
-1, 1.20495, 0, -1, 0.474508,-99) , 
11, 5.64251, 0, 0, 0.493197,-99) , 
13, 1.30253, 0, 0, 0.501438,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0221961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490486,-99) , 
6, -0.601784, 1, 0, 0.50435,-99) , 
6, -0.356788, 0, 0, 0.508026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4939,-99) , 
11, -2.3578, 1, 0, 0.496944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464362,-99) , 
12, -1.02377, 0, 0, 0.495044,-99) , 
11, 2.33638, 0, 0, 0.498418,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.021305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.18231, 0, 1, 0.515939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477848,-99) , 
11, 4.63716, 0, 0, 0.493758,-99) , 
9, -43.22, 1, 0, 0.507452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483997,-99) , 
10, 1.00001, 1, 0, 0.50164,-99) , 
NN(
0, 
0, 
-1, 0.701819, 0, -1, 0.475003,-99) , 
8, 1.46194, 0, 0, 0.498198,-99) , 
11, 2.43801, 0, 0, 0.500546,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0190791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48655,-99) , 
3, 1.40809, 0, 0, 0.50238,-99) , 
9, -949.657, 0, 0, 0.512427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495913,-99) , 
8, 2.32035, 0, 0, 0.499288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474519,-99) , 
12, -0.473117, 0, 0, 0.497904,-99) , 
10, -1.28572, 1, 0, 0.499801,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0201812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.37575, 0, 1, 0.516004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494414,-99) , 
10, 0.346903, 1, 0, 0.499824,-99) , 
10, -0.714309, 1, 0, 0.502915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474823,-99) , 
12, -0.994822, 0, 0, 0.496887,-99) , 
NN(
0, 
0, 
-1, 2.32221, 0, -1, 0.471599,-99) , 
10, -0.570957, 1, 0, 0.488071,-99) , 
12, 0.23922, 0, 0, 0.500068,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0137914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499379,-99) , 
10, -0.428593, 1, 0, 0.50245,-99) , 
8, 2.71927, 0, 0, 0.503261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486831,-99) , 
12, -0.31122, 0, 0, 0.498267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458686,-99) , 
0, 0.494283, 0, 0, 0.490802,-99) , 
12, 0.239737, 0, 0, 0.500868,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0208585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38747, 1, 1, 0.509688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493989,-99) , 
11, 6.62274, 0, 0, 0.498336,-99) , 
13, 1.64104, 0, 0, 0.503198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486697,-99) , 
3, 2.22937, 0, 0, 0.497011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460017,-99) , 
10, -0.0679296, 1, 0, 0.4907,-99) , 
12, 0.361928, 0, 0, 0.500522,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0135687);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52816,-99) , 
NN(
NN(
0, 
0, 
-1, 1.87841, 0, 1, 0.504328,-99) , 
NN(
0, 
0, 
-1, 0.343759, 1, -1, 0.48972,-99) , 
12, 0.867254, 0, 0, 0.499963,-99) , 
10, -2.14287, 1, 0, 0.500829,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.00768014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.078144, 0, 1, 0.526418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499515,-99) , 
2, -0.193231, 1, 0, 0.500696,-99) , 
2, 0.214638, 0, 0, 0.502236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47626,-99) , 
4, 9.78684, 1, 0, 0.501285,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0265257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28552, 1, 1, 0.513594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43797,-99) , 
11, 5.242, 0, 0, 0.493136,-99) , 
8, 1.18649, 0, 0, 0.506565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466563,-99) , 
10, 0.999365, 1, 0, 0.500358,-99) , 
NN(
0, 
0, 
-1, -1.38224, 1, -1, 0.459724,-99) , 
8, 1.71454, 0, 0, 0.49504,-99) , 
11, -0.167888, 0, 0, 0.50143,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0186918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.45173, 1, 1, 0.513188,-99) , 
NN(
0, 
0, 
-1, 1.57942, 0, -1, 0.495137,-99) , 
11, 0.736028, 0, 0, 0.500421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480999,-99) , 
13, 0.743368, 0, 0, 0.497494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440889,-99) , 
12, 5.81765, 0, 0, 0.488049,-99) , 
8, 1.12143, 0, 0, 0.498385,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0156817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45596, 0, 1, 0.525227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492072,-99) , 
12, -0.802046, 0, 0, 0.516621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539049,-99) , 
NN(
0, 
0, 
-1, -0.0409507, 0, -1, 0.495449,-99) , 
3, 2.73085, 0, 0, 0.497135,-99) , 
10, -1.28571, 1, 0, 0.499701,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0121773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43352, 0, 1, 0.504086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454264,-99) , 
12, 6.406, 0, 0, 0.489365,-99) , 
8, 1.13172, 0, 0, 0.501732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469675,-99) , 
1, 0.0244069, 1, 0, 0.500794,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0214939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.551606, 0, 1, 0.507684,-99) , 
NN(
0, 
0, 
-1, -0.693816, 1, -1, 0.481256,-99) , 
8, 1.12093, 0, 0, 0.503519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490407,-99) , 
13, 2.02397, 0, 0, 0.495409,-99) , 
NN(
0, 
0, 
-1, -0.00121439, 1, -1, 0.476151,-99) , 
12, 0.414904, 0, 0, 0.493249,-99) , 
10, -0.428582, 1, 0, 0.496904,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0150836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.97397, 0, 1, 0.504996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461905,-99) , 
6, 0.441304, 0, 0, 0.484729,-99) , 
5, 0.998572, 0, 0, 0.503535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504448,-99) , 
NN(
0, 
0, 
-1, -0.0164343, 0, -1, 0.480721,-99) , 
10, -0.142897, 1, 0, 0.490554,-99) , 
9, 0.525285, 1, 0, 0.50181,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0236357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.686179, 1, 1, 0.508773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481497,-99) , 
11, 5.2303, 0, 0, 0.494415,-99) , 
3, 1.22697, 0, 0, 0.501665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54514,-99) , 
NN(
0, 
0, 
-1, 0.725592, 1, -1, 0.487522,-99) , 
12, 1.51844, 0, 0, 0.492611,-99) , 
11, -0.180127, 0, 0, 0.497647,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.020581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498085,-99) , 
12, 1.24931, 0, 0, 0.50721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491563,-99) , 
10, -1.1633, 1, 0, 0.495169,-99) , 
13, 1.93077, 0, 0, 0.49912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445901,-99) , 
12, 2.2299, 0, 0, 0.474046,-99) , 
11, 1.01342, 0, 0, 0.487414,-99) , 
10, 1.28567, 1, 0, 0.497723,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0230751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.07151, 0, 1, 0.506186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4659,-99) , 
11, -3.00046, 1, 0, 0.48574,-99) , 
12, -0.368908, 0, 0, 0.50335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494066,-99) , 
8, 2.27306, 0, 0, 0.499816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432465,-99) , 
12, 1.20998, 0, 0, 0.491731,-99) , 
10, 0.71426, 1, 0, 0.500438,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0183861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485111,-99) , 
12, -0.634272, 0, 0, 0.506189,-99) , 
NN(
0, 
0, 
-1, 0.964412, 0, -1, 0.493467,-99) , 
13, 1.59541, 0, 0, 0.500565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467203,-99) , 
10, 2.14276, 1, 0, 0.49972,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0236544);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494178,-99) , 
12, -0.251467, 0, 0, 0.519453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494683,-99) , 
10, -1.80271, 1, 0, 0.497933,-99) , 
13, 1.98442, 0, 0, 0.503848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495382,-99) , 
8, 2.31582, 0, 0, 0.499051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455862,-99) , 
12, 0.705428, 0, 0, 0.494681,-99) , 
10, 0.142852, 1, 0, 0.499825,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0203738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477548,-99) , 
5, 0.999905, 0, 0, 0.507776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496018,-99) , 
11, 1.90864, 0, 0, 0.498832,-99) , 
6, -0.369451, 1, 0, 0.501576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468778,-99) , 
5, 0.996191, 0, 0, 0.500717,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0269143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.8715, 1, 1, 0.520753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471864,-99) , 
13, 1.57031, 0, 0, 0.498918,-99) , 
11, 0.982667, 0, 0, 0.503847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459981,-99) , 
7, 0.00679992, 1, 0, 0.485663,-99) , 
7, 0.0238027, 0, 0, 0.492453,-99) , 
13, 1.1869, 0, 0, 0.501615,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0130159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999658, 0, 1, 0.52233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494032,-99) , 
11, -0.122439, 0, 0, 0.499582,-99) , 
2, 0.214085, 0, 0, 0.500877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478152,-99) , 
5, 0.997619, 0, 0, 0.499896,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0285914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475102,-99) , 
10, 1.00026, 1, 0, 0.49766,-99) , 
6, 0.311406, 1, 0, 0.50842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492065,-99) , 
8, 1.20753, 0, 0, 0.501735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479519,-99) , 
9, -949.024, 0, 0, 0.488965,-99) , 
11, 0.958539, 0, 0, 0.494785,-99) , 
8, 2.36246, 0, 0, 0.497046,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0199958);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49842,-99) , 
12, 0.89576, 0, 0, 0.509198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496271,-99) , 
10, -1.57141, 1, 0, 0.499135,-99) , 
8, 1.96257, 0, 0, 0.502318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480011,-99) , 
10, 1.77545, 0, 0, 0.502327,-99) , 
NN(
0, 
0, 
-1, 1.69381, 1, -1, 0.467666,-99) , 
11, 0.804813, 0, 0, 0.486601,-99) , 
10, 1.28565, 1, 0, 0.500475,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0216168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.18451, 0, 1, 0.513398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492635,-99) , 
11, 1.54314, 0, 0, 0.499682,-99) , 
13, 1.97905, 0, 0, 0.50381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -1, 0.495107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433821,-99) , 
10, 1.69386, 1, 0, 0.46894,-99) , 
11, 1.07732, 0, 0, 0.481948,-99) , 
10, 1.28569, 1, 0, 0.501225,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.018472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496398,-99) , 
12, 0.747353, 0, 0, 0.508634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47278,-99) , 
5, 0.999524, 0, 0, 0.497603,-99) , 
13, 1.62119, 0, 0, 0.503452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442792,-99) , 
12, 2.1955, 0, 0, 0.470243,-99) , 
11, 1.04642, 0, 0, 0.488077,-99) , 
10, 1.28564, 1, 0, 0.501641,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0237777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49565,-99) , 
10, 0.061314, 1, 0, 0.506798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483207,-99) , 
11, 2.6771, 0, 0, 0.492566,-99) , 
13, 1.55369, 0, 0, 0.500777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473431,-99) , 
10, 1.77547, 0, 0, 0.49569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435687,-99) , 
12, 2.10854, 0, 0, 0.470913,-99) , 
11, 0.852705, 0, 0, 0.48408,-99) , 
10, 1.28569, 1, 0, 0.498796,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0255096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495988,-99) , 
12, 0.618001, 0, 0, 0.506922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445184,-99) , 
12, 1.84153, 0, 0, 0.48669,-99) , 
10, 1.00008, 1, 0, 0.502829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482182,-99) , 
5, 0.999977, 0, 0, 0.494432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464085,-99) , 
5, 0.999524, 0, 0, 0.491799,-99) , 
8, 1.53506, 0, 0, 0.498515,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0208596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462797,-99) , 
12, 3.44771, 1, 0, 0.502839,-99) , 
11, 3.24368, 0, 0, 0.504485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482701,-99) , 
13, 0.801123, 0, 0, 0.49346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455526,-99) , 
12, 5.33798, 0, 0, 0.486842,-99) , 
13, 1.16524, 0, 0, 0.501197,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0214943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.33671, 0, 1, 0.507914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492621,-99) , 
10, -1.77551, 1, 0, 0.495265,-99) , 
8, 1.96259, 0, 0, 0.499252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478219,-99) , 
10, 1.77547, 0, 0, 0.49696,-99) , 
NN(
0, 
0, 
-1, 1.69386, 1, -1, 0.463848,-99) , 
11, 0.730077, 0, 0, 0.482265,-99) , 
10, 1.28569, 1, 0, 0.49726,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0256129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.820154, 0, 1, 0.51331,-99) , 
NN(
0, 
0, 
-1, 4.1806, 0, -1, 0.48423,-99) , 
13, 1.24324, 0, 0, 0.506691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490675,-99) , 
8, 2.86537, 0, 0, 0.493338,-99) , 
12, 10.6281, 0, 0, 0.49582,-99) , 
10, -0.14287, 1, 0, 0.500791,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0233916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.416289, 1, 1, 0.51174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492673,-99) , 
7, 0.0238027, 0, 0, 0.495569,-99) , 
8, 1.43277, 0, 0, 0.502473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535306,-99) , 
NN(
0, 
0, 
-1, 0.666456, 1, -1, 0.487967,-99) , 
12, 1.52318, 0, 0, 0.492172,-99) , 
11, -0.167888, 0, 0, 0.497892,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0169801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495273,-99) , 
10, 0.142852, 1, 0, 0.500341,-99) , 
8, 2.60426, 0, 0, 0.501715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462539,-99) , 
10, -1.35166, 1, 0, 0.477918,-99) , 
11, -2.81623, 1, 0, 0.488689,-99) , 
12, -0.0983186, 0, 0, 0.499899,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0179647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499946,-99) , 
10, 0.274076, 1, 0, 0.520397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484847,-99) , 
12, -0.550039, 0, 0, 0.509681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49593,-99) , 
3, 1.53825, 0, 0, 0.499437,-99) , 
NN(
0, 
0, 
-1, -0.224248, 1, -1, 0.487883,-99) , 
12, 0.958041, 0, 0, 0.49682,-99) , 
8, 2.31704, 0, 0, 0.499135,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0219338);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494475,-99) , 
10, 0.728128, 1, 0, 0.518762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497629,-99) , 
11, 2.52313, 0, 0, 0.501523,-99) , 
8, 2.31608, 0, 0, 0.503314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476608,-99) , 
12, -0.785232, 0, 0, 0.505627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45907,-99) , 
11, -1.75798, 0, 0, 0.473757,-99) , 
11, -2.29908, 1, 0, 0.490655,-99) , 
12, 0.0998317, 0, 0, 0.501156,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0216174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.24538, 1, 1, 0.519233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469134,-99) , 
10, 1.28567, 1, 0, 0.501207,-99) , 
11, 0.272785, 0, 0, 0.506749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496181,-99) , 
12, 10.6483, 0, 0, 0.501634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448877,-99) , 
11, 2.52548, 0, 0, 0.494937,-99) , 
8, 1.30769, 0, 0, 0.503789,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0183682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.464884, 0, 1, 0.514661,-99) , 
NN(
0, 
0, 
-1, 1.03267, 0, -1, 0.484351,-99) , 
13, 1.23358, 0, 0, 0.507922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498682,-99) , 
12, 3.40866, 1, 0, 0.504721,-99) , 
NN(
0, 
0, 
-1, 1.61339, 0, -1, 0.492793,-99) , 
11, 1.29882, 0, 0, 0.497298,-99) , 
10, -0.714303, 1, 0, 0.500124,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0153212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476499,-99) , 
8, 1.09678, 0, 0, 0.501865,-99) , 
12, 9.12893, 0, 0, 0.503406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480427,-99) , 
8, 0.705482, 0, 0, 0.502556,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0174408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495065,-99) , 
6, 0.509278, 1, 0, 0.514042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489695,-99) , 
11, -0.102055, 0, 0, 0.498605,-99) , 
8, 2.60413, 0, 0, 0.500177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472086,-99) , 
10, 2.14277, 1, 0, 0.499464,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0168324);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491588,-99) , 
13, 1.46263, 0, 0, 0.503698,-99) , 
NN(
0, 
0, 
-1, 0.829984, 0, -1, 0.493835,-99) , 
10, -0.428593, 1, 0, 0.497372,-99) , 
3, 2.5715, 0, 0, 0.498556,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.019174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.91588, 0, 1, 0.518082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481636,-99) , 
12, 11.7855, 0, 0, 0.495895,-99) , 
13, 0.877138, 0, 0, 0.510644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463278,-99) , 
10, 1.85712, 1, 0, 0.5015,-99) , 
NN(
0, 
0, 
-1, 0.912462, 0, -1, 0.472535,-99) , 
8, 1.42712, 0, 0, 0.498469,-99) , 
11, 2.38183, 0, 0, 0.501618,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0188276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498585,-99) , 
8, 1.83658, 0, 0, 0.501055,-99) , 
8, 2.50478, 0, 0, 0.502459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477917,-99) , 
11, -1.92291, 1, 0, 0.502924,-99) , 
NN(
0, 
0, 
-1, -1.25929, 0, -1, 0.475928,-99) , 
12, -0.37023, 0, 0, 0.489821,-99) , 
12, 0.361928, 0, 0, 0.499745,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0218883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493825,-99) , 
10, 0.427707, 0, 0, 0.505914,-99) , 
8, 1.03732, 0, 0, 0.515259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494534,-99) , 
11, 0.417755, 0, 0, 0.500266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465418,-99) , 
8, 1.19325, 0, 0, 0.498778,-99) , 
11, 5.29659, 0, 0, 0.501471,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0143609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484202,-99) , 
3, 0.994798, 0, 0, 0.522634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478279,-99) , 
0, 0.498092, 0, 0, 0.489105,-99) , 
6, 0.0731776, 1, 0, 0.51356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478429,-99) , 
12, 0.0566766, 0, 0, 0.498269,-99) , 
3, 2.73084, 0, 0, 0.499597,-99) , 
10, -1.00001, 1, 0, 0.502289,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.023296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482145,-99) , 
7, 0.00453333, 1, 0, 0.504897,-99) , 
7, 0.0238015, 0, 0, 0.509169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497413,-99) , 
11, 1.87933, 0, 0, 0.500494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457851,-99) , 
12, 3.96164, 1, 0, 0.497891,-99) , 
11, 4.28081, 0, 0, 0.500004,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0228835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.36764, 0, 1, 0.511918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487056,-99) , 
11, 1.31633, 0, 0, 0.498515,-99) , 
8, 1.75366, 0, 0, 0.504597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461425,-99) , 
8, 1.90427, 1, 0, 0.484332,-99) , 
10, 1.57135, 1, 0, 0.503091,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0251661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.1211, 0, 1, 0.511518,-99) , 
NN(
0, 
0, 
-1, -1.16005, 0, -1, 0.481831,-99) , 
12, -0.248336, 0, 0, 0.505396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493499,-99) , 
8, 2.27358, 0, 0, 0.497588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461216,-99) , 
12, 0.775381, 0, 0, 0.4935,-99) , 
10, 0.142863, 1, 0, 0.500191,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0219055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483915,-99) , 
3, 1.40791, 0, 0, 0.499753,-99) , 
9, -949.657, 0, 0, 0.509634,-99) , 
NN(
NN(
0, 
0, 
-1, 0.302821, 1, 1, 0.510717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491394,-99) , 
11, 4.90453, 0, 0, 0.495297,-99) , 
8, 2.36254, 0, 0, 0.497947,-99) , 
10, -1.28572, 1, 0, 0.49948,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0154201);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46817,-99) , 
12, -1.00767, 0, 0, 0.503598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478142,-99) , 
3, 0.659358, 0, 0, 0.502505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474592,-99) , 
10, 2.1428, 1, 0, 0.501797,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0225177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475224,-99) , 
8, 1.47476, 0, 0, 0.500318,-99) , 
11, 1.72126, 0, 0, 0.503078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491161,-99) , 
8, 1.00888, 0, 0, 0.498893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449469,-99) , 
11, 3.37916, 0, 0, 0.481338,-99) , 
11, 5.62747, 0, 0, 0.491745,-99) , 
12, 3.53499, 1, 0, 0.500045,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.019367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.810504, 1, 1, 0.527258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487919,-99) , 
12, -0.611864, 0, 0, 0.513833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490843,-99) , 
10, 1, 1, 0, 0.501906,-99) , 
NN(
0, 
0, 
-1, -0.0969985, 1, -1, 0.485035,-99) , 
12, 0.840957, 0, 0, 0.497861,-99) , 
8, 2.56929, 0, 0, 0.499613,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0225896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48401,-99) , 
12, -0.8611, 0, 0, 0.512088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46372,-99) , 
8, 1.08735, 0, 0, 0.505536,-99) , 
NN(
NN(
0, 
0, 
-1, 1.15063, 0, 1, 0.508085,-99) , 
NN(
0, 
0, 
-1, 3.55704, 1, -1, 0.491155,-99) , 
11, 3.46941, 0, 0, 0.495067,-99) , 
10, -1, 1, 0, 0.497079,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0218439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494884,-99) , 
8, 1.2609, 0, 0, 0.514953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492106,-99) , 
8, 1.97301, 0, 0, 0.497152,-99) , 
10, -1.16328, 1, 0, 0.500308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503016,-99) , 
NN(
0, 
0, 
-1, 0.169084, 1, -1, 0.468379,-99) , 
9, -951.286, 0, 0, 0.48078,-99) , 
10, 1.28564, 1, 0, 0.498025,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0253992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496336,-99) , 
10, 0.613866, 1, 0, 0.509491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490974,-99) , 
12, 9.05632, 0, 0, 0.496526,-99) , 
13, 1.42262, 0, 0, 0.504239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478078,-99) , 
12, -0.919353, 0, 0, 0.49894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459474,-99) , 
10, -0.0882432, 1, 0, 0.491999,-99) , 
12, 0.361928, 0, 0, 0.501623,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0219343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.51645, 1, 1, 0.515083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46841,-99) , 
13, 1.6068, 0, 0, 0.497222,-99) , 
11, 0.603926, 0, 0, 0.502197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487675,-99) , 
13, 0.879569, 0, 0, 0.5024,-99) , 
NN(
0, 
0, 
-1, 4.10286, 0, -1, 0.474772,-99) , 
11, 7.21794, 0, 0, 0.491991,-99) , 
13, 1.21203, 0, 0, 0.500076,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0188442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494636,-99) , 
8, 1.7033, 0, 0, 0.499403,-99) , 
10, -1.57144, 1, 0, 0.500779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525713,-99) , 
NN(
0, 
0, 
-1, -0.366609, 0, -1, 0.482052,-99) , 
11, -2.99624, 1, 0, 0.488956,-99) , 
12, 0.361928, 0, 0, 0.498256,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0218816);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498833,-99) , 
13, 1.4292, 0, 0, 0.516709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493254,-99) , 
11, 1.00247, 0, 0, 0.498941,-99) , 
10, -1.00001, 1, 0, 0.501303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481223,-99) , 
11, -2.50467, 1, 0, 0.494209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455739,-99) , 
12, -1.22463, 0, 0, 0.487501,-99) , 
12, 0.138275, 0, 0, 0.498885,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0213581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38342, 1, 1, 0.506819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486934,-99) , 
12, 7.3595, 0, 0, 0.493349,-99) , 
13, 1.42262, 0, 0, 0.501317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480226,-99) , 
12, -0.500029, 0, 0, 0.496986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464828,-99) , 
10, -0.067917, 1, 0, 0.491255,-99) , 
12, 0.413866, 0, 0, 0.499072,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0136488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0164048, 0, 1, 0.518549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495385,-99) , 
2, 0.132389, 0, 0, 0.496485,-99) , 
2, 0.214006, 0, 0, 0.4978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47488,-99) , 
4, 9.42256, 1, 0, 0.496861,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0189502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.04328, 0, 1, 0.513145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48035,-99) , 
3, 0.96207, 0, 0, 0.508716,-99) , 
NN(
NN(
0, 
0, 
-1, 1.12409, 0, 1, 0.509409,-99) , 
NN(
0, 
0, 
-1, 1.38085, 0, -1, 0.492659,-99) , 
11, 3.62296, 0, 0, 0.496535,-99) , 
10, -0.714295, 1, 0, 0.499784,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0149461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496798,-99) , 
11, 0.662831, 0, 0, 0.502173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484453,-99) , 
11, 13.5895, 1, 0, 0.500957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468622,-99) , 
2, 0.357034, 1, 0, 0.500077,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0211413);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496161,-99) , 
8, 1.37395, 0, 0, 0.503131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489441,-99) , 
12, 1.5859, 0, 0, 0.4945,-99) , 
11, -0.0662606, 0, 0, 0.499314,-99) , 
3, 2.68748, 0, 0, 0.500328,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0175053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.151164, 0, 1, 0.532799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480611,-99) , 
3, 2.47594, 0, 0, 0.501599,-99) , 
6, 0.435805, 1, 0, 0.515101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497741,-99) , 
11, -0.828853, 0, 0, 0.509752,-99) , 
NN(
0, 
0, 
-1, 1.07011, 0, -1, 0.496243,-99) , 
10, -0.714298, 1, 0, 0.499987,-99) , 
8, 2.39368, 0, 0, 0.502343,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0154997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.47091, 0, 1, 0.505443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483991,-99) , 
11, -2.97368, 1, 0, 0.492326,-99) , 
12, -0.00766644, 0, 0, 0.503465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471268,-99) , 
2, -0.357266, 0, 0, 0.502617,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0120655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49334,-99) , 
8, 1.29415, 0, 0, 0.509884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471838,-99) , 
12, -0.0875965, 0, 0, 0.498751,-99) , 
10, -0.714324, 1, 0, 0.501729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474665,-99) , 
5, 0.997619, 0, 0, 0.500584,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0184485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25981, 0, 1, 0.51203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471934,-99) , 
10, 1.5715, 1, 0, 0.507488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493813,-99) , 
2, -0.0712364, 1, 0, 0.496263,-99) , 
10, -1.85728, 1, 0, 0.49758,-99) , 
13, 2.00101, 0, 0, 0.500633,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0138399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493782,-99) , 
8, 1.29138, 0, 0, 0.514388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490504,-99) , 
12, 0.995389, 0, 0, 0.499709,-99) , 
10, -1.57144, 1, 0, 0.500955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476547,-99) , 
5, 0.996667, 0, 0, 0.500207,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0163865);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48579,-99) , 
10, 1.53059, 1, 0, 0.503803,-99) , 
NN(
0, 
0, 
-1, 0.321018, 1, -1, 0.491581,-99) , 
12, 0.847023, 0, 0, 0.500245,-99) , 
10, -2.14286, 1, 0, 0.501174,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0245284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0614406, 0, 1, 0.52264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451395,-99) , 
12, 1.07395, 0, 0, 0.493795,-99) , 
10, 0.428719, 1, 0, 0.510633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495938,-99) , 
9, -1.26137, 0, 0, 0.502612,-99) , 
NN(
0, 
0, 
-1, 1.32442, 0, -1, 0.49362,-99) , 
10, -0.428667, 1, 0, 0.496983,-99) , 
8, 2.1833, 0, 0, 0.50012,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0161503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14287, 1, 1, 0.514599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482981,-99) , 
5, 0.999524, 0, 0, 0.510028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499071,-99) , 
3, 1.88296, 0, 0, 0.502613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437189,-99) , 
10, 0.645048, 1, 0, 0.490851,-99) , 
12, 1.37465, 0, 0, 0.498518,-99) , 
10, -1.00003, 1, 0, 0.500725,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0118662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0116322, 0, 1, 0.531878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497554,-99) , 
5, 0.999048, 1, 0, 0.499152,-99) , 
2, 0.214849, 0, 0, 0.501126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480105,-99) , 
4, 9.43575, 1, 0, 0.50026,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0221922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47654,-99) , 
12, -1.21553, 0, 0, 0.517199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453086,-99) , 
11, 0.347188, 0, 0, 0.49722,-99) , 
8, 1.51019, 0, 0, 0.508487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499077,-99) , 
12, 0.278742, 0, 0, 0.516382,-99) , 
NN(
0, 
0, 
-1, 0.781873, 0, -1, 0.495896,-99) , 
8, 2.60406, 0, 0, 0.498201,-99) , 
10, -0.428544, 1, 0, 0.501864,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0254633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.27551, 0, 1, 0.506225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478229,-99) , 
5, 0.998095, 0, 0, 0.505156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474495,-99) , 
12, -0.553423, 0, 0, 0.503621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466778,-99) , 
11, -1.48894, 0, 0, 0.484604,-99) , 
11, -2.14221, 1, 0, 0.494309,-99) , 
12, 0.361928, 0, 0, 0.502834,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0162967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00001, 1, 1, 0.504865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49191,-99) , 
12, 1.36335, 0, 0, 0.497126,-99) , 
11, -0.395026, 0, 0, 0.501769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47553,-99) , 
2, 0.357041, 1, 0, 0.501057,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.028552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.647517, 0, 1, 0.509937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456336,-99) , 
12, 2.04046, 0, 0, 0.488478,-99) , 
10, 1.00005, 1, 0, 0.505564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484807,-99) , 
9, -951.227, 1, 0, 0.502718,-99) , 
NN(
0, 
0, 
-1, 2.27862, 1, -1, 0.477297,-99) , 
11, 1.80318, 0, 0, 0.49524,-99) , 
8, 1.55213, 0, 0, 0.501414,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.015248);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470833,-99) , 
4, 4.99839, 1, 0, 0.516901,-99) , 
NN(
0, 
0, 
-1, 0.673545, 0, -1, 0.496148,-99) , 
2, -0.214262, 1, 0, 0.49749,-99) , 
10, -2.14287, 1, 0, 0.49885,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0155021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49917,-99) , 
12, 0.0238724, 0, 0, 0.511403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492325,-99) , 
12, 1.58608, 0, 0, 0.49991,-99) , 
10, -1.04085, 1, 0, 0.502044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472958,-99) , 
10, 2.1428, 1, 0, 0.501312,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.013435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.59551, 0, 1, 0.511357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496836,-99) , 
10, -1.77551, 1, 0, 0.498578,-99) , 
13, 2.05156, 0, 0, 0.502121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479987,-99) , 
10, 2.14277, 1, 0, 0.501556,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0121277);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494378,-99) , 
9, -12.1436, 1, 0, 0.513411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498237,-99) , 
10, -2.0204, 1, 0, 0.499494,-99) , 
3, 2.09346, 0, 0, 0.501925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476079,-99) , 
10, 2.14283, 1, 0, 0.501271,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0234994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.32163, 0, 1, 0.511694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49082,-99) , 
11, 1.57803, 0, 0, 0.498389,-99) , 
8, 1.96268, 0, 0, 0.502594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485134,-99) , 
10, 1.77547, 0, 0, 0.505814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433809,-99) , 
10, 1.69386, 1, 0, 0.470175,-99) , 
11, 0.854458, 0, 0, 0.489264,-99) , 
10, 1.28569, 1, 0, 0.501032,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0259505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.1774, 0, 1, 0.509086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456399,-99) , 
12, 1.46419, 0, 0, 0.497039,-99) , 
10, 0.428533, 1, 0, 0.504349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475686,-99) , 
12, -1.11833, 0, 0, 0.499451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460983,-99) , 
10, -0.554045, 1, 0, 0.489637,-99) , 
12, -0.118879, 0, 0, 0.502339,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0106353);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.76421, 0, 1, 0.521567,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487308,-99) , 
8, 1.18319, 0, 0, 0.497882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469632,-99) , 
5, 0.997619, 0, 0, 0.496892,-99) , 
3, 2.52665, 0, 0, 0.498462,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0213518);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468728,-99) , 
12, -1.18508, 0, 0, 0.512529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472969,-99) , 
8, 1.09371, 0, 0, 0.506946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516428,-99) , 
NN(
0, 
0, 
-1, 1.47618, 1, -1, 0.493182,-99) , 
8, 2.81444, 0, 0, 0.494839,-99) , 
10, -0.99999, 1, 0, 0.49716,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0130845);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497028,-99) , 
8, 1.09678, 0, 0, 0.507001,-99) , 
NN(
0, 
0, 
-1, 3.53163, 1, -1, 0.49548,-99) , 
11, 3.02655, 0, 0, 0.498173,-99) , 
10, -2.14279, 1, 0, 0.49893,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0180821);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489681,-99) , 
9, -949.113, 0, 0, 0.523504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491357,-99) , 
9, -949.159, 1, 0, 0.499194,-99) , 
5, 0.999048, 1, 0, 0.501721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478735,-99) , 
4, 9.78684, 1, 0, 0.500879,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0233734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498765,-99) , 
12, 2.66505, 1, 0, 0.51674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476721,-99) , 
8, 1.68237, 0, 0, 0.499636,-99) , 
11, 0.684962, 0, 0, 0.503291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48307,-99) , 
11, 13.6043, 1, 0, 0.497738,-99) , 
NN(
0, 
0, 
-1, 3.50758, 0, -1, 0.481314,-99) , 
6, -0.588446, 1, 0, 0.490292,-99) , 
8, 1.34175, 0, 0, 0.499762,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0109832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999047, 1, 1, 0.510665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494504,-99) , 
0, 0.497138, 1, 0, 0.497484,-99) , 
2, 0.0916735, 0, 0, 0.499205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472426,-99) , 
2, 0.356936, 1, 0, 0.498477,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0149633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50533,-99) , 
NN(
0, 
0, 
-1, -0.214184, 0, -1, 0.493988,-99) , 
4, 4.55231, 1, 0, 0.502982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489727,-99) , 
12, -0.287637, 0, 0, 0.498695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462264,-99) , 
10, 0.0564035, 1, 0, 0.49345,-99) , 
12, 0.442899, 0, 0, 0.500813,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0135734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498889,-99) , 
11, 3.16269, 0, 0, 0.501794,-99) , 
13, 2.67375, 0, 0, 0.502744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460066,-99) , 
11, -2.17049, 1, 0, 0.485747,-99) , 
11, -1.56779, 0, 0, 0.491298,-99) , 
12, 0.281695, 0, 0, 0.500455,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0196228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.59492, 1, 1, 0.506474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457938,-99) , 
11, 3.68454, 0, 0, 0.494923,-99) , 
8, 1.30714, 0, 0, 0.503129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486729,-99) , 
12, -1.11836, 0, 0, 0.504805,-99) , 
NN(
0, 
0, 
-1, 2.25243, 0, -1, 0.47817,-99) , 
10, -1.14211, 1, 0, 0.490445,-99) , 
12, -0.118879, 0, 0, 0.501393,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0142803);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498351,-99) , 
8, 2.18328, 0, 0, 0.501352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47071,-99) , 
10, 2.14283, 1, 0, 0.500458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512281,-99) , 
NN(
0, 
0, 
-1, -1.15829, 1, -1, 0.474189,-99) , 
11, -2.83336, 1, 0, 0.486412,-99) , 
12, -0.118879, 0, 0, 0.498549,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0182868);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.519245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499061,-99) , 
13, 1.49897, 0, 0, 0.505474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448248,-99) , 
10, 0.384555, 1, 0, 0.493348,-99) , 
12, 1.15298, 0, 0, 0.501406,-99) , 
10, -1.57143, 1, 0, 0.502943,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0179465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46429, 0, 1, 0.506576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437516,-99) , 
11, 2.52548, 0, 0, 0.494203,-99) , 
8, 1.2868, 0, 0, 0.502039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480496,-99) , 
10, 0.714623, 1, 0, 0.497262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461512,-99) , 
3, 1.63309, 0, 0, 0.493118,-99) , 
6, 0.0808558, 1, 0, 0.49896,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0159487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49758,-99) , 
11, 3.31183, 0, 0, 0.500099,-99) , 
NN(
0, 
0, 
-1, 5.75776, 0, -1, 0.486228,-99) , 
13, 1.11852, 0, 0, 0.497714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438271,-99) , 
12, 2.28549, 0, 0, 0.465313,-99) , 
11, 1.12574, 0, 0, 0.484561,-99) , 
10, 1.28564, 1, 0, 0.496167,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.021222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498178,-99) , 
7, 0.011333, 0, 0, 0.502188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459176,-99) , 
7, 0.00566684, 1, 0, 0.487303,-99) , 
3, 0.968747, 0, 0, 0.500315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451716,-99) , 
3, 1.08258, 1, 0, 0.480552,-99) , 
7, 0.0238014, 1, 0, 0.499096,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0206252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488249,-99) , 
8, 0.74567, 0, 0, 0.512584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496111,-99) , 
11, 0.893024, 0, 0, 0.502076,-99) , 
NN(
0, 
0, 
-1, 6.25118, 0, -1, 0.482272,-99) , 
8, 1.16018, 0, 0, 0.499927,-99) , 
12, 8.96386, 0, 0, 0.500938,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.00886218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522459,-99) , 
NN(
NN(
0, 
0, 
-1, 2.67027, 0, 1, 0.502986,-99) , 
NN(
0, 
0, 
-1, 4.77828, 0, -1, 0.493698,-99) , 
8, 1.2481, 0, 0, 0.500859,-99) , 
3, 2.73084, 0, 0, 0.50165,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0138158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.76477, 0, 1, 0.503074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472763,-99) , 
3, 0.655898, 0, 0, 0.501811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485871,-99) , 
10, 1.77549, 0, 0, 0.508754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434836,-99) , 
10, 1.69389, 1, 0, 0.468931,-99) , 
11, 0.890789, 0, 0, 0.489982,-99) , 
10, 1.28569, 1, 0, 0.500418,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0065712);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499717,-99) , 
12, 7.73538, 0, 0, 0.501043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474534,-99) , 
11, 13.0905, 1, 0, 0.500077,-99) , 
12, 13.1966, 0, 0, 0.500987,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0216649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497896,-99) , 
8, 1.44092, 0, 0, 0.5064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49103,-99) , 
12, 1.22682, 0, 0, 0.497046,-99) , 
11, -0.395026, 0, 0, 0.502571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472625,-99) , 
10, 2.1428, 1, 0, 0.501816,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0291977);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493488,-99) , 
12, -0.444443, 0, 0, 0.512826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487728,-99) , 
11, 1.7815, 0, 0, 0.4989,-99) , 
13, 1.62119, 0, 0, 0.505989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486165,-99) , 
10, 1.40816, 1, 0, 0.502254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450302,-99) , 
12, 1.13608, 0, 0, 0.494762,-99) , 
10, 0.42856, 1, 0, 0.502173,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0209046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.717108, 0, 1, 0.511668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462942,-99) , 
12, 7.7144, 0, 0, 0.483093,-99) , 
8, 1.10819, 0, 0, 0.507234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459256,-99) , 
12, 1.02032, 0, 0, 0.495225,-99) , 
8, 2.7582, 0, 0, 0.497996,-99) , 
10, -0.142893, 1, 0, 0.502213,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0189669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809909, 1, 1, 0.527826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486168,-99) , 
12, -0.675823, 0, 0, 0.514282,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479794,-99) , 
8, 1.20148, 0, 0, 0.50792,-99) , 
NN(
0, 
0, 
-1, 0.673424, 0, -1, 0.495417,-99) , 
10, -0.714309, 1, 0, 0.49883,-99) , 
8, 2.60405, 0, 0, 0.500422,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0208957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.349478, 0, 1, 0.513049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475702,-99) , 
11, 1.70095, 0, 0, 0.494891,-99) , 
3, 1.27538, 0, 0, 0.506751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497209,-99) , 
8, 2.30013, 0, 0, 0.500217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443593,-99) , 
11, -1.80869, 1, 0, 0.473275,-99) , 
12, 0.743976, 0, 0, 0.496513,-99) , 
10, -0.142901, 1, 0, 0.501198,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0159116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491141,-99) , 
3, 1.23298, 0, 0, 0.52333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495091,-99) , 
12, -0.733109, 0, 0, 0.514677,-99) , 
NN(
NN(
0, 
0, 
-1, -2.27065, 1, 1, 0.514128,-99) , 
NN(
0, 
0, 
-1, -0.307984, 0, -1, 0.494373,-99) , 
3, 2.39455, 0, 0, 0.496209,-99) , 
10, -1.57144, 1, 0, 0.497788,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.011558);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533128,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.510715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490629,-99) , 
12, 0.546444, 0, 0, 0.499221,-99) , 
2, -0.0714607, 1, 0, 0.501297,-99) , 
10, -2.14286, 1, 0, 0.502276,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0234174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493205,-99) , 
5, 0.999954, 0, 0, 0.503665,-99) , 
5, 0.999048, 1, 0, 0.509405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461006,-99) , 
10, 1.57144, 1, 0, 0.505543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484114,-99) , 
11, 0.784646, 0, 0, 0.49536,-99) , 
13, 2.0152, 0, 0, 0.498371,-99) , 
2, 0.0712553, 0, 0, 0.500394,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0211421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498273,-99) , 
12, -0.727615, 0, 0, 0.528635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484055,-99) , 
8, 1.29098, 0, 0, 0.51519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480577,-99) , 
6, -0.0102148, 0, 0, 0.511814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495065,-99) , 
4, 9.10586, 0, 0, 0.496961,-99) , 
5, 0.999524, 1, 0, 0.49939,-99) , 
10, -1.57144, 1, 0, 0.500739,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0169849);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496275,-99) , 
8, 1.39681, 0, 0, 0.502987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486256,-99) , 
11, -1.37628, 0, 0, 0.493258,-99) , 
12, 0.361928, 0, 0, 0.501103,-99) , 
3, 2.73085, 0, 0, 0.501825,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.014071);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.285033, 1, 1, 0.520053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498266,-99) , 
13, 0.965255, 0, 0, 0.511303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452901,-99) , 
12, 3.46554, 1, 0, 0.498255,-99) , 
11, 2.9772, 0, 0, 0.501339,-99) , 
10, -1.85715, 1, 0, 0.502342,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0167283);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.284301, 0, 1, 0.518925,-99) , 
NN(
NN(
0, 
0, 
-1, 2.45729, 1, 1, 0.506881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462057,-99) , 
13, 1.69336, 0, 0, 0.49629,-99) , 
11, 0.570916, 0, 0, 0.501014,-99) , 
10, -1.57144, 1, 0, 0.502538,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0142194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.437388, 0, 1, 0.511802,-99) , 
NN(
0, 
0, 
-1, -0.422475, 0, -1, 0.497779,-99) , 
10, -1.09524, 1, 0, 0.500651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48747,-99) , 
9, -951.286, 0, 0, 0.495233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431042,-99) , 
12, 1.59139, 0, 0, 0.484814,-99) , 
10, 0.999984, 1, 0, 0.497875,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0175244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.65151, 0, 1, 0.504254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467372,-99) , 
13, 0.74553, 0, 0, 0.502305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493324,-99) , 
6, -0.640292, 1, 0, 0.497552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443655,-99) , 
12, 0.987319, 0, 0, 0.491275,-99) , 
10, 0.428533, 1, 0, 0.498558,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0107637);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.49986, 0, 1, 0.502172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483065,-99) , 
12, -0.311233, 0, 0, 0.494486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465726,-99) , 
3, 1.70247, 0, 0, 0.488992,-99) , 
12, 0.239737, 0, 0, 0.499634,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0143029);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49527,-99) , 
9, -951.223, 0, 0, 0.514697,-99) , 
NN(
0, 
0, 
-1, 0.999637, 0, -1, 0.496207,-99) , 
5, 0.999524, 1, 0, 0.499196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47737,-99) , 
4, 9.42577, 1, 0, 0.498315,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0184396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499323,-99) , 
12, 1.43041, 1, 0, 0.502487,-99) , 
12, 13.1641, 0, 0, 0.503863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562444,-99) , 
NN(
0, 
0, 
-1, 0.679655, 1, -1, 0.488553,-99) , 
12, 1.40473, 0, 0, 0.494218,-99) , 
11, -0.395026, 0, 0, 0.499952,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0137117);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.28299, 0, 1, 0.510203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461013,-99) , 
12, 3.35106, 1, 0, 0.500414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447258,-99) , 
13, 1.28955, 0, 0, 0.498513,-99) , 
11, 2.38183, 0, 0, 0.501541,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0138878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.519333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498234,-99) , 
11, 3.22623, 0, 0, 0.501392,-99) , 
13, 2.44821, 0, 0, 0.502561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471877,-99) , 
8, 1.87715, 0, 0, 0.497832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460215,-99) , 
10, -0.134753, 1, 0, 0.4912,-99) , 
12, 0.273961, 0, 0, 0.500305,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0215422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.47981, 0, 1, 0.509712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488236,-99) , 
12, 7.87595, 0, 0, 0.499801,-99) , 
3, 1.09583, 0, 0, 0.505966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467515,-99) , 
8, 1.70369, 0, 0, 0.498077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461386,-99) , 
10, 0.999957, 1, 0, 0.494104,-99) , 
11, -0.122439, 0, 0, 0.500586,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0223861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473795,-99) , 
5, 0.99932, 0, 0, 0.503388,-99) , 
NN(
0, 
0, 
-1, 1.85499, 0, -1, 0.489267,-99) , 
6, 0.260991, 1, 0, 0.500639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429364,-99) , 
9, -951.286, 0, 0, 0.482005,-99) , 
5, 0.998572, 0, 0, 0.499288,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0155139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499423,-99) , 
4, 4.52427, 1, 0, 0.519219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494844,-99) , 
2, 0.193935, 0, 0, 0.49674,-99) , 
2, -0.214147, 1, 0, 0.498043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474321,-99) , 
4, 9.80004, 1, 0, 0.497181,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0180318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493475,-99) , 
12, 8.65616, 0, 0, 0.500565,-99) , 
12, 4.59924, 1, 0, 0.507334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496628,-99) , 
11, 1.34754, 0, 0, 0.499782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454863,-99) , 
12, 3.47615, 1, 0, 0.497999,-99) , 
11, 2.55463, 0, 0, 0.500322,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0161316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493529,-99) , 
12, -0.322621, 0, 0, 0.514762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490299,-99) , 
12, 1.54333, 0, 0, 0.498648,-99) , 
8, 2.56927, 0, 0, 0.500454,-99) , 
10, -2.14282, 1, 0, 0.501309,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0193051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.63064, 1, 1, 0.521286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4959,-99) , 
3, 2.77065, 0, 0, 0.497872,-99) , 
6, -0.161299, 1, 0, 0.501275,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28164, 0, 1, 0.50554,-99) , 
NN(
0, 
0, 
-1, 0.365336, 0, -1, 0.479003,-99) , 
11, 2.47889, 0, 0, 0.494354,-99) , 
13, 1.59541, 0, 0, 0.498263,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0164848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.96868, 0, 1, 0.504871,-99) , 
NN(
0, 
0, 
-1, 5.92354, 0, -1, 0.486267,-99) , 
8, 1.12093, 0, 0, 0.501729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49649,-99) , 
13, 2.10591, 0, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439425,-99) , 
12, 1.31906, 0, 0, 0.492186,-99) , 
10, 0.714268, 1, 0, 0.499331,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0155929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47212,-99) , 
10, 1.85715, 1, 0, 0.503232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490479,-99) , 
10, 0.714082, 0, 0, 0.493766,-99) , 
8, 1.55237, 0, 0, 0.499418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473087,-99) , 
0, 0.489519, 0, 0, 0.498749,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0193025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499215,-99) , 
11, 0.518523, 0, 0, 0.503492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470917,-99) , 
10, -0.137076, 1, 0, 0.484833,-99) , 
9, 0.525285, 1, 0, 0.501016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488406,-99) , 
8, 1.01538, 0, 0, 0.498202,-99) , 
NN(
0, 
0, 
-1, 1.16523, 0, -1, 0.479383,-99) , 
11, 5.64251, 0, 0, 0.490465,-99) , 
8, 1.33584, 0, 0, 0.498179,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0247234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498621,-99) , 
12, 0.626722, 0, 0, 0.507957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45367,-99) , 
12, 2.0434, 0, 0, 0.489762,-99) , 
10, 1.00006, 1, 0, 0.504156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494401,-99) , 
6, -0.414017, 0, 0, 0.499994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462997,-99) , 
11, 0.629578, 0, 0, 0.485546,-99) , 
11, 2.47889, 0, 0, 0.493881,-99) , 
13, 1.59541, 0, 0, 0.499674,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0153452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495544,-99) , 
3, 2.76934, 0, 0, 0.50423,-99) , 
6, 0.315214, 1, 0, 0.512987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492189,-99) , 
13, 1.31108, 0, 0, 0.517032,-99) , 
NN(
0, 
0, 
-1, 0.276951, 0, -1, 0.496837,-99) , 
10, -1.28574, 1, 0, 0.499613,-99) , 
8, 2.39366, 0, 0, 0.50169,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0227986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493043,-99) , 
12, -0.647016, 0, 0, 0.520226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494196,-99) , 
9, -951.255, 0, 0, 0.502476,-99) , 
3, 1.75557, 0, 0, 0.507717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499273,-99) , 
8, 2.31582, 0, 0, 0.502333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442224,-99) , 
11, -1.85504, 1, 0, 0.476458,-99) , 
12, 0.688856, 0, 0, 0.498994,-99) , 
10, -0.142893, 1, 0, 0.502973,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0218073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 0, 1, 0.525833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494513,-99) , 
12, 1.29289, 0, 0, 0.501687,-99) , 
10, -1.57138, 1, 0, 0.503778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438832,-99) , 
9, -951.286, 0, 0, 0.484121,-99) , 
5, 0.998571, 0, 0, 0.502372,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0177183);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.452573, 0, 1, 0.516528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486031,-99) , 
3, 0.907351, 0, 0, 0.494415,-99) , 
13, 1.21812, 0, 0, 0.511752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484215,-99) , 
12, -0.192685, 0, 0, 0.513434,-99) , 
NN(
0, 
0, 
-1, 0.815089, 0, -1, 0.496816,-99) , 
8, 2.34795, 0, 0, 0.499863,-99) , 
10, -0.714324, 1, 0, 0.503038,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0179554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495095,-99) , 
6, -0.711861, 1, 0, 0.505041,-99) , 
12, 5.44528, 1, 0, 0.511062,-99) , 
NN(
NN(
0, 
0, 
-1, 1.78326, 0, 1, 0.504631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461035,-99) , 
12, 2.02064, 1, 0, 0.473382,-99) , 
8, 1.39361, 0, 0, 0.500868,-99) , 
11, 3.63558, 0, 0, 0.502965,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0168188);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499019,-99) , 
13, 1.95076, 0, 0, 0.505644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457533,-99) , 
12, 1.08161, 0, 0, 0.496212,-99) , 
10, 0.306109, 1, 0, 0.501923,-99) , 
10, -2.14286, 1, 0, 0.502777,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0151106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481122,-99) , 
12, 8.78378, 0, 0, 0.503867,-99) , 
8, 1.01278, 0, 0, 0.513294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467694,-99) , 
7, 0.0237915, 1, 0, 0.500901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469762,-99) , 
8, 1.20146, 0, 0, 0.49932,-99) , 
11, 5.51237, 0, 0, 0.501546,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0245656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496631,-99) , 
12, 0.135729, 0, 0, 0.51617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496129,-99) , 
9, -949.024, 0, 0, 0.501814,-99) , 
13, 2.00101, 0, 0, 0.50574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480296,-99) , 
10, 1.65303, 1, 0, 0.50166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459643,-99) , 
12, 1.17208, 0, 0, 0.4953,-99) , 
10, 0.428565, 1, 0, 0.502199,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0186603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.26221, 0, 1, 0.507124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485632,-99) , 
8, 0.910752, 0, 0, 0.505051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492735,-99) , 
3, 2.04265, 0, 0, 0.496683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466478,-99) , 
12, 1.066, 0, 0, 0.492735,-99) , 
10, 0.428516, 1, 0, 0.500862,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0176691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472137,-99) , 
12, 6.95377, 0, 0, 0.504862,-99) , 
8, 1.09152, 0, 0, 0.511289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49893,-99) , 
11, 1.96945, 0, 0, 0.501517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457061,-99) , 
12, 3.84775, 1, 0, 0.499012,-99) , 
11, 3.80899, 0, 0, 0.501489,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0260222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.300116, 0, 1, 0.517407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461027,-99) , 
12, 1.57786, 0, 0, 0.492405,-99) , 
10, 0.714363, 1, 0, 0.509399,-99) , 
NN(
NN(
0, 
0, 
-1, 1.85706, 0, 1, 0.504923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479255,-99) , 
10, -1.10699, 1, 0, 0.488836,-99) , 
11, 0.150233, 0, 0, 0.499428,-99) , 
8, 2.11811, 0, 0, 0.501987,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0156869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.73368, 1, 1, 0.525352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490213,-99) , 
10, 0.142123, 0, 0, 0.499788,-99) , 
13, 0.972015, 0, 0, 0.510772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499581,-99) , 
11, 1.96103, 0, 0, 0.501973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453727,-99) , 
12, 3.7545, 1, 0, 0.498917,-99) , 
11, 3.80945, 0, 0, 0.5013,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0210891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.25727, 0, 1, 0.509094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476964,-99) , 
11, -2.93046, 1, 0, 0.489526,-99) , 
12, -0.405365, 0, 0, 0.505643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494933,-99) , 
8, 2.27358, 0, 0, 0.499669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461958,-99) , 
12, 0.537967, 0, 0, 0.496913,-99) , 
10, 0.142843, 1, 0, 0.5018,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0150564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492669,-99) , 
12, 2.8134, 1, 0, 0.501384,-99) , 
12, 9.6751, 0, 0, 0.502646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473709,-99) , 
8, 0.710625, 0, 0, 0.501521,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0172478);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494633,-99) , 
9, -949.113, 0, 0, 0.511819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495052,-99) , 
10, -1.85715, 1, 0, 0.496707,-99) , 
5, 0.999524, 1, 0, 0.499134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47619,-99) , 
4, 9.79955, 1, 0, 0.498299,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.028181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54536, 1, 1, 0.511826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492897,-99) , 
11, 3.82705, 0, 0, 0.498715,-99) , 
13, 1.76027, 0, 0, 0.503363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476937,-99) , 
12, -0.660701, 0, 0, 0.506341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455672,-99) , 
11, -1.60914, 0, 0, 0.47283,-99) , 
11, -2.25845, 1, 0, 0.489568,-99) , 
12, 0.222023, 0, 0, 0.500752,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0060529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.245202, 0, 1, 0.520602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499862,-99) , 
2, -0.213464, 1, 0, 0.50095,-99) , 
4, 0.540379, 1, 0, 0.502093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483029,-99) , 
4, 8.97397, 1, 0, 0.501194,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00891234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.65682, 0, 1, 0.502914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479308,-99) , 
8, 0.70928, 0, 0, 0.501971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476588,-99) , 
5, 0.997619, 0, 0, 0.500905,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0198367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461975,-99) , 
10, 1.85708, 1, 0, 0.506114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48491,-99) , 
3, 1.74153, 1, 0, 0.496945,-99) , 
9, -40.0028, 1, 0, 0.50284,-99) , 
NN(
0, 
0, 
-1, 0.444143, 0, -1, 0.477643,-99) , 
5, 0.998095, 0, 0, 0.501542,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0168609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492467,-99) , 
3, 1.10359, 0, 0, 0.512668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481529,-99) , 
5, 0.999524, 0, 0, 0.508117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492234,-99) , 
11, -1.69264, 1, 0, 0.508152,-99) , 
NN(
0, 
0, 
-1, 0.524378, 0, -1, 0.495659,-99) , 
3, 2.09346, 0, 0, 0.498023,-99) , 
10, -1, 1, 0, 0.499945,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0164649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449272,-99) , 
12, 3.76513, 1, 0, 0.500818,-99) , 
11, 3.11246, 0, 0, 0.502669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49121,-99) , 
13, 0.952943, 0, 0, 0.499312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455967,-99) , 
11, 6.19303, 0, 0, 0.492315,-99) , 
8, 1.13136, 0, 0, 0.5009,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0153204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.100732, 1, 1, 0.517707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487786,-99) , 
12, -0.64826, 0, 0, 0.509194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499513,-99) , 
12, 5.52621, 1, 0, 0.506627,-99) , 
NN(
0, 
0, 
-1, 1.2933, 0, -1, 0.494391,-99) , 
11, 3.5259, 0, 0, 0.497473,-99) , 
8, 2.38038, 0, 0, 0.499333,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0202647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494749,-99) , 
8, 1.30809, 0, 0, 0.504474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475835,-99) , 
11, 0.98951, 0, 0, 0.490829,-99) , 
7, 0.0011333, 0, 0, 0.502709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457551,-99) , 
3, 1.09764, 1, 0, 0.483287,-99) , 
7, 0.0238014, 1, 0, 0.501507,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0191009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.45926, 0, 1, 0.518958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480168,-99) , 
12, 12.637, 0, 0, 0.49487,-99) , 
13, 0.881285, 0, 0, 0.508553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497959,-99) , 
11, 0.424232, 0, 0, 0.501783,-99) , 
NN(
0, 
0, 
-1, -0.43714, 1, -1, 0.473547,-99) , 
8, 1.3827, 0, 0, 0.498555,-99) , 
11, 3.67998, 0, 0, 0.500612,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0182537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.3111, 0, 1, 0.503091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433365,-99) , 
12, 1.63769, 0, 0, 0.492822,-99) , 
10, 0.999952, 1, 0, 0.500961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47299,-99) , 
12, -1.04964, 0, 0, 0.50485,-99) , 
NN(
0, 
0, 
-1, -1.11066, 1, -1, 0.475085,-99) , 
11, -2.49364, 1, 0, 0.488934,-99) , 
12, -0.0224326, 0, 0, 0.499156,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0192864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493956,-99) , 
11, -1.28871, 1, 0, 0.516708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476675,-99) , 
9, -0.121593, 1, 0, 0.492906,-99) , 
9, -10.0426, 1, 0, 0.506479,-99) , 
NN(
NN(
0, 
0, 
-1, 5.29547, 1, 1, 0.506675,-99) , 
NN(
0, 
0, 
-1, 1.26934, 0, -1, 0.494467,-99) , 
11, 3.51121, 0, 0, 0.497894,-99) , 
3, 1.93414, 0, 0, 0.500036,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0193119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.721275, 0, 1, 0.511901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477653,-99) , 
8, 1.0752, 0, 0, 0.507198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494228,-99) , 
8, 2.27309, 0, 0, 0.497322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475279,-99) , 
12, -0.0393735, 0, 0, 0.49577,-99) , 
10, -0.714309, 1, 0, 0.498811,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0148911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.295717, 0, 1, 0.509785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489832,-99) , 
3, 0.970833, 0, 0, 0.506908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496868,-99) , 
8, 2.5177, 0, 0, 0.498513,-99) , 
NN(
0, 
0, 
-1, 2.70088, 0, -1, 0.477216,-99) , 
12, 0.315635, 0, 0, 0.496446,-99) , 
10, -0.428609, 1, 0, 0.500189,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0274126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.26644, 1, 1, 0.519722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452626,-99) , 
10, 1.28574, 1, 0, 0.502031,-99) , 
11, 0.183017, 0, 0, 0.505855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491097,-99) , 
9, -40.0028, 1, 0, 0.505432,-99) , 
NN(
0, 
0, 
-1, 0.639552, 0, -1, 0.474396,-99) , 
11, 2.03974, 0, 0, 0.495573,-99) , 
8, 1.54513, 0, 0, 0.501793,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0185308);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493834,-99) , 
8, 1.2976, 0, 0, 0.503116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45945,-99) , 
6, 0.440029, 0, 0, 0.481565,-99) , 
5, 0.998571, 0, 0, 0.501579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509513,-99) , 
NN(
0, 
0, 
-1, 0.15964, 0, -1, 0.475301,-99) , 
3, 1.44174, 1, 0, 0.489509,-99) , 
9, 0.525285, 1, 0, 0.499959,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0159564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499709,-99) , 
8, 2.07699, 0, 0, 0.503377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445839,-99) , 
12, 1.73885, 0, 0, 0.490632,-99) , 
10, 0.999961, 1, 0, 0.500676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466988,-99) , 
10, -1.44449, 1, 0, 0.476636,-99) , 
11, -2.59247, 1, 0, 0.487392,-99) , 
12, 0.116956, 0, 0, 0.498383,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0219434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.13115, 0, 1, 0.516806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491603,-99) , 
13, 0.788739, 0, 0, 0.508579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493414,-99) , 
7, 0.0113284, 0, 0, 0.497289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456015,-99) , 
7, 0.0237902, 1, 0, 0.49587,-99) , 
11, 4.02185, 0, 0, 0.498367,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.017748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489671,-99) , 
3, 1.09351, 0, 0, 0.529763,-99) , 
NN(
0, 
0, 
-1, -0.46938, 1, 1, 0.502912,-99) , 
10, -1.28572, 1, 0, 0.505431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542608,-99) , 
NN(
0, 
0, 
-1, 0.582214, 1, -1, 0.490243,-99) , 
12, 1.36335, 0, 0, 0.494661,-99) , 
11, -0.395026, 0, 0, 0.501094,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0176739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498806,-99) , 
13, 1.81762, 0, 0, 0.50366,-99) , 
NN(
0, 
0, 
-1, -0.351304, 1, -1, 0.492672,-99) , 
12, 0.361928, 0, 0, 0.501004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483927,-99) , 
10, 1.85711, 0, 0, 0.502454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453383,-99) , 
11, 0.396896, 0, 0, 0.48428,-99) , 
10, 1.2857, 1, 0, 0.499037,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.020416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.991578, 0, 1, 0.507986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463559,-99) , 
12, 5.76894, 0, 0, 0.494127,-99) , 
13, 1.14885, 0, 0, 0.505435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491316,-99) , 
10, 1.16326, 1, 0, 0.499837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457379,-99) , 
12, 1.00749, 0, 0, 0.494783,-99) , 
10, 0.42856, 1, 0, 0.501802,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0212574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495894,-99) , 
10, 0.142782, 1, 0, 0.501568,-99) , 
8, 2.51753, 0, 0, 0.502971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467451,-99) , 
12, -1.0766, 0, 0, 0.505611,-99) , 
NN(
0, 
0, 
-1, -0.472361, 1, -1, 0.47759,-99) , 
11, -2.52319, 1, 0, 0.488574,-99) , 
12, 0.116956, 0, 0, 0.500506,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0256828);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476821,-99) , 
12, -0.890836, 0, 0, 0.51595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479118,-99) , 
11, 0.587564, 0, 0, 0.498186,-99) , 
8, 1.68701, 0, 0, 0.505871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525162,-99) , 
NN(
0, 
0, 
-1, 0.0237973, 1, -1, 0.494058,-99) , 
12, 10.0293, 0, 0, 0.496496,-99) , 
10, -0.428617, 1, 0, 0.49985,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0234255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.671267, 1, 1, 0.510721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492083,-99) , 
11, 4.25371, 0, 0, 0.499377,-99) , 
8, 1.5089, 0, 0, 0.505529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483853,-99) , 
12, -0.774828, 0, 0, 0.508178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471283,-99) , 
10, -1.72433, 1, 0, 0.479254,-99) , 
3, 2.2106, 0, 0, 0.49127,-99) , 
12, 0.281695, 0, 0, 0.502689,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.020229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.38592, 1, 1, 0.514271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480909,-99) , 
8, 1.65299, 0, 0, 0.497611,-99) , 
11, 1.40721, 0, 0, 0.50091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488121,-99) , 
13, 0.870216, 0, 0, 0.499596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464087,-99) , 
11, 7.7039, 0, 0, 0.490171,-99) , 
8, 1.12093, 0, 0, 0.499123,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0173396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.10462, 0, 1, 0.505022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469927,-99) , 
12, 2.01947, 0, 0, 0.491565,-99) , 
10, 0.714244, 1, 0, 0.500744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52385,-99) , 
NN(
0, 
0, 
-1, -0.0707931, 1, -1, 0.483824,-99) , 
11, -2.99624, 1, 0, 0.489934,-99) , 
12, 0.413866, 0, 0, 0.498355,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.00943613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496759,-99) , 
11, 2.68905, 0, 0, 0.498876,-99) , 
3, 2.68748, 0, 0, 0.499549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475962,-99) , 
2, 0.356712, 1, 0, 0.498903,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0137688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.466482, 0, 1, 0.514386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469906,-99) , 
13, 0.721947, 0, 0, 0.498843,-99) , 
8, 2.10434, 0, 0, 0.502555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483178,-99) , 
12, 5.63565, 1, 0, 0.496773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44746,-99) , 
12, 1.2464, 0, 0, 0.490561,-99) , 
10, 0.714272, 1, 0, 0.499537,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0123567);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479942,-99) , 
10, -0.551048, 1, 0, 0.505194,-99) , 
NN(
0, 
0, 
-1, 0.184551, 0, -1, 0.496673,-99) , 
10, -0.428593, 1, 0, 0.499729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480201,-99) , 
5, 0.997619, 0, 0, 0.498901,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0340828);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481082,-99) , 
10, 1.20801, 1, 0, 0.52248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454385,-99) , 
10, 0.0961229, 1, 0, 0.497167,-99) , 
12, 0.713365, 0, 0, 0.505887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492468,-99) , 
13, 1.26604, 0, 0, 0.50285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478226,-99) , 
10, -1.68732, 1, 0, 0.48459,-99) , 
11, -0.178826, 0, 0, 0.497834,-99) , 
13, 2.10644, 0, 0, 0.499899,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0165915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.938477, 1, 1, 0.529863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482916,-99) , 
12, -0.295083, 0, 0, 0.509001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499279,-99) , 
10, 1.85704, 0, 0, 0.501892,-99) , 
NN(
0, 
0, 
-1, 1.80338, 0, -1, 0.490905,-99) , 
11, 0.644075, 0, 0, 0.496109,-99) , 
8, 2.56943, 0, 0, 0.497533,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0113793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520877,-99) , 
NN(
NN(
0, 
0, 
-1, 7.43316, 0, 1, 0.502641,-99) , 
NN(
0, 
0, 
-1, 5.54238, 1, -1, 0.488586,-99) , 
10, 0.714248, 1, 0, 0.499195,-99) , 
12, 10.8447, 0, 0, 0.500404,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0183153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483427,-99) , 
10, -0.145156, 0, 0, 0.500912,-99) , 
13, 0.975732, 0, 0, 0.509901,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496525,-99) , 
11, 2.79415, 0, 0, 0.498966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460418,-99) , 
12, 4.81123, 1, 0, 0.497346,-99) , 
11, 5.50074, 0, 0, 0.49937,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0177244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496785,-99) , 
10, 0.534346, 1, 0, 0.518636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499807,-99) , 
10, -1.28581, 1, 0, 0.502511,-99) , 
13, 1.99229, 0, 0, 0.50566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478523,-99) , 
10, -0.277226, 1, 0, 0.499552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46538,-99) , 
8, 1.836, 0, 0, 0.493896,-99) , 
12, 0.379125, 0, 0, 0.503132,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.01343);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0716465, 1, 1, 0.504525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478209,-99) , 
12, -0.785131, 0, 0, 0.495608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471265,-99) , 
10, -0.272006, 1, 0, 0.490955,-99) , 
12, 0.0998317, 0, 0, 0.50224,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0199655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476105,-99) , 
10, 1.71977, 1, 0, 0.527819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468986,-99) , 
10, 0.416101, 1, 0, 0.500703,-99) , 
12, 1.40366, 0, 0, 0.507055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499079,-99) , 
10, -1.85738, 1, 0, 0.500377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462563,-99) , 
5, 0.998572, 0, 0, 0.498925,-99) , 
3, 1.77479, 0, 0, 0.501663,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.023243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.920991, 1, 1, 0.509118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488163,-99) , 
11, 3.60819, 0, 0, 0.499902,-99) , 
13, 1.48746, 0, 0, 0.505043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487721,-99) , 
12, -0.307171, 0, 0, 0.499545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467405,-99) , 
11, -1.62312, 0, 0, 0.479071,-99) , 
3, 2.08696, 0, 0, 0.489627,-99) , 
12, 0.222023, 0, 0, 0.502128,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0144088);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85709, 1, 1, 0.504778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469475,-99) , 
12, -1.18902, 0, 0, 0.501296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472795,-99) , 
10, -0.280014, 1, 0, 0.495086,-99) , 
12, 0.222023, 0, 0, 0.502941,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0224558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.289893, 1, 1, 0.514693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497208,-99) , 
10, 1.57134, 0, 0, 0.498876,-99) , 
13, 2.01591, 0, 0, 0.502016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469269,-99) , 
12, -0.8622, 0, 0, 0.504851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464685,-99) , 
11, -1.62272, 0, 0, 0.477006,-99) , 
11, -2.29908, 1, 0, 0.489945,-99) , 
12, 0.239737, 0, 0, 0.4997,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0192486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0862732, 1, 1, 0.510227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489479,-99) , 
11, 5.28528, 0, 0, 0.498746,-99) , 
3, 1.22129, 0, 0, 0.504477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526387,-99) , 
NN(
0, 
0, 
-1, 0.679623, 1, -1, 0.49096,-99) , 
12, 1.52387, 0, 0, 0.494454,-99) , 
11, -0.122439, 0, 0, 0.499943,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0184133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486817,-99) , 
8, 1.09697, 0, 0, 0.510998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477227,-99) , 
12, 0.149713, 0, 0, 0.499921,-99) , 
10, -0.551031, 1, 0, 0.503898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452996,-99) , 
12, 2.29659, 0, 0, 0.477099,-99) , 
11, 1.12574, 0, 0, 0.488826,-99) , 
10, 1.2857, 1, 0, 0.50211,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0227979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.115182, 0, 1, 0.513542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48844,-99) , 
12, 6.09755, 0, 0, 0.49591,-99) , 
13, 1.58308, 0, 0, 0.505023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523452,-99) , 
NN(
0, 
0, 
-1, 1.01311, 0, -1, 0.491905,-99) , 
8, 2.7582, 0, 0, 0.494549,-99) , 
10, -0.14291, 1, 0, 0.499312,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0227704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.3359, 0, 1, 0.514924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485094,-99) , 
10, 1.36735, 1, 0, 0.499542,-99) , 
10, -0.428538, 1, 0, 0.503793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56099,-99) , 
NN(
0, 
0, 
-1, 0.647699, 1, -1, 0.487409,-99) , 
12, 1.40473, 0, 0, 0.492934,-99) , 
11, -0.395026, 0, 0, 0.499404,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0162046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486482,-99) , 
13, 0.68334, 0, 0, 0.513718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497019,-99) , 
11, 2.67227, 0, 0, 0.499511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471438,-99) , 
6, -0.678283, 1, 0, 0.4823,-99) , 
8, 1.15164, 0, 0, 0.497477,-99) , 
12, 9.81898, 0, 0, 0.498589,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.015185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459149,-99) , 
12, 2.99918, 1, 0, 0.50023,-99) , 
11, 1.69618, 0, 0, 0.503523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507519,-99) , 
NN(
0, 
0, 
-1, 3.78439, 0, -1, 0.488716,-99) , 
12, 12.3797, 0, 0, 0.49179,-99) , 
12, 3.68141, 1, 0, 0.500507,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0205555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492998,-99) , 
11, -1.84393, 1, 0, 0.52041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491323,-99) , 
12, -0.483794, 0, 0, 0.510346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498485,-99) , 
12, 3.23833, 1, 0, 0.504682,-99) , 
NN(
0, 
0, 
-1, 1.28559, 1, -1, 0.489693,-99) , 
11, 0.527801, 0, 0, 0.49724,-99) , 
3, 2.23668, 0, 0, 0.498941,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.015916);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.546616, 1, 1, 0.525142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484647,-99) , 
12, -0.937449, 0, 0, 0.494166,-99) , 
12, -0.306972, 0, 0, 0.512889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499388,-99) , 
11, 1.77724, 0, 0, 0.501995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48233,-99) , 
11, 5.4975, 0, 0, 0.493454,-99) , 
13, 1.39978, 0, 0, 0.49885,-99) , 
8, 2.3804, 0, 0, 0.501084,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0115921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498078,-99) , 
8, 2.17167, 0, 0, 0.501356,-99) , 
NN(
0, 
0, 
-1, 2.12528, 1, -1, 0.479423,-99) , 
10, 1.77542, 1, 0, 0.500194,-99) , 
10, -2.14287, 1, 0, 0.500962,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0134266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498329,-99) , 
12, 0.881118, 0, 0, 0.5117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487194,-99) , 
12, 0.708115, 0, 0, 0.49984,-99) , 
8, 2.14263, 0, 0, 0.502691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476865,-99) , 
10, 2.14283, 1, 0, 0.50204,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0125374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480144,-99) , 
4, 7.16537, 1, 0, 0.504038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483897,-99) , 
4, 9.3665, 1, 0, 0.503197,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0128107);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498299,-99) , 
0, 0.499042, 0, 0, 0.50919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495804,-99) , 
8, 2.36246, 0, 0, 0.497654,-99) , 
2, -0.0714753, 1, 0, 0.499734,-99) , 
10, -2.14285, 1, 0, 0.500486,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0126719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47616,-99) , 
8, 1.06655, 0, 0, 0.501708,-99) , 
12, 8.08938, 0, 0, 0.503011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483055,-99) , 
11, 14.362, 1, 0, 0.50173,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0106686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497609,-99) , 
4, 4.85092, 1, 0, 0.509975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497601,-99) , 
13, 2.00101, 0, 0, 0.499996,-99) , 
2, 0.0712383, 0, 0, 0.501771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475921,-99) , 
0, 0.489519, 0, 0, 0.50111,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0206513);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498746,-99) , 
13, 1.24233, 0, 0, 0.526844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49377,-99) , 
12, 11.0468, 0, 0, 0.499172,-99) , 
12, 4.96883, 1, 0, 0.506503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492709,-99) , 
10, -0.142764, 1, 0, 0.499052,-99) , 
NN(
0, 
0, 
-1, 2.20724, 1, -1, 0.46789,-99) , 
8, 1.39804, 0, 0, 0.496333,-99) , 
11, 2.43801, 0, 0, 0.498944,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0174586);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485014,-99) , 
12, -0.636169, 0, 0, 0.505662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466326,-99) , 
12, 0.751057, 0, 0, 0.497384,-99) , 
10, -0.0612607, 1, 0, 0.501507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479214,-99) , 
10, 2.1428, 1, 0, 0.500941,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00867617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476658,-99) , 
7, 0.0237973, 1, 0, 0.500195,-99) , 
12, 9.4985, 0, 0, 0.501566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479589,-99) , 
8, 0.70915, 0, 0, 0.500723,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0249036);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496311,-99) , 
10, 0.665838, 1, 0, 0.518964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454824,-99) , 
10, 0.120827, 1, 0, 0.49373,-99) , 
12, 0.6251, 0, 0, 0.504114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495842,-99) , 
13, 1.38805, 0, 0, 0.515876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486163,-99) , 
11, 2.05882, 0, 0, 0.492983,-99) , 
10, -1.57155, 1, 0, 0.495239,-99) , 
13, 1.99521, 0, 0, 0.49798,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0143075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497282,-99) , 
10, -1.00003, 1, 0, 0.49934,-99) , 
13, 2.69287, 0, 0, 0.500568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507336,-99) , 
NN(
0, 
0, 
-1, -0.378292, 1, -1, 0.482081,-99) , 
3, 2.52389, 0, 0, 0.487747,-99) , 
12, 0.26054, 0, 0, 0.498065,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.020787);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499923,-99) , 
11, -1.8018, 1, 0, 0.509514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49284,-99) , 
11, 2.58701, 0, 0, 0.499377,-99) , 
8, 1.76251, 0, 0, 0.503308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475764,-99) , 
12, -1.12625, 0, 0, 0.501247,-99) , 
NN(
0, 
0, 
-1, 2.69866, 0, -1, 0.470121,-99) , 
10, -0.930308, 1, 0, 0.487711,-99) , 
12, -0.129857, 0, 0, 0.501197,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0201005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497003,-99) , 
10, 0.280134, 1, 0, 0.511337,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.498158,-99) , 
13, 1.72145, 0, 0, 0.503387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480592,-99) , 
11, -2.32132, 1, 0, 0.498462,-99) , 
NN(
0, 
0, 
-1, -2.95974, 1, -1, 0.472298,-99) , 
12, -0.810839, 0, 0, 0.488674,-99) , 
12, 0.0238724, 0, 0, 0.501067,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0159235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488263,-99) , 
12, 4.2581, 1, 0, 0.502491,-99) , 
12, 9.0212, 0, 0, 0.503957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481964,-99) , 
13, 0.74553, 0, 0, 0.502795,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0216712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.09329, 1, 1, 0.509191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486422,-99) , 
11, 7.45709, 0, 0, 0.496343,-99) , 
13, 1.28979, 0, 0, 0.505115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484065,-99) , 
12, -0.471786, 0, 0, 0.496859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46244,-99) , 
10, -0.000733693, 1, 0, 0.491314,-99) , 
12, 0.441421, 0, 0, 0.501967,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0148497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.08464, 1, 1, 0.50978,-99) , 
NN(
0, 
0, 
-1, 1.55696, 0, -1, 0.496237,-99) , 
11, 0.0596593, 0, 0, 0.50272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471174,-99) , 
11, 20.8155, 0, 0, 0.485893,-99) , 
13, 0.829322, 0, 0, 0.50146,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0170234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.73079, 1, 1, 0.510528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452226,-99) , 
13, 1.51775, 0, 0, 0.498784,-99) , 
11, 0.117639, 0, 0, 0.503549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490058,-99) , 
11, 12.9695, 1, 0, 0.500183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445876,-99) , 
12, 5.76894, 0, 0, 0.491118,-99) , 
13, 1.11852, 0, 0, 0.50146,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0273241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496907,-99) , 
10, 0.551528, 1, 0, 0.513172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496377,-99) , 
10, -1.57144, 1, 0, 0.497657,-99) , 
13, 2.01591, 0, 0, 0.500497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471962,-99) , 
12, -0.513947, 0, 0, 0.498223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458828,-99) , 
11, -1.35745, 0, 0, 0.474333,-99) , 
11, -2.1522, 1, 0, 0.48597,-99) , 
12, 0.400445, 0, 0, 0.497309,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.019563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.98704, 1, 1, 0.512016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479319,-99) , 
8, 1.72836, 0, 0, 0.499459,-99) , 
11, 0.268564, 0, 0, 0.504782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472072,-99) , 
10, -0.141785, 0, 0, 0.4896,-99) , 
8, 0.920978, 0, 0, 0.503296,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.015283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.379127, 0, 1, 0.513127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476577,-99) , 
3, 0.962221, 0, 0, 0.508302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499143,-99) , 
3, 1.60516, 0, 0, 0.503451,-99) , 
NN(
0, 
0, 
-1, 0.556539, 1, -1, 0.491223,-99) , 
12, 1.25862, 0, 0, 0.499498,-99) , 
10, -1, 1, 0, 0.501186,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0173289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495501,-99) , 
10, 0.849962, 1, 0, 0.520661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495452,-99) , 
11, 1.21538, 0, 0, 0.499856,-99) , 
8, 2.39366, 0, 0, 0.501705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483628,-99) , 
12, -1.14063, 0, 0, 0.502981,-99) , 
NN(
0, 
0, 
-1, 2.60611, 0, -1, 0.475408,-99) , 
10, -0.8643, 1, 0, 0.490946,-99) , 
12, 0.0205099, 0, 0, 0.500017,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0166794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.25454, 0, 1, 0.505285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487469,-99) , 
3, 0.812519, 0, 0, 0.503664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485372,-99) , 
10, 1.65305, 1, 0, 0.501746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45963,-99) , 
12, 1.17208, 0, 0, 0.495466,-99) , 
10, 0.42856, 1, 0, 0.500884,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0200655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.52909, 1, 1, 0.512321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493239,-99) , 
11, 3.50168, 0, 0, 0.498465,-99) , 
13, 1.80826, 0, 0, 0.503197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485625,-99) , 
12, -0.878271, 0, 0, 0.497627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465525,-99) , 
10, -0.542966, 1, 0, 0.488892,-99) , 
12, -0.0224326, 0, 0, 0.50105,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0168432);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499613,-99) , 
12, -0.167243, 0, 0, 0.517671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484797,-99) , 
11, -1.45357, 1, 0, 0.508333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497816,-99) , 
8, 2.02211, 0, 0, 0.500535,-99) , 
NN(
0, 
0, 
-1, -0.239893, 1, -1, 0.48352,-99) , 
12, 0.778428, 0, 0, 0.496791,-99) , 
3, 2.22639, 0, 0, 0.498308,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0255402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.40399, 1, 1, 0.508613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490673,-99) , 
11, 7.04067, 0, 0, 0.497653,-99) , 
13, 1.42262, 0, 0, 0.504174,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480062,-99) , 
12, -1.08887, 0, 0, 0.509937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47396,-99) , 
11, -1.41369, 0, 0, 0.485654,-99) , 
11, -2.45573, 1, 0, 0.49392,-99) , 
12, 0.379125, 0, 0, 0.501959,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0183895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44866, 0, 1, 0.50561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466235,-99) , 
12, 7.74441, 0, 0, 0.488579,-99) , 
13, 1.0834, 0, 0, 0.502947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491893,-99) , 
13, 2.07104, 0, 0, 0.496561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455125,-99) , 
12, 1.3802, 0, 0, 0.49022,-99) , 
10, 0.714218, 1, 0, 0.499745,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0134873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.93304, 1, 1, 0.509939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483202,-99) , 
8, 1.65726, 0, 0, 0.495725,-99) , 
11, 1.83608, 0, 0, 0.499257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479548,-99) , 
11, 14.3234, 1, 0, 0.498001,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0162778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48965,-99) , 
5, 0.999524, 1, 0, 0.497715,-99) , 
6, 0.469457, 1, 0, 0.508774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494545,-99) , 
8, 1.38694, 0, 0, 0.499705,-99) , 
NN(
0, 
0, 
-1, -0.0970016, 1, -1, 0.483976,-99) , 
12, 0.840957, 0, 0, 0.495958,-99) , 
8, 2.56927, 0, 0, 0.497369,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0184624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497243,-99) , 
11, -0.558758, 0, 0, 0.508999,-99) , 
NN(
0, 
0, 
-1, -0.693838, 1, -1, 0.485277,-99) , 
8, 1.12135, 0, 0, 0.505225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486357,-99) , 
10, 0.550994, 1, 0, 0.493917,-99) , 
12, 11.6743, 0, 0, 0.495356,-99) , 
10, -0.428588, 1, 0, 0.498872,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0182894);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.375001, 1, 1, 0.512899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492495,-99) , 
12, -0.350636, 0, 0, 0.510225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487526,-99) , 
11, 1.00156, 0, 0, 0.493817,-99) , 
8, 2.60426, 0, 0, 0.495565,-99) , 
10, -1.57144, 1, 0, 0.497038,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0175046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486984,-99) , 
12, -0.0516651, 0, 0, 0.497339,-99) , 
6, 0.477462, 1, 0, 0.508717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496158,-99) , 
11, -0.272991, 0, 0, 0.508427,-99) , 
NN(
0, 
0, 
-1, -0.0612358, 1, -1, 0.49308,-99) , 
10, -1.28572, 1, 0, 0.495133,-99) , 
8, 2.56929, 0, 0, 0.496636,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0183874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43894, 0, 1, 0.511105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496197,-99) , 
8, 2.70002, 0, 0, 0.497606,-99) , 
10, -0.428617, 1, 0, 0.501217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483647,-99) , 
3, 2.08286, 0, 0, 0.495577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455089,-99) , 
10, -0.0708057, 1, 0, 0.488868,-99) , 
12, 0.332721, 0, 0, 0.498659,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0185077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.386161, 0, 1, 0.515423,-99) , 
NN(
0, 
0, 
-1, 1.03244, 0, -1, 0.480858,-99) , 
13, 1.23316, 0, 0, 0.50778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498295,-99) , 
12, 2.59666, 1, 0, 0.503353,-99) , 
NN(
0, 
0, 
-1, 1.40813, 1, -1, 0.492713,-99) , 
11, 0.267001, 0, 0, 0.498323,-99) , 
10, -0.714309, 1, 0, 0.500856,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.012012);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497639,-99) , 
11, 1.59241, 0, 0, 0.500978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475457,-99) , 
13, 0.913432, 0, 0, 0.499733,-99) , 
12, 11.2502, 0, 0, 0.500498,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_2_4::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_2_4::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_2_4 *ReadBDT_maker_LHC19c2a_2_4(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_2_4(theInpVar);
  }
}
