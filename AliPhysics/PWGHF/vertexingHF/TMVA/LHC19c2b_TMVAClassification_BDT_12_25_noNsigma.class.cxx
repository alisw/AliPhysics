#include "LHC19c2b_TMVAClassification_BDT_12_25_noNsigma.class.h"

double ReadBDT_LHC19c2b_12_25_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_12_25_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.803104846581187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.558813, 1, 1, 0.824841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347377,-99) , 
5, -0.918217, 0, 0, 0.793652,-99) , 
NN(
0, 
0, 
-1, 0.823185, 1, -1, 0.143828,-99) , 
5, 0.714291, 1, 0, 0.499219,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.576077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.820201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490253,-99) , 
5, -0.778072, 0, 0, 0.761426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4214,-99) , 
0, 0.500947, 1, 0, 0.50765,-99) , 
5, 0.551042, 1, 0, 0.695719,-99) , 
NN(
0, 
0, 
-1, 0.900266, 1, -1, 0.150525,-99) , 
5, 0.809546, 1, 0, 0.497541,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.489414);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.691622, 0, 1, 0.714112,-99) , 
NN(
0, 
0, 
-1, 0.891014, 1, -1, 0.260487,-99) , 
5, 0.618916, 1, 0, 0.486169,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.413572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.79062, 0, 1, 0.702572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.688248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467992,-99) , 
6, 0.00288042, 0, 0, 0.522384,-99) , 
5, 0.464742, 1, 0, 0.64142,-99) , 
NN(
0, 
0, 
-1, 0.900216, 1, -1, 0.236988,-99) , 
5, 0.809512, 1, 0, 0.495491,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.347584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.737456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462051,-99) , 
5, -0.723584, 0, 0, 0.657177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406416,-99) , 
5, 0.83995, 1, 0, 0.507412,-99) , 
5, 0.451232, 1, 0, 0.588174,-99) , 
NN(
0, 
0, 
-1, 0.945714, 1, -1, 0.181466,-99) , 
5, 0.904745, 1, 0, 0.496426,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.293994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.779494, 0, 1, 0.654605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427103,-99) , 
5, 0.80106, 1, 0, 0.471056,-99) , 
5, 0.541922, 1, 0, 0.576283,-99) , 
NN(
0, 
0, 
-1, 0.959197, 1, -1, 0.20626,-99) , 
5, 0.904743, 1, 0, 0.499285,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.23944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.516188, 0, 1, 0.612241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45347,-99) , 
1, -0.00319425, 1, 0, 0.467692,-99) , 
5, 0.451192, 1, 0, 0.542493,-99) , 
NN(
0, 
0, 
-1, 0.954631, 1, -1, 0.247362,-99) , 
5, 0.904742, 1, 0, 0.484064,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.20471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.412348, 1, 1, 0.565295,-99) , 
NN(
0, 
0, 
-1, 0.499046, 1, -1, 0.414325,-99) , 
5, -0.81846, 0, 0, 0.547456,-99) , 
NN(
0, 
0, 
-1, 0.954701, 1, -1, 0.263859,-99) , 
5, 0.904751, 1, 0, 0.491481,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.172336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.546876, 0, 1, 0.648071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312024,-99) , 
2, -0.154263, 0, 0, 0.506541,-99) , 
1, 0.00309911, 0, 0, 0.530623,-99) , 
NN(
0, 
0, 
-1, 0.95014, 1, -1, 0.291796,-99) , 
5, 0.904734, 1, 0, 0.481392,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.176611);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419366,-99) , 
3, 4.7057, 1, 0, 0.521843,-99) , 
NN(
0, 
0, 
-1, 2.39529, 1, -1, 0.391656,-99) , 
5, -0.727704, 0, 0, 0.499847,-99) , 
NN(
0, 
0, 
-1, 0.950159, 1, -1, 0.305343,-99) , 
5, 0.904755, 1, 0, 0.462813,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.161261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447378,-99) , 
5, 0.541932, 1, 0, 0.501139,-99) , 
NN(
0, 
0, 
-1, 0.496187, 0, -1, 0.346876,-99) , 
2, 0.108346, 1, 0, 0.485514,-99) , 
NN(
0, 
0, 
-1, 0.950207, 1, -1, 0.320201,-99) , 
5, 0.904745, 1, 0, 0.454624,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.131363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417659,-99) , 
0, 0.49238, 0, 0, 0.507987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386072,-99) , 
5, 0.904745, 1, 0, 0.485406,-99) , 
NN(
0, 
0, 
-1, -0.182003, 0, -1, 0.363353,-99) , 
2, -0.0498117, 0, 0, 0.457976,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.179409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44624,-99) , 
5, -0.682415, 0, 0, 0.564027,-99) , 
NN(
0, 
0, 
-1, 0.936494, 1, -1, 0.447428,-99) , 
5, 0.333374, 1, 0, 0.491937,-99) , 
NN(
0, 
0, 
-1, -0.141196, 1, -1, 0.337613,-99) , 
2, -0.07578, 0, 0, 0.464567,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.144836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423985,-99) , 
0, 0.502852, 1, 0, 0.520118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390926,-99) , 
5, 0.904756, 1, 0, 0.496961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36035,-99) , 
2, 0.106019, 1, 0, 0.412324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265779,-99) , 
2, 0.206912, 1, 0, 0.363429,-99) , 
2, 0.0745067, 1, 0, 0.474527,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.152049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0126772, 1, 1, 0.691149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400312,-99) , 
5, -0.906715, 0, 0, 0.483493,-99) , 
5, -0.51023, 0, 0, 0.572334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458825,-99) , 
1, 0.00191959, 0, 0, 0.480052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335172,-99) , 
5, 0.959124, 1, 0, 0.461315,-99) , 
5, 0.142832, 1, 0, 0.494158,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.140528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429872,-99) , 
5, -0.809505, 0, 0, 0.534749,-99) , 
NN(
0, 
0, 
-1, 0.145927, 1, -1, 0.424437,-99) , 
2, 0.0792227, 1, 0, 0.514559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406052,-99) , 
3, 3.38696, 0, 0, 0.447502,-99) , 
NN(
0, 
0, 
-1, -0.199152, 0, -1, 0.31781,-99) , 
2, -0.135199, 0, 0, 0.379516,-99) , 
2, -0.0681922, 0, 0, 0.489577,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0950806);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468396,-99) , 
1, -0.00100773, 1, 0, 0.491362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338552,-99) , 
2, 0.19592, 1, 0, 0.483366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30337,-99) , 
2, -0.205264, 0, 0, 0.474605,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.137148);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47198,-99) , 
5, 0.428471, 1, 0, 0.510035,-99) , 
NN(
0, 
0, 
-1, -0.200095, 0, -1, 0.344954,-99) , 
2, -0.137194, 0, 0, 0.492685,-99) , 
NN(
0, 
0, 
-1, 0.501893, 1, -1, 0.362126,-99) , 
2, 0.0823977, 1, 0, 0.472089,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0845673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461195,-99) , 
5, 0.177076, 1, 0, 0.557216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47873,-99) , 
1, 0.00518256, 0, 0, 0.488356,-99) , 
1, -0.0039028, 1, 0, 0.496276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365136,-99) , 
5, 0.950102, 1, 0, 0.423464,-99) , 
5, 0.904756, 1, 0, 0.482533,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.131825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.151756, 1, 1, 0.536644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352302,-99) , 
5, 0.936489, 1, 0, 0.505502,-99) , 
NN(
0, 
0, 
-1, 0.494284, 0, -1, 0.402335,-99) , 
5, -0.333168, 0, 0, 0.480776,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.110481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50834, 0, 1, 0.620501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428471,-99) , 
3, 2.09142, 1, 0, 0.496139,-99) , 
5, -0.346981, 0, 0, 0.536041,-99) , 
NN(
0, 
0, 
-1, 0.499996, 1, -1, 0.454518,-99) , 
5, 0.14285, 1, 0, 0.47882,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0963261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462624,-99) , 
5, -0.333329, 0, 0, 0.512741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397447,-99) , 
2, 0.152929, 1, 0, 0.502393,-99) , 
NN(
0, 
0, 
-1, -0.428454, 0, -1, 0.402513,-99) , 
2, -0.0681922, 0, 0, 0.484391,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0482251);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498203,-99) , 
3, 3.3471, 0, 0, 0.508741,-99) , 
NN(
0, 
0, 
-1, -0.0474677, 0, -1, 0.420111,-99) , 
0, 0.504756, 1, 0, 0.501978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36906,-99) , 
2, -0.167734, 0, 0, 0.493328,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.074996);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460381,-99) , 
5, -0.428565, 0, 0, 0.511501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356998,-99) , 
2, 0.20088, 1, 0, 0.504231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387708,-99) , 
2, -0.198099, 0, 0, 0.499004,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.112298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487078,-99) , 
0, 0.499858, 1, 0, 0.55613,-99) , 
NN(
0, 
0, 
-1, 0.483045, 0, -1, 0.475782,-99) , 
5, 0.42863, 1, 0, 0.505169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386771,-99) , 
6, 0.00288017, 0, 0, 0.450858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364169,-99) , 
2, -0.0393254, 0, 0, 0.421687,-99) , 
0, 0.501899, 1, 0, 0.486558,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0697668);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490418,-99) , 
0, 0.495279, 1, 0, 0.503514,-99) , 
NN(
0, 
0, 
-1, 0.139528, 1, -1, 0.437721,-99) , 
2, 0.0725197, 1, 0, 0.493546,-99) , 
NN(
0, 
0, 
-1, 0.489609, 1, -1, 0.382127,-99) , 
0, 0.491424, 0, 0, 0.482532,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0667278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422583,-99) , 
2, -0.155038, 0, 0, 0.506026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409774,-99) , 
0, 0.500927, 0, 0, 0.449455,-99) , 
2, 0.0862704, 1, 0, 0.498695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345125,-99) , 
3, 8.18655, 1, 0, 0.491073,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0923585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.454828, 1, 1, 0.536073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427749,-99) , 
3, 1.73815, 0, 0, 0.484065,-99) , 
0, 0.499993, 1, 0, 0.517751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402047,-99) , 
3, 6.89352, 1, 0, 0.508218,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0510837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143641, 1, 1, 0.62473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49618,-99) , 
1, 0.00554048, 0, 0, 0.505552,-99) , 
1, -0.00538992, 1, 0, 0.512705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363608,-99) , 
3, 8.18935, 1, 0, 0.504941,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.14399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478615,-99) , 
2, -0.0225243, 0, 0, 0.57644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439882,-99) , 
0, 0.504892, 1, 0, 0.487646,-99) , 
0, 0.5019, 1, 0, 0.55501,-99) , 
NN(
NN(
0, 
0, 
-1, -0.522759, 0, 1, 0.661117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424164,-99) , 
6, 0.00145953, 0, 0, 0.462034,-99) , 
1, 0.00511007, 0, 0, 0.479606,-99) , 
1, -0.00129495, 1, 0, 0.501279,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0783634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.510113, 0, 1, 0.581044,-99) , 
NN(
0, 
0, 
-1, 0.499972, 1, -1, 0.423867,-99) , 
3, 2.95402, 1, 0, 0.540038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454453,-99) , 
5, 0.945565, 1, 0, 0.497123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371552,-99) , 
1, -0.00128353, 1, 0, 0.424717,-99) , 
0, 0.493329, 0, 0, 0.486435,-99) , 
5, -0.142774, 1, 0, 0.498834,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0834408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478711,-99) , 
1, -0.00226696, 1, 0, 0.500267,-99) , 
NN(
0, 
0, 
-1, 0.522941, 0, -1, 0.453926,-99) , 
0, 0.501899, 1, 0, 0.490629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386623,-99) , 
2, -0.187468, 0, 0, 0.484973,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0938699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374257,-99) , 
3, 3.37474, 1, 0, 0.505536,-99) , 
1, 0.0045751, 0, 0, 0.534933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48756,-99) , 
6, 0.00272633, 0, 0, 0.505108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285993,-99) , 
6, 0.00715696, 1, 0, 0.492831,-99) , 
5, -0.0475447, 1, 0, 0.503919,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.122913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46748,-99) , 
6, 0.0013216, 0, 0, 0.527925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342276,-99) , 
6, 0.00925132, 1, 0, 0.519824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458054,-99) , 
0, 0.502127, 1, 0, 0.502485,-99) , 
NN(
0, 
0, 
-1, 0.495321, 1, -1, 0.421935,-99) , 
0, 0.497138, 0, 0, 0.466038,-99) , 
5, -0.428561, 0, 0, 0.509018,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0816799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498097, 0, 1, 0.616995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443982,-99) , 
3, 0.690785, 0, 0, 0.509838,-99) , 
3, 6.23865, 0, 0, 0.517481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398906,-99) , 
5, 0.950144, 1, 0, 0.456257,-99) , 
5, 0.904751, 1, 0, 0.506007,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0783718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469981,-99) , 
2, -0.00927909, 0, 0, 0.493637,-99) , 
0, 0.504756, 0, 0, 0.501092,-99) , 
NN(
0, 
0, 
-1, 0.196476, 1, -1, 0.415967,-99) , 
2, 0.0637054, 1, 0, 0.485741,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0447176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.591964, 1, 1, 0.515696,-99) , 
NN(
0, 
0, 
-1, -0.0726501, 0, -1, 0.477011,-99) , 
5, 0.523876, 0, 0, 0.497531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410458,-99) , 
2, -0.198099, 0, 0, 0.493545,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0726215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.29466, 0, 1, 0.62557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468401,-99) , 
5, 0.523832, 1, 0, 0.558461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437069,-99) , 
5, -0.619033, 0, 0, 0.497563,-99) , 
NN(
0, 
0, 
-1, 0.141592, 0, -1, 0.395109,-99) , 
0, 0.503804, 1, 0, 0.484388,-99) , 
1, 0.00253002, 0, 0, 0.497739,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.105175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.274242, 0, 1, 0.638215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424435,-99) , 
5, 0.705302, 0, 0, 0.494177,-99) , 
5, 0.523878, 1, 0, 0.572426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456854,-99) , 
0, 0.494688, 0, 0, 0.497405,-99) , 
NN(
0, 
0, 
-1, 0.505075, 0, -1, 0.435651,-99) , 
0, 0.499995, 1, 0, 0.475255,-99) , 
1, 0.00216575, 0, 0, 0.495209,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0744413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618842, 1, 1, 0.585641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488808,-99) , 
1, 0.00463642, 0, 0, 0.496023,-99) , 
1, -0.00179254, 1, 0, 0.515162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503923,-99) , 
NN(
0, 
0, 
-1, -0.201834, 1, -1, 0.401784,-99) , 
5, 0.523763, 0, 0, 0.445219,-99) , 
0, 0.501898, 1, 0, 0.499146,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0855049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504752, 1, 1, 0.600127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271896,-99) , 
6, 0.00635231, 1, 0, 0.488773,-99) , 
5, -0.142838, 1, 0, 0.514309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486287,-99) , 
1, -0.00191291, 1, 0, 0.507284,-99) , 
NN(
0, 
0, 
-1, 0.238368, 0, -1, 0.447239,-99) , 
0, 0.495776, 1, 0, 0.477362,-99) , 
0, 0.499041, 0, 0, 0.492452,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.104333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57506, 0, 1, 0.563112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445505,-99) , 
2, 0.0790242, 1, 0, 0.50467,-99) , 
5, 0.619063, 1, 0, 0.532692,-99) , 
NN(
0, 
0, 
-1, 0.52361, 0, -1, 0.415601,-99) , 
2, -0.0681922, 0, 0, 0.509525,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0964456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330901,-99) , 
6, 0.00941506, 1, 0, 0.523278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364872,-99) , 
3, 2.52273, 1, 0, 0.471139,-99) , 
5, -0.428452, 0, 0, 0.512076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374205,-99) , 
3, 8.2051, 1, 0, 0.505401,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0798772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46902,-99) , 
3, 6.87875, 1, 0, 0.534363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428036,-99) , 
3, 1.11508, 0, 0, 0.473653,-99) , 
3, 3.58524, 0, 0, 0.487516,-99) , 
NN(
0, 
0, 
-1, 0.494276, 0, -1, 0.432148,-99) , 
2, 0.102409, 1, 0, 0.48117,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0786526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.330295, 0, 1, 0.604635,-99) , 
NN(
0, 
0, 
-1, 0.00715696, 1, -1, 0.474709,-99) , 
5, -0.0158602, 1, 0, 0.488753,-99) , 
NN(
0, 
0, 
-1, 0.700082, 0, -1, 0.436621,-99) , 
5, -0.523796, 0, 0, 0.479253,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0965879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487341,-99) , 
6, 0.00268969, 0, 0, 0.509252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317038,-99) , 
6, 0.00941506, 1, 0, 0.499127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385583,-99) , 
3, 1.93254, 1, 0, 0.447888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328122,-99) , 
3, 0.689668, 0, 0, 0.418733,-99) , 
5, -0.618847, 0, 0, 0.485381,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0838124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.68145, 0, 1, 0.671881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402602,-99) , 
2, -0.0575376, 0, 0, 0.489798,-99) , 
5, -0.546309, 0, 0, 0.548712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486865,-99) , 
5, 0.572508, 1, 0, 0.501044,-99) , 
NN(
0, 
0, 
-1, 0.00231078, 0, -1, 0.413969,-99) , 
5, 0.251792, 0, 0, 0.490165,-99) , 
5, -0.0474993, 1, 0, 0.50478,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0870416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436332,-99) , 
5, 0.410407, 0, 0, 0.530296,-99) , 
5, -0.238009, 1, 0, 0.565752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466581,-99) , 
5, 0.918353, 1, 0, 0.509031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344696,-99) , 
0, 0.498768, 0, 0, 0.459391,-99) , 
5, -0.714269, 0, 0, 0.502763,-99) , 
0, 0.493328, 1, 0, 0.511887,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0559308);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436034,-99) , 
5, -0.420134, 0, 0, 0.601443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3571,-99) , 
6, 0.00715696, 1, 0, 0.493244,-99) , 
5, -0.0884203, 1, 0, 0.502686,-99) , 
NN(
0, 
0, 
-1, -0.637271, 1, -1, 0.437665,-99) , 
5, -0.523796, 0, 0, 0.490769,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0637641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.712137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468166,-99) , 
5, 0.141995, 1, 0, 0.607224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453108,-99) , 
5, -0.333234, 0, 0, 0.499376,-99) , 
6, 0.00548606, 0, 0, 0.508667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338416,-99) , 
6, 0.011521, 1, 0, 0.501772,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0832869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00148783, 1, 1, 0.535133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460046,-99) , 
5, 0.931965, 1, 0, 0.51079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473993,-99) , 
1, -0.00649238, 1, 0, 0.483428,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.380852,-99) , 
2, 0.0862704, 1, 0, 0.468373,-99) , 
5, 0.714263, 0, 0, 0.486205,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.117738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.16889, 0, 1, 0.576757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463347,-99) , 
5, 0.238005, 1, 0, 0.496931,-99) , 
0, 0.496097, 0, 0, 0.522208,-99) , 
NN(
NN(
0, 
0, 
-1, 0.332996, 1, 1, 0.553016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426511,-99) , 
5, -0.23801, 1, 0, 0.442536,-99) , 
0, 0.503987, 0, 0, 0.462606,-99) , 
0, 0.498092, 1, 0, 0.491059,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0790914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449054,-99) , 
0, 0.490065, 0, 0, 0.501232,-99) , 
5, -0.142809, 1, 0, 0.537131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471524,-99) , 
5, 0.0476846, 0, 0, 0.50474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428283,-99) , 
5, 0.809402, 0, 0, 0.457285,-99) , 
0, 0.498771, 0, 0, 0.481113,-99) , 
0, 0.49333, 1, 0, 0.489108,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0915421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485701,-99) , 
5, -0.691451, 0, 0, 0.581771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448663,-99) , 
5, 0.618845, 1, 0, 0.537271,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422482,-99) , 
5, -0.332842, 0, 0, 0.496866,-99) , 
NN(
0, 
0, 
-1, 0.0067561, 1, -1, 0.44956,-99) , 
0, 0.498093, 1, 0, 0.472639,-99) , 
1, -0.002621, 1, 0, 0.482485,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0883012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.410496, 0, 1, 0.568485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353762,-99) , 
3, 4.1889, 1, 0, 0.544895,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46427,-99) , 
5, 0.700684, 0, 0, 0.496623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282449,-99) , 
6, 0.00869162, 1, 0, 0.488226,-99) , 
5, -0.0476231, 1, 0, 0.502328,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0821844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.383304, 1, 1, 0.55879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445217,-99) , 
5, -0.618774, 0, 0, 0.536589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479347,-99) , 
5, 0.224532, 0, 0, 0.502654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453372,-99) , 
5, 0.78244, 1, 0, 0.465373,-99) , 
5, 0.714291, 1, 0, 0.485736,-99) , 
0, 0.495232, 1, 0, 0.498753,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0441323);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499625,-99) , 
0, 0.498906, 0, 0, 0.5652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337362,-99) , 
1, 0.00761678, 1, 0, 0.497383,-99) , 
5, -0.809303, 1, 0, 0.502997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531543,-99) , 
NN(
0, 
0, 
-1, 0.490832, 0, -1, 0.431132,-99) , 
0, 0.489428, 1, 0, 0.454237,-99) , 
0, 0.492376, 0, 0, 0.497114,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0684407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.32994, 0, 1, 0.636454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48461,-99) , 
5, 0.523832, 1, 0, 0.56986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475495,-99) , 
5, -0.33319, 1, 0, 0.480843,-99) , 
0, 0.490475, 1, 0, 0.484847,-99) , 
1, 0.00253002, 0, 0, 0.499634,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0799618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455521,-99) , 
2, 0.0283812, 1, 0, 0.526791,-99) , 
5, -0.428492, 0, 0, 0.55442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48923,-99) , 
5, 0.668339, 1, 0, 0.504271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298014,-99) , 
3, 1.37039, 0, 0, 0.420528,-99) , 
5, 0.129374, 0, 0, 0.49615,-99) , 
5, -0.142774, 1, 0, 0.509225,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0484477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493124,-99) , 
0, 0.49918, 0, 0, 0.503725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447721,-99) , 
1, 0.0022304, 0, 0, 0.463307,-99) , 
0, 0.5019, 1, 0, 0.495458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401528,-99) , 
2, -0.19705, 0, 0, 0.491223,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.102697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714293, 1, 1, 0.540116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373086,-99) , 
5, 0.429073, 0, 0, 0.470471,-99) , 
2, 0.0793373, 1, 0, 0.529407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458927,-99) , 
5, -0.682413, 0, 0, 0.526606,-99) , 
NN(
0, 
0, 
-1, 0.251827, 0, -1, 0.432221,-99) , 
5, -0.0474831, 1, 0, 0.460776,-99) , 
0, 0.5019, 1, 0, 0.51429,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0580828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478851,-99) , 
0, 0.504893, 0, 0, 0.533059,-99) , 
1, -0.00156958, 1, 0, 0.565822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492151,-99) , 
5, -0.0793308, 1, 0, 0.5031,-99) , 
NN(
0, 
0, 
-1, -0.727951, 1, -1, 0.442129,-99) , 
5, -0.619041, 0, 0, 0.49357,-99) , 
0, 0.503805, 0, 0, 0.500769,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0576692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.43937, 1, 1, 0.565915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488473,-99) , 
3, 4.17042, 1, 0, 0.5472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487928,-99) , 
6, 0.00493726, 0, 0, 0.498165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352626,-99) , 
6, 0.0115215, 1, 0, 0.492615,-99) , 
0, 0.50285, 0, 0, 0.500499,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0689433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00768057, 0, 1, 0.528375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39216,-99) , 
6, 0.0115215, 1, 0, 0.523181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41634,-99) , 
2, -0.19705, 0, 0, 0.517021,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.113573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.537306, 0, 1, 0.587672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421287,-99) , 
2, -0.00282012, 1, 0, 0.495655,-99) , 
5, 0.619065, 1, 0, 0.540117,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464029,-99) , 
5, 0.927432, 1, 0, 0.507996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424962,-99) , 
0, 0.503804, 0, 0, 0.443648,-99) , 
5, 0.2382, 0, 0, 0.485743,-99) , 
1, 0.000677622, 0, 0, 0.506574,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0572447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.87303, 1, 1, 0.531363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451513,-99) , 
5, 0.550874, 1, 0, 0.490427,-99) , 
5, 0.809495, 0, 0, 0.503901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423401,-99) , 
2, -0.193924, 0, 0, 0.499464,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0925291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0014408, 1, 1, 0.615119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449313,-99) , 
3, 1.25328, 0, 0, 0.500099,-99) , 
5, -0.501064, 0, 0, 0.539317,-99) , 
NN(
NN(
0, 
0, 
-1, 0.72805, 1, 1, 0.570801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459871,-99) , 
3, 3.51296, 0, 0, 0.472591,-99) , 
2, -0.0710455, 1, 0, 0.489241,-99) , 
5, 0.0476866, 1, 0, 0.502476,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0629371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495665, 1, 1, 0.517085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451659,-99) , 
5, -0.618367, 1, 0, 0.472244,-99) , 
0, 0.493419, 0, 0, 0.508041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476547,-99) , 
0, 0.505113, 0, 0, 0.50583,-99) , 
NN(
0, 
0, 
-1, 2.33031, 1, -1, 0.394424,-99) , 
5, 0.0476631, 0, 0, 0.45727,-99) , 
0, 0.502852, 1, 0, 0.499627,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0770268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46708,-99) , 
0, 0.501916, 1, 0, 0.562218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487456,-99) , 
5, 0.809715, 1, 0, 0.527965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453526,-99) , 
5, -0.614409, 0, 0, 0.49735,-99) , 
NN(
0, 
0, 
-1, 1.29466, 1, -1, 0.461525,-99) , 
5, 0.619062, 1, 0, 0.480014,-99) , 
3, 4.14964, 0, 0, 0.489635,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0707937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503799, 0, 1, 0.517698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469517,-99) , 
3, 6.89948, 0, 0, 0.476898,-99) , 
5, 0.333233, 1, 0, 0.491311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437925,-99) , 
2, -0.139023, 0, 0, 0.471878,-99) , 
NN(
0, 
0, 
-1, 0.000835089, 0, -1, 0.412582,-99) , 
3, 3.30246, 0, 0, 0.441648,-99) , 
2, -0.0724437, 0, 0, 0.482799,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0813913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0154069, 1, 1, 0.546957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406634,-99) , 
0, 0.493599, 1, 0, 0.463869,-99) , 
5, -0.523243, 0, 0, 0.531233,-99) , 
NN(
NN(
0, 
0, 
-1, -0.4104, 0, 1, 0.540659,-99) , 
NN(
0, 
0, 
-1, -0.00346164, 0, -1, 0.475018,-99) , 
5, -0.0475451, 1, 0, 0.490322,-99) , 
0, 0.49809, 1, 0, 0.510086,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0438647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489943,-99) , 
0, 0.495643, 1, 0, 0.498963,-99) , 
0, 0.50598, 0, 0, 0.502482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343001,-99) , 
0, 0.489249, 1, 0, 0.41708,-99) , 
0, 0.490474, 0, 0, 0.497338,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.071265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442807,-99) , 
0, 0.504709, 1, 0, 0.505291,-99) , 
1, 0.00333685, 0, 0, 0.51621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47289,-99) , 
5, 0.047777, 1, 0, 0.485539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389491,-99) , 
0, 0.499405, 1, 0, 0.477735,-99) , 
0, 0.499995, 0, 0, 0.49053,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0941896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414353,-99) , 
3, 8.18935, 1, 0, 0.512268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284054,-99) , 
1, 0.00818643, 1, 0, 0.504802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442895,-99) , 
3, 1.6904, 0, 0, 0.477728,-99) , 
NN(
0, 
0, 
-1, -0.682674, 1, -1, 0.351291,-99) , 
3, 2.31443, 1, 0, 0.42534,-99) , 
5, -0.333324, 0, 0, 0.486365,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0804355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.18007, 0, 1, 0.521129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457495,-99) , 
1, 0.00236117, 1, 0, 0.512925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475219,-99) , 
3, 2.76937, 0, 0, 0.519864,-99) , 
NN(
0, 
0, 
-1, 0.0611843, 1, -1, 0.448371,-99) , 
1, 0.00309911, 0, 0, 0.461498,-99) , 
5, 0.714175, 0, 0, 0.483902,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0856503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468061,-99) , 
3, 2.8441, 1, 0, 0.575333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458589,-99) , 
5, -0.891147, 0, 0, 0.528925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473443,-99) , 
5, -0.0462612, 1, 0, 0.480572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350458,-99) , 
5, -0.292499, 0, 0, 0.475332,-99) , 
5, -0.428561, 1, 0, 0.484759,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0506145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494286, 1, 1, 0.522531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452756,-99) , 
0, 0.497138, 0, 0, 0.482393,-99) , 
5, 0.877418, 1, 0, 0.508856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40206,-99) , 
5, -0.0205448, 1, 0, 0.487916,-99) , 
NN(
0, 
0, 
-1, 2.2582, 1, -1, 0.412047,-99) , 
0, 0.492378, 0, 0, 0.474728,-99) , 
5, 0.14284, 0, 0, 0.498271,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0382619);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.495371, 1, 1, 0.510275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474179,-99) , 
3, 1.90699, 0, 0, 0.511508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38838,-99) , 
3, 3.51782, 1, 0, 0.474437,-99) , 
0, 0.493331, 0, 0, 0.504482,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0781177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238245, 1, 1, 0.62413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455807,-99) , 
5, 0.428554, 0, 0, 0.494438,-99) , 
6, 0.00438897, 0, 0, 0.510564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403167,-99) , 
6, 0.0115212, 1, 0, 0.506811,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0533838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.292457, 0, 1, 0.556471,-99) , 
NN(
0, 
0, 
-1, 0.00622709, 1, -1, 0.492772,-99) , 
5, 0.142927, 1, 0, 0.510092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509058,-99) , 
NN(
0, 
0, 
-1, -0.455784, 1, -1, 0.369667,-99) , 
5, 0.143025, 0, 0, 0.439888,-99) , 
0, 0.503804, 1, 0, 0.501357,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0646557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.410408, 0, 1, 0.575293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436233,-99) , 
0, 0.501888, 1, 0, 0.512428,-99) , 
5, 0.238153, 1, 0, 0.532013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554655,-99) , 
NN(
0, 
0, 
-1, -0.428561, 0, -1, 0.478444,-99) , 
1, -0.00398829, 1, 0, 0.483986,-99) , 
2, 0.0137942, 0, 0, 0.499544,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.096832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473173,-99) , 
0, 0.503805, 1, 0, 0.562728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484073,-99) , 
2, -0.0683448, 1, 0, 0.497235,-99) , 
3, 1.45345, 1, 0, 0.524929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427212,-99) , 
0, 0.501896, 1, 0, 0.506428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313215,-99) , 
5, 0.0475378, 0, 0, 0.475737,-99) , 
3, 4.14669, 1, 0, 0.513577,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0755426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499606,-99) , 
5, 0.156357, 0, 0, 0.526641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475515,-99) , 
0, 0.499029, 0, 0, 0.495881,-99) , 
5, 0.618916, 1, 0, 0.510085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444012,-99) , 
2, -0.135199, 0, 0, 0.518224,-99) , 
NN(
0, 
0, 
-1, 0.428403, 0, -1, 0.406915,-99) , 
1, 0.000571851, 0, 0, 0.447575,-99) , 
2, -0.0681922, 0, 0, 0.498396,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0526455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.254959, 0, 1, 0.576388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434613,-99) , 
5, 0.522766, 0, 0, 0.504579,-99) , 
5, 0.410476, 1, 0, 0.513812,-99) , 
NN(
0, 
0, 
-1, 0.0862704, 1, -1, 0.466923,-99) , 
5, 0.0476201, 0, 0, 0.499709,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0565309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.754979, 0, 1, 0.555855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376512,-99) , 
6, 0.00715756, 1, 0, 0.502578,-99) , 
5, -0.142775, 1, 0, 0.515103,-99) , 
NN(
0, 
0, 
-1, 0.619087, 0, -1, 0.456215,-99) , 
2, 0.0725197, 1, 0, 0.505468,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0389087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.17023, 1, 1, 0.567289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472946,-99) , 
3, 3.33606, 1, 0, 0.494507,-99) , 
0, 0.503803, 0, 0, 0.501834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402083,-99) , 
2, -0.199619, 0, 0, 0.497104,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0973229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618753, 1, 1, 0.606816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473042,-99) , 
3, 2.96167, 0, 0, 0.50174,-99) , 
0, 0.49809, 0, 0, 0.548114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485612,-99) , 
5, 0.618963, 1, 0, 0.507417,-99) , 
NN(
0, 
0, 
-1, 0.428667, 0, -1, 0.432493,-99) , 
0, 0.499996, 1, 0, 0.478899,-99) , 
1, 0.00145893, 0, 0, 0.49767,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0560379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.17751, 0, 1, 0.525224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476421,-99) , 
5, 0.931951, 1, 0, 0.512715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467269,-99) , 
5, -0.0566172, 1, 0, 0.498835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399123,-99) , 
3, 4.86644, 1, 0, 0.4891,-99) , 
5, 0.52384, 0, 0, 0.502305,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0646158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504892, 1, 1, 0.58874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417761,-99) , 
0, 0.5014, 1, 0, 0.505959,-99) , 
0, 0.502852, 0, 0, 0.517468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467589,-99) , 
5, 0.333307, 1, 0, 0.482843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419426,-99) , 
0, 0.491425, 0, 0, 0.477418,-99) , 
1, 0.000677622, 0, 0, 0.493276,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0792037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453413,-99) , 
3, 5.94672, 1, 0, 0.534944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438949,-99) , 
3, 0.396724, 1, 0, 0.469932,-99) , 
3, 0.976601, 0, 0, 0.517167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46705,-99) , 
0, 0.499029, 1, 0, 0.491644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440154,-99) , 
1, -0.00183159, 0, 0, 0.482463,-99) , 
5, 0.714272, 1, 0, 0.501083,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.103852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468775,-99) , 
1, 0.00133606, 1, 0, 0.507852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398833,-99) , 
6, 0.00561001, 1, 0, 0.501292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4502,-99) , 
5, -0.567568, 0, 0, 0.47556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351335,-99) , 
1, -0.00226696, 1, 0, 0.390929,-99) , 
5, -0.351378, 1, 0, 0.438649,-99) , 
5, 0.238144, 0, 0, 0.479043,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0728443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619071, 1, 1, 0.570041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481892,-99) , 
0, 0.495599, 1, 0, 0.499772,-99) , 
0, 0.502851, 0, 0, 0.508702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456752,-99) , 
3, 1.01263, 1, 0, 0.484758,-99) , 
NN(
0, 
0, 
-1, 0.500005, 0, -1, 0.411733,-99) , 
3, 1.97247, 1, 0, 0.451399,-99) , 
5, -0.333324, 0, 0, 0.495525,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0753273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487967,-99) , 
0, 0.498722, 0, 0, 0.555285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4692,-99) , 
5, 0.591899, 0, 0, 0.505046,-99) , 
5, 0.0477904, 1, 0, 0.517479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408534,-99) , 
3, 1.23438, 0, 0, 0.466914,-99) , 
NN(
0, 
0, 
-1, 0.492057, 1, -1, 0.419782,-99) , 
3, 3.49091, 1, 0, 0.453019,-99) , 
0, 0.49428, 0, 0, 0.503512,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0886592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478452,-99) , 
0, 0.503079, 1, 0, 0.54087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46526,-99) , 
0, 0.50126, 0, 0, 0.486086,-99) , 
5, 0.523824, 1, 0, 0.50863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458343,-99) , 
0, 0.495096, 0, 0, 0.498665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437848,-99) , 
0, 0.492107, 1, 0, 0.457101,-99) , 
5, 0.809431, 0, 0, 0.470905,-99) , 
0, 0.498091, 0, 0, 0.489428,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0792123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486649,-99) , 
5, 0.809518, 1, 0, 0.515329,-99) , 
1, 0.00374104, 0, 0, 0.524488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459488,-99) , 
5, 0.727845, 1, 0, 0.491747,-99) , 
NN(
0, 
0, 
-1, -0.727899, 1, -1, 0.430287,-99) , 
5, -0.428573, 0, 0, 0.478249,-99) , 
0, 0.498089, 0, 0, 0.500885,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0706737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.521709, 1, 1, 0.58693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486049,-99) , 
5, 0.550936, 1, 0, 0.498262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393401,-99) , 
5, -0.346981, 1, 0, 0.460397,-99) , 
5, 0.142775, 0, 0, 0.48751,-99) , 
1, 0.00314236, 0, 0, 0.499751,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0414719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454973,-99) , 
5, -0.61793, 0, 0, 0.584845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498199,-99) , 
0, 0.489927, 1, 0, 0.501564,-99) , 
NN(
0, 
0, 
-1, 0.505437, 0, -1, 0.431791,-99) , 
0, 0.503804, 1, 0, 0.493247,-99) , 
1, 0.0045751, 0, 0, 0.500128,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0703378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455005,-99) , 
5, 0.915439, 0, 0, 0.489258,-99) , 
5, 0.873119, 1, 0, 0.513306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465777,-99) , 
0, 0.493327, 1, 0, 0.476101,-99) , 
0, 0.504756, 0, 0, 0.482671,-99) , 
5, 0.809509, 0, 0, 0.492993,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0578461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0018008, 0, 1, 0.589344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36783,-99) , 
3, 4.10672, 1, 0, 0.49101,-99) , 
5, 0.0204077, 0, 0, 0.516476,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498074, 1, 1, 0.531707,-99) , 
NN(
0, 
0, 
-1, 0.00311356, 1, -1, 0.478392,-99) , 
2, 0.069381, 0, 0, 0.487093,-99) , 
5, 0.428564, 1, 0, 0.498099,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0511611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.557133,-99) , 
NN(
0, 
0, 
-1, 0.00560956, 1, -1, 0.486536,-99) , 
5, 0.35162, 1, 0, 0.497675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477671,-99) , 
5, -0.685502, 0, 0, 0.493377,-99) , 
NN(
0, 
0, 
-1, -0.358964, 1, -1, 0.412179,-99) , 
5, -0.491979, 1, 0, 0.474208,-99) , 
5, -0.238004, 0, 0, 0.492355,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0783717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0477079, 1, 1, 0.531461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351317,-99) , 
5, 0.111206, 0, 0, 0.475866,-99) , 
0, 0.494282, 0, 0, 0.520191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458761,-99) , 
5, -0.90315, 0, 0, 0.505759,-99) , 
NN(
0, 
0, 
-1, -0.000352534, 1, -1, 0.404838,-99) , 
5, -0.74593, 1, 0, 0.459309,-99) , 
5, -0.333223, 0, 0, 0.506767,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0520541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48764,-99) , 
0, 0.495214, 1, 0, 0.511125,-99) , 
0, 0.499028, 0, 0, 0.539738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436619,-99) , 
6, 0.000507872, 0, 0, 0.49683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35589,-99) , 
6, 0.0106706, 1, 0, 0.491639,-99) , 
5, -0.71414, 1, 0, 0.497463,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0484752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494628,-99) , 
3, 1.84917, 0, 0, 0.51981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404003,-99) , 
6, 0.00311435, 1, 0, 0.489068,-99) , 
5, 0.714273, 1, 0, 0.505139,-99) , 
NN(
0, 
0, 
-1, -7.09668e-05, 1, -1, 0.443322,-99) , 
0, 0.490478, 0, 0, 0.501656,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0569485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.410395, 0, 1, 0.563402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412377,-99) , 
2, -0.0950859, 0, 0, 0.543735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404487,-99) , 
6, 0.00635287, 1, 0, 0.499904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365099,-99) , 
5, 0.109203, 1, 0, 0.427659,-99) , 
5, 0.251766, 0, 0, 0.491442,-99) , 
5, -0.0475447, 1, 0, 0.503872,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0853757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0045751, 0, 1, 0.542735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453917,-99) , 
5, 0.80941, 0, 0, 0.49038,-99) , 
5, 0.428524, 1, 0, 0.509302,-99) , 
NN(
0, 
0, 
-1, 0.618791, 0, -1, 0.429956,-99) , 
2, -0.0710455, 0, 0, 0.494434,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.052662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491942,-99) , 
0, 0.497455, 1, 0, 0.504377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404892,-99) , 
2, -0.0366317, 1, 0, 0.438645,-99) , 
0, 0.492375, 0, 0, 0.496411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352268,-99) , 
1, 0.010139, 1, 0, 0.492563,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0657289);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486325,-99) , 
5, 0.102122, 1, 0, 0.491872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428715,-99) , 
1, 0.00449968, 0, 0, 0.450771,-99) , 
5, -0.04755, 0, 0, 0.481583,-99) , 
1, -0.00649238, 1, 0, 0.485592,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0776185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425536,-99) , 
6, 0.00560904, 1, 0, 0.511317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423046,-99) , 
0, 0.504753, 1, 0, 0.505994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.699468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483284,-99) , 
3, 0.503621, 1, 0, 0.513815,-99) , 
NN(
0, 
0, 
-1, 0.495229, 1, -1, 0.405512,-99) , 
3, 2.07524, 1, 0, 0.461109,-99) , 
5, 0.238092, 0, 0, 0.490446,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0793472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.637285, 1, 1, 0.525205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454961,-99) , 
1, 0.00309911, 0, 0, 0.477697,-99) , 
5, 0.523833, 0, 0, 0.504548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477177,-99) , 
5, -0.81773, 0, 0, 0.518476,-99) , 
NN(
0, 
0, 
-1, 0.0453347, 1, -1, 0.457549,-99) , 
5, -0.523111, 1, 0, 0.467924,-99) , 
0, 0.497138, 0, 0, 0.489177,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0607403);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00649238, 1, 1, 0.53407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532614,-99) , 
NN(
0, 
0, 
-1, 0.945572, 1, -1, 0.473925,-99) , 
2, -0.0677092, 1, 0, 0.484376,-99) , 
5, 0.619037, 1, 0, 0.506881,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0804779);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475108,-99) , 
5, 0.809255, 1, 0, 0.527508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476092,-99) , 
3, 5.84103, 0, 0, 0.48824,-99) , 
3, 2.03044, 1, 0, 0.507195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407461,-99) , 
3, 8.18655, 1, 0, 0.501784,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0687831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.722176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452913,-99) , 
0, 0.497135, 1, 0, 0.48915,-99) , 
5, -0.410476, 0, 0, 0.530665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487841,-99) , 
5, 0.650627, 1, 0, 0.520201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476652,-99) , 
0, 0.499983, 0, 0, 0.485752,-99) , 
1, 0.00191959, 0, 0, 0.492433,-99) , 
5, -0.0476363, 1, 0, 0.501638,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0583738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492521,-99) , 
1, 0.000839817, 0, 0, 0.51174,-99) , 
1, -0.00395442, 1, 0, 0.517998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545271,-99) , 
NN(
0, 
0, 
-1, 0.483018, 0, -1, 0.468182,-99) , 
5, -0.809383, 1, 0, 0.47555,-99) , 
0, 0.499042, 1, 0, 0.499518,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0688044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714376, 1, 1, 0.54296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485992,-99) , 
1, 0.0045751, 0, 0, 0.493718,-99) , 
0, 0.499452, 1, 0, 0.519793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366244,-99) , 
3, 1.90694, 0, 0, 0.431214,-99) , 
5, 0.6185, 0, 0, 0.463003,-99) , 
0, 0.49333, 0, 0, 0.510452,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0727128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0883226, 1, 1, 0.52546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416179,-99) , 
3, 2.14997, 1, 0, 0.472457,-99) , 
5, -0.523681, 0, 0, 0.516781,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471373,-99) , 
0, 0.493012, 1, 0, 0.505684,-99) , 
NN(
0, 
0, 
-1, -0.510156, 1, -1, 0.383552,-99) , 
5, 0.142848, 0, 0, 0.452599,-99) , 
0, 0.494282, 0, 0, 0.502838,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.051829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443774,-99) , 
1, 0.00399025, 1, 0, 0.508827,-99) , 
6, 0.00762048, 0, 0, 0.513137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378105,-99) , 
6, 0.0106706, 1, 0, 0.507096,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0506137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49907,-99) , 
3, 2.51636, 0, 0, 0.530127,-99) , 
NN(
0, 
0, 
-1, 0.410514, 0, -1, 0.482955,-99) , 
5, 0.0476201, 1, 0, 0.494621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3174,-99) , 
1, 0.010139, 1, 0, 0.489499,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0793398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.673334, 0, 1, 0.614529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455254,-99) , 
0, 0.502624, 0, 0, 0.506333,-99) , 
0, 0.497136, 1, 0, 0.548202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473965,-99) , 
3, 1.52384, 0, 0, 0.514538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457772,-99) , 
5, 0.906717, 0, 0, 0.483927,-99) , 
5, 0.836731, 1, 0, 0.501872,-99) , 
5, -0.142731, 1, 0, 0.512076,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0730863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481702,-99) , 
3, 5.19832, 1, 0, 0.594435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470285,-99) , 
0, 0.499992, 1, 0, 0.497501,-99) , 
5, 0.650838, 1, 0, 0.51601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392158,-99) , 
0, 0.493334, 0, 0, 0.482873,-99) , 
NN(
0, 
0, 
-1, 0.501896, 1, -1, 0.420688,-99) , 
2, 0.0305029, 1, 0, 0.464927,-99) , 
5, 0.333413, 0, 0, 0.497014,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.130508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453852,-99) , 
4, 0.999995, 0, 0, 0.53021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351185,-99) , 
4, 0.999905, 0, 0, 0.517854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48285,-99) , 
5, 0.912338, 0, 0, 0.501802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383227,-99) , 
5, 0.963701, 1, 0, 0.473544,-99) , 
5, 0.809494, 1, 0, 0.501543,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0662109);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458198,-99) , 
5, -0.809381, 0, 0, 0.519684,-99) , 
NN(
0, 
0, 
-1, 0.048443, 0, -1, 0.466244,-99) , 
2, 0.0637054, 1, 0, 0.509821,-99) , 
1, -0.00649238, 1, 0, 0.514396,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0672046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499027, 1, 1, 0.625901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495985,-99) , 
1, 0.0045751, 0, 0, 0.513273,-99) , 
5, 0.156498, 0, 0, 0.532949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483352,-99) , 
5, 0.65024, 1, 0, 0.496009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394573,-99) , 
5, 0.510265, 0, 0, 0.48949,-99) , 
5, 0.428614, 1, 0, 0.505051,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0845908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480228,-99) , 
3, 1.47786, 0, 0, 0.517778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35269,-99) , 
5, 0.432107, 0, 0, 0.463682,-99) , 
3, 4.17042, 1, 0, 0.504727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468748,-99) , 
2, 0.127181, 0, 0, 0.508655,-99) , 
NN(
0, 
0, 
-1, 0.490112, 0, -1, 0.452888,-99) , 
2, 0.0606724, 0, 0, 0.46223,-99) , 
0, 0.49809, 0, 0, 0.483678,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0753332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494765, 0, 1, 0.589165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488752,-99) , 
0, 0.498997, 0, 0, 0.511146,-99) , 
0, 0.495551, 1, 0, 0.518169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418298,-99) , 
0, 0.490154, 1, 0, 0.442147,-99) , 
1, -0.00212011, 1, 0, 0.468603,-99) , 
0, 0.494281, 0, 0, 0.507409,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0683557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.29116, 0, 1, 0.544181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436987,-99) , 
5, -0.274477, 0, 0, 0.49594,-99) , 
3, 2.15701, 1, 0, 0.520013,-99) , 
NN(
0, 
0, 
-1, 0.959165, 1, -1, 0.469209,-99) , 
5, 0.904741, 1, 0, 0.509845,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.072866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492224,-99) , 
3, 1.26276, 0, 0, 0.539004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467739,-99) , 
0, 0.49646, 0, 0, 0.49059,-99) , 
5, 0.333408, 1, 0, 0.505559,-99) , 
NN(
0, 
0, 
-1, 4.16621, 1, -1, 0.430999,-99) , 
0, 0.501899, 1, 0, 0.488822,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0772387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.703707, 0, 1, 0.579505,-99) , 
NN(
0, 
0, 
-1, 0.794491, 0, -1, 0.483763,-99) , 
5, 0.746105, 1, 0, 0.501945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498731,-99) , 
5, 0.387771, 0, 0, 0.522192,-99) , 
NN(
0, 
0, 
-1, -0.0748512, 1, -1, 0.436202,-99) , 
1, -0.00100773, 1, 0, 0.467157,-99) , 
5, 0.619037, 0, 0, 0.485176,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0833945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50489, 1, 1, 0.62207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450267,-99) , 
1, 0.000439331, 0, 0, 0.500206,-99) , 
5, 0.142114, 1, 0, 0.544862,-99) , 
NN(
NN(
0, 
0, 
-1, 0.863945, 1, 1, 0.520561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457809,-99) , 
3, 3.6025, 0, 0, 0.476155,-99) , 
5, 0.809529, 0, 0, 0.492555,-99) , 
0, 0.50285, 0, 0, 0.499891,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.038644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493078,-99) , 
3, 5.33732, 0, 0, 0.4988,-99) , 
3, 0.428947, 1, 0, 0.50327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441505,-99) , 
3, 6.87498, 1, 0, 0.498146,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0627259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0476941, 1, 1, 0.566379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459595,-99) , 
5, 0.333376, 0, 0, 0.493261,-99) , 
0, 0.494419, 0, 0, 0.527603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494126,-99) , 
5, -0.142765, 1, 0, 0.506166,-99) , 
NN(
0, 
0, 
-1, 0.499642, 0, -1, 0.440412,-99) , 
1, 0.00374104, 1, 0, 0.498749,-99) , 
0, 0.497139, 1, 0, 0.510454,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0757282);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483017,-99) , 
3, 1.09004, 0, 0, 0.576619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491417,-99) , 
2, -0.0663555, 0, 0, 0.527492,-99) , 
0, 0.493327, 1, 0, 0.534703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472506,-99) , 
3, 7.02461, 1, 0, 0.530232,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0834782);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489791, 1, 1, 0.572984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462874,-99) , 
5, 0.854754, 1, 0, 0.505435,-99) , 
NN(
0, 
0, 
-1, 0.500131, 0, -1, 0.473946,-99) , 
5, 0.618922, 0, 0, 0.490644,-99) , 
0, 0.493328, 1, 0, 0.50212,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0753975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499038, 1, 1, 0.636549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446882,-99) , 
3, 2.34966, 1, 0, 0.513899,-99) , 
5, -0.0566189, 0, 0, 0.537799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491666,-99) , 
5, 0.559479, 1, 0, 0.498363,-99) , 
NN(
0, 
0, 
-1, 0.50094, 1, -1, 0.414463,-99) , 
5, 0.45583, 0, 0, 0.488737,-99) , 
5, 0.23815, 1, 0, 0.504053,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0840806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504346, 1, 1, 0.592138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451673,-99) , 
2, 0.0706287, 1, 0, 0.503144,-99) , 
0, 0.501898, 0, 0, 0.518486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.686032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48584,-99) , 
5, -0.32287, 0, 0, 0.506271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372143,-99) , 
1, -0.00208294, 1, 0, 0.402551,-99) , 
5, -0.111255, 1, 0, 0.469658,-99) , 
5, 0.333151, 0, 0, 0.500187,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0537857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491241, 0, 1, 0.564452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486788,-99) , 
5, 0.809521, 0, 0, 0.501681,-99) , 
0, 0.492376, 1, 0, 0.508006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433459,-99) , 
3, 6.89888, 1, 0, 0.502199,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0647055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490877, 0, 1, 0.596992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494453,-99) , 
0, 0.498087, 0, 0, 0.536903,-99) , 
0, 0.493326, 1, 0, 0.547878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484883,-99) , 
6, 0.00102201, 0, 0, 0.508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37337,-99) , 
6, 0.00715696, 1, 0, 0.502357,-99) , 
5, 0.14284, 1, 0, 0.515469,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0507029);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672109,-99) , 
NN(
NN(
0, 
0, 
-1, -0.618869, 1, 1, 0.515582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434895,-99) , 
3, 3.52181, 0, 0, 0.470013,-99) , 
2, -0.0694614, 0, 0, 0.507315,-99) , 
1, -0.00660347, 1, 0, 0.512901,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0659524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443062,-99) , 
2, 0.0557061, 1, 0, 0.509605,-99) , 
5, 0.224478, 0, 0, 0.523285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472077,-99) , 
5, 0.699345, 0, 0, 0.502554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447316,-99) , 
5, 0.94555, 1, 0, 0.491888,-99) , 
5, 0.428557, 1, 0, 0.503855,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0748459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.22453, 0, 1, 0.561757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370427,-99) , 
5, -0.38734, 1, 0, 0.444991,-99) , 
3, 0.6848, 0, 0, 0.538442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466595,-99) , 
3, 1.61399, 0, 0, 0.562574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444855,-99) , 
5, 0.709786, 0, 0, 0.494583,-99) , 
5, 0.56468, 1, 0, 0.500319,-99) , 
5, 0.428625, 1, 0, 0.513979,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0947809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.850154, 0, 1, 0.599105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399844,-99) , 
0, 0.502536, 0, 0, 0.508045,-99) , 
0, 0.499996, 1, 0, 0.561528,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49333, 0, 1, 0.54202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458653,-99) , 
0, 0.498726, 0, 0, 0.486883,-99) , 
0, 0.494282, 1, 0, 0.496488,-99) , 
5, 0.0476924, 1, 0, 0.512755,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0626487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464195,-99) , 
5, -0.714084, 0, 0, 0.528761,-99) , 
NN(
0, 
0, 
-1, -0.0791068, 0, -1, 0.476188,-99) , 
0, 0.493599, 0, 0, 0.513372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394778,-99) , 
6, 0.00727972, 1, 0, 0.492789,-99) , 
NN(
0, 
0, 
-1, 2.47382, 1, -1, 0.43038,-99) , 
0, 0.500265, 0, 0, 0.47706,-99) , 
0, 0.499041, 1, 0, 0.497966,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0494914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499028, 0, 1, 0.591507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499885,-99) , 
5, -0.909082, 0, 0, 0.55196,-99) , 
NN(
NN(
0, 
0, 
-1, 0.536847, 1, 1, 0.590678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398771,-99) , 
5, -0.0792661, 0, 0, 0.488687,-99) , 
1, 0.00314236, 0, 0, 0.498812,-99) , 
5, -0.618882, 1, 0, 0.506263,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0573221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238319, 1, 1, 0.55182,-99) , 
NN(
0, 
0, 
-1, 0.505573, 1, -1, 0.480585,-99) , 
0, 0.493332, 1, 0, 0.490275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382851,-99) , 
2, -0.19705, 0, 0, 0.484742,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0840695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.301597, 0, 1, 0.576006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441027,-99) , 
0, 0.497772, 1, 0, 0.506379,-99) , 
0, 0.500947, 0, 0, 0.526238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430456,-99) , 
5, 0.492056, 0, 0, 0.510136,-99) , 
NN(
0, 
0, 
-1, 0.523927, 0, -1, 0.455037,-99) , 
0, 0.498092, 1, 0, 0.480838,-99) , 
5, 0.333372, 1, 0, 0.496255,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0557716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.592559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464686,-99) , 
3, 1.3527, 1, 0, 0.532522,-99) , 
3, 1.85117, 0, 0, 0.558884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420711,-99) , 
3, 8.21212, 1, 0, 0.495335,-99) , 
NN(
0, 
0, 
-1, 0.496181, 0, -1, 0.406451,-99) , 
5, 0.129367, 0, 0, 0.487346,-99) , 
5, -0.142765, 1, 0, 0.502782,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0919841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497411, 1, 1, 0.534372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462362,-99) , 
5, 0.591915, 1, 0, 0.474508,-99) , 
5, 0.143025, 1, 0, 0.49021,-99) , 
NN(
0, 
0, 
-1, -0.428658, 1, -1, 0.398011,-99) , 
0, 0.49333, 0, 0, 0.474675,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0481968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492323,-99) , 
6, 0.00724811, 0, 0, 0.498245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334328,-99) , 
6, 0.0126869, 1, 0, 0.492745,-99) , 
NN(
0, 
0, 
-1, -0.142313, 1, -1, 0.430601,-99) , 
0, 0.503806, 1, 0, 0.485503,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0696265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50359, 1, 1, 0.577156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478579,-99) , 
5, -0.238088, 1, 0, 0.490826,-99) , 
0, 0.502307, 0, 0, 0.500384,-99) , 
NN(
0, 
0, 
-1, -0.333139, 0, -1, 0.426782,-99) , 
0, 0.504756, 1, 0, 0.494524,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0578121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.850327, 0, 1, 0.541894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417121,-99) , 
5, 0.365115, 0, 0, 0.495885,-99) , 
5, 0.0475977, 1, 0, 0.506565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483403,-99) , 
0, 0.502639, 1, 0, 0.502821,-99) , 
NN(
0, 
0, 
-1, 0.427508, 0, -1, 0.418459,-99) , 
0, 0.501083, 0, 0, 0.479667,-99) , 
0, 0.499995, 1, 0, 0.497407,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0534204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481609,-99) , 
1, -0.00226696, 0, 0, 0.538063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478049,-99) , 
3, 1.67026, 0, 0, 0.49499,-99) , 
3, 4.17042, 0, 0, 0.503076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411949,-99) , 
2, -0.19705, 0, 0, 0.498246,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.060353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.98789, 0, 1, 0.527283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48195,-99) , 
5, 0.904744, 1, 0, 0.517802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43256,-99) , 
3, 3.26017, 1, 0, 0.491355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400927,-99) , 
0, 0.493645, 1, 0, 0.473297,-99) , 
0, 0.494281, 0, 0, 0.508306,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0471204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714159, 1, 1, 0.525942,-99) , 
NN(
0, 
0, 
-1, -0.714072, 0, -1, 0.486276,-99) , 
0, 0.497818, 0, 0, 0.502281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470916,-99) , 
5, 0.143308, 1, 0, 0.48926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390319,-99) , 
0, 0.502444, 0, 0, 0.471524,-99) , 
0, 0.501899, 1, 0, 0.495793,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0610978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400905,-99) , 
3, 2.81191, 1, 0, 0.481555,-99) , 
5, 0.619361, 0, 0, 0.520481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484494,-99) , 
5, 0.142783, 1, 0, 0.496754,-99) , 
NN(
0, 
0, 
-1, 0.23815, 0, -1, 0.469601,-99) , 
0, 0.499994, 1, 0, 0.48758,-99) , 
2, 0.0725197, 0, 0, 0.492682,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0606868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490289,-99) , 
5, 0.682573, 1, 0, 0.508848,-99) , 
NN(
0, 
0, 
-1, 0.95433, 0, -1, 0.461482,-99) , 
5, 0.0476201, 0, 0, 0.495641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381838,-99) , 
0, 0.489519, 0, 0, 0.491205,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0879328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492236,-99) , 
5, 0.714165, 1, 0, 0.557786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444046,-99) , 
5, 0.619065, 0, 0, 0.487146,-99) , 
6, 0.00274271, 0, 0, 0.506272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34482,-99) , 
6, 0.011521, 1, 0, 0.499972,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0438414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41225,-99) , 
0, 0.490472, 0, 0, 0.499078,-99) , 
5, -0.160899, 1, 0, 0.507327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464306,-99) , 
0, 0.498085, 0, 0, 0.489296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340239,-99) , 
5, -0.637066, 1, 0, 0.463031,-99) , 
5, -0.523693, 0, 0, 0.499449,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0750854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4595,-99) , 
5, -0.428409, 0, 0, 0.518841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448384,-99) , 
2, 0.0155587, 0, 0, 0.477627,-99) , 
0, 0.494286, 0, 0, 0.510529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479651,-99) , 
0, 0.499855, 0, 0, 0.498449,-99) , 
NN(
0, 
0, 
-1, 0.503798, 0, -1, 0.432852,-99) , 
0, 0.501895, 1, 0, 0.481939,-99) , 
1, -0.00100773, 0, 0, 0.500753,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0609926);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494302,-99) , 
0, 0.496321, 0, 0, 0.528543,-99) , 
NN(
0, 
0, 
-1, 0.00109895, 1, -1, 0.486914,-99) , 
5, 0.71426, 1, 0, 0.507803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500366,-99) , 
NN(
0, 
0, 
-1, -0.115878, 1, -1, 0.383256,-99) , 
5, 0.428157, 0, 0, 0.435298,-99) , 
0, 0.502852, 1, 0, 0.495656,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0523031);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00649238, 1, 1, 0.524548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430102,-99) , 
0, 0.489519, 0, 0, 0.521258,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0691681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.637092, 0, 1, 0.600356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487457,-99) , 
5, 0.523729, 1, 0, 0.53943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475079,-99) , 
6, 0.00768053, 0, 0, 0.478927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359948,-99) , 
6, 0.0115212, 1, 0, 0.474272,-99) , 
0, 0.493327, 1, 0, 0.483276,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0594609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470272,-99) , 
3, 0.702976, 0, 0, 0.571286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386806,-99) , 
3, 3.13329, 1, 0, 0.529134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46694,-99) , 
5, 0.883371, 1, 0, 0.492025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404232,-99) , 
5, -0.224334, 0, 0, 0.487793,-99) , 
5, -0.428455, 1, 0, 0.495036,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0646376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428525, 0, 1, 0.565318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414164,-99) , 
0, 0.499995, 0, 0, 0.458259,-99) , 
3, 2.99666, 1, 0, 0.533504,-99) , 
NN(
0, 
0, 
-1, 0.491429, 0, -1, 0.485128,-99) , 
5, 0.333328, 1, 0, 0.501063,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0560474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000241985, 1, 1, 0.555988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358642,-99) , 
5, -0.637128, 1, 0, 0.504182,-99) , 
5, -0.523707, 0, 0, 0.531083,-99) , 
NN(
NN(
0, 
0, 
-1, 0.580246, 1, 1, 0.506528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416755,-99) , 
5, 0.510264, 0, 0, 0.500478,-99) , 
5, 0.428603, 1, 0, 0.511514,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0608181);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.950145, 1, 1, 0.52794,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498153, 1, 1, 0.560254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468495,-99) , 
0, 0.501897, 0, 0, 0.478097,-99) , 
3, 6.17195, 0, 0, 0.484252,-99) , 
5, 0.904745, 0, 0, 0.493128,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0607911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.550982, 0, 1, 0.530795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408777,-99) , 
5, 0.455857, 0, 0, 0.488223,-99) , 
5, 0.047713, 1, 0, 0.499654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386518,-99) , 
3, 8.18935, 1, 0, 0.493603,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0803303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0902742, 1, 1, 0.5596,-99) , 
NN(
0, 
0, 
-1, 0.673396, 0, -1, 0.459282,-99) , 
5, -0.614535, 0, 0, 0.522864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455848,-99) , 
5, 0.909195, 0, 0, 0.473553,-99) , 
2, 0.074051, 0, 0, 0.481383,-99) , 
5, 0.618916, 1, 0, 0.49969,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.072972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494267, 1, 1, 0.518451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43141,-99) , 
5, -0.523632, 1, 0, 0.4549,-99) , 
0, 0.49292, 0, 0, 0.504839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480396,-99) , 
1, -0.00157115, 1, 0, 0.497302,-99) , 
NN(
0, 
0, 
-1, -0.0476273, 1, -1, 0.436405,-99) , 
2, 0.0150866, 0, 0, 0.455985,-99) , 
0, 0.499995, 1, 0, 0.487794,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.053178);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4601,-99) , 
0, 0.492389, 0, 0, 0.537251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488775,-99) , 
1, 0.00482243, 0, 0, 0.49547,-99) , 
1, -0.00216151, 1, 0, 0.503661,-99) , 
1, 0.00761678, 0, 0, 0.507528,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0733384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.52455, 0, 1, 0.513808,-99) , 
NN(
0, 
0, 
-1, 0.499974, 1, -1, 0.479923,-99) , 
5, 0.863929, 1, 0, 0.497442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577138,-99) , 
NN(
0, 
0, 
-1, -0.129249, 1, -1, 0.438446,-99) , 
1, 0.00548355, 0, 0, 0.450742,-99) , 
5, 0.5238, 0, 0, 0.477417,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0640971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00650423, 0, 1, 0.554482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462439,-99) , 
5, 0.619091, 0, 0, 0.489468,-99) , 
6, 0.00274285, 0, 0, 0.506688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357827,-99) , 
6, 0.0115212, 1, 0, 0.501399,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0779837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471841,-99) , 
5, -0.523653, 0, 0, 0.518693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409842,-99) , 
0, 0.491428, 0, 0, 0.508168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482297,-99) , 
5, 0.142858, 1, 0, 0.505921,-99) , 
NN(
0, 
0, 
-1, 0.619296, 0, -1, 0.455686,-99) , 
0, 0.497138, 1, 0, 0.475865,-99) , 
1, -0.00100773, 1, 0, 0.486176,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0507678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00282951, 1, 1, 0.523883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501787,-99) , 
NN(
0, 
0, 
-1, 0.505254, 0, -1, 0.430693,-99) , 
2, -0.00363884, 1, 0, 0.464422,-99) , 
0, 0.503803, 1, 0, 0.517313,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0678686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496847,-99) , 
6, 0.00280651, 1, 0, 0.540826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468439,-99) , 
0, 0.491656, 1, 0, 0.506913,-99) , 
0, 0.49292, 0, 0, 0.52692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482551,-99) , 
5, -0.306014, 0, 0, 0.516434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461578,-99) , 
2, -0.03616, 1, 0, 0.472657,-99) , 
5, 0.619082, 1, 0, 0.491501,-99) , 
0, 0.496185, 1, 0, 0.503301,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0574756);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470028,-99) , 
3, 0.776072, 1, 0, 0.477649,-99) , 
3, 6.89752, 0, 0, 0.481357,-99) , 
0, 0.505709, 0, 0, 0.483526,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0612144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438633,-99) , 
3, 3.47994, 1, 0, 0.515626,-99) , 
5, -0.387743, 0, 0, 0.537439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484832,-99) , 
5, 0.440302, 1, 0, 0.493001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379558,-99) , 
5, 0.0204856, 0, 0, 0.48729,-99) , 
5, -0.142793, 1, 0, 0.498335,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0810558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49741, 0, 1, 0.53421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425937,-99) , 
0, 0.495235, 1, 0, 0.472002,-99) , 
5, -0.428601, 0, 0, 0.522057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477678,-99) , 
0, 0.503124, 1, 0, 0.548705,-99) , 
NN(
0, 
0, 
-1, 0.265395, 0, -1, 0.46414,-99) , 
5, 0.142921, 1, 0, 0.486407,-99) , 
0, 0.499043, 1, 0, 0.506464,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0895662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.98418, 1, 1, 0.559348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436472,-99) , 
5, 0.619079, 0, 0, 0.481524,-99) , 
6, 0.00219418, 0, 0, 0.507983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350612,-99) , 
6, 0.011521, 1, 0, 0.501764,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0662899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490251,-99) , 
5, -0.850335, 0, 0, 0.584205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350791,-99) , 
0, 0.497136, 0, 0, 0.426466,-99) , 
1, 0.00374104, 1, 0, 0.544869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571815,-99) , 
NN(
0, 
0, 
-1, 0.495768, 0, -1, 0.488777,-99) , 
0, 0.504744, 0, 0, 0.493342,-99) , 
5, 0.0476201, 1, 0, 0.506305,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0658984);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473789,-99) , 
3, 1.44073, 0, 0, 0.576449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421502,-99) , 
5, 0.00881638, 0, 0, 0.509139,-99) , 
5, -0.224456, 1, 0, 0.515218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449585,-99) , 
0, 0.499993, 1, 0, 0.496093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343686,-99) , 
5, -0.809534, 1, 0, 0.451178,-99) , 
5, -0.714269, 0, 0, 0.505964,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0759176);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456616,-99) , 
5, 0.714045, 1, 0, 0.508243,-99) , 
NN(
0, 
0, 
-1, 0.491421, 0, -1, 0.471112,-99) , 
6, 0.00269003, 0, 0, 0.481066,-99) , 
NN(
0, 
0, 
-1, -0.142722, 1, -1, 0.357389,-99) , 
6, 0.00941516, 1, 0, 0.474023,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0659249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498461,-99) , 
2, -0.0720295, 1, 0, 0.509741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439011,-99) , 
2, 0.0851925, 0, 0, 0.460093,-99) , 
0, 0.501491, 1, 0, 0.495317,-99) , 
NN(
0, 
0, 
-1, 0.428519, 0, -1, 0.443819,-99) , 
0, 0.493328, 0, 0, 0.487012,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0591956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00191097, 1, 1, 0.556664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488273,-99) , 
2, -0.011413, 1, 0, 0.503436,-99) , 
3, 4.14669, 0, 0, 0.513605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408818,-99) , 
2, -0.206407, 0, 0, 0.508227,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0621105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50095, 0, 1, 0.541529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469964,-99) , 
5, 0.714308, 0, 0, 0.50261,-99) , 
5, 0.142946, 1, 0, 0.513364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467839,-99) , 
0, 0.498094, 1, 0, 0.496016,-99) , 
NN(
0, 
0, 
-1, 2.12571, 1, -1, 0.444012,-99) , 
3, 3.31728, 0, 0, 0.470222,-99) , 
2, 0.0741566, 1, 0, 0.506436,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0747395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484701,-99) , 
0, 0.503526, 1, 0, 0.542921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48937,-99) , 
1, -0.00183159, 1, 0, 0.499287,-99) , 
0, 0.49904, 0, 0, 0.517068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454196,-99) , 
1, 0.00173066, 0, 0, 0.472677,-99) , 
6, 0.00727967, 0, 0, 0.487825,-99) , 
5, 0.428593, 0, 0, 0.505903,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0598172);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504666, 1, 1, 0.575721,-99) , 
NN(
NN(
0, 
0, 
-1, 0.40709, 1, 1, 0.519554,-99) , 
NN(
0, 
0, 
-1, 0.499222, 1, -1, 0.472193,-99) , 
3, 3.26017, 1, 0, 0.505029,-99) , 
0, 0.502852, 0, 0, 0.515293,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0653123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.551026, 1, 1, 0.574471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456432,-99) , 
5, 0.119594, 1, 0, 0.50742,-99) , 
5, 0.4694, 0, 0, 0.524672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566394,-99) , 
NN(
0, 
0, 
-1, 0.813537, 0, -1, 0.484218,-99) , 
5, 0.755248, 1, 0, 0.491723,-99) , 
5, 0.714303, 1, 0, 0.508809,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0712125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0396248, 1, 1, 0.577507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494489,-99) , 
5, 0.619083, 0, 0, 0.522723,-99) , 
5, -0.142732, 1, 0, 0.533478,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492605, 1, 1, 0.524275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450008,-99) , 
3, 1.58302, 0, 0, 0.483093,-99) , 
3, 3.51607, 0, 0, 0.493402,-99) , 
0, 0.497139, 0, 0, 0.516561,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0578971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000190971, 1, 1, 0.531271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490912,-99) , 
0, 0.49428, 0, 0, 0.523701,-99) , 
NN(
NN(
0, 
0, 
-1, 0.63249, 0, 1, 0.517863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449735,-99) , 
0, 0.503939, 0, 0, 0.471263,-99) , 
0, 0.499043, 1, 0, 0.496695,-99) , 
5, 0.714258, 0, 0, 0.509267,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0875335);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434805,-99) , 
2, 0.154326, 1, 0, 0.526543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450652,-99) , 
2, -0.156119, 0, 0, 0.52086,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469026,-99) , 
5, -0.428421, 0, 0, 0.52994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417033,-99) , 
2, -0.0357856, 1, 0, 0.43912,-99) , 
0, 0.503804, 0, 0, 0.472574,-99) , 
0, 0.500947, 1, 0, 0.507045,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0310885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.14669, 0, 1, 0.508525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434603,-99) , 
2, -0.198655, 0, 0, 0.504958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398538,-99) , 
2, 0.200307, 1, 0, 0.499921,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0789128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.354694, 1, 1, 0.594932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469578,-99) , 
0, 0.492376, 1, 0, 0.487328,-99) , 
5, 0.156449, 0, 0, 0.523119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489843,-99) , 
5, 0.818621, 1, 0, 0.506591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469903,-99) , 
0, 0.493512, 1, 0, 0.477965,-99) , 
0, 0.499994, 0, 0, 0.486923,-99) , 
5, 0.619036, 1, 0, 0.502759,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0807752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00956438, 0, 1, 0.57466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46699,-99) , 
2, 0.0149736, 0, 0, 0.501495,-99) , 
3, 1.46169, 0, 0, 0.543063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491805,-99) , 
3, 1.22731, 1, 0, 0.509222,-99) , 
NN(
0, 
0, 
-1, 3.51292, 1, -1, 0.480365,-99) , 
5, 0.854873, 1, 0, 0.493393,-99) , 
5, 0.619028, 1, 0, 0.515144,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0818977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00398829, 1, 1, 0.552804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327743,-99) , 
3, 2.74943, 0, 0, 0.461689,-99) , 
3, 2.30878, 1, 0, 0.513495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452817,-99) , 
0, 0.500939, 0, 0, 0.46372,-99) , 
2, 0.0810016, 0, 0, 0.470406,-99) , 
5, 0.428564, 1, 0, 0.485478,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0599578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457958,-99) , 
1, -0.000937059, 0, 0, 0.516691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462363,-99) , 
2, 0.00564734, 1, 0, 0.485134,-99) , 
5, 0.80947, 0, 0, 0.496746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370397,-99) , 
1, 0.00891594, 1, 0, 0.492655,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0472638);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.71248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480077,-99) , 
5, 0.16429, 0, 0, 0.591838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441757,-99) , 
5, 0.481774, 0, 0, 0.494787,-99) , 
5, 0.319783, 1, 0, 0.502477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410877,-99) , 
3, 3.78443, 1, 0, 0.494761,-99) , 
NN(
0, 
0, 
-1, 0.493011, 1, -1, 0.37874,-99) , 
0, 0.494283, 0, 0, 0.462854,-99) , 
5, 0.0476849, 0, 0, 0.491313,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0494844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473475,-99) , 
5, 0.632556, 1, 0, 0.491277,-99) , 
5, 0.904745, 0, 0, 0.49867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54166,-99) , 
NN(
0, 
0, 
-1, 0.0476435, 0, -1, 0.394985,-99) , 
0, 0.490561, 1, 0, 0.455803,-99) , 
0, 0.492376, 0, 0, 0.493472,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0497286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0930433, 1, 1, 0.516642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452653,-99) , 
5, -0.904741, 0, 0, 0.512642,-99) , 
NN(
0, 
0, 
-1, 0.332203, 0, -1, 0.431104,-99) , 
0, 0.492376, 0, 0, 0.502466,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0642806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502611, 0, 1, 0.584277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457286,-99) , 
2, 0.022376, 0, 0, 0.483978,-99) , 
0, 0.503259, 1, 0, 0.517757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494253,-99) , 
5, 0.863833, 1, 0, 0.504315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453538,-99) , 
3, 1.24075, 1, 0, 0.469387,-99) , 
5, 0.809381, 0, 0, 0.48287,-99) , 
0, 0.501899, 0, 0, 0.489611,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0511891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488783,-99) , 
5, -0.224413, 1, 0, 0.496269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394863,-99) , 
0, 0.498092, 0, 0, 0.452896,-99) , 
5, -0.714159, 0, 0, 0.490786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422287,-99) , 
1, 0.00702288, 1, 0, 0.48788,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0583157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470772,-99) , 
5, -0.714122, 0, 0, 0.550639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484395,-99) , 
1, 0.00192119, 0, 0, 0.496909,-99) , 
1, -0.00375019, 1, 0, 0.501673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384005,-99) , 
1, 0.00815977, 1, 0, 0.497624,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0916726);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403748,-99) , 
6, 0.00576054, 1, 0, 0.52952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442647,-99) , 
0, 0.504756, 1, 0, 0.52439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370804,-99) , 
3, 4.53531, 1, 0, 0.494635,-99) , 
NN(
0, 
0, 
-1, 0.499987, 0, -1, 0.400013,-99) , 
3, 1.068, 0, 0, 0.462223,-99) , 
5, 0.238085, 0, 0, 0.50404,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0448479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.102122, 1, 1, 0.515328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364101,-99) , 
5, -0.80939, 1, 0, 0.462908,-99) , 
5, -0.714139, 0, 0, 0.50827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503257,-99) , 
NN(
0, 
0, 
-1, 1.7262, 0, -1, 0.398583,-99) , 
5, 0.333352, 0, 0, 0.452423,-99) , 
0, 0.49238, 0, 0, 0.501211,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0617566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0470686, 1, 1, 0.536909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464192,-99) , 
5, 0.809515, 0, 0, 0.482634,-99) , 
0, 0.502262, 0, 0, 0.489891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417547,-99) , 
0, 0.505709, 1, 0, 0.486557,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0834376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477352,-99) , 
0, 0.50094, 1, 0, 0.597504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484382,-99) , 
0, 0.49999, 1, 0, 0.509546,-99) , 
5, 0.587319, 1, 0, 0.521351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454148,-99) , 
5, -0.915202, 0, 0, 0.503934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368755,-99) , 
3, 3.3439, 0, 0, 0.406737,-99) , 
5, -0.11105, 1, 0, 0.469325,-99) , 
5, 0.333374, 0, 0, 0.502959,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0874019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0460665, 0, 1, 0.565999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49399,-99) , 
5, -0.872792, 0, 0, 0.548135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494166,-99) , 
5, 0.872793, 1, 0, 0.533451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448577,-99) , 
0, 0.499028, 0, 0, 0.475841,-99) , 
1, -0.000711425, 1, 0, 0.495201,-99) , 
5, 0.333408, 1, 0, 0.511483,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0749664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.233612, 0, 1, 0.521348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406575,-99) , 
0, 0.500934, 0, 0, 0.447094,-99) , 
3, 0.864156, 0, 0, 0.502347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5042,-99) , 
NN(
0, 
0, 
-1, 0.497137, 0, -1, 0.457577,-99) , 
2, -0.0694614, 1, 0, 0.465516,-99) , 
5, 0.619076, 1, 0, 0.481451,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.051537);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489177,-99) , 
5, 0.576731, 1, 0, 0.501035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439238,-99) , 
0, 0.496184, 1, 0, 0.473703,-99) , 
5, -0.269781, 0, 0, 0.496789,-99) , 
5, -0.904741, 1, 0, 0.500811,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0880772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46623,-99) , 
2, -0.03616, 0, 0, 0.499642,-99) , 
0, 0.493337, 1, 0, 0.50977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465553,-99) , 
5, 0.0794424, 1, 0, 0.520822,-99) , 
NN(
0, 
0, 
-1, -0.151956, 1, -1, 0.414074,-99) , 
3, 2.28041, 1, 0, 0.471603,-99) , 
5, 0.619036, 0, 0, 0.491831,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0702654);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463293,-99) , 
0, 0.49428, 0, 0, 0.568034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44709,-99) , 
3, 1.96664, 1, 0, 0.491337,-99) , 
3, 3.63931, 0, 0, 0.506105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457135,-99) , 
5, 0.954643, 1, 0, 0.492635,-99) , 
NN(
0, 
0, 
-1, 0.759626, 1, -1, 0.440928,-99) , 
5, 0.809559, 0, 0, 0.480074,-99) , 
5, 0.714292, 1, 0, 0.493384,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0449991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495701,-99) , 
5, -0.877572, 0, 0, 0.534492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465076,-99) , 
5, 0.93779, 1, 0, 0.504765,-99) , 
NN(
0, 
0, 
-1, -0.46165, 1, -1, 0.443225,-99) , 
5, -0.306085, 0, 0, 0.499255,-99) , 
5, -0.714269, 1, 0, 0.503305,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0730833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.51859, 1, 1, 0.550302,-99) , 
NN(
0, 
0, 
-1, 0.498803, 0, -1, 0.476066,-99) , 
0, 0.498363, 1, 0, 0.495346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463004,-99) , 
5, -0.142739, 1, 0, 0.474792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32578,-99) , 
5, 0.0474397, 0, 0, 0.416455,-99) , 
1, 0.00314079, 1, 0, 0.465164,-99) , 
0, 0.496185, 0, 0, 0.484805,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0687422);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484888,-99) , 
5, 0.383219, 1, 0, 0.490605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441949,-99) , 
0, 0.501899, 0, 0, 0.465353,-99) , 
5, 0.238083, 0, 0, 0.482436,-99) , 
NN(
0, 
0, 
-1, 0.198077, 0, -1, 0.435102,-99) , 
2, 0.140316, 1, 0, 0.478308,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0718534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498101, 0, 1, 0.547374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483181,-99) , 
0, 0.498088, 1, 0, 0.497256,-99) , 
5, 0.600902, 1, 0, 0.506023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567746,-99) , 
NN(
0, 
0, 
-1, 0.494284, 1, -1, 0.431028,-99) , 
1, 0.0045751, 0, 0, 0.446802,-99) , 
5, 0.238092, 0, 0, 0.486955,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0435659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494111,-99) , 
0, 0.49601, 0, 0, 0.511273,-99) , 
0, 0.489791, 1, 0, 0.514141,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504213, 1, 1, 0.508421,-99) , 
NN(
0, 
0, 
-1, 1.96377, 0, -1, 0.415841,-99) , 
5, 0.142959, 0, 0, 0.46961,-99) , 
0, 0.502852, 1, 0, 0.506942,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0687822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4825, 1, 1, 0.583185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448318,-99) , 
0, 0.50283, 1, 0, 0.545705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48414,-99) , 
6, 0.00440525, 0, 0, 0.494555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381394,-99) , 
6, 0.00925132, 1, 0, 0.489948,-99) , 
5, -0.618922, 1, 0, 0.497653,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0245702);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422125,-99) , 
0, 0.489523, 0, 0, 0.501838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390356,-99) , 
6, 0.0115213, 1, 0, 0.498309,-99) , 
5, -0.904741, 1, 0, 0.501261,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.057166);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.891152, 0, 1, 0.547048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461917,-99) , 
0, 0.493339, 0, 0, 0.52691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476813,-99) , 
0, 0.496184, 1, 0, 0.490654,-99) , 
3, 4.14964, 0, 0, 0.499021,-99) , 
5, -0.714271, 1, 0, 0.504734,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0740651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452747,-99) , 
3, 7.02741, 1, 0, 0.528116,-99) , 
NN(
0, 
0, 
-1, 0.555586, 0, -1, 0.482304,-99) , 
0, 0.500948, 1, 0, 0.516108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434869,-99) , 
0, 0.5, 0, 0, 0.462918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357101,-99) , 
5, -0.460232, 1, 0, 0.449431,-99) , 
5, -0.333223, 0, 0, 0.501627,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0475437);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.494507, 0, 1, 0.539333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472632,-99) , 
5, -0.428466, 0, 0, 0.50355,-99) , 
NN(
0, 
0, 
-1, 0.495907, 1, -1, 0.449098,-99) , 
0, 0.496412, 0, 0, 0.49624,-99) , 
0, 0.495232, 1, 0, 0.506881,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0285036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44601,-99) , 
0, 0.503764, 1, 0, 0.496348,-99) , 
0, 0.505981, 0, 0, 0.499456,-99) , 
NN(
0, 
0, 
-1, -0.142006, 0, -1, 0.40228,-99) , 
0, 0.490471, 0, 0, 0.493626,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0722868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485604,-99) , 
3, 2.7772, 1, 0, 0.585806,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.516655,-99) , 
5, 0.659742, 1, 0, 0.524688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456627,-99) , 
3, 2.81655, 0, 0, 0.478165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390473,-99) , 
2, 0.114536, 1, 0, 0.468672,-99) , 
5, 0.523693, 0, 0, 0.501143,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.073511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.24602, 1, 1, 0.581189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471062,-99) , 
5, -0.428304, 0, 0, 0.543886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432742,-99) , 
1, 0.00191959, 1, 0, 0.49863,-99) , 
NN(
0, 
0, 
-1, 0.497561, 0, -1, 0.466121,-99) , 
0, 0.496093, 1, 0, 0.477731,-99) , 
0, 0.503804, 0, 0, 0.484463,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0725827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41764,-99) , 
3, 5.0703, 1, 0, 0.524748,-99) , 
NN(
0, 
0, 
-1, -0.0025907, 0, -1, 0.47547,-99) , 
5, 0.714273, 1, 0, 0.500634,-99) , 
NN(
0, 
0, 
-1, 0.496191, 0, -1, 0.45206,-99) , 
2, -0.0756261, 0, 0, 0.4922,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0818408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492376, 1, 1, 0.530947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445847,-99) , 
0, 0.499996, 0, 0, 0.474352,-99) , 
2, 0.00251575, 0, 0, 0.504443,-99) , 
NN(
0, 
0, 
-1, 0.618791, 0, -1, 0.457545,-99) , 
2, -0.0710455, 0, 0, 0.495867,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0462995);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498543, 1, 1, 0.522609,-99) , 
NN(
0, 
0, 
-1, 0.079259, 1, -1, 0.476379,-99) , 
0, 0.49809, 0, 0, 0.498666,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0505802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48839,-99) , 
0, 0.496186, 0, 0, 0.531699,-99) , 
NN(
0, 
0, 
-1, 0.503806, 1, -1, 0.488794,-99) , 
1, -0.00115071, 1, 0, 0.500593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510089,-99) , 
NN(
0, 
0, 
-1, 1.52273, 0, -1, 0.42455,-99) , 
5, -0.909067, 1, 0, 0.451846,-99) , 
5, -0.523622, 0, 0, 0.492078,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0436259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490426,-99) , 
5, 0.877286, 1, 0, 0.520999,-99) , 
5, 0.142663, 1, 0, 0.536824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496391,-99) , 
5, 0.809512, 0, 0, 0.505143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423451,-99) , 
0, 0.490471, 0, 0, 0.500406,-99) , 
3, 3.41112, 0, 0, 0.510428,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0505207);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492382, 1, 1, 0.518531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449102,-99) , 
5, -0.836528, 1, 0, 0.508015,-99) , 
NN(
0, 
0, 
-1, 0.497142, 0, -1, 0.43107,-99) , 
3, 1.47742, 1, 0, 0.464112,-99) , 
5, -0.618847, 0, 0, 0.50988,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0648453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456088,-99) , 
3, 3.99141, 1, 0, 0.566089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424627,-99) , 
6, 0.00445326, 1, 0, 0.49679,-99) , 
5, 0.564622, 1, 0, 0.506673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424123,-99) , 
3, 3.29238, 1, 0, 0.511642,-99) , 
NN(
0, 
0, 
-1, 0.499047, 1, -1, 0.422649,-99) , 
5, -0.469377, 1, 0, 0.469187,-99) , 
5, 0.238092, 0, 0, 0.494439,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0336331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449037,-99) , 
1, -0.00180357, 0, 0, 0.491647,-99) , 
1, -0.00493876, 1, 0, 0.4961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412463,-99) , 
6, 0.011521, 1, 0, 0.493226,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0741813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.160973, 0, 1, 0.532498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464764,-99) , 
5, 0.931824, 0, 0, 0.477104,-99) , 
5, 0.523742, 1, 0, 0.496853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464706,-99) , 
5, -0.142707, 1, 0, 0.482474,-99) , 
NN(
0, 
0, 
-1, 0.501491, 1, -1, 0.404491,-99) , 
0, 0.502217, 0, 0, 0.457108,-99) , 
0, 0.500947, 1, 0, 0.485688,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0403481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488202,-99) , 
5, -0.814034, 1, 0, 0.490746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436405,-99) , 
5, -0.904748, 0, 0, 0.48727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392695,-99) , 
0, 0.489518, 0, 0, 0.483733,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0693469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481583,-99) , 
0, 0.504893, 1, 0, 0.549787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495635,-99) , 
5, 0.900326, 1, 0, 0.500625,-99) , 
5, 0.809528, 1, 0, 0.531089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478536,-99) , 
5, -0.33254, 0, 0, 0.537895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438675,-99) , 
0, 0.495003, 0, 0, 0.477655,-99) , 
0, 0.491607, 1, 0, 0.487637,-99) , 
0, 0.498091, 0, 0, 0.508797,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0752373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487698,-99) , 
5, 0.657953, 1, 0, 0.500213,-99) , 
5, 0.347002, 1, 0, 0.509312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472998,-99) , 
0, 0.491741, 0, 0, 0.530963,-99) , 
NN(
0, 
0, 
-1, -0.12939, 1, -1, 0.440746,-99) , 
0, 0.494281, 1, 0, 0.461129,-99) , 
5, 0.142856, 0, 0, 0.495063,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0716787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451652,-99) , 
5, 0.55214, 0, 0, 0.501981,-99) , 
5, 0.144957, 1, 0, 0.518094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469743,-99) , 
0, 0.499997, 0, 0, 0.487985,-99) , 
NN(
0, 
0, 
-1, 0.436226, 1, -1, 0.425395,-99) , 
3, 0.60095, 0, 0, 0.478757,-99) , 
3, 3.56572, 0, 0, 0.488634,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0682133);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486,-99) , 
5, 0.0477214, 0, 0, 0.521676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460086,-99) , 
0, 0.495236, 1, 0, 0.481738,-99) , 
2, 0.0349193, 1, 0, 0.51144,-99) , 
2, -0.203507, 1, 0, 0.514661,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0391984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504806, 1, 1, 0.571873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493842,-99) , 
0, 0.497749, 1, 0, 0.508896,-99) , 
0, 0.503985, 0, 0, 0.512556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453213,-99) , 
0, 0.505709, 1, 0, 0.509794,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0754676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483626,-99) , 
5, 0.922877, 1, 0, 0.524416,-99) , 
0, 0.505709, 0, 0, 0.529249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510553,-99) , 
NN(
0, 
0, 
-1, -0.818509, 1, -1, 0.441253,-99) , 
3, 2.60521, 0, 0, 0.45803,-99) , 
5, -0.619033, 0, 0, 0.517801,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0732345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450522,-99) , 
0, 0.503228, 1, 0, 0.49526,-99) , 
0, 0.505799, 0, 0, 0.501324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459263,-99) , 
0, 0.495286, 0, 0, 0.472744,-99) , 
NN(
0, 
0, 
-1, 0.143173, 0, -1, 0.427917,-99) , 
0, 0.496094, 1, 0, 0.456941,-99) , 
0, 0.49809, 0, 0, 0.478516,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0558903);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488732,-99) , 
3, 0.753698, 0, 0, 0.55186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464873,-99) , 
2, 0.0725197, 1, 0, 0.506718,-99) , 
5, -0.428463, 1, 0, 0.513923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453003,-99) , 
0, 0.502216, 0, 0, 0.49894,-99) , 
NN(
0, 
0, 
-1, 0.14349, 1, -1, 0.440331,-99) , 
1, 0.00145893, 1, 0, 0.482394,-99) , 
0, 0.500947, 1, 0, 0.504857,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.065118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000448349, 0, 1, 0.586094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412941,-99) , 
0, 0.496185, 0, 0, 0.482646,-99) , 
3, 1.09293, 1, 0, 0.513598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485524,-99) , 
5, 0.504463, 1, 0, 0.489014,-99) , 
NN(
0, 
0, 
-1, 4.15466, 1, -1, 0.442802,-99) , 
5, 0.387824, 0, 0, 0.479298,-99) , 
5, -0.428389, 1, 0, 0.485394,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0563759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.01381, 1, 1, 0.520643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408803,-99) , 
5, 0.427091, 0, 0, 0.460169,-99) , 
3, 0.683932, 0, 0, 0.509926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469558,-99) , 
0, 0.499048, 1, 0, 0.490633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386676,-99) , 
5, 0.048691, 0, 0, 0.477062,-99) , 
3, 4.14669, 1, 0, 0.502842,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0509215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.751226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493514,-99) , 
5, -0.492118, 0, 0, 0.597356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489922,-99) , 
5, 0.523747, 1, 0, 0.538315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480858,-99) , 
2, -0.0573264, 1, 0, 0.487456,-99) , 
1, 0.00716665, 0, 0, 0.490174,-99) , 
0, 0.502852, 0, 0, 0.497198,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0352862);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496719,-99) , 
5, 0.455861, 1, 0, 0.503038,-99) , 
NN(
0, 
0, 
-1, 0.00237533, 1, -1, 0.469344,-99) , 
5, 0.238184, 0, 0, 0.492706,-99) , 
1, 0.00702288, 0, 0, 0.495299,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0834625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.224505, 0, 1, 0.563493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357489,-99) , 
0, 0.497146, 0, 0, 0.441895,-99) , 
3, 0.651636, 0, 0, 0.538776,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497106, 0, 1, 0.523865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47264,-99) , 
2, -0.0429909, 1, 0, 0.487604,-99) , 
5, 0.891118, 0, 0, 0.50105,-99) , 
5, 0.428599, 1, 0, 0.513861,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0616939);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142877, 1, 1, 0.575329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466782,-99) , 
5, -0.428379, 0, 0, 0.5509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482013,-99) , 
0, 0.495535, 1, 0, 0.491732,-99) , 
0, 0.502215, 0, 0, 0.502936,-99) , 
0, 0.491423, 1, 0, 0.507928,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0713933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495239, 1, 1, 0.568208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44136,-99) , 
5, -0.882066, 0, 0, 0.53244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496008,-99) , 
5, 0.751301, 1, 0, 0.507863,-99) , 
NN(
0, 
0, 
-1, 0.341799, 1, -1, 0.3682,-99) , 
5, 0.419551, 0, 0, 0.496041,-99) , 
5, 0.238092, 1, 0, 0.506552,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0758266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47192,-99) , 
2, 0.152973, 1, 0, 0.531259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439696,-99) , 
3, 2.97415, 1, 0, 0.488952,-99) , 
0, 0.501898, 1, 0, 0.522846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436312,-99) , 
5, 0.334278, 1, 0, 0.456791,-99) , 
0, 0.502851, 0, 0, 0.475451,-99) , 
2, -0.0681922, 0, 0, 0.514296,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.057901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49089,-99) , 
5, 0.809255, 1, 0, 0.527561,-99) , 
0, 0.500361, 1, 0, 0.536456,-99) , 
NN(
NN(
0, 
0, 
-1, 0.401445, 1, 1, 0.51147,-99) , 
NN(
0, 
0, 
-1, 2.75395, 1, -1, 0.4394,-99) , 
5, -0.142725, 0, 0, 0.495482,-99) , 
0, 0.499998, 0, 0, 0.509008,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0684351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49686, 1, 1, 0.527231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427659,-99) , 
5, 0.428637, 1, 0, 0.466018,-99) , 
0, 0.50326, 1, 0, 0.514226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477018,-99) , 
0, 0.495001, 0, 0, 0.491477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39594,-99) , 
0, 0.495779, 1, 0, 0.480355,-99) , 
0, 0.496187, 0, 0, 0.502644,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0698341);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487632,-99) , 
2, 0.0810016, 0, 0, 0.496018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443979,-99) , 
1, -0.00395442, 1, 0, 0.454687,-99) , 
5, 0.619062, 0, 0, 0.477432,-99) , 
0, 0.489519, 1, 0, 0.480664,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0660157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492164, 1, 1, 0.571693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440861,-99) , 
5, 0.238224, 1, 0, 0.497735,-99) , 
0, 0.491105, 0, 0, 0.546943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488392,-99) , 
5, 0.33334, 1, 0, 0.503424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424566,-99) , 
5, 0.52386, 0, 0, 0.471741,-99) , 
2, -0.0376268, 0, 0, 0.495707,-99) , 
0, 0.49428, 1, 0, 0.5056,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0724349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499028, 0, 1, 0.535253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473919,-99) , 
5, 0.945575, 1, 0, 0.518262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48528,-99) , 
5, -0.428056, 1, 0, 0.511092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451039,-99) , 
6, 0.00439398, 0, 0, 0.466628,-99) , 
0, 0.497138, 1, 0, 0.484389,-99) , 
5, 0.714324, 0, 0, 0.50054,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0801);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501082, 1, 1, 0.569561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420568,-99) , 
0, 0.499857, 0, 0, 0.508567,-99) , 
5, 0.714181, 0, 0, 0.536682,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460736,-99) , 
0, 0.496864, 1, 0, 0.571446,-99) , 
NN(
0, 
0, 
-1, 0.00191959, 1, -1, 0.481319,-99) , 
5, -0.23794, 1, 0, 0.497871,-99) , 
0, 0.499041, 0, 0, 0.513759,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0792984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.53619, 1, 1, 0.55848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457038,-99) , 
0, 0.50296, 0, 0, 0.496682,-99) , 
0, 0.500633, 1, 0, 0.526621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587527,-99) , 
NN(
0, 
0, 
-1, -0.550851, 0, -1, 0.480481,-99) , 
5, -0.80952, 1, 0, 0.489551,-99) , 
0, 0.497142, 0, 0, 0.510789,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0557669);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493427,-99) , 
3, 1.54704, 1, 0, 0.557658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491949,-99) , 
0, 0.493333, 1, 0, 0.498544,-99) , 
5, 0.224553, 1, 0, 0.510428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386669,-99) , 
0, 0.499043, 1, 0, 0.458129,-99) , 
5, -0.809381, 0, 0, 0.504972,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0684461);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.922889, 0, 1, 0.526725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425111,-99) , 
0, 0.499048, 1, 0, 0.484327,-99) , 
NN(
0, 
0, 
-1, 0.499046, 0, -1, 0.410383,-99) , 
2, -0.00390275, 0, 0, 0.44817,-99) , 
5, -0.619033, 0, 0, 0.5141,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0441226);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49008,-99) , 
5, -0.0157391, 1, 0, 0.497467,-99) , 
NN(
0, 
0, 
-1, 2.93553, 1, -1, 0.462684,-99) , 
5, -0.333325, 0, 0, 0.490695,-99) , 
0, 0.490471, 1, 0, 0.493652,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0976286);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478023,-99) , 
5, 0.795917, 0, 0, 0.531975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476073,-99) , 
2, -0.0720295, 0, 0, 0.522677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456212,-99) , 
5, -0.393546, 0, 0, 0.495481,-99) , 
NN(
0, 
0, 
-1, 0.37229, 0, -1, 0.446836,-99) , 
5, 0.0612696, 1, 0, 0.46979,-99) , 
5, 0.714283, 0, 0, 0.494659,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0476631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.429113, 1, 1, 0.515001,-99) , 
NN(
0, 
0, 
-1, 0.0476747, 0, -1, 0.478443,-99) , 
3, 3.49091, 1, 0, 0.5047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563312,-99) , 
NN(
0, 
0, 
-1, 2.82142, 0, -1, 0.417722,-99) , 
5, -0.524269, 1, 0, 0.450937,-99) , 
0, 0.503804, 1, 0, 0.498571,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0453081);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0028958, 0, 1, 0.515243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480271,-99) , 
5, -0.567692, 0, 0, 0.50117,-99) , 
NN(
0, 
0, 
-1, 0.501899, 1, -1, 0.450949,-99) , 
5, -0.174688, 1, 0, 0.482919,-99) , 
5, 0.333229, 0, 0, 0.504566,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0598996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499738, 1, 1, 0.528975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412705,-99) , 
0, 0.498287, 1, 0, 0.495034,-99) , 
0, 0.498908, 0, 0, 0.511092,-99) , 
NN(
0, 
0, 
-1, -0.142212, 0, -1, 0.427319,-99) , 
0, 0.49238, 0, 0, 0.500144,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0593194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.26532, 1, 1, 0.532008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433674,-99) , 
5, -0.71411, 0, 0, 0.517291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487952,-99) , 
0, 0.497638, 1, 0, 0.495047,-99) , 
NN(
0, 
0, 
-1, 0.00216788, 1, -1, 0.460882,-99) , 
3, 3.35558, 1, 0, 0.483943,-99) , 
0, 0.497139, 1, 0, 0.497505,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0532349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0475837, 0, 1, 0.569724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493979,-99) , 
2, 0.0676617, 0, 0, 0.500982,-99) , 
5, 0.428507, 1, 0, 0.516813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397934,-99) , 
6, 0.00320315, 0, 0, 0.444443,-99) , 
5, -0.918365, 1, 0, 0.471224,-99) , 
5, -0.714292, 0, 0, 0.510234,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0551411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428976, 1, 1, 0.575702,-99) , 
NN(
NN(
0, 
0, 
-1, -0.161821, 1, 1, 0.516377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372204,-99) , 
0, 0.493139, 1, 0, 0.445169,-99) , 
0, 0.49383, 0, 0, 0.510781,-99) , 
0, 0.492378, 1, 0, 0.51697,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0665471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471288,-99) , 
3, 2.10258, 1, 0, 0.567448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461004,-99) , 
5, 0.49202, 0, 0, 0.523991,-99) , 
5, -0.333241, 1, 0, 0.532604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488462,-99) , 
0, 0.498287, 1, 0, 0.496447,-99) , 
NN(
0, 
0, 
-1, 0.496499, 0, -1, 0.458993,-99) , 
0, 0.49782, 0, 0, 0.488328,-99) , 
0, 0.496188, 1, 0, 0.502594,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0329285);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496178,-99) , 
5, 0.523822, 1, 0, 0.55992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495809,-99) , 
0, 0.505436, 0, 0, 0.49952,-99) , 
0, 0.492378, 1, 0, 0.505563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36122,-99) , 
1, 0.010139, 1, 0, 0.501749,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0595449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809356, 1, 1, 0.53922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456388,-99) , 
5, 0.0476846, 0, 0, 0.49894,-99) , 
1, -0.000603414, 1, 0, 0.514089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375517,-99) , 
6, 0.0127041, 1, 0, 0.510167,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.061414);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.535255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483751,-99) , 
1, -0.000149385, 1, 0, 0.501127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437401,-99) , 
6, 0.00311452, 1, 0, 0.491231,-99) , 
5, 0.71426, 1, 0, 0.513129,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0547827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0028958, 0, 1, 0.511735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454037,-99) , 
2, 0.112253, 1, 0, 0.505003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405402,-99) , 
2, -0.0575376, 0, 0, 0.482599,-99) , 
NN(
0, 
0, 
-1, 0.00654493, 0, -1, 0.378153,-99) , 
5, -0.546474, 1, 0, 0.444139,-99) , 
5, -0.0476164, 0, 0, 0.489504,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0706583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479484,-99) , 
0, 0.50598, 0, 0, 0.486064,-99) , 
5, 0.904756, 0, 0, 0.496022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442525,-99) , 
5, 0.69147, 1, 0, 0.475366,-99) , 
NN(
0, 
0, 
-1, 1.52314, 1, -1, 0.405097,-99) , 
5, -0.619064, 0, 0, 0.462139,-99) , 
0, 0.496185, 0, 0, 0.48457,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0595913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333489, 1, 1, 0.558769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464749,-99) , 
5, 0.524267, 1, 0, 0.500853,-99) , 
0, 0.503168, 1, 0, 0.529004,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481564,-99) , 
5, 0.333293, 1, 0, 0.493341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427389,-99) , 
0, 0.500311, 1, 0, 0.488663,-99) , 
0, 0.500946, 0, 0, 0.498985,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0545742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.569155, 1, 1, 0.518467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413533,-99) , 
0, 0.505437, 0, 0, 0.464558,-99) , 
0, 0.503805, 1, 0, 0.513104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42066,-99) , 
5, -0.90022, 0, 0, 0.446815,-99) , 
5, -0.809505, 0, 0, 0.505467,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0650287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.81798, 0, 1, 0.608416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487738,-99) , 
5, 0.523646, 1, 0, 0.5394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491994,-99) , 
5, 0.768843, 1, 0, 0.506311,-99) , 
NN(
0, 
0, 
-1, 0.50353, 1, -1, 0.462813,-99) , 
5, 0.714291, 0, 0, 0.483819,-99) , 
0, 0.493327, 1, 0, 0.491369,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0627947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.45104, 0, 1, 0.531488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475809,-99) , 
3, 3.51681, 1, 0, 0.49381,-99) , 
5, 0.809546, 1, 0, 0.516119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481984,-99) , 
5, 0.637115, 1, 0, 0.498004,-99) , 
NN(
0, 
0, 
-1, 1.62127, 0, -1, 0.347353,-99) , 
5, 0.0476238, 0, 0, 0.435965,-99) , 
0, 0.493328, 0, 0, 0.502921,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0560769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496999,-99) , 
3, 2.19934, 1, 0, 0.54962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475235,-99) , 
5, 0.637195, 0, 0, 0.506699,-99) , 
5, 0.0476143, 1, 0, 0.515594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495655,-99) , 
0, 0.501267, 1, 0, 0.518972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33696,-99) , 
2, 0.0664624, 1, 0, 0.465069,-99) , 
0, 0.498093, 0, 0, 0.492023,-99) , 
1, -0.00100773, 0, 0, 0.507937,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0751827);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496166,-99) , 
5, 0.714236, 1, 0, 0.518813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402571,-99) , 
1, -0.00516358, 0, 0, 0.510836,-99) , 
NN(
NN(
0, 
0, 
-1, 0.333372, 1, 1, 0.529154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445786,-99) , 
3, 5.22212, 0, 0, 0.459891,-99) , 
2, -0.038041, 1, 0, 0.477003,-99) , 
0, 0.499043, 1, 0, 0.495739,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0759532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.7098, 1, 1, 0.545921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443201,-99) , 
0, 0.503804, 1, 0, 0.473227,-99) , 
5, 0.238213, 0, 0, 0.51685,-99) , 
NN(
NN(
0, 
0, 
-1, -0.428147, 0, 1, 0.560849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44462,-99) , 
5, 0.809354, 0, 0, 0.467085,-99) , 
1, -0.00395442, 1, 0, 0.473042,-99) , 
0, 0.501899, 0, 0, 0.481594,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0532424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00095784, 1, 1, 0.578289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370997,-99) , 
0, 0.503034, 1, 0, 0.503992,-99) , 
0, 0.503805, 0, 0, 0.511737,-99) , 
NN(
0, 
0, 
-1, 0.950102, 0, -1, 0.46626,-99) , 
5, 0.904745, 1, 0, 0.501532,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0565403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00267027, 0, 1, 0.516555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432367,-99) , 
6, 0.00560956, 1, 0, 0.511622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635926,-99) , 
NN(
0, 
0, 
-1, -0.111051, 1, -1, 0.463125,-99) , 
0, 0.504756, 0, 0, 0.478667,-99) , 
5, 0.333366, 0, 0, 0.500704,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0670351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00249087, 0, 1, 0.548903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445838,-99) , 
0, 0.502622, 0, 0, 0.494425,-99) , 
0, 0.501447, 1, 0, 0.510423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471764,-99) , 
0, 0.49772, 0, 0, 0.481545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387567,-99) , 
0, 0.499404, 1, 0, 0.473472,-99) , 
0, 0.499995, 0, 0, 0.485728,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0758302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.81905, 0, 1, 0.548675,-99) , 
NN(
0, 
0, 
-1, 0.857478, 1, -1, 0.475185,-99) , 
5, 0.501211, 1, 0, 0.487519,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.435631,-99) , 
5, -0.0476164, 0, 0, 0.474349,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0864995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451757,-99) , 
4, 0.999978, 0, 0, 0.530176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360514,-99) , 
4, 0.999906, 0, 0, 0.516659,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488037,-99) , 
5, 0.952471, 0, 0, 0.504199,-99) , 
NN(
0, 
0, 
-1, 0.86173, 1, -1, 0.454604,-99) , 
5, 0.909268, 0, 0, 0.480432,-99) , 
5, 0.80949, 1, 0, 0.502335,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0813857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.82727, 0, 1, 0.552369,-99) , 
NN(
0, 
0, 
-1, 0.909302, 0, -1, 0.488153,-99) , 
5, 0.86395, 1, 0, 0.519613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460813,-99) , 
0, 0.492376, 1, 0, 0.476368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357527,-99) , 
1, -0.00766372, 0, 0, 0.466313,-99) , 
5, 0.523836, 0, 0, 0.497802,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0434452);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482301,-99) , 
0, 0.504396, 1, 0, 0.55449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49701,-99) , 
5, 0.904716, 0, 0, 0.505915,-99) , 
0, 0.502262, 0, 0, 0.512646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407466,-99) , 
0, 0.505709, 1, 0, 0.507448,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0749132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.591767, 0, 1, 0.548996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413075,-99) , 
2, 0.00902195, 0, 0, 0.469671,-99) , 
0, 0.495232, 0, 0, 0.523512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475909,-99) , 
1, 0.0028958, 0, 0, 0.483709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398663,-99) , 
5, 0.0748501, 0, 0, 0.478546,-99) , 
5, -0.142852, 1, 0, 0.487925,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0571762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475693,-99) , 
0, 0.502254, 1, 0, 0.537052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48626,-99) , 
3, 0.421502, 1, 0, 0.494481,-99) , 
3, 3.41112, 0, 0, 0.506343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45301,-99) , 
0, 0.505706, 1, 0, 0.504111,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0504293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492363,-99) , 
3, 1.01536, 1, 0, 0.506148,-99) , 
3, 0.432189, 1, 0, 0.513763,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498651,-99) , 
5, 0.864205, 1, 0, 0.505295,-99) , 
NN(
0, 
0, 
-1, -0.100639, 1, -1, 0.447438,-99) , 
5, 0.714604, 0, 0, 0.4803,-99) , 
3, 3.49386, 1, 0, 0.504,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0591407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490654,-99) , 
0, 0.500946, 1, 0, 0.515088,-99) , 
5, -0.550825, 1, 0, 0.51847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454607,-99) , 
0, 0.497813, 0, 0, 0.492404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409162,-99) , 
0, 0.501893, 1, 0, 0.467823,-99) , 
5, -0.714078, 0, 0, 0.511236,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.032158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501355, 1, 1, 0.570978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48938,-99) , 
0, 0.505163, 0, 0, 0.505668,-99) , 
0, 0.501899, 1, 0, 0.520289,-99) , 
NN(
0, 
0, 
-1, 0.500311, 1, -1, 0.489653,-99) , 
0, 0.500946, 0, 0, 0.49767,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0425931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489747, 0, 1, 0.580653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492761,-99) , 
5, 0.523743, 0, 0, 0.509496,-99) , 
0, 0.491061, 1, 0, 0.513668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430277,-99) , 
0, 0.505709, 1, 0, 0.509736,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0424202);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491061, 1, 1, 0.519397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441945,-99) , 
0, 0.505709, 1, 0, 0.515789,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0484792);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490342, 0, 1, 0.567929,-99) , 
NN(
NN(
0, 
0, 
-1, 0.618912, 1, 1, 0.539402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481287,-99) , 
5, 0.714292, 0, 0, 0.497395,-99) , 
2, 0.0725197, 0, 0, 0.503345,-99) , 
0, 0.492382, 1, 0, 0.509672,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0834195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.401348, 0, 1, 0.627133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431762,-99) , 
3, 3.17785, 1, 0, 0.523126,-99) , 
0, 0.49809, 0, 0, 0.571161,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499974, 0, 1, 0.547414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481466,-99) , 
0, 0.499042, 1, 0, 0.504744,-99) , 
2, 0.0745067, 0, 0, 0.511774,-99) , 
5, 0.142832, 1, 0, 0.527126,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0581049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496665, 1, 1, 0.526923,-99) , 
NN(
0, 
0, 
-1, 0.506266, 1, -1, 0.470276,-99) , 
0, 0.505255, 1, 0, 0.522873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487433,-99) , 
5, -0.142246, 1, 0, 0.502491,-99) , 
NN(
0, 
0, 
-1, -0.000952422, 0, -1, 0.431321,-99) , 
0, 0.494144, 1, 0, 0.482664,-99) , 
0, 0.495233, 0, 0, 0.512259,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0714273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496819, 1, 1, 0.576072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458923,-99) , 
0, 0.491738, 1, 0, 0.497267,-99) , 
0, 0.494279, 0, 0, 0.55397,-99) , 
NN(
NN(
0, 
0, 
-1, 0.428629, 1, 1, 0.544751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459174,-99) , 
5, 0.238173, 0, 0, 0.497858,-99) , 
0, 0.500948, 0, 0, 0.509397,-99) , 
2, 0.0435751, 0, 0, 0.518616,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0920396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523747, 1, 1, 0.538438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451591,-99) , 
1, 0.00145893, 0, 0, 0.476234,-99) , 
0, 0.499041, 1, 0, 0.511654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424378,-99) , 
6, 0.00255326, 0, 0, 0.4492,-99) , 
0, 0.502843, 0, 0, 0.467147,-99) , 
2, -0.0485425, 0, 0, 0.501211,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0877908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.27542, 1, 1, 0.572638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466697,-99) , 
0, 0.495233, 1, 0, 0.493604,-99) , 
5, -0.183601, 0, 0, 0.521375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53839,-99) , 
NN(
0, 
0, 
-1, 0.501077, 0, -1, 0.461221,-99) , 
0, 0.492379, 1, 0, 0.46821,-99) , 
5, 0.428593, 1, 0, 0.486263,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0631483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56975, 0, 1, 0.628007,-99) , 
NN(
0, 
0, 
-1, 1.59055, 0, -1, 0.473921,-99) , 
0, 0.498089, 0, 0, 0.543627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477548,-99) , 
5, 0.755081, 1, 0, 0.496706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436002,-99) , 
2, 0.0150866, 0, 0, 0.461411,-99) , 
0, 0.501902, 1, 0, 0.489184,-99) , 
5, -0.71427, 1, 0, 0.495828,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0564417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496189, 1, 1, 0.554193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444164,-99) , 
5, -0.4284, 0, 0, 0.532694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454627,-99) , 
0, 0.501891, 1, 0, 0.553465,-99) , 
NN(
0, 
0, 
-1, 0.229127, 0, -1, 0.487088,-99) , 
5, -0.618852, 1, 0, 0.496535,-99) , 
2, -0.0648558, 1, 0, 0.502852,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0557278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.19518, 0, 1, 0.584677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494673,-99) , 
5, -0.863833, 0, 0, 0.551596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495549,-99) , 
0, 0.501574, 1, 0, 0.512718,-99) , 
NN(
0, 
0, 
-1, -0.000271309, 1, -1, 0.479465,-99) , 
0, 0.500939, 0, 0, 0.487525,-99) , 
5, -0.0476158, 1, 0, 0.501046,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0738681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467652,-99) , 
3, 1.00148, 0, 0, 0.548263,-99) , 
0, 0.496196, 1, 0, 0.580502,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500948, 0, 1, 0.520844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408549,-99) , 
5, 0.709723, 0, 0, 0.468648,-99) , 
2, 0.0725197, 1, 0, 0.511825,-99) , 
5, -0.523693, 1, 0, 0.522138,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0570909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456278,-99) , 
5, -0.67138, 1, 0, 0.527682,-99) , 
5, -0.469274, 0, 0, 0.547837,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498548, 1, 1, 0.512246,-99) , 
NN(
0, 
0, 
-1, 0.497096, 1, -1, 0.473283,-99) , 
0, 0.498094, 0, 0, 0.492598,-99) , 
5, -0.142792, 1, 0, 0.503701,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0828233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142959, 1, 1, 0.529288,-99) , 
NN(
0, 
0, 
-1, 0.505982, 1, -1, 0.409453,-99) , 
0, 0.504757, 1, 0, 0.52037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466466,-99) , 
1, -0.00264902, 1, 0, 0.491938,-99) , 
NN(
0, 
0, 
-1, 0.498086, 0, -1, 0.383322,-99) , 
1, 0.00262414, 1, 0, 0.471021,-99) , 
2, -0.0376268, 0, 0, 0.507224,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0547028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496052, 1, 1, 0.514113,-99) , 
NN(
0, 
0, 
-1, 0.489792, 0, -1, 0.437038,-99) , 
0, 0.491426, 0, 0, 0.508365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412166,-99) , 
5, 0.428737, 1, 0, 0.452006,-99) , 
2, 0.0711236, 1, 0, 0.499127,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0603576);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471469,-99) , 
0, 0.492456, 1, 0, 0.476111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413274,-99) , 
0, 0.489337, 0, 0, 0.474433,-99) , 
0, 0.505709, 0, 0, 0.476975,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0704268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 0, 1, 0.613294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485527,-99) , 
0, 0.504755, 0, 0, 0.489803,-99) , 
5, 0.111135, 1, 0, 0.498494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44223,-99) , 
5, -0.746024, 1, 0, 0.512205,-99) , 
NN(
0, 
0, 
-1, 1.12499, 0, -1, 0.403248,-99) , 
2, 0.00902195, 1, 0, 0.463109,-99) , 
5, -0.333324, 0, 0, 0.491065,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0264004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494711, 1, 1, 0.540021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498659,-99) , 
5, -0.714269, 1, 0, 0.504097,-99) , 
2, -0.0789624, 1, 0, 0.509259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432657,-99) , 
0, 0.489522, 0, 0, 0.506642,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0572899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500209, 0, 1, 0.54802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467427,-99) , 
5, -0.333272, 0, 0, 0.508453,-99) , 
0, 0.501492, 1, 0, 0.525364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48542,-99) , 
2, -0.0513959, 1, 0, 0.494144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419339,-99) , 
0, 0.498499, 1, 0, 0.48686,-99) , 
0, 0.499044, 0, 0, 0.502969,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0464697);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.618964, 1, 1, 0.564447,-99) , 
NN(
NN(
0, 
0, 
-1, 0.136277, 1, 1, 0.544526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444179,-99) , 
0, 0.492695, 0, 0, 0.496014,-99) , 
2, 0.069381, 0, 0, 0.503274,-99) , 
0, 0.502852, 0, 0, 0.511885,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.074497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489066,-99) , 
5, -0.714269, 0, 0, 0.529672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434739,-99) , 
2, -0.123776, 1, 0, 0.482672,-99) , 
2, -0.0572402, 0, 0, 0.519922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440741,-99) , 
2, 0.00642165, 1, 0, 0.536171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472194,-99) , 
2, 0.0949993, 0, 0, 0.480353,-99) , 
0, 0.504892, 0, 0, 0.487022,-99) , 
0, 0.49809, 1, 0, 0.502932,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0752804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498973,-99) , 
0, 0.49509, 0, 0, 0.522899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484978,-99) , 
0, 0.500797, 1, 0, 0.496686,-99) , 
0, 0.498077, 1, 0, 0.510121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448379,-99) , 
4, 0.999995, 0, 0, 0.495599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346962,-99) , 
4, 0.999905, 0, 0, 0.484261,-99) , 
5, 0.809513, 0, 0, 0.493867,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0606461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.705119, 1, 1, 0.574102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46662,-99) , 
5, -0.238009, 0, 0, 0.545858,-99) , 
NN(
NN(
0, 
0, 
-1, 1.72696, 0, 1, 0.557565,-99) , 
NN(
0, 
0, 
-1, 0.00687244, 1, -1, 0.487712,-99) , 
5, 0.0477203, 1, 0, 0.502903,-99) , 
0, 0.494282, 1, 0, 0.511387,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0726669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.573723, 1, 1, 0.572733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469787,-99) , 
5, 0.915789, 1, 0, 0.499182,-99) , 
5, 0.646336, 1, 0, 0.509676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463741,-99) , 
0, 0.501901, 1, 0, 0.542017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447761,-99) , 
1, -0.00444059, 1, 0, 0.455967,-99) , 
2, -0.0413451, 1, 0, 0.47558,-99) , 
5, 0.428564, 0, 0, 0.497644,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0885439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0119212, 0, 1, 0.54845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474668,-99) , 
1, 0.000225345, 1, 0, 0.506643,-99) , 
0, 0.499042, 0, 0, 0.523215,-99) , 
NN(
NN(
0, 
0, 
-1, -0.449689, 0, 1, 0.536375,-99) , 
NN(
0, 
0, 
-1, -0.0566145, 0, -1, 0.399653,-99) , 
5, -0.174525, 1, 0, 0.489627,-99) , 
5, 0.238144, 0, 0, 0.512988,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0403833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.376276, 0, 1, 0.517793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446055,-99) , 
6, 0.00311435, 1, 0, 0.493172,-99) , 
5, 0.655241, 1, 0, 0.50268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364153,-99) , 
2, 0.0116824, 1, 0, 0.454282,-99) , 
5, -0.809301, 0, 0, 0.497304,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0259507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434164,-99) , 
0, 0.506232, 1, 0, 0.498998,-99) , 
0, 0.493109, 1, 0, 0.502285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549583,-99) , 
NN(
0, 
0, 
-1, -0.0475739, 0, -1, 0.434854,-99) , 
0, 0.489436, 1, 0, 0.459877,-99) , 
0, 0.492382, 0, 0, 0.497424,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0577936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.18653, 0, 1, 0.528609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475462,-99) , 
2, -0.0189299, 1, 0, 0.48978,-99) , 
0, 0.497135, 1, 0, 0.505277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423687,-99) , 
3, 8.18935, 1, 0, 0.500415,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0707992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.81861, 1, 1, 0.541034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353301,-99) , 
5, -0.0567471, 1, 0, 0.487906,-99) , 
5, 0.238207, 0, 0, 0.522087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477123,-99) , 
2, -0.0681922, 1, 0, 0.483799,-99) , 
NN(
0, 
0, 
-1, 0.489942, 1, -1, 0.433467,-99) , 
0, 0.492058, 0, 0, 0.47665,-99) , 
0, 0.500947, 0, 0, 0.488809,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0472547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484086,-99) , 
2, -0.00953876, 1, 0, 0.493333,-99) , 
NN(
0, 
0, 
-1, 0.499984, 1, -1, 0.43763,-99) , 
2, -0.116157, 0, 0, 0.486548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409896,-99) , 
2, 0.204126, 1, 0, 0.48287,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0297031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49883,-99) , 
5, 0.238854, 1, 0, 0.54133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498451,-99) , 
3, 6.87778, 0, 0, 0.502058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397462,-99) , 
0, 0.498357, 0, 0, 0.45837,-99) , 
2, -0.0724437, 0, 0, 0.494917,-99) , 
0, 0.491424, 1, 0, 0.498195,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0731142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478396,-99) , 
5, -0.845588, 0, 0, 0.549176,-99) , 
NN(
0, 
0, 
-1, 1.85381, 0, -1, 0.445114,-99) , 
0, 0.503804, 1, 0, 0.531628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480997,-99) , 
0, 0.497136, 0, 0, 0.496835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409872,-99) , 
5, 0.691703, 0, 0, 0.486513,-99) , 
5, 0.619079, 1, 0, 0.505001,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0574247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00690852, 0, 1, 0.595568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473198,-99) , 
0, 0.505573, 1, 0, 0.554659,-99) , 
NN(
NN(
0, 
0, 
-1, 0.496599, 0, 1, 0.537972,-99) , 
NN(
0, 
0, 
-1, 0.00634381, 1, -1, 0.493328,-99) , 
0, 0.497049, 1, 0, 0.514151,-99) , 
0, 0.502852, 0, 0, 0.520001,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0759354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486062,-99) , 
2, -0.0157079, 0, 0, 0.518876,-99) , 
5, -0.600806, 0, 0, 0.548574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478225,-99) , 
5, 0.191551, 1, 0, 0.48496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301348,-99) , 
5, -0.0611489, 0, 0, 0.476619,-99) , 
5, -0.238008, 1, 0, 0.489627,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0612632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69377, 1, 1, 0.616029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462151,-99) , 
3, 2.06181, 1, 0, 0.508697,-99) , 
5, -0.0475605, 0, 0, 0.534528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496351,-99) , 
5, 0.563147, 1, 0, 0.504601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412727,-99) , 
5, 0.460359, 0, 0, 0.498348,-99) , 
5, 0.333378, 1, 0, 0.509429,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0801235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0476772, 1, 1, 0.558443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45892,-99) , 
5, 0.0476631, 0, 0, 0.523255,-99) , 
0, 0.501492, 1, 0, 0.53869,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494009,-99) , 
0, 0.493318, 1, 0, 0.504752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395504,-99) , 
3, 3.37024, 0, 0, 0.446082,-99) , 
0, 0.49197, 0, 0, 0.494667,-99) , 
0, 0.499043, 0, 0, 0.512508,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0802931);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.0810016, 0, 1, 0.540061,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0639177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.48237, 1, 1, 0.545574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487909,-99) , 
0, 0.498073, 1, 0, 0.508985,-99) , 
5, 0.8639, 1, 0, 0.528003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632284,-99) , 
NN(
0, 
0, 
-1, 0.292519, 1, -1, 0.481505,-99) , 
0, 0.491424, 1, 0, 0.49462,-99) , 
5, 0.428573, 0, 0, 0.516548,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.067856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.850452, 1, 1, 0.543263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485511,-99) , 
5, 0.823161, 1, 0, 0.501367,-99) , 
0, 0.497134, 1, 0, 0.518742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459456,-99) , 
2, -0.00956438, 0, 0, 0.493899,-99) , 
NN(
0, 
0, 
-1, 0.491695, 1, -1, 0.427502,-99) , 
0, 0.493328, 0, 0, 0.481541,-99) , 
5, 0.714273, 0, 0, 0.49938,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.043747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505074, 1, 1, 0.581768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499077,-99) , 
5, 0.904609, 0, 0, 0.509479,-99) , 
0, 0.503805, 0, 0, 0.516277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399977,-99) , 
2, 0.199652, 1, 0, 0.510234,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0559041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.346901, 0, 1, 0.547894,-99) , 
NN(
0, 
0, 
-1, 0.306177, 0, -1, 0.491473,-99) , 
5, 0.142914, 1, 0, 0.505686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451998,-99) , 
0, 0.492929, 0, 0, 0.517493,-99) , 
NN(
0, 
0, 
-1, 0.498912, 0, -1, 0.435464,-99) , 
0, 0.496192, 1, 0, 0.46179,-99) , 
2, -0.0573264, 0, 0, 0.496473,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0692468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4806,-99) , 
3, 1.10844, 0, 0, 0.514396,-99) , 
3, 5.36553, 0, 0, 0.519768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429638,-99) , 
3, 6.60657, 1, 0, 0.511764,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.039524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.618912, 1, 1, 0.519537,-99) , 
NN(
0, 
0, 
-1, -0.00649238, 0, -1, 0.486635,-99) , 
0, 0.499042, 0, 0, 0.498573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399066,-99) , 
5, 0.142611, 1, 0, 0.446257,-99) , 
0, 0.504756, 1, 0, 0.494692,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0668154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428645, 1, 1, 0.549926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48081,-99) , 
5, 0.714303, 0, 0, 0.503245,-99) , 
0, 0.500948, 0, 0, 0.514213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467179,-99) , 
2, -0.132929, 0, 0, 0.50999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422644,-99) , 
0, 0.501901, 1, 0, 0.484298,-99) , 
2, -0.066125, 0, 0, 0.508856,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0795626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.767, 1, 1, 0.554878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495282,-99) , 
0, 0.497408, 0, 0, 0.507501,-99) , 
5, 0.714186, 1, 0, 0.529654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450615,-99) , 
0, 0.502366, 1, 0, 0.481506,-99) , 
NN(
0, 
0, 
-1, 2.16782, 0, -1, 0.423646,-99) , 
0, 0.500267, 0, 0, 0.467048,-99) , 
0, 0.499042, 1, 0, 0.501984,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.059067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.591799, 1, 1, 0.569851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493349,-99) , 
0, 0.498727, 1, 0, 0.506329,-99) , 
0, 0.494285, 1, 0, 0.517813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439877,-99) , 
0, 0.49619, 0, 0, 0.498487,-99) , 
NN(
0, 
0, 
-1, 1.32556, 1, -1, 0.454607,-99) , 
3, 1.70679, 0, 0, 0.476341,-99) , 
5, 0.0476845, 0, 0, 0.507268,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0542583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.344969, 0, 1, 0.600179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494911,-99) , 
0, 0.495235, 1, 0, 0.507203,-99) , 
5, 0.469425, 1, 0, 0.51694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484663,-99) , 
2, -0.00956438, 1, 0, 0.500447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383116,-99) , 
5, -0.0203783, 1, 0, 0.481493,-99) , 
5, 0.142914, 0, 0, 0.506891,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0617879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473244,-99) , 
0, 0.491423, 0, 0, 0.521231,-99) , 
2, 0.131374, 0, 0, 0.526618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457338,-99) , 
2, 0.211709, 1, 0, 0.523436,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0579775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.682568, 1, 1, 0.538082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421551,-99) , 
0, 0.501265, 0, 0, 0.471047,-99) , 
5, 0.0477284, 0, 0, 0.521057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565233,-99) , 
NN(
0, 
0, 
-1, -0.550848, 0, -1, 0.485332,-99) , 
5, -0.809518, 1, 0, 0.492804,-99) , 
0, 0.49809, 0, 0, 0.506855,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0667312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0611216, 1, 1, 0.526582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37748,-99) , 
5, -0.822933, 1, 0, 0.481531,-99) , 
5, -0.714108, 0, 0, 0.520316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488309,-99) , 
0, 0.495376, 1, 0, 0.499469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384381,-99) , 
0, 0.493334, 0, 0, 0.474917,-99) , 
2, -0.0337783, 0, 0, 0.507949,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0624297);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.000177528, 0, 1, 0.576277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477629,-99) , 
5, -0.319725, 0, 0, 0.517607,-99) , 
NN(
0, 
0, 
-1, 0.49836, 1, -1, 0.480083,-99) , 
5, 0.428557, 1, 0, 0.491852,-99) , 
0, 0.491424, 1, 0, 0.497948,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0518088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494209,-99) , 
0, 0.498986, 1, 0, 0.509624,-99) , 
0, 0.505981, 0, 0, 0.513064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475778,-99) , 
1, -0.00182892, 1, 0, 0.488451,-99) , 
NN(
0, 
0, 
-1, -0.523356, 0, -1, 0.425681,-99) , 
6, 0.00426799, 1, 0, 0.477728,-99) , 
0, 0.496188, 0, 0, 0.501002,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0482591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.2308, 0, 1, 0.603404,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.48776,-99) , 
3, 2.0594, 1, 0, 0.551162,-99) , 
NN(
NN(
0, 
0, 
-1, 0.503794, 0, 1, 0.506689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401257,-99) , 
0, 0.499044, 1, 0, 0.458595,-99) , 
5, 0.383302, 0, 0, 0.49591,-99) , 
5, -0.61891, 1, 0, 0.503568,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0632972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431481,-99) , 
3, 0.713273, 0, 0, 0.534343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475815,-99) , 
1, -0.000211, 1, 0, 0.492933,-99) , 
5, 0.347022, 1, 0, 0.499959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478922,-99) , 
0, 0.502126, 0, 0, 0.504502,-99) , 
NN(
0, 
0, 
-1, 1.98921, 0, -1, 0.428304,-99) , 
0, 0.497137, 0, 0, 0.469021,-99) , 
5, -0.523622, 0, 0, 0.494802,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.04094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0967093, 0, 1, 0.532787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555018,-99) , 
NN(
0, 
0, 
-1, -0.29236, 0, -1, 0.492478,-99) , 
5, -0.809297, 1, 0, 0.497945,-99) , 
0, 0.499041, 0, 0, 0.512442,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0623142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.782311, 1, 1, 0.520533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48674,-99) , 
0, 0.495236, 0, 0, 0.511918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450118,-99) , 
5, -0.428474, 1, 0, 0.471085,-99) , 
1, -0.00649238, 1, 0, 0.478723,-99) , 
5, 0.714283, 0, 0, 0.495179,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0518379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493465, 1, 1, 0.523494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480745,-99) , 
0, 0.505669, 0, 0, 0.488626,-99) , 
0, 0.49945, 1, 0, 0.509209,-99) , 
NN(
0, 
0, 
-1, 0.48938, 1, -1, 0.431073,-99) , 
0, 0.490471, 0, 0, 0.50503,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0634666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470097,-99) , 
0, 0.496188, 0, 0, 0.513965,-99) , 
3, 0.709964, 1, 0, 0.538231,-99) , 
NN(
NN(
0, 
0, 
-1, 0.537568, 1, 1, 0.511321,-99) , 
NN(
0, 
0, 
-1, 0.503486, 0, -1, 0.458217,-99) , 
0, 0.500946, 1, 0, 0.497639,-99) , 
5, 0.428603, 1, 0, 0.510581,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0668909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.410484, 1, 1, 0.566141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486786,-99) , 
0, 0.503486, 0, 0, 0.494605,-99) , 
0, 0.495237, 1, 0, 0.511156,-99) , 
NN(
0, 
0, 
-1, -0.491891, 1, -1, 0.450123,-99) , 
5, -0.23794, 0, 0, 0.498068,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0434418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00770831, 0, 1, 0.593659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453717,-99) , 
5, 0.372338, 0, 0, 0.494961,-99) , 
5, -0.464656, 1, 0, 0.501482,-99) , 
NN(
0, 
0, 
-1, 0.00138458, 1, -1, 0.448774,-99) , 
5, -0.809297, 0, 0, 0.495717,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.04023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714268, 1, 1, 0.55774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434364,-99) , 
1, 0.00290389, 1, 0, 0.535912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497039,-99) , 
6, 0.00925174, 0, 0, 0.499367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38927,-99) , 
0, 0.494916, 0, 0, 0.493126,-99) , 
0, 0.494281, 1, 0, 0.501169,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0681348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505648, 1, 1, 0.586158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466613,-99) , 
0, 0.503108, 1, 0, 0.537082,-99) , 
0, 0.504439, 0, 0, 0.550743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498598,-99) , 
5, 0.156526, 0, 0, 0.528933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460743,-99) , 
5, 0.800485, 0, 0, 0.493894,-99) , 
5, 0.619077, 1, 0, 0.507506,-99) , 
0, 0.500947, 0, 0, 0.518414,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0839973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465615,-99) , 
3, 2.15855, 1, 0, 0.539282,-99) , 
3, 2.79194, 0, 0, 0.557522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48156,-99) , 
6, 0.0026182, 0, 0, 0.501274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383365,-99) , 
6, 0.00687263, 1, 0, 0.49509,-99) , 
5, -0.238061, 1, 0, 0.506734,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0869688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.546915, 1, 1, 0.556379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387512,-99) , 
3, 0.691399, 0, 0, 0.495196,-99) , 
5, -0.569038, 0, 0, 0.539585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507761,-99) , 
NN(
0, 
0, 
-1, 0.876052, 0, -1, 0.463286,-99) , 
5, 0.936508, 0, 0, 0.479771,-99) , 
5, 0.809523, 1, 0, 0.515085,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0593858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485905,-99) , 
0, 0.491243, 0, 0, 0.554658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476908,-99) , 
2, 0.0793373, 1, 0, 0.539098,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0474831, 1, 1, 0.518075,-99) , 
NN(
0, 
0, 
-1, 0.496214, 0, -1, 0.471285,-99) , 
0, 0.498179, 0, 0, 0.502135,-99) , 
0, 0.495232, 1, 0, 0.511066,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0576601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504439, 1, 1, 0.556314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468533,-99) , 
0, 0.499949, 1, 0, 0.510582,-99) , 
0, 0.502852, 0, 0, 0.51661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567752,-99) , 
NN(
0, 
0, 
-1, 0.494556, 0, -1, 0.477034,-99) , 
0, 0.49238, 1, 0, 0.485475,-99) , 
1, -0.00100773, 0, 0, 0.506451,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0473595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450323,-99) , 
1, -0.0010977, 0, 0, 0.486853,-99) , 
6, 0.00768045, 0, 0, 0.490454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372292,-99) , 
6, 0.0115212, 1, 0, 0.486459,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0492479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476355,-99) , 
5, -0.142902, 0, 0, 0.503626,-99) , 
NN(
0, 
0, 
-1, 0.238117, 1, -1, 0.444824,-99) , 
0, 0.493645, 0, 0, 0.493136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390382,-99) , 
0, 0.505708, 1, 0, 0.488427,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0500032);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495824,-99) , 
0, 0.496593, 1, 0, 0.512516,-99) , 
NN(
0, 
0, 
-1, -0.310932, 0, -1, 0.438313,-99) , 
0, 0.504756, 1, 0, 0.505777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508039,-99) , 
NN(
0, 
0, 
-1, 0.909331, 0, -1, 0.462458,-99) , 
3, 4.19056, 0, 0, 0.474169,-99) , 
5, 0.809531, 1, 0, 0.493011,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0599461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420994,-99) , 
2, 0.0862704, 1, 0, 0.504485,-99) , 
5, -0.15198, 0, 0, 0.51635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482602,-99) , 
0, 0.502849, 0, 0, 0.487162,-99) , 
NN(
0, 
0, 
-1, 0.000120305, 0, -1, 0.368587,-99) , 
5, 0.274436, 0, 0, 0.476352,-99) , 
5, 0.0476849, 1, 0, 0.485627,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0605564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57337, 1, 1, 0.588516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429302,-99) , 
1, 0.00309911, 1, 0, 0.506171,-99) , 
5, -0.646131, 0, 0, 0.545518,-99) , 
NN(
NN(
0, 
0, 
-1, 0.130845, 1, 1, 0.538683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474477,-99) , 
0, 0.497138, 0, 0, 0.492839,-99) , 
2, 0.0641731, 0, 0, 0.500101,-99) , 
5, 0.23815, 1, 0, 0.512322,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0430937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497525,-99) , 
3, 1.07344, 1, 0, 0.510506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445317,-99) , 
3, 6.87498, 1, 0, 0.505053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398675,-99) , 
0, 0.505709, 1, 0, 0.499994,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0404326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809508, 1, 1, 0.532597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475735,-99) , 
5, -0.428573, 0, 0, 0.503954,-99) , 
0, 0.499223, 0, 0, 0.512303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496944,-99) , 
0, 0.504212, 1, 0, 0.505402,-99) , 
NN(
0, 
0, 
-1, -0.563511, 1, -1, 0.435599,-99) , 
5, 0.143406, 0, 0, 0.478357,-99) , 
0, 0.502852, 1, 0, 0.507046,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0415172);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492097,-99) , 
5, -0.0476231, 1, 0, 0.501238,-99) , 
NN(
0, 
0, 
-1, -0.428811, 0, -1, 0.447159,-99) , 
0, 0.504346, 1, 0, 0.49608,-99) , 
NN(
0, 
0, 
-1, 0.48938, 1, -1, 0.424785,-99) , 
0, 0.490471, 0, 0, 0.492288,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0455571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503062, 0, 1, 0.5629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463775,-99) , 
5, 0.333413, 1, 0, 0.501016,-99) , 
0, 0.50412, 1, 0, 0.541155,-99) , 
NN(
NN(
0, 
0, 
-1, 0.240399, 1, 1, 0.56258,-99) , 
NN(
0, 
0, 
-1, 0.492333, 0, -1, 0.4943,-99) , 
0, 0.491426, 1, 0, 0.501064,-99) , 
0, 0.500947, 0, 0, 0.511398,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0474113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499998, 0, 1, 0.54651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41285,-99) , 
5, 0.615259, 0, 0, 0.497014,-99) , 
5, 0.551044, 1, 0, 0.504502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421016,-99) , 
3, 3.14753, 1, 0, 0.500265,-99) , 
NN(
0, 
0, 
-1, 0.498083, 0, -1, 0.3999,-99) , 
5, -0.129287, 1, 0, 0.477119,-99) , 
5, 0.14285, 0, 0, 0.497027,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0737141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.306152, 0, 1, 0.557262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452277,-99) , 
0, 0.503486, 0, 0, 0.492509,-99) , 
0, 0.500947, 1, 0, 0.535989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473553,-99) , 
6, 0.00288042, 0, 0, 0.48504,-99) , 
5, 0.931954, 0, 0, 0.496077,-99) , 
5, 0.523845, 1, 0, 0.5103,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0684996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.37393, 1, 1, 0.586196,-99) , 
NN(
0, 
0, 
-1, 0.410528, 0, -1, 0.479132,-99) , 
5, 0.115739, 1, 0, 0.487953,-99) , 
NN(
0, 
0, 
-1, -0.863722, 1, -1, 0.431489,-99) , 
5, -0.428413, 0, 0, 0.477336,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0348349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.43213, 0, 1, 0.513854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475172,-99) , 
3, 7.04315, 1, 0, 0.510993,-99) , 
NN(
0, 
0, 
-1, 0.505573, 0, -1, 0.446739,-99) , 
0, 0.504756, 1, 0, 0.506424,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0300357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434918,-99) , 
0, 0.505978, 1, 0, 0.504379,-99) , 
0, 0.490471, 1, 0, 0.508234,-99) , 
NN(
0, 
0, 
-1, 0.498073, 0, -1, 0.481097,-99) , 
5, 0.904751, 1, 0, 0.502124,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0480369);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482396,-99) , 
3, 0.429035, 1, 0, 0.485946,-99) , 
3, 6.87498, 0, 0, 0.490006,-99) , 
0, 0.490471, 1, 0, 0.494132,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0611265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464715,-99) , 
3, 3.98546, 1, 0, 0.568408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449598,-99) , 
5, 0.957226, 1, 0, 0.493317,-99) , 
5, 0.551058, 1, 0, 0.504008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413,-99) , 
0, 0.498084, 0, 0, 0.454808,-99) , 
6, 0.00889921, 0, 0, 0.469875,-99) , 
5, 0.142921, 0, 0, 0.49477,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0657057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.19478, 1, 1, 0.597946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455366,-99) , 
5, 0.957093, 1, 0, 0.502265,-99) , 
5, 0.102034, 1, 0, 0.51402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548215,-99) , 
NN(
0, 
0, 
-1, 1.57427, 1, -1, 0.403531,-99) , 
0, 0.49714, 1, 0, 0.458869,-99) , 
5, -0.714159, 0, 0, 0.506152,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0555226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.047549, 0, 1, 0.561939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446775,-99) , 
5, -0.591855, 0, 0, 0.4788,-99) , 
2, -0.00956438, 0, 0, 0.524944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451373,-99) , 
0, 0.502849, 1, 0, 0.498231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322401,-99) , 
5, 0.482978, 0, 0, 0.490543,-99) , 
5, 0.428557, 1, 0, 0.501387,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0725905);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46834,-99) , 
0, 0.496189, 0, 0, 0.528236,-99) , 
NN(
0, 
0, 
-1, 0.833724, 0, -1, 0.479699,-99) , 
5, 0.682535, 1, 0, 0.495333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421726,-99) , 
5, -0.746067, 1, 0, 0.483873,-99) , 
NN(
0, 
0, 
-1, 0.504888, 1, -1, 0.416121,-99) , 
0, 0.501895, 1, 0, 0.463457,-99) , 
5, -0.333325, 0, 0, 0.488898,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0245659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498373,-99) , 
0, 0.495374, 1, 0, 0.505056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454116,-99) , 
0, 0.490478, 0, 0, 0.502594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440279,-99) , 
2, -0.205264, 0, 0, 0.499085,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0595426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491011,-99) , 
0, 0.493594, 0, 0, 0.559997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475484,-99) , 
0, 0.499039, 1, 0, 0.520137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481251,-99) , 
2, -0.000904784, 0, 0, 0.501274,-99) , 
NN(
0, 
0, 
-1, 0.496235, 1, -1, 0.469285,-99) , 
0, 0.497142, 0, 0, 0.488183,-99) , 
2, 0.0725197, 0, 0, 0.493118,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0693231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.567068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495188,-99) , 
0, 0.495232, 1, 0, 0.50452,-99) , 
5, 0.673454, 1, 0, 0.52245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455244,-99) , 
3, 0.937182, 0, 0, 0.515458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347415,-99) , 
3, 1.64086, 0, 0, 0.423007,-99) , 
5, -0.63266, 1, 0, 0.481637,-99) , 
5, -0.142858, 0, 0, 0.513417,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0614917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488298,-99) , 
2, -0.0821146, 0, 0, 0.526763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481125,-99) , 
5, 0.428516, 1, 0, 0.493791,-99) , 
2, -0.0124537, 1, 0, 0.508533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409794,-99) , 
1, 0.00135904, 0, 0, 0.443453,-99) , 
5, 0.71416, 0, 0, 0.475031,-99) , 
2, 0.0606911, 1, 0, 0.50232,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.081346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460064,-99) , 
3, 4.15466, 1, 0, 0.555904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427763,-99) , 
5, 0.428656, 0, 0, 0.522345,-99) , 
5, 0.333321, 1, 0, 0.531575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425084,-99) , 
0, 0.489613, 1, 0, 0.46499,-99) , 
0, 0.491426, 0, 0, 0.526282,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0562243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000677622, 0, 1, 0.589834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435743,-99) , 
5, -0.546363, 0, 0, 0.462937,-99) , 
3, 1.75995, 0, 0, 0.520104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542401,-99) , 
NN(
0, 
0, 
-1, 0.3016, 0, -1, 0.486133,-99) , 
0, 0.504755, 0, 0, 0.489365,-99) , 
5, -0.0476127, 1, 0, 0.495828,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0382462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0295583, 0, 1, 0.521613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472393,-99) , 
0, 0.496803, 1, 0, 0.490272,-99) , 
0, 0.499675, 0, 0, 0.500623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419058,-99) , 
0, 0.505706, 1, 0, 0.49687,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0614136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491725,-99) , 
0, 0.499703, 1, 0, 0.512669,-99) , 
NN(
0, 
0, 
-1, 0.523712, 0, -1, 0.451121,-99) , 
0, 0.494144, 0, 0, 0.499296,-99) , 
NN(
0, 
0, 
-1, -0.142652, 1, -1, 0.410231,-99) , 
0, 0.504756, 1, 0, 0.492376,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0652848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.53252, 0, 1, 0.543888,-99) , 
NN(
0, 
0, 
-1, 0.825059, 0, -1, 0.481604,-99) , 
5, 0.755059, 1, 0, 0.499837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551353,-99) , 
NN(
0, 
0, 
-1, -0.25171, 1, -1, 0.455525,-99) , 
0, 0.492375, 1, 0, 0.467864,-99) , 
5, 0.428534, 0, 0, 0.488791,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0404461);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499777,-99) , 
3, 4.94346, 0, 0, 0.506181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470004,-99) , 
3, 6.87778, 1, 0, 0.50248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448703,-99) , 
3, 2.03705, 1, 0, 0.492015,-99) , 
NN(
0, 
0, 
-1, 0.498082, 1, -1, 0.376314,-99) , 
2, 0.0530628, 1, 0, 0.463599,-99) , 
5, -0.047616, 0, 0, 0.493546,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.072957);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.904622, 0, 1, 0.526075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466426,-99) , 
5, -0.782233, 0, 0, 0.499695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409464,-99) , 
5, 0.176022, 0, 0, 0.430573,-99) , 
5, -0.49202, 1, 0, 0.465645,-99) , 
5, 0.333279, 0, 0, 0.506686,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0733411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.351476, 1, 1, 0.53558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418549,-99) , 
5, 0.528402, 0, 0, 0.477379,-99) , 
0, 0.500943, 1, 0, 0.520452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435334,-99) , 
5, -0.844353, 0, 0, 0.474813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40403,-99) , 
5, -0.455662, 1, 0, 0.464344,-99) , 
5, -0.237994, 0, 0, 0.508603,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0480567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.120893, 0, 1, 0.554841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487424,-99) , 
0, 0.501083, 0, 0, 0.506969,-99) , 
2, -0.0567665, 1, 0, 0.51637,-99) , 
NN(
NN(
0, 
0, 
-1, 0.141005, 1, 1, 0.536587,-99) , 
NN(
0, 
0, 
-1, 0.498498, 1, -1, 0.478644,-99) , 
2, 0.0741566, 0, 0, 0.48654,-99) , 
0, 0.499042, 0, 0, 0.498738,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0629147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.451222, 1, 1, 0.519967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427469,-99) , 
5, -0.682372, 1, 0, 0.491635,-99) , 
5, -0.047564, 0, 0, 0.514058,-99) , 
NN(
0, 
0, 
-1, 0.0117716, 1, -1, 0.442985,-99) , 
1, 0.00309911, 1, 0, 0.504767,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0673976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.682542, 1, 1, 0.541633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481735,-99) , 
2, 0.0706287, 0, 0, 0.48958,-99) , 
0, 0.499996, 0, 0, 0.505537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449646,-99) , 
5, -0.750477, 1, 0, 0.48713,-99) , 
NN(
0, 
0, 
-1, 0.49904, 1, -1, 0.368995,-99) , 
5, -0.251728, 1, 0, 0.461507,-99) , 
5, 0.0476791, 0, 0, 0.493822,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0637031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.2157, 0, 1, 0.537314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41722,-99) , 
0, 0.498087, 0, 0, 0.469182,-99) , 
3, 3.94202, 1, 0, 0.525561,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499033, 0, 1, 0.51678,-99) , 
NN(
0, 
0, 
-1, 3.32369, 1, -1, 0.458418,-99) , 
5, 0.818581, 0, 0, 0.493471,-99) , 
5, 0.523768, 1, 0, 0.504996,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0645181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461532,-99) , 
0, 0.49206, 0, 0, 0.515941,-99) , 
1, 0.00545767, 0, 0, 0.520462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452393,-99) , 
5, 0.0477549, 0, 0, 0.489851,-99) , 
NN(
0, 
0, 
-1, 0.501492, 1, -1, 0.438501,-99) , 
0, 0.502218, 0, 0, 0.472632,-99) , 
0, 0.500948, 1, 0, 0.50714,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.064795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428615, 1, 1, 0.535008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473943,-99) , 
5, -0.523617, 1, 0, 0.482894,-99) , 
3, 3.52319, 0, 0, 0.493131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415944,-99) , 
3, 6.60831, 1, 0, 0.486138,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0702101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497143, 1, 1, 0.580448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478829,-99) , 
0, 0.504756, 0, 0, 0.485989,-99) , 
3, 4.5607, 0, 0, 0.498104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46577,-99) , 
0, 0.499008, 0, 0, 0.485699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447451,-99) , 
5, 0.918396, 1, 0, 0.467106,-99) , 
5, 0.809509, 1, 0, 0.485546,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0662719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493332, 1, 1, 0.522444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452802,-99) , 
5, -0.14277, 1, 0, 0.471298,-99) , 
2, -0.0743966, 0, 0, 0.512227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444259,-99) , 
5, 0.43024, 1, 0, 0.467202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393933,-99) , 
0, 0.493328, 0, 0, 0.451802,-99) , 
2, 0.072414, 1, 0, 0.502214,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.051871);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499998, 0, 1, 0.551547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488402,-99) , 
5, 0.428564, 1, 0, 0.499901,-99) , 
2, -0.0447777, 1, 0, 0.509209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414212,-99) , 
2, -0.205264, 0, 0, 0.503892,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0777361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487576,-99) , 
4, 0.999995, 0, 0, 0.524514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367882,-99) , 
4, 0.999905, 0, 0, 0.511191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481474,-99) , 
3, 1.66031, 0, 0, 0.49779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442798,-99) , 
3, 3.29643, 1, 0, 0.479355,-99) , 
5, 0.809394, 1, 0, 0.498263,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0672903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00370277, 1, 1, 0.598719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475569,-99) , 
5, 0.618962, 1, 0, 0.502864,-99) , 
2, -0.0250323, 1, 0, 0.531344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452561,-99) , 
2, 0.0741566, 1, 0, 0.508673,-99) , 
NN(
0, 
0, 
-1, 4.51846, 1, -1, 0.470029,-99) , 
5, 0.618984, 0, 0, 0.493522,-99) , 
1, 0.00145893, 0, 0, 0.50364,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0685026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493149,-99) , 
1, -0.00124541, 1, 0, 0.524706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476552,-99) , 
0, 0.497041, 1, 0, 0.486612,-99) , 
0, 0.502172, 0, 0, 0.496544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396384,-99) , 
2, 0.0810554, 1, 0, 0.486193,-99) , 
NN(
0, 
0, 
-1, 0.714287, 0, -1, 0.446559,-99) , 
0, 0.493328, 1, 0, 0.46299,-99) , 
0, 0.496185, 0, 0, 0.484885,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0711267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43632, 0, 1, 0.621446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459209,-99) , 
0, 0.500943, 1, 0, 0.501515,-99) , 
5, 0.115652, 1, 0, 0.511388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441104,-99) , 
5, -0.898993, 0, 0, 0.47844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39677,-99) , 
5, -0.64628, 1, 0, 0.458837,-99) , 
5, -0.42856, 0, 0, 0.501565,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0560246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.403216, 0, 1, 0.600381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489625,-99) , 
5, 0.595769, 1, 0, 0.498371,-99) , 
5, -0.0611354, 1, 0, 0.507563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377498,-99) , 
2, 0.008265, 0, 0, 0.431083,-99) , 
3, 1.09456, 1, 0, 0.457875,-99) , 
5, -0.714152, 0, 0, 0.501072,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0585023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464304,-99) , 
2, 0.161099, 1, 0, 0.496677,-99) , 
0, 0.49999, 0, 0, 0.5402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466034,-99) , 
3, 1.96285, 1, 0, 0.488285,-99) , 
3, 6.60657, 0, 0, 0.49453,-99) , 
2, 0.0959141, 0, 0, 0.499875,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0505517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499605,-99) , 
5, 0.76419, 1, 0, 0.517924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386328,-99) , 
1, 0.00273209, 1, 0, 0.479125,-99) , 
5, -0.23795, 0, 0, 0.510412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395294,-99) , 
6, 0.0115212, 1, 0, 0.506241,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0522902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497411, 0, 1, 0.553483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445544,-99) , 
5, -0.817742, 0, 0, 0.498563,-99) , 
5, 0.904748, 0, 0, 0.511826,-99) , 
NN(
0, 
0, 
-1, -0.00095784, 1, -1, 0.422149,-99) , 
0, 0.504757, 1, 0, 0.505086,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0526721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000108514, 1, 1, 0.566246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467326,-99) , 
3, 3.49091, 1, 0, 0.500212,-99) , 
0, 0.503806, 0, 0, 0.506304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458365,-99) , 
0, 0.498094, 0, 0, 0.478136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430461,-99) , 
5, -0.80032, 1, 0, 0.463532,-99) , 
5, -0.61891, 0, 0, 0.499998,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0696378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454031,-99) , 
5, -0.523592, 0, 0, 0.54289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470279,-99) , 
5, -0.0475739, 1, 0, 0.497911,-99) , 
0, 0.492511, 0, 0, 0.526823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477103,-99) , 
5, 0.333413, 1, 0, 0.547703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468213,-99) , 
5, 0.714046, 0, 0, 0.489565,-99) , 
0, 0.504346, 0, 0, 0.496208,-99) , 
0, 0.496184, 1, 0, 0.50601,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0630975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.578236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490809,-99) , 
0, 0.504757, 0, 0, 0.495747,-99) , 
5, -0.00212998, 1, 0, 0.502771,-99) , 
NN(
0, 
0, 
-1, -0.023612, 1, -1, 0.405544,-99) , 
5, -0.618922, 0, 0, 0.486354,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0628434);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465681,-99) , 
5, 0.428846, 0, 0, 0.524987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480473,-99) , 
3, 0.751345, 1, 0, 0.491745,-99) , 
3, 3.49091, 0, 0, 0.500824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404276,-99) , 
0, 0.505709, 1, 0, 0.496302,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0692832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489739,-99) , 
0, 0.503623, 1, 0, 0.540831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486789,-99) , 
5, 0.809519, 1, 0, 0.520781,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483608,-99) , 
0, 0.497217, 0, 0, 0.495997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426336,-99) , 
0, 0.499659, 0, 0, 0.442436,-99) , 
0, 0.498228, 1, 0, 0.482331,-99) , 
0, 0.499996, 0, 0, 0.494874,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0754213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477068,-99) , 
5, -0.714292, 0, 0, 0.539436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426602,-99) , 
0, 0.493512, 1, 0, 0.483323,-99) , 
1, -0.00191291, 0, 0, 0.527471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472101,-99) , 
0, 0.505452, 1, 0, 0.528355,-99) , 
NN(
0, 
0, 
-1, 0.499988, 1, -1, 0.482741,-99) , 
0, 0.501128, 0, 0, 0.501574,-99) , 
0, 0.497138, 1, 0, 0.512381,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0552656);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.111193, 1, 1, 0.523178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463133,-99) , 
5, -0.841259, 1, 0, 0.492428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373382,-99) , 
0, 0.504756, 1, 0, 0.476005,-99) , 
5, -0.333324, 0, 0, 0.513618,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0678431);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.334524, 1, 1, 0.548965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465544,-99) , 
5, 0.0483503, 0, 0, 0.509195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466597,-99) , 
3, 5.60472, 0, 0, 0.475965,-99) , 
0, 0.49809, 1, 0, 0.492018,-99) , 
2, 0.105399, 0, 0, 0.498434,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0721056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494862,-99) , 
3, 1.75955, 0, 0, 0.58035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456953,-99) , 
2, 0.027054, 1, 0, 0.517499,-99) , 
0, 0.495235, 1, 0, 0.534233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49085,-99) , 
0, 0.501627, 1, 0, 0.521764,-99) , 
NN(
0, 
0, 
-1, 0.8185, 0, -1, 0.470094,-99) , 
0, 0.497138, 0, 0, 0.500458,-99) , 
5, 0.238092, 1, 0, 0.509507,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0496725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492417,-99) , 
5, 0.143199, 0, 0, 0.527402,-99) , 
1, 0.00132983, 0, 0, 0.554064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486342,-99) , 
0, 0.499736, 0, 0, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0.492999, 0, -1, 0.429553,-99) , 
0, 0.493828, 0, 0, 0.495665,-99) , 
0, 0.492376, 1, 0, 0.501509,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0502013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.384636, 1, 1, 0.563265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493497,-99) , 
3, 1.88712, 0, 0, 0.507745,-99) , 
3, 0.494661, 1, 0, 0.51182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516942,-99) , 
NN(
0, 
0, 
-1, 0.500941, 0, -1, 0.436522,-99) , 
2, -0.0677092, 1, 0, 0.460042,-99) , 
3, 4.14964, 1, 0, 0.500681,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0695123);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485176,-99) , 
3, 5.99193, 1, 0, 0.535213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423448,-99) , 
2, 0.008265, 1, 0, 0.477578,-99) , 
5, -0.741257, 0, 0, 0.522754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469199,-99) , 
5, 0.918379, 0, 0, 0.485406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444693,-99) , 
0, 0.495231, 0, 0, 0.475612,-99) , 
5, 0.809535, 1, 0, 0.503193,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0489499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714138, 1, 1, 0.536969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469259,-99) , 
1, 0.00023414, 0, 0, 0.491644,-99) , 
1, -0.00164708, 1, 0, 0.501395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385904,-99) , 
6, 0.0115212, 1, 0, 0.497319,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0342015);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493683,-99) , 
2, 0.0741566, 0, 0, 0.500518,-99) , 
6, 0.00711361, 0, 0, 0.504246,-99) , 
6, 0.0106708, 0, 0, 0.506955,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0653258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472732,-99) , 
2, -0.0694614, 0, 0, 0.510793,-99) , 
5, -0.0884591, 1, 0, 0.514403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469878,-99) , 
3, 1.58258, 1, 0, 0.520238,-99) , 
NN(
0, 
0, 
-1, 0.775724, 0, -1, 0.419472,-99) , 
5, -0.836633, 1, 0, 0.467325,-99) , 
5, -0.428527, 0, 0, 0.505314,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0595569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238088, 1, 1, 0.523378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46572,-99) , 
2, -0.0326202, 1, 0, 0.485975,-99) , 
0, 0.499862, 1, 0, 0.509643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409059,-99) , 
0, 0.489526, 0, 0, 0.506201,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0507913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444882,-99) , 
0, 0.493334, 0, 0, 0.51669,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.4816,-99) , 
2, 0.047036, 0, 0, 0.487527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411703,-99) , 
2, 0.206856, 1, 0, 0.483651,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0587799);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.579493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482587,-99) , 
0, 0.499994, 1, 0, 0.504229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41954,-99) , 
0, 0.498094, 0, 0, 0.459716,-99) , 
2, 0.100666, 1, 0, 0.498263,-99) , 
5, -0.428463, 1, 0, 0.511402,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0600485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0039028, 0, 1, 0.606121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491352,-99) , 
0, 0.492378, 0, 0, 0.586454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420399,-99) , 
1, 0.0028958, 1, 0, 0.49575,-99) , 
0, 0.504758, 0, 0, 0.500467,-99) , 
5, -0.523693, 1, 0, 0.513584,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0522163);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568242,-99) , 
NN(
NN(
0, 
0, 
-1, -0.119846, 1, 1, 0.587247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481927,-99) , 
5, 0.904731, 0, 0, 0.49057,-99) , 
2, -0.0900495, 1, 0, 0.496605,-99) , 
2, -0.16825, 1, 0, 0.501879,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0461102);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.000771094, 0, 1, 0.574766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498112,-99) , 
0, 0.497701, 1, 0, 0.508632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44111,-99) , 
2, -0.0121782, 1, 0, 0.462632,-99) , 
0, 0.496048, 0, 0, 0.495825,-99) , 
0, 0.491423, 1, 0, 0.501359,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0590333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714282, 1, 1, 0.514387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380534,-99) , 
5, -0.0474089, 0, 0, 0.449265,-99) , 
0, 0.505255, 1, 0, 0.509132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476974,-99) , 
2, -0.0186042, 0, 0, 0.522569,-99) , 
NN(
0, 
0, 
-1, -0.23761, 0, -1, 0.421029,-99) , 
0, 0.493056, 1, 0, 0.469722,-99) , 
0, 0.495233, 0, 0, 0.498768,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0728711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.14847, 1, 1, 0.592689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458218,-99) , 
3, 1.10757, 1, 0, 0.476257,-99) , 
5, -0.773235, 0, 0, 0.525957,-99) , 
NN(
0, 
0, 
-1, 0.499045, 0, -1, 0.469406,-99) , 
5, -0.0476231, 1, 0, 0.481321,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0312717);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491962,-99) , 
1, -0.0039028, 1, 0, 0.49647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410076,-99) , 
0, 0.504847, 1, 0, 0.493903,-99) , 
0, 0.505709, 0, 0, 0.496457,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0558758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0155586, 0, 1, 0.53617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4786,-99) , 
2, -0.121629, 0, 0, 0.52953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46977,-99) , 
0, 0.496864, 1, 0, 0.498386,-99) , 
5, -0.808636, 1, 0, 0.503994,-99) , 
0, 0.49904, 0, 0, 0.514617,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0310073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467107,-99) , 
1, 0.000507574, 1, 0, 0.574686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469823,-99) , 
5, -0.809381, 0, 0, 0.5004,-99) , 
NN(
0, 
0, 
-1, 0.503824, 0, -1, 0.443314,-99) , 
0, 0.503124, 1, 0, 0.496369,-99) , 
0, 0.504757, 0, 0, 0.501083,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0622461);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.679856,-99) , 
NN(
NN(
0, 
0, 
-1, 0.618976, 1, 1, 0.526103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438834,-99) , 
0, 0.495287, 1, 0, 0.477812,-99) , 
0, 0.497092, 0, 0, 0.504899,-99) , 
0, 0.505709, 0, 0, 0.510955,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0413793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505706, 0, 1, 0.516644,-99) , 
NN(
0, 
0, 
-1, 0.497135, 0, -1, 0.466608,-99) , 
5, 0.904737, 1, 0, 0.504593,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0533414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497146, 0, 1, 0.587814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477999,-99) , 
3, 2.75724, 1, 0, 0.502289,-99) , 
3, 0.494661, 1, 0, 0.508045,-99) , 
NN(
0, 
0, 
-1, 0.809501, 0, -1, 0.444918,-99) , 
3, 4.14964, 1, 0, 0.493332,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0452163);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0778832, 0, 1, 0.521972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461223,-99) , 
5, 0.904745, 1, 0, 0.49166,-99) , 
NN(
0, 
0, 
-1, 0.429073, 1, -1, 0.418391,-99) , 
2, 0.069381, 1, 0, 0.479787,-99) , 
0, 0.499044, 0, 0, 0.497314,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.057938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498556,-99) , 
5, -0.7959, 0, 0, 0.537838,-99) , 
NN(
0, 
0, 
-1, 0.510264, 0, -1, 0.483912,-99) , 
5, 0.428564, 1, 0, 0.499281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435475,-99) , 
0, 0.489323, 0, 0, 0.484465,-99) , 
NN(
0, 
0, 
-1, 0.428598, 0, -1, 0.423608,-99) , 
0, 0.490879, 1, 0, 0.446229,-99) , 
0, 0.493328, 0, 0, 0.491168,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0670271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505437, 0, 1, 0.546038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456528,-99) , 
5, -0.71416, 0, 0, 0.531526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473979,-99) , 
5, -0.808516, 1, 0, 0.478962,-99) , 
3, 6.71541, 0, 0, 0.484049,-99) , 
0, 0.499995, 0, 0, 0.499563,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0429039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495393,-99) , 
5, 0.048613, 0, 0, 0.551495,-99) , 
NN(
NN(
0, 
0, 
-1, 0.506293, 1, 1, 0.553614,-99) , 
NN(
0, 
0, 
-1, 0.500676, 1, -1, 0.483169,-99) , 
0, 0.505301, 0, 0, 0.487008,-99) , 
0, 0.491426, 1, 0, 0.491662,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.063896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480892,-99) , 
0, 0.49549, 0, 0, 0.535669,-99) , 
NN(
0, 
0, 
-1, 0.500842, 0, -1, 0.481469,-99) , 
0, 0.497455, 1, 0, 0.496687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45737,-99) , 
3, 3.59263, 1, 0, 0.493252,-99) , 
NN(
0, 
0, 
-1, -0.700564, 1, -1, 0.391462,-99) , 
5, 0.0477068, 0, 0, 0.458515,-99) , 
0, 0.494281, 0, 0, 0.488787,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0434408);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.619082, 1, 1, 0.542154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478246,-99) , 
0, 0.499854, 1, 0, 0.499243,-99) , 
NN(
0, 
0, 
-1, 0.505972, 1, -1, 0.41091,-99) , 
0, 0.504748, 1, 0, 0.493385,-99) , 
2, -0.0681922, 1, 0, 0.501499,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.06678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482634,-99) , 
3, 2.81118, 0, 0, 0.55479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466803,-99) , 
2, 0.202005, 1, 0, 0.50368,-99) , 
2, 0.13808, 1, 0, 0.527681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482454,-99) , 
3, 2.82556, 0, 0, 0.495479,-99) , 
NN(
0, 
0, 
-1, -0.076244, 1, -1, 0.447467,-99) , 
3, 4.17186, 1, 0, 0.486909,-99) , 
2, 0.0711236, 0, 0, 0.492931,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0570622);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.43827, 1, 1, 0.545613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46702,-99) , 
6, 0.0026646, 1, 0, 0.526062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432942,-99) , 
0, 0.500949, 1, 0, 0.48649,-99) , 
3, 3.3196, 0, 0, 0.496575,-99) , 
2, 0.103805, 0, 0, 0.5019,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0608245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480073,-99) , 
3, 1.83006, 0, 0, 0.519182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474236,-99) , 
5, 0.655427, 1, 0, 0.485556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432026,-99) , 
1, 0.00262414, 0, 0, 0.457383,-99) , 
5, -0.0338915, 0, 0, 0.481609,-99) , 
5, -0.809303, 1, 0, 0.485412,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0662592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492126,-99) , 
0, 0.500943, 0, 0, 0.499747,-99) , 
2, -0.0710455, 1, 0, 0.50977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485471,-99) , 
3, 1.88633, 0, 0, 0.523245,-99) , 
NN(
0, 
0, 
-1, 0.493326, 0, -1, 0.424102,-99) , 
5, -0.129159, 1, 0, 0.477742,-99) , 
5, 0.523855, 0, 0, 0.498086,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.074415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499993, 1, 1, 0.543276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435076,-99) , 
3, 0.690243, 0, 0, 0.466739,-99) , 
3, 0.97183, 0, 0, 0.521712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475691,-99) , 
6, 0.00126189, 1, 0, 0.503127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428938,-99) , 
5, 0.850384, 1, 0, 0.46376,-99) , 
6, 0.00220806, 1, 0, 0.491999,-99) , 
5, 0.714304, 1, 0, 0.505862,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0505093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.01952, 0, 1, 0.534042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485762,-99) , 
3, 0.406903, 1, 0, 0.489934,-99) , 
5, 0.904751, 0, 0, 0.49998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408098,-99) , 
1, -0.000115842, 1, 0, 0.457389,-99) , 
3, 6.41351, 1, 0, 0.496188,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0784564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.83661, 1, 1, 0.543069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459306,-99) , 
2, 0.0448375, 1, 0, 0.508394,-99) , 
3, 4.18536, 0, 0, 0.516828,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467526,-99) , 
0, 0.499996, 1, 0, 0.509162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405348,-99) , 
0, 0.5019, 0, 0, 0.429957,-99) , 
5, 0.0793364, 1, 0, 0.474454,-99) , 
5, 0.619037, 0, 0, 0.499157,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0558316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428414, 1, 1, 0.524992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471046,-99) , 
0, 0.495199, 1, 0, 0.495434,-99) , 
0, 0.49823, 0, 0, 0.508785,-99) , 
NN(
0, 
0, 
-1, -0.332649, 0, -1, 0.441891,-99) , 
0, 0.504758, 1, 0, 0.503915,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0586498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619354, 1, 1, 0.553346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491841,-99) , 
3, 3.35558, 0, 0, 0.509326,-99) , 
2, -0.014941, 1, 0, 0.52487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488099,-99) , 
3, 4.72892, 0, 0, 0.501833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46284,-99) , 
5, 0.904755, 1, 0, 0.492648,-99) , 
0, 0.49809, 0, 0, 0.508667,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0650582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485866,-99) , 
5, -0.523635, 0, 0, 0.530359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414003,-99) , 
0, 0.50095, 1, 0, 0.480077,-99) , 
3, 2.1127, 1, 0, 0.515495,-99) , 
NN(
0, 
0, 
-1, 0.501899, 1, -1, 0.473829,-99) , 
3, 3.3471, 1, 0, 0.502971,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0819802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483034,-99) , 
2, -0.00454728, 0, 0, 0.518573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4583,-99) , 
3, 4.2815, 1, 0, 0.504754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463837,-99) , 
2, -0.00711918, 0, 0, 0.495528,-99) , 
NN(
0, 
0, 
-1, 0.66179, 1, -1, 0.432023,-99) , 
5, 0.550985, 1, 0, 0.469555,-99) , 
5, 0.809495, 0, 0, 0.483318,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0527575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.755903, 1, 1, 0.538947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451361,-99) , 
5, 0.430418, 0, 0, 0.520785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487565,-99) , 
0, 0.505617, 1, 0, 0.550236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479642,-99) , 
5, 0.142821, 1, 0, 0.488692,-99) , 
0, 0.503802, 0, 0, 0.494402,-99) , 
3, 4.14964, 0, 0, 0.499872,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.056788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482721,-99) , 
0, 0.498497, 1, 0, 0.50724,-99) , 
0, 0.500312, 0, 0, 0.511262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456961,-99) , 
0, 0.504756, 0, 0, 0.493484,-99) , 
NN(
0, 
0, 
-1, 4.16874, 1, -1, 0.447381,-99) , 
5, 0.333372, 1, 0, 0.463717,-99) , 
0, 0.500947, 1, 0, 0.498422,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0855498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486381,-99) , 
5, -0.455692, 0, 0, 0.53376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487338,-99) , 
5, 0.904751, 1, 0, 0.522914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581458,-99) , 
NN(
0, 
0, 
-1, 0.493442, 0, -1, 0.433416,-99) , 
0, 0.490523, 1, 0, 0.455744,-99) , 
0, 0.495238, 0, 0, 0.505127,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0732749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484689,-99) , 
1, -0.00577507, 0, 0, 0.549878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472286,-99) , 
5, 0.809374, 0, 0, 0.487768,-99) , 
1, -0.000549881, 1, 0, 0.510877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34961,-99) , 
6, 0.011521, 1, 0, 0.504737,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0684106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.65041, 0, 1, 0.519172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452548,-99) , 
0, 0.496181, 1, 0, 0.478827,-99) , 
3, 3.43692, 1, 0, 0.506041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481205,-99) , 
0, 0.505069, 1, 0, 0.544042,-99) , 
NN(
0, 
0, 
-1, -0.201686, 1, -1, 0.452988,-99) , 
0, 0.500944, 0, 0, 0.479451,-99) , 
5, 0.0477288, 0, 0, 0.499364,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.056686);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.872805, 0, 1, 0.56501,-99) , 
NN(
NN(
0, 
0, 
-1, 0.555822, 1, 1, 0.511877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412257,-99) , 
3, 3.31869, 0, 0, 0.445088,-99) , 
5, 0.152023, 0, 0, 0.50208,-99) , 
5, -0.618852, 1, 0, 0.510576,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.050671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.745419, 0, 1, 0.553948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407389,-99) , 
0, 0.497139, 0, 0, 0.457955,-99) , 
2, -0.0370722, 0, 0, 0.525482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493844,-99) , 
5, 0.564664, 1, 0, 0.497355,-99) , 
NN(
0, 
0, 
-1, 0.00595548, 0, -1, 0.442742,-99) , 
5, 0.492076, 0, 0, 0.485893,-99) , 
5, -0.333324, 1, 0, 0.493205,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0475647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.526686, 1, 1, 0.577025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443735,-99) , 
0, 0.49808, 0, 0, 0.498486,-99) , 
5, -0.841059, 0, 0, 0.537313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363475,-99) , 
1, -0.00347214, 0, 0, 0.494966,-99) , 
NN(
0, 
0, 
-1, 0.499049, 1, -1, 0.408795,-99) , 
6, 0.00560922, 1, 0, 0.488889,-99) , 
5, -0.333179, 1, 0, 0.497543,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0813494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489463,-99) , 
2, -0.019725, 0, 0, 0.520495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448192,-99) , 
0, 0.490179, 1, 0, 0.46417,-99) , 
0, 0.4936, 0, 0, 0.504479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477323,-99) , 
5, 0.0477305, 0, 0, 0.513867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423227,-99) , 
6, 0.00265488, 0, 0, 0.448698,-99) , 
0, 0.502716, 0, 0, 0.471455,-99) , 
0, 0.499042, 1, 0, 0.490302,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0488722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482589,-99) , 
0, 0.498077, 1, 0, 0.52211,-99) , 
5, 0.238487, 1, 0, 0.543989,-99) , 
NN(
0, 
0, 
-1, 0.489521, 0, -1, 0.481656,-99) , 
2, -0.07578, 1, 0, 0.491135,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0717377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497273, 1, 1, 0.529163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439886,-99) , 
1, -0.00609447, 0, 0, 0.525091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458188,-99) , 
0, 0.494144, 0, 0, 0.489711,-99) , 
NN(
0, 
0, 
-1, 0.0730797, 1, -1, 0.435691,-99) , 
5, 0.333198, 0, 0, 0.470718,-99) , 
0, 0.496184, 0, 0, 0.506022,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0794005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.038899, 1, 1, 0.575268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420941,-99) , 
0, 0.490723, 1, 0, 0.480036,-99) , 
0, 0.491968, 0, 0, 0.538285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466386,-99) , 
5, 0.90462, 0, 0, 0.477085,-99) , 
3, 6.30801, 0, 0, 0.482986,-99) , 
0, 0.495233, 1, 0, 0.496455,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0470513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503119, 1, 1, 0.5612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448227,-99) , 
3, 0.945659, 0, 0, 0.495382,-99) , 
0, 0.499039, 0, 0, 0.522274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482598,-99) , 
5, 0.668304, 1, 0, 0.491407,-99) , 
NN(
0, 
0, 
-1, -0.350934, 1, -1, 0.418241,-99) , 
5, -0.160899, 0, 0, 0.486991,-99) , 
5, -0.523681, 1, 0, 0.492492,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0619361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492379, 1, 1, 0.540412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428886,-99) , 
0, 0.494281, 0, 0, 0.49297,-99) , 
5, -0.614335, 0, 0, 0.522148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487026,-99) , 
5, 0.794445, 1, 0, 0.498145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415949,-99) , 
5, 0.691663, 0, 0, 0.488804,-99) , 
5, 0.619077, 1, 0, 0.501623,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0585723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.451365, 1, 1, 0.556124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48942,-99) , 
3, 2.03518, 1, 0, 0.513555,-99) , 
3, 4.15305, 0, 0, 0.521265,-99) , 
NN(
0, 
0, 
-1, 0.498023, 0, -1, 0.467155,-99) , 
5, 0.904745, 1, 0, 0.508282,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.035912);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488747,-99) , 
1, 0.00150595, 0, 0, 0.525203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492051,-99) , 
2, 0.0811292, 0, 0, 0.497491,-99) , 
2, -0.0645, 1, 0, 0.502419,-99) , 
NN(
0, 
0, 
-1, 0.489382, 1, -1, 0.452789,-99) , 
0, 0.490471, 0, 0, 0.499946,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0374668);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.142989, 1, 1, 0.559508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411928,-99) , 
0, 0.489929, 0, 0, 0.500393,-99) , 
NN(
0, 
0, 
-1, 0.523559, 1, -1, 0.454999,-99) , 
2, -0.0601798, 0, 0, 0.491857,-99) , 
0, 0.503805, 0, 0, 0.498148,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0530526);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479534,-99) , 
3, 1.10952, 0, 0, 0.551514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4289,-99) , 
5, 0.174682, 0, 0, 0.493917,-99) , 
5, -0.237994, 1, 0, 0.50434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455377,-99) , 
0, 0.493388, 1, 0, 0.480257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392482,-99) , 
0, 0.489655, 0, 0, 0.471426,-99) , 
0, 0.496185, 0, 0, 0.493026,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0598065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492929,-99) , 
5, 0.764075, 1, 0, 0.525871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36705,-99) , 
5, -0.636932, 1, 0, 0.460549,-99) , 
5, -0.237938, 0, 0, 0.510081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534176,-99) , 
NN(
0, 
0, 
-1, 0.827663, 0, -1, 0.474894,-99) , 
5, -0.809367, 1, 0, 0.480259,-99) , 
0, 0.496185, 1, 0, 0.489712,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0538875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 0, 1, 0.579692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499877,-99) , 
2, 0.067167, 0, 0, 0.508649,-99) , 
3, 4.24692, 0, 0, 0.518645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475933,-99) , 
5, 0.850228, 1, 0, 0.502879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450208,-99) , 
0, 0.499886, 1, 0, 0.468198,-99) , 
0, 0.498073, 1, 0, 0.484887,-99) , 
5, 0.714272, 1, 0, 0.500796,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0546361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.58866, 1, 1, 0.584403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486606,-99) , 
5, 0.483029, 0, 0, 0.513238,-99) , 
5, -0.809381, 1, 0, 0.519393,-99) , 
NN(
0, 
0, 
-1, -0.236286, 1, -1, 0.448945,-99) , 
1, 0.00548355, 1, 0, 0.515413,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0471172);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421146,-99) , 
3, 3.3784, 1, 0, 0.519818,-99) , 
NN(
0, 
0, 
-1, 0.351589, 0, -1, 0.488823,-99) , 
5, -0.0475123, 1, 0, 0.495686,-99) , 
2, -0.196956, 1, 0, 0.500965,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0476274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505706, 0, 1, 0.521721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438036,-99) , 
3, 5.92629, 1, 0, 0.518608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469929,-99) , 
3, 6.89352, 1, 0, 0.5145,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0618885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483136,-99) , 
5, 0.142906, 0, 0, 0.528314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490913,-99) , 
5, 0.333094, 1, 0, 0.499852,-99) , 
0, 0.498725, 0, 0, 0.515363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466174,-99) , 
5, 0.714486, 1, 0, 0.484329,-99) , 
NN(
0, 
0, 
-1, -0.428503, 1, -1, 0.43816,-99) , 
5, 0.333376, 0, 0, 0.465128,-99) , 
0, 0.494281, 0, 0, 0.50514,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0581538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238076, 1, 1, 0.572121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474455,-99) , 
0, 0.490478, 0, 0, 0.545875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496309,-99) , 
0, 0.502537, 1, 0, 0.527526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489673,-99) , 
3, 5.52639, 0, 0, 0.497026,-99) , 
0, 0.499998, 0, 0, 0.50932,-99) , 
0, 0.494286, 1, 0, 0.516281,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0818146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495779, 0, 1, 0.577871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436014,-99) , 
2, 0.0391907, 1, 0, 0.507018,-99) , 
3, 3.35966, 0, 0, 0.526126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420291,-99) , 
0, 0.504124, 1, 0, 0.511307,-99) , 
NN(
0, 
0, 
-1, 0.523759, 0, -1, 0.463986,-99) , 
1, 0.00145893, 0, 0, 0.47582,-99) , 
0, 0.497142, 1, 0, 0.495489,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0609182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333413, 1, 1, 0.611071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429184,-99) , 
0, 0.504893, 0, 0, 0.475081,-99) , 
2, 0.0148614, 1, 0, 0.553415,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482954,-99) , 
0, 0.495599, 0, 0, 0.506304,-99) , 
NN(
0, 
0, 
-1, 0.451205, 1, -1, 0.471213,-99) , 
5, 0.523789, 0, 0, 0.493965,-99) , 
0, 0.502852, 0, 0, 0.502416,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0547097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493771,-99) , 
5, 0.523565, 1, 0, 0.517119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478908,-99) , 
2, 0.072414, 0, 0, 0.487454,-99) , 
0, 0.499042, 0, 0, 0.499504,-99) , 
1, 0.00702288, 0, 0, 0.503425,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0421251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45667,-99) , 
5, -0.333484, 0, 0, 0.527173,-99) , 
0, 0.502844, 0, 0, 0.546312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497664,-99) , 
5, -0.550953, 1, 0, 0.502029,-99) , 
NN(
0, 
0, 
-1, 0.0119035, 1, -1, 0.443774,-99) , 
5, -0.809505, 0, 0, 0.495586,-99) , 
2, -0.0572402, 1, 0, 0.505118,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0360755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444188,-99) , 
5, -0.632424, 0, 0, 0.504511,-99) , 
5, -0.90454, 1, 0, 0.506975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523504,-99) , 
NN(
0, 
0, 
-1, 0.333159, 0, -1, 0.451399,-99) , 
0, 0.495246, 1, 0, 0.470494,-99) , 
1, 0.00374104, 1, 0, 0.503325,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0595439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4985, 0, 1, 0.534556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456388,-99) , 
0, 0.495235, 1, 0, 0.485354,-99) , 
2, -0.0694614, 0, 0, 0.525805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555973,-99) , 
NN(
0, 
0, 
-1, -0.809383, 0, -1, 0.479286,-99) , 
2, -0.0988173, 1, 0, 0.48934,-99) , 
0, 0.499045, 1, 0, 0.509985,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0703215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0441248, 0, 1, 0.560279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481987,-99) , 
5, 0.934331, 1, 0, 0.519928,-99) , 
5, 0.31078, 1, 0, 0.528006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456259,-99) , 
0, 0.499993, 0, 0, 0.483175,-99) , 
5, -0.809218, 0, 0, 0.523089,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0727462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142626, 1, 1, 0.544999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462027,-99) , 
2, -0.0743672, 0, 0, 0.530981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46861,-99) , 
0, 0.495234, 1, 0, 0.520619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468682,-99) , 
0, 0.497952, 0, 0, 0.475668,-99) , 
2, -0.066125, 1, 0, 0.482833,-99) , 
0, 0.499041, 0, 0, 0.502034,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0878535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466482,-99) , 
3, 2.79995, 1, 0, 0.548948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476582,-99) , 
5, 0.909298, 0, 0, 0.497795,-99) , 
5, 0.619036, 1, 0, 0.518576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -1, 0.493309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389867,-99) , 
0, 0.50095, 0, 0, 0.418538,-99) , 
5, 0.809363, 0, 0, 0.452847,-99) , 
3, 4.14669, 1, 0, 0.504088,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0813228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523626, 1, 1, 0.573269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466207,-99) , 
0, 0.497381, 1, 0, 0.501311,-99) , 
0, 0.499678, 0, 0, 0.510207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474396,-99) , 
3, 3.21469, 1, 0, 0.527026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412646,-99) , 
0, 0.505075, 0, 0, 0.432251,-99) , 
1, -0.00124541, 1, 0, 0.457805,-99) , 
0, 0.500949, 1, 0, 0.495515,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0647151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238004, 1, 1, 0.519394,-99) , 
NN(
0, 
0, 
-1, 0.503883, 0, -1, 0.473311,-99) , 
0, 0.50326, 1, 0, 0.510136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466678,-99) , 
5, 0.854747, 1, 0, 0.496387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360421,-99) , 
5, -0.152073, 1, 0, 0.426073,-99) , 
5, 0.618922, 0, 0, 0.464749,-99) , 
0, 0.496187, 0, 0, 0.49477,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0569972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477141,-99) , 
0, 0.505929, 0, 0, 0.525769,-99) , 
0, 0.504892, 1, 0, 0.564117,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497599, 0, 1, 0.514791,-99) , 
NN(
0, 
0, 
-1, 0.501968, 1, -1, 0.455888,-99) , 
0, 0.499949, 1, 0, 0.498687,-99) , 
0, 0.503803, 0, 0, 0.505463,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0528071);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.01512, 1, 1, 0.567086,-99) , 
NN(
NN(
0, 
0, 
-1, 1.58764, 1, 1, 0.569612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468734,-99) , 
5, 0.655317, 0, 0, 0.492095,-99) , 
5, -0.809506, 1, 0, 0.498358,-99) , 
0, 0.502851, 0, 0, 0.508332,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0791446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.59161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450428,-99) , 
2, -0.0709271, 0, 0, 0.560989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451323,-99) , 
3, 0.718271, 0, 0, 0.523414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469502,-99) , 
3, 6.89592, 0, 0, 0.474487,-99) , 
5, 0.428564, 1, 0, 0.48824,-99) , 
1, 0.00314236, 0, 0, 0.49687,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0531376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.74565, 1, 1, 0.550107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480871,-99) , 
5, -0.428741, 1, 0, 0.505218,-99) , 
5, 0.333074, 0, 0, 0.535197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491156,-99) , 
0, 0.501263, 0, 0, 0.498943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426591,-99) , 
5, -0.618883, 1, 0, 0.445123,-99) , 
0, 0.49428, 0, 0, 0.488136,-99) , 
2, -0.0572402, 1, 0, 0.496817,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0438164);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492514, 0, 1, 0.555913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494462,-99) , 
0, 0.495305, 1, 0, 0.49987,-99) , 
NN(
0, 
0, 
-1, 0.494107, 0, -1, 0.423004,-99) , 
0, 0.49469, 0, 0, 0.492628,-99) , 
0, 0.49333, 1, 0, 0.500923,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0585671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50063, 1, 1, 0.580575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44327,-99) , 
5, 0.301671, 0, 0, 0.49958,-99) , 
5, -0.0475451, 1, 0, 0.51471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4694,-99) , 
1, 0.00141378, 0, 0, 0.490529,-99) , 
NN(
0, 
0, 
-1, 0.492475, 1, -1, 0.460907,-99) , 
0, 0.494418, 0, 0, 0.475501,-99) , 
0, 0.497139, 0, 0, 0.498659,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0460618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443423,-99) , 
5, 0.238191, 0, 0, 0.540422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494263,-99) , 
3, 2.99533, 0, 0, 0.501073,-99) , 
3, 4.14964, 0, 0, 0.508997,-99) , 
NN(
0, 
0, 
-1, 0.00257232, 1, -1, 0.446312,-99) , 
0, 0.491425, 0, 0, 0.504049,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0679426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424731,-99) , 
0, 0.493327, 0, 0, 0.527019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480999,-99) , 
2, -0.151695, 1, 0, 0.48899,-99) , 
3, 1.28081, 1, 0, 0.500229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418276,-99) , 
3, 8.2051, 1, 0, 0.496093,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0563821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491741, 1, 1, 0.52391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455139,-99) , 
5, 0.8095, 0, 0, 0.495777,-99) , 
5, 0.71427, 1, 0, 0.50793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490775,-99) , 
3, 2.82142, 1, 0, 0.530056,-99) , 
NN(
0, 
0, 
-1, 0.503225, 1, -1, 0.452975,-99) , 
0, 0.503986, 0, 0, 0.474058,-99) , 
0, 0.499995, 1, 0, 0.49625,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0584522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497168,-99) , 
0, 0.498077, 0, 0, 0.512014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427031,-99) , 
0, 0.50554, 0, 0, 0.471362,-99) , 
0, 0.503259, 1, 0, 0.506101,-99) , 
NN(
0, 
0, 
-1, 0.33265, 0, -1, 0.424707,-99) , 
0, 0.492376, 0, 0, 0.496569,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0746116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.90461, 1, 1, 0.54871,-99) , 
NN(
0, 
0, 
-1, -0.0458084, 0, -1, 0.462665,-99) , 
2, -0.0694614, 0, 0, 0.532992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49271,-99) , 
5, 0.546507, 1, 0, 0.504915,-99) , 
NN(
0, 
0, 
-1, 0.940117, 0, -1, 0.452312,-99) , 
5, 0.0476845, 0, 0, 0.490912,-99) , 
0, 0.499043, 1, 0, 0.51441,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0407239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473397,-99) , 
5, -0.909292, 0, 0, 0.55043,-99) , 
NN(
0, 
0, 
-1, 0.00572029, 0, 1, 0.509051,-99) , 
5, -0.619033, 1, 0, 0.514815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444244,-99) , 
3, 8.2051, 1, 0, 0.510984,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0742635);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467554,-99) , 
5, 0.904754, 1, 0, 0.528788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404255,-99) , 
2, 0.00417466, 0, 0, 0.488407,-99) , 
2, 0.000673894, 1, 0, 0.512133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447144,-99) , 
2, 0.140973, 1, 0, 0.4821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410474,-99) , 
5, 0.0484494, 0, 0, 0.46465,-99) , 
2, 0.0741566, 1, 0, 0.504627,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0693974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.510181, 1, 1, 0.520517,-99) , 
NN(
0, 
0, 
-1, 0.490879, 0, -1, 0.436848,-99) , 
5, -0.142734, 0, 0, 0.49961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481711,-99) , 
5, -0.61891, 1, 0, 0.489475,-99) , 
NN(
0, 
0, 
-1, 2.9894, 1, -1, 0.437644,-99) , 
0, 0.498907, 0, 0, 0.47037,-99) , 
0, 0.496185, 1, 0, 0.479823,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0635979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.017314, 1, 1, 0.593645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438521,-99) , 
5, -0.662995, 1, 0, 0.510434,-99) , 
5, -0.528252, 0, 0, 0.543466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493527,-99) , 
0, 0.499995, 0, 0, 0.505433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406362,-99) , 
1, -0.000361529, 1, 0, 0.448137,-99) , 
5, 0.60093, 0, 0, 0.495777,-99) , 
5, 0.238135, 1, 0, 0.508251,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0727153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00871, 1, 1, 0.539625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459524,-99) , 
5, 0.933916, 1, 0, 0.494997,-99) , 
5, 0.7687, 1, 0, 0.514299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46311,-99) , 
3, 2.05207, 1, 0, 0.497521,-99) , 
NN(
0, 
0, 
-1, 0.643215, 1, -1, 0.402699,-99) , 
3, 1.19668, 0, 0, 0.457652,-99) , 
5, -0.619033, 0, 0, 0.505084,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0701685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422455,-99) , 
5, 0.61888, 0, 0, 0.503937,-99) , 
5, 0.428425, 1, 0, 0.528049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434629,-99) , 
3, 1.13407, 0, 0, 0.538319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478087,-99) , 
0, 0.502853, 0, 0, 0.485376,-99) , 
2, 0.0374674, 0, 0, 0.494657,-99) , 
3, 3.49091, 0, 0, 0.503473,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0515649);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.898826, 0, 1, 0.57371,-99) , 
NN(
NN(
0, 
0, 
-1, 0.953359, 0, 1, 0.517517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339266,-99) , 
4, 0.999906, 0, 0, 0.48464,-99) , 
5, 0.836752, 0, 0, 0.498377,-99) , 
5, -0.714072, 1, 0, 0.507244,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0456941);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493512,-99) , 
5, 0.551068, 1, 0, 0.500253,-99) , 
NN(
0, 
0, 
-1, 3.78066, 1, -1, 0.449743,-99) , 
5, -0.0475447, 0, 0, 0.488954,-99) , 
0, 0.505709, 0, 0, 0.493129,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0751534);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485637,-99) , 
5, 0.71417, 1, 0, 0.513815,-99) , 
NN(
0, 
0, 
-1, 0.0476771, 0, -1, 0.449581,-99) , 
0, 0.504122, 1, 0, 0.502985,-99) , 
NN(
0, 
0, 
-1, 0.809539, 0, -1, 0.457466,-99) , 
0, 0.49714, 0, 0, 0.483425,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0591325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492981,-99) , 
3, 2.82627, 1, 0, 0.521901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434829,-99) , 
0, 0.505709, 1, 0, 0.51652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474518,-99) , 
5, 0.850525, 0, 0, 0.503837,-99) , 
NN(
0, 
0, 
-1, -0.00181599, 0, -1, 0.467016,-99) , 
1, 0.00109895, 0, 0, 0.478078,-99) , 
5, 0.714294, 1, 0, 0.495591,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0435403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480917,-99) , 
3, 5.92455, 1, 0, 0.563896,-99) , 
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.513426,-99) , 
3, 4.71706, 0, 0, 0.518131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453933,-99) , 
3, 7.02461, 1, 0, 0.512798,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0401978);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576462,-99) , 
NN(
NN(
0, 
0, 
-1, -0.42856, 1, 1, 0.516756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426404,-99) , 
5, -0.332863, 0, 0, 0.488287,-99) , 
0, 0.501398, 1, 0, 0.510766,-99) , 
0, 0.505706, 0, 0, 0.513201,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0587057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466541,-99) , 
2, -0.0410378, 0, 0, 0.511865,-99) , 
2, -0.117079, 1, 0, 0.515595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407199,-99) , 
2, -0.196956, 0, 0, 0.509191,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0500621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714112, 0, 1, 0.535826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489088,-99) , 
0, 0.503757, 0, 0, 0.496018,-99) , 
0, 0.496049, 1, 0, 0.504028,-99) , 
NN(
0, 
0, 
-1, 0.619044, 0, -1, 0.441985,-99) , 
0, 0.493327, 0, 0, 0.494411,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0480721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425207,-99) , 
5, 0.557776, 0, 0, 0.500352,-99) , 
5, 0.419551, 1, 0, 0.505517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448624,-99) , 
5, -0.797719, 0, 0, 0.481821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390958,-99) , 
5, 0.0612357, 1, 0, 0.466875,-99) , 
5, 0.23815, 0, 0, 0.49468,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0588018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449014,-99) , 
5, -0.618879, 0, 0, 0.513171,-99) , 
NN(
0, 
0, 
-1, 0.499135, 0, -1, 0.478962,-99) , 
0, 0.49714, 1, 0, 0.492497,-99) , 
NN(
0, 
0, 
-1, 0.428628, 0, -1, 0.444717,-99) , 
2, 0.0823977, 1, 0, 0.485539,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0767985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333139, 1, 1, 0.570709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448453,-99) , 
0, 0.503802, 1, 0, 0.485445,-99) , 
2, -0.00363884, 0, 0, 0.527202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467322,-99) , 
2, -0.066125, 1, 0, 0.476403,-99) , 
5, -0.809381, 1, 0, 0.483334,-99) , 
0, 0.500947, 0, 0, 0.494581,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0504926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.74136, 0, 1, 0.563256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471621,-99) , 
5, 0.800321, 0, 0, 0.497829,-99) , 
5, 0.618922, 1, 0, 0.525569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565704,-99) , 
NN(
0, 
0, 
-1, 0.492106, 0, -1, 0.481257,-99) , 
0, 0.490471, 1, 0, 0.484551,-99) , 
1, -0.00100773, 1, 0, 0.497393,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0494462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0839716, 0, 1, 0.518505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435042,-99) , 
3, 1.69623, 0, 0, 0.4775,-99) , 
0, 0.501899, 1, 0, 0.510291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448119,-99) , 
3, 6.71821, 1, 0, 0.504725,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0452234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468632,-99) , 
6, 0.00308381, 1, 0, 0.506059,-99) , 
1, 0.00483711, 0, 0, 0.509893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440802,-99) , 
6, 0.00925149, 1, 0, 0.50654,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0307109);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49665,-99) , 
0, 0.503979, 0, 0, 0.500721,-99) , 
NN(
0, 
0, 
-1, 0.506182, 0, -1, 0.434311,-99) , 
0, 0.505301, 1, 0, 0.496677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394535,-99) , 
5, 0.238554, 1, 0, 0.439524,-99) , 
0, 0.491424, 0, 0, 0.492111,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.045042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493189,-99) , 
0, 0.499452, 1, 0, 0.509459,-99) , 
NN(
0, 
0, 
-1, 0.499454, 1, -1, 0.441075,-99) , 
2, 0.117055, 1, 0, 0.502358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423568,-99) , 
0, 0.490474, 0, 0, 0.498225,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0435904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.659329, 1, 1, 0.55214,-99) , 
NN(
0, 
0, 
-1, 0.491017, 0, -1, 0.493759,-99) , 
0, 0.5019, 0, 0, 0.503753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445329,-99) , 
3, 1.54781, 0, 0, 0.473348,-99) , 
NN(
0, 
0, 
-1, 0.499989, 0, -1, 0.42027,-99) , 
5, -0.83673, 1, 0, 0.446787,-99) , 
5, -0.42856, 0, 0, 0.492718,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0672919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.795796, 0, 1, 0.57867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44694,-99) , 
5, -0.87735, 0, 0, 0.487398,-99) , 
3, 1.86629, 0, 0, 0.526847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486015,-99) , 
0, 0.499038, 0, 0, 0.497281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422889,-99) , 
3, 3.74566, 0, 0, 0.45227,-99) , 
5, 0.619094, 0, 0, 0.485873,-99) , 
5, -0.142765, 1, 0, 0.493892,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.050501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49747, 1, 1, 0.538704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492738,-99) , 
5, 0.619044, 1, 0, 0.506904,-99) , 
0, 0.497048, 0, 0, 0.519511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448515,-99) , 
6, 0.00471491, 1, 0, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0.503622, 0, -1, 0.446659,-99) , 
2, -0.0412064, 0, 0, 0.485766,-99) , 
0, 0.499996, 1, 0, 0.507884,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0538843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.768703, 1, 1, 0.520401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450889,-99) , 
3, 1.51922, 1, 0, 0.47841,-99) , 
5, -0.619033, 0, 0, 0.514268,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463829,-99) , 
0, 0.490918, 0, 0, 0.491592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413751,-99) , 
0, 0.49224, 1, 0, 0.464004,-99) , 
0, 0.493328, 0, 0, 0.506378,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0469692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485503,-99) , 
6, 0.00152428, 0, 0, 0.497732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421214,-99) , 
1, 0.000503627, 0, 0, 0.468051,-99) , 
2, -0.0753658, 0, 0, 0.492448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423447,-99) , 
6, 0.0106707, 1, 0, 0.490028,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0470449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491242, 0, 1, 0.541086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46967,-99) , 
5, 0.428502, 0, 0, 0.49518,-99) , 
0, 0.492376, 1, 0, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0.714423, 0, -1, 0.448387,-99) , 
0, 0.501899, 1, 0, 0.489362,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0600293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461284,-99) , 
5, 0.626827, 0, 0, 0.498133,-99) , 
5, -0.306087, 1, 0, 0.50563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529495,-99) , 
NN(
0, 
0, 
-1, 0.497141, 0, -1, 0.431573,-99) , 
3, 0.876742, 1, 0, 0.454041,-99) , 
5, -0.71427, 0, 0, 0.498756,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0430453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492908,-99) , 
6, 0.00408947, 0, 0, 0.497525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410374,-99) , 
6, 0.00715696, 1, 0, 0.494137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458039,-99) , 
5, -0.546361, 1, 0, 0.491345,-99) , 
NN(
0, 
0, 
-1, -0.410305, 1, -1, 0.423714,-99) , 
0, 0.49809, 0, 0, 0.456575,-99) , 
5, -0.047496, 0, 0, 0.485658,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0551832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.346901, 1, 1, 0.562904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492781,-99) , 
5, -0.714099, 0, 0, 0.550969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454993,-99) , 
2, 0.067167, 1, 0, 0.52927,-99) , 
NN(
0, 
0, 
-1, 0.746054, 0, -1, 0.491806,-99) , 
5, 0.619062, 1, 0, 0.505387,-99) , 
0, 0.49428, 1, 0, 0.514102,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0283068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499374,-99) , 
5, 0.959162, 1, 0, 0.532737,-99) , 
NN(
0, 
0, 
-1, -0.00579206, 1, 1, 0.508,-99) , 
5, 0.904741, 0, 0, 0.514016,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0654574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50181, 1, 1, 0.533763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488374,-99) , 
1, 0.00402481, 0, 0, 0.493972,-99) , 
0, 0.499996, 0, 0, 0.506254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446143,-99) , 
3, 2.06978, 0, 0, 0.488743,-99) , 
NN(
0, 
0, 
-1, -0.492582, 0, -1, 0.388247,-99) , 
5, -0.632545, 1, 0, 0.454213,-99) , 
5, -0.142774, 0, 0, 0.495066,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0647094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495101, 0, 1, 0.556115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482573,-99) , 
0, 0.493604, 1, 0, 0.512534,-99) , 
5, 0.618966, 0, 0, 0.539434,-99) , 
NN(
NN(
0, 
0, 
-1, 0.000412749, 1, 1, 0.541687,-99) , 
NN(
0, 
0, 
-1, -0.809288, 0, -1, 0.487563,-99) , 
2, 0.0672061, 0, 0, 0.496424,-99) , 
0, 0.498092, 1, 0, 0.517333,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0616895);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484172,-99) , 
0, 0.495963, 0, 0, 0.522915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43413,-99) , 
0, 0.50402, 0, 0, 0.483388,-99) , 
0, 0.502896, 1, 0, 0.514581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591182,-99) , 
NN(
0, 
0, 
-1, 0.492902, 0, -1, 0.465356,-99) , 
0, 0.489793, 1, 0, 0.478713,-99) , 
0, 0.495234, 0, 0, 0.505323,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0563502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486999,-99) , 
3, 4.30491, 1, 0, 0.546911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472987,-99) , 
0, 0.494102, 0, 0, 0.505895,-99) , 
5, 0.714198, 1, 0, 0.524091,-99) , 
NN(
NN(
0, 
0, 
-1, 0.501269, 1, 1, 0.543954,-99) , 
NN(
0, 
0, 
-1, 0.0672061, 1, -1, 0.482835,-99) , 
5, -0.523773, 1, 0, 0.491514,-99) , 
0, 0.49809, 1, 0, 0.507463,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.028734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502219, 0, 1, 0.509579,-99) , 
NN(
0, 
0, 
-1, 0.489979, 1, -1, 0.460294,-99) , 
0, 0.49143, 0, 0, 0.506025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38379,-99) , 
5, 0.141863, 1, 0, 0.445617,-99) , 
1, 0.00548355, 1, 0, 0.502623,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0605986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438958,-99) , 
2, 0.0531515, 1, 0, 0.517729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478024,-99) , 
2, -0.146298, 0, 0, 0.51391,-99) , 
NN(
0, 
0, 
-1, 0.495235, 1, -1, 0.437345,-99) , 
2, 0.0741566, 1, 0, 0.501451,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.065394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486818,-99) , 
0, 0.504756, 0, 0, 0.492394,-99) , 
5, 0.904609, 0, 0, 0.502777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441349,-99) , 
5, 0.142921, 0, 0, 0.54171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410489,-99) , 
0, 0.495232, 1, 0, 0.433222,-99) , 
2, -0.0250323, 1, 0, 0.465209,-99) , 
1, 0.00216575, 1, 0, 0.495263,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0807932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494554, 0, 1, 0.588538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477352,-99) , 
5, -0.142039, 1, 0, 0.494074,-99) , 
3, 3.37226, 0, 0, 0.519216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461213,-99) , 
0, 0.50217, 1, 0, 0.523415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461122,-99) , 
0, 0.501626, 0, 0, 0.476517,-99) , 
2, -0.0326202, 1, 0, 0.488768,-99) , 
0, 0.496187, 1, 0, 0.498652,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0578881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501492, 1, 1, 0.578972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435212,-99) , 
2, -0.155286, 0, 0, 0.492898,-99) , 
0, 0.499043, 0, 0, 0.529528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487696,-99) , 
5, -0.464717, 1, 0, 0.491733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427245,-99) , 
5, -0.809381, 0, 0, 0.485096,-99) , 
2, -0.0252203, 1, 0, 0.497657,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0500649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497745, 1, 1, 0.513728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454011,-99) , 
3, 2.97485, 0, 0, 0.477912,-99) , 
0, 0.495322, 0, 0, 0.502904,-99) , 
NN(
0, 
0, 
-1, -0.0401267, 1, -1, 0.448008,-99) , 
0, 0.503802, 1, 0, 0.497233,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0638809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494575,-99) , 
1, 0.00314079, 1, 0, 0.550204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435895,-99) , 
0, 0.490153, 0, 0, 0.530528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489953,-99) , 
3, 2.9646, 0, 0, 0.49539,-99) , 
NN(
0, 
0, 
-1, 0.502882, 0, -1, 0.448834,-99) , 
3, 3.43692, 1, 0, 0.481554,-99) , 
0, 0.495232, 1, 0, 0.493348,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0570652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484297,-99) , 
0, 0.490337, 0, 0, 0.548749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488098,-99) , 
0, 0.498772, 0, 0, 0.506525,-99) , 
0, 0.49333, 1, 0, 0.512128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440198,-99) , 
5, 0.429073, 0, 0, 0.504261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421017,-99) , 
0, 0.501876, 1, 0, 0.483757,-99) , 
2, 0.0755527, 1, 0, 0.507666,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0528941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.768711, 1, 1, 0.51823,-99) , 
NN(
0, 
0, 
-1, 1.66493, 1, -1, 0.471186,-99) , 
5, -0.618922, 0, 0, 0.509965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529523,-99) , 
NN(
0, 
0, 
-1, -0.0749133, 1, -1, 0.44421,-99) , 
2, 0.0725197, 0, 0, 0.468402,-99) , 
3, 4.16621, 1, 0, 0.500647,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.065573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497142, 1, 1, 0.609752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4628,-99) , 
5, 0.782265, 0, 0, 0.508674,-99) , 
5, 0.618878, 1, 0, 0.535166,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0888924, 1, 1, 0.509733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447814,-99) , 
0, 0.502173, 0, 0, 0.470754,-99) , 
0, 0.498092, 1, 0, 0.48984,-99) , 
3, 3.37623, 0, 0, 0.502459,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0475159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.42059e-05, 1, 1, 0.54996,-99) , 
NN(
0, 
0, 
-1, 0.500867, 1, -1, 0.483771,-99) , 
0, 0.502262, 0, 0, 0.488961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505238,-99) , 
NN(
0, 
0, 
-1, 3.39344e-05, 1, -1, 0.399988,-99) , 
0, 0.505618, 0, 0, 0.439276,-99) , 
0, 0.503804, 1, 0, 0.483678,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0453696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.595723, 0, 1, 0.519944,-99) , 
NN(
0, 
0, 
-1, 0.00244332, 1, -1, 0.491123,-99) , 
5, 0.782316, 1, 0, 0.5043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567482,-99) , 
NN(
0, 
0, 
-1, -0.750401, 1, -1, 0.435082,-99) , 
3, 2.62152, 0, 0, 0.467143,-99) , 
5, -0.523681, 0, 0, 0.498011,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0516275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495843,-99) , 
3, 1.64823, 0, 0, 0.516724,-99) , 
NN(
0, 
0, 
-1, -0.65974, 1, -1, 0.464537,-99) , 
5, -0.523681, 0, 0, 0.507622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428461,-99) , 
3, 8.18935, 1, 0, 0.502944,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0570354);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484543,-99) , 
0, 0.495779, 0, 0, 0.502245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428497,-99) , 
5, 0.0930965, 1, 0, 0.45973,-99) , 
0, 0.5019, 1, 0, 0.494068,-99) , 
5, -0.904603, 1, 0, 0.499589,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.057405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491605,-99) , 
6, 0.00332286, 0, 0, 0.507319,-99) , 
6, 0.00634363, 0, 0, 0.531113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490894,-99) , 
0, 0.496501, 0, 0, 0.512444,-99) , 
NN(
0, 
0, 
-1, -0.0334365, 0, -1, 0.462033,-99) , 
0, 0.500943, 1, 0, 0.49994,-99) , 
5, 0.0476176, 1, 0, 0.506848,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0597028);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443498,-99) , 
0, 0.504757, 1, 0, 0.517062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459245,-99) , 
2, -0.138831, 1, 0, 0.477968,-99) , 
2, -0.0401844, 0, 0, 0.509143,-99) , 
2, -0.199619, 1, 0, 0.512206,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0295897);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580509,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0042679, 0, 1, 0.516068,-99) , 
NN(
0, 
0, 
-1, 0.498179, 0, -1, 0.487906,-99) , 
0, 0.495232, 1, 0, 0.494991,-99) , 
1, 0.00732719, 0, 0, 0.497143,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.050035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453061,-99) , 
0, 0.492375, 0, 0, 0.512912,-99) , 
5, 0.156501, 0, 0, 0.5334,-99) , 
NN(
NN(
0, 
0, 
-1, 0.755164, 1, 1, 0.514191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455142,-99) , 
5, 0.782321, 0, 0, 0.485688,-99) , 
0, 0.499994, 1, 0, 0.504864,-99) , 
5, 0.42863, 1, 0, 0.513471,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0452336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.669362, 1, 1, 0.587522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480094,-99) , 
5, -0.863789, 0, 0, 0.542839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440076,-99) , 
3, 0.463172, 0, 0, 0.497773,-99) , 
NN(
0, 
0, 
-1, 0.600812, 0, -1, 0.470002,-99) , 
3, 3.59152, 1, 0, 0.489445,-99) , 
5, -0.0475435, 1, 0, 0.500172,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0623789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491628,-99) , 
3, 3.22611, 1, 0, 0.569752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433606,-99) , 
0, 0.506072, 1, 0, 0.465508,-99) , 
0, 0.50512, 1, 0, 0.523463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477948,-99) , 
0, 0.495599, 1, 0, 0.489955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406519,-99) , 
3, 3.64422, 0, 0, 0.450003,-99) , 
2, -0.0681922, 0, 0, 0.482874,-99) , 
0, 0.502852, 0, 0, 0.488383,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0440338);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478698,-99) , 
1, 0.000606179, 1, 0, 0.496476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424396,-99) , 
1, -0.000260973, 0, 0, 0.46544,-99) , 
2, -0.0753658, 0, 0, 0.491573,-99) , 
NN(
0, 
0, 
-1, 0.506117, 1, -1, 0.426243,-99) , 
0, 0.504756, 1, 0, 0.486761,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.053897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47629,-99) , 
0, 0.496188, 0, 0, 0.502068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457822,-99) , 
2, 0.160782, 1, 0, 0.498388,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492335, 1, 1, 0.517106,-99) , 
NN(
0, 
0, 
-1, 3.52964, 0, -1, 0.424722,-99) , 
0, 0.495236, 1, 0, 0.450886,-99) , 
2, -0.0585956, 0, 0, 0.488941,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0352876);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0145161, 1, 1, 0.547258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476536,-99) , 
0, 0.502658, 1, 0, 0.495699,-99) , 
NN(
0, 
0, 
-1, 0.494287, 1, -1, 0.460327,-99) , 
0, 0.49605, 0, 0, 0.486099,-99) , 
0, 0.491424, 1, 0, 0.490316,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0610969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474816,-99) , 
5, 0.33533, 0, 0, 0.52317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475122,-99) , 
0, 0.493336, 0, 0, 0.516264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48254,-99) , 
3, 0.714431, 0, 0, 0.516446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468005,-99) , 
5, -0.523714, 1, 0, 0.47661,-99) , 
3, 1.26412, 1, 0, 0.491336,-99) , 
3, 4.14964, 0, 0, 0.4965,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0601764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0038664, 0, 1, 0.55738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482858,-99) , 
0, 0.491701, 1, 0, 0.508073,-99) , 
0, 0.49714, 0, 0, 0.536202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54104,-99) , 
NN(
0, 
0, 
-1, 0.497455, 0, -1, 0.489685,-99) , 
0, 0.49428, 1, 0, 0.498786,-99) , 
5, 0.714273, 1, 0, 0.515536,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0707603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495279, 1, 1, 0.533334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450401,-99) , 
0, 0.492378, 0, 0, 0.519461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473813,-99) , 
0, 0.499044, 0, 0, 0.528499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472213,-99) , 
1, -0.00410933, 1, 0, 0.477549,-99) , 
2, -0.0753658, 1, 0, 0.485635,-99) , 
5, -0.142792, 1, 0, 0.492123,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0811091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490354,-99) , 
0, 0.501899, 1, 0, 0.534846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464244,-99) , 
2, 0.0507926, 0, 0, 0.485871,-99) , 
0, 0.494281, 0, 0, 0.525116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476178,-99) , 
0, 0.496176, 1, 0, 0.493446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382799,-99) , 
5, -0.809419, 1, 0, 0.466041,-99) , 
5, -0.714152, 0, 0, 0.517204,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0617619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436284,-99) , 
0, 0.493739, 0, 0, 0.512951,-99) , 
0, 0.491426, 1, 0, 0.521497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499797,-99) , 
0, 0.494143, 1, 0, 0.510932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465302,-99) , 
5, 0.795793, 1, 0, 0.476749,-99) , 
0, 0.496187, 1, 0, 0.487739,-99) , 
5, 0.714172, 1, 0, 0.502669,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0391061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498147,-99) , 
0, 0.496186, 1, 0, 0.505318,-99) , 
5, -0.310597, 1, 0, 0.510165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454687,-99) , 
0, 0.495232, 0, 0, 0.506542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384883,-99) , 
3, 2.77686, 1, 0, 0.471544,-99) , 
5, -0.619035, 0, 0, 0.504451,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0520145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497144, 0, 1, 0.525847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424006,-99) , 
5, 0.351922, 0, 0, 0.493393,-99) , 
2, 0.0173828, 1, 0, 0.515204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479246,-99) , 
3, 2.0155, 0, 0, 0.504667,-99) , 
NN(
0, 
0, 
-1, -0.773056, 1, -1, 0.438832,-99) , 
2, -0.00956438, 0, 0, 0.475015,-99) , 
5, -0.0475105, 0, 0, 0.50653,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0757892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470591,-99) , 
5, 0.823157, 0, 0, 0.536564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48527,-99) , 
5, 0.836939, 1, 0, 0.504774,-99) , 
0, 0.499021, 0, 0, 0.517697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498606,-99) , 
5, -0.754907, 1, 0, 0.515404,-99) , 
NN(
0, 
0, 
-1, 0.497146, 1, -1, 0.443395,-99) , 
3, 1.86477, 1, 0, 0.476292,-99) , 
5, 0.714294, 0, 0, 0.498451,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0568416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503123, 0, 1, 0.525189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442041,-99) , 
0, 0.504755, 1, 0, 0.519274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452758,-99) , 
0, 0.504893, 1, 0, 0.510455,-99) , 
NN(
0, 
0, 
-1, 0.50054, 1, -1, 0.474562,-99) , 
0, 0.5019, 0, 0, 0.482478,-99) , 
1, -0.00100773, 0, 0, 0.507268,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0559569);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.238747, 1, 1, 0.565995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484555,-99) , 
5, 0.510251, 1, 0, 0.492707,-99) , 
NN(
0, 
0, 
-1, -0.510033, 1, -1, 0.463724,-99) , 
5, 0.142943, 0, 0, 0.485629,-99) , 
0, 0.492376, 1, 0, 0.49282,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0380627);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495778,-99) , 
0, 0.494552, 0, 0, 0.528227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459469,-99) , 
5, -0.723173, 0, 0, 0.501884,-99) , 
0, 0.496184, 1, 0, 0.510438,-99) , 
5, -0.904596, 1, 0, 0.514065,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0530933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.764146, 1, 1, 0.539333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482196,-99) , 
3, 3.28709, 0, 0, 0.499473,-99) , 
5, 0.618904, 0, 0, 0.522429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462402,-99) , 
3, 4.16621, 1, 0, 0.497981,-99) , 
NN(
0, 
0, 
-1, 0.000964675, 1, -1, 0.440127,-99) , 
0, 0.497273, 0, 0, 0.488955,-99) , 
0, 0.496184, 1, 0, 0.499587,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0533132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470219,-99) , 
3, 3.33184, 1, 0, 0.511053,-99) , 
1, -0.00171229, 1, 0, 0.535524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488328,-99) , 
0, 0.49605, 1, 0, 0.500012,-99) , 
NN(
0, 
0, 
-1, 0.489791, 1, -1, 0.449429,-99) , 
0, 0.491424, 0, 0, 0.496371,-99) , 
2, -0.0681922, 1, 0, 0.502865,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.041495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419364,-99) , 
2, 0.00420217, 1, 0, 0.488777,-99) , 
3, 2.97583, 0, 0, 0.52539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465573,-99) , 
0, 0.492242, 0, 0, 0.498709,-99) , 
NN(
0, 
0, 
-1, 0.143074, 1, -1, 0.441898,-99) , 
0, 0.501492, 1, 0, 0.490692,-99) , 
0, 0.503805, 0, 0, 0.494148,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0457966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.206287, 0, 1, 0.546668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44827,-99) , 
0, 0.50285, 1, 0, 0.495819,-99) , 
3, 2.85432, 0, 0, 0.512176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5054,-99) , 
NN(
0, 
0, 
-1, 0.882462, 1, -1, 0.46897,-99) , 
5, 0.927428, 0, 0, 0.484326,-99) , 
5, 0.809509, 1, 0, 0.500036,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0591167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473355,-99) , 
3, 3.6212, 1, 0, 0.553729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481633,-99) , 
5, -0.428413, 0, 0, 0.535155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472748,-99) , 
2, -0.0573264, 1, 0, 0.478467,-99) , 
0, 0.50557, 0, 0, 0.482141,-99) , 
0, 0.493328, 1, 0, 0.488915,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0369217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00603466, 0, 1, 0.515403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4427,-99) , 
6, 0.011521, 1, 0, 0.512984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45178,-99) , 
3, 8.18655, 1, 0, 0.509759,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.086413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.7647, 0, 1, 0.539484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476065,-99) , 
0, 0.491272, 1, 0, 0.498157,-99) , 
0, 0.494597, 0, 0, 0.521302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46797,-99) , 
0, 0.505454, 1, 0, 0.533091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449958,-99) , 
3, 5.61909, 0, 0, 0.460272,-99) , 
0, 0.503079, 0, 0, 0.478956,-99) , 
0, 0.49809, 1, 0, 0.499647,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0627782);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505799, 1, 1, 0.590449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447537,-99) , 
0, 0.49224, 0, 0, 0.503422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416241,-99) , 
5, 0.525207, 1, 0, 0.454149,-99) , 
2, -0.0681922, 0, 0, 0.494861,-99) , 
0, 0.503804, 0, 0, 0.503758,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0493725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714917, 1, 1, 0.548895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433695,-99) , 
2, -0.0703775, 0, 0, 0.495979,-99) , 
3, 4.17186, 0, 0, 0.506282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511513,-99) , 
NN(
0, 
0, 
-1, 0.238492, 1, -1, 0.431019,-99) , 
2, 0.015637, 0, 0, 0.459056,-99) , 
0, 0.493331, 0, 0, 0.499354,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0416814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486394,-99) , 
0, 0.494278, 1, 0, 0.508414,-99) , 
5, -0.410539, 0, 0, 0.522255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455385,-99) , 
5, 0.600787, 0, 0, 0.493133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403208,-99) , 
1, 0.00506547, 1, 0, 0.489521,-99) , 
5, -0.0476871, 1, 0, 0.496194,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0553013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532557,-99) , 
NN(
0, 
0, 
-1, 3.22855, 1, -1, 0.489706,-99) , 
2, 0.072414, 0, 0, 0.496129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429188,-99) , 
3, 1.0237, 0, 0, 0.510105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40255,-99) , 
5, 0.306162, 1, 0, 0.456528,-99) , 
2, -0.00956438, 1, 0, 0.477407,-99) , 
5, 0.714266, 0, 0, 0.487288,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0586815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491505, 0, 1, 0.578122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487557,-99) , 
0, 0.490339, 0, 0, 0.53598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484154,-99) , 
5, 0.292613, 1, 0, 0.493349,-99) , 
NN(
0, 
0, 
-1, 0.498909, 0, -1, 0.451912,-99) , 
5, -0.237994, 0, 0, 0.485275,-99) , 
0, 0.49238, 1, 0, 0.490469,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.040043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471947,-99) , 
2, 0.079259, 1, 0, 0.51699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458743,-99) , 
0, 0.49782, 0, 0, 0.493673,-99) , 
0, 0.496187, 1, 0, 0.501166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510602,-99) , 
NN(
0, 
0, 
-1, 2.93327, 1, -1, 0.455619,-99) , 
0, 0.50285, 0, 0, 0.466809,-99) , 
5, -0.523799, 0, 0, 0.495623,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.052956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487401,-99) , 
5, 0.619077, 0, 0, 0.511866,-99) , 
6, 0.00603475, 0, 0, 0.516933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448307,-99) , 
6, 0.0115212, 1, 0, 0.514712,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0659105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449258,-99) , 
5, 0.14268, 0, 0, 0.496894,-99) , 
6, 0.00635209, 0, 0, 0.502497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483378,-99) , 
0, 0.491893, 0, 0, 0.516809,-99) , 
NN(
0, 
0, 
-1, -0.077131, 1, -1, 0.456174,-99) , 
0, 0.493603, 1, 0, 0.474833,-99) , 
0, 0.498092, 0, 0, 0.488469,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.053155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471231,-99) , 
3, 3.43692, 1, 0, 0.499818,-99) , 
0, 0.496731, 1, 0, 0.507134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563502,-99) , 
NN(
0, 
0, 
-1, 0.396866, 0, -1, 0.470346,-99) , 
5, -0.809509, 1, 0, 0.479746,-99) , 
0, 0.496187, 0, 0, 0.497599,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0595571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.40072, 1, 1, 0.577385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490793,-99) , 
3, 0.852524, 1, 0, 0.504125,-99) , 
0, 0.49428, 1, 0, 0.519788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453805,-99) , 
1, -0.000803155, 0, 0, 0.487955,-99) , 
NN(
0, 
0, 
-1, 0.782344, 0, -1, 0.455545,-99) , 
0, 0.499036, 1, 0, 0.474994,-99) , 
5, 0.619057, 1, 0, 0.492057,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0425764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482762,-99) , 
0, 0.500595, 0, 0, 0.492829,-99) , 
NN(
0, 
0, 
-1, 0.506012, 0, -1, 0.452236,-99) , 
0, 0.505026, 1, 0, 0.490302,-99) , 
0, 0.489519, 1, 0, 0.49183,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0660038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492378, 1, 1, 0.533369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443065,-99) , 
3, 1.08563, 0, 0, 0.484684,-99) , 
5, -0.428565, 0, 0, 0.51425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471314,-99) , 
1, -0.000463022, 0, 0, 0.499048,-99) , 
NN(
0, 
0, 
-1, 0.918426, 1, -1, 0.454545,-99) , 
0, 0.497139, 1, 0, 0.472518,-99) , 
5, 0.714273, 1, 0, 0.491729,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0660346);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0474089, 1, 1, 0.564597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491607,-99) , 
6, 0.00460469, 0, 0, 0.511409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466186,-99) , 
0, 0.494148, 1, 0, 0.474197,-99) , 
5, 0.142848, 1, 0, 0.482514,-99) , 
0, 0.502851, 0, 0, 0.493556,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0740917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491256,-99) , 
3, 0.516343, 0, 0, 0.545339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476413,-99) , 
5, 0.333284, 0, 0, 0.506213,-99) , 
3, 1.28563, 1, 0, 0.521008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456269,-99) , 
0, 0.493963, 0, 0, 0.501852,-99) , 
NN(
0, 
0, 
-1, 0.00202716, 1, -1, 0.439479,-99) , 
0, 0.497138, 1, 0, 0.463353,-99) , 
3, 4.17042, 1, 0, 0.508227,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0571545);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478479,-99) , 
5, 0.71426, 1, 0, 0.496929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42034,-99) , 
0, 0.505573, 0, 0, 0.448199,-99) , 
0, 0.502852, 1, 0, 0.489623,-99) , 
3, 6.89592, 0, 0, 0.494009,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0716553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.21891, 1, 1, 0.569931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473512,-99) , 
3, 2.53082, 0, 0, 0.500375,-99) , 
1, 0.000677622, 0, 0, 0.527546,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475872,-99) , 
0, 0.497129, 0, 0, 0.505005,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.433281,-99) , 
5, 0.455851, 0, 0, 0.493196,-99) , 
5, -0.142725, 1, 0, 0.499714,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0404757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.572472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471849,-99) , 
5, 0.91832, 1, 0, 0.501572,-99) , 
5, -0.714084, 1, 0, 0.509537,-99) , 
NN(
0, 
0, 
-1, 0.100191, 1, -1, 0.481961,-99) , 
0, 0.499042, 1, 0, 0.497802,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0633259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.1921, 1, 1, 0.555613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447903,-99) , 
0, 0.504756, 1, 0, 0.540145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476264,-99) , 
5, 0.937806, 1, 0, 0.501853,-99) , 
NN(
0, 
0, 
-1, 0.499996, 1, -1, 0.463392,-99) , 
5, 0.782296, 0, 0, 0.485108,-99) , 
5, -0.142857, 1, 0, 0.494916,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0466822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49283,-99) , 
5, 0.955927, 0, 0, 0.500299,-99) , 
5, 0.0748501, 1, 0, 0.503981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421384,-99) , 
2, 0.00159943, 1, 0, 0.48036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411408,-99) , 
2, 0.0525671, 1, 0, 0.465087,-99) , 
5, -0.142852, 0, 0, 0.495675,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.052629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503486, 1, 1, 0.588756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498162,-99) , 
2, -0.0326202, 1, 0, 0.512361,-99) , 
5, 0.142907, 1, 0, 0.534011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478749,-99) , 
2, 0.00795385, 0, 0, 0.509164,-99) , 
NN(
0, 
0, 
-1, 0.614503, 0, -1, 0.482569,-99) , 
5, 0.5238, 1, 0, 0.490857,-99) , 
0, 0.500948, 0, 0, 0.501523,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0533775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501149, 1, 1, 0.531412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457121,-99) , 
5, -0.0476363, 0, 0, 0.522609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476997,-99) , 
0, 0.495237, 1, 0, 0.48562,-99) , 
3, 0.461014, 1, 0, 0.491924,-99) , 
3, 3.58945, 0, 0, 0.499838,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0415476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452985,-99) , 
0, 0.49055, 1, 0, 0.506653,-99) , 
0, 0.491469, 0, 0, 0.535715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540474,-99) , 
NN(
0, 
0, 
-1, 2.5933, 1, -1, 0.485455,-99) , 
3, 6.58979, 0, 0, 0.48991,-99) , 
0, 0.492376, 1, 0, 0.494265,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.082992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 0, 1, 0.549161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463688,-99) , 
3, 1.94327, 1, 0, 0.500649,-99) , 
2, -0.00870215, 1, 0, 0.523687,-99) , 
NN(
NN(
0, 
0, 
-1, 0.429001, 0, 1, 0.548153,-99) , 
NN(
0, 
0, 
-1, 0.00257266, 1, -1, 0.442019,-99) , 
0, 0.49809, 1, 0, 0.494075,-99) , 
2, 0.0646287, 1, 0, 0.518501,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0670977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.550887, 0, 1, 0.574075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483201,-99) , 
0, 0.494149, 0, 0, 0.498189,-99) , 
5, 0.714269, 1, 0, 0.531051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475845,-99) , 
1, -0.000271309, 0, 0, 0.503169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389564,-99) , 
3, 1.10228, 0, 0, 0.466461,-99) , 
5, -0.333238, 0, 0, 0.496958,-99) , 
0, 0.496187, 1, 0, 0.507756,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0727876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.646251, 1, 1, 0.574349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486316,-99) , 
5, 0.469408, 0, 0, 0.524586,-99) , 
2, -0.0789624, 1, 0, 0.532225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455702,-99) , 
3, 1.03424, 0, 0, 0.493524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387969,-99) , 
5, -0.455832, 1, 0, 0.477277,-99) , 
5, -0.238092, 0, 0, 0.521267,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0362294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505436, 1, -1, 0.492738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440464,-99) , 
0, 0.49673, 1, 0, 0.459917,-99) , 
2, 0.0725197, 1, 0, 0.487739,-99) , 
NN(
0, 
0, 
-1, 0.489428, 0, -1, 0.443453,-99) , 
0, 0.492376, 0, 0, 0.483038,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0743696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.413401, 0, 1, 0.610019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488319,-99) , 
0, 0.497126, 1, 0, 0.503473,-99) , 
5, 0.460304, 1, 0, 0.523015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457612,-99) , 
0, 0.494096, 0, 0, 0.500961,-99) , 
NN(
0, 
0, 
-1, 1.20829, 0, -1, 0.43975,-99) , 
0, 0.498087, 1, 0, 0.469525,-99) , 
5, -0.619041, 0, 0, 0.515119,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0663271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.251749, 1, 1, 0.52915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393385,-99) , 
5, -0.646329, 1, 0, 0.477592,-99) , 
5, -0.428463, 0, 0, 0.520325,-99) , 
NN(
0, 
0, 
-1, 0.494144, 1, -1, 0.455566,-99) , 
0, 0.495233, 0, 0, 0.503149,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0688328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55411, 0, 1, 0.561263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447957,-99) , 
0, 0.500952, 1, 0, 0.487008,-99) , 
5, -0.383235, 0, 0, 0.525485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482463,-99) , 
5, 0.872909, 0, 0, 0.510536,-99) , 
NN(
0, 
0, 
-1, 0.0140897, 1, -1, 0.468016,-99) , 
1, 0.000190971, 1, 0, 0.489844,-99) , 
5, 0.619028, 1, 0, 0.503054,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0433931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493419, 0, 1, 0.579007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496441,-99) , 
5, 0.714113, 1, 0, 0.533855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494134,-99) , 
0, 0.501774, 1, 0, 0.513912,-99) , 
NN(
0, 
0, 
-1, -0.333212, 0, -1, 0.487309,-99) , 
0, 0.499949, 0, 0, 0.499239,-99) , 
0, 0.495233, 1, 0, 0.507747,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0756939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431,-99) , 
5, 0.689098, 0, 0, 0.516723,-99) , 
5, 0.637168, 1, 0, 0.522433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458802,-99) , 
6, 0.00455219, 0, 0, 0.471981,-99) , 
1, -0.004848, 1, 0, 0.483313,-99) , 
5, 0.523768, 0, 0, 0.508888,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0804938);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484509,-99) , 
2, 0.029868, 1, 0, 0.520747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45626,-99) , 
5, 0.714545, 1, 0, 0.482922,-99) , 
3, 4.1725, 1, 0, 0.512576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450835,-99) , 
5, 0.419577, 1, 0, 0.468283,-99) , 
NN(
0, 
0, 
-1, 1.74029, 1, -1, 0.407531,-99) , 
5, -0.523555, 0, 0, 0.456558,-99) , 
0, 0.496187, 0, 0, 0.493177,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0479169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502307, 0, 1, 0.513629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452455,-99) , 
0, 0.504757, 1, 0, 0.509769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469319,-99) , 
5, 0.523653, 1, 0, 0.502762,-99) , 
NN(
0, 
0, 
-1, 0.50163, 0, -1, 0.453005,-99) , 
0, 0.497141, 1, 0, 0.472784,-99) , 
2, -0.0317224, 0, 0, 0.499536,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0460687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.63742, 1, 1, 0.565012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498908,-99) , 
0, 0.504756, 0, 0, 0.50731,-99) , 
1, -0.00282951, 1, 0, 0.515245,-99) , 
NN(
0, 
0, 
-1, 0.954636, 1, -1, 0.458719,-99) , 
5, 0.904752, 1, 0, 0.501241,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0424539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490432,-99) , 
2, -0.154968, 0, 0, 0.53713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424296,-99) , 
0, 0.505709, 1, 0, 0.505033,-99) , 
2, -0.0265212, 1, 0, 0.51396,-99) , 
NN(
0, 
0, 
-1, 0.497131, 1, -1, 0.476745,-99) , 
5, 0.904751, 1, 0, 0.504683,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0754218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.171848, 1, 1, 0.549796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467511,-99) , 
3, 1.53802, 1, 0, 0.487514,-99) , 
5, -0.836525, 0, 0, 0.537424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465998,-99) , 
5, 0.760973, 1, 0, 0.476325,-99) , 
5, 0.959176, 0, 0, 0.484596,-99) , 
5, 0.714302, 1, 0, 0.508069,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.039002);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492863,-99) , 
3, 3.72971, 0, 0, 0.503169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444825,-99) , 
3, 7.02461, 1, 0, 0.498877,-99) , 
0, 0.505709, 0, 0, 0.501235,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0278294);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00471593, 1, 1, 0.559096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499317,-99) , 
6, 0.00457319, 0, 0, 0.506145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415984,-99) , 
6, 0.0106709, 1, 0, 0.503437,-99) , 
5, -0.809303, 1, 0, 0.50816,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.042119);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490034,-99) , 
0, 0.499308, 0, 0, 0.50209,-99) , 
NN(
0, 
0, 
-1, 0.504724, 0, -1, 0.436841,-99) , 
0, 0.503986, 1, 0, 0.498289,-99) , 
0, 0.505709, 0, 0, 0.501653,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0767291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463832,-99) , 
0, 0.492516, 0, 0, 0.525766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479019,-99) , 
6, 0.00411835, 0, 0, 0.492198,-99) , 
0, 0.499044, 1, 0, 0.511634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421839,-99) , 
5, -0.904611, 0, 0, 0.505596,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0620323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.129532, 1, 1, 0.591162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453122,-99) , 
0, 0.494603, 1, 0, 0.522183,-99) , 
0, 0.498095, 0, 0, 0.554641,-99) , 
NN(
NN(
0, 
0, 
-1, 0.319832, 1, 1, 0.518097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461796,-99) , 
3, 0.533258, 1, 0, 0.470988,-99) , 
5, 0.0476849, 0, 0, 0.506919,-99) , 
2, 0.069381, 0, 0, 0.513989,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.065517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.713831, 1, 1, 0.558973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445504,-99) , 
0, 0.504951, 0, 0, 0.507482,-99) , 
0, 0.504119, 1, 0, 0.540658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479026,-99) , 
0, 0.495866, 1, 0, 0.496894,-99) , 
NN(
0, 
0, 
-1, 0.493327, 0, -1, 0.462764,-99) , 
3, 3.56867, 1, 0, 0.488183,-99) , 
0, 0.500945, 0, 0, 0.501173,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0744754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48878,-99) , 
2, -0.0593128, 0, 0, 0.567644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491244,-99) , 
5, 0.142959, 1, 0, 0.504183,-99) , 
0, 0.495236, 1, 0, 0.518915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436274,-99) , 
0, 0.494283, 0, 0, 0.507171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379964,-99) , 
2, 0.069813, 0, 0, 0.421676,-99) , 
2, 0.0056807, 1, 0, 0.473204,-99) , 
1, 0.00145893, 1, 0, 0.50606,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0683372);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.50512, 0, 1, 0.526322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416092,-99) , 
2, 0.0810554, 1, 0, 0.512418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434514,-99) , 
0, 0.496103, 1, 0, 0.46044,-99) , 
0, 0.495326, 1, 0, 0.492742,-99) , 
0, 0.49714, 0, 0, 0.512438,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0287292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494084,-99) , 
0, 0.499039, 0, 0, 0.532909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479743,-99) , 
5, 0.346932, 0, 0, 0.500427,-99) , 
5, -0.5238, 1, 0, 0.504771,-99) , 
NN(
0, 
0, 
-1, -0.33242, 0, -1, 0.426166,-99) , 
1, 0.00548355, 1, 0, 0.500532,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0621467);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590066,-99) , 
NN(
NN(
0, 
0, 
-1, 0.619062, 0, 1, 0.525389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471213,-99) , 
5, -0.618883, 1, 0, 0.483004,-99) , 
0, 0.497006, 0, 0, 0.5093,-99) , 
0, 0.490476, 1, 0, 0.512773,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0505662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00156628, 1, 1, 0.568799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48017,-99) , 
5, -0.428409, 0, 0, 0.544372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476059,-99) , 
5, -0.333185, 0, 0, 0.524396,-99) , 
NN(
0, 
0, 
-1, 0.498181, 1, -1, 0.481201,-99) , 
0, 0.502535, 0, 0, 0.488543,-99) , 
0, 0.492376, 1, 0, 0.493676,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0490208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.727623, 0, 1, 0.528964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41268,-99) , 
0, 0.492374, 0, 0, 0.508149,-99) , 
NN(
0, 
0, 
-1, 0.00925154, 1, -1, 0.478354,-99) , 
5, -0.428333, 1, 0, 0.483126,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0707313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.012865, 0, 1, 0.528255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451383,-99) , 
0, 0.496189, 1, 0, 0.4846,-99) , 
2, -0.0601798, 0, 0, 0.519649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523675,-99) , 
NN(
0, 
0, 
-1, 0.49808, 1, -1, 0.433259,-99) , 
5, -0.850339, 0, 0, 0.45924,-99) , 
5, -0.714275, 0, 0, 0.511117,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0475606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50246, 0, 1, 0.580063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447008,-99) , 
0, 0.500945, 1, 0, 0.509591,-99) , 
5, -0.510272, 0, 0, 0.53306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428196,-99) , 
6, 0.00030285, 0, 0, 0.491829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386128,-99) , 
6, 0.00635241, 1, 0, 0.486857,-99) , 
5, 0.142832, 1, 0, 0.497296,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0559101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494326, 1, 1, 0.521704,-99) , 
NN(
0, 
0, 
-1, 0.238233, 1, -1, 0.454885,-99) , 
0, 0.491967, 0, 0, 0.510884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463593,-99) , 
3, 1.03507, 0, 0, 0.499425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451297,-99) , 
5, 0.80951, 1, 0, 0.479561,-99) , 
0, 0.499041, 1, 0, 0.497948,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0739062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468818,-99) , 
0, 0.499992, 1, 0, 0.509703,-99) , 
5, 0.239526, 1, 0, 0.521507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483103,-99) , 
0, 0.497138, 1, 0, 0.512699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456403,-99) , 
5, 0.0477203, 1, 0, 0.47136,-99) , 
3, 1.78033, 0, 0, 0.488404,-99) , 
3, 3.59152, 0, 0, 0.496734,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0371392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478228,-99) , 
5, 0.333373, 0, 0, 0.498815,-99) , 
0, 0.494011, 1, 0, 0.502875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515066,-99) , 
NN(
0, 
0, 
-1, 0.491426, 0, -1, 0.444608,-99) , 
5, 0.238153, 1, 0, 0.467007,-99) , 
0, 0.49333, 0, 0, 0.497577,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0392926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487359,-99) , 
0, 0.503804, 0, 0, 0.49221,-99) , 
3, 6.59017, 0, 0, 0.495858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438781,-99) , 
2, -0.196956, 0, 0, 0.492921,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0556144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809229, 1, 1, 0.538101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460603,-99) , 
2, 0.082476, 1, 0, 0.516773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516111,-99) , 
NN(
0, 
0, 
-1, 1.04962, 0, -1, 0.474348,-99) , 
5, 0.904596, 0, 0, 0.483338,-99) , 
3, 3.35558, 0, 0, 0.492744,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0521545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.96201, 0, 1, 0.583701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488359,-99) , 
2, 0.167041, 0, 0, 0.49433,-99) , 
0, 0.492376, 1, 0, 0.502992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440062,-99) , 
3, 6.60657, 1, 0, 0.497628,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0359687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00356292, 0, 1, 0.514494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445004,-99) , 
1, 0.00492934, 1, 0, 0.511556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442704,-99) , 
6, 0.00941483, 1, 0, 0.50859,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0552145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489993,-99) , 
0, 0.499998, 1, 0, 0.528122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467441,-99) , 
3, 0.775238, 1, 0, 0.485537,-99) , 
5, -0.346934, 0, 0, 0.510892,-99) , 
NN(
0, 
0, 
-1, 0.495232, 0, -1, 0.479938,-99) , 
5, 0.714272, 1, 0, 0.493754,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0563741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00137521, 1, 1, 0.531609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469045,-99) , 
5, 0.959182, 1, 0, 0.519476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499588,-99) , 
5, -0.53339, 0, 0, 0.514396,-99) , 
NN(
0, 
0, 
-1, 0.644339, 1, -1, 0.467906,-99) , 
5, -0.020304, 1, 0, 0.489178,-99) , 
5, 0.714303, 0, 0, 0.505493,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0534527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492152, 0, 1, 0.597051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46279,-99) , 
5, 0.238222, 0, 0, 0.506172,-99) , 
0, 0.497136, 1, 0, 0.544554,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499042, 0, 1, 0.573562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35754,-99) , 
5, -0.723148, 0, 0, 0.504023,-99) , 
5, -0.809313, 1, 0, 0.510591,-99) , 
2, -0.066125, 1, 0, 0.516656,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0594508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431159,-99) , 
0, 0.493736, 0, 0, 0.524222,-99) , 
0, 0.491424, 1, 0, 0.531361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494581,-99) , 
0, 0.497142, 0, 0, 0.510042,-99) , 
NN(
0, 
0, 
-1, 2.93349, 1, -1, 0.473767,-99) , 
5, 0.854861, 0, 0, 0.494098,-99) , 
5, 0.619037, 1, 0, 0.50752,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0472688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.87607, 1, 1, 0.517873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439432,-99) , 
3, 8.18655, 1, 0, 0.513222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437706,-99) , 
5, -0.904741, 0, 0, 0.50743,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.067927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.03607, 0, 1, 0.593808,-99) , 
NN(
0, 
0, 
-1, 0.891155, 1, -1, 0.482338,-99) , 
5, 0.42864, 1, 0, 0.489965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455396,-99) , 
5, -0.611097, 0, 0, 0.481939,-99) , 
NN(
0, 
0, 
-1, -0.0280513, 0, -1, 0.391082,-99) , 
5, -0.183537, 1, 0, 0.459837,-99) , 
5, 0.142954, 0, 0, 0.482246,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.067146);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487139,-99) , 
5, 0.91836, 1, 0, 0.52002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468288,-99) , 
0, 0.494286, 1, 0, 0.486295,-99) , 
5, 0.142947, 0, 0, 0.511272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450241,-99) , 
0, 0.495237, 0, 0, 0.491477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440087,-99) , 
0, 0.499045, 1, 0, 0.468783,-99) , 
2, -0.0789454, 0, 0, 0.504302,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.082511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56935, 0, 1, 0.611678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47509,-99) , 
5, -0.567692, 1, 0, 0.519439,-99) , 
5, -0.174685, 0, 0, 0.541094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458932,-99) , 
5, 0.708004, 0, 0, 0.497085,-99) , 
NN(
0, 
0, 
-1, 0.496188, 1, -1, 0.462656,-99) , 
5, 0.854861, 1, 0, 0.481052,-99) , 
5, 0.238092, 1, 0, 0.496216,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0734312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.795986, 1, 1, 0.534348,-99) , 
NN(
0, 
0, 
-1, 0.50217, 0, -1, 0.480309,-99) , 
0, 0.499994, 1, 0, 0.517387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455089,-99) , 
3, 0.741113, 0, 0, 0.534582,-99) , 
NN(
0, 
0, 
-1, -0.102033, 0, -1, 0.461404,-99) , 
5, -0.428564, 1, 0, 0.487102,-99) , 
5, 0.714273, 0, 0, 0.503648,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0657221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.38765, 1, 1, 0.53972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469301,-99) , 
5, -0.71411, 0, 0, 0.527243,-99) , 
NN(
NN(
0, 
0, 
-1, -0.546569, 0, 1, 0.548981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470344,-99) , 
0, 0.496187, 1, 0, 0.485793,-99) , 
5, -0.0475451, 1, 0, 0.496377,-99) , 
1, -0.00100773, 1, 0, 0.506148,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0623594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501201, 1, 1, 0.533907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490524,-99) , 
5, 0.909159, 0, 0, 0.505961,-99) , 
0, 0.499996, 0, 0, 0.514717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459192,-99) , 
0, 0.498087, 0, 0, 0.494763,-99) , 
NN(
0, 
0, 
-1, -0.000828854, 1, -1, 0.422429,-99) , 
5, -0.650793, 1, 0, 0.464319,-99) , 
5, 0.0476197, 0, 0, 0.502653,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0519422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497002, 1, 1, 0.520807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471672,-99) , 
3, 0.735921, 1, 0, 0.489234,-99) , 
0, 0.495233, 0, 0, 0.512854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466009,-99) , 
3, 6.71541, 1, 0, 0.508618,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0682788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419167,-99) , 
0, 0.503123, 1, 0, 0.511417,-99) , 
0, 0.504756, 0, 0, 0.516957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465289,-99) , 
0, 0.498088, 0, 0, 0.492306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429954,-99) , 
5, 0.959041, 1, 0, 0.480222,-99) , 
5, 0.71415, 1, 0, 0.496728,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0830103);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.950085, 1, 1, 0.532387,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495237, 1, 1, 0.538774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45462,-99) , 
0, 0.503804, 0, 0, 0.4642,-99) , 
2, -0.0157509, 1, 0, 0.488359,-99) , 
5, 0.904734, 0, 0, 0.498782,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0684529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.38106, 1, 1, 0.565459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485453,-99) , 
5, 0.618733, 1, 0, 0.519042,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45801,-99) , 
0, 0.491483, 0, 0, 0.508596,-99) , 
NN(
0, 
0, 
-1, 0.428383, 0, -1, 0.449993,-99) , 
0, 0.49777, 1, 0, 0.485758,-99) , 
0, 0.500945, 0, 0, 0.493984,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0603916);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.421516, 1, 1, 0.524251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488469,-99) , 
0, 0.499907, 1, 0, 0.508411,-99) , 
NN(
0, 
0, 
-1, 0.238066, 0, -1, 0.435492,-99) , 
0, 0.498093, 0, 0, 0.47394,-99) , 
3, 3.41112, 1, 0, 0.509013,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0736138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467962,-99) , 
0, 0.497138, 1, 0, 0.520152,-99) , 
0, 0.500948, 0, 0, 0.537909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472339,-99) , 
2, 0.152964, 0, 0, 0.479275,-99) , 
0, 0.490471, 1, 0, 0.484052,-99) , 
2, -0.0681922, 1, 0, 0.492962,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.062695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714271, 1, 1, 0.521678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443617,-99) , 
0, 0.497138, 0, 0, 0.483679,-99) , 
5, 0.333318, 0, 0, 0.510697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476496,-99) , 
0, 0.493062, 0, 0, 0.53715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407161,-99) , 
0, 0.502627, 0, 0, 0.441541,-99) , 
0, 0.497142, 1, 0, 0.47934,-99) , 
2, -0.0681922, 0, 0, 0.505311,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0492923);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454477,-99) , 
5, -0.836722, 0, 0, 0.525487,-99) , 
NN(
0, 
0, 
-1, 0.2654, 0, -1, 0.489151,-99) , 
5, 0.142856, 1, 0, 0.497084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428181,-99) , 
0, 0.490471, 0, 0, 0.493544,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0654327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.282806, 1, 1, 0.528833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450626,-99) , 
3, 2.15179, 0, 0, 0.489883,-99) , 
5, -0.727875, 0, 0, 0.522245,-99) , 
NN(
0, 
0, 
-1, 0.945614, 1, -1, 0.469487,-99) , 
5, 0.904744, 1, 0, 0.508927,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0621601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.351521, 0, 1, 0.56295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474748,-99) , 
0, 0.498089, 1, 0, 0.49489,-99) , 
5, 0.551067, 1, 0, 0.505807,-99) , 
NN(
0, 
0, 
-1, 0.491428, 0, -1, 0.455222,-99) , 
5, -0.0475365, 0, 0, 0.494897,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0502474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.72271, 0, 1, 0.5374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468257,-99) , 
2, -0.0580509, 0, 0, 0.523245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553448,-99) , 
NN(
0, 
0, 
-1, 0.0477394, 0, -1, 0.478837,-99) , 
0, 0.504755, 0, 0, 0.48268,-99) , 
5, -0.333237, 1, 0, 0.489565,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0491901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714305, 1, 1, 0.534213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465055,-99) , 
0, 0.505709, 1, 0, 0.523445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484673,-99) , 
0, 0.49366, 1, 0, 0.491769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409123,-99) , 
0, 0.500312, 1, 0, 0.485683,-99) , 
0, 0.500947, 0, 0, 0.495107,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0523556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490993,-99) , 
5, 0.619065, 0, 0, 0.518873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485835,-99) , 
0, 0.4936, 1, 0, 0.495834,-99) , 
0, 0.499042, 0, 0, 0.505408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470357,-99) , 
5, 0.746135, 0, 0, 0.502125,-99) , 
NN(
0, 
0, 
-1, 2.71995, 1, -1, 0.390843,-99) , 
5, 0.333597, 0, 0, 0.468083,-99) , 
2, 0.0646287, 1, 0, 0.498455,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0658318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57862, 1, 1, 0.578006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425994,-99) , 
5, 0.717336, 0, 0, 0.504081,-99) , 
5, 0.650814, 1, 0, 0.515141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527376,-99) , 
NN(
0, 
0, 
-1, 2.22541, 1, -1, 0.456303,-99) , 
3, 4.15259, 0, 0, 0.463323,-99) , 
5, 0.333328, 0, 0, 0.499784,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0748004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482615,-99) , 
2, -0.00564212, 0, 0, 0.511542,-99) , 
2, 0.0293051, 0, 0, 0.536868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464268,-99) , 
1, -0.000414507, 1, 0, 0.490344,-99) , 
6, 0.00869129, 0, 0, 0.49255,-99) , 
5, -0.71414, 1, 0, 0.497893,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0693213);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480314,-99) , 
2, -0.0902583, 0, 0, 0.557657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45739,-99) , 
5, -0.906502, 1, 0, 0.485856,-99) , 
5, -0.346803, 0, 0, 0.527413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465534,-99) , 
1, 0.000306171, 0, 0, 0.483537,-99) , 
0, 0.499994, 0, 0, 0.492471,-99) , 
5, 0.714303, 1, 0, 0.507738,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0286574);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572287,-99) , 
NN(
0, 
0, 
-1, -0.0030847, 0, -1, 0.492749,-99) , 
6, 0.00925149, 0, 0, 0.495196,-99) , 
5, -0.904611, 1, 0, 0.501044,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0513059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493205,-99) , 
0, 0.500267, 1, 0, 0.527377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413794,-99) , 
0, 0.490471, 0, 0, 0.518142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522927,-99) , 
NN(
0, 
0, 
-1, 0.495375, 0, -1, 0.481227,-99) , 
0, 0.493331, 1, 0, 0.486099,-99) , 
5, 0.618929, 1, 0, 0.497555,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0770689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467057,-99) , 
3, 3.13826, 1, 0, 0.561007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478341,-99) , 
3, 0.76309, 0, 0, 0.539155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478901,-99) , 
0, 0.500629, 1, 0, 0.511111,-99) , 
NN(
0, 
0, 
-1, 0.115708, 0, -1, 0.464017,-99) , 
0, 0.497138, 0, 0, 0.491654,-99) , 
5, -0.238088, 1, 0, 0.500058,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0410524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504756, 0, 1, 0.519805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468824,-99) , 
5, 0.954688, 1, 0, 0.490536,-99) , 
5, 0.904745, 1, 0, 0.512722,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0867043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492103, 1, 1, 0.541878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473057,-99) , 
0, 0.501718, 0, 0, 0.500101,-99) , 
5, 0.238137, 0, 0, 0.530937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613441,-99) , 
NN(
0, 
0, 
-1, 0.152066, 0, -1, 0.458549,-99) , 
5, -0.619064, 1, 0, 0.481171,-99) , 
0, 0.495233, 0, 0, 0.517924,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0442273);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48816,-99) , 
5, 0.365153, 1, 0, 0.498582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443826,-99) , 
5, -0.904539, 0, 0, 0.494949,-99) , 
0, 0.490471, 1, 0, 0.498395,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0684504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.8809, 1, 1, 0.560654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484646,-99) , 
5, 0.120214, 0, 0, 0.507752,-99) , 
3, 3.04206, 0, 0, 0.523061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477673,-99) , 
5, 0.94549, 0, 0, 0.499486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44319,-99) , 
0, 0.500936, 1, 0, 0.487111,-99) , 
5, 0.809512, 1, 0, 0.507179,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0750215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.528172, 0, 1, 0.566132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405319,-99) , 
0, 0.503803, 1, 0, 0.536255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489232,-99) , 
1, -0.00112328, 0, 0, 0.521201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442625,-99) , 
0, 0.497141, 0, 0, 0.476959,-99) , 
5, 0.854882, 0, 0, 0.498043,-99) , 
5, 0.238173, 1, 0, 0.507324,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0552404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486912,-99) , 
0, 0.497774, 0, 0, 0.503892,-99) , 
5, -0.809505, 1, 0, 0.509673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547716,-99) , 
NN(
0, 
0, 
-1, 0.503698, 1, -1, 0.46611,-99) , 
0, 0.505391, 0, 0, 0.480198,-99) , 
0, 0.500947, 1, 0, 0.502115,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0659757);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.618967, 1, 1, 0.534765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537519,-99) , 
NN(
0, 
0, 
-1, -0.12002, 0, -1, 0.469415,-99) , 
5, -0.809288, 1, 0, 0.475758,-99) , 
0, 0.498092, 1, 0, 0.504291,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.05374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0354617, 1, 1, 0.645474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497394,-99) , 
5, -0.877397, 0, 0, 0.579202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4915,-99) , 
5, 0.455819, 1, 0, 0.496978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414995,-99) , 
6, 0.00635226, 1, 0, 0.493064,-99) , 
5, -0.142766, 1, 0, 0.508029,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0742024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478603,-99) , 
2, -0.0694614, 0, 0, 0.530307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447507,-99) , 
0, 0.491696, 1, 0, 0.484791,-99) , 
0, 0.493328, 0, 0, 0.521579,-99) , 
NN(
NN(
0, 
0, 
-1, 1.5189, 1, 1, 0.554728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456362,-99) , 
2, -0.0357856, 1, 0, 0.473446,-99) , 
5, -0.14277, 1, 0, 0.4905,-99) , 
0, 0.500947, 1, 0, 0.513129,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0403685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462002,-99) , 
0, 0.506059, 0, 0, 0.506219,-99) , 
0, 0.504892, 1, 0, 0.535555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545808,-99) , 
NN(
0, 
0, 
-1, -0.813917, 0, -1, 0.485839,-99) , 
5, -0.904741, 1, 0, 0.489108,-99) , 
0, 0.503803, 0, 0, 0.493266,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0481922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238143, 1, 1, 0.517761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44463,-99) , 
0, 0.498817, 0, 0, 0.46793,-99) , 
2, 0.0741566, 1, 0, 0.509999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401924,-99) , 
0, 0.505708, 1, 0, 0.504943,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0400548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497474,-99) , 
3, 7.05018, 0, 0, 0.502871,-99) , 
5, 0.152004, 1, 0, 0.506078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408532,-99) , 
5, -0.457838, 1, 0, 0.475967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412969,-99) , 
5, -0.909148, 0, 0, 0.455944,-99) , 
5, -0.0475451, 0, 0, 0.495524,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0653943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.455828, 1, 1, 0.561136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462295,-99) , 
0, 0.503809, 0, 0, 0.486137,-99) , 
5, -0.428452, 0, 0, 0.544878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470478,-99) , 
5, 0.827629, 0, 0, 0.490485,-99) , 
5, -0.809509, 1, 0, 0.49639,-99) , 
0, 0.500947, 0, 0, 0.508718,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.069405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439735,-99) , 
0, 0.490562, 0, 0, 0.526508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439971,-99) , 
5, 0.523944, 1, 0, 0.469171,-99) , 
2, -0.0648558, 0, 0, 0.516716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476614,-99) , 
0, 0.502169, 0, 0, 0.493381,-99) , 
NN(
0, 
0, 
-1, 0.501809, 0, -1, 0.45537,-99) , 
5, 0.618942, 0, 0, 0.477169,-99) , 
0, 0.499995, 1, 0, 0.503016,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0581285);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142751, 1, 1, 0.54551,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0476772, 1, 1, 0.521116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459215,-99) , 
2, 0.00737791, 1, 0, 0.48752,-99) , 
0, 0.499041, 0, 0, 0.501088,-99) , 
2, -0.066125, 1, 0, 0.508718,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0457952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499677,-99) , 
0, 0.49428, 1, 0, 0.508758,-99) , 
5, 0.0567567, 1, 0, 0.513344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482744,-99) , 
0, 0.499042, 0, 0, 0.509763,-99) , 
NN(
0, 
0, 
-1, 0.498085, 1, -1, 0.394922,-99) , 
3, 2.3702, 1, 0, 0.465299,-99) , 
5, -0.238, 0, 0, 0.503764,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0473394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485862,-99) , 
2, 0.0725197, 1, 0, 0.53185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476615,-99) , 
5, 0.523837, 0, 0, 0.5013,-99) , 
0, 0.495368, 1, 0, 0.509581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44201,-99) , 
0, 0.505706, 1, 0, 0.506573,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.073037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.002162, 0, 1, 0.551331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486395,-99) , 
0, 0.498103, 0, 0, 0.497862,-99) , 
5, 0.891155, 1, 0, 0.527468,-99) , 
NN(
NN(
0, 
0, 
-1, -0.305821, 1, 1, 0.582118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473039,-99) , 
0, 0.503802, 0, 0, 0.484144,-99) , 
3, 0.833425, 1, 0, 0.502622,-99) , 
5, 0.619065, 0, 0, 0.518092,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0590473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00240127, 1, 1, 0.533694,-99) , 
NN(
0, 
0, 
-1, 0.501049, 0, -1, 0.482276,-99) , 
0, 0.500358, 1, 0, 0.502314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477306,-99) , 
2, 0.0646287, 0, 0, 0.488609,-99) , 
NN(
0, 
0, 
-1, 2.10653, 1, -1, 0.429,-99) , 
0, 0.497092, 1, 0, 0.477186,-99) , 
0, 0.49809, 0, 0, 0.48968,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0345169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.709805, 1, 1, 0.511059,-99) , 
NN(
0, 
0, 
-1, 4.4652, 1, -1, 0.481097,-99) , 
5, 0.619065, 0, 0, 0.499431,-99) , 
NN(
0, 
0, 
-1, -0.0481872, 0, -1, 0.442201,-99) , 
0, 0.504757, 1, 0, 0.495307,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0648942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.305955, 0, 1, 0.537303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45194,-99) , 
0, 0.505165, 0, 0, 0.475855,-99) , 
0, 0.5019, 1, 0, 0.522515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492263,-99) , 
0, 0.497121, 1, 0, 0.508691,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.45076,-99) , 
5, 0.836719, 0, 0, 0.491365,-99) , 
5, 0.714263, 1, 0, 0.505039,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0400105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.48087, 0, 1, 0.563529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499599,-99) , 
2, 0.0263281, 0, 0, 0.508182,-99) , 
2, 0.0839716, 0, 0, 0.515791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52031,-99) , 
NN(
0, 
0, 
-1, 0.873119, 1, -1, 0.473199,-99) , 
3, 3.4585, 0, 0, 0.489023,-99) , 
5, 0.809531, 1, 0, 0.504033,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0588258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408833,-99) , 
5, -0.4945, 1, 0, 0.507076,-99) , 
5, -0.183576, 0, 0, 0.527583,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.522064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471752,-99) , 
0, 0.499035, 0, 0, 0.484069,-99) , 
3, 3.36298, 0, 0, 0.496569,-99) , 
5, 0.142959, 1, 0, 0.503708,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0570751);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497969,-99) , 
3, 1.77676, 1, 0, 0.525845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47204,-99) , 
0, 0.498091, 1, 0, 0.494899,-99) , 
5, 0.714164, 1, 0, 0.508969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421122,-99) , 
2, -0.206407, 0, 0, 0.504036,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0351257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417477,-99) , 
0, 0.506136, 1, 0, 0.507685,-99) , 
NN(
0, 
0, 
-1, 0.491404, 0, -1, 0.45082,-99) , 
0, 0.492104, 0, 0, 0.504501,-99) , 
0, 0.490471, 1, 0, 0.506826,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0584312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495239, 1, 1, 0.544043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461512,-99) , 
0, 0.496184, 0, 0, 0.498956,-99) , 
2, -0.0418331, 1, 0, 0.509276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479706,-99) , 
0, 0.497758, 0, 0, 0.498051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452573,-99) , 
0, 0.500927, 1, 0, 0.488222,-99) , 
5, 0.809522, 1, 0, 0.500006,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0492564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4903,-99) , 
0, 0.493683, 0, 0, 0.517836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428374,-99) , 
0, 0.489882, 0, 0, 0.50998,-99) , 
NN(
0, 
0, 
-1, 0.498136, 0, -1, 0.478086,-99) , 
0, 0.497138, 1, 0, 0.491126,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.02727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47377,-99) , 
5, -0.451104, 0, 0, 0.55111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499523,-99) , 
6, 0.00514807, 0, 0, 0.502296,-99) , 
1, 0.00260842, 0, 0, 0.509121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45731,-99) , 
5, -0.904741, 0, 0, 0.505491,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0467589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426761,-99) , 
5, 0.6372, 0, 0, 0.501477,-99) , 
5, 0.238151, 1, 0, 0.535394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490991,-99) , 
0, 0.50462, 0, 0, 0.495874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414903,-99) , 
0, 0.506344, 1, 0, 0.493366,-99) , 
0, 0.494284, 1, 0, 0.501161,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0576009);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.525717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469227,-99) , 
0, 0.493332, 1, 0, 0.479568,-99) , 
2, 0.0741566, 1, 0, 0.518235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538432,-99) , 
NN(
0, 
0, 
-1, -0.863771, 1, -1, 0.451161,-99) , 
3, 2.44397, 0, 0, 0.476077,-99) , 
5, -0.71414, 0, 0, 0.512826,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0901868);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445894,-99) , 
2, -0.0959927, 0, 0, 0.536636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398172,-99) , 
2, 0.115321, 1, 0, 0.45305,-99) , 
2, 0.0503127, 1, 0, 0.516671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463958,-99) , 
5, 0.405386, 1, 0, 0.468105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36953,-99) , 
5, 0.265365, 0, 0, 0.463739,-99) , 
5, 0.142921, 1, 0, 0.476015,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0489072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.28631, 0, 1, 0.518621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425878,-99) , 
3, 3.45095, 1, 0, 0.461372,-99) , 
2, 0.115694, 1, 0, 0.512134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438559,-99) , 
2, -0.205264, 0, 0, 0.508102,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.056679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.782184, 1, 1, 0.556329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49532,-99) , 
0, 0.501717, 0, 0, 0.508515,-99) , 
0, 0.495234, 1, 0, 0.519792,-99) , 
NN(
0, 
0, 
-1, 0.700568, 0, -1, 0.455057,-99) , 
5, -0.523636, 0, 0, 0.509492,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.065705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473949,-99) , 
0, 0.498096, 0, 0, 0.53642,-99) , 
0, 0.494281, 1, 0, 0.55035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442954,-99) , 
0, 0.502852, 1, 0, 0.520971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484812,-99) , 
0, 0.492377, 1, 0, 0.492438,-99) , 
3, 3.51296, 0, 0, 0.501153,-99) , 
5, -0.428404, 1, 0, 0.508682,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0673395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499736,-99) , 
5, 0.873011, 1, 0, 0.530428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417572,-99) , 
6, 0.0071572, 1, 0, 0.525287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519433,-99) , 
NN(
0, 
0, 
-1, -0.650694, 1, -1, 0.45897,-99) , 
0, 0.494281, 1, 0, 0.471993,-99) , 
5, -0.333234, 0, 0, 0.515537,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0651431);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.496177, 0, 1, 0.535437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47204,-99) , 
5, -0.655125, 1, 0, 0.482913,-99) , 
0, 0.504757, 0, 0, 0.488668,-99) , 
5, 0.809531, 0, 0, 0.508573,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0658995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.665682, 1, 1, 0.534307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484719,-99) , 
5, 0.945524, 1, 0, 0.522795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487875,-99) , 
1, 0.00253002, 0, 0, 0.503812,-99) , 
NN(
0, 
0, 
-1, 0.497132, 1, -1, 0.414125,-99) , 
3, 0.803784, 0, 0, 0.483125,-99) , 
5, 0.619028, 0, 0, 0.507794,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0536641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619082, 1, 1, 0.56711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456415,-99) , 
0, 0.493332, 0, 0, 0.548632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497391,-99) , 
5, 0.709768, 1, 0, 0.51131,-99) , 
NN(
0, 
0, 
-1, 1.85372, 0, -1, 0.457366,-99) , 
5, -0.523797, 0, 0, 0.502472,-99) , 
2, -0.0680797, 1, 0, 0.510362,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0411095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.12564, 1, 1, 0.587448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40852,-99) , 
5, 0.116099, 0, 0, 0.507356,-99) , 
5, -0.428044, 1, 0, 0.519305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456351,-99) , 
5, -0.523681, 0, 0, 0.494557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45348,-99) , 
0, 0.497637, 0, 0, 0.491195,-99) , 
0, 0.497137, 1, 0, 0.50231,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0623121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0158724, 0, 1, 0.623761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499814,-99) , 
0, 0.499994, 0, 0, 0.531167,-99) , 
3, 3.10469, 0, 0, 0.552498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438203,-99) , 
1, 0.0028958, 1, 0, 0.50364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375876,-99) , 
3, 2.11189, 1, 0, 0.427089,-99) , 
5, 0.637178, 0, 0, 0.496227,-99) , 
5, 0.5238, 1, 0, 0.513584,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0711695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49714, 0, 1, 0.626555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393926,-99) , 
0, 0.491428, 0, 0, 0.496593,-99) , 
5, -0.233489, 0, 0, 0.527124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478587,-99) , 
2, 0.0212289, 0, 0, 0.497572,-99) , 
NN(
0, 
0, 
-1, 0.782362, 0, -1, 0.443806,-99) , 
2, -0.0513959, 0, 0, 0.48595,-99) , 
5, 0.238143, 1, 0, 0.495967,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0478915);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457788,-99) , 
0, 0.504892, 1, 0, 0.51198,-99) , 
NN(
0, 
0, 
-1, 3.56572, 1, -1, 0.467323,-99) , 
0, 0.493328, 0, 0, 0.505863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428157,-99) , 
5, -0.904748, 0, 0, 0.500314,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0690711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0883015, 1, 1, 0.53182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428442,-99) , 
5, -0.750426, 1, 0, 0.48383,-99) , 
5, -0.523681, 0, 0, 0.523909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439555,-99) , 
5, -0.305002, 0, 0, 0.517844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45631,-99) , 
5, 0.619361, 1, 0, 0.478862,-99) , 
2, 0.0755527, 1, 0, 0.516797,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0729491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460896,-99) , 
5, 0.49184, 0, 0, 0.515801,-99) , 
5, -0.523764, 1, 0, 0.527661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473163,-99) , 
3, 6.58736, 0, 0, 0.478012,-99) , 
NN(
0, 
0, 
-1, 0.0099186, 0, -1, 0.451104,-99) , 
0, 0.498405, 1, 0, 0.470104,-99) , 
0, 0.500945, 0, 0, 0.483938,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.080085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493056, 1, 1, 0.560374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441225,-99) , 
0, 0.495238, 0, 0, 0.499007,-99) , 
5, 0.80943, 1, 0, 0.530226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539764,-99) , 
NN(
0, 
0, 
-1, 0.0045751, 1, -1, 0.482105,-99) , 
2, -0.0988173, 1, 0, 0.489719,-99) , 
0, 0.499042, 1, 0, 0.513165,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0737579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.782097, 0, 1, 0.562066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476949,-99) , 
0, 0.499996, 1, 0, 0.506731,-99) , 
5, 0.142952, 1, 0, 0.520748,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.449561,-99) , 
3, 3.56867, 1, 0, 0.500293,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0715137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503124, 1, 1, 0.566231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446929,-99) , 
5, -0.564612, 0, 0, 0.48441,-99) , 
0, 0.497138, 0, 0, 0.52989,-99) , 
NN(
NN(
0, 
0, 
-1, 0.705333, 1, 1, 0.526729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472894,-99) , 
5, 0.931963, 0, 0, 0.487075,-99) , 
3, 4.18213, 0, 0, 0.496435,-99) , 
5, 0.5238, 1, 0, 0.507216,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0604904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494421, 0, 1, 0.55448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4931,-99) , 
0, 0.501902, 1, 0, 0.539308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4825,-99) , 
0, 0.49442, 0, 0, 0.509813,-99) , 
NN(
0, 
0, 
-1, 0.500631, 0, -1, 0.471141,-99) , 
0, 0.49714, 1, 0, 0.486545,-99) , 
2, 0.0725197, 0, 0, 0.494576,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0619766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476464,-99) , 
0, 0.503019, 1, 0, 0.502356,-99) , 
0, 0.500722, 1, 0, 0.516493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472777,-99) , 
5, -0.673269, 0, 0, 0.515211,-99) , 
NN(
0, 
0, 
-1, 0.494117, 0, -1, 0.474431,-99) , 
5, 0.714304, 1, 0, 0.491085,-99) , 
0, 0.499995, 0, 0, 0.499545,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0738814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449959,-99) , 
6, 0.00442214, 1, 0, 0.516465,-99) , 
5, 0.492137, 1, 0, 0.521732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465529,-99) , 
2, 0.00795385, 1, 0, 0.510976,-99) , 
NN(
0, 
0, 
-1, 3.35762, 0, -1, 0.428632,-99) , 
5, -0.682448, 1, 0, 0.46386,-99) , 
5, 0.333373, 0, 0, 0.505066,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0626737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.146101, 0, 1, 0.522826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431175,-99) , 
0, 0.497136, 1, 0, 0.466497,-99) , 
5, -0.61891, 0, 0, 0.513354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435407,-99) , 
3, 6.59017, 1, 0, 0.506112,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0509445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448498,-99) , 
2, 0.0557061, 1, 0, 0.504672,-99) , 
5, -0.451091, 0, 0, 0.527618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468782,-99) , 
3, 2.33199, 1, 0, 0.488021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44199,-99) , 
3, 6.73635, 1, 0, 0.483042,-99) , 
5, 0.047713, 1, 0, 0.492143,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0859729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.82281, 0, 1, 0.606924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393026,-99) , 
0, 0.493734, 1, 0, 0.483989,-99) , 
0, 0.496183, 0, 0, 0.55911,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469362,-99) , 
3, 4.18524, 1, 0, 0.503435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443876,-99) , 
0, 0.493513, 1, 0, 0.467638,-99) , 
0, 0.497138, 0, 0, 0.488882,-99) , 
5, -0.04755, 1, 0, 0.501993,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0527234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450466,-99) , 
5, -0.818393, 0, 0, 0.507997,-99) , 
NN(
0, 
0, 
-1, 0.108346, 1, -1, 0.470556,-99) , 
0, 0.496187, 0, 0, 0.494884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444072,-99) , 
0, 0.49711, 1, 0, 0.46711,-99) , 
5, 0.904744, 1, 0, 0.487774,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0491484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484498,-99) , 
2, 0.170309, 0, 0, 0.488943,-99) , 
2, -0.13817, 1, 0, 0.493357,-99) , 
NN(
0, 
0, 
-1, 0.950097, 0, -1, 0.463494,-99) , 
5, 0.904742, 1, 0, 0.485585,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0320153);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.143167, 1, 1, 0.55084,-99) , 
NN(
NN(
0, 
0, 
-1, 0.2382, 1, 1, 0.541158,-99) , 
NN(
0, 
0, 
-1, 0.00548355, 1, -1, 0.490622,-99) , 
0, 0.503985, 0, 0, 0.49549,-99) , 
0, 0.492376, 1, 0, 0.500626,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0771841);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.401491, 0, 1, 0.539937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477256,-99) , 
0, 0.498088, 0, 0, 0.510862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455259,-99) , 
0, 0.494286, 1, 0, 0.465994,-99) , 
5, 0.909288, 0, 0, 0.479367,-99) , 
5, 0.0476197, 1, 0, 0.491442,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0635453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501902, 1, 1, 0.567907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490225,-99) , 
0, 0.499993, 0, 0, 0.505233,-99) , 
5, 0.492062, 1, 0, 0.514832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477879,-99) , 
3, 1.35588, 0, 0, 0.521784,-99) , 
NN(
0, 
0, 
-1, 2.62434, 1, -1, 0.429881,-99) , 
0, 0.49809, 1, 0, 0.473038,-99) , 
5, -0.333328, 0, 0, 0.507398,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0647856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000511388, 0, 1, 0.553211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434422,-99) , 
5, 0.743084, 0, 0, 0.508001,-99) , 
5, 0.682505, 1, 0, 0.516288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444045,-99) , 
0, 0.495229, 0, 0, 0.513034,-99) , 
NN(
0, 
0, 
-1, -0.198803, 0, -1, 0.463277,-99) , 
5, -0.682558, 1, 0, 0.485844,-99) , 
5, 0.3333, 0, 0, 0.507893,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0605637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.537272, 0, 1, 0.53475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435731,-99) , 
0, 0.500004, 0, 0, 0.464901,-99) , 
3, 3.72503, 1, 0, 0.519918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46989,-99) , 
0, 0.497133, 0, 0, 0.484869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441613,-99) , 
0, 0.500938, 1, 0, 0.474995,-99) , 
5, 0.619082, 1, 0, 0.490952,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.068768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501877, 1, 1, 0.561844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488796,-99) , 
2, 0.0725197, 1, 0, 0.538763,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487151,-99) , 
5, 0.823157, 1, 0, 0.511558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45505,-99) , 
0, 0.499041, 0, 0, 0.478317,-99) , 
5, 0.714283, 0, 0, 0.495374,-99) , 
3, 4.14964, 0, 0, 0.504405,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0538518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142781, 1, 1, 0.54626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472144,-99) , 
0, 0.505124, 0, 0, 0.506917,-99) , 
0, 0.503258, 1, 0, 0.531563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495277,-99) , 
2, -0.0694614, 0, 0, 0.531506,-99) , 
NN(
0, 
0, 
-1, 0.91557, 0, -1, 0.486155,-99) , 
3, 3.49386, 0, 0, 0.497413,-99) , 
0, 0.499993, 0, 0, 0.508437,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0643939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.115595, 0, 1, 0.536192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403788,-99) , 
5, 0.564558, 0, 0, 0.507001,-99) , 
5, 0.428526, 1, 0, 0.514838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472256,-99) , 
5, -0.14263, 1, 0, 0.480084,-99) , 
NN(
0, 
0, 
-1, -0.850298, 1, -1, 0.420471,-99) , 
5, -0.714141, 0, 0, 0.472497,-99) , 
0, 0.49809, 1, 0, 0.493098,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0618975);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480107,-99) , 
2, 0.0386162, 1, 0, 0.520701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4766,-99) , 
0, 0.502841, 0, 0, 0.490531,-99) , 
3, 3.37623, 1, 0, 0.512178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41556,-99) , 
2, 0.207353, 1, 0, 0.507197,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0483612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472933,-99) , 
0, 0.498089, 0, 0, 0.524161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462739,-99) , 
0, 0.500947, 1, 0, 0.498094,-99) , 
3, 4.16621, 0, 0, 0.503087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447991,-99) , 
2, 0.200307, 1, 0, 0.500284,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0497903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.546545, 1, 1, 0.516044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422779,-99) , 
2, -0.00257294, 0, 0, 0.484884,-99) , 
5, 0.0476849, 0, 0, 0.509325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442757,-99) , 
5, 0.237743, 1, 0, 0.458647,-99) , 
0, 0.495236, 1, 0, 0.474101,-99) , 
2, -0.0585956, 0, 0, 0.502542,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0444007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0693158, 0, 1, 0.513404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367248,-99) , 
0, 0.505709, 0, 0, 0.451119,-99) , 
0, 0.504756, 1, 0, 0.508313,-99) , 
NN(
0, 
0, 
-1, 0.498062, 1, -1, 0.468756,-99) , 
5, 0.904744, 1, 0, 0.497956,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0450366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497122, 1, 1, 0.517002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426465,-99) , 
0, 0.505981, 1, 0, 0.513448,-99) , 
NN(
0, 
0, 
-1, 0.489387, 1, -1, 0.419531,-99) , 
0, 0.490476, 0, 0, 0.508415,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0652402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488072,-99) , 
5, 0.950125, 0, 0, 0.506914,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490861,-99) , 
0, 0.498092, 0, 0, 0.515693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458424,-99) , 
3, 6.17249, 0, 0, 0.463295,-99) , 
5, -0.818377, 1, 0, 0.469339,-99) , 
5, 0.904715, 0, 0, 0.478569,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0648953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492606, 0, 1, 0.548151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439289,-99) , 
5, -0.808666, 0, 0, 0.494078,-99) , 
3, 3.56867, 0, 0, 0.506891,-99) , 
NN(
0, 
0, 
-1, 0.498634, 0, -1, 0.459031,-99) , 
0, 0.497138, 1, 0, 0.478183,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0371879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406181,-99) , 
0, 0.490474, 0, 0, 0.498714,-99) , 
5, -0.160905, 1, 0, 0.503895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528913,-99) , 
NN(
0, 
0, 
-1, 0.498085, 1, -1, 0.415559,-99) , 
5, -0.863744, 1, 0, 0.467753,-99) , 
5, -0.523674, 0, 0, 0.498188,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0648208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.460334, 0, 1, 0.61099,-99) , 
NN(
0, 
0, 
-1, 0.619104, 0, -1, 0.483049,-99) , 
5, 0.555586, 1, 0, 0.492698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458138,-99) , 
5, -0.745855, 0, 0, 0.500452,-99) , 
NN(
0, 
0, 
-1, -0.0450281, 1, -1, 0.439552,-99) , 
2, 0.0117716, 0, 0, 0.460585,-99) , 
5, 0.333328, 0, 0, 0.483528,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0683774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.692274, 0, 1, 0.535623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481839,-99) , 
0, 0.497117, 1, 0, 0.493025,-99) , 
5, 0.795936, 1, 0, 0.506267,-99) , 
NN(
NN(
0, 
0, 
-1, -0.844378, 0, 1, 0.538976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412613,-99) , 
2, 0.0301263, 0, 0, 0.438923,-99) , 
5, -0.637069, 1, 0, 0.475587,-99) , 
5, 0.523833, 0, 0, 0.49599,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0366893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.104848, 0, 1, 0.508716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401925,-99) , 
0, 0.503804, 1, 0, 0.494877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361318,-99) , 
3, 4.50929, 1, 0, 0.479352,-99) , 
5, 0.428603, 0, 0, 0.499905,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0583726);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474675,-99) , 
3, 1.75545, 0, 0, 0.529665,-99) , 
NN(
0, 
0, 
-1, 0.00427692, 1, -1, 0.489267,-99) , 
5, 0.333373, 1, 0, 0.499346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477318,-99) , 
5, 0.455739, 1, 0, 0.488354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407165,-99) , 
3, 1.30648, 1, 0, 0.445188,-99) , 
5, 0.0475177, 0, 0, 0.478183,-99) , 
0, 0.497138, 0, 0, 0.490519,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0597443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.1678, 0, 1, 0.54566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471698,-99) , 
0, 0.499996, 0, 0, 0.485476,-99) , 
2, -0.106151, 1, 0, 0.491834,-99) , 
NN(
0, 
0, 
-1, -0.238017, 1, -1, 0.439602,-99) , 
0, 0.494283, 0, 0, 0.481709,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0663847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498815, 0, 1, 0.532864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448136,-99) , 
6, 0.00191504, 1, 0, 0.490084,-99) , 
0, 0.499995, 1, 0, 0.519488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458555,-99) , 
0, 0.495233, 0, 0, 0.520069,-99) , 
NN(
0, 
0, 
-1, 0.541886, 1, -1, 0.466425,-99) , 
2, 0.0250592, 0, 0, 0.481395,-99) , 
5, 0.619053, 0, 0, 0.505284,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0558616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.292403, 1, 1, 0.510935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451279,-99) , 
5, -0.809383, 0, 0, 0.505154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447047,-99) , 
0, 0.490464, 0, 0, 0.518047,-99) , 
NN(
0, 
0, 
-1, 0.494431, 0, -1, 0.46598,-99) , 
0, 0.492602, 1, 0, 0.477362,-99) , 
0, 0.49809, 0, 0, 0.49114,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0445935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.854176, 0, 1, 0.562254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448878,-99) , 
0, 0.491924, 0, 0, 0.506193,-99) , 
5, -0.618433, 1, 0, 0.512633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43482,-99) , 
0, 0.505706, 1, 0, 0.509308,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0336785);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464212,-99) , 
2, -0.0694614, 0, 0, 0.498392,-99) , 
NN(
0, 
0, 
-1, 0.142256, 1, -1, 0.441192,-99) , 
1, -0.00395442, 0, 0, 0.494158,-99) , 
0, 0.490471, 1, 0, 0.497261,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.064356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491434,-99) , 
3, 3.21722, 0, 0, 0.517234,-99) , 
0, 0.506024, 0, 0, 0.528464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482971,-99) , 
0, 0.49632, 0, 0, 0.499288,-99) , 
NN(
0, 
0, 
-1, 0.498981, 0, -1, 0.460782,-99) , 
0, 0.497771, 1, 0, 0.481575,-99) , 
0, 0.50285, 0, 0, 0.487921,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0652058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466385,-99) , 
5, 0.591874, 1, 0, 0.47529,-99) , 
0, 0.504756, 0, 0, 0.479622,-99) , 
NN(
0, 
0, 
-1, 1.92916, 0, -1, 0.433682,-99) , 
5, -0.714152, 0, 0, 0.473914,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0533541);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491638,-99) , 
0, 0.494557, 0, 0, 0.521639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46648,-99) , 
5, 0.818378, 0, 0, 0.484518,-99) , 
0, 0.49619, 1, 0, 0.496192,-99) , 
5, -0.904519, 1, 0, 0.499735,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0428822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000917141, 0, 1, 0.556787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478376,-99) , 
0, 0.490551, 1, 0, 0.499423,-99) , 
0, 0.493782, 0, 0, 0.519442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490363,-99) , 
3, 6.58384, 0, 0, 0.494618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439102,-99) , 
0, 0.495822, 0, 0, 0.490944,-99) , 
0, 0.495233, 1, 0, 0.49782,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0283763);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490684,-99) , 
0, 0.501574, 1, 0, 0.543504,-99) , 
NN(
0, 
0, 
-1, 0.0115212, 1, -1, 0.496197,-99) , 
2, -0.0694614, 1, 0, 0.504155,-99) , 
0, 0.489521, 1, 0, 0.507044,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0675065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494601, 0, 1, 0.594589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489578,-99) , 
5, -0.333324, 0, 0, 0.528196,-99) , 
1, -0.00280202, 1, 0, 0.53565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480753,-99) , 
5, -0.0475105, 1, 0, 0.491464,-99) , 
NN(
0, 
0, 
-1, 0.506318, 1, -1, 0.427324,-99) , 
0, 0.505346, 1, 0, 0.484778,-99) , 
0, 0.49809, 1, 0, 0.509159,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0461209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502023, 0, 1, 0.558051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470936,-99) , 
0, 0.500087, 1, 0, 0.508417,-99) , 
0, 0.501401, 0, 0, 0.513002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547192,-99) , 
NN(
0, 
0, 
-1, 0.142337, 0, -1, 0.459789,-99) , 
0, 0.506027, 0, 0, 0.477365,-99) , 
0, 0.502852, 1, 0, 0.508007,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0749924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455122,-99) , 
4, 0.999978, 0, 0, 0.53987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423252,-99) , 
4, 0.999906, 0, 0, 0.529857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513436,-99) , 
NN(
0, 
0, 
-1, 0.881959, 1, -1, 0.485885,-99) , 
0, 0.499021, 0, 0, 0.497149,-99) , 
5, 0.809374, 1, 0, 0.514872,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0596251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495237, 0, 1, 0.594142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486252,-99) , 
2, -0.0710455, 1, 0, 0.495867,-99) , 
5, 0.546542, 1, 0, 0.508024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384418,-99) , 
0, 0.504754, 1, 0, 0.491349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41802,-99) , 
5, -0.301564, 1, 0, 0.47661,-99) , 
5, 0.0476849, 0, 0, 0.501006,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0690938);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.659847, 1, 1, 0.525412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469159,-99) , 
3, 1.99272, 0, 0, 0.503712,-99) , 
NN(
0, 
0, 
-1, -0.128472, 1, -1, 0.382282,-99) , 
2, 0.0862704, 1, 0, 0.483142,-99) , 
5, 0.523789, 0, 0, 0.511448,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0545115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499821,-99) , 
0, 0.499996, 1, 0, 0.564461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480858,-99) , 
0, 0.498091, 0, 0, 0.499761,-99) , 
5, 0.451309, 1, 0, 0.506561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463214,-99) , 
3, 1.01235, 1, 0, 0.482158,-99) , 
NN(
0, 
0, 
-1, -0.637123, 1, -1, 0.431018,-99) , 
3, 2.77371, 1, 0, 0.467092,-99) , 
5, -0.0475447, 0, 0, 0.498365,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0473237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494651,-99) , 
1, -0.000817856, 1, 0, 0.510583,-99) , 
NN(
0, 
0, 
-1, -0.617106, 0, -1, 0.460408,-99) , 
6, 0.00572029, 1, 0, 0.505763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414827,-99) , 
3, 8.18935, 1, 0, 0.50068,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0575659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.773197, 1, 1, 0.554497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455344,-99) , 
5, 0.0884009, 1, 0, 0.508002,-99) , 
5, 0.523768, 0, 0, 0.536948,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493283,-99) , 
5, -0.618931, 0, 0, 0.525081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467764,-99) , 
0, 0.499945, 0, 0, 0.481848,-99) , 
5, 0.333373, 1, 0, 0.49273,-99) , 
0, 0.495232, 1, 0, 0.503628,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0714265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497954, 1, 1, 0.542805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472666,-99) , 
2, 0.069381, 0, 0, 0.484576,-99) , 
0, 0.495234, 0, 0, 0.516758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596266,-99) , 
NN(
0, 
0, 
-1, 0.499451, 0, -1, 0.472765,-99) , 
5, -0.714087, 1, 0, 0.485932,-99) , 
0, 0.499043, 1, 0, 0.503969,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0501393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0891475, 1, 1, 0.518996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447569,-99) , 
2, -0.167734, 0, 0, 0.513871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504549,-99) , 
NN(
0, 
0, 
-1, 0.491154, 0, -1, 0.43538,-99) , 
5, 0.238151, 1, 0, 0.457022,-99) , 
0, 0.493328, 0, 0, 0.505369,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0488213);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.419243, 1, 1, 0.523457,-99) , 
NN(
0, 
0, 
-1, 0.498081, 0, -1, 0.46653,-99) , 
3, 6.60938, 1, 0, 0.518147,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0540462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473961,-99) , 
3, 3.50705, 1, 0, 0.566924,-99) , 
NN(
0, 
0, 
-1, 0, 1, 1, 0.516937,-99) , 
5, 0.714527, 1, 0, 0.537112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483106,-99) , 
0, 0.49333, 0, 0, 0.521691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472412,-99) , 
5, 0.714303, 1, 0, 0.485805,-99) , 
0, 0.496187, 1, 0, 0.497144,-99) , 
2, 0.0711236, 0, 0, 0.503525,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0646111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472435,-99) , 
0, 0.493332, 0, 0, 0.528107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432529,-99) , 
5, -0.0464085, 0, 0, 0.51802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482799,-99) , 
5, 0.464749, 0, 0, 0.504533,-99) , 
NN(
0, 
0, 
-1, 1.81069, 1, -1, 0.464432,-99) , 
5, 0.809523, 1, 0, 0.487379,-99) , 
3, 3.56572, 0, 0, 0.495781,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0563546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504582, 1, 1, 0.574552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496751,-99) , 
0, 0.505437, 1, 0, 0.540852,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487913,-99) , 
0, 0.497641, 0, 0, 0.508715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471809,-99) , 
0, 0.493013, 1, 0, 0.483239,-99) , 
5, 0.80938, 0, 0, 0.494639,-99) , 
0, 0.503805, 0, 0, 0.499205,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0453889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.45741, 0, 1, 0.53714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488832,-99) , 
0, 0.500131, 0, 0, 0.499455,-99) , 
0, 0.493328, 1, 0, 0.504362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494548,-99) , 
0, 0.492922, 0, 0, 0.50925,-99) , 
NN(
0, 
0, 
-1, 4.1948, 0, -1, 0.434575,-99) , 
0, 0.496188, 1, 0, 0.459893,-99) , 
2, -0.0681922, 0, 0, 0.49618,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0675229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0403994, 1, 1, 0.549073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411135,-99) , 
5, 0.614681, 0, 0, 0.502474,-99) , 
5, 0.523832, 1, 0, 0.515469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481897,-99) , 
0, 0.49741, 0, 0, 0.496185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397067,-99) , 
0, 0.503939, 0, 0, 0.425997,-99) , 
0, 0.499042, 1, 0, 0.464759,-99) , 
1, -0.00100773, 0, 0, 0.498558,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0548419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.7393, 0, 1, 0.532334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488283,-99) , 
5, 0.904578, 1, 0, 0.519805,-99) , 
NN(
0, 
0, 
-1, -0.809369, 0, -1, 0.470816,-99) , 
0, 0.499995, 1, 0, 0.503136,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0639896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465545,-99) , 
1, 0.00019448, 1, 0, 0.508798,-99) , 
5, 0.238117, 1, 0, 0.523485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481434,-99) , 
2, 0.0705691, 0, 0, 0.490231,-99) , 
NN(
0, 
0, 
-1, 0.714052, 0, -1, 0.452822,-99) , 
1, -0.00129495, 0, 0, 0.479744,-99) , 
0, 0.493332, 1, 0, 0.485519,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0446143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.04907, 0, 1, 0.581187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498011,-99) , 
0, 0.495237, 1, 0, 0.507556,-99) , 
5, 0.174722, 1, 0, 0.512537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460739,-99) , 
2, -0.00800318, 0, 0, 0.508058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420799,-99) , 
3, 3.11774, 0, 0, 0.450172,-99) , 
3, 1.36443, 1, 0, 0.472823,-99) , 
5, -0.333176, 0, 0, 0.505445,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0534186);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.333279, 1, 1, 0.548479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494647,-99) , 
5, 0.818609, 1, 0, 0.511373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460042,-99) , 
0, 0.499997, 0, 0, 0.482496,-99) , 
5, 0.619053, 0, 0, 0.501245,-99) , 
1, 0.00314236, 0, 0, 0.506366,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0507203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493057, 1, 1, 0.550217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43298,-99) , 
5, 0.333608, 0, 0, 0.477327,-99) , 
0, 0.491968, 0, 0, 0.523238,-99) , 
NN(
NN(
0, 
0, 
-1, 0.524699, 1, 1, 0.536706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485646,-99) , 
2, -0.0791349, 1, 0, 0.49222,-99) , 
2, 0.0672061, 0, 0, 0.498484,-99) , 
0, 0.495233, 1, 0, 0.504611,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0553827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495551, 1, 1, 0.523546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469248,-99) , 
3, 3.61484, 0, 0, 0.490696,-99) , 
0, 0.49428, 0, 0, 0.517237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448208,-99) , 
5, -0.904523, 0, 0, 0.512416,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0738823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88572, 0, 1, 0.576729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437373,-99) , 
5, 0.477081, 1, 0, 0.525492,-99) , 
5, 0.550943, 0, 0, 0.537425,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498079, 1, 1, 0.523329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434922,-99) , 
5, 0.830816, 1, 0, 0.483591,-99) , 
5, 0.877448, 0, 0, 0.505744,-99) , 
5, 0.71418, 1, 0, 0.519203,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0436654);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481132,-99) , 
0, 0.496321, 0, 0, 0.495608,-99) , 
NN(
0, 
0, 
-1, 0.50108, 0, -1, 0.476146,-99) , 
0, 0.499041, 1, 0, 0.487345,-99) , 
1, -0.00649238, 1, 0, 0.489573,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0440682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499996, 1, 1, 0.582995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49757,-99) , 
0, 0.499038, 0, 0, 0.505954,-99) , 
5, 0.673495, 1, 0, 0.516892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43098,-99) , 
3, 4.14158, 1, 0, 0.498512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376454,-99) , 
5, 0.292521, 1, 0, 0.483352,-99) , 
5, 0.428608, 0, 0, 0.506961,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0690956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488565,-99) , 
5, 0.94558, 1, 0, 0.518463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464861,-99) , 
5, -0.0521668, 1, 0, 0.48381,-99) , 
5, 0.809509, 0, 0, 0.499119,-99) , 
NN(
0, 
0, 
-1, 0.523952, 0, -1, 0.435578,-99) , 
2, 0.069381, 1, 0, 0.487821,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0499263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.891154, 0, 1, 0.521499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483754,-99) , 
2, -0.0513959, 0, 0, 0.514048,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504751, 1, -1, 0.48599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382418,-99) , 
5, 0.472186, 0, 0, 0.441928,-99) , 
5, 0.23358, 1, 0, 0.471257,-99) , 
5, 0.619057, 0, 0, 0.498178,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494777,-99) , 
0, 0.505165, 0, 0, 0.497996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433796,-99) , 
5, -0.904611, 0, 0, 0.493855,-99) , 
NN(
0, 
0, 
-1, -0.000256364, 0, -1, 0.385034,-99) , 
0, 0.490471, 0, 0, 0.487968,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0556689);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465598,-99) , 
0, 0.492375, 0, 0, 0.512951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405476,-99) , 
6, 0.011521, 1, 0, 0.50938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460242,-99) , 
5, 0.727927, 1, 0, 0.484287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423438,-99) , 
5, 0.0477495, 0, 0, 0.468488,-99) , 
2, -0.0573264, 0, 0, 0.501248,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.057045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00129495, 1, 1, 0.552262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45162,-99) , 
5, -0.709548, 1, 0, 0.480596,-99) , 
0, 0.495238, 0, 0, 0.530363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491958,-99) , 
5, 0.669695, 1, 0, 0.497885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394945,-99) , 
5, 0.61463, 0, 0, 0.490672,-99) , 
5, 0.52385, 1, 0, 0.502655,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0491253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619076, 1, 1, 0.560722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444092,-99) , 
0, 0.505981, 1, 0, 0.538854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493436,-99) , 
0, 0.490983, 0, 0, 0.534284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491256,-99) , 
2, 0.0741566, 0, 0, 0.496784,-99) , 
0, 0.493056, 1, 0, 0.502671,-99) , 
0, 0.501899, 0, 0, 0.509325,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0724033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497637, 1, 1, 0.525895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451623,-99) , 
6, 0.00634363, 0, 0, 0.473805,-99) , 
5, 0.0476201, 0, 0, 0.514983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549941,-99) , 
NN(
0, 
0, 
-1, 0.505256, 0, -1, 0.421603,-99) , 
5, -0.142771, 1, 0, 0.45699,-99) , 
0, 0.503804, 1, 0, 0.509269,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.060763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.496501, 0, 1, 0.660487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495,-99) , 
3, 1.43253, 0, 0, 0.525901,-99) , 
5, -0.714156, 0, 0, 0.566955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45136,-99) , 
3, 6.61468, 1, 0, 0.507482,-99) , 
NN(
0, 
0, 
-1, 0.510285, 0, -1, 0.458757,-99) , 
0, 0.5019, 1, 0, 0.497983,-99) , 
5, -0.142766, 1, 0, 0.509848,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0567119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00261389, 1, 1, 0.516911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452315,-99) , 
5, -0.904611, 0, 0, 0.511738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455859,-99) , 
2, -0.0498117, 1, 0, 0.491951,-99) , 
NN(
0, 
0, 
-1, 0.501081, 0, -1, 0.426854,-99) , 
0, 0.499041, 1, 0, 0.461057,-99) , 
3, 4.14964, 1, 0, 0.500522,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0621211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000260973, 1, 1, 0.534681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478068,-99) , 
2, 0.0725197, 1, 0, 0.51819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482705,-99) , 
2, -0.00800318, 1, 0, 0.502401,-99) , 
NN(
0, 
0, 
-1, 1.96805, 0, -1, 0.467058,-99) , 
3, 1.08887, 1, 0, 0.477627,-99) , 
3, 4.16621, 0, 0, 0.48566,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.044152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00240127, 1, 1, 0.516298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431285,-99) , 
0, 0.49877, 0, 0, 0.481679,-99) , 
5, -0.618922, 0, 0, 0.511596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52982,-99) , 
NN(
0, 
0, 
-1, 0.274374, 0, -1, 0.469127,-99) , 
5, -0.523661, 1, 0, 0.478834,-99) , 
0, 0.495233, 0, 0, 0.502742,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0536754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.06624, 1, 1, 0.563661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476177,-99) , 
5, 0.740898, 0, 0, 0.502523,-99) , 
5, -0.360296, 1, 0, 0.508788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443644,-99) , 
5, -0.90454, 0, 0, 0.504213,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0638032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618962, 1, 1, 0.534577,-99) , 
NN(
0, 
0, 
-1, 0.504351, 1, -1, 0.452097,-99) , 
0, 0.501901, 1, 0, 0.516488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477071,-99) , 
2, -0.0694614, 1, 0, 0.485714,-99) , 
NN(
0, 
0, 
-1, -0.0397121, 0, -1, 0.443196,-99) , 
0, 0.49333, 0, 0, 0.479593,-99) , 
1, -0.00100773, 1, 0, 0.491008,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0534052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499675,-99) , 
5, 0.950144, 1, 0, 0.525123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487682,-99) , 
2, -0.0265212, 0, 0, 0.540947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478079,-99) , 
0, 0.490474, 1, 0, 0.481365,-99) , 
3, 4.72327, 0, 0, 0.48966,-99) , 
5, 0.904751, 0, 0, 0.49877,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.046838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492745, 1, 1, 0.519071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462401,-99) , 
0, 0.490607, 0, 0, 0.512842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493098,-99) , 
2, 0.020825, 0, 0, 0.508135,-99) , 
NN(
0, 
0, 
-1, 3.43692, 0, -1, 0.470967,-99) , 
0, 0.502625, 0, 0, 0.481882,-99) , 
0, 0.49809, 1, 0, 0.497157,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0363455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.94332, 0, 1, 0.510732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457886,-99) , 
5, 0.333988, 1, 0, 0.478391,-99) , 
2, 0.069381, 1, 0, 0.505302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448085,-99) , 
1, 0.00548355, 1, 0, 0.502511,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0570065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477882,-99) , 
5, -0.682441, 0, 0, 0.569597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490855,-99) , 
0, 0.503163, 0, 0, 0.505758,-99) , 
5, 0.333378, 1, 0, 0.524056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479914,-99) , 
5, 0.904715, 0, 0, 0.491767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39833,-99) , 
1, 0.00548355, 1, 0, 0.487188,-99) , 
0, 0.500944, 0, 0, 0.496416,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0366743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491423, 1, 1, 0.510899,-99) , 
NN(
0, 
0, 
-1, 1.34175, 0, -1, 0.47197,-99) , 
5, -0.818584, 0, 0, 0.505943,-99) , 
NN(
0, 
0, 
-1, 0.959205, 0, -1, 0.466336,-99) , 
5, 0.904744, 1, 0, 0.495842,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0402186);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.151695, 1, 1, 0.518241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460946,-99) , 
3, 7.04556, 1, 0, 0.513129,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0680599);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0258037, 1, 1, 0.538122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475427,-99) , 
5, 0.809521, 1, 0, 0.509328,-99) , 
NN(
0, 
0, 
-1, -0.427898, 0, -1, 0.465367,-99) , 
0, 0.49877, 0, 0, 0.490564,-99) , 
0, 0.495233, 1, 0, 0.502288,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0499279);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46088,-99) , 
5, -0.333252, 0, 0, 0.519253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481338,-99) , 
3, 3.33606, 0, 0, 0.489217,-99) , 
0, 0.50095, 0, 0, 0.496448,-99) , 
2, -0.203413, 1, 0, 0.500742,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.044318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493544, 1, 1, 0.525847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469813,-99) , 
5, 0.237999, 1, 0, 0.491961,-99) , 
0, 0.492921, 0, 0, 0.513378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464527,-99) , 
2, -0.0720295, 0, 0, 0.495907,-99) , 
NN(
0, 
0, 
-1, 1.86158, 0, -1, 0.440713,-99) , 
5, 0.142921, 0, 0, 0.482785,-99) , 
0, 0.496186, 1, 0, 0.492625,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0538737);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499235,-99) , 
5, -0.0206308, 0, 0, 0.549124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436093,-99) , 
0, 0.499856, 1, 0, 0.497542,-99) , 
0, 0.501898, 0, 0, 0.508593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481089,-99) , 
5, 0.932007, 0, 0, 0.492604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442835,-99) , 
0, 0.501895, 1, 0, 0.484247,-99) , 
5, 0.714283, 1, 0, 0.494674,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0485299);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484824,-99) , 
6, 0.004573, 0, 0, 0.490212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375793,-99) , 
6, 0.0106706, 1, 0, 0.486333,-99) , 
5, -0.904741, 1, 0, 0.4908,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0562862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500673, 1, 1, 0.548401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454749,-99) , 
3, 3.0715, 1, 0, 0.489131,-99) , 
5, 0.714302, 1, 0, 0.514502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484454,-99) , 
0, 0.497978, 0, 0, 0.489923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430204,-99) , 
0, 0.498497, 1, 0, 0.484768,-99) , 
0, 0.499041, 0, 0, 0.496824,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0651091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.20116, 1, 1, 0.572937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465482,-99) , 
5, -0.922236, 1, 0, 0.488748,-99) , 
5, -0.183673, 0, 0, 0.533893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491878,-99) , 
0, 0.494143, 0, 0, 0.515541,-99) , 
NN(
0, 
0, 
-1, 0.497815, 0, -1, 0.490118,-99) , 
0, 0.496182, 1, 0, 0.498135,-99) , 
5, 0.714273, 1, 0, 0.51331,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.04377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490118,-99) , 
3, 1.89821, 1, 0, 0.553703,-99) , 
0, 0.499993, 0, 0, 0.581618,-99) , 
NN(
NN(
0, 
0, 
-1, 0.489972, 0, 1, 0.548348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461525,-99) , 
0, 0.49605, 0, 0, 0.48981,-99) , 
0, 0.491424, 1, 0, 0.493468,-99) , 
5, -0.714269, 1, 0, 0.50351,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0604281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46521,-99) , 
2, 0.100079, 1, 0, 0.530221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479809,-99) , 
5, 0.904751, 0, 0, 0.491993,-99) , 
0, 0.496184, 1, 0, 0.504187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443338,-99) , 
3, 6.87778, 1, 0, 0.498983,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0438617);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.135199, 0, 1, 0.544469,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493059, 1, 1, 0.509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441956,-99) , 
0, 0.505709, 0, 0, 0.458029,-99) , 
0, 0.5019, 1, 0, 0.499414,-99) , 
2, -0.0681922, 1, 0, 0.506829,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0354979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.954508, 1, 1, 0.532106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445363,-99) , 
2, 0.131465, 1, 0, 0.496914,-99) , 
5, 0.90461, 0, 0, 0.50594,-99) , 
NN(
0, 
0, 
-1, 0.0376479, 1, -1, 0.436635,-99) , 
1, -0.0039028, 0, 0, 0.500568,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0359416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486883,-99) , 
0, 0.496185, 0, 0, 0.518357,-99) , 
5, -0.301647, 0, 0, 0.529528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49517,-99) , 
2, 0.0711236, 0, 0, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429591,-99) , 
0, 0.504757, 1, 0, 0.497085,-99) , 
5, 0.0475227, 1, 0, 0.503805,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0563669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0573264, 1, 1, 0.53351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435639,-99) , 
0, 0.489655, 0, 0, 0.52278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484608,-99) , 
0, 0.501083, 0, 0, 0.501813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468295,-99) , 
5, 0.904746, 1, 0, 0.49306,-99) , 
0, 0.496185, 1, 0, 0.502652,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0454408);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.34078, 0, 1, 0.564006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481791,-99) , 
3, 4.16621, 1, 0, 0.50756,-99) , 
NN(
0, 
0, 
-1, 0.569303, 1, -1, 0.46021,-99) , 
1, 0.00314236, 1, 0, 0.502635,-99) , 
5, -0.809505, 1, 0, 0.508219,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.058369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0476601, 1, 1, 0.528068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467931,-99) , 
5, 0.714105, 1, 0, 0.483329,-99) , 
0, 0.494871, 0, 0, 0.515026,-99) , 
NN(
NN(
0, 
0, 
-1, 0.506068, 1, 1, 0.535533,-99) , 
NN(
0, 
0, 
-1, 0.504362, 1, -1, 0.44194,-99) , 
0, 0.505118, 0, 0, 0.475027,-99) , 
0, 0.502851, 1, 0, 0.508663,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0573212);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499695,-99) , 
3, 1.49902, 0, 0, 0.541921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417957,-99) , 
1, -0.00242157, 0, 0, 0.477186,-99) , 
5, -0.782317, 0, 0, 0.509926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478114,-99) , 
5, 0.562759, 1, 0, 0.482017,-99) , 
NN(
0, 
0, 
-1, 0.499046, 1, -1, 0.415864,-99) , 
5, 0.387801, 0, 0, 0.477347,-99) , 
5, 0.142856, 1, 0, 0.484547,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0451875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498476,-99) , 
0, 0.498099, 0, 0, 0.537746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483587,-99) , 
1, 0.000260515, 1, 0, 0.49516,-99) , 
5, 0.619071, 1, 0, 0.50005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445622,-99) , 
0, 0.497638, 0, 0, 0.47404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402841,-99) , 
0, 0.503805, 1, 0, 0.462969,-99) , 
5, 0.333328, 0, 0, 0.48992,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0594305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4951, 1, 1, 0.522649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452762,-99) , 
0, 0.496453, 0, 0, 0.485235,-99) , 
5, -0.618912, 0, 0, 0.517765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479621,-99) , 
0, 0.50365, 1, 0, 0.506479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403684,-99) , 
0, 0.502716, 0, 0, 0.479373,-99) , 
0, 0.501899, 1, 0, 0.510323,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0498824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485861,-99) , 
0, 0.501133, 0, 0, 0.515306,-99) , 
0, 0.495239, 1, 0, 0.530037,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498083, 1, 1, 0.562267,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.483159,-99) , 
3, 0.491583, 1, 0, 0.488781,-99) , 
3, 4.14669, 0, 0, 0.497473,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0632805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523858, 1, 1, 0.542832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476386,-99) , 
0, 0.503053, 0, 0, 0.4962,-99) , 
0, 0.499632, 1, 0, 0.513574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493368,-99) , 
5, -0.238166, 1, 0, 0.516072,-99) , 
NN(
0, 
0, 
-1, 0.49636, 1, -1, 0.468957,-99) , 
0, 0.493056, 1, 0, 0.483467,-99) , 
0, 0.497137, 0, 0, 0.500937,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0453537);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473873,-99) , 
3, 3.41808, 1, 0, 0.50657,-99) , 
NN(
0, 
0, 
-1, 0.551, 1, -1, 0.478505,-99) , 
5, 0.714273, 0, 0, 0.49405,-99) , 
3, 7.02461, 0, 0, 0.497854,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0658881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490157, 1, 1, 0.55163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487192,-99) , 
2, -0.0710455, 0, 0, 0.537595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472938,-99) , 
0, 0.500631, 1, 0, 0.529846,-99) , 
NN(
0, 
0, 
-1, 0.2018, 0, -1, 0.474513,-99) , 
5, -0.0476038, 1, 0, 0.483997,-99) , 
0, 0.494284, 1, 0, 0.493595,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0588152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.723273, 0, 1, 0.526494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452338,-99) , 
1, 0.000209575, 0, 0, 0.486985,-99) , 
2, 0.00307931, 0, 0, 0.504314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458312,-99) , 
5, 0.950173, 1, 0, 0.478834,-99) , 
5, 0.904745, 1, 0, 0.497982,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0749112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436897,-99) , 
5, 0.306662, 1, 0, 0.483146,-99) , 
5, 0.714473, 0, 0, 0.522203,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.530282,-99) , 
NN(
0, 
0, 
-1, 3.26728, 1, -1, 0.464902,-99) , 
3, 1.0687, 1, 0, 0.484199,-99) , 
3, 4.14669, 0, 0, 0.492196,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0563914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486367,-99) , 
5, -0.14295, 0, 0, 0.529701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461827,-99) , 
5, 0.904745, 1, 0, 0.500903,-99) , 
0, 0.498817, 0, 0, 0.512831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437126,-99) , 
0, 0.505709, 1, 0, 0.509088,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0359648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490143, 0, 1, 0.553865,-99) , 
NN(
0, 
0, 
-1, 0.493564, 0, -1, 0.490377,-99) , 
0, 0.491698, 1, 0, 0.495347,-99) , 
NN(
0, 
0, 
-1, 0.505709, 0, -1, 0.418224,-99) , 
0, 0.504757, 1, 0, 0.489858,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0623834);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.619079, 1, 1, 0.549398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498477,-99) , 
0, 0.495327, 0, 0, 0.51842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455995,-99) , 
5, 0.523626, 1, 0, 0.469187,-99) , 
0, 0.498411, 1, 0, 0.503115,-99) , 
0, 0.50095, 0, 0, 0.514724,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0638479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493133,-99) , 
0, 0.499997, 1, 0, 0.520818,-99) , 
NN(
0, 
0, 
-1, 0.823604, 1, -1, 0.463399,-99) , 
3, 0.938678, 0, 0, 0.504058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474617,-99) , 
0, 0.494287, 1, 0, 0.487979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362769,-99) , 
5, -0.333424, 0, 0, 0.476364,-99) , 
3, 3.51607, 1, 0, 0.496272,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0736507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487615,-99) , 
5, 0.951614, 0, 0, 0.515619,-99) , 
5, 0.873014, 1, 0, 0.528655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470233,-99) , 
0, 0.503124, 1, 0, 0.510494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467091,-99) , 
0, 0.490879, 1, 0, 0.47538,-99) , 
0, 0.499042, 0, 0, 0.4901,-99) , 
5, 0.80953, 0, 0, 0.507593,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0609011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47499,-99) , 
1, 0.000776302, 1, 0, 0.515709,-99) , 
0, 0.491015, 0, 0, 0.555126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475304,-99) , 
0, 0.496006, 0, 0, 0.537523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484326,-99) , 
0, 0.496729, 1, 0, 0.4983,-99) , 
3, 4.14964, 0, 0, 0.506344,-99) , 
0, 0.492376, 1, 0, 0.511232,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0455557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.22463, 1, 1, 0.516354,-99) , 
NN(
0, 
0, 
-1, 3.3567, 1, -1, 0.452136,-99) , 
1, -0.00317125, 0, 0, 0.510231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414935,-99) , 
0, 0.499044, 0, 0, 0.45049,-99) , 
5, -0.809315, 0, 0, 0.50399,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.051231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50263, 1, 1, 0.567978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475948,-99) , 
0, 0.495097, 0, 0, 0.494766,-99) , 
0, 0.498092, 0, 0, 0.530316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467016,-99) , 
0, 0.504076, 1, 0, 0.51389,-99) , 
NN(
0, 
0, 
-1, 0.490335, 0, -1, 0.483041,-99) , 
0, 0.501899, 0, 0, 0.488746,-99) , 
2, 0.069381, 0, 0, 0.495172,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.048926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491701,-99) , 
5, -0.777776, 0, 0, 0.525294,-99) , 
2, 0.0230948, 0, 0, 0.553308,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491017, 1, 1, 0.574352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419068,-99) , 
5, 0.238052, 0, 0, 0.495766,-99) , 
0, 0.492378, 1, 0, 0.502574,-99) , 
5, -0.333371, 1, 0, 0.510961,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0525381);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00916657, 1, 1, 0.53459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437397,-99) , 
0, 0.494597, 1, 0, 0.49261,-99) , 
2, 0.0823977, 1, 0, 0.527839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554383,-99) , 
NN(
0, 
0, 
-1, 0.505799, 1, -1, 0.488195,-99) , 
5, -0.714153, 1, 0, 0.495024,-99) , 
0, 0.49809, 1, 0, 0.510714,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0651239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.22444, 0, 1, 0.582096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473213,-99) , 
3, 4.17042, 1, 0, 0.519787,-99) , 
0, 0.499858, 1, 0, 0.530058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47838,-99) , 
3, 2.00924, 1, 0, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469337,-99) , 
5, 0.904704, 1, 0, 0.492963,-99) , 
0, 0.499042, 0, 0, 0.508505,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0604033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473595,-99) , 
0, 0.492334, 1, 0, 0.497452,-99) , 
5, 0.809341, 0, 0, 0.529351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457479,-99) , 
1, -0.00115071, 0, 0, 0.517451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482548,-99) , 
0, 0.504077, 0, 0, 0.4887,-99) , 
3, 4.17042, 0, 0, 0.494772,-99) , 
0, 0.495236, 1, 0, 0.503274,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0571424);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.546494, 0, 1, 0.547764,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0585094, 1, 1, 0.5234,-99) , 
NN(
0, 
0, 
-1, 0.700753, 0, -1, 0.475409,-99) , 
3, 3.3771, 0, 0, 0.490509,-99) , 
5, -0.0476164, 1, 0, 0.501022,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0616202);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484979,-99) , 
3, 2.9894, 1, 0, 0.572462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490269,-99) , 
5, 0.0478702, 0, 0, 0.521879,-99) , 
0, 0.497092, 0, 0, 0.53061,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00145585, 0, 1, 0.521071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352851,-99) , 
5, 0.33406, 0, 0, 0.464087,-99) , 
0, 0.499451, 0, 0, 0.50563,-99) , 
0, 0.49809, 1, 0, 0.517773,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0568476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499049, 1, 1, 0.650528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484649,-99) , 
0, 0.495235, 0, 0, 0.529033,-99) , 
5, -0.755086, 0, 0, 0.572022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457263,-99) , 
0, 0.503794, 1, 0, 0.506914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439678,-99) , 
3, 8.18935, 1, 0, 0.50235,-99) , 
5, -0.142857, 1, 0, 0.514219,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0594902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.37393, 1, 1, 0.571779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452246,-99) , 
0, 0.502125, 0, 0, 0.493636,-99) , 
0, 0.497139, 1, 0, 0.524483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467032,-99) , 
3, 3.59152, 1, 0, 0.491685,-99) , 
NN(
0, 
0, 
-1, 0.503534, 0, -1, 0.432055,-99) , 
0, 0.501901, 1, 0, 0.480019,-99) , 
5, 0.142921, 1, 0, 0.489733,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0452323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.559251, 1, 1, 0.517418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455356,-99) , 
5, -0.909276, 0, 0, 0.511885,-99) , 
NN(
0, 
0, 
-1, 0.497123, 0, -1, 0.469952,-99) , 
5, 0.904745, 1, 0, 0.500559,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0432335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.506057, 0, 1, 0.56027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491542,-99) , 
0, 0.494429, 1, 0, 0.495769,-99) , 
0, 0.50489, 0, 0, 0.500273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436796,-99) , 
3, 3.60749, 0, 0, 0.454172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401631,-99) , 
0, 0.49251, 1, 0, 0.441216,-99) , 
0, 0.493328, 0, 0, 0.491748,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0488396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498544,-99) , 
5, -0.618864, 1, 0, 0.5055,-99) , 
NN(
0, 
0, 
-1, 0.506188, 1, -1, 0.416427,-99) , 
0, 0.504892, 1, 0, 0.496553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464979,-99) , 
0, 0.494554, 0, 0, 0.479602,-99) , 
NN(
0, 
0, 
-1, 0.310644, 1, -1, 0.431861,-99) , 
5, 0.619046, 0, 0, 0.460473,-99) , 
0, 0.496185, 0, 0, 0.484337,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0419493);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505982, 0, 1, 0.554067,-99) , 
NN(
NN(
0, 
0, 
-1, -0.809292, 1, 1, 0.511142,-99) , 
NN(
0, 
0, 
-1, 0.238164, 0, -1, 0.473112,-99) , 
0, 0.498226, 1, 0, 0.492644,-99) , 
0, 0.504756, 0, 0, 0.496408,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0866613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.21469, 0, 1, 0.524163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435578,-99) , 
1, -0.00208481, 1, 0, 0.455416,-99) , 
2, 0.0466081, 1, 0, 0.509171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433872,-99) , 
0, 0.493892, 0, 0, 0.465375,-99) , 
NN(
0, 
0, 
-1, 0.495874, 1, -1, 0.393942,-99) , 
0, 0.495369, 1, 0, 0.450126,-99) , 
0, 0.496185, 0, 0, 0.489458,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0439244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499282,-99) , 
5, -0.273491, 0, 0, 0.564398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469604,-99) , 
0, 0.50072, 1, 0, 0.502302,-99) , 
0, 0.503803, 0, 0, 0.508412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44138,-99) , 
5, 0.959205, 1, 0, 0.473666,-99) , 
5, 0.904711, 1, 0, 0.499322,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0560294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492796,-99) , 
0, 0.49832, 1, 0, 0.501931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466974,-99) , 
5, -0.809313, 1, 0, 0.473614,-99) , 
0, 0.49795, 0, 0, 0.487448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403552,-99) , 
0, 0.505708, 1, 0, 0.483775,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0450784);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498297,-99) , 
3, 5.54761, 1, 0, 0.53452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453141,-99) , 
3, 2.30481, 1, 0, 0.483946,-99) , 
3, 4.72269, 0, 0, 0.48965,-99) , 
3, 8.18655, 0, 0, 0.492951,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0609832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497587, 1, 1, 0.53436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46423,-99) , 
0, 0.505981, 1, 0, 0.531068,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00260292, 0, 1, 0.512328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39913,-99) , 
0, 0.49578, 1, 0, 0.499792,-99) , 
0, 0.496188, 0, 0, 0.520961,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0679492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497997, 0, 1, 0.532857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43238,-99) , 
0, 0.500231, 0, 0, 0.497955,-99) , 
0, 0.499454, 1, 0, 0.516935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459855,-99) , 
0, 0.491156, 1, 0, 0.491068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387847,-99) , 
2, -0.0546427, 1, 0, 0.434237,-99) , 
2, 0.0145161, 0, 0, 0.455254,-99) , 
0, 0.493334, 0, 0, 0.507524,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0734929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470315,-99) , 
3, 1.02061, 1, 0, 0.507883,-99) , 
3, 2.19457, 0, 0, 0.526815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47487,-99) , 
5, 0.650187, 1, 0, 0.487125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403571,-99) , 
0, 0.499042, 0, 0, 0.448687,-99) , 
5, 0.265395, 0, 0, 0.481004,-99) , 
5, -0.714087, 1, 0, 0.486202,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0764273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482171,-99) , 
0, 0.499427, 0, 0, 0.565809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47882,-99) , 
2, 0.0264195, 1, 0, 0.518306,-99) , 
0, 0.501079, 1, 0, 0.537793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482575,-99) , 
5, 0.523768, 0, 0, 0.525859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449531,-99) , 
3, 1.42187, 0, 0, 0.482917,-99) , 
3, 3.51607, 0, 0, 0.49333,-99) , 
0, 0.499039, 0, 0, 0.511875,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0594638);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48867,-99) , 
3, 1.65967, 1, 0, 0.500369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431281,-99) , 
0, 0.499044, 0, 0, 0.467235,-99) , 
3, 1.09494, 0, 0, 0.490966,-99) , 
3, 7.02461, 0, 0, 0.495005,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0463857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.4212, 1, 1, 0.624239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444951,-99) , 
3, 2.77883, 1, 0, 0.501909,-99) , 
5, -0.0476583, 0, 0, 0.528619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497885,-99) , 
2, -0.0585956, 1, 0, 0.504757,-99) , 
NN(
0, 
0, 
-1, 0.451264, 0, -1, 0.438988,-99) , 
5, 0.523844, 0, 0, 0.499963,-99) , 
5, 0.333379, 1, 0, 0.507226,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0652506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489438,-99) , 
5, 0.0475778, 1, 0, 0.50291,-99) , 
0, 0.498543, 1, 0, 0.509755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488,-99) , 
1, -7.09668e-05, 0, 0, 0.513932,-99) , 
NN(
0, 
0, 
-1, 0.495713, 0, -1, 0.455304,-99) , 
0, 0.493101, 1, 0, 0.470532,-99) , 
0, 0.498089, 0, 0, 0.489941,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0646814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467843,-99) , 
3, 3.60959, 1, 0, 0.496273,-99) , 
0, 0.499992, 0, 0, 0.51312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473346,-99) , 
3, 0.537898, 1, 0, 0.482353,-99) , 
NN(
0, 
0, 
-1, 0.471268, 0, -1, 0.406743,-99) , 
3, 4.60384, 1, 0, 0.470833,-99) , 
5, 0.714282, 0, 0, 0.494712,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0663282);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714175, 0, 1, 0.58844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455829,-99) , 
3, 1.68744, 0, 0, 0.483511,-99) , 
0, 0.500947, 1, 0, 0.552609,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499857, 1, 1, 0.533416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464162,-99) , 
0, 0.496865, 1, 0, 0.495392,-99) , 
0, 0.499041, 0, 0, 0.511152,-99) , 
5, -0.333234, 1, 0, 0.517686,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0458456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487611,-99) , 
5, -0.346387, 0, 0, 0.565283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491997,-99) , 
5, 0.714296, 1, 0, 0.521796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510546,-99) , 
NN(
0, 
0, 
-1, 0.00873582, 0, -1, 0.476499,-99) , 
5, 0.904716, 0, 0, 0.484991,-99) , 
2, -0.0648558, 1, 0, 0.491379,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0465993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.86483, 1, 1, 0.562951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48926,-99) , 
3, 6.87498, 0, 0, 0.493761,-99) , 
0, 0.501397, 0, 0, 0.500112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47498,-99) , 
0, 0.504887, 0, 0, 0.502968,-99) , 
NN(
0, 
0, 
-1, -0.0476617, 1, -1, 0.43689,-99) , 
2, 0.0150866, 0, 0, 0.460842,-99) , 
0, 0.502847, 1, 0, 0.494123,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.056248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00282951, 1, 1, 0.528647,-99) , 
NN(
0, 
0, 
-1, -0.714052, 0, -1, 0.489251,-99) , 
0, 0.49936, 1, 0, 0.507525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426921,-99) , 
3, 3.04417, 0, 0, 0.445299,-99) , 
2, -0.0593128, 1, 0, 0.466223,-99) , 
0, 0.495233, 0, 0, 0.496892,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_12_25_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_12_25_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_12_25_noNsigma *ReadBDT_maker_LHC19c2b_12_25_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_12_25_noNsigma(theInpVar);
  }
}
