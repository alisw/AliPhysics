#include "LHC19c2b_TMVAClassification_BDT_6_8_noNsigma.class.h"

double ReadBDT_LHC19c2b_6_8_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_6_8_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.340658735871416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339601,-99) , 
4, 0.999823, 0, 0, 0.62874,-99) , 
NN(
0, 
0, 
-1, -0.068022, 0, -1, 0.367616,-99) , 
5, -0.692936, 0, 0, 0.551306,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.256626,-99) , 
5, 0.612078, 1, 0, 0.498647,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.244374);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451434,-99) , 
5, 0.381431, 1, 0, 0.580221,-99) , 
NN(
0, 
0, 
-1, -0.0724774, 0, -1, 0.414587,-99) , 
5, -0.674043, 0, 0, 0.531277,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.234928,-99) , 
5, 0.71128, 1, 0, 0.494367,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.189562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493041,-99) , 
5, -0.620038, 0, 0, 0.571213,-99) , 
NN(
0, 
0, 
-1, -0.525914, 0, -1, 0.430455,-99) , 
4, 0.999977, 0, 0, 0.529674,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.17718,-99) , 
4, 0.999524, 0, 0, 0.502201,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.176388);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484626,-99) , 
5, -0.51081, 0, 0, 0.547877,-99) , 
NN(
0, 
0, 
-1, 0.820826, 1, -1, 0.343232,-99) , 
5, 0.712117, 1, 0, 0.530856,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.183047,-99) , 
4, 0.999524, 0, 0, 0.504337,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.187914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432341,-99) , 
4, 0.999955, 0, 0, 0.55485,-99) , 
NN(
0, 
0, 
-1, 0.816294, 1, -1, 0.409633,-99) , 
5, 0.521883, 1, 0, 0.529953,-99) , 
NN(
0, 
0, 
-1, 0.998163, 0, -1, 0.200913,-99) , 
4, 0.999524, 0, 0, 0.505341,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.124076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999997, 0, 1, 0.544363,-99) , 
NN(
0, 
0, 
-1, -0.524371, 0, -1, 0.456913,-99) , 
4, 0.999977, 0, 0, 0.518536,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.214215,-99) , 
4, 0.999524, 0, 0, 0.496214,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.11812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449034,-99) , 
5, -0.742011, 0, 0, 0.515831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340711,-99) , 
5, 0.805918, 1, 0, 0.507815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.180143,-99) , 
4, 0.999048, 0, 0, 0.491889,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.115541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479664,-99) , 
5, -0.431147, 0, 0, 0.517097,-99) , 
NN(
0, 
0, 
-1, 0.828468, 1, -1, 0.387048,-99) , 
5, 0.706557, 1, 0, 0.506365,-99) , 
NN(
0, 
0, 
-1, 0.998164, 0, -1, 0.238086,-99) , 
4, 0.999524, 0, 0, 0.487101,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.111196);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455992,-99) , 
0, 0.501899, 1, 0, 0.517421,-99) , 
NN(
0, 
0, 
-1, 0.836472, 1, -1, 0.426076,-99) , 
5, 0.519835, 1, 0, 0.500385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.176678,-99) , 
4, 0.999048, 0, 0, 0.485443,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.120417);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474707,-99) , 
4, 0.999997, 0, 0, 0.511352,-99) , 
NN(
0, 
0, 
-1, -0.336283, 0, -1, 0.434339,-99) , 
4, 0.999932, 0, 0, 0.500614,-99) , 
NN(
0, 
0, 
-1, 0.998163, 0, -1, 0.237639,-99) , 
4, 0.999524, 0, 0, 0.482428,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0797572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00897472, 0, 1, 0.519523,-99) , 
NN(
0, 
0, 
-1, -0.0626791, 0, -1, 0.451125,-99) , 
5, -0.809763, 0, 0, 0.507681,-99) , 
NN(
0, 
0, 
-1, 0.998164, 0, -1, 0.252769,-99) , 
4, 0.999524, 0, 0, 0.490289,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.0928865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478041,-99) , 
4, 0.999996, 0, 0, 0.503675,-99) , 
NN(
0, 
0, 
-1, -0.147988, 0, -1, 0.420671,-99) , 
4, 0.999909, 0, 0, 0.492799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.206932,-99) , 
4, 0.999048, 0, 0, 0.479994,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0799785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46475,-99) , 
5, 0.331646, 1, 0, 0.507024,-99) , 
NN(
0, 
0, 
-1, -0.145139, 0, -1, 0.433769,-99) , 
4, 0.999909, 0, 0, 0.497454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.219334,-99) , 
4, 0.999048, 0, 0, 0.485071,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0438164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403996,-99) , 
5, 0.804798, 1, 0, 0.498064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384221,-99) , 
2, -0.212429, 0, 0, 0.493311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.165791,-99) , 
4, 0.998572, 0, 0, 0.482857,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0741813);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471937,-99) , 
5, -0.431128, 0, 0, 0.497066,-99) , 
NN(
0, 
0, 
-1, 0.999433, 0, -1, 0.420537,-99) , 
4, 0.999864, 0, 0, 0.4889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.164726,-99) , 
4, 0.998572, 0, 0, 0.47879,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0758048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48045,-99) , 
4, 0.999997, 0, 0, 0.498682,-99) , 
NN(
0, 
0, 
-1, -0.335896, 0, -1, 0.440169,-99) , 
4, 0.999932, 0, 0, 0.488761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.168566,-99) , 
4, 0.998572, 0, 0, 0.478849,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0644963);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425891,-99) , 
5, 0.804514, 1, 0, 0.507703,-99) , 
NN(
0, 
0, 
-1, 0.326158, 1, -1, 0.465099,-99) , 
0, 0.499995, 1, 0, 0.493371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2293,-99) , 
4, 0.999048, 0, 0, 0.482303,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0423323);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454557,-99) , 
5, -0.809996, 0, 0, 0.492597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382855,-99) , 
3, 9.25993, 1, 0, 0.48917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.194996,-99) , 
4, 0.998572, 0, 0, 0.479966,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0433906);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.478318,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0697706);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468029,-99) , 
5, 0.235629, 1, 0, 0.500023,-99) , 
NN(
0, 
0, 
-1, -0.431196, 0, -1, 0.450195,-99) , 
2, -0.070963, 0, 0, 0.492051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245605,-99) , 
4, 0.999048, 0, 0, 0.481843,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0572651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469427,-99) , 
5, -0.524411, 0, 0, 0.495122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377314,-99) , 
3, 9.25993, 1, 0, 0.491562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.210081,-99) , 
4, 0.998572, 0, 0, 0.483109,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0371777);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.48142,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0367219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429774,-99) , 
2, -0.215474, 0, 0, 0.5007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394315,-99) , 
4, 0.99966, 0, 0, 0.495462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.210319,-99) , 
4, 0.998572, 0, 0, 0.486992,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0495185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479977,-99) , 
5, -0.33465, 0, 0, 0.49604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410819,-99) , 
3, 9.12028, 1, 0, 0.493261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201774,-99) , 
4, 0.998572, 0, 0, 0.48482,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.0433501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474373,-99) , 
5, 0.232516, 1, 0, 0.494866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416981,-99) , 
4, 0.99966, 0, 0, 0.490921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.228327,-99) , 
4, 0.998572, 0, 0, 0.483342,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0459153);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.477058,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0437127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483415,-99) , 
0, 0.499043, 1, 0, 0.497192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437356,-99) , 
5, 0.804798, 1, 0, 0.494461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286168,-99) , 
4, 0.999048, 0, 0, 0.485936,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0302618);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.484874,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0286017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447476,-99) , 
2, -0.20903, 0, 0, 0.500316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406636,-99) , 
4, 0.999456, 0, 0, 0.497505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.229068,-99) , 
4, 0.998572, 0, 0, 0.489913,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0284965);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.485756,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0396375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482533,-99) , 
5, 0.329852, 1, 0, 0.501023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433707,-99) , 
2, -0.212628, 0, 0, 0.498326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247009,-99) , 
4, 0.998572, 0, 0, 0.49119,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0331858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474736,-99) , 
5, -0.809763, 0, 0, 0.497346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423955,-99) , 
4, 0.999592, 0, 0, 0.494278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.219818,-99) , 
4, 0.998572, 0, 0, 0.48675,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0352769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458895,-99) , 
0, 0.503805, 1, 0, 0.497725,-99) , 
NN(
0, 
0, 
-1, -0.432724, 0, -1, 0.458889,-99) , 
2, -0.0720886, 0, 0, 0.491517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244574,-99) , 
4, 0.998572, 0, 0, 0.484595,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0308459);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.484582,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0359558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468248,-99) , 
5, -0.828343, 0, 0, 0.496716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428876,-99) , 
5, 0.802358, 1, 0, 0.493677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278404,-99) , 
4, 0.999048, 0, 0, 0.485452,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0307014);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.484654,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0230389);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.488483,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0312079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48254,-99) , 
3, 4.46353, 1, 0, 0.500318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412254,-99) , 
3, 9.25993, 1, 0, 0.497657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268255,-99) , 
4, 0.998572, 0, 0, 0.491135,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.036398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486555,-99) , 
5, -0.335069, 0, 0, 0.497359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424159,-99) , 
3, 9.25184, 1, 0, 0.49506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245363,-99) , 
4, 0.998572, 0, 0, 0.488263,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0252364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448443,-99) , 
4, 0.999728, 0, 0, 0.498166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432639,-99) , 
5, 0.80723, 1, 0, 0.495188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25438,-99) , 
4, 0.998572, 0, 0, 0.488704,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0267598);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.486623,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0353304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494198,-99) , 
2, 0.0306194, 0, 0, 0.501495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432505,-99) , 
2, -0.214257, 0, 0, 0.498898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290553,-99) , 
4, 0.998572, 0, 0, 0.493175,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.035281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490611,-99) , 
5, -0.334659, 0, 0, 0.501082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422357,-99) , 
3, 9.26574, 1, 0, 0.498772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25527,-99) , 
4, 0.998572, 0, 0, 0.4924,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0494288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453212,-99) , 
4, 0.999932, 0, 0, 0.506453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461066,-99) , 
4, 0.999932, 1, 0, 0.478142,-99) , 
5, 0.330678, 1, 0, 0.498496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260129,-99) , 
4, 0.998572, 0, 0, 0.492221,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0281149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47968,-99) , 
4, 0.999932, 0, 0, 0.499812,-99) , 
NN(
0, 
0, 
-1, 0.843013, 1, -1, 0.464613,-99) , 
5, 0.707499, 1, 0, 0.496504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267404,-99) , 
4, 0.998572, 0, 0, 0.490446,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0256217);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.487192,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0318535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48335,-99) , 
5, 0.138333, 1, 0, 0.496578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417586,-99) , 
4, 0.999456, 0, 0, 0.494257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280006,-99) , 
4, 0.998572, 0, 0, 0.48863,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0247852);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.48761,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0293552);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4943,-99) , 
2, 0.0662561, 0, 0, 0.498223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427117,-99) , 
3, 9.25993, 1, 0, 0.496116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315039,-99) , 
4, 0.998572, 0, 0, 0.491066,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0395952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468489,-99) , 
2, -0.112283, 0, 0, 0.506049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417428,-99) , 
2, 0.214101, 1, 0, 0.503177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311666,-99) , 
4, 0.998572, 0, 0, 0.498016,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0228873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45183,-99) , 
2, -0.214257, 0, 0, 0.498891,-99) , 
NN(
0, 
0, 
-1, 4.44324, 1, -1, 0.471184,-99) , 
0, 0.502852, 1, 0, 0.49498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285375,-99) , 
4, 0.998572, 0, 0, 0.489535,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0309484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487722,-99) , 
0, 0.499043, 1, 0, 0.498279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441955,-99) , 
3, 9.11447, 1, 0, 0.496467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280396,-99) , 
4, 0.998572, 0, 0, 0.49096,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0170962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471713,-99) , 
3, 6.36033, 1, 0, 0.498674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453427,-99) , 
3, 8.86302, 1, 0, 0.497035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330097,-99) , 
4, 0.998572, 0, 0, 0.492548,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0267773);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.486615,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0164582);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47391,-99) , 
3, 6.64363, 1, 0, 0.498492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445198,-99) , 
3, 9.25993, 1, 0, 0.496916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304477,-99) , 
4, 0.998572, 0, 0, 0.491988,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0188955);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.490553,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0201757);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462424,-99) , 
2, 0.202771, 1, 0, 0.501061,-99) , 
NN(
0, 
0, 
-1, 0.514283, 0, -1, 0.457802,-99) , 
4, 0.999728, 0, 0, 0.498466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321761,-99) , 
4, 0.998572, 0, 0, 0.493866,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0221986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454795,-99) , 
5, 0.822892, 1, 0, 0.499931,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.481109,-99) , 
5, -0.810019, 0, 0, 0.496738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371914,-99) , 
4, 0.999048, 0, 0, 0.491991,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0218832);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.48906,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0133379);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.493331,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0211718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495538,-99) , 
5, -0.239058, 0, 0, 0.499163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45724,-99) , 
1, -0.000703756, 1, 0, 0.480779,-99) , 
0, 0.491424, 0, 0, 0.497975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340903,-99) , 
4, 0.999048, 0, 0, 0.492268,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0215211);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4892,-99) , 
3, 4.66572, 1, 0, 0.500874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446631,-99) , 
3, 8.82128, 1, 0, 0.498919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313438,-99) , 
4, 0.998572, 0, 0, 0.494227,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0228799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487097,-99) , 
5, 0.234863, 1, 0, 0.498034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457251,-99) , 
4, 0.99966, 0, 0, 0.496025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349883,-99) , 
4, 0.998572, 0, 0, 0.492114,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0224682);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.488768,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0178127);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.491095,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0258688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494554,-99) , 
2, 0.0293772, 0, 0, 0.499734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452508,-99) , 
2, -0.215294, 0, 0, 0.498001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352536,-99) , 
4, 0.998572, 0, 0, 0.494093,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.020583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46875,-99) , 
2, 0.205204, 1, 0, 0.502783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464013,-99) , 
5, 0.804798, 1, 0, 0.500999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345132,-99) , 
4, 0.998572, 0, 0, 0.497023,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.017957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499115,-99) , 
2, 0.0507226, 0, 0, 0.502528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467947,-99) , 
2, 0.213937, 1, 0, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384532,-99) , 
4, 0.999048, 0, 0, 0.497124,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0211458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.23961, 0, 1, 0.505208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449303,-99) , 
3, 8.86883, 1, 0, 0.503272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345828,-99) , 
4, 0.998572, 0, 0, 0.499225,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0157581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46739,-99) , 
5, 0.80723, 1, 0, 0.500354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45035,-99) , 
4, 0.999456, 0, 0, 0.498888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358208,-99) , 
4, 0.998572, 0, 0, 0.495228,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0218942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491008,-99) , 
4, 0.999984, 0, 0, 0.500092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466831,-99) , 
4, 0.99966, 0, 0, 0.498487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359664,-99) , 
4, 0.998572, 0, 0, 0.494861,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0157038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499457,-99) , 
4, 0.999819, 1, 0, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468236,-99) , 
0, 0.505709, 1, 0, 0.499863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364955,-99) , 
4, 0.999048, 0, 0, 0.495102,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0205514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496349,-99) , 
3, 0.53075, 1, 0, 0.498172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457273,-99) , 
3, 9.07001, 1, 0, 0.496917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379398,-99) , 
4, 0.999048, 0, 0, 0.492625,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.018943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999968, 1, 1, 0.503894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457697,-99) , 
4, 0.99966, 0, 0, 0.501711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344665,-99) , 
4, 0.998572, 0, 0, 0.497763,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0222484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0692232, 1, 1, 0.50874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465481,-99) , 
2, -0.068022, 0, 0, 0.494428,-99) , 
5, -0.239056, 0, 0, 0.501849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3872,-99) , 
3, 9.38081, 1, 0, 0.498134,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0271373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492712,-99) , 
4, 0.999932, 1, 0, 0.499806,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.489851,-99) , 
5, -0.334177, 0, 0, 0.495397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370008,-99) , 
4, 0.998572, 0, 0, 0.492156,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0214278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498469,-99) , 
2, -0.0726674, 1, 0, 0.504805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39988,-99) , 
4, 0.999932, 0, 0, 0.492861,-99) , 
5, -0.240195, 0, 0, 0.499055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360887,-99) , 
4, 0.998572, 0, 0, 0.495565,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0173653);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482168,-99) , 
0, 0.492376, 0, 0, 0.50065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458611,-99) , 
2, 0.213178, 1, 0, 0.4992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359425,-99) , 
4, 0.998572, 0, 0, 0.495657,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0227088);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49475,-99) , 
2, 0.0306326, 0, 0, 0.498409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438168,-99) , 
2, -0.214257, 0, 0, 0.496227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367661,-99) , 
4, 0.998572, 0, 0, 0.492966,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0152889);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.492356,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0275757);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496493,-99) , 
4, 0.999955, 1, 0, 0.508348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381195,-99) , 
4, 0.99991, 0, 0, 0.493899,-99) , 
5, -0.143942, 0, 0, 0.500803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37165,-99) , 
4, 0.999048, 0, 0, 0.49625,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.027014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472735,-99) , 
5, 0.807233, 1, 0, 0.506042,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.489434,-99) , 
5, -0.334165, 0, 0, 0.498694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372092,-99) , 
4, 0.998572, 0, 0, 0.495505,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0238861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489859,-99) , 
4, 0.999987, 0, 0, 0.499182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45124,-99) , 
4, 0.999728, 0, 0, 0.496861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405863,-99) , 
4, 0.999048, 0, 0, 0.493525,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0254501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0708349, 1, 1, 0.50872,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.488384,-99) , 
5, -0.23906, 0, 0, 0.498939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387642,-99) , 
4, 0.998572, 0, 0, 0.496098,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0187661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.263397, 0, 1, 0.528448,-99) , 
NN(
0, 
0, 
-1, 6.82021, 1, -1, 0.495698,-99) , 
3, 0.543185, 1, 0, 0.498333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400402,-99) , 
3, 9.33163, 1, 0, 0.495042,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0147494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498948,-99) , 
3, 0.958243, 1, 0, 0.501347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475107,-99) , 
4, 0.999048, 0, 0, 0.500541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397555,-99) , 
3, 9.0147, 1, 0, 0.496695,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0329434);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496725,-99) , 
1, 0.00897472, 0, 0, 0.505973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477954,-99) , 
5, -0.846008, 0, 0, 0.486876,-99) , 
5, -0.809758, 0, 0, 0.502772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41672,-99) , 
3, 9.10638, 1, 0, 0.499612,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0266887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498834,-99) , 
2, -0.0065962, 1, 0, 0.517523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491179,-99) , 
3, 2.19266, 0, 0, 0.501198,-99) , 
3, 0.993658, 1, 0, 0.504827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402131,-99) , 
3, 9.38661, 1, 0, 0.501459,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0233863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.414468, 0, 1, 0.52155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496504,-99) , 
0, 0.497138, 1, 0, 0.501279,-99) , 
3, 0.981744, 1, 0, 0.505683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411139,-99) , 
3, 9.32235, 1, 0, 0.502468,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.023911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484364,-99) , 
0, 0.490063, 0, 0, 0.507094,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.480647,-99) , 
0, 0.504757, 1, 0, 0.505436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407124,-99) , 
4, 0.999048, 0, 0, 0.501926,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0163918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.264918, 0, 1, 0.53086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498616,-99) , 
5, -0.714644, 1, 0, 0.500996,-99) , 
3, 0.55192, 1, 0, 0.50346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409605,-99) , 
3, 9.38661, 1, 0, 0.500361,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0168987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.068022, 1, 1, 0.503617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46927,-99) , 
5, 0.0409179, 0, 0, 0.485456,-99) , 
3, 5.8541, 1, 0, 0.501834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401057,-99) , 
3, 9.38795, 1, 0, 0.498556,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0539371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47849,-99) , 
1, 0.00221903, 0, 0, 0.506924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375491,-99) , 
4, 0.999905, 0, 0, 0.496073,-99) , 
5, -0.239612, 0, 0, 0.501715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395887,-99) , 
3, 9.38081, 1, 0, 0.498337,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0609721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473782,-99) , 
1, -0.00218681, 1, 0, 0.506316,-99) , 
NN(
0, 
0, 
-1, 0.0750975, 1, -1, 0.489383,-99) , 
5, -0.239881, 0, 0, 0.498145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400939,-99) , 
3, 9.38081, 1, 0, 0.495094,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0240074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.65708, 0, 1, 0.513855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463348,-99) , 
3, 6.2796, 1, 0, 0.49945,-99) , 
5, -0.23906, 0, 0, 0.506874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415075,-99) , 
3, 9.37272, 1, 0, 0.503954,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0183657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0712183, 1, 1, 0.5075,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.49323,-99) , 
5, -0.239049, 0, 0, 0.500602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413691,-99) , 
4, 0.998572, 0, 0, 0.498368,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0185603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.08466, 0, 1, 0.505536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461553,-99) , 
4, 0.999683, 0, 0, 0.503797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424689,-99) , 
4, 0.999048, 0, 0, 0.500975,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0258031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493261,-99) , 
4, 0.999955, 1, 0, 0.503392,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.491031,-99) , 
5, -0.143932, 0, 0, 0.496915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426799,-99) , 
4, 0.999048, 0, 0, 0.494409,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0147322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479838,-99) , 
2, 0.195528, 1, 0, 0.502383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477383,-99) , 
2, -0.211881, 0, 0, 0.501416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41452,-99) , 
3, 9.37272, 1, 0, 0.49868,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0185056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490617,-99) , 
5, -0.43236, 0, 0, 0.517084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479108,-99) , 
0, 0.493329, 0, 0, 0.498815,-99) , 
2, -0.0718876, 1, 0, 0.501738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43808,-99) , 
4, 0.999049, 0, 0, 0.499429,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0161859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0692232, 1, 1, 0.505491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471767,-99) , 
2, -0.0458525, 0, 0, 0.494112,-99) , 
5, -0.429568, 0, 0, 0.500914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430194,-99) , 
3, 9.37272, 1, 0, 0.498623,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.032861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478456,-99) , 
5, -0.52788, 0, 0, 0.517674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485228,-99) , 
2, 0.00712018, 0, 0, 0.495466,-99) , 
2, -0.0674888, 1, 0, 0.499242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437163,-99) , 
3, 9.11447, 1, 0, 0.497046,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0231604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494758,-99) , 
3, 2.77607, 1, 0, 0.512408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489625,-99) , 
3, 1.86206, 0, 0, 0.497065,-99) , 
2, -0.0698953, 1, 0, 0.499595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420116,-99) , 
3, 9.37272, 1, 0, 0.497038,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.037083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492277,-99) , 
1, 0.00873058, 0, 0, 0.502463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466742,-99) , 
0, 0.497138, 0, 0, 0.489068,-99) , 
5, -0.809856, 0, 0, 0.5002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428042,-99) , 
3, 9.33743, 1, 0, 0.497884,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0303976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491811,-99) , 
2, -0.00299163, 1, 0, 0.504323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458878,-99) , 
5, -0.432541, 0, 0, 0.486752,-99) , 
2, 0.0717821, 1, 0, 0.501811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431662,-99) , 
4, 0.999048, 0, 0, 0.499328,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0190253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498881,-99) , 
3, 1.43259, 1, 0, 0.504293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480852,-99) , 
5, -0.864119, 0, 0, 0.487966,-99) , 
5, -0.809758, 0, 0, 0.501484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427884,-99) , 
3, 9.33325, 1, 0, 0.499095,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0233679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.545548, 1, 1, 0.507815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485973,-99) , 
2, 0.0658725, 0, 0, 0.493545,-99) , 
0, 0.500947, 1, 0, 0.504153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43566,-99) , 
3, 9.38081, 1, 0, 0.502009,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0152296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78766, 0, 1, 0.504339,-99) , 
NN(
0, 
0, 
-1, -0.145183, 0, -1, 0.482321,-99) , 
4, 0.999909, 0, 0, 0.501567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450184,-99) , 
4, 0.999048, 0, 0, 0.499695,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.010737);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498879,-99) , 
3, 8.21648, 0, 0, 0.500052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466196,-99) , 
2, 0.213452, 1, 0, 0.498988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435659,-99) , 
4, 0.999048, 0, 0, 0.496731,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0165934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0720426, 1, 1, 0.504924,-99) , 
NN(
0, 
0, 
-1, 3.71282, 1, -1, 0.490626,-99) , 
5, -0.810274, 0, 0, 0.502478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418703,-99) , 
4, 0.999048, 0, 0, 0.499586,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0202997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498202,-99) , 
2, -0.0191731, 1, 0, 0.504247,-99) , 
NN(
0, 
0, 
-1, 0.13595, 0, -1, 0.464295,-99) , 
2, -0.194052, 0, 0, 0.502082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444557,-99) , 
2, 0.214015, 1, 0, 0.499863,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0152463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.688658, 1, 1, 0.515087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476406,-99) , 
3, 6.2408, 1, 0, 0.500449,-99) , 
5, 0.616212, 0, 0, 0.502685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440347,-99) , 
3, 9.31425, 1, 0, 0.500626,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0209767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484702,-99) , 
5, -0.149088, 0, 0, 0.508778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486359,-99) , 
5, 0.140582, 1, 0, 0.495371,-99) , 
2, -0.0723171, 1, 0, 0.497493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434983,-99) , 
4, 0.999048, 0, 0, 0.495299,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0467089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478989,-99) , 
1, 0.00310424, 0, 0, 0.506456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400753,-99) , 
4, 0.999905, 0, 0, 0.494589,-99) , 
5, -0.144359, 0, 0, 0.500277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438359,-99) , 
3, 9.32353, 1, 0, 0.498274,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0191834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497837,-99) , 
4, 0.999955, 1, 0, 0.507388,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.494959,-99) , 
5, -0.143941, 0, 0, 0.500803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431637,-99) , 
4, 0.999048, 0, 0, 0.498446,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0509369);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477163,-99) , 
1, -0.00144873, 1, 0, 0.506812,-99) , 
NN(
0, 
0, 
-1, 0.0744558, 1, -1, 0.489053,-99) , 
5, -0.23906, 0, 0, 0.498251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444907,-99) , 
3, 9.38081, 1, 0, 0.496558,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0165978);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490309,-99) , 
4, 0.999954, 0, 0, 0.519853,-99) , 
NN(
0, 
0, 
-1, 0.71087, 0, 1, 0.502168,-99) , 
2, -0.070963, 1, 0, 0.505033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431978,-99) , 
4, 0.999048, 0, 0, 0.502596,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0166736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0188955, 1, 1, 0.505808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460054,-99) , 
2, -0.275317, 0, 0, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453188,-99) , 
2, 0.214218, 1, 0, 0.50251,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0180022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494858,-99) , 
4, 0.999955, 1, 0, 0.498345,-99) , 
3, 9.11447, 0, 0, 0.499642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44898,-99) , 
4, 0.999048, 0, 0, 0.497918,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0213083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.511656,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.492449,-99) , 
5, -0.144359, 0, 0, 0.50171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454412,-99) , 
3, 9.37272, 1, 0, 0.500238,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0100939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480413,-99) , 
0, 0.504757, 1, 0, 0.499777,-99) , 
4, 0.999048, 1, 0, 0.501319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453847,-99) , 
3, 9.32815, 1, 0, 0.499821,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.014579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496116,-99) , 
3, 0.564373, 1, 0, 0.497483,-99) , 
4, 0.999048, 1, 0, 0.498754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4427,-99) , 
3, 9.35086, 1, 0, 0.496966,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0214048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492153,-99) , 
5, -0.432709, 0, 0, 0.520173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492326,-99) , 
0, 0.495234, 0, 0, 0.50253,-99) , 
2, -0.0720886, 1, 0, 0.505354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452875,-99) , 
4, 0.999048, 0, 0, 0.503529,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0124554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497476,-99) , 
5, 0.804798, 0, 0, 0.49872,-99) , 
3, 9.12161, 0, 0, 0.49947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43388,-99) , 
4, 0.999048, 0, 0, 0.497267,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0244965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.07084, 1, 1, 0.508531,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.474631,-99) , 
5, 0.736951, 1, 0, 0.50474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473578,-99) , 
0, 0.49809, 0, 0, 0.488799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441152,-99) , 
2, 0.0567605, 1, 0, 0.480142,-99) , 
5, -0.810004, 0, 0, 0.500763,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0121932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529601,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497354,-99) , 
4, 0.999819, 1, 0, 0.499011,-99) , 
3, 9.12161, 0, 0, 0.499981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455853,-99) , 
4, 0.999048, 0, 0, 0.498442,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.01407);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491829,-99) , 
5, -0.52673, 0, 0, 0.513788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481195,-99) , 
2, 0.170604, 1, 0, 0.500069,-99) , 
2, -0.050931, 1, 0, 0.502442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465459,-99) , 
2, -0.214172, 0, 0, 0.50082,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0204433);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499327,-99) , 
2, -0.0218559, 1, 0, 0.505812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430432,-99) , 
5, -0.146809, 0, 0, 0.48833,-99) , 
4, 0.999909, 0, 0, 0.503556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43322,-99) , 
4, 0.999048, 0, 0, 0.501199,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0115086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.05284, 0, 1, 0.502262,-99) , 
NN(
0, 
0, 
-1, -0.145183, 0, -1, 0.480694,-99) , 
4, 0.999909, 0, 0, 0.499493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458333,-99) , 
4, 0.999048, 0, 0, 0.498052,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0151851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493276,-99) , 
0, 0.496186, 1, 0, 0.496176,-99) , 
4, 0.999048, 1, 0, 0.497437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454457,-99) , 
3, 9.33743, 1, 0, 0.496067,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0156041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.09194, 1, 1, 0.524733,-99) , 
NN(
0, 
0, 
-1, 6.69335, 1, -1, 0.497043,-99) , 
5, 0.61621, 0, 0, 0.501322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446936,-99) , 
3, 9.32815, 1, 0, 0.499601,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0198387);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479874,-99) , 
3, 4.54136, 1, 0, 0.516454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497915,-99) , 
2, -1.17662e-05, 1, 0, 0.502219,-99) , 
2, -0.0743152, 1, 0, 0.504469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446082,-99) , 
3, 9.38661, 1, 0, 0.502676,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0162741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0733763, 0, 1, 0.509962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435356,-99) , 
4, 0.999905, 0, 0, 0.496915,-99) , 
5, -0.143942, 0, 0, 0.503191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458539,-99) , 
3, 9.31425, 1, 0, 0.501748,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0269942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48391,-99) , 
3, 4.51811, 1, 0, 0.517548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490118,-99) , 
2, 0.00540416, 0, 0, 0.499891,-99) , 
2, -0.0692883, 1, 0, 0.502839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464741,-99) , 
3, 9.33743, 1, 0, 0.501612,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0107261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0511313, 1, 1, 0.503113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472523,-99) , 
0, 0.505709, 1, 0, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463702,-99) , 
2, -0.214352, 0, 0, 0.500384,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0192422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495534,-99) , 
5, -0.714646, 1, 0, 0.499129,-99) , 
3, 9.13852, 0, 0, 0.5009,-99) , 
NN(
0, 
0, 
-1, 0.710286, 1, -1, 0.45171,-99) , 
4, 0.999524, 0, 0, 0.498161,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.012746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479094,-99) , 
4, 0.999864, 0, 0, 0.500243,-99) , 
3, 9.13755, 0, 0, 0.501816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435031,-99) , 
5, 0.711316, 1, 0, 0.465791,-99) , 
4, 0.999524, 0, 0, 0.499741,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.00823794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529671,-99) , 
NN(
0, 
0, 
-1, -0.809901, 0, -1, 0.497975,-99) , 
4, 0.999048, 1, 0, 0.49896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457678,-99) , 
3, 9.37272, 1, 0, 0.497668,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0146117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498126,-99) , 
2, 0.00513162, 0, 0, 0.501919,-99) , 
3, 9.03277, 0, 0, 0.502989,-99) , 
NN(
0, 
0, 
-1, 0.707463, 1, -1, 0.455996,-99) , 
4, 0.999524, 0, 0, 0.500333,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0126105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.54676, 1, 1, 0.523807,-99) , 
NN(
0, 
0, 
-1, -0.836936, 0, -1, 0.497072,-99) , 
5, 0.712114, 0, 0, 0.499843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457037,-99) , 
3, 9.32235, 1, 0, 0.498471,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0209044);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494553,-99) , 
2, -0.00335763, 1, 0, 0.503302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460029,-99) , 
3, 4.71064, 1, 0, 0.487924,-99) , 
2, 0.0713904, 1, 0, 0.501045,-99) , 
NN(
0, 
0, 
-1, 0.489973, 0, -1, 0.476046,-99) , 
0, 0.491424, 0, 0, 0.499351,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0125868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498193,-99) , 
5, 0.706607, 0, 0, 0.500165,-99) , 
4, 0.999048, 1, 0, 0.501628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44694,-99) , 
3, 9.37272, 1, 0, 0.49995,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.00805689);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.0147, 0, 1, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440541,-99) , 
4, 0.999048, 0, 0, 0.500051,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0131952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.525295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497279,-99) , 
3, 2.75183, 0, 0, 0.500891,-99) , 
4, 0.999524, 1, 0, 0.50222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455547,-99) , 
3, 9.33163, 1, 0, 0.500738,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0159096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0707818, 0, 1, 0.506789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425944,-99) , 
4, 0.999905, 0, 0, 0.49802,-99) , 
5, -0.139405, 0, 0, 0.502028,-99) , 
NN(
0, 
0, 
-1, 0.861598, 1, -1, 0.466045,-99) , 
5, 0.807232, 1, 0, 0.499982,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0233601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478429,-99) , 
4, 0.999955, 0, 0, 0.504956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488664,-99) , 
4, 0.999955, 1, 0, 0.496667,-99) , 
5, 0.236528, 1, 0, 0.502335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449525,-99) , 
4, 0.999048, 0, 0, 0.500538,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0146165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.06603, 1, 1, 0.519981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480483,-99) , 
3, 5.68159, 1, 0, 0.49875,-99) , 
5, 0.616209, 0, 0, 0.501992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437263,-99) , 
3, 9.11447, 1, 0, 0.499871,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0179076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4957,-99) , 
2, 0.0190549, 0, 0, 0.499344,-99) , 
NN(
0, 
0, 
-1, -0.525831, 0, -1, 0.476548,-99) , 
2, 0.112306, 1, 0, 0.49698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462789,-99) , 
2, -0.214062, 0, 0, 0.495517,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0166954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473485,-99) , 
5, -0.809917, 0, 0, 0.511286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497079,-99) , 
2, 0.0228495, 0, 0, 0.500806,-99) , 
2, -0.0510012, 1, 0, 0.50261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469163,-99) , 
2, -0.214257, 0, 0, 0.501194,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0256677);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497963,-99) , 
1, 0.00961304, 0, 0, 0.505733,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.486746,-99) , 
5, -0.837019, 0, 0, 0.502689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465128,-99) , 
0, 0.499045, 1, 0, 0.494439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426162,-99) , 
4, 0.999524, 0, 0, 0.475046,-99) , 
5, 0.71128, 1, 0, 0.499766,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0433931);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482474,-99) , 
1, 0.00387497, 0, 0, 0.509634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407078,-99) , 
4, 0.999905, 0, 0, 0.497888,-99) , 
5, -0.185805, 0, 0, 0.503107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471869,-99) , 
0, 0.499043, 1, 0, 0.490382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44132,-99) , 
5, 0.872649, 1, 0, 0.478444,-99) , 
5, 0.709809, 1, 0, 0.500475,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0188412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.510023,-99) , 
NN(
0, 
0, 
-1, 0.0670236, 1, -1, 0.493009,-99) , 
5, -0.144555, 0, 0, 0.501159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459269,-99) , 
3, 9.38661, 1, 0, 0.499892,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0175083);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493601,-99) , 
5, -0.146696, 0, 0, 0.498951,-99) , 
3, 9.11447, 0, 0, 0.500675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448341,-99) , 
4, 0.999048, 0, 0, 0.498909,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0224736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143932, 0, 1, 0.506959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484921,-99) , 
0, 0.504757, 1, 0, 0.505667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477956,-99) , 
3, 2.48465, 1, 0, 0.497417,-99) , 
NN(
0, 
0, 
-1, 0.498093, 0, -1, 0.447863,-99) , 
3, 4.61877, 1, 0, 0.479436,-99) , 
2, 0.0714181, 1, 0, 0.50172,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0150067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.12479, 0, 1, 0.502341,-99) , 
NN(
0, 
0, 
-1, 0.496187, 0, -1, 0.479709,-99) , 
5, 0.739291, 1, 0, 0.499808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506839,-99) , 
NN(
0, 
0, 
-1, -0.903369, 1, -1, 0.470868,-99) , 
5, -0.855055, 0, 0, 0.479608,-99) , 
5, -0.809761, 0, 0, 0.49652,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0162111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495097,-99) , 
3, 0.522429, 1, 0, 0.49647,-99) , 
3, 8.76728, 0, 0, 0.497996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452589,-99) , 
4, 0.999048, 0, 0, 0.496479,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.01624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.525693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495806,-99) , 
5, -0.620026, 1, 0, 0.500053,-99) , 
4, 0.999524, 1, 0, 0.501441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452582,-99) , 
3, 9.31425, 1, 0, 0.49991,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0141864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49628,-99) , 
3, 1.35006, 1, 0, 0.499224,-99) , 
3, 8.68863, 0, 0, 0.500694,-99) , 
NN(
0, 
0, 
-1, 0.711315, 1, -1, 0.467145,-99) , 
4, 0.999524, 0, 0, 0.498795,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.00815276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.92862, 0, 1, 0.502649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482975,-99) , 
2, -0.214037, 0, 0, 0.501849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477563,-99) , 
0, 0.490472, 0, 0, 0.500782,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0158147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495856,-99) , 
0, 0.505709, 0, 0, 0.497213,-99) , 
3, 8.83651, 0, 0, 0.499156,-99) , 
NN(
0, 
0, 
-1, 0.707462, 1, -1, 0.474686,-99) , 
4, 0.999524, 0, 0, 0.497748,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0182503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49811,-99) , 
5, -0.105589, 0, 0, 0.516111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497111,-99) , 
2, 0.00479134, 0, 0, 0.502734,-99) , 
2, -0.0699441, 1, 0, 0.505005,-99) , 
NN(
0, 
0, 
-1, 0.87012, 1, -1, 0.479444,-99) , 
5, 0.707499, 1, 0, 0.502227,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.015529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48306,-99) , 
5, -0.619873, 0, 0, 0.514499,-99) , 
NN(
0, 
0, 
-1, 3.6291, 0, 1, 0.502955,-99) , 
2, -0.0714804, 1, 0, 0.504821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452946,-99) , 
3, 9.37272, 1, 0, 0.503263,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0419312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485122,-99) , 
1, -0.00389593, 1, 0, 0.51316,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.495526,-99) , 
5, -0.1872, 0, 0, 0.503388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469468,-99) , 
1, 0.000715615, 0, 0, 0.489867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448789,-99) , 
4, 0.999524, 0, 0, 0.47819,-99) , 
5, 0.706879, 1, 0, 0.500651,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0169273);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.507317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456328,-99) , 
3, 9.27084, 1, 0, 0.505709,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0169133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.12477, 1, 1, 0.527253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455556,-99) , 
5, 0.13595, 0, 0, 0.479127,-99) , 
3, 4.77444, 1, 0, 0.511256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49382,-99) , 
5, -0.239602, 0, 0, 0.498446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48298,-99) , 
0, 0.504757, 1, 0, 0.497571,-99) , 
2, -0.0714185, 1, 0, 0.499896,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.020265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494721,-99) , 
2, -0.0141947, 1, 0, 0.500636,-99) , 
3, 9.14066, 0, 0, 0.502366,-99) , 
NN(
0, 
0, 
-1, 0.711315, 1, -1, 0.472133,-99) , 
4, 0.999524, 0, 0, 0.500647,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0212057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0687521, 1, 1, 0.507423,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.477063,-99) , 
5, -0.918528, 0, 0, 0.505085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467803,-99) , 
5, 0.819513, 1, 0, 0.488194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440606,-99) , 
4, 0.999524, 0, 0, 0.474912,-99) , 
5, 0.71087, 1, 0, 0.501895,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0174937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.685937, 1, 1, 0.50722,-99) , 
NN(
0, 
0, 
-1, 0.0744558, 1, -1, 0.492148,-99) , 
5, -0.755725, 0, 0, 0.503744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483669,-99) , 
0, 0.497138, 0, 0, 0.498473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464186,-99) , 
5, 0.845523, 1, 0, 0.486457,-99) , 
5, 0.709811, 1, 0, 0.501875,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0119706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496769,-99) , 
4, 0.999592, 1, 0, 0.497539,-99) , 
3, 9.12028, 0, 0, 0.499025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468813,-99) , 
4, 0.999048, 0, 0, 0.497991,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0134263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499594,-99) , 
4, 0.999547, 1, 0, 0.500714,-99) , 
3, 7.73855, 0, 0, 0.502219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523309,-99) , 
NN(
0, 
0, 
-1, 0.80677, 0, -1, 0.45308,-99) , 
1, 0.00130367, 0, 0, 0.477194,-99) , 
5, 0.712114, 1, 0, 0.4996,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0130771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499665,-99) , 
5, -0.715025, 1, 0, 0.503094,-99) , 
3, 9.09102, 0, 0, 0.504763,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.472115,-99) , 
4, 0.999524, 0, 0, 0.502899,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0136556);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448201,-99) , 
3, 9.32235, 1, 0, 0.503647,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0114546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497847,-99) , 
3, 0.961916, 1, 0, 0.500665,-99) , 
3, 9.11447, 0, 0, 0.501807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476999,-99) , 
4, 0.999048, 0, 0, 0.500955,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.022177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.663718, 1, 1, 0.519829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462805,-99) , 
4, 0.999714, 0, 0, 0.503535,-99) , 
5, 0.547374, 0, 0, 0.505118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546833,-99) , 
NN(
0, 
0, 
-1, 0.499044, 1, -1, 0.460128,-99) , 
1, 0.00214907, 0, 0, 0.481419,-99) , 
5, 0.710262, 1, 0, 0.502587,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0106655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497651,-99) , 
4, 0.999819, 1, 0, 0.498906,-99) , 
4, 0.999049, 1, 0, 0.500043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460839,-99) , 
3, 9.38661, 1, 0, 0.498841,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0175686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0065962, 1, 1, 0.514729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489859,-99) , 
5, 0.141417, 1, 0, 0.497849,-99) , 
3, 0.965512, 1, 0, 0.50145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453826,-99) , 
3, 9.07715, 1, 0, 0.499822,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0156961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481219,-99) , 
4, 0.999909, 0, 0, 0.500779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46267,-99) , 
4, 0.999048, 0, 0, 0.499595,-99) , 
NN(
0, 
0, 
-1, 0.0430132, 1, -1, 0.478189,-99) , 
0, 0.503804, 1, 0, 0.4975,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0152401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.710297, 0, 1, 0.528915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494788,-99) , 
4, 0.999977, 1, 0, 0.498216,-99) , 
4, 0.999524, 1, 0, 0.499852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467345,-99) , 
3, 9.33163, 1, 0, 0.498835,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0248431);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486858,-99) , 
2, -0.170379, 0, 0, 0.50651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489217,-99) , 
2, 0.0278146, 0, 0, 0.496881,-99) , 
2, -0.0304766, 1, 0, 0.499611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469753,-99) , 
2, 0.21442, 1, 0, 0.498473,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.00787013);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999049, 1, 1, 0.502623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452604,-99) , 
3, 9.37272, 1, 0, 0.501157,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0196418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619529, 1, 1, 0.505218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456084,-99) , 
5, -0.429519, 0, 0, 0.494421,-99) , 
2, 0.0733763, 1, 0, 0.50367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457174,-99) , 
3, 9.33163, 1, 0, 0.502252,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0262472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487308,-99) , 
5, 0.141409, 1, 0, 0.497807,-99) , 
4, 0.999524, 1, 0, 0.500523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476729,-99) , 
5, -0.106276, 0, 0, 0.49957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435183,-99) , 
5, 0.706211, 1, 0, 0.491041,-99) , 
3, 4.67335, 1, 0, 0.498659,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0259013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49302,-99) , 
5, -0.619515, 1, 0, 0.498072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451486,-99) , 
1, 0.00178176, 0, 0, 0.482286,-99) , 
2, -0.11249, 0, 0, 0.496278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462339,-99) , 
2, 0.213937, 1, 0, 0.495009,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0179976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486433,-99) , 
5, 0.615458, 1, 0, 0.523539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498512,-99) , 
2, 0.152874, 0, 0, 0.501219,-99) , 
2, -0.0715418, 1, 0, 0.505045,-99) , 
NN(
0, 
0, 
-1, 0.0650593, 1, -1, 0.490565,-99) , 
5, -0.334177, 0, 0, 0.498756,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0136525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506252,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.494563,-99) , 
5, -0.143939, 0, 0, 0.500146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461224,-99) , 
3, 9.38081, 1, 0, 0.498965,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0168585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495929,-99) , 
5, 0.51983, 0, 0, 0.498839,-99) , 
3, 9.12161, 0, 0, 0.500386,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.465571,-99) , 
4, 0.999524, 0, 0, 0.498459,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0127126);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499935,-99) , 
3, 1.96233, 1, 0, 0.518492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487848,-99) , 
3, 4.07106, 1, 0, 0.497533,-99) , 
5, 0.615822, 0, 0, 0.500752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461219,-99) , 
3, 9.37272, 1, 0, 0.499577,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0125527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49284,-99) , 
3, 4.69434, 1, 0, 0.501597,-99) , 
3, 8.8486, 0, 0, 0.503068,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.477783,-99) , 
4, 0.999524, 0, 0, 0.501644,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0106163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497572,-99) , 
4, 0.999819, 1, 0, 0.498492,-99) , 
3, 9.12912, 0, 0, 0.499823,-99) , 
NN(
0, 
0, 
-1, 0.711305, 1, -1, 0.477535,-99) , 
4, 0.999524, 0, 0, 0.498572,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.00801679);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475846,-99) , 
3, 9.38081, 1, 0, 0.502548,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0149489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498802,-99) , 
0, 0.496005, 1, 0, 0.50156,-99) , 
NN(
0, 
0, 
-1, -0.619875, 0, -1, 0.486398,-99) , 
2, -0.0704309, 0, 0, 0.499157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461416,-99) , 
5, -0.589357, 0, 0, 0.488001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458123,-99) , 
5, 0.232531, 1, 0, 0.479405,-99) , 
0, 0.492377, 0, 0, 0.497266,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0150411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494536,-99) , 
0, 0.5019, 0, 0, 0.496718,-99) , 
3, 8.73348, 0, 0, 0.498017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461956,-99) , 
4, 0.999048, 0, 0, 0.49683,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.01298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49168,-99) , 
5, 0.141412, 1, 0, 0.498284,-99) , 
3, 9.12161, 0, 0, 0.499407,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.465109,-99) , 
4, 0.999524, 0, 0, 0.497547,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0421653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478184,-99) , 
3, 9.34335, 1, 0, 0.50798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446946,-99) , 
4, 0.999991, 0, 0, 0.499538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453927,-99) , 
4, 0.999905, 0, 0, 0.496977,-99) , 
5, -0.144562, 0, 0, 0.502377,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0203161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483916,-99) , 
2, -0.21469, 0, 0, 0.507444,-99) , 
NN(
0, 
0, 
-1, 0.477212, 1, -1, 0.490279,-99) , 
0, 0.493329, 0, 0, 0.505228,-99) , 
NN(
0, 
0, 
-1, 0.5019, 0, -1, 0.482869,-99) , 
5, -0.809761, 0, 0, 0.501583,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.026886);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472306,-99) , 
1, 0.00314306, 0, 0, 0.50759,-99) , 
NN(
0, 
0, 
-1, 0.152441, 1, -1, 0.494538,-99) , 
2, -0.0719397, 1, 0, 0.49666,-99) , 
NN(
0, 
0, 
-1, -0.243834, 1, -1, 0.471524,-99) , 
0, 0.504757, 1, 0, 0.495077,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0157232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495732,-99) , 
5, -0.715028, 1, 0, 0.499134,-99) , 
3, 9.08466, 0, 0, 0.500463,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.470214,-99) , 
4, 0.999524, 0, 0, 0.498815,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0171558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477804,-99) , 
2, -0.144283, 0, 0, 0.518479,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.496486,-99) , 
2, -0.0510012, 1, 0, 0.500371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475723,-99) , 
2, -0.214257, 0, 0, 0.49934,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0362867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0714383, 1, 1, 0.526799,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.488559,-99) , 
1, 0.000712003, 0, 0, 0.50538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486068,-99) , 
5, -0.900402, 1, 0, 0.501823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471895,-99) , 
2, -0.043454, 0, 0, 0.494963,-99) , 
5, -0.809856, 0, 0, 0.503675,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.00836204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498082,-99) , 
4, 0.999524, 1, 0, 0.499182,-99) , 
3, 9.37272, 0, 0, 0.499872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476846,-99) , 
2, 0.214536, 1, 0, 0.499006,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0524335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.696495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478822,-99) , 
5, 0.341043, 0, 0, 0.491411,-99) , 
1, -0.0056685, 1, 0, 0.510504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491288,-99) , 
3, 1.81651, 0, 0, 0.504913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462174,-99) , 
2, 0.0744558, 1, 0, 0.498771,-99) , 
5, -0.525854, 0, 0, 0.506458,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0275446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.511879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473978,-99) , 
3, 9.40469, 1, 0, 0.510262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490413,-99) , 
3, 1.62309, 0, 0, 0.503229,-99) , 
NN(
0, 
0, 
-1, -0.0387824, 0, -1, 0.477728,-99) , 
3, 3.66114, 1, 0, 0.496282,-99) , 
5, -0.524755, 0, 0, 0.505434,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0197725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.72746, 0, 1, 0.508903,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.490193,-99) , 
5, -0.796309, 0, 0, 0.504551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473819,-99) , 
0, 0.500948, 1, 0, 0.495187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454036,-99) , 
5, 0.86024, 1, 0, 0.490074,-99) , 
5, 0.42573, 1, 0, 0.500927,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0389366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479977,-99) , 
4, 0.999991, 0, 0, 0.504726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429052,-99) , 
5, -0.130689, 0, 0, 0.478259,-99) , 
4, 0.999905, 0, 0, 0.502497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483102,-99) , 
0, 0.498091, 1, 0, 0.493974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445671,-99) , 
5, 0.860687, 1, 0, 0.486756,-99) , 
5, 0.521138, 1, 0, 0.499316,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0234849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498689,-99) , 
2, 0.0339485, 0, 0, 0.502516,-99) , 
2, -0.210367, 1, 0, 0.503603,-99) , 
NN(
NN(
0, 
0, 
-1, 0.722255, 1, 1, 0.531313,-99) , 
NN(
0, 
0, 
-1, 0.0712684, 1, -1, 0.469787,-99) , 
1, -0.00147159, 1, 0, 0.488879,-99) , 
5, 0.426769, 1, 0, 0.499927,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0121287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.33304, 1, 1, 0.516522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498271,-99) , 
5, -0.904994, 1, 0, 0.499905,-99) , 
2, -0.0692232, 1, 0, 0.502699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470522,-99) , 
3, 9.33163, 1, 0, 0.501714,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0219957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493356,-99) , 
3, 4.52399, 1, 0, 0.514166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495489,-99) , 
5, 0.0462922, 1, 0, 0.504035,-99) , 
2, -0.0304183, 1, 0, 0.506911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483015,-99) , 
2, 0.21442, 1, 0, 0.505994,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0181641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492042,-99) , 
5, -0.105848, 0, 0, 0.513609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498176,-99) , 
0, 0.494281, 1, 0, 0.500465,-99) , 
3, 5.19874, 0, 0, 0.502545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471477,-99) , 
5, 0.846256, 1, 0, 0.498325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466421,-99) , 
5, 0.788198, 0, 0, 0.486108,-99) , 
5, 0.706907, 1, 0, 0.500784,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.00653274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499952,-99) , 
2, -0.202107, 1, 0, 0.501037,-99) , 
3, 9.02857, 0, 0, 0.502343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472496,-99) , 
4, 0.999048, 0, 0, 0.50135,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0112383);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479241,-99) , 
3, 9.37272, 1, 0, 0.50433,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0155958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78071, 0, 1, 0.505543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461549,-99) , 
2, -0.0716846, 0, 0, 0.49138,-99) , 
4, 0.999909, 0, 0, 0.503747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461601,-99) , 
4, 0.999048, 0, 0, 0.502362,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0143901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495857,-99) , 
4, 0.999977, 1, 0, 0.499213,-99) , 
3, 8.77612, 0, 0, 0.5007,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.478176,-99) , 
4, 0.999524, 0, 0, 0.499434,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0107551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48152,-99) , 
4, 0.999637, 0, 0, 0.502548,-99) , 
4, 0.999048, 1, 0, 0.503512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473522,-99) , 
3, 9.32235, 1, 0, 0.502574,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0144407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49463,-99) , 
3, 1.8, 1, 0, 0.499428,-99) , 
3, 9.00889, 0, 0, 0.500781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474648,-99) , 
4, 0.999048, 0, 0, 0.499923,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0142119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469418,-99) , 
5, 0.721169, 1, 0, 0.500786,-99) , 
5, 0.807231, 0, 0, 0.501918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487563,-99) , 
2, -0.0687653, 1, 0, 0.493794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450255,-99) , 
5, 0.612573, 1, 0, 0.487333,-99) , 
0, 0.494281, 0, 0, 0.499253,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0144906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483642,-99) , 
5, 0.521885, 1, 0, 0.501459,-99) , 
4, 0.999524, 1, 0, 0.502424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495404,-99) , 
0, 0.491677, 1, 0, 0.496877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478984,-99) , 
0, 0.490608, 0, 0, 0.495166,-99) , 
0, 0.49809, 0, 0, 0.498896,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0145967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492104,-99) , 
5, 0.0462922, 1, 0, 0.499287,-99) , 
3, 9.07715, 0, 0, 0.500216,-99) , 
NN(
0, 
0, 
-1, 0.711305, 1, -1, 0.469799,-99) , 
4, 0.999524, 0, 0, 0.498559,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0325839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490787,-99) , 
0, 0.494281, 0, 0, 0.501817,-99) , 
5, 0.0492471, 1, 0, 0.503842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466843,-99) , 
4, 0.999995, 0, 0, 0.493221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454375,-99) , 
4, 0.999905, 0, 0, 0.491007,-99) , 
5, -0.0502557, 0, 0, 0.496815,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0189263);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491507,-99) , 
3, 0.551927, 1, 0, 0.49345,-99) , 
3, 9.38661, 0, 0, 0.493998,-99) , 
2, 0.213548, 0, 0, 0.494935,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0116117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49765,-99) , 
2, -0.2105, 1, 0, 0.498622,-99) , 
4, 0.999048, 1, 0, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457075,-99) , 
3, 9.37272, 1, 0, 0.499005,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0333845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.509298,-99) , 
NN(
0, 
0, 
-1, 0.504213, 0, -1, 0.487158,-99) , 
0, 0.502852, 1, 0, 0.506539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461347,-99) , 
4, 0.999991, 0, 0, 0.498196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432278,-99) , 
4, 0.999905, 0, 0, 0.494718,-99) , 
5, -0.144357, 0, 0, 0.500533,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0147928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49527,-99) , 
2, -0.216581, 1, 0, 0.496116,-99) , 
4, 0.999048, 1, 0, 0.497498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45959,-99) , 
3, 9.37272, 1, 0, 0.496351,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0119993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78248, 0, 1, 0.502955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459644,-99) , 
4, 0.999796, 0, 0, 0.501163,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.46796,-99) , 
4, 0.999524, 0, 0, 0.499357,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0239002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491131,-99) , 
5, 0.0429267, 1, 0, 0.501969,-99) , 
4, 0.999524, 1, 0, 0.50471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478158,-99) , 
2, 0.0723794, 1, 0, 0.498641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444716,-99) , 
5, 0.706199, 1, 0, 0.491647,-99) , 
3, 4.74841, 1, 0, 0.502191,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0177724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471814,-99) , 
0, 0.495233, 0, 0, 0.50633,-99) , 
NN(
0, 
0, 
-1, 0.462993, 1, -1, 0.493786,-99) , 
5, 0.616996, 0, 0, 0.49571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475757,-99) , 
2, -0.212913, 0, 0, 0.494856,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0179474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999049, 1, 1, 0.505327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469342,-99) , 
3, 9.40182, 1, 0, 0.503751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489154,-99) , 
3, 3.01453, 1, 0, 0.498534,-99) , 
NN(
0, 
0, 
-1, 0.809409, 1, -1, 0.481832,-99) , 
3, 1.33865, 0, 0, 0.492948,-99) , 
5, -0.429705, 0, 0, 0.499533,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0130097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554655,-99) , 
NN(
0, 
0, 
-1, 0.330678, 1, -1, 0.496168,-99) , 
4, 0.999048, 1, 0, 0.498044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460584,-99) , 
3, 9.32815, 1, 0, 0.496896,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0135895);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522487,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49292, 1, 1, 0.504676,-99) , 
NN(
0, 
0, 
-1, -0.62002, 1, -1, 0.493203,-99) , 
0, 0.496186, 1, 0, 0.496846,-99) , 
2, 0.214255, 0, 0, 0.497897,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0130209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483517,-99) , 
3, 6.55444, 1, 0, 0.502666,-99) , 
3, 9.12912, 0, 0, 0.504064,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.486216,-99) , 
4, 0.999524, 0, 0, 0.503061,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0127673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48127,-99) , 
5, 0.616218, 1, 0, 0.507441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496913,-99) , 
5, 0.805276, 0, 0, 0.497953,-99) , 
0, 0.494508, 1, 0, 0.499913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475315,-99) , 
0, 0.505709, 1, 0, 0.499014,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.00768271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462804,-99) , 
4, 0.999728, 0, 0, 0.498769,-99) , 
5, 0.807231, 0, 0, 0.499943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46325,-99) , 
4, 0.999048, 0, 0, 0.498754,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0209702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497304,-99) , 
2, 0.0744558, 0, 0, 0.500341,-99) , 
4, 0.999048, 1, 0, 0.502464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468653,-99) , 
2, -0.0758026, 0, 0, 0.500877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440013,-99) , 
5, 0.60919, 1, 0, 0.490074,-99) , 
3, 4.74841, 1, 0, 0.500111,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.012637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.869733, 1, 1, 0.53091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498215,-99) , 
0, 0.493329, 1, 0, 0.500524,-99) , 
5, 0.806351, 0, 0, 0.502192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454174,-99) , 
3, 9.31425, 1, 0, 0.50075,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.00941673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498932,-99) , 
0, 0.505709, 0, 0, 0.500057,-99) , 
4, 0.999048, 1, 0, 0.501533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461379,-99) , 
3, 9.07001, 1, 0, 0.500176,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0115972);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49957,-99) , 
2, -0.050968, 1, 0, 0.502623,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.480842,-99) , 
4, 0.999887, 0, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.474904,-99) , 
4, 0.999524, 0, 0, 0.499347,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0204154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482716,-99) , 
4, 0.999637, 0, 0, 0.507896,-99) , 
4, 0.999048, 1, 0, 0.508668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49187,-99) , 
0, 0.490562, 1, 0, 0.500446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475361,-99) , 
5, -0.0538773, 1, 0, 0.490653,-99) , 
0, 0.492376, 0, 0, 0.50693,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.00987373);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.549577, 1, 1, 0.50383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458267,-99) , 
3, 9.33743, 1, 0, 0.5025,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0106024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.70747, 0, 1, 0.532295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498708,-99) , 
4, 0.999977, 1, 0, 0.501316,-99) , 
4, 0.999524, 1, 0, 0.502969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475584,-99) , 
3, 9.32353, 1, 0, 0.502122,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0108918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496965,-99) , 
0, 0.499043, 0, 0, 0.500415,-99) , 
3, 9.13371, 0, 0, 0.501241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470455,-99) , 
4, 0.999048, 0, 0, 0.500236,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.070722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.344127, 1, 1, 0.594039,-99) , 
NN(
0, 
0, 
-1, 0.780058, 1, -1, 0.47887,-99) , 
1, -0.00235463, 1, 0, 0.507634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498317,-99) , 
5, -0.751534, 0, 0, 0.506205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457438,-99) , 
1, 0.00368458, 0, 0, 0.491746,-99) , 
5, -0.673885, 1, 0, 0.49921,-99) , 
5, -0.143941, 0, 0, 0.503309,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0188148);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497274, 1, 1, 0.509196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482549,-99) , 
0, 0.489519, 0, 0, 0.508517,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0229435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.873165, 0, 1, 0.512901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496528,-99) , 
1, 0.00897472, 0, 0, 0.504075,-99) , 
5, -0.809749, 1, 0, 0.505584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477415,-99) , 
2, 0.214079, 1, 0, 0.504516,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0301279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492654,-99) , 
5, 0.324217, 1, 0, 0.506362,-99) , 
4, 0.999048, 1, 0, 0.508317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476469,-99) , 
2, -0.0788187, 0, 0, 0.50475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460667,-99) , 
2, 0.0707524, 1, 0, 0.492708,-99) , 
3, 4.72382, 1, 0, 0.505328,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0206139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.55808, 0, 1, 0.524377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495775,-99) , 
3, 3.17968, 1, 0, 0.504665,-99) , 
5, 0.616997, 0, 0, 0.507677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47904,-99) , 
3, 9.33163, 1, 0, 0.506807,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.00763475);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12028, 0, 1, 0.503294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481088,-99) , 
4, 0.999048, 0, 0, 0.502549,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0175776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214122, 0, 1, 0.505988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486157,-99) , 
0, 0.491426, 0, 0, 0.504784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479889,-99) , 
5, -0.683104, 1, 0, 0.498892,-99) , 
NN(
0, 
0, 
-1, -0.796278, 0, -1, 0.464746,-99) , 
2, 0.0695735, 1, 0, 0.493713,-99) , 
5, -0.524643, 0, 0, 0.50094,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0326818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.51154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478615,-99) , 
3, 9.02857, 1, 0, 0.509785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466486,-99) , 
4, 0.999991, 0, 0, 0.499893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461082,-99) , 
4, 0.999905, 0, 0, 0.497756,-99) , 
5, -0.144359, 0, 0, 0.503663,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0187038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48175,-99) , 
4, 0.999954, 0, 0, 0.509058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495645,-99) , 
5, 0.615822, 0, 0, 0.497361,-99) , 
2, -0.0704309, 1, 0, 0.499249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442501,-99) , 
4, 0.999048, 0, 0, 0.497463,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0119963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78856, 0, 1, 0.503272,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.470501,-99) , 
4, 0.999887, 0, 0, 0.500517,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.485283,-99) , 
4, 0.999524, 0, 0, 0.499657,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0210545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495422,-99) , 
0, 0.505709, 1, 0, 0.514855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457793,-99) , 
0, 0.493328, 0, 0, 0.504545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492937,-99) , 
3, 0.545545, 1, 0, 0.495456,-99) , 
3, 4.7423, 0, 0, 0.497189,-99) , 
0, 0.504757, 0, 0, 0.498384,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.00637778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541898,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.498989,-99) , 
4, 0.999048, 1, 0, 0.500349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46693,-99) , 
3, 9.38081, 1, 0, 0.49939,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.00886865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498438,-99) , 
3, 9.11447, 0, 0, 0.499563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477705,-99) , 
4, 0.999048, 0, 0, 0.498877,-99) , 
NN(
0, 
0, 
-1, -0.43248, 0, -1, 0.477362,-99) , 
0, 0.504757, 1, 0, 0.49752,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0202616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499862,-99) , 
4, 0.999524, 1, 0, 0.504184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464298,-99) , 
3, 9.40469, 1, 0, 0.502542,-99) , 
NN(
NN(
0, 
0, 
-1, -0.682971, 1, -1, 0.49578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446422,-99) , 
1, -0.00417265, 1, 0, 0.478044,-99) , 
3, 3.67211, 1, 0, 0.490871,-99) , 
5, -0.524411, 0, 0, 0.4985,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0124105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499026,-99) , 
3, 3.39096, 0, 0, 0.501969,-99) , 
3, 8.71991, 0, 0, 0.50363,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.4716,-99) , 
4, 0.999524, 0, 0, 0.501917,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0127437);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.08925, 0, 1, 0.505931,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.48617,-99) , 
4, 0.999524, 0, 0, 0.504829,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0287192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493685,-99) , 
1, -0.00570241, 1, 0, 0.509001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490981,-99) , 
0, 0.499995, 0, 0, 0.494903,-99) , 
5, -0.225472, 0, 0, 0.501872,-99) , 
NN(
0, 
0, 
-1, 0.870642, 1, -1, 0.470163,-99) , 
5, 0.80723, 1, 0, 0.500173,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0378532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.298731, 1, 1, 0.647046,-99) , 
NN(
0, 
0, 
-1, 0.236528, 0, -1, 0.490369,-99) , 
1, -0.00444513, 1, 0, 0.509557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493351,-99) , 
5, -0.682945, 1, 0, 0.501954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466141,-99) , 
2, -0.0387824, 0, 0, 0.488795,-99) , 
3, 3.31784, 1, 0, 0.49777,-99) , 
5, -0.334177, 0, 0, 0.504456,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0277299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.02857, 0, 1, 0.512346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475928,-99) , 
4, 0.999048, 0, 0, 0.511002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509479,-99) , 
NN(
0, 
0, 
-1, 3.53092, 1, -1, 0.478257,-99) , 
5, -0.846009, 0, 0, 0.484218,-99) , 
5, -0.809763, 0, 0, 0.506625,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0120053);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.805276, 0, 1, 0.505423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474728,-99) , 
3, 9.39171, 1, 0, 0.504528,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.044159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.248712, 1, 1, 0.640108,-99) , 
NN(
0, 
0, 
-1, 0.0458102, 0, -1, 0.489372,-99) , 
1, -0.00444513, 1, 0, 0.508531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49229,-99) , 
3, 1.79018, 0, 0, 0.500999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435227,-99) , 
2, 0.0650593, 1, 0, 0.486132,-99) , 
3, 2.63788, 1, 0, 0.494943,-99) , 
5, -0.429543, 0, 0, 0.503214,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0269309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49508,-99) , 
0, 0.492377, 0, 0, 0.520204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498566,-99) , 
3, 2.50391, 0, 0, 0.508156,-99) , 
5, 0.299307, 0, 0, 0.514827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485201,-99) , 
0, 0.494281, 0, 0, 0.501311,-99) , 
NN(
0, 
0, 
-1, -0.135872, 0, -1, 0.47366,-99) , 
2, -0.068022, 0, 0, 0.496522,-99) , 
5, -0.334501, 0, 0, 0.506899,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.023768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214029, 1, 1, 0.513927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469596,-99) , 
0, 0.504757, 1, 0, 0.511612,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0809568, 0, 1, 0.503355,-99) , 
NN(
0, 
0, 
-1, -0.0756902, 0, -1, 0.482722,-99) , 
3, 2.8372, 1, 0, 0.495525,-99) , 
5, -0.240202, 0, 0, 0.504009,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0476617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.269276, 1, 1, 0.634182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486568,-99) , 
2, -0.071276, 1, 0, 0.490821,-99) , 
1, -0.00444513, 1, 0, 0.510079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475882,-99) , 
2, 0.0699307, 1, 0, 0.501252,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.466291,-99) , 
2, -0.078279, 0, 0, 0.496072,-99) , 
5, -0.525115, 0, 0, 0.505222,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0231356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99981, 1, 1, 0.51551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485631,-99) , 
3, 4.77708, 1, 0, 0.504123,-99) , 
5, 0.453946, 1, 0, 0.511085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49219,-99) , 
3, 2.18848, 0, 0, 0.50362,-99) , 
NN(
0, 
0, 
-1, -0.668723, 1, -1, 0.491811,-99) , 
5, -0.565198, 0, 0, 0.493819,-99) , 
5, -0.429294, 0, 0, 0.504263,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0192462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494818,-99) , 
5, -0.620959, 0, 0, 0.533813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484674,-99) , 
3, 4.72098, 1, 0, 0.517128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498981,-99) , 
5, 0.137718, 0, 0, 0.505849,-99) , 
NN(
0, 
0, 
-1, 0.503985, 1, -1, 0.495134,-99) , 
0, 0.49809, 1, 0, 0.500386,-99) , 
2, 0.0718538, 0, 0, 0.502959,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0152291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.56659, 0, 1, 0.52027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48372,-99) , 
5, 0.516947, 1, 0, 0.513576,-99) , 
NN(
NN(
0, 
0, 
-1, 0.070806, 0, 1, 0.511226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485573,-99) , 
2, -0.0717184, 0, 0, 0.500606,-99) , 
0, 0.502852, 0, 0, 0.502407,-99) , 
0, 0.493329, 1, 0, 0.50394,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0362061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0687391, 1, 1, 0.527255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490672,-99) , 
2, 0.072849, 0, 0, 0.496766,-99) , 
1, 0.000525683, 0, 0, 0.510412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483425,-99) , 
4, 0.999995, 0, 0, 0.50142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469028,-99) , 
4, 0.999905, 0, 0, 0.499409,-99) , 
5, 0.139881, 0, 0, 0.503586,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0183896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470659,-99) , 
4, 0.999683, 0, 0, 0.505233,-99) , 
4, 0.999048, 1, 0, 0.506535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499576,-99) , 
2, -0.0848245, 1, 0, 0.504084,-99) , 
NN(
0, 
0, 
-1, -0.0491234, 0, -1, 0.484529,-99) , 
3, 3.09244, 1, 0, 0.49738,-99) , 
5, -0.524641, 0, 0, 0.503333,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0170431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497755,-99) , 
4, 0.999909, 1, 0, 0.500366,-99) , 
4, 0.999048, 1, 0, 0.502001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460637,-99) , 
5, 0.665596, 1, 0, 0.498486,-99) , 
NN(
0, 
0, 
-1, 0.499994, 1, -1, 0.481595,-99) , 
5, -0.146889, 0, 0, 0.490285,-99) , 
3, 4.68186, 1, 0, 0.499714,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0167997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.00889, 0, 1, 0.507297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486093,-99) , 
4, 0.999048, 0, 0, 0.506477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508229,-99) , 
NN(
0, 
0, 
-1, 2.54918, 1, -1, 0.485495,-99) , 
5, -0.864194, 0, 0, 0.492058,-99) , 
5, -0.809856, 0, 0, 0.504104,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0484952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0694928, 1, 1, 0.567263,-99) , 
NN(
0, 
0, 
-1, 0.496186, 1, -1, 0.482539,-99) , 
1, 0.00226331, 0, 0, 0.506686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477882,-99) , 
2, 0.0695735, 1, 0, 0.501022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462102,-99) , 
5, -0.602338, 0, 0, 0.485168,-99) , 
5, -0.660536, 1, 0, 0.497562,-99) , 
5, -0.524753, 0, 0, 0.503526,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0215561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.511632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471606,-99) , 
5, 0.870643, 1, 0, 0.509793,-99) , 
NN(
NN(
0, 
0, 
-1, -0.941115, 0, 1, 0.513468,-99) , 
NN(
0, 
0, 
-1, 6.48331, 1, -1, 0.4925,-99) , 
5, -0.90488, 1, 0, 0.496627,-99) , 
5, -0.334175, 0, 0, 0.504051,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.01931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495233, 1, 1, 0.512756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480145,-99) , 
0, 0.499044, 1, 0, 0.500157,-99) , 
5, 0.777661, 1, 0, 0.5101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48646,-99) , 
0, 0.496186, 0, 0, 0.504179,-99) , 
NN(
0, 
0, 
-1, -0.76476, 0, -1, 0.494424,-99) , 
3, 1.28691, 1, 0, 0.497541,-99) , 
5, 0.234869, 0, 0, 0.501807,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.00876262);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498122,-99) , 
4, 0.999048, 1, 0, 0.499414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476851,-99) , 
3, 9.06192, 1, 0, 0.498657,-99) , 
0, 0.489519, 1, 0, 0.499441,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0096886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0434421, 1, 1, 0.516653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494801,-99) , 
5, -0.524641, 0, 0, 0.49925,-99) , 
2, -0.213708, 1, 0, 0.500103,-99) , 
0, 0.492376, 1, 0, 0.501737,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0165491);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214296, 0, 1, 0.506709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485531,-99) , 
3, 5.08368, 0, 0, 0.489002,-99) , 
0, 0.503804, 0, 0, 0.491903,-99) , 
5, -0.71506, 0, 0, 0.503242,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0124221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42113, 1, 1, 0.531695,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.479174,-99) , 
3, 4.49845, 1, 0, 0.512534,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499956,-99) , 
2, -0.227783, 1, 0, 0.50117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472469,-99) , 
4, 0.999524, 0, 0, 0.50005,-99) , 
2, 0.0711978, 0, 0, 0.501979,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0118832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497715,-99) , 
2, 0.0307876, 0, 0, 0.501039,-99) , 
2, -0.213733, 1, 0, 0.50207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476367,-99) , 
4, 0.999048, 0, 0, 0.501234,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.010967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498777,-99) , 
0, 0.494281, 1, 0, 0.501599,-99) , 
3, 9.00889, 0, 0, 0.502895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474928,-99) , 
4, 0.999048, 0, 0, 0.50199,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0106422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497894,-99) , 
0, 0.492376, 1, 0, 0.499193,-99) , 
5, 0.805918, 0, 0, 0.500775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462976,-99) , 
3, 9.38081, 1, 0, 0.499665,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0180325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.89693, 1, 1, 0.525345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463196,-99) , 
5, 0.229079, 0, 0, 0.487236,-99) , 
3, 4.75211, 1, 0, 0.512377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497945,-99) , 
3, 1.78677, 0, 0, 0.507889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497685,-99) , 
4, 0.999524, 1, 0, 0.499393,-99) , 
5, -0.619514, 1, 0, 0.50195,-99) , 
2, -0.0713415, 1, 0, 0.50372,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0198081);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.507693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48242,-99) , 
0, 0.497048, 0, 0, 0.501178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467652,-99) , 
0, 0.502852, 1, 0, 0.49556,-99) , 
3, 4.67335, 1, 0, 0.505312,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0267877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.511288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481449,-99) , 
1, -0.00147159, 1, 0, 0.497781,-99) , 
5, 0.46647, 1, 0, 0.505322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488511,-99) , 
0, 0.496186, 0, 0, 0.499588,-99) , 
NN(
0, 
0, 
-1, 0.0669351, 1, -1, 0.480615,-99) , 
3, 4.19612, 1, 0, 0.495299,-99) , 
5, -0.239609, 0, 0, 0.500584,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0222762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0426966, 0, 1, 0.504895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459042,-99) , 
1, 0.00253899, 0, 0, 0.488249,-99) , 
4, 0.999909, 0, 0, 0.502783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468063,-99) , 
4, 0.999048, 0, 0, 0.501674,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0159186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.377569, 0, 1, 0.510457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479952,-99) , 
5, 0.526993, 0, 0, 0.499525,-99) , 
5, 0.448727, 1, 0, 0.504673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497093,-99) , 
0, 0.491424, 1, 0, 0.499116,-99) , 
NN(
0, 
0, 
-1, 0.499996, 1, -1, 0.484171,-99) , 
3, 3.43849, 1, 0, 0.494584,-99) , 
5, -0.0492851, 0, 0, 0.499142,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0129493);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489901,-99) , 
2, -0.1121, 0, 0, 0.502098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475803,-99) , 
2, 0.214296, 1, 0, 0.501199,-99) , 
NN(
0, 
0, 
-1, 0.327467, 1, -1, 0.488959,-99) , 
0, 0.500947, 1, 0, 0.498049,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0234212);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498873,-99) , 
3, 2.27868, 1, 0, 0.520385,-99) , 
NN(
0, 
0, 
-1, 0.134903, 0, -1, 0.488014,-99) , 
3, 4.62601, 1, 0, 0.508824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495384,-99) , 
5, -0.524896, 0, 0, 0.504746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472822,-99) , 
2, 0.00726673, 0, 0, 0.493723,-99) , 
2, -0.00341917, 1, 0, 0.49973,-99) , 
2, 0.0713805, 0, 0, 0.50111,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0269861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454198,-99) , 
3, 4.58822, 1, 0, 0.4866,-99) , 
1, 0.0024874, 0, 0, 0.508963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488044,-99) , 
5, -0.809983, 0, 0, 0.501478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485052,-99) , 
3, 4.17608, 0, 0, 0.490023,-99) , 
2, -0.00332758, 1, 0, 0.496278,-99) , 
2, 0.0714887, 0, 0, 0.498234,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0222219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495576,-99) , 
3, 1.1935, 1, 0, 0.500975,-99) , 
5, 0.806353, 0, 0, 0.503082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471745,-99) , 
0, 0.501128, 1, 0, 0.498685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468591,-99) , 
0, 0.495233, 0, 0, 0.49195,-99) , 
3, 4.70919, 1, 0, 0.50093,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0310514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484872,-99) , 
4, 0.999991, 0, 0, 0.506758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481365,-99) , 
4, 0.999905, 0, 0, 0.505245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478455,-99) , 
4, 0.999977, 1, 0, 0.492397,-99) , 
4, 0.999524, 1, 0, 0.494228,-99) , 
5, 0.0462922, 1, 0, 0.5007,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0101173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499425,-99) , 
3, 9.13371, 0, 0, 0.501263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458322,-99) , 
4, 0.999773, 0, 0, 0.499746,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.472515,-99) , 
4, 0.999524, 0, 0, 0.498263,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0127084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490212,-99) , 
3, 3.92633, 1, 0, 0.499632,-99) , 
3, 9.0147, 0, 0, 0.500977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464055,-99) , 
4, 0.999048, 0, 0, 0.499795,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0204601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493901,-99) , 
0, 0.493329, 1, 0, 0.496855,-99) , 
4, 0.999048, 1, 0, 0.49871,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471711,-99) , 
2, -0.0712824, 0, 0, 0.492981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440563,-99) , 
0, 0.49333, 0, 0, 0.486146,-99) , 
3, 4.67335, 1, 0, 0.496271,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0195696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.527166,-99) , 
NN(
0, 
0, 
-1, 0.136887, 1, -1, 0.487086,-99) , 
3, 4.71374, 1, 0, 0.513368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495318,-99) , 
5, -0.810276, 1, 0, 0.498489,-99) , 
NN(
0, 
0, 
-1, 4.83659, 1, -1, 0.478632,-99) , 
2, -0.152088, 0, 0, 0.496785,-99) , 
2, 0.0720343, 0, 0, 0.49932,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0142789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498624,-99) , 
3, 3.18664, 1, 0, 0.512916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499152,-99) , 
2, -0.211823, 1, 0, 0.501076,-99) , 
5, -0.61971, 1, 0, 0.50472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458724,-99) , 
3, 9.37272, 1, 0, 0.503384,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0169826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480435,-99) , 
1, -0.000949652, 1, 0, 0.496447,-99) , 
3, 4.73332, 1, 0, 0.502831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513949,-99) , 
NN(
0, 
0, 
-1, -0.964395, 1, -1, 0.475758,-99) , 
5, -0.932042, 0, 0, 0.487729,-99) , 
5, -0.904866, 0, 0, 0.501589,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0163175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495001,-99) , 
3, 1.85262, 1, 0, 0.500663,-99) , 
2, 0.215898, 0, 0, 0.502166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463752,-99) , 
3, 9.32353, 1, 0, 0.501048,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0139186);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0684321, 0, 1, 0.512547,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0693359, 0, 1, 0.505853,-99) , 
NN(
0, 
0, 
-1, 0.498013, 0, -1, 0.494527,-99) , 
0, 0.495097, 1, 0, 0.497875,-99) , 
0, 0.5019, 0, 0, 0.500769,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0113204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 0, 1, 0.511221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486926,-99) , 
0, 0.502852, 1, 0, 0.500342,-99) , 
2, -0.05065, 1, 0, 0.502235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478945,-99) , 
2, -0.213882, 0, 0, 0.501282,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0101779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.13835, 0, 1, 0.502533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466904,-99) , 
4, 0.999728, 0, 0, 0.500863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4612,-99) , 
4, 0.999048, 0, 0, 0.499585,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0128417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495925,-99) , 
3, 0.973692, 1, 0, 0.498257,-99) , 
2, 0.215453, 0, 0, 0.499424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465519,-99) , 
3, 9.32353, 1, 0, 0.49842,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0193372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499608,-99) , 
3, 3.43179, 1, 0, 0.519135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480323,-99) , 
5, 0.516108, 1, 0, 0.510784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49635,-99) , 
3, 4.72522, 1, 0, 0.505392,-99) , 
NN(
0, 
0, 
-1, 0.00728522, 0, -1, 0.490942,-99) , 
2, -0.00340437, 1, 0, 0.498846,-99) , 
2, 0.0714181, 0, 0, 0.500676,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.020223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97165, 1, 1, 0.516912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491827,-99) , 
2, 0.00404181, 0, 0, 0.498947,-99) , 
2, -0.0706551, 1, 0, 0.501968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46209,-99) , 
0, 0.500947, 1, 0, 0.496843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445825,-99) , 
2, -0.0719842, 0, 0, 0.488273,-99) , 
5, 0.616996, 1, 0, 0.499853,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0119625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49566,-99) , 
3, 6.28007, 0, 0, 0.496895,-99) , 
2, 0.215898, 0, 0, 0.497722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476379,-99) , 
3, 9.37272, 1, 0, 0.497103,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0115648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.239832, 1, 1, 0.517568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476323,-99) , 
5, -0.432703, 0, 0, 0.497704,-99) , 
2, -0.139972, 0, 0, 0.507614,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498528,-99) , 
0, 0.499995, 0, 0, 0.508305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471142,-99) , 
0, 0.503804, 1, 0, 0.497976,-99) , 
2, 0.0775806, 0, 0, 0.49978,-99) , 
2, -0.0719842, 1, 0, 0.501091,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0284023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.508781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489672,-99) , 
1, -0.00527326, 1, 0, 0.498649,-99) , 
5, -0.00352689, 1, 0, 0.502545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490597,-99) , 
3, 3.48507, 0, 0, 0.501564,-99) , 
NN(
0, 
0, 
-1, 0.500358, 0, -1, 0.486926,-99) , 
0, 0.49809, 1, 0, 0.494051,-99) , 
5, -0.619529, 0, 0, 0.500039,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0105032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497814,-99) , 
2, -0.219807, 1, 0, 0.499133,-99) , 
3, 9.13548, 0, 0, 0.500057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461741,-99) , 
4, 0.999048, 0, 0, 0.498832,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0204636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.34385, 1, 1, 0.521167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494663,-99) , 
0, 0.498091, 1, 0, 0.500402,-99) , 
5, 0.32762, 1, 0, 0.515025,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487177,-99) , 
3, 1.65735, 0, 0, 0.499473,-99) , 
5, -0.0501037, 0, 0, 0.502374,-99) , 
2, -0.0713415, 1, 0, 0.504536,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0140641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49652,-99) , 
3, 3.33622, 1, 0, 0.514904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485033,-99) , 
2, -0.150057, 0, 0, 0.501127,-99) , 
2, 0.0737452, 0, 0, 0.503167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483744,-99) , 
0, 0.501266, 1, 0, 0.498689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448211,-99) , 
0, 0.494282, 0, 0, 0.49009,-99) , 
5, 0.615822, 1, 0, 0.501161,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0136638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489055,-99) , 
0, 0.506266, 0, 0, 0.498598,-99) , 
0, 0.505256, 1, 0, 0.51142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497718,-99) , 
0, 0.495324, 1, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.49317,-99) , 
5, 0.0462935, 0, 0, 0.49637,-99) , 
0, 0.503804, 0, 0, 0.497906,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0137204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491132,-99) , 
5, 0.711315, 0, 0, 0.529242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467409,-99) , 
4, 0.999751, 0, 0, 0.502827,-99) , 
4, 0.999524, 1, 0, 0.504259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481628,-99) , 
3, 9.37272, 1, 0, 0.503594,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0207893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.133594, 0, 1, 0.523013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474882,-99) , 
5, 0.138294, 1, 0, 0.504252,-99) , 
0, 0.498091, 0, 0, 0.514029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486598,-99) , 
0, 0.493601, 0, 0, 0.498974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488787,-99) , 
0, 0.503532, 0, 0, 0.491753,-99) , 
0, 0.49809, 1, 0, 0.495295,-99) , 
2, 0.0714887, 0, 0, 0.498192,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.012029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.78388, 0, 1, 0.503623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481118,-99) , 
5, 0.703922, 0, 0, 0.488918,-99) , 
4, 0.999909, 0, 0, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466407,-99) , 
4, 0.999048, 0, 0, 0.500626,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.00900652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498798,-99) , 
5, 0.807231, 0, 0, 0.499908,-99) , 
3, 9.12028, 0, 0, 0.501139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46037,-99) , 
4, 0.999048, 0, 0, 0.499863,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0135409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492239,-99) , 
2, -0.00321519, 1, 0, 0.503816,-99) , 
2, 0.0716008, 0, 0, 0.508998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498254,-99) , 
2, 0.0702489, 0, 0, 0.501901,-99) , 
NN(
0, 
0, 
-1, 0.070176, 1, -1, 0.494667,-99) , 
0, 0.499995, 0, 0, 0.497676,-99) , 
0, 0.494281, 1, 0, 0.499792,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.015405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497014,-99) , 
3, 3.1145, 1, 0, 0.513905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486372,-99) , 
0, 0.492377, 0, 0, 0.502358,-99) , 
2, -0.0697438, 1, 0, 0.504303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473568,-99) , 
2, 0.0706818, 1, 0, 0.498612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467645,-99) , 
0, 0.494282, 0, 0, 0.493429,-99) , 
5, 0.517099, 1, 0, 0.502084,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0156432);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497115,-99) , 
5, 0.670146, 1, 0, 0.504936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49029,-99) , 
5, -0.674133, 1, 0, 0.496198,-99) , 
5, 0.140582, 0, 0, 0.499517,-99) , 
0, 0.489519, 1, 0, 0.500351,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0141484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495485,-99) , 
2, -0.2105, 1, 0, 0.496311,-99) , 
3, 9.07582, 0, 0, 0.497384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454603,-99) , 
4, 0.999048, 0, 0, 0.496048,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0102072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.5334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486449,-99) , 
4, 0.999932, 0, 0, 0.499282,-99) , 
4, 0.999524, 1, 0, 0.501117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479924,-99) , 
3, 9.25993, 1, 0, 0.500445,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0104422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498185,-99) , 
2, -0.0311046, 1, 0, 0.500727,-99) , 
2, 0.213617, 0, 0, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469664,-99) , 
4, 0.999048, 0, 0, 0.500852,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0126973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499353, 1, 1, 0.521434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490255,-99) , 
5, -0.62068, 0, 0, 0.498371,-99) , 
0, 0.499859, 1, 0, 0.502519,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494467,-99) , 
0, 0.499042, 0, 0, 0.497868,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.00788041);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.11447, 0, 1, 0.503004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467262,-99) , 
4, 0.999048, 0, 0, 0.50188,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.00722277);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518029,-99) , 
NN(
NN(
0, 
0, 
-1, -0.000703756, 1, 1, 0.51385,-99) , 
NN(
0, 
0, 
-1, 0.496821, 0, -1, 0.497828,-99) , 
0, 0.491424, 1, 0, 0.498887,-99) , 
2, -0.211841, 1, 0, 0.499735,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.00890095);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497787,-99) , 
5, -0.714853, 1, 0, 0.499434,-99) , 
2, 0.213937, 0, 0, 0.500324,-99) , 
0, 0.490472, 1, 0, 0.501362,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.009838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491561,-99) , 
2, -0.152251, 0, 0, 0.51387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477856,-99) , 
2, 0.244141, 1, 0, 0.499679,-99) , 
2, -0.0512089, 1, 0, 0.502174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475513,-99) , 
2, -0.214437, 0, 0, 0.50109,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.00622931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.7652, 1, 1, 0.516416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499788,-99) , 
2, -0.213069, 1, 0, 0.500347,-99) , 
5, 0.71087, 0, 0, 0.502112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472389,-99) , 
0, 0.489519, 0, 0, 0.501356,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0134133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491155,-99) , 
3, 2.23663, 1, 0, 0.51585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48605,-99) , 
5, 0.0427313, 0, 0, 0.500065,-99) , 
3, 4.54579, 1, 0, 0.510071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498351,-99) , 
5, 0.0455349, 0, 0, 0.501284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484911,-99) , 
0, 0.490472, 0, 0, 0.500682,-99) , 
2, -0.0713415, 1, 0, 0.502277,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0355489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490374,-99) , 
1, -0.00638668, 1, 0, 0.503598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480603,-99) , 
0, 0.490472, 0, 0, 0.502668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477114,-99) , 
2, -0.0791481, 0, 0, 0.4962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479081,-99) , 
2, 0.0696619, 1, 0, 0.493642,-99) , 
5, -0.71484, 0, 0, 0.500557,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0252436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495832,-99) , 
3, 1.98697, 1, 0, 0.505555,-99) , 
5, 0.615269, 0, 0, 0.511637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494719,-99) , 
0, 0.499995, 1, 0, 0.502214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470135,-99) , 
1, 0.00211315, 0, 0, 0.491458,-99) , 
5, 0.520774, 1, 0, 0.500074,-99) , 
2, -0.0719397, 1, 0, 0.502024,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0140008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.39433, 1, 1, 0.517915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482053,-99) , 
0, 0.5058, 1, 0, 0.504822,-99) , 
2, 0.0702489, 0, 0, 0.506864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493809,-99) , 
0, 0.496594, 1, 0, 0.500128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477201,-99) , 
5, -0.904889, 0, 0, 0.498298,-99) , 
0, 0.49809, 0, 0, 0.502709,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0111865);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491879,-99) , 
5, 0.512334, 1, 0, 0.513114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498336,-99) , 
5, 0.519589, 0, 0, 0.500576,-99) , 
2, 0.0510611, 0, 0, 0.502605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486071,-99) , 
2, 0.214319, 1, 0, 0.501995,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0147281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.792282, 0, 1, 0.516124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494632,-99) , 
0, 0.495234, 0, 0, 0.510722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495464,-99) , 
2, 0.0637649, 0, 0, 0.498295,-99) , 
3, 7.75678, 0, 0, 0.49941,-99) , 
5, 0.711283, 0, 0, 0.500629,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0112067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.211823, 1, 1, 0.504753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466287,-99) , 
3, 9.26574, 1, 0, 0.503624,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.045076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485629,-99) , 
5, 0.581859, 1, 0, 0.516299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486034,-99) , 
1, 0.00570674, 0, 0, 0.501296,-99) , 
2, -0.071862, 1, 0, 0.503814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488417,-99) , 
5, -0.836946, 1, 0, 0.502562,-99) , 
NN(
0, 
0, 
-1, 0.502127, 0, -1, 0.487485,-99) , 
0, 0.497138, 1, 0, 0.493661,-99) , 
5, -0.714641, 0, 0, 0.501423,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0122355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0235347, 0, 1, 0.505263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488137,-99) , 
2, -0.131879, 0, 0, 0.504428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481596,-99) , 
2, -0.213469, 0, 0, 0.503479,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0213239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.071723, 0, 1, 0.516628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49606,-99) , 
0, 0.496594, 1, 0, 0.50558,-99) , 
0, 0.49809, 0, 0, 0.511223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498601,-99) , 
5, -0.773539, 0, 0, 0.504112,-99) , 
NN(
0, 
0, 
-1, 1.84583, 0, -1, 0.488798,-99) , 
5, -0.682954, 1, 0, 0.500168,-99) , 
5, -0.524407, 0, 0, 0.507388,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.018062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47231,-99) , 
0, 0.497137, 0, 0, 0.492071,-99) , 
NN(
0, 
0, 
-1, 0.137517, 0, -1, 0.464488,-99) , 
2, -0.0716195, 0, 0, 0.483989,-99) , 
3, 4.7423, 1, 0, 0.502551,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0106162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.33606, 1, 1, 0.519214,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.486742,-99) , 
3, 4.75211, 1, 0, 0.508371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498422,-99) , 
5, 0.806353, 0, 0, 0.499363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481121,-99) , 
0, 0.505709, 1, 0, 0.49876,-99) , 
2, -0.0716846, 1, 0, 0.500381,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0109048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498256,-99) , 
3, 0.96273, 1, 0, 0.501095,-99) , 
4, 0.999048, 1, 0, 0.502296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48035,-99) , 
3, 9.06192, 1, 0, 0.501566,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0179782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486194,-99) , 
1, 0.00180796, 0, 0, 0.506231,-99) , 
5, -0.810533, 1, 0, 0.510114,-99) , 
NN(
NN(
0, 
0, 
-1, 0.806351, 0, 1, 0.502603,-99) , 
NN(
0, 
0, 
-1, 0.490154, 1, -1, 0.489412,-99) , 
0, 0.491424, 0, 0, 0.501434,-99) , 
0, 0.500947, 0, 0, 0.503718,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.00952322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502262, 0, 1, 0.502673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4783,-99) , 
3, 2.09885, 0, 0, 0.491754,-99) , 
0, 0.503804, 1, 0, 0.501591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49334,-99) , 
5, 0.805922, 0, 0, 0.5013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471828,-99) , 
0, 0.498091, 1, 0, 0.487838,-99) , 
5, 0.71087, 1, 0, 0.500164,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0153756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0713671, 1, 1, 0.517694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493823,-99) , 
2, 0.0768492, 1, 0, 0.502336,-99) , 
5, 0.52188, 0, 0, 0.505505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490198,-99) , 
5, -0.43082, 0, 0, 0.498221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470377,-99) , 
5, 0.707499, 1, 0, 0.495111,-99) , 
0, 0.496186, 0, 0, 0.502234,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.00863135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12161, 0, 1, 0.503137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452645,-99) , 
0, 0.49809, 0, 0, 0.477251,-99) , 
4, 0.999524, 0, 0, 0.501736,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0168409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495408,-99) , 
3, 1.90231, 0, 0, 0.50408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494167,-99) , 
4, 0.999524, 1, 0, 0.496206,-99) , 
5, 0.0451607, 1, 0, 0.500874,-99) , 
2, 0.214319, 0, 0, 0.501834,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0152316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499534,-99) , 
0, 0.502444, 1, 0, 0.503547,-99) , 
2, 0.0726641, 0, 0, 0.508585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493822,-99) , 
5, -0.904878, 1, 0, 0.495251,-99) , 
0, 0.489655, 1, 0, 0.496275,-99) , 
0, 0.5019, 0, 0, 0.498719,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.023718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499037,-99) , 
5, -0.144822, 1, 0, 0.52296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47302,-99) , 
5, 0.13595, 0, 0, 0.491837,-99) , 
3, 4.77793, 1, 0, 0.512662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497874,-99) , 
2, 0.00315815, 0, 0, 0.506687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488689,-99) , 
2, 0.00320184, 1, 0, 0.499316,-99) , 
5, -0.334177, 0, 0, 0.50348,-99) , 
2, -0.0716069, 1, 0, 0.505036,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0132006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496409,-99) , 
0, 0.493329, 1, 0, 0.498517,-99) , 
3, 9.07715, 0, 0, 0.499641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461279,-99) , 
5, 0.707452, 1, 0, 0.481703,-99) , 
4, 0.999524, 0, 0, 0.498656,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0183366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495392,-99) , 
5, 0.519596, 1, 0, 0.506874,-99) , 
0, 0.497637, 1, 0, 0.508399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492898,-99) , 
5, -0.00172623, 1, 0, 0.500027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479174,-99) , 
5, -0.905114, 0, 0, 0.498292,-99) , 
0, 0.497138, 0, 0, 0.504384,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.00835056);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525723,-99) , 
NN(
NN(
0, 
0, 
-1, 0.668866, 1, 1, 0.50729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498322,-99) , 
3, 8.07614, 0, 0, 0.499339,-99) , 
5, 0.614564, 0, 0, 0.500551,-99) , 
2, 0.213631, 0, 0, 0.501565,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0161541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.675877, 1, 1, 0.509699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493895,-99) , 
3, 2.1848, 0, 0, 0.498751,-99) , 
5, 0.328053, 0, 0, 0.501992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478585,-99) , 
5, -0.616153, 0, 0, 0.494348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461435,-99) , 
5, 0.612087, 1, 0, 0.489019,-99) , 
2, -0.0712183, 0, 0, 0.499851,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0152832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49836,-99) , 
4, 0.999997, 0, 0, 0.503367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450419,-99) , 
2, -0.070857, 0, 0, 0.488438,-99) , 
4, 0.999932, 0, 0, 0.501324,-99) , 
NN(
0, 
0, 
-1, 0.710297, 1, -1, 0.479255,-99) , 
4, 0.999524, 0, 0, 0.500118,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0144105);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494716,-99) , 
3, 1.63622, 0, 0, 0.50263,-99) , 
NN(
0, 
0, 
-1, -0.0458525, 0, -1, 0.483415,-99) , 
3, 2.40711, 1, 0, 0.494171,-99) , 
5, -0.524745, 0, 0, 0.500636,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0151743);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494915,-99) , 
2, -0.153062, 0, 0, 0.513357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488764,-99) , 
5, 0.136811, 0, 0, 0.496221,-99) , 
2, 0.0714181, 1, 0, 0.508705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490608,-99) , 
5, 0.138332, 1, 0, 0.497783,-99) , 
4, 0.999048, 1, 0, 0.499769,-99) , 
3, 4.70919, 0, 0, 0.501516,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0116722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531592,-99) , 
NN(
0, 
0, 
-1, 7.17178, 1, -1, 0.49672,-99) , 
5, 0.807231, 0, 0, 0.49861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459982,-99) , 
3, 9.38081, 1, 0, 0.497489,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0149765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0361032, 1, 1, 0.505935,-99) , 
NN(
0, 
0, 
-1, -0.0720206, 0, -1, 0.487683,-99) , 
4, 0.999932, 0, 0, 0.503422,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.48083,-99) , 
4, 0.999524, 0, 0, 0.50219,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0175759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.77197, 1, 1, 0.531093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480283,-99) , 
5, 0.840455, 1, 0, 0.494047,-99) , 
5, 0.76194, 1, 0, 0.512677,-99) , 
NN(
NN(
0, 
0, 
-1, 1.93003, 1, 1, 0.51113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492482,-99) , 
2, 0.00499639, 0, 0, 0.497852,-99) , 
2, -0.0697438, 1, 0, 0.500091,-99) , 
5, 0.616996, 0, 0, 0.50207,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0298783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0724707, 1, 1, 0.519768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499974,-99) , 
5, 0.810861, 0, 0, 0.505266,-99) , 
1, 0.000525683, 0, 0, 0.511749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492688,-99) , 
1, 0.00897472, 0, 0, 0.502733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470639,-99) , 
0, 0.499042, 0, 0, 0.485241,-99) , 
5, -0.823835, 0, 0, 0.498738,-99) , 
5, 0.233142, 0, 0, 0.50318,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0111027);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470952,-99) , 
5, 0.562019, 1, 0, 0.495585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472015,-99) , 
5, -0.810291, 0, 0, 0.492304,-99) , 
3, 4.74841, 1, 0, 0.501823,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0155434);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473843,-99) , 
4, 0.999909, 0, 0, 0.511965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498336,-99) , 
4, 0.999955, 1, 0, 0.500957,-99) , 
2, 0.0706818, 0, 0, 0.502573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466111,-99) , 
4, 0.999048, 0, 0, 0.501419,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0105142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0458102, 0, 1, 0.505615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477094,-99) , 
5, 0.801705, 1, 0, 0.499046,-99) , 
0, 0.49809, 1, 0, 0.501732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47279,-99) , 
5, -0.620542, 0, 0, 0.495037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458949,-99) , 
3, 4.73876, 1, 0, 0.48823,-99) , 
0, 0.493329, 0, 0, 0.499924,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0143829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495828,-99) , 
3, 5.56756, 0, 0, 0.497546,-99) , 
4, 0.999049, 1, 0, 0.499477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478204,-99) , 
3, 8.92652, 1, 0, 0.498708,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0092022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.711316, 0, 1, 0.521631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479977,-99) , 
5, 0.804514, 1, 0, 0.501194,-99) , 
4, 0.999524, 1, 0, 0.502267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464651,-99) , 
3, 9.37272, 1, 0, 0.501165,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0122349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.13924, 0, 1, 0.504544,-99) , 
NN(
0, 
0, 
-1, 0.999817, 1, -1, 0.482163,-99) , 
4, 0.999887, 0, 0, 0.50265,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.486155,-99) , 
4, 0.999524, 0, 0, 0.501747,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0128008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.65823, 0, 1, 0.512827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484927,-99) , 
5, 0.838044, 1, 0, 0.507285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497637,-99) , 
4, 0.99981, 1, 0, 0.498757,-99) , 
NN(
0, 
0, 
-1, 6.46214, 0, -1, 0.488204,-99) , 
3, 5.04711, 1, 0, 0.497036,-99) , 
5, 0.521138, 0, 0, 0.49915,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0152302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498858,-99) , 
0, 0.500947, 0, 0, 0.502828,-99) , 
4, 0.999048, 1, 0, 0.504105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480529,-99) , 
0, 0.495596, 0, 0, 0.498619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457601,-99) , 
0, 0.502852, 1, 0, 0.492064,-99) , 
3, 4.7423, 1, 0, 0.5018,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0272317);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492823,-99) , 
0, 0.495233, 0, 0, 0.512405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490671,-99) , 
5, 0.467964, 1, 0, 0.502845,-99) , 
5, 0.679188, 0, 0, 0.505779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465721,-99) , 
4, 0.999986, 0, 0, 0.4984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46316,-99) , 
4, 0.999905, 0, 0, 0.496337,-99) , 
5, 0.0455349, 0, 0, 0.500264,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0200614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.507531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48393,-99) , 
5, 0.834407, 1, 0, 0.506227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488368,-99) , 
3, 1.42819, 0, 0, 0.501109,-99) , 
NN(
0, 
0, 
-1, -0.864122, 0, -1, 0.479697,-99) , 
3, 2.87641, 1, 0, 0.493271,-99) , 
5, -0.714641, 0, 0, 0.503206,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0110969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498091,-99) , 
4, 0.999048, 1, 0, 0.499237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46523,-99) , 
3, 7.16367, 1, 0, 0.497675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455162,-99) , 
3, 9.37272, 1, 0, 0.496465,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.00893499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499674,-99) , 
0, 0.491424, 1, 0, 0.500966,-99) , 
NN(
0, 
0, 
-1, -0.0716846, 0, -1, 0.478424,-99) , 
4, 0.999864, 0, 0, 0.498935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462642,-99) , 
4, 0.999048, 0, 0, 0.497773,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0122574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505255, 1, 1, 0.525523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494214,-99) , 
5, -0.528125, 0, 0, 0.512854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497262,-99) , 
5, -0.429705, 1, 0, 0.500861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472612,-99) , 
4, 0.999048, 0, 0, 0.500015,-99) , 
0, 0.503805, 0, 0, 0.5013,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.00737084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499334,-99) , 
3, 9.08925, 0, 0, 0.50052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48241,-99) , 
4, 0.999728, 0, 0, 0.499645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462016,-99) , 
4, 0.999048, 0, 0, 0.498464,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0194771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.743045, 1, 1, 0.530389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499184,-99) , 
1, 0.000467764, 0, 0, 0.505398,-99) , 
4, 0.999524, 1, 0, 0.507749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495056,-99) , 
3, 1.6161, 0, 0, 0.50257,-99) , 
NN(
0, 
0, 
-1, 0.0822342, 1, -1, 0.482583,-99) , 
3, 3.28949, 1, 0, 0.496211,-99) , 
5, -0.334499, 0, 0, 0.502757,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.00964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.01603, 0, 1, 0.504128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47438,-99) , 
4, 0.999048, 0, 0, 0.50317,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0177745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495608,-99) , 
4, 0.999997, 0, 0, 0.500879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473883,-99) , 
4, 0.999815, 1, 0, 0.485731,-99) , 
4, 0.999932, 0, 0, 0.498817,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.47221,-99) , 
4, 0.999524, 0, 0, 0.497384,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0129994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480455,-99) , 
4, 0.999909, 0, 0, 0.50052,-99) , 
2, -0.213697, 1, 0, 0.501657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47531,-99) , 
4, 0.999048, 0, 0, 0.50081,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0284759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490644,-99) , 
5, 0.391297, 0, 0, 0.49539,-99) , 
1, 0.00873058, 0, 0, 0.5019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503408,-99) , 
NN(
0, 
0, 
-1, 3.66199, 1, -1, 0.478823,-99) , 
5, -0.855455, 0, 0, 0.484723,-99) , 
5, -0.810276, 0, 0, 0.499105,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0130325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498358,-99) , 
3, 1.87708, 1, 0, 0.502966,-99) , 
2, 0.215976, 0, 0, 0.504052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4674,-99) , 
3, 9.38661, 1, 0, 0.50299,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0202714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.74632, 0, 1, 0.512876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482672,-99) , 
2, 0.0743673, 1, 0, 0.497903,-99) , 
3, 2.40711, 1, 0, 0.506279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491479,-99) , 
2, -0.00861321, 1, 0, 0.499158,-99) , 
NN(
0, 
0, 
-1, 0.196475, 0, -1, 0.486987,-99) , 
3, 4.70943, 1, 0, 0.496676,-99) , 
5, -0.5244, 1, 0, 0.500037,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0131087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.383599, 1, 1, 0.519472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496545,-99) , 
2, -0.211869, 1, 0, 0.497831,-99) , 
3, 0.5519, 1, 0, 0.499618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464077,-99) , 
3, 9.38661, 1, 0, 0.4986,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0574031);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.672751, 1, 1, 0.559941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488089,-99) , 
5, 0.805919, 0, 0, 0.490647,-99) , 
1, 0.0022348, 0, 0, 0.509936,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467165,-99) , 
1, -0.00367738, 1, 0, 0.50201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488745,-99) , 
5, -0.957754, 1, 0, 0.492575,-99) , 
5, -0.778222, 0, 0, 0.497909,-99) , 
5, -0.334659, 0, 0, 0.50471,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0154667);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465318,-99) , 
5, 0.665843, 1, 0, 0.497042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47645,-99) , 
5, -0.71549, 0, 0, 0.492763,-99) , 
3, 4.68186, 1, 0, 0.503905,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0357333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.90107, 1, 1, 0.521266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475599,-99) , 
5, 0.230602, 0, 0, 0.49381,-99) , 
3, 4.7533, 1, 0, 0.512028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484064,-99) , 
5, -0.144357, 0, 0, 0.495167,-99) , 
1, 0.00849436, 0, 0, 0.502821,-99) , 
2, -0.070963, 1, 0, 0.504373,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0155338);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497686,-99) , 
5, 0.453943, 1, 0, 0.504775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476407,-99) , 
3, 2.08028, 0, 0, 0.48946,-99) , 
5, -0.904863, 0, 0, 0.503552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48141,-99) , 
2, 0.0776561, 0, 0, 0.488223,-99) , 
2, -0.0718248, 1, 0, 0.493936,-99) , 
0, 0.502852, 1, 0, 0.502206,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.00654525);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499671,-99) , 
2, -0.194096, 1, 0, 0.500788,-99) , 
2, 0.213937, 0, 0, 0.50175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468975,-99) , 
4, 0.999048, 0, 0, 0.500702,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0144547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490241,-99) , 
4, 0.999955, 0, 0, 0.501528,-99) , 
2, -0.214276, 1, 0, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456309,-99) , 
4, 0.999048, 0, 0, 0.501065,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0136363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.506117, 1, 1, 0.518699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497998,-99) , 
0, 0.494145, 1, 0, 0.500559,-99) , 
0, 0.504757, 0, 0, 0.501805,-99) , 
NN(
0, 
0, 
-1, 0.86068, 1, -1, 0.475872,-99) , 
5, 0.71128, 1, 0, 0.499116,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0165646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496055,-99) , 
5, -0.143933, 1, 0, 0.50317,-99) , 
3, 9.09632, 0, 0, 0.504208,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.481601,-99) , 
4, 0.999524, 0, 0, 0.502968,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.01241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.337724, 0, 1, 0.53877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472646,-99) , 
3, 4.50494, 1, 0, 0.490594,-99) , 
1, -0.000442099, 1, 0, 0.513358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498471,-99) , 
0, 0.502262, 0, 0, 0.499744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482103,-99) , 
0, 0.505709, 1, 0, 0.499144,-99) , 
2, 0.0713089, 0, 0, 0.50134,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.014012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0346699, 1, 1, 0.508945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480622,-99) , 
3, 3.06124, 0, 0, 0.498411,-99) , 
3, 2.74566, 1, 0, 0.504939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48053,-99) , 
3, 9.37272, 1, 0, 0.504221,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0107425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473967,-99) , 
5, 0.80723, 1, 0, 0.501675,-99) , 
3, 9.09102, 0, 0, 0.502909,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.483894,-99) , 
4, 0.999524, 0, 0, 0.501868,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0118489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.387766, 1, 1, 0.504373,-99) , 
NN(
0, 
0, 
-1, 0.498095, 1, -1, 0.485512,-99) , 
3, 6.24625, 1, 0, 0.502877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469604,-99) , 
3, 9.32353, 1, 0, 0.501889,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.00948521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493225,-99) , 
4, 0.999955, 0, 0, 0.499237,-99) , 
4, 0.999049, 1, 0, 0.501053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460073,-99) , 
3, 9.38795, 1, 0, 0.499915,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0194551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494648,-99) , 
0, 0.498226, 1, 0, 0.501599,-99) , 
0, 0.504757, 0, 0, 0.502808,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488348,-99) , 
5, -0.780007, 0, 0, 0.494872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468152,-99) , 
5, -0.691999, 1, 0, 0.490911,-99) , 
5, -0.619516, 0, 0, 0.49932,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0177744);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489704,-99) , 
5, -0.621782, 0, 0, 0.515547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498513,-99) , 
5, -0.619913, 1, 0, 0.501431,-99) , 
2, 0.0712593, 0, 0, 0.503554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487714,-99) , 
5, 0.140845, 0, 0, 0.493811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47083,-99) , 
5, 0.711281, 1, 0, 0.49128,-99) , 
0, 0.497138, 0, 0, 0.498698,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0132132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49909,-99) , 
4, 0.999951, 1, 0, 0.500807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47531,-99) , 
1, 0.0021957, 0, 0, 0.489499,-99) , 
4, 0.999932, 0, 0, 0.499272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455986,-99) , 
0, 0.498091, 0, 0, 0.47957,-99) , 
4, 0.999524, 0, 0, 0.498208,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.00935342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.74691, 0, 1, 0.50271,-99) , 
NN(
0, 
0, 
-1, -0.0720886, 0, -1, 0.482885,-99) , 
4, 0.999864, 0, 0, 0.500892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475906,-99) , 
4, 0.999048, 0, 0, 0.500088,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0178355);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492566,-99) , 
5, 0.739297, 1, 0, 0.50936,-99) , 
NN(
0, 
0, 
-1, 2.6074, 1, -1, 0.491007,-99) , 
5, -0.809733, 0, 0, 0.506239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493647,-99) , 
5, 0.610991, 0, 0, 0.496037,-99) , 
NN(
0, 
0, 
-1, 4.64607, 1, -1, 0.485357,-99) , 
2, 0.0723175, 1, 0, 0.494498,-99) , 
0, 0.499043, 0, 0, 0.499505,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0393276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491696, 1, 1, 0.510933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489543,-99) , 
0, 0.494145, 0, 0, 0.4956,-99) , 
5, -0.620512, 0, 0, 0.506284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490559,-99) , 
5, -0.950177, 0, 0, 0.512919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481069,-99) , 
1, 0.00227419, 0, 0, 0.497925,-99) , 
5, -0.90488, 1, 0, 0.49919,-99) , 
0, 0.496186, 1, 0, 0.501449,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.00736462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499313,-99) , 
2, -0.208872, 1, 0, 0.500249,-99) , 
3, 9.08925, 0, 0, 0.501406,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.479014,-99) , 
4, 0.999524, 0, 0, 0.500198,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0190537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498061,-99) , 
1, 0.00823833, 0, 0, 0.504975,-99) , 
NN(
0, 
0, 
-1, 0.494557, 0, -1, 0.490958,-99) , 
5, -0.809761, 0, 0, 0.502698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471748,-99) , 
0, 0.490472, 0, 0, 0.501367,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0145258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.13688, 0, 1, 0.506059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477693,-99) , 
4, 0.999728, 0, 0, 0.504726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479494,-99) , 
4, 0.999048, 0, 0, 0.503914,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0175239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489553,-99) , 
0, 0.503487, 1, 0, 0.504851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485425,-99) , 
0, 0.494145, 1, 0, 0.496266,-99) , 
0, 0.495233, 0, 0, 0.502843,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477557,-99) , 
2, -0.139361, 1, 0, 0.500075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46604,-99) , 
2, -0.139035, 0, 0, 0.486783,-99) , 
5, -0.144822, 0, 0, 0.493278,-99) , 
2, -0.0713415, 0, 0, 0.50126,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.00936071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499305,-99) , 
3, 0.968306, 1, 0, 0.502015,-99) , 
3, 9.12028, 0, 0, 0.502985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476123,-99) , 
4, 0.999048, 0, 0, 0.502129,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.00626522);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.879701, 0, 1, 0.522004,-99) , 
NN(
NN(
0, 
0, 
-1, -0.483673, 1, 1, 0.516788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479391,-99) , 
4, 0.999524, 0, 0, 0.499458,-99) , 
0, 0.491424, 1, 0, 0.500649,-99) , 
5, 0.80723, 0, 0, 0.50191,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0055114);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.501878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470294,-99) , 
4, 0.999048, 0, 0, 0.500881,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0174078);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498847,-99) , 
5, -0.148818, 0, 0, 0.511554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488369,-99) , 
3, 2.18129, 1, 0, 0.498706,-99) , 
3, 4.46658, 0, 0, 0.50142,-99) , 
4, 0.999048, 1, 0, 0.502103,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0180539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494807,-99) , 
5, 0.330678, 1, 0, 0.502894,-99) , 
4, 0.999048, 1, 0, 0.504994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474824,-99) , 
2, -0.152903, 0, 0, 0.501169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478151,-99) , 
2, 0.0713671, 1, 0, 0.494927,-99) , 
3, 4.73378, 1, 0, 0.50308,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.011027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.711316, 0, 1, 0.527976,-99) , 
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.496506,-99) , 
4, 0.999524, 1, 0, 0.498178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470623,-99) , 
3, 9.32353, 1, 0, 0.497373,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.00550564);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479459,-99) , 
3, 9.27458, 1, 0, 0.501547,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0123248);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498248,-99) , 
1, 0.000715615, 1, 0, 0.512111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481648,-99) , 
5, 0.629395, 1, 0, 0.502697,-99) , 
5, 0.71087, 0, 0, 0.503543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461982,-99) , 
4, 0.999048, 0, 0, 0.502254,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0163692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493016,-99) , 
2, -0.216581, 1, 0, 0.493709,-99) , 
4, 0.999048, 1, 0, 0.494607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478627,-99) , 
3, 9.06192, 1, 0, 0.494061,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0262403);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519564,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.505786,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49157,-99) , 
1, 0.00823833, 0, 0, 0.49848,-99) , 
5, -0.809748, 1, 0, 0.499716,-99) , 
2, 0.214079, 0, 0, 0.500491,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0190058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0509643, 1, 1, 0.507232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483354,-99) , 
2, -0.21395, 0, 0, 0.506356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493218,-99) , 
3, 1.62558, 0, 0, 0.507236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480704,-99) , 
5, 0.697712, 0, 0, 0.487285,-99) , 
5, -0.0492791, 1, 0, 0.498587,-99) , 
0, 0.496186, 0, 0, 0.503906,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0200429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.615248, 0, 1, 0.507402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484779,-99) , 
2, 0.0708586, 0, 0, 0.49133,-99) , 
0, 0.502716, 1, 0, 0.503939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492054,-99) , 
2, -0.0724774, 1, 0, 0.495595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469295,-99) , 
5, 0.611752, 1, 0, 0.491489,-99) , 
0, 0.496186, 0, 0, 0.500027,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0176568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.515096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484174,-99) , 
5, 0.874264, 1, 0, 0.507792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487846,-99) , 
3, 2.68005, 1, 0, 0.505653,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.494342,-99) , 
2, 0.0722659, 0, 0, 0.496028,-99) , 
5, 0.71128, 0, 0, 0.497288,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0165777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494313,-99) , 
5, 0.777663, 1, 0, 0.509233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470093,-99) , 
0, 0.492377, 0, 0, 0.5062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49871,-99) , 
0, 0.495097, 0, 0, 0.503362,-99) , 
NN(
0, 
0, 
-1, -0.764786, 0, -1, 0.492959,-99) , 
0, 0.49809, 1, 0, 0.497998,-99) , 
5, 0.234863, 0, 0, 0.500766,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0164076);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491902,-99) , 
5, -0.861809, 0, 0, 0.507941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490985,-99) , 
0, 0.497137, 0, 0, 0.49933,-99) , 
5, 0.000513701, 1, 0, 0.503909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503381,-99) , 
NN(
0, 
0, 
-1, 0.499043, 0, -1, 0.484745,-99) , 
5, -0.932093, 0, 0, 0.490533,-99) , 
5, -0.904927, 0, 0, 0.502797,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.011224);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48236,-99) , 
2, -0.0719397, 0, 0, 0.500611,-99) , 
NN(
0, 
0, 
-1, -0.148007, 0, -1, 0.477275,-99) , 
0, 0.500947, 1, 0, 0.493894,-99) , 
3, 4.73378, 1, 0, 0.501855,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.00720528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498271,-99) , 
5, 0.616996, 0, 0, 0.499502,-99) , 
3, 9.12028, 0, 0, 0.500076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477599,-99) , 
4, 0.999048, 0, 0, 0.499358,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0429181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617907,-99) , 
NN(
0, 
0, 
-1, 0.397567, 0, -1, 0.487255,-99) , 
1, -0.00389593, 1, 0, 0.504631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472327,-99) , 
4, 0.999991, 0, 0, 0.498813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448751,-99) , 
4, 0.999905, 0, 0, 0.496119,-99) , 
5, -0.0501052, 0, 0, 0.49999,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0245108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483418,-99) , 
5, -0.542846, 0, 0, 0.496525,-99) , 
1, 0.00833767, 0, 0, 0.503543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476968,-99) , 
3, 2.08165, 1, 0, 0.49165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471618,-99) , 
0, 0.496186, 0, 0, 0.485201,-99) , 
5, -0.904935, 0, 0, 0.502039,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.00944683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.525409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497929,-99) , 
0, 0.505709, 0, 0, 0.498746,-99) , 
4, 0.999524, 1, 0, 0.500157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468245,-99) , 
3, 9.37272, 1, 0, 0.499251,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0154274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499405, 0, 1, 0.505127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493178,-99) , 
0, 0.49292, 1, 0, 0.496064,-99) , 
5, -0.241101, 0, 0, 0.500953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490717,-99) , 
0, 0.503623, 0, 0, 0.497241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465447,-99) , 
0, 0.502535, 1, 0, 0.486534,-99) , 
5, 0.330205, 1, 0, 0.494384,-99) , 
0, 0.499995, 1, 0, 0.498748,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.00899689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499245,-99) , 
4, 0.999977, 1, 0, 0.502068,-99) , 
3, 9.12161, 0, 0, 0.50282,-99) , 
NN(
0, 
0, 
-1, 0.705645, 1, -1, 0.48427,-99) , 
4, 0.999524, 0, 0, 0.501818,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0163588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488615,-99) , 
4, 0.999909, 0, 0, 0.50269,-99) , 
2, -0.214276, 1, 0, 0.504151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441866,-99) , 
4, 0.999048, 0, 0, 0.502283,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0161283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000264798, 0, 1, 0.516719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495271,-99) , 
0, 0.499451, 1, 0, 0.497642,-99) , 
2, -0.0717669, 1, 0, 0.501014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494008,-99) , 
5, -0.241125, 1, 0, 0.503688,-99) , 
NN(
0, 
0, 
-1, 0.0457911, 0, -1, 0.49226,-99) , 
0, 0.493056, 1, 0, 0.494728,-99) , 
0, 0.499042, 0, 0, 0.497413,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0124625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497027,-99) , 
4, 0.999964, 1, 0, 0.499652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466399,-99) , 
4, 0.999751, 0, 0, 0.498673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476702,-99) , 
4, 0.999524, 0, 0, 0.497505,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0150936);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488081,-99) , 
4, 0.999905, 0, 0, 0.506379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492323,-99) , 
5, 0.3996, 0, 0, 0.499833,-99) , 
5, -0.143942, 1, 0, 0.503179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480536,-99) , 
0, 0.489519, 0, 0, 0.502611,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0156059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.518371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476222,-99) , 
3, 2.94398, 1, 0, 0.499673,-99) , 
5, -0.146629, 0, 0, 0.509078,-99) , 
NN(
NN(
0, 
0, 
-1, 0.688243, 1, 1, 0.507321,-99) , 
NN(
0, 
0, 
-1, -0.538343, 1, -1, 0.495145,-99) , 
5, 0.615822, 0, 0, 0.497029,-99) , 
2, 0.0723175, 0, 0, 0.498844,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0139453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.432472, 1, 1, 0.507932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495559,-99) , 
0, 0.491424, 1, 0, 0.497524,-99) , 
0, 0.500947, 0, 0, 0.500263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469986,-99) , 
4, 0.999048, 0, 0, 0.499301,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0150698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491243,-99) , 
0, 0.499994, 1, 0, 0.507864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494576,-99) , 
3, 2.9617, 0, 0, 0.498908,-99) , 
3, 0.973735, 1, 0, 0.500818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462384,-99) , 
3, 9.32353, 1, 0, 0.499718,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0130143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495777, 0, 1, 0.510664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481207,-99) , 
0, 0.497637, 0, 0, 0.498859,-99) , 
0, 0.497138, 1, 0, 0.503547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486707,-99) , 
5, 0.781994, 0, 0, 0.494344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469693,-99) , 
5, 0.834409, 1, 0, 0.484488,-99) , 
5, 0.712115, 1, 0, 0.501564,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.015186);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.505907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487579,-99) , 
3, 7.28017, 1, 0, 0.504745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493636,-99) , 
4, 0.999524, 1, 0, 0.502137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479321,-99) , 
0, 0.499994, 1, 0, 0.495517,-99) , 
5, 0.615823, 1, 0, 0.503311,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0112521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497915,-99) , 
3, 5.41091, 0, 0, 0.500011,-99) , 
4, 0.999048, 1, 0, 0.501598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477412,-99) , 
3, 9.38661, 1, 0, 0.500905,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0207528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.422467, 0, 1, 0.511998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497567,-99) , 
5, 0.0457856, 0, 0, 0.500324,-99) , 
2, -0.0714185, 1, 0, 0.502173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480548,-99) , 
1, 0.00227419, 0, 0, 0.494695,-99) , 
NN(
0, 
0, 
-1, 0.502897, 1, -1, 0.477102,-99) , 
5, -0.809969, 0, 0, 0.491618,-99) , 
0, 0.499995, 1, 0, 0.498648,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.00890082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492658,-99) , 
4, 0.999909, 0, 0, 0.501374,-99) , 
2, 0.212342, 0, 0, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478223,-99) , 
4, 0.999048, 0, 0, 0.501509,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0253765);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488613,-99) , 
5, -0.891291, 0, 0, 0.503519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484979,-99) , 
1, -0.00389593, 1, 0, 0.496766,-99) , 
5, 0.141411, 1, 0, 0.500916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506105,-99) , 
NN(
0, 
0, 
-1, 0.419873, 1, -1, 0.488097,-99) , 
2, 0.0684783, 0, 0, 0.491794,-99) , 
0, 0.5019, 1, 0, 0.499149,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0422099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496166, 1, 1, 0.515796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498018,-99) , 
5, 0.70743, 0, 0, 0.500465,-99) , 
0, 0.495777, 0, 0, 0.504895,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472316,-99) , 
1, -0.00235463, 1, 0, 0.498261,-99) , 
NN(
0, 
0, 
-1, -0.873162, 0, -1, 0.489022,-99) , 
5, -0.619514, 0, 0, 0.495548,-99) , 
0, 0.497138, 1, 0, 0.499329,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0179878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494146, 0, 1, 0.521863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489254,-99) , 
0, 0.503487, 1, 0, 0.506623,-99) , 
0, 0.495235, 1, 0, 0.510235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499393,-99) , 
2, -0.0321984, 1, 0, 0.504073,-99) , 
NN(
0, 
0, 
-1, -0.0609556, 0, -1, 0.490693,-99) , 
3, 3.40174, 1, 0, 0.499948,-99) , 
5, -0.0488223, 0, 0, 0.50461,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0120247);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498226, 0, 1, 0.505687,-99) , 
NN(
0, 
0, 
-1, -0.245457, 1, -1, 0.489226,-99) , 
0, 0.504756, 1, 0, 0.504635,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.00856075);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213491, 1, 1, 0.503076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457878,-99) , 
4, 0.999048, 0, 0, 0.501683,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0146399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.723412, 1, 1, 0.513685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493149,-99) , 
3, 3.94424, 1, 0, 0.501653,-99) , 
5, 0.375453, 0, 0, 0.504461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48017,-99) , 
0, 0.497137, 1, 0, 0.489681,-99) , 
5, 0.805277, 1, 0, 0.503629,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0101389);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487261,-99) , 
0, 0.497138, 0, 0, 0.514704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498209,-99) , 
2, -0.217185, 1, 0, 0.498889,-99) , 
5, 0.706606, 0, 0, 0.50036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475818,-99) , 
4, 0.999048, 0, 0, 0.499589,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.014268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497375,-99) , 
3, 3.23457, 1, 0, 0.513732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498898,-99) , 
0, 0.495777, 1, 0, 0.502549,-99) , 
0, 0.5019, 0, 0, 0.504792,-99) , 
NN(
0, 
0, 
-1, 0.861592, 1, -1, 0.478585,-99) , 
5, 0.807232, 1, 0, 0.503384,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0118731);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52042,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493737, 0, 1, 0.508219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489322,-99) , 
2, 0.0707818, 1, 0, 0.501388,-99) , 
0, 0.495369, 1, 0, 0.502908,-99) , 
0, 0.490472, 1, 0, 0.503726,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0180808);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 0, 1, 0.517383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490449,-99) , 
5, -0.524407, 1, 0, 0.495232,-99) , 
3, 9.0299, 0, 0, 0.496951,-99) , 
4, 0.999524, 1, 0, 0.498131,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.00957148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.549056, 0, 1, 0.502157,-99) , 
NN(
0, 
0, 
-1, -0.225304, 0, -1, 0.485532,-99) , 
3, 6.5395, 1, 0, 0.50065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450644,-99) , 
5, 0.861585, 1, 0, 0.479997,-99) , 
5, 0.807231, 1, 0, 0.499525,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0129298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502626, 0, 1, 0.517479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497782,-99) , 
0, 0.498136, 1, 0, 0.500271,-99) , 
2, 0.0718215, 0, 0, 0.50283,-99) , 
NN(
NN(
0, 
0, 
-1, 0.71087, 1, -1, 0.496324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458875,-99) , 
0, 0.493056, 1, 0, 0.477409,-99) , 
2, -0.0714185, 0, 0, 0.493081,-99) , 
0, 0.497138, 0, 0, 0.498958,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0133489);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.519046,-99) , 
NN(
NN(
0, 
0, 
-1, 3.33717, 1, 1, 0.518349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486576,-99) , 
5, 0.633346, 1, 0, 0.501906,-99) , 
0, 0.503804, 0, 0, 0.503589,-99) , 
5, 0.805278, 0, 0, 0.504498,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0134427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496139,-99) , 
3, 0.551889, 1, 0, 0.497591,-99) , 
4, 0.999049, 1, 0, 0.498888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459686,-99) , 
3, 9.38661, 1, 0, 0.497788,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0132881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491461,-99) , 
1, 0.000262448, 1, 0, 0.520761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499409,-99) , 
0, 0.503986, 1, 0, 0.510308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496745,-99) , 
0, 0.494145, 1, 0, 0.499107,-99) , 
0, 0.502852, 0, 0, 0.500733,-99) , 
5, 0.802358, 0, 0, 0.501943,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.00737878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4989,-99) , 
5, 0.804512, 0, 0, 0.499589,-99) , 
2, -0.213515, 1, 0, 0.500379,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.473876,-99) , 
4, 0.999524, 0, 0, 0.498957,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0127938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497185,-99) , 
2, 0.0303285, 0, 0, 0.500231,-99) , 
2, -0.214495, 1, 0, 0.501155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456204,-99) , 
4, 0.999048, 0, 0, 0.499747,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.00821705);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.50333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472193,-99) , 
4, 0.999048, 0, 0, 0.50234,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0185342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503623, 0, 1, 0.507012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476594,-99) , 
3, 4.55212, 1, 0, 0.492897,-99) , 
2, 0.0708586, 1, 0, 0.50496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492803,-99) , 
2, 0.0731616, 0, 0, 0.496869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464851,-99) , 
5, 0.71087, 1, 0, 0.493351,-99) , 
0, 0.497138, 0, 0, 0.500378,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0186265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.05765, 0, 1, 0.507992,-99) , 
NN(
0, 
0, 
-1, -0.0720426, 0, -1, 0.485522,-99) , 
4, 0.999932, 0, 0, 0.504962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476351,-99) , 
0, 0.49809, 0, 0, 0.492867,-99) , 
4, 0.999524, 0, 0, 0.504304,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0187246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498095, 0, 1, 0.580375,-99) , 
NN(
0, 
0, 
-1, 0.49333, 0, -1, 0.493191,-99) , 
1, -0.002873, 1, 0, 0.508924,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0695735, 0, 1, 0.507517,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.496419,-99) , 
0, 0.496186, 1, 0, 0.500016,-99) , 
5, 0.331644, 0, 0, 0.502651,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0145012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.742561, 1, 1, 0.517479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498848,-99) , 
5, -0.692229, 1, 0, 0.501751,-99) , 
5, 0.615822, 0, 0, 0.504273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488948,-99) , 
5, 0.331015, 0, 0, 0.495707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47355,-99) , 
3, 4.71918, 1, 0, 0.491708,-99) , 
0, 0.494281, 0, 0, 0.501996,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0121014);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.95929, 1, 1, 0.512376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492369,-99) , 
5, 0.723379, 1, 0, 0.502907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491147,-99) , 
0, 0.504122, 0, 0, 0.496057,-99) , 
0, 0.500947, 1, 0, 0.501155,-99) , 
5, -0.905008, 1, 0, 0.502112,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0114502);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536697,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.49599,-99) , 
4, 0.999048, 1, 0, 0.497264,-99) , 
3, 9.33743, 0, 0, 0.498203,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0107168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496346,-99) , 
5, -0.525886, 0, 0, 0.51316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49916,-99) , 
2, -0.213152, 1, 0, 0.500142,-99) , 
0, 0.502535, 0, 0, 0.502463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487378,-99) , 
0, 0.490789, 0, 0, 0.494098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471537,-99) , 
5, -0.0514134, 1, 0, 0.485608,-99) , 
0, 0.492377, 0, 0, 0.500851,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0126724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497002, 0, 1, 0.510782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496331,-99) , 
0, 0.497818, 0, 0, 0.501315,-99) , 
5, 0.52188, 0, 0, 0.503282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481453,-99) , 
0, 0.490472, 0, 0, 0.502328,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0181513);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480544,-99) , 
5, -0.864219, 0, 0, 0.504523,-99) , 
NN(
0, 
0, 
-1, 2.00212, 0, -1, 0.486867,-99) , 
0, 0.500947, 0, 0, 0.491917,-99) , 
5, -0.429709, 0, 0, 0.500454,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0122336);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.950171, 0, 1, 0.519237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485505,-99) , 
5, 0.81629, 1, 0, 0.502597,-99) , 
2, 0.214221, 0, 0, 0.503434,-99) , 
5, -0.904875, 1, 0, 0.504792,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0208459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.521778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470513,-99) , 
5, -0.936652, 0, 0, 0.496891,-99) , 
3, 2.10888, 1, 0, 0.509646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564123,-99) , 
NN(
0, 
0, 
-1, 4.74284, 1, -1, 0.49397,-99) , 
1, 0.00961304, 0, 0, 0.497212,-99) , 
5, -0.809969, 1, 0, 0.499325,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.00979193);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00214907, 0, 1, 0.509489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499129,-99) , 
0, 0.505573, 0, 0, 0.500185,-99) , 
5, 0.520774, 0, 0, 0.502127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486151,-99) , 
5, -0.594347, 0, 0, 0.49519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460866,-99) , 
5, 0.419938, 1, 0, 0.487744,-99) , 
0, 0.493329, 0, 0, 0.500202,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0114777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497232,-99) , 
2, 0.0670236, 0, 0, 0.498816,-99) , 
3, 9.12161, 0, 0, 0.499711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447745,-99) , 
4, 0.999048, 0, 0, 0.498139,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0128897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.08466, 0, 1, 0.505472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480985,-99) , 
4, 0.999683, 0, 0, 0.504493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480706,-99) , 
4, 0.999048, 0, 0, 0.503722,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0498297);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485486,-99) , 
1, -0.00447312, 1, 0, 0.504505,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.490689,-99) , 
5, -0.714646, 0, 0, 0.501251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46659,-99) , 
2, 0.214101, 1, 0, 0.500001,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0188281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.86862, 0, 1, 0.528205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483176,-99) , 
5, 0.719307, 1, 0, 0.506308,-99) , 
5, 0.805276, 0, 0, 0.507607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523132,-99) , 
NN(
0, 
0, 
-1, 0.472887, 1, -1, 0.491239,-99) , 
5, -0.810783, 1, 0, 0.497574,-99) , 
0, 0.493329, 0, 0, 0.506255,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0201744);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480963,-99) , 
2, 0.0703573, 1, 0, 0.501579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465271,-99) , 
0, 0.493329, 0, 0, 0.496821,-99) , 
3, 4.70919, 1, 0, 0.506673,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0133192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.425233, 0, 1, 0.516515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497234,-99) , 
0, 0.494883, 1, 0, 0.499721,-99) , 
0, 0.501491, 0, 0, 0.502058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478479,-99) , 
5, 0.262712, 1, 0, 0.495223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476586,-99) , 
5, -0.528179, 0, 0, 0.487735,-99) , 
0, 0.503804, 1, 0, 0.500667,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0138228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.36702, 1, 1, 0.512824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483833,-99) , 
5, 0.630571, 1, 0, 0.501981,-99) , 
2, -0.07084, 1, 0, 0.503812,-99) , 
NN(
0, 
0, 
-1, 0.76647, 1, -1, 0.476914,-99) , 
5, 0.712113, 1, 0, 0.501082,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0169077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498891, 1, 1, 0.507048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484904,-99) , 
0, 0.490154, 0, 0, 0.505947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487546,-99) , 
0, 0.506178, 0, 0, 0.490688,-99) , 
0, 0.501582, 1, 0, 0.493455,-99) , 
0, 0.500947, 1, 0, 0.502705,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.014048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495096,-99) , 
5, 0.616219, 1, 0, 0.511894,-99) , 
NN(
0, 
0, 
-1, 0.489714, 0, -1, 0.49359,-99) , 
0, 0.492512, 0, 0, 0.506149,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496653,-99) , 
0, 0.499321, 1, 0, 0.499925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481496,-99) , 
0, 0.49673, 0, 0, 0.498728,-99) , 
0, 0.496186, 1, 0, 0.501112,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0126516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500629, 0, 1, 0.517504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471882,-99) , 
0, 0.494281, 0, 0, 0.509799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517947,-99) , 
NN(
0, 
0, 
-1, 0.999785, 0, -1, 0.496792,-99) , 
0, 0.490472, 1, 0, 0.497796,-99) , 
5, 0.61621, 0, 0, 0.499681,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0159355);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499401,-99) , 
0, 0.497139, 0, 0, 0.507809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492763,-99) , 
2, 0.0157975, 0, 0, 0.498813,-99) , 
2, -0.0308363, 1, 0, 0.50134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48135,-99) , 
2, 0.214015, 1, 0, 0.500599,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0108881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498899,-99) , 
2, 0.0706626, 0, 0, 0.502323,-99) , 
5, 0.710264, 0, 0, 0.504813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493634,-99) , 
0, 0.497047, 1, 0, 0.498618,-99) , 
NN(
0, 
0, 
-1, 0.49469, 0, -1, 0.489321,-99) , 
5, 0.616997, 1, 0, 0.497109,-99) , 
0, 0.499995, 0, 0, 0.499724,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0156309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472668,-99) , 
3, 7.17177, 1, 0, 0.504897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475885,-99) , 
3, 9.38081, 1, 0, 0.504085,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.00923951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.509702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498458,-99) , 
2, 0.0225652, 0, 0, 0.501064,-99) , 
2, -0.0512711, 1, 0, 0.502567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485595,-99) , 
2, -0.214495, 0, 0, 0.501861,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.010786);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498606,-99) , 
5, 0.451985, 1, 0, 0.504829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492435,-99) , 
5, -0.502449, 1, 0, 0.498029,-99) , 
5, 0.0448913, 0, 0, 0.500867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477715,-99) , 
0, 0.489519, 0, 0, 0.500275,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0163409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476836,-99) , 
2, -0.153043, 0, 0, 0.510492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497882,-99) , 
4, 0.999525, 1, 0, 0.498764,-99) , 
3, 4.7423, 0, 0, 0.500713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479037,-99) , 
3, 2.89552, 1, 0, 0.492951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46535,-99) , 
5, 0.521139, 1, 0, 0.487157,-99) , 
2, 0.0714181, 1, 0, 0.498672,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0153688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470772,-99) , 
2, -0.139361, 1, 0, 0.495848,-99) , 
2, -0.0713415, 0, 0, 0.503719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522517,-99) , 
NN(
0, 
0, 
-1, 0.73727, 0, -1, 0.494969,-99) , 
5, -0.945674, 1, 0, 0.498302,-99) , 
5, -0.429572, 0, 0, 0.5016,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.00902436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.03042, 1, 1, 0.506169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487017,-99) , 
2, -0.112239, 0, 0, 0.500042,-99) , 
0, 0.499995, 0, 0, 0.502092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479786,-99) , 
2, 0.214255, 1, 0, 0.501265,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0133843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0685184, 1, 1, 0.511558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483362,-99) , 
0, 0.501446, 0, 0, 0.49515,-99) , 
5, 0.330204, 1, 0, 0.507193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51314,-99) , 
NN(
0, 
0, 
-1, 0.720325, 1, -1, 0.495722,-99) , 
5, 0.806353, 0, 0, 0.496795,-99) , 
0, 0.499995, 0, 0, 0.50032,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0116219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503543, 0, 1, 0.514027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489293,-99) , 
5, -0.146631, 1, 0, 0.499274,-99) , 
0, 0.504666, 1, 0, 0.507089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495829,-99) , 
5, 0.425726, 0, 0, 0.498095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481361,-99) , 
0, 0.502126, 1, 0, 0.497351,-99) , 
0, 0.502852, 0, 0, 0.498759,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0304453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639597,-99) , 
NN(
0, 
0, 
-1, -0.0624089, 0, -1, 0.491981,-99) , 
1, -0.00752596, 1, 0, 0.50153,-99) , 
NN(
0, 
0, 
-1, 0.0632801, 1, -1, 0.489059,-99) , 
5, -0.714646, 0, 0, 0.498601,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0166713);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12912, 0, 1, 0.507767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468487,-99) , 
0, 0.497138, 1, 0, 0.484926,-99) , 
4, 0.999524, 0, 0, 0.506535,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0152445);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.3067, 0, 1, 0.507139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474446,-99) , 
5, 0.868125, 0, 0, 0.490296,-99) , 
5, 0.804798, 1, 0, 0.5062,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0153756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.130745, 1, 1, 0.50554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485203,-99) , 
2, -0.212221, 0, 0, 0.504791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490202,-99) , 
0, 0.490335, 1, 0, 0.501161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470937,-99) , 
5, 0.0421151, 1, 0, 0.490552,-99) , 
0, 0.493329, 0, 0, 0.502896,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0120555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.136323, 1, 1, 0.523455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494093,-99) , 
0, 0.492104, 0, 0, 0.505132,-99) , 
2, -0.0684494, 1, 0, 0.508802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491942,-99) , 
0, 0.504348, 1, 0, 0.500305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462254,-99) , 
0, 0.50054, 0, 0, 0.482474,-99) , 
5, -0.904878, 0, 0, 0.498851,-99) , 
0, 0.496186, 1, 0, 0.502034,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0129574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498787,-99) , 
3, 2.05701, 1, 0, 0.507042,-99) , 
NN(
0, 
0, 
-1, -0.338325, 0, -1, 0.492956,-99) , 
3, 4.67335, 1, 0, 0.504516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496024,-99) , 
4, 0.999841, 1, 0, 0.496926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470994,-99) , 
4, 0.999524, 0, 0, 0.495708,-99) , 
0, 0.497138, 1, 0, 0.499244,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00875706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499212,-99) , 
3, 5.26014, 0, 0, 0.500838,-99) , 
3, 9.12161, 0, 0, 0.501755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472213,-99) , 
4, 0.999524, 0, 0, 0.500205,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0128523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489806,-99) , 
0, 0.490789, 0, 0, 0.499608,-99) , 
5, -0.430836, 1, 0, 0.509584,-99) , 
NN(
0, 
0, 
-1, 0.0704304, 1, -1, 0.494519,-99) , 
0, 0.492376, 1, 0, 0.495988,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.00565369);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.211037, 1, 1, 0.502155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476783,-99) , 
4, 0.999048, 0, 0, 0.501346,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0159324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.045802, 0, 1, 0.508761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48369,-99) , 
5, -0.336319, 1, 0, 0.493532,-99) , 
0, 0.493601, 0, 0, 0.504229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49375,-99) , 
3, 4.74985, 1, 0, 0.5087,-99) , 
NN(
0, 
0, 
-1, -0.240202, 0, -1, 0.494537,-99) , 
2, -0.0713804, 1, 0, 0.496903,-99) , 
0, 0.49809, 1, 0, 0.500501,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.00880466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49721,-99) , 
2, -0.20973, 1, 0, 0.497823,-99) , 
3, 8.74691, 0, 0, 0.498522,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.483934,-99) , 
4, 0.999524, 0, 0, 0.497742,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0107422);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.08466, 0, 1, 0.50482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477798,-99) , 
4, 0.999048, 0, 0, 0.503962,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0169263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.514989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482665,-99) , 
0, 0.5019, 1, 0, 0.498566,-99) , 
5, -0.841471, 0, 0, 0.508528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493335,-99) , 
5, -0.234519, 0, 0, 0.505159,-99) , 
NN(
0, 
0, 
-1, 0.073158, 1, -1, 0.493942,-99) , 
0, 0.499043, 0, 0, 0.498663,-99) , 
5, -0.524411, 1, 0, 0.502151,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0271822);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490895,-99) , 
4, 0.999998, 0, 0, 0.500642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461625,-99) , 
2, -0.0723305, 0, 0, 0.490881,-99) , 
4, 0.999955, 0, 0, 0.498645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460035,-99) , 
4, 0.999048, 0, 0, 0.497477,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0136905);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489869,-99) , 
0, 0.495233, 0, 0, 0.50417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489327,-99) , 
3, 3.97251, 0, 0, 0.494298,-99) , 
3, 1.28361, 1, 0, 0.49756,-99) , 
5, -0.524397, 0, 0, 0.503125,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0139255);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47205,-99) , 
2, 0.132381, 1, 0, 0.502003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487524,-99) , 
0, 0.491696, 1, 0, 0.491985,-99) , 
0, 0.496185, 0, 0, 0.498892,-99) , 
2, 0.214015, 0, 0, 0.499806,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0105199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.870643, 0, 1, 0.514412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491821,-99) , 
0, 0.504439, 1, 0, 0.506767,-99) , 
NN(
0, 
0, 
-1, 0.635108, 1, -1, 0.497707,-99) , 
0, 0.500947, 0, 0, 0.50012,-99) , 
5, 0.80723, 0, 0, 0.500938,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0171556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4932,-99) , 
5, 0.829401, 1, 0, 0.511709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480215,-99) , 
5, 0.540286, 1, 0, 0.499494,-99) , 
5, 0.612572, 0, 0, 0.503479,-99) , 
NN(
0, 
0, 
-1, 3.78043, 1, -1, 0.490451,-99) , 
5, -0.146285, 0, 0, 0.496875,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0127295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.612579, 0, 1, 0.514104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489571,-99) , 
3, 4.43322, 1, 0, 0.509229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517425,-99) , 
NN(
0, 
0, 
-1, 0.0707818, 1, -1, 0.496742,-99) , 
5, 0.807233, 0, 0, 0.497912,-99) , 
0, 0.495233, 1, 0, 0.500713,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0406759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486754,-99) , 
1, -0.00447312, 1, 0, 0.504038,-99) , 
NN(
0, 
0, 
-1, 0.501899, 1, -1, 0.492151,-99) , 
5, -0.714644, 0, 0, 0.501179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490138,-99) , 
0, 0.499179, 0, 0, 0.495243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474036,-99) , 
0, 0.501899, 1, 0, 0.490496,-99) , 
3, 4.70919, 1, 0, 0.499142,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0206139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.508255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478737,-99) , 
5, 0.867149, 0, 0, 0.4906,-99) , 
5, 0.724864, 1, 0, 0.506394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480241,-99) , 
5, -0.935747, 1, 0, 0.497405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479071,-99) , 
5, -0.96378, 0, 0, 0.490919,-99) , 
5, -0.904924, 0, 0, 0.505112,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0191034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497532,-99) , 
4, 0.999998, 0, 0, 0.504689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459928,-99) , 
2, 0.0706131, 1, 0, 0.490213,-99) , 
4, 0.999955, 0, 0, 0.501744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467455,-99) , 
4, 0.999048, 0, 0, 0.500682,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0275298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499302,-99) , 
5, 0.861592, 0, 0, 0.502497,-99) , 
1, -0.00258048, 1, 0, 0.51602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484188,-99) , 
4, 0.999982, 0, 0, 0.504491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448778,-99) , 
3, 1.88937, 1, 0, 0.49198,-99) , 
4, 0.999905, 0, 0, 0.503419,-99) , 
5, 0.521879, 0, 0, 0.50603,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0108169);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495316,-99) , 
2, 0.0711262, 1, 0, 0.502761,-99) , 
0, 0.50589, 0, 0, 0.503446,-99) , 
0, 0.489519, 1, 0, 0.50414,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0171746);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00114259, 0, 1, 0.518874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466859,-99) , 
0, 0.499041, 1, 0, 0.490838,-99) , 
5, 0.748352, 1, 0, 0.507254,-99) , 
NN(
NN(
0, 
0, 
-1, 0.494283, 1, 1, 0.511459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494856,-99) , 
3, 7.53818, 0, 0, 0.495728,-99) , 
2, 0.0752325, 0, 0, 0.498012,-99) , 
5, 0.521879, 0, 0, 0.4999,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0119884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49657,-99) , 
0, 0.495233, 1, 0, 0.499101,-99) , 
3, 8.71991, 0, 0, 0.500206,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.479866,-99) , 
4, 0.999524, 0, 0, 0.499126,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0164853);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.514909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496795,-99) , 
2, 0.0027826, 1, 0, 0.501016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48571,-99) , 
0, 0.504349, 0, 0, 0.489577,-99) , 
0, 0.499995, 1, 0, 0.497285,-99) , 
2, -0.0719737, 1, 0, 0.500277,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.00946394);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471597,-99) , 
3, 9.38081, 1, 0, 0.503139,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.00905832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4992,-99) , 
0, 0.492377, 1, 0, 0.500857,-99) , 
2, 0.214945, 0, 0, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0.711305, 1, -1, 0.475473,-99) , 
4, 0.999524, 0, 0, 0.500607,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.032519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498628,-99) , 
0, 0.498092, 1, 0, 0.51301,-99) , 
NN(
NN(
0, 
0, 
-1, 0.816289, 0, 1, 0.505385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477157,-99) , 
1, -0.00204473, 1, 0, 0.496823,-99) , 
0, 0.49809, 0, 0, 0.501234,-99) , 
5, -0.90488, 1, 0, 0.502246,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0135189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 0, 1, 0.524199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496621,-99) , 
0, 0.500946, 1, 0, 0.518151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491035,-99) , 
3, 1.96292, 1, 0, 0.507667,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.49776,-99) , 
5, 0.385993, 0, 0, 0.499113,-99) , 
5, 0.616996, 0, 0, 0.502143,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0121608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482034,-99) , 
0, 0.492104, 0, 0, 0.502615,-99) , 
0, 0.490472, 1, 0, 0.503464,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.48448,-99) , 
5, 0.71128, 1, 0, 0.501526,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0232095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.02682, 1, 1, 0.507546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478068,-99) , 
1, 0.0021957, 0, 0, 0.491207,-99) , 
4, 0.999955, 0, 0, 0.504193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456474,-99) , 
4, 0.999048, 0, 0, 0.502783,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0139406);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499936,-99) , 
3, 3.59487, 0, 0, 0.510829,-99) , 
NN(
0, 
0, 
-1, 6.51394, 1, -1, 0.494923,-99) , 
5, 0.616209, 0, 0, 0.497323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463151,-99) , 
3, 9.07582, 1, 0, 0.496205,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0162005);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.59468, 0, 1, 0.521366,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478809,-99) , 
1, 0.00227419, 0, 0, 0.489489,-99) , 
0, 0.503805, 1, 0, 0.504045,-99) , 
5, -0.905021, 1, 0, 0.505522,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.015554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49936, 1, 1, 0.522234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497195,-99) , 
0, 0.495233, 0, 0, 0.516134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495945,-99) , 
2, -0.0703658, 1, 0, 0.501603,-99) , 
NN(
0, 
0, 
-1, 0.99981, 0, -1, 0.493807,-99) , 
5, 0.384989, 0, 0, 0.495234,-99) , 
5, 0.710872, 0, 0, 0.497507,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0204863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.77049, 0, 1, 0.523642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48696,-99) , 
1, -0.000729769, 1, 0, 0.504301,-99) , 
0, 0.496186, 1, 0, 0.510477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477056,-99) , 
4, 0.999959, 0, 0, 0.501071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444774,-99) , 
5, 0.0870671, 0, 0, 0.477119,-99) , 
4, 0.999905, 0, 0, 0.499094,-99) , 
5, 0.52188, 0, 0, 0.501453,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0101686);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498086, 1, 1, 0.51651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496104,-99) , 
0, 0.496186, 1, 0, 0.498236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48259,-99) , 
0, 0.490472, 0, 0, 0.497576,-99) , 
5, 0.806351, 0, 0, 0.498689,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0249177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498978,-99) , 
5, -0.945685, 1, 0, 0.514616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493838,-99) , 
1, 0.00858181, 0, 0, 0.500331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48789,-99) , 
2, -0.274254, 1, 0, 0.493641,-99) , 
2, -0.0703878, 0, 0, 0.499213,-99) , 
5, -0.904949, 1, 0, 0.50053,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0371635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.27105, 1, 1, 0.597408,-99) , 
NN(
0, 
0, 
-1, 0.414079, 0, -1, 0.487383,-99) , 
1, -0.00444513, 1, 0, 0.502019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521539,-99) , 
NN(
0, 
0, 
-1, -0.0784603, 0, -1, 0.492688,-99) , 
0, 0.491424, 1, 0, 0.495117,-99) , 
5, -0.525051, 0, 0, 0.499631,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0154292);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532639,-99) , 
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.504606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43413,-99) , 
2, -0.070857, 0, 0, 0.488358,-99) , 
4, 0.999864, 0, 0, 0.503127,-99) , 
4, 0.999048, 1, 0, 0.50414,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0162885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495744,-99) , 
0, 0.492785, 0, 0, 0.505715,-99) , 
0, 0.505709, 0, 0, 0.506833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512222,-99) , 
NN(
0, 
0, 
-1, -0.834356, 1, -1, 0.491217,-99) , 
5, -0.782593, 0, 0, 0.49567,-99) , 
5, -0.714644, 0, 0, 0.504217,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0162578);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.805918, 0, 1, 0.507443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48821,-99) , 
2, -0.0782261, 0, 0, 0.498653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479624,-99) , 
2, 0.0714181, 1, 0, 0.493567,-99) , 
3, 4.7423, 1, 0, 0.504824,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0167488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459848,-99) , 
4, 0.999887, 0, 0, 0.500629,-99) , 
4, 0.999524, 1, 0, 0.502814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493124,-99) , 
2, -0.0772095, 1, 0, 0.494962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474606,-99) , 
4, 0.999524, 0, 0, 0.493983,-99) , 
0, 0.497138, 1, 0, 0.497545,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.00976233);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49975,-99) , 
1, 0.0110969, 0, 0, 0.502778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482995,-99) , 
0, 0.490472, 0, 0, 0.501946,-99) , 
2, 0.214319, 0, 0, 0.503067,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.00757331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498984,-99) , 
0, 0.503805, 0, 0, 0.500364,-99) , 
2, -0.214352, 1, 0, 0.501339,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.484237,-99) , 
5, 0.806351, 1, 0, 0.500407,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0102687);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474377,-99) , 
3, 9.33743, 1, 0, 0.503657,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0208255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497655,-99) , 
5, -0.143933, 1, 0, 0.504514,-99) , 
4, 0.999048, 1, 0, 0.506322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499046,-99) , 
0, 0.493737, 0, 0, 0.508666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474983,-99) , 
1, 0.00216219, 0, 0, 0.487741,-99) , 
0, 0.496186, 1, 0, 0.494054,-99) , 
3, 4.67335, 1, 0, 0.503926,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.00595871);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214527, 0, 1, 0.502234,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.483543,-99) , 
4, 0.999524, 0, 0, 0.501255,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.01248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495236, 1, 1, 0.508278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492617,-99) , 
2, -0.0717387, 0, 0, 0.505715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491023,-99) , 
3, 4.25714, 1, 0, 0.499306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487016,-99) , 
0, 0.493056, 1, 0, 0.491465,-99) , 
0, 0.497138, 0, 0, 0.496207,-99) , 
5, 0.426762, 0, 0, 0.498589,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0119855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504416, 0, 1, 0.506992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489449,-99) , 
5, 0.83441, 1, 0, 0.505026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466969,-99) , 
4, 0.999968, 0, 0, 0.497224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473658,-99) , 
4, 0.999905, 0, 0, 0.495788,-99) , 
5, 0.141417, 0, 0, 0.499255,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.00931499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522614,-99) , 
NN(
0, 
0, 
-1, 0.4902, 0, -1, 0.498933,-99) , 
0, 0.505709, 0, 0, 0.499837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488035,-99) , 
3, 3.71282, 0, 0, 0.495497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452092,-99) , 
5, -0.963795, 0, 0, 0.488217,-99) , 
5, -0.810002, 0, 0, 0.497931,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.010857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.76647, 1, 1, 0.512028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496401,-99) , 
2, 0.0303285, 0, 0, 0.498706,-99) , 
5, 0.712113, 0, 0, 0.500062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480368,-99) , 
2, -0.214495, 0, 0, 0.499263,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0124258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00147159, 1, 1, 0.508044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495696,-99) , 
0, 0.498906, 1, 0, 0.500865,-99) , 
5, 0.424842, 0, 0, 0.502707,-99) , 
NN(
0, 
0, 
-1, 0.491469, 1, -1, 0.49031,-99) , 
0, 0.492376, 0, 0, 0.501512,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0108026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493291,-99) , 
5, -0.0518046, 1, 0, 0.507955,-99) , 
2, -0.0718505, 1, 0, 0.517133,-99) , 
NN(
NN(
0, 
0, 
-1, -0.000173975, 1, 1, 0.509385,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.498821,-99) , 
5, 0.330998, 0, 0, 0.502034,-99) , 
0, 0.503804, 0, 0, 0.503561,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.00544756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487503,-99) , 
2, 0.193683, 1, 0, 0.500629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474779,-99) , 
2, -0.214352, 0, 0, 0.499591,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0138138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0716008, 0, 1, 0.504039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480067,-99) , 
5, 0.834407, 1, 0, 0.502733,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493044,-99) , 
5, -0.864131, 0, 0, 0.50663,-99) , 
NN(
0, 
0, 
-1, 0.497818, 0, -1, 0.486634,-99) , 
0, 0.501899, 0, 0, 0.491164,-99) , 
5, -0.714646, 0, 0, 0.50001,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0114182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48219,-99) , 
3, 1.98777, 0, 0, 0.49673,-99) , 
0, 0.499995, 0, 0, 0.508303,-99) , 
NN(
0, 
0, 
-1, 9.33163, 1, -1, 0.495542,-99) , 
5, -0.90488, 1, 0, 0.496636,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.00832691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47753,-99) , 
3, 6.53971, 1, 0, 0.499606,-99) , 
3, 9.11447, 0, 0, 0.50066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471528,-99) , 
4, 0.999048, 0, 0, 0.499787,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0171714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0384248, 0, 1, 0.523336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4904,-99) , 
2, -0.00620497, 1, 0, 0.50313,-99) , 
2, 0.0684182, 0, 0, 0.506827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497118,-99) , 
1, -0.002873, 1, 0, 0.505015,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496627,-99) , 
2, 0.0660209, 0, 0, 0.49832,-99) , 
5, 0.330679, 0, 0, 0.500379,-99) , 
0, 0.499995, 0, 0, 0.502554,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.00910086);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.615257, 0, 1, 0.508943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499225,-99) , 
5, 0.71087, 0, 0, 0.501141,-99) , 
NN(
0, 
0, 
-1, -0.146276, 0, -1, 0.490979,-99) , 
0, 0.494281, 0, 0, 0.499371,-99) , 
2, -0.0716846, 1, 0, 0.500987,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.00896463);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.802286, 0, 1, 0.503387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494457,-99) , 
0, 0.505619, 0, 0, 0.500687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465658,-99) , 
3, 4.30264, 1, 0, 0.491192,-99) , 
0, 0.503804, 1, 0, 0.502189,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0246353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.1261, 1, 1, 0.514676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496691,-99) , 
5, -0.542519, 0, 0, 0.50221,-99) , 
5, -0.904878, 1, 0, 0.50324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480248,-99) , 
1, 0.00488579, 0, 0, 0.496128,-99) , 
NN(
0, 
0, 
-1, -0.909653, 0, -1, 0.478973,-99) , 
5, -0.810299, 0, 0, 0.493266,-99) , 
0, 0.496186, 0, 0, 0.500103,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0178973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484884,-99) , 
5, 0.517775, 1, 0, 0.500463,-99) , 
4, 0.999524, 1, 0, 0.502582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483363,-99) , 
0, 0.49809, 1, 0, 0.493407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471671,-99) , 
5, -0.715543, 0, 0, 0.489006,-99) , 
3, 4.73378, 1, 0, 0.500006,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0167716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.620752, 1, 1, 0.505134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489792,-99) , 
2, -0.0780275, 1, 0, 0.49482,-99) , 
0, 0.495233, 0, 0, 0.502721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4828,-99) , 
5, 0.23318, 0, 0, 0.49823,-99) , 
NN(
0, 
0, 
-1, 4.10057, 1, -1, 0.478726,-99) , 
2, 0.139615, 0, 0, 0.488421,-99) , 
2, 0.0716008, 1, 0, 0.500596,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0151732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496027,-99) , 
5, -0.619526, 1, 0, 0.499348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487657,-99) , 
5, 0.615247, 0, 0, 0.491538,-99) , 
0, 0.500947, 1, 0, 0.497349,-99) , 
2, 0.214846, 0, 0, 0.498304,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0100846);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.752027, 0, 1, 0.502713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49132,-99) , 
5, -0.790446, 0, 0, 0.493974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460394,-99) , 
5, -0.755523, 1, 0, 0.490041,-99) , 
5, -0.714772, 0, 0, 0.499757,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0215869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479867,-99) , 
2, -0.135974, 0, 0, 0.515896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495354,-99) , 
3, 4.26576, 0, 0, 0.500062,-99) , 
2, -0.0681193, 1, 0, 0.50289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48017,-99) , 
5, -0.16333, 0, 0, 0.503775,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.491326,-99) , 
0, 0.496187, 1, 0, 0.495221,-99) , 
5, -0.524411, 1, 0, 0.497897,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0161402);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494617,-99) , 
2, -0.00432807, 1, 0, 0.506497,-99) , 
NN(
0, 
0, 
-1, -0.0695434, 0, -1, 0.495663,-99) , 
3, 1.43393, 1, 0, 0.499463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469678,-99) , 
3, 9.34253, 1, 0, 0.498615,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0186137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489658,-99) , 
0, 0.505256, 1, 0, 0.510094,-99) , 
0, 0.506344, 0, 0, 0.51689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485955,-99) , 
0, 0.49224, 0, 0, 0.508405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496868,-99) , 
0, 0.496095, 1, 0, 0.500865,-99) , 
5, -0.334489, 1, 0, 0.504095,-99) , 
0, 0.503804, 0, 0, 0.505373,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0220204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482104,-99) , 
5, 0.801417, 1, 0, 0.507286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484653,-99) , 
2, -0.0074906, 1, 0, 0.499084,-99) , 
2, 0.0031957, 0, 0, 0.503464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468683,-99) , 
0, 0.499995, 0, 0, 0.487383,-99) , 
0, 0.494281, 1, 0, 0.493392,-99) , 
2, -0.0716069, 0, 0, 0.5018,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0096947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48717,-99) , 
0, 0.498181, 0, 0, 0.506672,-99) , 
0, 0.495234, 1, 0, 0.513598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49888,-99) , 
2, -0.201868, 1, 0, 0.499716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474706,-99) , 
5, 0.630569, 1, 0, 0.498544,-99) , 
5, 0.712113, 0, 0, 0.500158,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0104703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485855,-99) , 
3, 6.52296, 1, 0, 0.501972,-99) , 
3, 9.08466, 0, 0, 0.503038,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.486533,-99) , 
4, 0.999524, 0, 0, 0.502168,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00507256);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499561,-99) , 
5, 0.861585, 1, 0, 0.514076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477165,-99) , 
4, 0.999524, 0, 0, 0.49936,-99) , 
5, 0.807231, 0, 0, 0.500213,-99) , 
NN(
0, 
0, 
-1, -0.148737, 0, -1, 0.485649,-99) , 
0, 0.504757, 1, 0, 0.499285,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0126344);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487622,-99) , 
4, 0.999932, 0, 0, 0.501009,-99) , 
4, 0.999524, 1, 0, 0.502411,-99) , 
NN(
0, 
0, 
-1, 0.495369, 1, -1, 0.491588,-99) , 
0, 0.496186, 0, 0, 0.499016,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.01208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495899,-99) , 
0, 0.490472, 1, 0, 0.496875,-99) , 
4, 0.999048, 1, 0, 0.497824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473455,-99) , 
3, 9.33163, 1, 0, 0.497119,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0147028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.516681,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.497878,-99) , 
5, 0.52188, 0, 0, 0.501955,-99) , 
NN(
0, 
0, 
-1, -0.810361, 0, -1, 0.486617,-99) , 
0, 0.500947, 1, 0, 0.498034,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0160928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0589504, 0, 1, 0.507113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474042,-99) , 
2, 0.0701387, 1, 0, 0.495362,-99) , 
3, 3.70978, 1, 0, 0.50394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486763,-99) , 
5, 0.830501, 1, 0, 0.503427,-99) , 
NN(
0, 
0, 
-1, 0.43383, 1, -1, 0.490393,-99) , 
5, 0.498507, 0, 0, 0.497236,-99) , 
5, 0.0457903, 1, 0, 0.50119,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.00636757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499305,-99) , 
0, 0.490472, 1, 0, 0.500078,-99) , 
2, 0.215591, 0, 0, 0.501259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474896,-99) , 
3, 9.33876, 1, 0, 0.500507,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0146112);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492662,-99) , 
5, 0.325029, 1, 0, 0.503476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495126,-99) , 
5, 0.805918, 0, 0, 0.496637,-99) , 
0, 0.499043, 0, 0, 0.499551,-99) , 
2, 0.214255, 0, 0, 0.500637,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.00777216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498796,-99) , 
2, 0.214607, 0, 0, 0.499777,-99) , 
4, 0.999048, 1, 0, 0.500604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466944,-99) , 
3, 9.0008, 1, 0, 0.499473,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0172981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.870655, 0, 1, 0.533002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486193,-99) , 
5, 0.462994, 1, 0, 0.501837,-99) , 
5, 0.807232, 0, 0, 0.503524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478069,-99) , 
3, 8.93671, 1, 0, 0.502631,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0127016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491696, 1, 1, 0.503547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485192,-99) , 
0, 0.504755, 1, 0, 0.502562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494345,-99) , 
5, -0.556378, 0, 0, 0.497743,-99) , 
NN(
0, 
0, 
-1, -0.588049, 1, -1, 0.486945,-99) , 
0, 0.499043, 1, 0, 0.493072,-99) , 
5, -0.334499, 0, 0, 0.498454,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0118218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491634,-99) , 
3, 1.29723, 0, 0, 0.49949,-99) , 
3, 8.33035, 0, 0, 0.500289,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.481839,-99) , 
4, 0.999524, 0, 0, 0.499308,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0100323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.870655, 0, 1, 0.517637,-99) , 
NN(
0, 
0, 
-1, 0.72117, 1, -1, 0.497111,-99) , 
5, 0.807231, 0, 0, 0.498308,-99) , 
NN(
0, 
0, 
-1, 0.48961, 0, -1, 0.476923,-99) , 
0, 0.491424, 0, 0, 0.496905,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0092698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498463,-99) , 
5, -0.569701, 0, 0, 0.517367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498534,-99) , 
5, -0.741818, 1, 0, 0.500288,-99) , 
0, 0.491424, 1, 0, 0.501444,-99) , 
NN(
0, 
0, 
-1, 0.870643, 1, -1, 0.477796,-99) , 
5, 0.807231, 1, 0, 0.500164,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0146506);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.209491, 1, 1, 0.505297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479814,-99) , 
5, 0.761956, 0, 0, 0.494453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464136,-99) , 
3, 4.79471, 1, 0, 0.488215,-99) , 
5, 0.616999, 1, 0, 0.502698,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0135495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482716,-99) , 
5, 0.856802, 1, 0, 0.501824,-99) , 
5, 0.263098, 1, 0, 0.504036,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.493325,-99) , 
5, 0.140855, 0, 0, 0.497348,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0097852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49331,-99) , 
0, 0.489791, 0, 0, 0.508499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49226,-99) , 
0, 0.49673, 0, 0, 0.49923,-99) , 
0, 0.493329, 1, 0, 0.500496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472679,-99) , 
5, 0.86862, 0, 0, 0.48631,-99) , 
5, 0.805276, 1, 0, 0.49971,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00924478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479655,-99) , 
4, 0.999887, 0, 0, 0.49998,-99) , 
4, 0.999524, 1, 0, 0.500702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471942,-99) , 
2, -0.214859, 0, 0, 0.499559,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0121464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49191, 1, 1, 0.504191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487906,-99) , 
0, 0.490562, 0, 0, 0.503084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503837,-99) , 
NN(
0, 
0, 
-1, 1.9054, 1, -1, 0.490419,-99) , 
5, 0.607638, 0, 0, 0.492367,-99) , 
0, 0.499995, 1, 0, 0.499498,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0141458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527516,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.494344,-99) , 
2, 0.213342, 0, 0, 0.49543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471189,-99) , 
4, 0.999048, 0, 0, 0.494672,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0207928);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498821,-99) , 
1, -0.000442099, 1, 0, 0.523346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484843,-99) , 
0, 0.493102, 1, 0, 0.50089,-99) , 
0, 0.49809, 0, 0, 0.51253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49867,-99) , 
5, 0.326696, 0, 0, 0.503957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486721,-99) , 
2, 0.0212532, 0, 0, 0.49409,-99) , 
2, -0.0036823, 1, 0, 0.499443,-99) , 
2, 0.0711262, 0, 0, 0.501478,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0107969);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499488,-99) , 
3, 1.43538, 1, 0, 0.502897,-99) , 
4, 0.999048, 1, 0, 0.504236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476832,-99) , 
3, 9.38661, 1, 0, 0.503465,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0131493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.81528, 1, 1, 0.510611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494312,-99) , 
2, -0.00289693, 1, 0, 0.499568,-99) , 
2, 0.0718309, 0, 0, 0.501238,-99) , 
NN(
0, 
0, 
-1, 0.870643, 1, -1, 0.47571,-99) , 
5, 0.807232, 1, 0, 0.499869,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0130841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.807231, 0, 1, 0.504807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494257,-99) , 
2, 0.0677591, 0, 0, 0.498121,-99) , 
0, 0.500675, 1, 0, 0.5028,-99) , 
NN(
0, 
0, 
-1, -0.431088, 1, -1, 0.480187,-99) , 
0, 0.491424, 0, 0, 0.501305,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0166976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490731,-99) , 
5, 0.331645, 1, 0, 0.499809,-99) , 
4, 0.999524, 1, 0, 0.50137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483861,-99) , 
2, 0.00340476, 1, 0, 0.492131,-99) , 
NN(
0, 
0, 
-1, 0.0384359, 0, -1, 0.470114,-99) , 
2, -0.0714192, 0, 0, 0.485703,-99) , 
3, 4.73378, 1, 0, 0.498411,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.00721522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498389,-99) , 
4, 0.999524, 1, 0, 0.499299,-99) , 
2, -0.214994, 1, 0, 0.500139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47889,-99) , 
3, 9.37272, 1, 0, 0.49954,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0130803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485891,-99) , 
2, -0.0756902, 0, 0, 0.50052,-99) , 
3, 9.12028, 0, 0, 0.501666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461212,-99) , 
4, 0.999048, 0, 0, 0.500438,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0157653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.506249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484021,-99) , 
2, 0.00817489, 0, 0, 0.495503,-99) , 
2, -0.00250328, 1, 0, 0.501525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472407,-99) , 
5, -0.637766, 0, 0, 0.491482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469577,-99) , 
5, 0.521156, 1, 0, 0.486896,-99) , 
2, 0.0722459, 1, 0, 0.499362,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.016011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.510401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489824,-99) , 
0, 0.5019, 1, 0, 0.50712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490315,-99) , 
3, 4.02178, 1, 0, 0.509682,-99) , 
NN(
0, 
0, 
-1, 0.495233, 1, -1, 0.493898,-99) , 
5, -0.855444, 1, 0, 0.496484,-99) , 
5, 0.517776, 0, 0, 0.498684,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0124328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497436,-99) , 
5, -0.689737, 1, 0, 0.499146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483191,-99) , 
0, 0.497138, 1, 0, 0.490524,-99) , 
5, -0.837113, 0, 0, 0.497773,-99) , 
NN(
0, 
0, 
-1, 0.497137, 1, -1, 0.479725,-99) , 
5, 0.710262, 1, 0, 0.495901,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0109343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490789, 0, 1, 0.510722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494264,-99) , 
5, -0.271116, 0, 0, 0.498694,-99) , 
0, 0.492376, 1, 0, 0.499846,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.478311,-99) , 
5, -0.904924, 0, 0, 0.498088,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0103832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.511197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497081,-99) , 
0, 0.495234, 1, 0, 0.4986,-99) , 
2, -0.0714185, 1, 0, 0.500706,-99) , 
NN(
0, 
0, 
-1, -0.00012557, 0, -1, 0.481558,-99) , 
5, 0.804512, 1, 0, 0.499654,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0138714);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499413,-99) , 
0, 0.497136, 0, 0, 0.50932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49603,-99) , 
3, 0.753365, 1, 0, 0.498836,-99) , 
3, 4.70455, 0, 0, 0.500745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472374,-99) , 
2, 0.214255, 1, 0, 0.499717,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.00797253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.32115, 1, 1, 0.50865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499219,-99) , 
3, 6.88389, 0, 0, 0.500331,-99) , 
2, 0.0733819, 0, 0, 0.501556,-99) , 
NN(
0, 
0, 
-1, 0.791707, 1, -1, 0.485824,-99) , 
5, 0.710264, 1, 0, 0.499912,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.00766253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498896,-99) , 
3, 4.82962, 0, 0, 0.500869,-99) , 
4, 0.999048, 1, 0, 0.501549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481559,-99) , 
3, 9.12028, 1, 0, 0.500909,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.016699);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484839,-99) , 
0, 0.502852, 1, 0, 0.510181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48877,-99) , 
5, -0.80982, 0, 0, 0.500612,-99) , 
3, 1.21453, 1, 0, 0.503899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491492,-99) , 
5, 0.516622, 0, 0, 0.497709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482316,-99) , 
3, 9.16595, 1, 0, 0.495096,-99) , 
3, 4.74841, 1, 0, 0.502254,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0118344);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526411,-99) , 
NN(
NN(
0, 
0, 
-1, 0.99981, 1, 1, 0.503678,-99) , 
NN(
0, 
0, 
-1, -0.0508222, 0, -1, 0.489679,-99) , 
5, 0.520777, 1, 0, 0.500933,-99) , 
2, -0.214037, 1, 0, 0.502047,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0224856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497784,-99) , 
4, 0.999998, 0, 0, 0.503277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472696,-99) , 
1, -0.00171747, 1, 0, 0.490049,-99) , 
4, 0.999955, 0, 0, 0.500579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463248,-99) , 
4, 0.999048, 0, 0, 0.499453,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0104715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0743673, 0, 1, 0.503936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481468,-99) , 
4, 0.999529, 0, 0, 0.503307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504734,-99) , 
NN(
0, 
0, 
-1, 0.861588, 0, -1, 0.481252,-99) , 
5, 0.793646, 1, 0, 0.490938,-99) , 
5, 0.712113, 1, 0, 0.502029,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.00529481);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516044,-99) , 
NN(
NN(
0, 
0, 
-1, -0.150751, 0, 1, 0.512036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493609,-99) , 
0, 0.495279, 0, 0, 0.498973,-99) , 
0, 0.491424, 1, 0, 0.499831,-99) , 
2, 0.21418, 0, 0, 0.500456,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.00755954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499808,-99) , 
0, 0.501899, 0, 0, 0.501824,-99) , 
4, 0.999048, 1, 0, 0.502638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476429,-99) , 
2, -0.214062, 0, 0, 0.501571,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.00977028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510544,-99) , 
NN(
0, 
0, 
-1, 0.0714181, 1, -1, 0.495929,-99) , 
0, 0.505981, 0, 0, 0.496422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482222,-99) , 
0, 0.490472, 0, 0, 0.495794,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0141316);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494282,-99) , 
5, 0.663336, 1, 0, 0.506523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476233,-99) , 
5, -0.722088, 1, 0, 0.497043,-99) , 
5, -0.656691, 0, 0, 0.503779,-99) , 
NN(
0, 
0, 
-1, 0.497135, 1, -1, 0.487394,-99) , 
5, 0.802286, 1, 0, 0.502856,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0119413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.519002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476939,-99) , 
3, 7.16367, 1, 0, 0.501881,-99) , 
5, 0.712113, 0, 0, 0.503624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47756,-99) , 
3, 9.37272, 1, 0, 0.502907,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.00934877);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497521,-99) , 
5, -0.809763, 1, 0, 0.499246,-99) , 
3, 9.11447, 0, 0, 0.500197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478656,-99) , 
4, 0.999048, 0, 0, 0.499534,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0153833);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47685,-99) , 
4, 0.999955, 0, 0, 0.511875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497227,-99) , 
4, 0.999977, 1, 0, 0.500808,-99) , 
3, 4.63272, 0, 0, 0.503012,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.488544,-99) , 
4, 0.999524, 0, 0, 0.502246,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0130369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497683,-99) , 
0, 0.497774, 1, 0, 0.502364,-99) , 
0, 0.502852, 0, 0, 0.504195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478014,-99) , 
4, 0.999982, 0, 0, 0.49733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4719,-99) , 
4, 0.999905, 0, 0, 0.495794,-99) , 
5, 0.139873, 0, 0, 0.498955,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.014898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.97823, 1, 1, 0.518823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493105,-99) , 
5, 0.874157, 0, 0, 0.498699,-99) , 
5, 0.632916, 1, 0, 0.504427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481142,-99) , 
4, 0.999959, 0, 0, 0.500045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461237,-99) , 
4, 0.999714, 0, 0, 0.49881,-99) , 
5, 0.519832, 0, 0, 0.499965,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0129401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.518744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497557,-99) , 
5, 0.264952, 1, 0, 0.501425,-99) , 
5, 0.814332, 0, 0, 0.503692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485853,-99) , 
3, 3.79107, 1, 0, 0.496547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464212,-99) , 
5, -0.950223, 0, 0, 0.494328,-99) , 
5, 0.0451632, 0, 0, 0.498202,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00978496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496742,-99) , 
2, -0.0289234, 1, 0, 0.499229,-99) , 
2, 0.215679, 0, 0, 0.499808,-99) , 
NN(
0, 
0, 
-1, 0.506117, 1, -1, 0.486849,-99) , 
0, 0.504757, 1, 0, 0.49899,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0134898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49696,-99) , 
3, 1.96085, 1, 0, 0.513089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492715,-99) , 
3, 4.79159, 1, 0, 0.508847,-99) , 
NN(
0, 
0, 
-1, 0.53833, 1, -1, 0.494626,-99) , 
5, 0.615248, 0, 0, 0.496869,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.00800872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.07715, 0, 1, 0.502545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478211,-99) , 
4, 0.999728, 0, 0, 0.501414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478064,-99) , 
4, 0.999048, 0, 0, 0.500701,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0080091);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520298,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507707,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.498524,-99) , 
5, 0.330996, 0, 0, 0.501177,-99) , 
2, -0.214257, 1, 0, 0.501995,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0164233);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490605,-99) , 
0, 0.503487, 1, 0, 0.502161,-99) , 
NN(
0, 
0, 
-1, -0.0709283, 0, -1, 0.490445,-99) , 
5, 0.425726, 1, 0, 0.499289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489845,-99) , 
0, 0.493782, 1, 0, 0.502781,-99) , 
NN(
0, 
0, 
-1, 2.1709, 0, -1, 0.483955,-99) , 
5, 0.331006, 0, 0, 0.489246,-99) , 
0, 0.495233, 0, 0, 0.496865,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.014583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4885,-99) , 
3, 3.41159, 1, 0, 0.500895,-99) , 
5, 0.611635, 0, 0, 0.50439,-99) , 
NN(
0, 
0, 
-1, 0.499405, 1, -1, 0.49459,-99) , 
0, 0.499995, 0, 0, 0.49792,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0134422);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491043,-99) , 
3, 4.74982, 1, 0, 0.500958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464866,-99) , 
2, -0.00318577, 0, 0, 0.48598,-99) , 
5, -0.90488, 0, 0, 0.499717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50028,-99) , 
NN(
0, 
0, 
-1, 0.498182, 0, -1, 0.479903,-99) , 
0, 0.495234, 1, 0, 0.485988,-99) , 
2, 0.0713089, 1, 0, 0.497691,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.119071);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455454,-99) , 
6, 0.00527014, 0, 0, 0.493693,-99) , 
1, -0.0123007, 1, 0, 0.495403,-99) , 
1, 0.0120461, 0, 0, 0.496353,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.128893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00723287, 0, 1, 0.597931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450078,-99) , 
6, 0.0027859, 0, 0, 0.468221,-99) , 
6, 0.00450043, 0, 0, 0.512276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.222162,-99) , 
6, 0.0236298, 1, 0, 0.504784,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0258503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485391,-99) , 
2, 0.0707112, 1, 0, 0.509452,-99) , 
1, -0.00389593, 1, 0, 0.514364,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496897,-99) , 
2, -0.00990518, 1, 0, 0.50187,-99) , 
NN(
0, 
0, 
-1, -0.32108, 0, -1, 0.485268,-99) , 
3, 3.26682, 1, 0, 0.496584,-99) , 
5, -0.0495143, 0, 0, 0.50457,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0238633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.687578, 1, 1, 0.511711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487565,-99) , 
3, 1.46143, 0, 0, 0.499784,-99) , 
5, -0.29447, 0, 0, 0.507617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504627,-99) , 
NN(
0, 
0, 
-1, 2.65851, 0, -1, 0.478277,-99) , 
0, 0.494281, 1, 0, 0.483816,-99) , 
5, -0.810049, 0, 0, 0.503706,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.104773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0100077, 0, 1, 0.620315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465479,-99) , 
6, 0.00355091, 0, 0, 0.481823,-99) , 
6, 0.00677928, 0, 0, 0.507306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.223381,-99) , 
6, 0.023732, 1, 0, 0.500111,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0191102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0712183, 1, 1, 0.518358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49865,-99) , 
0, 0.503623, 1, 0, 0.505578,-99) , 
0, 0.499995, 1, 0, 0.514383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537202,-99) , 
NN(
0, 
0, 
-1, -0.750884, 0, -1, 0.495515,-99) , 
0, 0.505709, 0, 0, 0.497458,-99) , 
5, 0.0462935, 0, 0, 0.504429,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0197546);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.516762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490791,-99) , 
0, 0.500002, 1, 0, 0.509618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496428,-99) , 
0, 0.504757, 0, 0, 0.497651,-99) , 
3, 4.84144, 0, 0, 0.499748,-99) , 
5, 0.235936, 0, 0, 0.505468,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0192852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.747087, 0, 1, 0.526897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497728,-99) , 
2, -0.0714062, 0, 0, 0.522097,-99) , 
NN(
NN(
0, 
0, 
-1, 0.494145, 0, 1, 0.511526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496016,-99) , 
0, 0.498771, 0, 0, 0.501341,-99) , 
0, 0.495233, 1, 0, 0.503861,-99) , 
5, 0.520775, 0, 0, 0.50761,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.021921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.780064, 0, 1, 0.519952,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999905, 1, 1, 0.504464,-99) , 
NN(
0, 
0, 
-1, -0.798108, 0, -1, 0.492295,-99) , 
5, -0.470049, 0, 0, 0.497612,-99) , 
5, 0.236533, 0, 0, 0.505248,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.019828);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.526548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496509,-99) , 
0, 0.499995, 1, 0, 0.502741,-99) , 
NN(
0, 
0, 
-1, 2.50063, 1, -1, 0.473956,-99) , 
5, -0.923051, 0, 0, 0.500507,-99) , 
5, 0.615822, 0, 0, 0.504683,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0145445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814554, 1, 1, 0.508402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48934,-99) , 
5, -0.72368, 0, 0, 0.502141,-99) , 
0, 0.499995, 0, 0, 0.504258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503809,-99) , 
NN(
0, 
0, 
-1, 2.05377, 0, -1, 0.477373,-99) , 
5, -0.93204, 0, 0, 0.485492,-99) , 
5, -0.904853, 0, 0, 0.502707,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0106348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.804798, 0, 1, 0.505516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473946,-99) , 
5, 0.710872, 1, 0, 0.497786,-99) , 
0, 0.497092, 0, 0, 0.50235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478237,-99) , 
0, 0.505709, 1, 0, 0.501453,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00601907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499304,-99) , 
3, 8.82937, 0, 0, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475328,-99) , 
4, 0.999048, 0, 0, 0.49953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48013,-99) , 
0, 0.490472, 0, 0, 0.498692,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.00913171);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.870643, 0, 1, 0.527866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473703,-99) , 
3, 7.17551, 1, 0, 0.499716,-99) , 
3, 9.3884, 0, 0, 0.500881,-99) , 
5, 0.807231, 0, 0, 0.502419,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00821173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482858,-99) , 
0, 0.494508, 0, 0, 0.50916,-99) , 
NN(
0, 
0, 
-1, 0.4902, 1, 1, 0.501032,-99) , 
5, 0.615823, 0, 0, 0.502312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475738,-99) , 
0, 0.505709, 1, 0, 0.50133,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0155945);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.859084, 0, 1, 0.540555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49721,-99) , 
5, 0.493771, 0, 0, 0.499281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480187,-99) , 
0, 0.5019, 0, 0, 0.485254,-99) , 
5, -0.828099, 0, 0, 0.497052,-99) , 
5, 0.8048, 0, 0, 0.499713,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0118751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49919,-99) , 
0, 0.491424, 1, 0, 0.500754,-99) , 
5, 0.806353, 0, 0, 0.502215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493964,-99) , 
5, 0.384498, 0, 0, 0.496576,-99) , 
NN(
0, 
0, 
-1, 0.760037, 0, -1, 0.477104,-99) , 
5, 0.615248, 1, 0, 0.493873,-99) , 
0, 0.499043, 1, 0, 0.498724,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0129426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.514484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496091,-99) , 
3, 4.55787, 0, 0, 0.498387,-99) , 
5, 0.71087, 0, 0, 0.500041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472659,-99) , 
2, 0.214963, 1, 0, 0.499076,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0131786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.769518, 1, 1, 0.51955,-99) , 
NN(
0, 
0, 
-1, 0.724866, 1, -1, 0.49067,-99) , 
0, 0.497138, 0, 0, 0.508072,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0746593, 0, 1, 0.508115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488285,-99) , 
2, -0.0713397, 0, 0, 0.499907,-99) , 
0, 0.494281, 1, 0, 0.501468,-99) , 
5, 0.521138, 0, 0, 0.502813,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.00921865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476168,-99) , 
3, 7.57931, 1, 0, 0.501426,-99) , 
4, 0.999049, 1, 0, 0.502515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476556,-99) , 
3, 9.33325, 1, 0, 0.501773,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0132377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496039,-99) , 
3, 4.10665, 1, 0, 0.51101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496149,-99) , 
3, 4.60913, 0, 0, 0.498216,-99) , 
2, -0.0505707, 1, 0, 0.500448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48421,-99) , 
2, -0.213708, 0, 0, 0.499782,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.00883708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.502378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480005,-99) , 
4, 0.999525, 0, 0, 0.501567,-99) , 
NN(
0, 
0, 
-1, 0.869284, 1, -1, 0.470618,-99) , 
5, 0.805918, 1, 0, 0.499922,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0127275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4906,-99) , 
3, 4.52128, 1, 0, 0.50172,-99) , 
3, 9.38081, 0, 0, 0.502708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483517,-99) , 
3, 4.50261, 1, 0, 0.498668,-99) , 
NN(
0, 
0, 
-1, -0.855555, 0, -1, 0.486939,-99) , 
5, -0.62075, 0, 0, 0.494849,-99) , 
0, 0.494281, 0, 0, 0.50127,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.00754076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0303975, 0, 1, 0.502443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484401,-99) , 
2, -0.214411, 0, 0, 0.501771,-99) , 
NN(
0, 
0, 
-1, 0.490154, 1, -1, 0.484353,-99) , 
0, 0.491424, 0, 0, 0.500624,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.00827638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498562,-99) , 
2, -0.20973, 1, 0, 0.499247,-99) , 
3, 8.85325, 0, 0, 0.500291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47481,-99) , 
4, 0.999524, 0, 0, 0.498965,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.014159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49226,-99) , 
4, 0.999932, 0, 0, 0.507727,-99) , 
4, 0.999524, 1, 0, 0.509277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499968,-99) , 
0, 0.499559, 1, 0, 0.501947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483763,-99) , 
0, 0.5058, 1, 0, 0.50071,-99) , 
0, 0.49809, 1, 0, 0.504924,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0102894);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52051,-99) , 
NN(
NN(
0, 
0, 
-1, -0.954827, 1, 1, 0.503447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496106,-99) , 
2, -0.214437, 1, 0, 0.497652,-99) , 
5, -0.525692, 1, 0, 0.499659,-99) , 
0, 0.505709, 0, 0, 0.500484,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.010115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494591,-99) , 
0, 0.501446, 0, 0, 0.497443,-99) , 
5, -0.429568, 0, 0, 0.501113,-99) , 
NN(
0, 
0, 
-1, 0.490154, 1, -1, 0.482438,-99) , 
0, 0.491424, 0, 0, 0.499874,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0122075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493658,-99) , 
0, 0.499043, 0, 0, 0.49703,-99) , 
3, 9.12912, 0, 0, 0.49788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472995,-99) , 
4, 0.999524, 0, 0, 0.496602,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00962185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47722,-99) , 
5, 0.834413, 1, 0, 0.506603,-99) , 
4, 0.999524, 1, 0, 0.516952,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.500994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47799,-99) , 
0, 0.497138, 1, 0, 0.487575,-99) , 
5, -0.918452, 0, 0, 0.499939,-99) , 
5, 0.712116, 0, 0, 0.501776,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0112548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498609,-99) , 
0, 0.495277, 0, 0, 0.504082,-99) , 
0, 0.499992, 0, 0, 0.508222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494021,-99) , 
0, 0.498091, 1, 0, 0.497845,-99) , 
NN(
0, 
0, 
-1, 2.15884, 1, -1, 0.488295,-99) , 
5, -0.837172, 0, 0, 0.496317,-99) , 
5, 0.70954, 0, 0, 0.497602,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0124887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495502,-99) , 
5, 0.558428, 1, 0, 0.51356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482157,-99) , 
3, 3.07502, 1, 0, 0.5005,-99) , 
5, -0.146284, 0, 0, 0.506943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519111,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.496564,-99) , 
4, 0.999524, 1, 0, 0.497485,-99) , 
2, 0.0712684, 0, 0, 0.498926,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.00790904);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.5058, 1, 1, 0.515127,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493231, 1, 1, 0.501912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476009,-99) , 
0, 0.489927, 0, 0, 0.500989,-99) , 
0, 0.503804, 0, 0, 0.502419,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0157309);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499666,-99) , 
3, 4.70559, 0, 0, 0.504217,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.491925,-99) , 
5, 0.520234, 0, 0, 0.49439,-99) , 
2, -0.214257, 1, 0, 0.495402,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0133475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00389593, 1, 1, 0.507667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486575,-99) , 
5, 0.861586, 1, 0, 0.506175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495278,-99) , 
0, 0.499995, 0, 0, 0.498759,-99) , 
5, -0.950175, 1, 0, 0.500009,-99) , 
5, 0.0462922, 0, 0, 0.502566,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00857079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.76561, 1, 1, 0.509777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498716,-99) , 
0, 0.503532, 0, 0, 0.499945,-99) , 
5, 0.71128, 0, 0, 0.500994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482395,-99) , 
5, -0.0513856, 1, 0, 0.495336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475016,-99) , 
0, 0.492512, 1, 0, 0.490281,-99) , 
0, 0.493329, 0, 0, 0.49956,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0095281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.71886, 0, 1, 0.512803,-99) , 
NN(
0, 
0, 
-1, 0.539992, 1, -1, 0.49725,-99) , 
5, 0.616996, 0, 0, 0.499394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475365,-99) , 
4, 0.999048, 0, 0, 0.498658,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0146442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487249,-99) , 
0, 0.498654, 1, 0, 0.506659,-99) , 
NN(
0, 
0, 
-1, 0.48948, 0, -1, 0.489497,-99) , 
0, 0.49088, 0, 0, 0.50509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494813,-99) , 
2, 0.0713179, 0, 0, 0.496517,-99) , 
5, -0.90488, 1, 0, 0.497612,-99) , 
0, 0.499043, 1, 0, 0.50194,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0119392);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0434421, 1, 1, 0.515301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493657,-99) , 
5, -0.809856, 0, 0, 0.501763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480739,-99) , 
0, 0.505573, 1, 0, 0.500791,-99) , 
0, 0.493329, 1, 0, 0.502789,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0118845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493619,-99) , 
3, 2.2317, 1, 0, 0.498177,-99) , 
3, 9.01603, 0, 0, 0.499266,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.47844,-99) , 
4, 0.999524, 0, 0, 0.498173,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.00729456);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465689,-99) , 
3, 9.33743, 1, 0, 0.501743,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0141547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.725711, 1, 1, 0.521416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4926,-99) , 
5, 0.770497, 0, 0, 0.499864,-99) , 
0, 0.49714, 0, 0, 0.512715,-99) , 
NN(
NN(
0, 
0, 
-1, -0.42023, 1, 1, 0.507292,-99) , 
NN(
0, 
0, 
-1, -0.347766, 1, -1, 0.496215,-99) , 
0, 0.495233, 1, 0, 0.498987,-99) , 
5, 0.521879, 0, 0, 0.501821,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00889589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.711315, 0, 1, 0.528931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498161,-99) , 
3, 5.37836, 0, 0, 0.499404,-99) , 
4, 0.999524, 1, 0, 0.500956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480771,-99) , 
3, 9.32353, 1, 0, 0.500365,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0081658);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.13688, 0, 1, 0.50319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479768,-99) , 
4, 0.999524, 0, 0, 0.501964,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0151922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.50939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485993,-99) , 
5, 0.610867, 1, 0, 0.505503,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492647,-99) , 
0, 0.499632, 1, 0, 0.496338,-99) , 
NN(
0, 
0, 
-1, -0.52622, 0, -1, 0.489718,-99) , 
0, 0.497138, 0, 0, 0.493735,-99) , 
2, 0.0706818, 0, 0, 0.49556,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.00951846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499705,-99) , 
4, 0.999878, 1, 0, 0.50063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476383,-99) , 
4, 0.999714, 0, 0, 0.49984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483123,-99) , 
3, 4.69929, 0, 0, 0.490056,-99) , 
4, 0.999048, 1, 0, 0.492724,-99) , 
5, 0.521879, 1, 0, 0.498405,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0113464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.716436, 1, 1, 0.514359,-99) , 
NN(
NN(
0, 
0, 
-1, 9.13371, 0, 1, 0.504286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481482,-99) , 
4, 0.999048, 0, 0, 0.503624,-99) , 
0, 0.503804, 0, 0, 0.504708,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.019295);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490152,-99) , 
3, 4.59301, 1, 0, 0.504482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493066,-99) , 
5, -0.621074, 1, 0, 0.497238,-99) , 
2, 0.00360064, 0, 0, 0.501046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498565,-99) , 
0, 0.499043, 1, 0, 0.507383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467122,-99) , 
3, 2.11627, 1, 0, 0.479546,-99) , 
3, 4.75211, 0, 0, 0.489197,-99) , 
2, -0.0712183, 0, 0, 0.499109,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.00746581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499545,-99) , 
0, 0.492376, 1, 0, 0.500569,-99) , 
NN(
0, 
0, 
-1, 0.874158, 0, -1, 0.482833,-99) , 
5, 0.813845, 1, 0, 0.499575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474829,-99) , 
3, 2.10706, 0, 0, 0.489373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468402,-99) , 
5, -0.963816, 0, 0, 0.482021,-99) , 
5, -0.905008, 0, 0, 0.49817,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0192026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.62155, 1, 1, 0.514908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493866,-99) , 
2, -0.0358781, 1, 0, 0.497322,-99) , 
3, 3.93765, 0, 0, 0.501445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469315,-99) , 
3, 9.06192, 1, 0, 0.500439,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.00999307);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.20973, 1, 1, 0.504394,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.484045,-99) , 
4, 0.999524, 0, 0, 0.503334,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.010198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502217, 1, 1, 0.508132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49809,-99) , 
5, -0.913934, 1, 0, 0.499479,-99) , 
0, 0.500948, 0, 0, 0.501781,-99) , 
NN(
0, 
0, 
-1, 0.870643, 0, -1, 0.482057,-99) , 
5, 0.807231, 1, 0, 0.500716,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.060816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482262,-99) , 
6, 0.00732558, 0, 0, 0.495736,-99) , 
1, -0.0103246, 1, 0, 0.499808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447623,-99) , 
1, 0.0139871, 1, 0, 0.498304,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0236878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498592,-99) , 
0, 0.505256, 1, 0, 0.513604,-99) , 
NN(
0, 
0, 
-1, 0.502897, 0, 1, 0.50412,-99) , 
5, -0.809901, 0, 0, 0.512074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481682,-99) , 
3, 4.67335, 1, 0, 0.502695,-99) , 
NN(
0, 
0, 
-1, -0.431565, 1, -1, 0.48362,-99) , 
0, 0.49088, 0, 0, 0.498591,-99) , 
0, 0.495234, 0, 0, 0.508818,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0165559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489973, 0, 1, 0.516512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475189,-99) , 
0, 0.492921, 0, 0, 0.504113,-99) , 
0, 0.491741, 1, 0, 0.505563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491865,-99) , 
5, -0.524924, 0, 0, 0.500093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470907,-99) , 
0, 0.506163, 1, 0, 0.497785,-99) , 
0, 0.499995, 1, 0, 0.502964,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0129268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491443,-99) , 
5, 0.148506, 1, 0, 0.504241,-99) , 
5, 0.607939, 0, 0, 0.506944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483466,-99) , 
4, 0.999955, 0, 0, 0.498318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479153,-99) , 
4, 0.999524, 0, 0, 0.497358,-99) , 
0, 0.500947, 0, 0, 0.499879,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0139099);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496317,-99) , 
4, 0.999524, 1, 0, 0.497874,-99) , 
NN(
0, 
0, 
-1, -0.810389, 0, -1, 0.486077,-99) , 
3, 4.73378, 1, 0, 0.49576,-99) , 
2, 0.21442, 0, 0, 0.496617,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.011123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.589845, 1, 1, 0.511796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483399,-99) , 
2, -0.0721599, 0, 0, 0.507114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497673,-99) , 
3, 7.28536, 0, 0, 0.498679,-99) , 
0, 0.505709, 0, 0, 0.49958,-99) , 
5, 0.521879, 0, 0, 0.501125,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0172711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488226,-99) , 
5, -0.715542, 0, 0, 0.506196,-99) , 
2, -0.0746524, 1, 0, 0.511795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493844,-99) , 
0, 0.493672, 0, 0, 0.503335,-99) , 
NN(
0, 
0, 
-1, 0.500086, 0, -1, 0.492806,-99) , 
0, 0.499179, 1, 0, 0.500555,-99) , 
0, 0.5019, 0, 0, 0.502751,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0215814);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0012808, 1, 1, 0.511594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48945,-99) , 
5, -0.877701, 0, 0, 0.505665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491986,-99) , 
2, 0.0557003, 0, 0, 0.495703,-99) , 
3, 2.42049, 0, 0, 0.500158,-99) , 
5, -0.143939, 0, 0, 0.505787,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0147624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503597, 0, 1, 0.506821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488087,-99) , 
0, 0.5058, 1, 0, 0.505543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49709,-99) , 
0, 0.491107, 1, 0, 0.5004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47548,-99) , 
2, -0.0712183, 1, 0, 0.483651,-99) , 
3, 4.70455, 1, 0, 0.497493,-99) , 
0, 0.49809, 0, 0, 0.501635,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0132294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492445,-99) , 
0, 0.500461, 0, 0, 0.508821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493168,-99) , 
0, 0.50554, 0, 0, 0.499101,-99) , 
0, 0.50326, 1, 0, 0.505352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517199,-99) , 
NN(
0, 
0, 
-1, 0.999887, 0, -1, 0.495941,-99) , 
4, 0.999524, 1, 0, 0.497104,-99) , 
0, 0.499995, 0, 0, 0.499885,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0144709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485159,-99) , 
4, 0.999905, 0, 0, 0.505528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495365,-99) , 
0, 0.495233, 1, 0, 0.499193,-99) , 
5, 0.331646, 1, 0, 0.503697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487153,-99) , 
2, 0.213937, 1, 0, 0.503079,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0114142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.502153,-99) , 
NN(
0, 
0, 
-1, 4.68336, 1, -1, 0.490125,-99) , 
5, 0.567175, 1, 0, 0.499569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486414,-99) , 
0, 0.500947, 0, 0, 0.492889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468856,-99) , 
3, 4.59427, 1, 0, 0.488711,-99) , 
5, -0.809761, 0, 0, 0.497791,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0132937);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538291,-99) , 
NN(
NN(
0, 
0, 
-1, 0.818084, 1, 1, 0.515568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489623,-99) , 
5, 0.46531, 1, 0, 0.501779,-99) , 
5, 0.709539, 0, 0, 0.50304,-99) , 
4, 0.999048, 1, 0, 0.504226,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0128667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.516489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482892,-99) , 
2, 0.0712684, 1, 0, 0.511312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523905,-99) , 
NN(
0, 
0, 
-1, 5.47841, 1, -1, 0.497141,-99) , 
0, 0.505709, 0, 0, 0.498302,-99) , 
5, 0.521142, 0, 0, 0.501005,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0147293);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.495778, 0, 1, 0.507302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494782,-99) , 
0, 0.499813, 0, 0, 0.498165,-99) , 
NN(
0, 
0, 
-1, 0.514531, 1, -1, 0.488309,-99) , 
0, 0.501627, 1, 0, 0.495127,-99) , 
0, 0.496186, 1, 0, 0.498983,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0152992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491635,-99) , 
2, -0.069259, 0, 0, 0.502894,-99) , 
0, 0.505709, 0, 0, 0.504132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500269,-99) , 
NN(
0, 
0, 
-1, 0.49632, 1, -1, 0.474877,-99) , 
0, 0.499042, 0, 0, 0.484786,-99) , 
5, 0.712114, 1, 0, 0.502161,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0103973);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524018,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0723338, 1, 1, 0.51291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497516,-99) , 
5, 0.71128, 0, 0, 0.49872,-99) , 
0, 0.503532, 0, 0, 0.500389,-99) , 
0, 0.490472, 1, 0, 0.501487,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0155367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494795,-99) , 
5, -0.429709, 1, 0, 0.50005,-99) , 
4, 0.999524, 1, 0, 0.501569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493532,-99) , 
0, 0.501899, 0, 0, 0.497236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478235,-99) , 
5, 0.607088, 1, 0, 0.493889,-99) , 
3, 4.7423, 1, 0, 0.500117,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0134433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526067,-99) , 
NN(
0, 
0, 
-1, -0.0456003, 0, -1, 0.494678,-99) , 
2, -0.207928, 1, 0, 0.495986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474688,-99) , 
3, 9.38661, 1, 0, 0.495392,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0179811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498093, 0, 1, 0.527412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490683,-99) , 
0, 0.500947, 1, 0, 0.505579,-99) , 
1, -0.002873, 1, 0, 0.509559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488495,-99) , 
4, 0.999986, 0, 0, 0.501305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488066,-99) , 
4, 0.999905, 0, 0, 0.500372,-99) , 
5, 0.330204, 0, 0, 0.503103,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0121269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.415511, 0, 1, 0.518124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495707,-99) , 
2, 0.0711978, 0, 0, 0.499016,-99) , 
5, 0.552835, 1, 0, 0.505975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499376,-99) , 
2, 0.0696619, 0, 0, 0.500993,-99) , 
NN(
0, 
0, 
-1, -0.0678539, 0, -1, 0.489514,-99) , 
3, 3.93657, 1, 0, 0.498135,-99) , 
5, 0.330996, 0, 0, 0.500455,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0208761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487374,-99) , 
4, 0.999905, 0, 0, 0.505954,-99) , 
NN(
0, 
0, 
-1, -0.968971, 1, -1, 0.48155,-99) , 
5, -0.927603, 0, 0, 0.504113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491699,-99) , 
1, 0.00211315, 0, 0, 0.499027,-99) , 
NN(
0, 
0, 
-1, 0.499041, 1, -1, 0.473933,-99) , 
5, 0.76909, 1, 0, 0.48996,-99) , 
5, 0.520233, 1, 0, 0.501277,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.00902828);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503633,-99) , 
NN(
NN(
0, 
0, 
-1, -0.819366, 0, 1, 0.503154,-99) , 
NN(
0, 
0, 
-1, 0.683883, 1, -1, 0.489764,-99) , 
5, -0.620713, 1, 0, 0.493438,-99) , 
3, 4.71771, 1, 0, 0.501704,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0101165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.807238, 0, 1, 0.527852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489313,-99) , 
0, 0.495596, 1, 0, 0.49863,-99) , 
0, 0.498089, 0, 0, 0.512945,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0731616, 0, 1, 0.502281,-99) , 
NN(
0, 
0, 
-1, -0.836941, 0, -1, 0.495685,-99) , 
0, 0.497138, 1, 0, 0.498307,-99) , 
5, 0.712113, 0, 0, 0.499881,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0137764);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
0, 0.499995, 0, 0, 0.501654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480092,-99) , 
5, 0.825349, 1, 0, 0.500499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476975,-99) , 
5, -0.84427, 0, 0, 0.485194,-99) , 
5, -0.954701, 1, 0, 0.491657,-99) , 
5, -0.809761, 0, 0, 0.499024,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00693274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499894,-99) , 
0, 0.5014, 0, 0, 0.50586,-99) , 
NN(
0, 
0, 
-1, 0.503124, 1, -1, 0.497763,-99) , 
2, -0.0716069, 1, 0, 0.499085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480364,-99) , 
0, 0.505709, 1, 0, 0.498401,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0116364);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497707,-99) , 
5, -0.23906, 1, 0, 0.50231,-99) , 
4, 0.999048, 1, 0, 0.503274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484225,-99) , 
3, 9.25184, 1, 0, 0.502708,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0125517);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485097,-99) , 
5, -0.904911, 0, 0, 0.503963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495854,-99) , 
5, -0.905169, 1, 0, 0.497877,-99) , 
0, 0.499678, 1, 0, 0.501899,-99) , 
0, 0.505709, 0, 0, 0.502314,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0204026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.513362, 0, 1, 0.513229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495997,-99) , 
0, 0.490472, 1, 0, 0.498156,-99) , 
3, 1.216, 1, 0, 0.503384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477169,-99) , 
2, -0.0715962, 1, 0, 0.487559,-99) , 
5, -0.810389, 1, 0, 0.491874,-99) , 
3, 4.74982, 1, 0, 0.501235,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0129509);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.589831, 1, 1, 0.510801,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489973,-99) , 
4, 0.999982, 0, 0, 0.499836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479901,-99) , 
4, 0.99981, 0, 0, 0.498921,-99) , 
5, 0.521879, 0, 0, 0.501355,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0132286);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493026,-99) , 
0, 0.491243, 0, 0, 0.509089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478423,-99) , 
5, 0.777802, 1, 0, 0.499586,-99) , 
0, 0.497138, 1, 0, 0.50342,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.494238,-99) , 
5, -0.144359, 0, 0, 0.498745,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0163992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.71359, 1, 1, 0.520405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490852,-99) , 
3, 2.61137, 1, 0, 0.50333,-99) , 
5, -0.049249, 0, 0, 0.511163,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494941,-99) , 
4, 0.999977, 1, 0, 0.497993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470509,-99) , 
4, 0.999524, 0, 0, 0.496955,-99) , 
2, 0.0700534, 0, 0, 0.499183,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0141236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.806353, 0, 1, 0.504692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481867,-99) , 
0, 0.504756, 1, 0, 0.503428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481114,-99) , 
2, -0.139231, 1, 0, 0.498182,-99) , 
NN(
0, 
0, 
-1, -0.138141, 0, -1, 0.483933,-99) , 
5, -0.430992, 0, 0, 0.492625,-99) , 
2, -0.0712183, 0, 0, 0.501667,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0179736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492028,-99) , 
3, 2.11226, 1, 0, 0.509709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494589,-99) , 
2, 0.0199676, 0, 0, 0.49994,-99) , 
2, -0.0535408, 1, 0, 0.5016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48493,-99) , 
2, -0.153339, 0, 0, 0.497493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483537,-99) , 
2, 0.0710283, 1, 0, 0.493736,-99) , 
3, 4.74841, 1, 0, 0.500124,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0168145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48899,-99) , 
3, 4.70517, 1, 0, 0.511772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486261,-99) , 
5, 0.231099, 1, 0, 0.500485,-99) , 
5, 0.520773, 0, 0, 0.5028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48729,-99) , 
2, 0.139366, 0, 0, 0.493616,-99) , 
NN(
0, 
0, 
-1, 0.493601, 1, -1, 0.475105,-99) , 
0, 0.498091, 0, 0, 0.484815,-99) , 
2, 0.0714181, 1, 0, 0.500131,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0130813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142353, 1, 1, 0.503345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48486,-99) , 
2, -0.227862, 0, 0, 0.502562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484618,-99) , 
0, 0.498089, 0, 0, 0.500216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450484,-99) , 
3, 2.94135, 1, 0, 0.474126,-99) , 
5, -0.144357, 0, 0, 0.48715,-99) , 
2, 0.0714181, 1, 0, 0.500283,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.00893125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.55383, 0, 1, 0.51536,-99) , 
NN(
0, 
0, 
-1, 7.1274, 1, -1, 0.49847,-99) , 
5, 0.616996, 0, 0, 0.501048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466916,-99) , 
3, 9.32235, 1, 0, 0.500091,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0129373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495616,-99) , 
5, -0.0362401, 0, 0, 0.507804,-99) , 
5, -0.809921, 1, 0, 0.511925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495966,-99) , 
2, 0.227254, 0, 0, 0.4966,-99) , 
5, 0.807232, 0, 0, 0.497377,-99) , 
2, -0.0718609, 1, 0, 0.499805,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.017001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49777,-99) , 
5, 0.477101, 1, 0, 0.518644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49167,-99) , 
5, -0.810258, 0, 0, 0.513482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49395,-99) , 
0, 0.497119, 0, 0, 0.502286,-99) , 
NN(
0, 
0, 
-1, 0.503986, 1, -1, 0.492148,-99) , 
0, 0.502172, 1, 0, 0.500224,-99) , 
0, 0.493329, 1, 0, 0.502046,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0184956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.117179, 1, 1, 0.519779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488737,-99) , 
2, -0.207818, 0, 0, 0.511825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492487,-99) , 
0, 0.495234, 0, 0, 0.502467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473811,-99) , 
0, 0.496185, 1, 0, 0.487661,-99) , 
5, 0.712114, 1, 0, 0.500964,-99) , 
2, -0.0718609, 1, 0, 0.502771,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0163193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498037,-99) , 
2, -0.13956, 1, 0, 0.518611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497524,-99) , 
2, 0.00326369, 0, 0, 0.50043,-99) , 
2, -0.0715418, 1, 0, 0.503476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489597,-99) , 
0, 0.493329, 1, 0, 0.492311,-99) , 
5, -0.968305, 1, 0, 0.494959,-99) , 
5, -0.334499, 0, 0, 0.499771,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0106479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.3875, 1, 1, 0.509426,-99) , 
NN(
0, 
0, 
-1, 6.13646, 1, -1, 0.496671,-99) , 
3, 0.972869, 1, 0, 0.499393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470992,-99) , 
3, 9.31425, 1, 0, 0.498585,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.07927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.81029, 0, 1, 0.617677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481097,-99) , 
6, 0.00414307, 0, 0, 0.492588,-99) , 
6, 0.00790982, 0, 0, 0.509742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.233686,-99) , 
6, 0.023732, 1, 0, 0.50279,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0148205);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.494281, 0, 1, 0.515483,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5058, 1, 1, 0.518658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489756,-99) , 
5, -0.715015, 0, 0, 0.49976,-99) , 
0, 0.503804, 0, 0, 0.501496,-99) , 
2, -0.071862, 1, 0, 0.503828,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00694113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999819, 1, 1, 0.502237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485393,-99) , 
4, 0.999048, 0, 0, 0.501751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476592,-99) , 
0, 0.490472, 0, 0, 0.500691,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.010973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498159,-99) , 
0, 0.501265, 0, 0, 0.500842,-99) , 
5, 0.807231, 0, 0, 0.501824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483035,-99) , 
2, 0.00373592, 0, 0, 0.49285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475344,-99) , 
2, -0.0710758, 0, 0, 0.48907,-99) , 
0, 0.494281, 0, 0, 0.499526,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0108627);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.54986, 1, 1, 0.522197,-99) , 
NN(
NN(
0, 
0, 
-1, 0.816289, 0, 1, 0.503231,-99) , 
NN(
0, 
0, 
-1, -0.543715, 0, -1, 0.492231,-99) , 
0, 0.502852, 1, 0, 0.501754,-99) , 
5, -0.90488, 1, 0, 0.503525,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0103527);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498296,-99) , 
5, 0.331006, 0, 0, 0.50281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495861,-99) , 
5, 0.805918, 0, 0, 0.496793,-99) , 
0, 0.494508, 1, 0, 0.498047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483515,-99) , 
0, 0.505709, 1, 0, 0.497499,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.00942102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494282, 1, 1, 0.51687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499768,-99) , 
5, 0.330222, 1, 0, 0.511934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488527,-99) , 
5, 0.632909, 1, 0, 0.500062,-99) , 
5, 0.804798, 0, 0, 0.501206,-99) , 
2, -0.0714185, 1, 0, 0.502991,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0144221);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999049, 1, 1, 0.506512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491759,-99) , 
2, 0.0707112, 1, 0, 0.500904,-99) , 
NN(
0, 
0, 
-1, -0.684048, 1, -1, 0.483174,-99) , 
5, -0.336381, 0, 0, 0.493793,-99) , 
3, 4.71771, 1, 0, 0.50411,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0125708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000771974, 1, 1, 0.519702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498575,-99) , 
3, 4.69728, 0, 0, 0.501122,-99) , 
0, 0.504711, 0, 0, 0.502516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476064,-99) , 
5, 0.223527, 1, 0, 0.494554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464002,-99) , 
5, -0.62072, 0, 0, 0.484156,-99) , 
0, 0.492376, 0, 0, 0.500785,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0159424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0707011, 0, 1, 0.51996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476041,-99) , 
2, 0.0725855, 1, 0, 0.501603,-99) , 
0, 0.499043, 0, 0, 0.509164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49485,-99) , 
3, 2.47496, 0, 0, 0.498313,-99) , 
NN(
0, 
0, 
-1, -0.529005, 0, -1, 0.487773,-99) , 
3, 6.31775, 1, 0, 0.497338,-99) , 
5, 0.236529, 0, 0, 0.501335,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0176933);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.620886, 0, 1, 0.507406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480237,-99) , 
0, 0.499041, 1, 0, 0.49612,-99) , 
5, 0.671358, 1, 0, 0.503597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488776,-99) , 
4, 0.999995, 0, 0, 0.49713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466258,-99) , 
4, 0.999905, 0, 0, 0.495297,-99) , 
5, 0.141411, 0, 0, 0.498414,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.00945243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488742,-99) , 
5, -0.918476, 0, 0, 0.49959,-99) , 
NN(
0, 
0, 
-1, 0.503487, 0, -1, 0.491268,-99) , 
0, 0.500948, 1, 0, 0.497392,-99) , 
NN(
0, 
0, 
-1, 0.499994, 0, -1, 0.482473,-99) , 
5, 0.71128, 1, 0, 0.495849,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0119793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.95023, 0, 1, 0.51554,-99) , 
NN(
NN(
0, 
0, 
-1, 0.723836, 0, 1, 0.504957,-99) , 
NN(
0, 
0, 
-1, -0.453296, 0, -1, 0.494594,-99) , 
0, 0.496185, 0, 0, 0.50171,-99) , 
5, -0.904983, 1, 0, 0.502891,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0153254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498767,-99) , 
2, 0.03069, 0, 0, 0.501876,-99) , 
2, -0.214172, 1, 0, 0.503223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48556,-99) , 
3, 1.39181, 0, 0, 0.49538,-99) , 
NN(
0, 
0, 
-1, -0.0387824, 0, -1, 0.480668,-99) , 
3, 2.33827, 1, 0, 0.488819,-99) , 
5, -0.714641, 0, 0, 0.499862,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0222092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470534,-99) , 
5, 0.298731, 1, 0, 0.517215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492735,-99) , 
5, 0.363351, 0, 0, 0.501841,-99) , 
1, -0.00444513, 1, 0, 0.503679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493775,-99) , 
0, 0.496184, 1, 0, 0.498456,-99) , 
NN(
0, 
0, 
-1, -0.894316, 1, -1, 0.486499,-99) , 
5, -0.841471, 0, 0, 0.494648,-99) , 
5, -0.334177, 0, 0, 0.499764,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0119675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809895, 1, 1, 0.51089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475728,-99) , 
0, 0.505029, 1, 0, 0.502083,-99) , 
2, -0.0716069, 1, 0, 0.503531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474397,-99) , 
0, 0.489519, 0, 0, 0.502803,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0106192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492324,-99) , 
5, 0.861585, 0, 0, 0.513345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497247,-99) , 
5, 0.39333, 0, 0, 0.498677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469545,-99) , 
5, 0.721172, 1, 0, 0.497353,-99) , 
5, 0.807231, 0, 0, 0.498276,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.015024);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495871,-99) , 
4, 0.999991, 0, 0, 0.503143,-99) , 
4, 0.99981, 1, 0, 0.504318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483123,-99) , 
3, 4.73586, 1, 0, 0.499609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471443,-99) , 
2, -0.0720618, 0, 0, 0.495083,-99) , 
5, 0.426068, 1, 0, 0.50203,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.00937957);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499152,-99) , 
5, -0.904863, 1, 0, 0.500159,-99) , 
2, -0.214506, 1, 0, 0.500954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475548,-99) , 
5, 0.418793, 0, 0, 0.483477,-99) , 
1, 0.00381436, 0, 0, 0.489665,-99) , 
0, 0.502852, 1, 0, 0.499397,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0126561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.5811, 0, 1, 0.508604,-99) , 
NN(
0, 
0, 
-1, 0.538865, 1, -1, 0.494803,-99) , 
5, 0.615825, 0, 0, 0.496932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472358,-99) , 
3, 9.38081, 1, 0, 0.496254,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.00848383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498029,-99) , 
0, 0.503804, 0, 0, 0.499236,-99) , 
2, -0.215173, 1, 0, 0.5,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47012,-99) , 
4, 0.999048, 0, 0, 0.499089,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0109132);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.217511, 0, 1, 0.504493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476884,-99) , 
4, 0.999524, 0, 0, 0.503064,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0124198);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487608,-99) , 
2, 0.24445, 1, 0, 0.50859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494058,-99) , 
2, -0.0120658, 1, 0, 0.497186,-99) , 
2, 0.112303, 0, 0, 0.498366,-99) , 
2, -0.214172, 1, 0, 0.499168,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0129288);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.521796,-99) , 
NN(
NN(
0, 
0, 
-1, -0.075413, 1, 1, 0.5038,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.48465,-99) , 
5, 0.725702, 1, 0, 0.501788,-99) , 
5, -0.90488, 1, 0, 0.503517,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0098927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49798,-99) , 
5, -0.149554, 0, 0, 0.502316,-99) , 
0, 0.491242, 0, 0, 0.509625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51219,-99) , 
NN(
0, 
0, 
-1, 0.137467, 1, -1, 0.495976,-99) , 
4, 0.999048, 1, 0, 0.496454,-99) , 
0, 0.492376, 1, 0, 0.497755,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0156896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499106,-99) , 
3, 1.71058, 1, 0, 0.503891,-99) , 
2, -0.216687, 1, 0, 0.504977,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498101, 1, 1, 0.515556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481666,-99) , 
3, 4.67719, 0, 0, 0.486528,-99) , 
1, 0.00214907, 0, 0, 0.494007,-99) , 
5, 0.521139, 1, 0, 0.502761,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.00654955);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.71087, 0, 1, 0.502288,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.478842,-99) , 
4, 0.999524, 0, 0, 0.501062,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0167392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999998, 0, 1, 0.504731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486198,-99) , 
5, 0.807235, 0, 0, 0.494441,-99) , 
4, 0.999955, 0, 0, 0.502634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461241,-99) , 
4, 0.999048, 0, 0, 0.501412,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.00834661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498953,-99) , 
2, 0.193851, 0, 0, 0.500088,-99) , 
2, -0.213938, 1, 0, 0.501266,-99) , 
NN(
0, 
0, 
-1, -0.692228, 1, -1, 0.493407,-99) , 
5, -0.619805, 0, 0, 0.498936,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00893907);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497141,-99) , 
3, 5.37674, 0, 0, 0.498204,-99) , 
2, 0.215453, 0, 0, 0.498949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472621,-99) , 
3, 9.33163, 1, 0, 0.498201,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0170867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0359265, 1, 1, 0.507218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481695,-99) , 
5, -0.900409, 1, 0, 0.496805,-99) , 
5, -0.809885, 0, 0, 0.505445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488419,-99) , 
0, 0.495096, 1, 0, 0.491784,-99) , 
0, 0.501898, 0, 0, 0.49687,-99) , 
3, 4.7423, 1, 0, 0.503806,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0186556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49282,-99) , 
2, -0.129566, 1, 0, 0.494141,-99) , 
2, -0.21097, 1, 0, 0.494894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468004,-99) , 
4, 0.999524, 0, 0, 0.493499,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0170042);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497839,-99) , 
3, 1.66164, 1, 0, 0.505112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493246,-99) , 
3, 0.566321, 1, 0, 0.495838,-99) , 
0, 0.496186, 0, 0, 0.502143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478282,-99) , 
0, 0.500947, 1, 0, 0.497686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480056,-99) , 
5, -0.620775, 0, 0, 0.493124,-99) , 
3, 4.75378, 1, 0, 0.500452,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0154898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99981, 1, 1, 0.506787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489334,-99) , 
0, 0.497139, 1, 0, 0.495298,-99) , 
5, 0.457408, 1, 0, 0.502978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479517,-99) , 
2, -0.0842059, 0, 0, 0.499423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46594,-99) , 
5, -0.692239, 1, 0, 0.494548,-99) , 
5, -0.619805, 0, 0, 0.500511,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0154891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501493, 1, 1, 0.519958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489026,-99) , 
0, 0.493602, 1, 0, 0.49763,-99) , 
0, 0.499044, 0, 0, 0.507665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495415,-99) , 
3, 8.16, 0, 0, 0.496584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468711,-99) , 
4, 0.999524, 0, 0, 0.495543,-99) , 
2, 0.070994, 0, 0, 0.497415,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0131941);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49186,-99) , 
5, -0.96381, 0, 0, 0.51344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49795,-99) , 
0, 0.499995, 0, 0, 0.501195,-99) , 
5, -0.810017, 1, 0, 0.503299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479213,-99) , 
2, 0.214255, 1, 0, 0.50243,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00997051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499877,-99) , 
0, 0.497456, 1, 0, 0.502451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489433,-99) , 
2, 0.0713089, 0, 0, 0.494441,-99) , 
0, 0.494281, 0, 0, 0.501018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471987,-99) , 
4, 0.999048, 0, 0, 0.500118,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0117672);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.505062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467424,-99) , 
4, 0.999048, 0, 0, 0.503937,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0131467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498226, 0, 1, 0.504087,-99) , 
NN(
0, 
0, 
-1, 0.506117, 0, -1, 0.476784,-99) , 
0, 0.504757, 1, 0, 0.502438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448094,-99) , 
4, 0.999048, 0, 0, 0.500888,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0144431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.525574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498736,-99) , 
5, 0.833517, 1, 0, 0.514937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4984,-99) , 
5, -0.511058, 0, 0, 0.505564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490024,-99) , 
3, 2.28102, 0, 0, 0.495432,-99) , 
0, 0.497138, 1, 0, 0.499491,-99) , 
5, 0.711283, 0, 0, 0.501165,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0113037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490766,-99) , 
2, -0.068022, 0, 0, 0.507405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499057,-99) , 
3, 0.375813, 1, 0, 0.500726,-99) , 
3, 2.96, 0, 0, 0.502211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496579,-99) , 
5, -0.621269, 1, 0, 0.501779,-99) , 
NN(
0, 
0, 
-1, -0.431594, 0, -1, 0.486669,-99) , 
0, 0.498089, 0, 0, 0.495064,-99) , 
3, 4.71771, 1, 0, 0.500846,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.056631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0101681, 0, 1, 0.608405,-99) , 
NN(
0, 
0, 
-1, 0.00112981, 0, -1, 0.491094,-99) , 
6, 0.00790849, 0, 0, 0.507289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255158,-99) , 
6, 0.023732, 1, 0, 0.500885,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0224332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49725,-99) , 
3, 6.51054, 1, 0, 0.509276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480658,-99) , 
4, 0.999977, 1, 0, 0.498361,-99) , 
5, 0.421833, 1, 0, 0.506862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48545,-99) , 
4, 0.999524, 0, 0, 0.505757,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0161965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490107,-99) , 
4, 0.999977, 1, 0, 0.510182,-99) , 
4, 0.999524, 1, 0, 0.517055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496746,-99) , 
3, 1.31687, 0, 0, 0.503617,-99) , 
NN(
0, 
0, 
-1, 0.0716264, 1, -1, 0.491156,-99) , 
3, 5.19874, 1, 0, 0.501693,-99) , 
5, 0.712115, 0, 0, 0.503337,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0158102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493106,-99) , 
5, -0.810508, 0, 0, 0.510167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490727,-99) , 
0, 0.499431, 1, 0, 0.502497,-99) , 
0, 0.501401, 0, 0, 0.504016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481492,-99) , 
0, 0.505709, 1, 0, 0.50318,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.011275);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.861585, 1, 1, 0.517419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487879,-99) , 
3, 5.79356, 1, 0, 0.501807,-99) , 
3, 9.30072, 0, 0, 0.502571,-99) , 
5, 0.807232, 0, 0, 0.503417,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0122257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496999,-99) , 
5, 0.341012, 1, 0, 0.502652,-99) , 
NN(
0, 
0, 
-1, -0.0654293, 0, -1, 0.493597,-99) , 
5, -0.715538, 0, 0, 0.500567,-99) , 
NN(
0, 
0, 
-1, -0.000703756, 1, -1, 0.481934,-99) , 
0, 0.491424, 0, 0, 0.499365,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0139019);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.518963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48604,-99) , 
5, 0.842172, 1, 0, 0.502795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489325,-99) , 
0, 0.493328, 1, 0, 0.493233,-99) , 
5, -0.63311, 0, 0, 0.50067,-99) , 
5, -0.904878, 1, 0, 0.502256,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0123455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814288, 1, 1, 0.503929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488693,-99) , 
0, 0.501897, 0, 0, 0.493308,-99) , 
3, 4.56386, 1, 0, 0.501779,-99) , 
NN(
0, 
0, 
-1, 2.51237, 1, -1, 0.483883,-99) , 
5, -0.90488, 0, 0, 0.500314,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0142261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495808,-99) , 
0, 0.499995, 1, 0, 0.503861,-99) , 
5, 0.615257, 0, 0, 0.508674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49958,-99) , 
5, -0.714769, 1, 0, 0.504193,-99) , 
NN(
0, 
0, 
-1, -0.430153, 1, -1, 0.493264,-99) , 
0, 0.495233, 1, 0, 0.495862,-99) , 
2, -0.0716195, 1, 0, 0.49801,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0194613);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496965,-99) , 
2, -0.0111247, 1, 0, 0.509019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497389,-99) , 
5, 0.61621, 0, 0, 0.500205,-99) , 
2, 0.00312428, 1, 0, 0.50433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487163,-99) , 
3, 1.90397, 1, 0, 0.499391,-99) , 
NN(
0, 
0, 
-1, 0.137517, 0, -1, 0.479017,-99) , 
3, 4.77444, 1, 0, 0.492608,-99) , 
2, -0.0716846, 0, 0, 0.502416,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.010045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497523,-99) , 
2, -0.0729246, 1, 0, 0.499051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46621,-99) , 
4, 0.999683, 0, 0, 0.497782,-99) , 
4, 0.999048, 1, 0, 0.498572,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0157561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489245,-99) , 
0, 0.502716, 1, 0, 0.515747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494974,-99) , 
5, 0.0190639, 1, 0, 0.505232,-99) , 
5, 0.426766, 0, 0, 0.507718,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497107,-99) , 
5, -0.724528, 1, 0, 0.499656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481004,-99) , 
5, -0.905152, 0, 0, 0.498209,-99) , 
0, 0.499043, 0, 0, 0.50224,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0125721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.80723, 0, 1, 0.505785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481487,-99) , 
2, -0.214437, 0, 0, 0.50483,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0145448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.619803, 0, 1, 0.506051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482959,-99) , 
5, -0.4314, 0, 0, 0.493781,-99) , 
0, 0.492694, 0, 0, 0.504287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48497,-99) , 
0, 0.504122, 0, 0, 0.49013,-99) , 
5, -0.810394, 1, 0, 0.492952,-99) , 
0, 0.500947, 1, 0, 0.50137,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.00812702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491611,-99) , 
2, 0.0699915, 1, 0, 0.50029,-99) , 
0, 0.490472, 1, 0, 0.501174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474397,-99) , 
4, 0.999048, 0, 0, 0.500369,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.00607734);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499348,-99) , 
5, 0.709809, 0, 0, 0.500269,-99) , 
4, 0.999048, 1, 0, 0.501024,-99) , 
2, 0.214001, 0, 0, 0.501929,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0705675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00999363, 0, 1, 0.589436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475741,-99) , 
5, 0.0463086, 0, 0, 0.491059,-99) , 
6, 0.00676987, 0, 0, 0.508977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.250339,-99) , 
6, 0.0236981, 1, 0, 0.502475,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0183872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498334,-99) , 
5, -0.790349, 0, 0, 0.505132,-99) , 
5, -0.945643, 1, 0, 0.506074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513422,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.486822,-99) , 
4, 0.999524, 1, 0, 0.490121,-99) , 
5, 0.141411, 1, 0, 0.500096,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0105015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495816,-99) , 
0, 0.499995, 0, 0, 0.498457,-99) , 
2, 0.132396, 0, 0, 0.499358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47923,-99) , 
2, 0.214015, 1, 0, 0.498624,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0238312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493438,-99) , 
3, 1.76722, 0, 0, 0.506495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493061,-99) , 
0, 0.504893, 0, 0, 0.495474,-99) , 
0, 0.498091, 1, 0, 0.500829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476007,-99) , 
5, 0.855118, 1, 0, 0.491457,-99) , 
NN(
0, 
0, 
-1, 0.694645, 1, -1, 0.472979,-99) , 
5, 0.798175, 0, 0, 0.480204,-99) , 
5, 0.616997, 1, 0, 0.497656,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0149419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.59871, 0, 1, 0.515956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496003,-99) , 
5, -0.728231, 0, 0, 0.50161,-99) , 
3, 2.35074, 1, 0, 0.509569,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.516785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49636,-99) , 
3, 9.14066, 0, 0, 0.497525,-99) , 
4, 0.999524, 1, 0, 0.498965,-99) , 
5, -0.619524, 1, 0, 0.502126,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0215719);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495143,-99) , 
4, 0.999986, 0, 0, 0.508614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481508,-99) , 
4, 0.999905, 0, 0, 0.50707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493298,-99) , 
5, 0.814971, 0, 0, 0.49622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472804,-99) , 
0, 0.493329, 0, 0, 0.493506,-99) , 
5, 0.0455337, 1, 0, 0.501517,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0151048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496458,-99) , 
0, 0.49351, 0, 0, 0.506895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49782,-99) , 
2, -0.0783523, 1, 0, 0.500469,-99) , 
0, 0.499995, 1, 0, 0.504784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49402,-99) , 
3, 2.71661, 1, 0, 0.501667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469462,-99) , 
0, 0.498089, 0, 0, 0.486343,-99) , 
5, 0.0430149, 1, 0, 0.495314,-99) , 
2, 0.0712684, 1, 0, 0.503371,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00709861);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526778,-99) , 
NN(
NN(
0, 
0, 
-1, 0.194436, 0, 1, 0.501392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471246,-99) , 
2, -0.213118, 0, 0, 0.500258,-99) , 
0, 0.490472, 1, 0, 0.501487,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0176103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.89125, 1, 1, 0.517878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481037,-99) , 
2, 0.139838, 0, 0, 0.49601,-99) , 
5, 0.0457845, 1, 0, 0.508836,-99) , 
NN(
NN(
0, 
0, 
-1, 0.766475, 1, 1, 0.513961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493564,-99) , 
3, 6.89156, 0, 0, 0.494861,-99) , 
5, 0.712114, 0, 0, 0.496877,-99) , 
2, 0.0718538, 0, 0, 0.498685,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.013928);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491165,-99) , 
0, 0.502716, 1, 0, 0.504718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495237,-99) , 
0, 0.500267, 0, 0, 0.498602,-99) , 
5, -0.144561, 1, 0, 0.501695,-99) , 
0, 0.490472, 1, 0, 0.502383,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0175086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493506,-99) , 
3, 4.07152, 1, 0, 0.509286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483821,-99) , 
0, 0.493329, 0, 0, 0.50004,-99) , 
5, -0.0352333, 1, 0, 0.504348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483853,-99) , 
0, 0.5019, 0, 0, 0.489236,-99) , 
3, 1.10862, 1, 0, 0.496125,-99) , 
5, -0.809761, 0, 0, 0.503001,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0168963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.173129, 1, 1, 0.507069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480621,-99) , 
4, 0.999977, 0, 0, 0.500742,-99) , 
5, -0.239056, 0, 0, 0.503936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466472,-99) , 
4, 0.999524, 0, 0, 0.502037,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0101725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.375891, 0, 1, 0.509274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49811,-99) , 
3, 6.30954, 0, 0, 0.499632,-99) , 
0, 0.494281, 1, 0, 0.501423,-99) , 
NN(
0, 
0, 
-1, 0.869284, 0, -1, 0.479311,-99) , 
5, 0.805918, 1, 0, 0.500205,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0180797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999918, 1, 1, 0.506143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475091,-99) , 
4, 0.99981, 0, 0, 0.504993,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488644,-99) , 
0, 0.494283, 1, 0, 0.493113,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.475889,-99) , 
5, 0.804801, 1, 0, 0.489794,-99) , 
5, 0.329854, 1, 0, 0.500532,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0135986);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494295,-99) , 
5, -0.938559, 0, 0, 0.5078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496828,-99) , 
0, 0.493329, 1, 0, 0.498008,-99) , 
5, -0.741949, 1, 0, 0.500301,-99) , 
NN(
0, 
0, 
-1, 0.869732, 0, -1, 0.463886,-99) , 
5, 0.806351, 1, 0, 0.49836,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0137804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495168,-99) , 
3, 1.94563, 1, 0, 0.500898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489465,-99) , 
3, 4.79159, 0, 0, 0.492777,-99) , 
5, 0.61482, 1, 0, 0.499631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483666,-99) , 
0, 0.505709, 1, 0, 0.499026,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0088658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.766475, 1, 1, 0.51828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48919,-99) , 
4, 0.999932, 0, 0, 0.499989,-99) , 
5, 0.712113, 0, 0, 0.501531,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.482991,-99) , 
4, 0.999524, 0, 0, 0.500573,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0134464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498163,-99) , 
5, -0.715556, 1, 0, 0.510771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478289,-99) , 
0, 0.504349, 1, 0, 0.498634,-99) , 
2, -0.0713091, 1, 0, 0.500563,-99) , 
NN(
NN(
0, 
0, 
-1, 0.493737, 1, 1, 0.51118,-99) , 
NN(
0, 
0, 
-1, 2.4433, 1, -1, 0.488761,-99) , 
3, 4.57839, 0, 0, 0.493082,-99) , 
0, 0.496186, 0, 0, 0.498212,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0156069);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.527064, 0, 1, 0.508385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49022,-99) , 
5, 0.710877, 1, 0, 0.500481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490161,-99) , 
3, 1.22071, 1, 0, 0.49422,-99) , 
5, 0.330683, 0, 0, 0.496105,-99) , 
0, 0.504757, 0, 0, 0.496916,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0120287);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497838,-99) , 
5, -0.0533391, 1, 0, 0.502174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492049,-99) , 
2, -0.0694266, 1, 0, 0.494709,-99) , 
0, 0.499995, 1, 0, 0.499663,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.480658,-99) , 
5, 0.80723, 1, 0, 0.498638,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0380665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489025,-99) , 
6, 0.0051221, 0, 0, 0.500762,-99) , 
1, -0.0108945, 1, 0, 0.502417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458038,-99) , 
1, 0.0134438, 1, 0, 0.501048,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0181594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505545,-99) , 
NN(
0, 
0, 
-1, 0.652568, 1, -1, 0.489211,-99) , 
3, 4.74803, 1, 0, 0.502332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506728,-99) , 
NN(
0, 
0, 
-1, -0.67423, 1, -1, 0.486195,-99) , 
0, 0.503804, 0, 0, 0.48866,-99) , 
5, -0.429911, 0, 0, 0.496969,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0156442);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.533895,-99) , 
NN(
NN(
0, 
0, 
-1, 6.5686, 0, 1, 0.505357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480905,-99) , 
3, 3.50728, 1, 0, 0.496078,-99) , 
5, -0.312032, 0, 0, 0.501026,-99) , 
5, 0.805918, 0, 0, 0.50299,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0176192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.588137, 1, 1, 0.520713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495175,-99) , 
1, 0.00253899, 0, 0, 0.501753,-99) , 
5, 0.425226, 0, 0, 0.506218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484607,-99) , 
5, -0.431262, 0, 0, 0.50509,-99) , 
NN(
0, 
0, 
-1, 0.805921, 1, -1, 0.494371,-99) , 
3, 4.61524, 0, 0, 0.496372,-99) , 
0, 0.499995, 0, 0, 0.499705,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0101994);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52425,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501951,-99) , 
NN(
0, 
0, 
-1, -0.239049, 0, -1, 0.492614,-99) , 
0, 0.499043, 1, 0, 0.49804,-99) , 
2, -0.213882, 1, 0, 0.499181,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0176847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501898, 0, 1, 0.50876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489615,-99) , 
0, 0.495233, 1, 0, 0.494176,-99) , 
3, 1.83421, 0, 0, 0.502191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496022,-99) , 
4, 0.999524, 1, 0, 0.499023,-99) , 
NN(
0, 
0, 
-1, 0.40614, 1, -1, 0.484283,-99) , 
0, 0.500948, 1, 0, 0.495618,-99) , 
5, 0.0463044, 1, 0, 0.49948,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.012421);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497693,-99) , 
0, 0.502852, 0, 0, 0.5,-99) , 
2, -0.210441, 1, 0, 0.501743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471402,-99) , 
3, 9.33743, 1, 0, 0.500874,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0116393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496421,-99) , 
0, 0.499995, 0, 0, 0.499725,-99) , 
2, 0.214301, 0, 0, 0.500749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477401,-99) , 
3, 9.38661, 1, 0, 0.500101,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0118519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.616999, 0, 1, 0.503556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48406,-99) , 
0, 0.491696, 1, 0, 0.494574,-99) , 
0, 0.493329, 0, 0, 0.501932,-99) , 
NN(
NN(
0, 
0, 
-1, -0.139707, 0, 1, 0.507683,-99) , 
NN(
0, 
0, 
-1, 0.517099, 1, -1, 0.489229,-99) , 
2, -0.0717669, 1, 0, 0.492934,-99) , 
0, 0.500947, 1, 0, 0.499617,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00636767);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520527,-99) , 
NN(
NN(
0, 
0, 
-1, 3.7641, 0, 1, 0.502104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48723,-99) , 
3, 7.08584, 1, 0, 0.501394,-99) , 
3, 9.26574, 0, 0, 0.502002,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.00928447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499698,-99) , 
0, 0.493736, 1, 0, 0.506307,-99) , 
0, 0.501899, 0, 0, 0.511784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499104,-99) , 
4, 0.999819, 1, 0, 0.500461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468076,-99) , 
4, 0.999524, 0, 0, 0.499255,-99) , 
2, 0.0711262, 0, 0, 0.501181,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0170832);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489807,-99) , 
2, 0.0306709, 1, 0, 0.507068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494864,-99) , 
2, 0.0307957, 0, 0, 0.49842,-99) , 
5, 0.330997, 0, 0, 0.500956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474784,-99) , 
2, -0.214037, 0, 0, 0.499902,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.00844097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487197,-99) , 
5, 0.80723, 1, 0, 0.501327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482514,-99) , 
2, -0.214859, 0, 0, 0.500638,-99) , 
NN(
0, 
0, 
-1, 0.489973, 0, -1, 0.481525,-99) , 
0, 0.491424, 0, 0, 0.499383,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.017218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.959271, 0, 1, 0.523899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487166,-99) , 
0, 0.502852, 1, 0, 0.502309,-99) , 
5, -0.904992, 1, 0, 0.50413,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489884,-99) , 
0, 0.491696, 1, 0, 0.498043,-99) , 
NN(
0, 
0, 
-1, 2.4333, 1, -1, 0.479341,-99) , 
5, -0.335976, 0, 0, 0.489012,-99) , 
0, 0.493329, 0, 0, 0.502139,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0139598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491696, 1, 1, 0.520745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49087,-99) , 
5, -0.819317, 1, 0, 0.501461,-99) , 
5, -0.241121, 0, 0, 0.510746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497149,-99) , 
0, 0.505573, 0, 0, 0.498165,-99) , 
NN(
0, 
0, 
-1, 0.49877, 1, -1, 0.484492,-99) , 
5, 0.616999, 1, 0, 0.496045,-99) , 
0, 0.493329, 1, 0, 0.498061,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0102113);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499133,-99) , 
5, -0.793078, 1, 0, 0.501637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476997,-99) , 
5, -0.932761, 1, 0, 0.491777,-99) , 
5, -0.891372, 0, 0, 0.500157,-99) , 
5, 0.140581, 0, 0, 0.502663,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00927839);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472724,-99) , 
4, 0.999796, 0, 0, 0.501609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483847,-99) , 
4, 0.999524, 0, 0, 0.500971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469643,-99) , 
5, 0.870655, 0, 0, 0.485137,-99) , 
5, 0.80723, 1, 0, 0.500105,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.00482858);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510622,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.498265,-99) , 
4, 0.999524, 1, 0, 0.498814,-99) , 
2, -0.213406, 1, 0, 0.49924,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0102771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.814538, 1, 1, 0.503021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478981,-99) , 
0, 0.499041, 0, 0, 0.492635,-99) , 
5, -0.905003, 0, 0, 0.502157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48757,-99) , 
0, 0.495598, 0, 0, 0.496581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467052,-99) , 
0, 0.502853, 1, 0, 0.491194,-99) , 
2, 0.0711262, 1, 0, 0.500521,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0164518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.388848, 0, 1, 0.506105,-99) , 
NN(
0, 
0, 
-1, 0.499042, 1, -1, 0.492285,-99) , 
3, 5.50941, 1, 0, 0.504387,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489652,-99) , 
0, 0.496186, 0, 0, 0.500667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479466,-99) , 
5, 0.872326, 0, 0, 0.487627,-99) , 
5, 0.670542, 1, 0, 0.497296,-99) , 
5, -0.144357, 1, 0, 0.500935,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0129883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496136,-99) , 
0, 0.500947, 0, 0, 0.49882,-99) , 
4, 0.999048, 1, 0, 0.500214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471511,-99) , 
3, 9.0147, 1, 0, 0.499271,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.011667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499512,-99) , 
5, 0.444451, 1, 0, 0.505842,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.496324,-99) , 
5, -0.140708, 0, 0, 0.500682,-99) , 
NN(
0, 
0, 
-1, 0.867837, 1, -1, 0.477236,-99) , 
5, 0.804512, 1, 0, 0.499404,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00578152);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499806,-99) , 
3, 9.12028, 0, 0, 0.500514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472931,-99) , 
0, 0.505709, 1, 0, 0.499522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462734,-99) , 
4, 0.999048, 0, 0, 0.498423,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.00825382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498863,-99) , 
3, 5.78087, 0, 0, 0.500453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471535,-99) , 
3, 7.1188, 1, 0, 0.499159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483574,-99) , 
3, 9.31425, 1, 0, 0.498699,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0141093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490022,-99) , 
4, 0.999864, 0, 0, 0.504063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490955,-99) , 
2, -0.0746203, 1, 0, 0.493807,-99) , 
0, 0.500948, 1, 0, 0.501427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476106,-99) , 
4, 0.999048, 0, 0, 0.500663,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.00763269);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532678,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483074,-99) , 
2, 0.193863, 1, 0, 0.500986,-99) , 
2, -0.214257, 1, 0, 0.502375,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.00792162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.491424, 1, 1, 0.502997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463859,-99) , 
4, 0.999048, 0, 0, 0.50186,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0110468);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.810253, 1, 1, 0.51488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520809,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.496846,-99) , 
4, 0.999524, 1, 0, 0.498042,-99) , 
0, 0.493328, 1, 0, 0.500352,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.00987517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498179, 1, 1, 0.512354,-99) , 
NN(
0, 
0, 
-1, 0.999525, 0, -1, 0.497265,-99) , 
5, 0.806351, 0, 0, 0.498132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479368,-99) , 
5, -0.675188, 0, 0, 0.497006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467084,-99) , 
5, 0.136818, 1, 0, 0.487908,-99) , 
0, 0.492376, 0, 0, 0.497147,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.00853438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499688,-99) , 
1, -0.00444513, 1, 0, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0.703858, 0, -1, 0.495488,-99) , 
5, -0.569694, 0, 0, 0.499946,-99) , 
NN(
0, 
0, 
-1, 0.870651, 0, -1, 0.480671,-99) , 
5, 0.807232, 1, 0, 0.498893,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0130081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.936692, 0, 1, 0.516724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496717,-99) , 
5, -0.452763, 0, 0, 0.502935,-99) , 
5, -0.905023, 1, 0, 0.504108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475518,-99) , 
0, 0.489519, 0, 0, 0.503384,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.00779584);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.707462, 1, 1, 0.516993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492231,-99) , 
4, 0.999955, 0, 0, 0.49984,-99) , 
2, 0.213037, 0, 0, 0.500536,-99) , 
4, 0.999524, 1, 0, 0.501446,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0103334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496185, 1, 1, 0.514175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476038,-99) , 
3, 7.17178, 1, 0, 0.500765,-99) , 
5, 0.61621, 0, 0, 0.502812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476907,-99) , 
3, 9.38081, 1, 0, 0.50209,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0100937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.59442, 0, 1, 0.502821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467315,-99) , 
0, 0.505709, 1, 0, 0.501591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472555,-99) , 
4, 0.999524, 0, 0, 0.500125,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.012891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499046,-99) , 
5, -0.566371, 0, 0, 0.502121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493263,-99) , 
4, 0.999592, 1, 0, 0.494446,-99) , 
5, -0.430833, 1, 0, 0.497542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474807,-99) , 
4, 0.999048, 0, 0, 0.496858,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0190474);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49433,-99) , 
4, 0.999998, 0, 0, 0.500592,-99) , 
NN(
0, 
0, 
-1, -0.0666531, 0, -1, 0.487747,-99) , 
4, 0.999955, 0, 0, 0.498,-99) , 
4, 0.999048, 1, 0, 0.499005,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0123893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497292,-99) , 
0, 0.501083, 0, 0, 0.500218,-99) , 
NN(
0, 
0, 
-1, -0.93662, 1, -1, 0.482579,-99) , 
5, -0.904927, 0, 0, 0.498789,-99) , 
0, 0.490472, 1, 0, 0.499984,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0112066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49328,-99) , 
2, -0.0721296, 0, 0, 0.509797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499881,-99) , 
5, -0.0633133, 1, 0, 0.502083,-99) , 
0, 0.495234, 1, 0, 0.50394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515419,-99) , 
NN(
0, 
0, 
-1, 0.495279, 0, -1, 0.492207,-99) , 
0, 0.492376, 1, 0, 0.494958,-99) , 
5, -0.714772, 0, 0, 0.501833,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0174087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215811, 1, 1, 0.508325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49042,-99) , 
4, 0.999524, 0, 0, 0.507679,-99) , 
NN(
0, 
0, 
-1, 0.868125, 0, -1, 0.48557,-99) , 
5, 0.804798, 1, 0, 0.506463,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00810009);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524412,-99) , 
NN(
NN(
0, 
0, 
-1, -0.782587, 0, 1, 0.506449,-99) , 
NN(
0, 
0, 
-1, 0.834407, 1, -1, 0.4978,-99) , 
5, -0.714641, 1, 0, 0.499893,-99) , 
2, 0.214015, 0, 0, 0.500844,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.00909937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.918524, 0, 1, 0.517141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470473,-99) , 
5, -0.90946, 1, 0, 0.489588,-99) , 
0, 0.499995, 1, 0, 0.507451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499568,-99) , 
2, -0.133021, 1, 0, 0.500465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484631,-99) , 
2, -0.21464, 0, 0, 0.499788,-99) , 
5, -0.809897, 1, 0, 0.501075,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0102671);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499405, 0, 1, 0.503209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48384,-99) , 
5, 0.268882, 1, 0, 0.496108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465136,-99) , 
5, -0.905157, 0, 0, 0.493407,-99) , 
0, 0.499995, 1, 0, 0.499944,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0174398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.608534, 0, 1, 0.51179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48672,-99) , 
3, 9.11911, 1, 0, 0.507704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490528,-99) , 
4, 0.999977, 1, 0, 0.494176,-99) , 
4, 0.999524, 1, 0, 0.495463,-99) , 
3, 4.72522, 0, 0, 0.497819,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00676049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.212889, 1, 1, 0.50117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483721,-99) , 
0, 0.500265, 0, 0, 0.492344,-99) , 
5, 0.71128, 1, 0, 0.500261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48033,-99) , 
0, 0.490472, 0, 0, 0.499391,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0159847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496844,-99) , 
2, 0.078072, 1, 0, 0.512141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479301,-99) , 
0, 0.492376, 0, 0, 0.499922,-99) , 
5, 0.42462, 0, 0, 0.503022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483916,-99) , 
3, 3.03632, 1, 0, 0.495938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471725,-99) , 
5, 0.517262, 1, 0, 0.490968,-99) , 
2, -0.0715418, 0, 0, 0.501049,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0132835);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49722,-99) , 
0, 0.490472, 1, 0, 0.498221,-99) , 
NN(
0, 
0, 
-1, -0.0308329, 0, -1, 0.487411,-99) , 
5, 0.330677, 1, 0, 0.495133,-99) , 
2, 0.214015, 0, 0, 0.496092,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0137626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495234, 1, 1, 0.513426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491671,-99) , 
2, 0.0713805, 1, 0, 0.510126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493204,-99) , 
3, 1.7777, 0, 0, 0.499082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476678,-99) , 
4, 0.999714, 0, 0, 0.498366,-99) , 
5, 0.521879, 0, 0, 0.500788,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0159531);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498595,-99) , 
3, 1.96619, 1, 0, 0.516839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496799,-99) , 
3, 1.38394, 1, 0, 0.500366,-99) , 
5, 0.385978, 0, 0, 0.50261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513012,-99) , 
NN(
0, 
0, 
-1, 0.833179, 0, -1, 0.482292,-99) , 
1, 0.00202056, 0, 0, 0.490703,-99) , 
5, 0.616996, 1, 0, 0.500791,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.00817324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999806, 1, 1, 0.502946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484759,-99) , 
4, 0.999592, 0, 0, 0.502445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469525,-99) , 
4, 0.999048, 0, 0, 0.501474,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0169473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.818896, 0, 1, 0.520301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49833,-99) , 
5, 0.611692, 0, 0, 0.503556,-99) , 
5, -0.619686, 1, 0, 0.508626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496419,-99) , 
5, 0.712116, 0, 0, 0.498193,-99) , 
NN(
0, 
0, 
-1, -0.14754, 1, -1, 0.478498,-99) , 
0, 0.498136, 0, 0, 0.495254,-99) , 
0, 0.497138, 1, 0, 0.500681,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.00867386);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.523467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498342,-99) , 
4, 0.999819, 1, 0, 0.499591,-99) , 
3, 8.85038, 0, 0, 0.500183,-99) , 
4, 0.999524, 1, 0, 0.501469,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0119603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475258,-99) , 
0, 0.505709, 1, 0, 0.502488,-99) , 
4, 0.999048, 1, 0, 0.503455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470248,-99) , 
2, 0.214846, 1, 0, 0.502286,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.00742734);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214257, 1, 1, 0.502775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49004,-99) , 
0, 0.504893, 0, 0, 0.494479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475527,-99) , 
5, -0.810829, 0, 0, 0.490832,-99) , 
0, 0.502852, 1, 0, 0.501121,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0125919);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495713,-99) , 
3, 9.08466, 0, 0, 0.496574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470243,-99) , 
4, 0.999637, 0, 0, 0.495726,-99) , 
4, 0.999048, 1, 0, 0.496664,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0159644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0716351, 0, 1, 0.509377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487234,-99) , 
0, 0.502561, 0, 0, 0.49982,-99) , 
0, 0.501718, 1, 0, 0.505554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492719,-99) , 
5, 0.504173, 1, 0, 0.502085,-99) , 
NN(
0, 
0, 
-1, -0.837399, 0, -1, 0.492517,-99) , 
5, -0.146282, 0, 0, 0.497268,-99) , 
0, 0.49809, 0, 0, 0.501538,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0133932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486254,-99) , 
5, 0.517262, 1, 0, 0.511807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477504,-99) , 
2, 0.228535, 1, 0, 0.499846,-99) , 
2, -0.070453, 1, 0, 0.501755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479668,-99) , 
2, -0.0352441, 1, 0, 0.492357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469432,-99) , 
5, 0.0412531, 1, 0, 0.484472,-99) , 
0, 0.502852, 1, 0, 0.499364,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0155058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523616,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471157,-99) , 
5, 0.859573, 1, 0, 0.505221,-99) , 
NN(
0, 
0, 
-1, -0.132877, 0, -1, 0.494501,-99) , 
5, 0.520233, 0, 0, 0.496662,-99) , 
2, -0.214495, 1, 0, 0.497831,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.00767716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502263, 0, 1, 0.501854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468601,-99) , 
5, -0.454705, 0, 0, 0.489953,-99) , 
0, 0.503805, 1, 0, 0.500742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473633,-99) , 
3, 2.05965, 0, 0, 0.48772,-99) , 
5, -0.905019, 0, 0, 0.499671,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00713674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498524,-99) , 
0, 0.490472, 1, 0, 0.499243,-99) , 
4, 0.999048, 1, 0, 0.500356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47964,-99) , 
3, 9.38661, 1, 0, 0.499789,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.01625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481204,-99) , 
5, 0.482323, 1, 0, 0.518029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497739,-99) , 
4, 0.999048, 1, 0, 0.499373,-99) , 
1, -0.00321564, 1, 0, 0.503059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490288,-99) , 
5, -0.948376, 0, 0, 0.502082,-99) , 
NN(
0, 
0, 
-1, 4.85941, 1, -1, 0.492067,-99) , 
5, -0.819315, 1, 0, 0.496683,-99) , 
5, -0.525694, 0, 0, 0.500868,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0137965);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.868619, 0, 1, 0.526344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49608,-99) , 
3, 5.78362, 0, 0, 0.498324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4803,-99) , 
4, 0.999524, 0, 0, 0.497685,-99) , 
5, 0.805276, 0, 0, 0.499381,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0119254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481526,-99) , 
3, 9.31425, 1, 0, 0.504555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484455,-99) , 
0, 0.505709, 1, 0, 0.5038,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0110135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0546222, 0, 1, 0.503902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488112,-99) , 
5, -0.398201, 0, 0, 0.496564,-99) , 
3, 3.32569, 1, 0, 0.50156,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.481312,-99) , 
5, 0.805278, 1, 0, 0.500437,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.00787358);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499319,-99) , 
0, 0.496186, 1, 0, 0.50173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482514,-99) , 
4, 0.999524, 0, 0, 0.500911,-99) , 
2, -0.213469, 1, 0, 0.501653,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0121925);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49761,-99) , 
2, -0.0834825, 1, 0, 0.500118,-99) , 
NN(
0, 
0, 
-1, -0.526953, 0, -1, 0.490918,-99) , 
4, 0.999955, 0, 0, 0.498242,-99) , 
4, 0.999048, 1, 0, 0.499215,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_6_8_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_6_8_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_6_8_noNsigma *ReadBDT_maker_LHC19c2b_6_8_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_6_8_noNsigma(theInpVar);
  }
}
