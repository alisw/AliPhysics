#include "LHC19c2b_TMVAClassification_BDT_8_12.class.h"

double ReadBDT_LHC19c2b_8_12::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_8_12::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.63385132983476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.775372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282072,-99) , 
8, 2.29759, 0, 0, 0.748258,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.288695,-99) , 
12, 0.466863, 1, 0, 0.626935,-99) , 
NN(
0, 
0, 
-1, 0.436862, 1, -1, 0.152356,-99) , 
6, 0.714204, 1, 0, 0.501356,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.491681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.582945, 1, 1, 0.703362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.213393,-99) , 
9, -951.286, 0, 0, 0.326867,-99) , 
11, -1.41985, 1, 0, 0.623636,-99) , 
NN(
0, 
0, 
-1, 0.721651, 1, -1, 0.224716,-99) , 
6, 0.618962, 1, 0, 0.498077,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.487804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.741152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420033,-99) , 
10, 1.57428, 1, 0, 0.703218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257005,-99) , 
9, -951.286, 0, 0, 0.370055,-99) , 
3, 2.65634, 0, 0, 0.597427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.180134,-99) , 
5, 0.999524, 0, 0, 0.484319,-99) , 
NN(
0, 
0, 
-1, 0.280437, 1, -1, 0.12718,-99) , 
10, 0.716834, 1, 0, 0.294155,-99) , 
6, 0.523781, 1, 0, 0.487052,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.370748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714867, 1, 1, 0.666768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307218,-99) , 
9, -951.286, 0, 0, 0.391944,-99) , 
8, 3.11797, 0, 0, 0.569568,-99) , 
NN(
0, 
0, 
-1, -0.196912, 1, -1, 0.290211,-99) , 
6, 0.523779, 1, 0, 0.46777,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.335547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328911,-99) , 
6, 0.809428, 1, 0, 0.568642,-99) , 
NN(
0, 
0, 
-1, 1.58339, 0, -1, 0.320352,-99) , 
3, 2.05359, 0, 0, 0.535123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.236507,-99) , 
12, 1.82903, 1, 0, 0.44523,-99) , 
NN(
0, 
0, 
-1, 0.819863, 1, -1, 0.142682,-99) , 
6, 0.333502, 1, 0, 0.255102,-99) , 
10, 1.28663, 1, 0, 0.469113,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.238852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456264,-99) , 
12, -0.810719, 1, 0, 0.523543,-99) , 
NN(
0, 
0, 
-1, 0.292126, 1, -1, 0.183575,-99) , 
5, 0.999524, 0, 0, 0.498565,-99) , 
NN(
0, 
0, 
-1, 0.428278, 1, -1, 0.181407,-99) , 
10, 1.85749, 1, 0, 0.459776,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.240156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407355,-99) , 
5, 0.999977, 0, 0, 0.526548,-99) , 
NN(
0, 
0, 
-1, 0.973881, 1, -1, 0.200301,-99) , 
5, 0.999524, 0, 0, 0.501525,-99) , 
NN(
0, 
0, 
-1, 0.523146, 1, -1, 0.131785,-99) , 
10, 2.14264, 1, 0, 0.470598,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.158672);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.199854,-99) , 
3, 1.55629, 0, 0, 0.511052,-99) , 
NN(
0, 
0, 
-1, 0.998621, 0, -1, 0.236785,-99) , 
5, 0.999525, 0, 0, 0.491869,-99) , 
NN(
0, 
0, 
-1, 0.428657, 1, -1, 0.2122,-99) , 
10, 1.857, 1, 0, 0.458163,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.120391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.223168,-99) , 
3, 1.57068, 0, 0, 0.494963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.182018,-99) , 
5, 0.999048, 0, 0, 0.48065,-99) , 
NN(
0, 
0, 
-1, 0.428651, 1, -1, 0.214926,-99) , 
10, 1.85712, 1, 0, 0.450285,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.204983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393613,-99) , 
10, -0.00285939, 1, 0, 0.557631,-99) , 
NN(
0, 
0, 
-1, 2.42825, 1, -1, 0.433043,-99) , 
12, -1.11662, 1, 0, 0.471398,-99) , 
NN(
0, 
0, 
-1, 0.0168109, 1, -1, 0.258597,-99) , 
6, 0.809489, 1, 0, 0.436546,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.235229);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48488,-99) , 
6, 0.180082, 1, 0, 0.594377,-99) , 
NN(
0, 
0, 
-1, 1.50941, 0, -1, 0.419531,-99) , 
3, 2.92757, 0, 0, 0.523699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304516,-99) , 
3, 7.80896, 0, 0, 0.406636,-99) , 
NN(
0, 
0, 
-1, 0.78206, 1, -1, 0.0967495,-99) , 
12, 0.595096, 1, 0, 0.358304,-99) , 
6, 0.428543, 1, 0, 0.457714,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.209688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.794714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268428,-99) , 
3, 1.6072, 0, 0, 0.509467,-99) , 
3, 6.65291, 0, 0, 0.527336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380353,-99) , 
3, 8.32895, 0, 0, 0.45195,-99) , 
NN(
0, 
0, 
-1, 0.99797, 1, -1, 0.219152,-99) , 
10, 1.00221, 1, 0, 0.362931,-99) , 
6, 0.428546, 1, 0, 0.461877,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.107982);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.42862, 1, -1, 0.446218,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.120688);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486786,-99) , 
8, 8.73147, 0, 0, 0.50128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.21637,-99) , 
10, 2.42877, 1, 0, 0.492253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317089,-99) , 
10, -0.123614, 1, 0, 0.380105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0963473,-99) , 
12, 0.221227, 1, 0, 0.304449,-99) , 
6, 0.809252, 1, 0, 0.462194,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.160189);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465811,-99) , 
9, -951.286, 0, 0, 0.517106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224282,-99) , 
10, 2.42862, 1, 0, 0.507068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333247,-99) , 
3, 9.20305, 0, 0, 0.389955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.101535,-99) , 
12, 0.00974333, 1, 0, 0.30236,-99) , 
6, 0.809437, 1, 0, 0.475046,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.149024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42235,-99) , 
5, 0.999977, 0, 0, 0.504938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201513,-99) , 
10, 2.42833, 1, 0, 0.493619,-99) , 
NN(
0, 
0, 
-1, 1.01615, 1, -1, 0.232459,-99) , 
5, 0.999524, 0, 0, 0.47298,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.112568);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481226,-99) , 
1, 0.00592662, 0, 0, 0.496986,-99) , 
NN(
0, 
0, 
-1, 0.427816, 1, -1, 0.285852,-99) , 
10, 2.14296, 1, 0, 0.483469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.191164,-99) , 
5, 0.999048, 0, 0, 0.468711,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.112681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311422,-99) , 
8, 1.74946, 0, 0, 0.515365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244138,-99) , 
5, 0.999049, 0, 0, 0.503473,-99) , 
NN(
0, 
0, 
-1, 0.71381, 1, -1, 0.238636,-99) , 
10, 2.14321, 1, 0, 0.485068,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.17156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.86011, 0, 1, 0.648903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45147,-99) , 
3, 7.34921, 0, 0, 0.47259,-99) , 
1, -0.00445233, 1, 0, 0.498502,-99) , 
NN(
0, 
0, 
-1, 0.147514, 1, -1, 0.316488,-99) , 
6, 0.809416, 1, 0, 0.47023,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0811611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00592662, 0, 1, 0.516007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.228939,-99) , 
10, 2.42831, 1, 0, 0.506579,-99) , 
NN(
0, 
0, 
-1, 0.775355, 1, -1, 0.255753,-99) , 
5, 0.999524, 0, 0, 0.488202,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0991654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.91696, 0, 1, 0.637599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357912,-99) , 
6, 0.904475, 1, 0, 0.49306,-99) , 
1, -0.00621516, 1, 0, 0.505594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388016,-99) , 
12, 1.78351, 1, 0, 0.486721,-99) , 
NN(
0, 
0, 
-1, 1.09518, 1, -1, 0.264505,-99) , 
6, 0.333572, 1, 0, 0.362252,-99) , 
10, 1.28571, 1, 0, 0.475464,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.186278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451111,-99) , 
8, 3.70793, 0, 0, 0.522505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371162,-99) , 
10, 0.146128, 1, 0, 0.428479,-99) , 
6, 0.333277, 1, 0, 0.485577,-99) , 
NN(
0, 
0, 
-1, -0.80238, 1, -1, 0.265808,-99) , 
5, 0.999524, 0, 0, 0.469266,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0615499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346961,-99) , 
6, 0.904725, 1, 0, 0.493778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.239851,-99) , 
4, 8.97425, 1, 0, 0.48415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.207457,-99) , 
10, 2.4284, 1, 0, 0.473566,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.113797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.48118, 0, 1, 0.615512,-99) , 
NN(
0, 
0, 
-1, -0.213308, 0, -1, 0.463326,-99) , 
1, 0.00592662, 0, 0, 0.477404,-99) , 
NN(
0, 
0, 
-1, 0.619024, 1, -1, 0.261783,-99) , 
10, 2.14282, 1, 0, 0.463322,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.124327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.54389, 0, 1, 0.718439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330615,-99) , 
2, -0.115174, 0, 0, 0.494094,-99) , 
3, 5.96096, 0, 0, 0.514807,-99) , 
NN(
0, 
0, 
-1, 1.04834, 1, -1, 0.413207,-99) , 
6, 0.333269, 1, 0, 0.471624,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0955373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.48238, 0, 1, 0.63454,-99) , 
NN(
0, 
0, 
-1, 2.42852, 1, -1, 0.471966,-99) , 
1, -0.00621516, 1, 0, 0.485618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.227561,-99) , 
5, 0.999048, 0, 0, 0.473949,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0780618);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486891,-99) , 
1, 0.00592662, 0, 0, 0.499403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28323,-99) , 
4, 8.93425, 1, 0, 0.491338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231859,-99) , 
10, 2.42833, 1, 0, 0.482002,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0971833);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422732,-99) , 
3, 2.06098, 0, 0, 0.514744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27496,-99) , 
5, 0.998572, 0, 0, 0.507273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.238747,-99) , 
10, 2.42852, 1, 0, 0.497453,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0964681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470973,-99) , 
0, 0.49809, 1, 0, 0.502637,-99) , 
NN(
0, 
0, 
-1, -2.93471, 1, -1, 0.349257,-99) , 
5, 0.999524, 0, 0, 0.492723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.233003,-99) , 
10, 2.42833, 1, 0, 0.483648,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.133855);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473587,-99) , 
3, 4.01375, 0, 0, 0.527352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310119,-99) , 
4, 8.64615, 1, 0, 0.519262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399094,-99) , 
6, 0.0476012, 1, 0, 0.451243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.16646,-99) , 
5, 0.999524, 0, 0, 0.423387,-99) , 
10, 1.00134, 1, 0, 0.492257,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0545167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33451,-99) , 
3, 1.56926, 0, 0, 0.502155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324848,-99) , 
4, 8.64615, 1, 0, 0.495018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.257434,-99) , 
10, 2.42862, 1, 0, 0.486669,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.138111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462119,-99) , 
5, 0.999998, 0, 0, 0.511856,-99) , 
NN(
0, 
0, 
-1, 0.611753, 1, -1, 0.422021,-99) , 
5, 0.999955, 0, 0, 0.493972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296734,-99) , 
5, 0.999048, 0, 0, 0.485016,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0645056);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489999,-99) , 
1, 0.00669617, 0, 0, 0.498432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343949,-99) , 
2, -0.215484, 0, 0, 0.491725,-99) , 
NN(
0, 
0, 
-1, 0.618616, 1, -1, 0.320006,-99) , 
10, 2.14285, 1, 0, 0.481602,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.095164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486122,-99) , 
5, 0.999998, 0, 0, 0.518189,-99) , 
NN(
0, 
0, 
-1, 6.273, 0, -1, 0.43956,-99) , 
5, 0.999955, 0, 0, 0.502392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294473,-99) , 
5, 0.999048, 0, 0, 0.493487,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0584427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.46896, 0, 1, 0.608484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352534,-99) , 
2, -0.19537, 0, 0, 0.500279,-99) , 
1, 0.00592662, 0, 0, 0.510737,-99) , 
NN(
0, 
0, 
-1, -0.646605, 1, -1, 0.347025,-99) , 
5, 0.999524, 0, 0, 0.500267,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0610802);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491987,-99) , 
3, 8.50095, 0, 0, 0.50379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313542,-99) , 
4, 8.93425, 1, 0, 0.497451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264606,-99) , 
10, 2.42873, 1, 0, 0.489849,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0760055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.22007, 1, 1, 0.525415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343892,-99) , 
4, 8.95508, 1, 0, 0.519324,-99) , 
NN(
0, 
0, 
-1, 0.618616, 1, -1, 0.335264,-99) , 
10, 2.14285, 1, 0, 0.508235,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.05975);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491074,-99) , 
8, 8.59488, 0, 0, 0.50355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309045,-99) , 
10, 2.42894, 1, 0, 0.497821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261379,-99) , 
5, 0.998572, 0, 0, 0.490799,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0836658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377706,-99) , 
8, 1.76485, 0, 0, 0.517574,-99) , 
NN(
0, 
0, 
-1, 0.194257, 1, -1, 0.428103,-99) , 
5, 0.999932, 0, 0, 0.502589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.284786,-99) , 
5, 0.998572, 0, 0, 0.495792,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0551427);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496192,-99) , 
8, 9.0304, 0, 0, 0.50905,-99) , 
NN(
0, 
0, 
-1, 0.630422, 1, -1, 0.388542,-99) , 
6, 0.904723, 1, 0, 0.501568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308267,-99) , 
10, 2.42873, 1, 0, 0.495066,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0802945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.95414, 0, 1, 0.526748,-99) , 
NN(
0, 
0, 
-1, 0.714222, 1, -1, 0.446812,-99) , 
10, 1.00001, 1, 0, 0.505058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304941,-99) , 
4, 8.80985, 1, 0, 0.497433,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0671775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48403,-99) , 
8, 7.63503, 0, 0, 0.501568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356595,-99) , 
10, 2.42862, 1, 0, 0.496861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331723,-99) , 
4, 8.7322, 1, 0, 0.490481,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0834539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.784015, 1, 1, 0.59597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436363,-99) , 
6, 0.451116, 1, 0, 0.495158,-99) , 
3, 8.66212, 0, 0, 0.502739,-99) , 
NN(
0, 
0, 
-1, -0.48854, 1, -1, 0.36784,-99) , 
6, 0.904661, 1, 0, 0.494061,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0359616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368928,-99) , 
10, 2.42871, 1, 0, 0.50106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363369,-99) , 
3, 1.56176, 0, 0, 0.496868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330018,-99) , 
5, 0.998576, 0, 0, 0.49171,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.100786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.543845, 1, 1, 0.580052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405777,-99) , 
6, 0.206289, 1, 0, 0.486193,-99) , 
3, 7.04135, 0, 0, 0.505541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410693,-99) , 
10, 0.0567689, 1, 0, 0.469265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.210332,-99) , 
10, 1.57534, 1, 0, 0.413148,-99) , 
6, 0.809437, 1, 0, 0.492505,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0869418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483774,-99) , 
3, 2.46896, 0, 0, 0.570569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455123,-99) , 
8, 6.97186, 0, 0, 0.477697,-99) , 
1, 0.00592662, 0, 0, 0.486422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312129,-99) , 
5, 0.999048, 0, 0, 0.479464,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0561711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.511242, 1, 1, 0.584378,-99) , 
NN(
0, 
0, 
-1, 0.723007, 1, -1, 0.485174,-99) , 
8, 9.5467, 0, 0, 0.491618,-99) , 
NN(
0, 
0, 
-1, 0.586492, 1, -1, 0.336464,-99) , 
6, 0.904531, 1, 0, 0.482243,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0987573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.408442, 1, 1, 0.637568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302286,-99) , 
5, 0.999905, 0, 0, 0.493446,-99) , 
3, 6.8467, 0, 0, 0.510531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44875,-99) , 
10, -0.546997, 1, 0, 0.481304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231194,-99) , 
12, 0.378271, 1, 0, 0.443316,-99) , 
6, 0.618975, 1, 0, 0.491722,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.101953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.314816, 1, 1, 0.696667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450627,-99) , 
3, 2.08219, 0, 0, 0.513548,-99) , 
3, 2.9926, 0, 0, 0.614455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455393,-99) , 
8, 7.41637, 0, 0, 0.474966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3128,-99) , 
10, 2.42859, 1, 0, 0.469518,-99) , 
1, -0.00445233, 1, 0, 0.488392,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.100744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.748114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408869,-99) , 
6, 0.0883556, 1, 0, 0.492119,-99) , 
3, 6.55581, 0, 0, 0.509132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44365,-99) , 
10, -0.552058, 1, 0, 0.465923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.22037,-99) , 
12, 0.905132, 1, 0, 0.449298,-99) , 
6, 0.428511, 1, 0, 0.486482,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0710472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.24524, 0, 1, 0.516048,-99) , 
NN(
0, 
0, 
-1, -0.715614, 0, -1, 0.430876,-99) , 
3, 1.97697, 0, 0, 0.505046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434471,-99) , 
3, 9.38728, 0, 0, 0.471393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.251881,-99) , 
12, 0.00974333, 1, 0, 0.416217,-99) , 
6, 0.809487, 1, 0, 0.492264,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0643537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437877,-99) , 
10, 1.85707, 1, 0, 0.504152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455454,-99) , 
8, 9.48476, 0, 0, 0.462122,-99) , 
0, 0.499044, 1, 0, 0.486053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338523,-99) , 
4, 8.95508, 1, 0, 0.480916,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0667318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486264,-99) , 
10, -1.04333, 1, 0, 0.533976,-99) , 
NN(
0, 
0, 
-1, -1.28568, 0, -1, 0.477346,-99) , 
11, -3.96059, 1, 0, 0.486964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34583,-99) , 
2, -0.210441, 0, 0, 0.480403,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0617453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.727883, 1, 1, 0.580091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436788,-99) , 
6, 0.451162, 1, 0, 0.487048,-99) , 
3, 8.18738, 0, 0, 0.49761,-99) , 
NN(
0, 
0, 
-1, 0.549066, 1, -1, 0.37414,-99) , 
6, 0.904661, 1, 0, 0.490269,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0705985);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490571,-99) , 
3, 2.50462, 0, 0, 0.575274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458336,-99) , 
8, 6.19161, 0, 0, 0.48377,-99) , 
1, 0.00592662, 0, 0, 0.492141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328537,-99) , 
10, 2.42856, 1, 0, 0.48707,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0600443);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458042,-99) , 
6, 0.428506, 1, 0, 0.488579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379699,-99) , 
8, 1.76822, 0, 0, 0.483908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324594,-99) , 
10, 2.42874, 1, 0, 0.479009,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.08993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491295, 1, 1, 0.593236,-99) , 
NN(
0, 
0, 
-1, 0.142776, 1, -1, 0.476567,-99) , 
3, 7.13435, 0, 0, 0.49111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453342,-99) , 
10, -0.593815, 1, 0, 0.480173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244339,-99) , 
10, 1.57591, 1, 0, 0.434324,-99) , 
6, 0.714254, 1, 0, 0.47931,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0678159);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498384,-99) , 
3, 2.97265, 0, 0, 0.570728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465768,-99) , 
3, 6.51635, 0, 0, 0.48354,-99) , 
1, 0.00592662, 0, 0, 0.491486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313615,-99) , 
5, 0.998572, 0, 0, 0.486674,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0955604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.733918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354362,-99) , 
10, -1.56898, 0, 0, 0.505361,-99) , 
3, 5.69753, 0, 0, 0.52344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466892,-99) , 
1, -0.00184809, 1, 0, 0.491279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297269,-99) , 
12, 0.658048, 1, 0, 0.472821,-99) , 
6, 0.237945, 1, 0, 0.500516,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0546829);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470528,-99) , 
8, 3.54247, 0, 0, 0.500454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392579,-99) , 
2, -0.216468, 0, 0, 0.496462,-99) , 
NN(
0, 
0, 
-1, 0.945487, 1, -1, 0.396784,-99) , 
6, 0.904672, 1, 0, 0.490221,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0362029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.723428, 1, 1, 0.570082,-99) , 
NN(
0, 
0, 
-1, 0.904672, 1, -1, 0.49038,-99) , 
8, 10.0698, 0, 0, 0.495046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374465,-99) , 
2, -0.212914, 0, 0, 0.489753,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0604401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419349,-99) , 
10, 2.14262, 1, 0, 0.513584,-99) , 
NN(
0, 
0, 
-1, 0.433824, 1, -1, 0.460947,-99) , 
0, 0.5019, 1, 0, 0.502805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379066,-99) , 
2, -0.21361, 0, 0, 0.49739,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0451491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47191,-99) , 
3, 4.52664, 0, 0, 0.491692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38175,-99) , 
10, 2.42852, 1, 0, 0.488507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364727,-99) , 
4, 8.93425, 1, 0, 0.48441,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0868516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.84381, 0, 1, 0.661288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415289,-99) , 
6, 0.0881131, 1, 0, 0.496601,-99) , 
8, 6.79878, 0, 0, 0.511359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44737,-99) , 
3, 8.23784, 0, 0, 0.478395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321717,-99) , 
12, 0.549008, 1, 0, 0.460805,-99) , 
6, 0.428503, 1, 0, 0.492125,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0494795);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493577,-99) , 
8, 8.41286, 0, 0, 0.500386,-99) , 
NN(
0, 
0, 
-1, 0.3369, 1, -1, 0.450834,-99) , 
6, 0.714204, 1, 0, 0.490431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330199,-99) , 
4, 8.93425, 1, 0, 0.485105,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0931563);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491534,-99) , 
6, 0.735376, 1, 0, 0.598435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429686,-99) , 
10, -0.434982, 0, 0, 0.504083,-99) , 
3, 3.04235, 0, 0, 0.564246,-99) , 
NN(
0, 
0, 
-1, 8.74938, 1, -1, 0.4665,-99) , 
1, -0.00219257, 1, 0, 0.491897,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0556025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.141936, 1, 1, 0.52943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373591,-99) , 
6, -0.0375465, 1, 0, 0.48728,-99) , 
8, 5.97324, 0, 0, 0.506681,-99) , 
NN(
0, 
0, 
-1, 0.529521, 1, -1, 0.409985,-99) , 
6, 0.904671, 1, 0, 0.500804,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0435994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0927751, 1, 1, 0.517158,-99) , 
NN(
0, 
0, 
-1, -0.291728, 1, -1, 0.481246,-99) , 
3, 4.54094, 0, 0, 0.502114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376851,-99) , 
4, 8.52364, 1, 0, 0.497404,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.068321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495678, 1, 1, 0.621324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351008,-99) , 
5, 0.999905, 0, 0, 0.491418,-99) , 
3, 6.84538, 0, 0, 0.505857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457757,-99) , 
8, 9.17172, 0, 0, 0.487989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286785,-99) , 
12, 0.279234, 1, 0, 0.455757,-99) , 
6, 0.618964, 1, 0, 0.492107,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0678353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485124,-99) , 
10, -0.421707, 1, 0, 0.505876,-99) , 
NN(
0, 
0, 
-1, -0.999369, 0, -1, 0.466926,-99) , 
3, 3.5436, 0, 0, 0.492785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361535,-99) , 
4, 8.84137, 1, 0, 0.488676,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0803811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.27277, 0, 1, 0.641353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492403,-99) , 
3, 2.58582, 0, 0, 0.590065,-99) , 
NN(
0, 
0, 
-1, 8.95508, 1, -1, 0.471969,-99) , 
1, -0.00340812, 1, 0, 0.493165,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0789723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411089,-99) , 
10, -0.548844, 0, 0, 0.540231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462527,-99) , 
8, 6.31068, 0, 0, 0.491513,-99) , 
11, -2.18004, 0, 0, 0.505058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306906,-99) , 
6, 0.428665, 1, 0, 0.399672,-99) , 
10, 2.14333, 1, 0, 0.499436,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0669633);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.51474, 0, 1, 0.608648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469531,-99) , 
3, 5.33895, 0, 0, 0.488947,-99) , 
NN(
0, 
0, 
-1, 0.529091, 1, -1, 0.408019,-99) , 
6, 0.904661, 1, 0, 0.483759,-99) , 
1, -0.00464865, 1, 0, 0.498863,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0545595);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.4281, 0, 1, 0.585517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472641,-99) , 
9, -951.286, 0, 0, 0.493759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359928,-99) , 
10, 2.42871, 1, 0, 0.489735,-99) , 
1, 0.00592662, 0, 0, 0.498628,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.08797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.448447, 1, 1, 0.636363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332529,-99) , 
5, 0.999905, 0, 0, 0.508096,-99) , 
3, 6.55513, 0, 0, 0.520505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456495,-99) , 
1, 0.00187677, 0, 0, 0.480038,-99) , 
NN(
0, 
0, 
-1, 0.773205, 1, -1, 0.364577,-99) , 
12, 0.279234, 1, 0, 0.460666,-99) , 
6, 0.523779, 1, 0, 0.501023,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0608465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341894,-99) , 
10, -1.56884, 0, 0, 0.494935,-99) , 
3, 5.96592, 0, 0, 0.510451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408577,-99) , 
8, 7.4136, 0, 0, 0.479501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354302,-99) , 
12, 0.703999, 1, 0, 0.46805,-99) , 
6, 0.33327, 1, 0, 0.492739,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0486865);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.50394, 0, 1, 0.583274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479527,-99) , 
3, 6.45951, 0, 0, 0.492126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381259,-99) , 
10, 2.42852, 1, 0, 0.488708,-99) , 
1, 0.00669617, 0, 0, 0.495838,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.086138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.685739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386173,-99) , 
6, 0.015648, 1, 0, 0.490132,-99) , 
3, 5.9387, 0, 0, 0.506018,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465648,-99) , 
6, 0.682375, 1, 0, 0.488995,-99) , 
NN(
0, 
0, 
-1, 0.497139, 1, -1, 0.431021,-99) , 
8, 8.25562, 0, 0, 0.460784,-99) , 
6, 0.33315, 1, 0, 0.487115,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0804485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424094,-99) , 
6, 0.714077, 1, 0, 0.520846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471269,-99) , 
1, -0.00610972, 1, 0, 0.480058,-99) , 
11, -1.95458, 0, 0, 0.488439,-99) , 
NN(
0, 
0, 
-1, -0.904789, 1, -1, 0.415311,-99) , 
12, 1.63001, 1, 0, 0.48291,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0357916);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.53127, 0, 1, 0.579514,-99) , 
NN(
0, 
0, 
-1, -2.71692, 0, -1, 0.487967,-99) , 
1, -0.00594206, 1, 0, 0.495909,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0304993);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.52318, 0, 1, 0.559094,-99) , 
NN(
0, 
0, 
-1, 2.42882, 1, -1, 0.489096,-99) , 
1, 0.00592662, 0, 0, 0.495402,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0352888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436794,-99) , 
12, -2.67293, 0, 0, 0.507971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414827,-99) , 
3, 1.56176, 0, 0, 0.505229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400642,-99) , 
4, 8.80985, 1, 0, 0.501655,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0544372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.4689, 0, 1, 0.585835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471059,-99) , 
3, 4.56952, 0, 0, 0.495164,-99) , 
1, -0.00445233, 1, 0, 0.505988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351026,-99) , 
6, -0.904822, 1, 0, 0.435157,-99) , 
12, 1.48441, 1, 0, 0.499835,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0288474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.892416, 1, 1, 0.565025,-99) , 
NN(
0, 
0, 
-1, 1.96322, 0, -1, 0.494533,-99) , 
8, 10.1295, 0, 0, 0.498894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359382,-99) , 
6, -0.904775, 1, 0, 0.435849,-99) , 
12, 1.46138, 1, 0, 0.493178,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0750633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.697517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382824,-99) , 
2, -0.131042, 0, 0, 0.505197,-99) , 
3, 5.75813, 0, 0, 0.518793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382598,-99) , 
12, 0.292153, 1, 0, 0.490088,-99) , 
NN(
0, 
0, 
-1, 6.09947, 0, -1, 0.390309,-99) , 
3, 6.47157, 0, 0, 0.473016,-99) , 
6, 0.238044, 1, 0, 0.497991,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0572203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139182, 0, 1, 0.616647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498683,-99) , 
3, 2.53939, 0, 0, 0.570048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355477,-99) , 
12, 0.941939, 1, 0, 0.492742,-99) , 
NN(
0, 
0, 
-1, -0.0638239, 0, -1, 0.440857,-99) , 
8, 3.70349, 0, 0, 0.478201,-99) , 
1, 0.00498554, 0, 0, 0.48908,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0404209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476657,-99) , 
6, 0.523616, 1, 0, 0.497637,-99) , 
NN(
0, 
0, 
-1, -0.422498, 1, -1, 0.460591,-99) , 
4, 4.72159, 1, 0, 0.492081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382781,-99) , 
4, 8.93425, 1, 0, 0.488386,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0558328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483044,-99) , 
3, 4.49153, 0, 0, 0.503915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470013,-99) , 
8, 10.1275, 0, 0, 0.474,-99) , 
1, 0.000160057, 0, 0, 0.488691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393545,-99) , 
2, -0.213764, 0, 0, 0.484744,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.110041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.702155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423677,-99) , 
6, -0.174831, 1, 0, 0.494827,-99) , 
3, 5.69011, 0, 0, 0.510569,-99) , 
NN(
NN(
0, 
0, 
-1, 0.673353, 1, 1, 0.578751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426591,-99) , 
1, -0.00323196, 1, 0, 0.450304,-99) , 
1, 0.00263958, 0, 0, 0.47297,-99) , 
6, 0.238021, 1, 0, 0.49356,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0438583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49902, 1, 1, 0.54178,-99) , 
NN(
0, 
0, 
-1, 0.427546, 1, -1, 0.484243,-99) , 
3, 8.92847, 0, 0, 0.488831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359219,-99) , 
4, 8.7322, 1, 0, 0.484527,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0328331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458875,-99) , 
0, 0.502851, 1, 0, 0.498076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423903,-99) , 
2, -0.192636, 0, 0, 0.494399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401545,-99) , 
2, 0.215073, 1, 0, 0.490765,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0221251);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.904671, 1, -1, 0.488939,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0470642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4748,-99) , 
3, 3.52996, 0, 0, 0.501081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407136,-99) , 
4, 8.80212, 1, 0, 0.49756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450648,-99) , 
3, 1.66557, 0, 0, 0.483727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345113,-99) , 
10, 1.61932, 1, 0, 0.433257,-99) , 
12, 1.33544, 1, 0, 0.49096,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0510859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4963,-99) , 
8, 6.72023, 0, 0, 0.510189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447507,-99) , 
10, 0.437406, 1, 0, 0.477731,-99) , 
6, 0.428508, 1, 0, 0.49866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378883,-99) , 
5, 0.999048, 0, 0, 0.49443,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0509324);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35515,-99) , 
10, -1.28313, 0, 0, 0.50427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302734,-99) , 
10, -1.31812, 1, 0, 0.443167,-99) , 
12, -2.28667, 0, 0, 0.4995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396216,-99) , 
5, 0.998572, 0, 0, 0.496802,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0707324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.468146, 1, 1, 0.600635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438805,-99) , 
6, 0.0793055, 1, 0, 0.494793,-99) , 
3, 6.88329, 0, 0, 0.505507,-99) , 
NN(
0, 
0, 
-1, 0.291504, 1, -1, 0.456596,-99) , 
6, 0.618962, 1, 0, 0.492027,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.060384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142245, 1, 1, 0.679337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406302,-99) , 
3, 5.81616, 0, 0, 0.487078,-99) , 
6, -0.0207303, 1, 0, 0.504167,-99) , 
NN(
0, 
0, 
-1, -0.249037, 1, -1, 0.469049,-99) , 
3, 4.50499, 0, 0, 0.489427,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0638427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452788,-99) , 
11, -2.80142, 0, 0, 0.511953,-99) , 
3, 4.86703, 0, 0, 0.549421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491471,-99) , 
6, 0.512504, 1, 0, 0.503734,-99) , 
NN(
0, 
0, 
-1, 0.130311, 1, -1, 0.470571,-99) , 
8, 7.62282, 0, 0, 0.481634,-99) , 
1, -0.00445233, 1, 0, 0.490519,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0450841);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489244,-99) , 
1, -0.00520423, 1, 0, 0.497319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404924,-99) , 
3, 1.57938, 0, 0, 0.49422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363863,-99) , 
12, -2.88307, 0, 0, 0.490617,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0658602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465688,-99) , 
3, 2.5555, 0, 0, 0.531775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473378,-99) , 
6, 0.142712, 1, 0, 0.493432,-99) , 
1, -0.00178541, 1, 0, 0.504984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398362,-99) , 
2, 0.21457, 1, 0, 0.500725,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0617289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.10926, 1, 1, 0.529305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355226,-99) , 
6, -0.169634, 1, 0, 0.485606,-99) , 
3, 4.98873, 0, 0, 0.507804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463146,-99) , 
10, 1.38314, 1, 0, 0.492719,-99) , 
NN(
0, 
0, 
-1, -2.68187, 1, -1, 0.424479,-99) , 
11, -2.37753, 0, 0, 0.473351,-99) , 
10, 1.00222, 1, 0, 0.49862,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0451777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49651,-99) , 
6, -0.204742, 1, 0, 0.509003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424902,-99) , 
10, -0.429142, 0, 0, 0.482509,-99) , 
8, 4.35623, 0, 0, 0.498833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41547,-99) , 
5, 0.998572, 0, 0, 0.496637,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0632351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.32457, 1, 1, 0.540903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491544,-99) , 
10, -0.690552, 1, 0, 0.50835,-99) , 
11, -2.22715, 0, 0, 0.519395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486792,-99) , 
6, 0.0529426, 1, 0, 0.502986,-99) , 
NN(
0, 
0, 
-1, -0.371668, 1, -1, 0.4528,-99) , 
3, 4.52823, 0, 0, 0.481727,-99) , 
1, 0.000160057, 0, 0, 0.500279,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0495411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00457346, 1, 1, 0.523582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407661,-99) , 
6, -0.354411, 1, 0, 0.48448,-99) , 
3, 4.83571, 0, 0, 0.505286,-99) , 
NN(
0, 
0, 
-1, 0.945487, 1, -1, 0.424177,-99) , 
6, 0.904672, 1, 0, 0.500596,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0355319);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438778,-99) , 
12, 1.61668, 1, 0, 0.504733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421705,-99) , 
8, 1.77981, 0, 0, 0.501193,-99) , 
NN(
0, 
0, 
-1, 4.01807, 0, -1, 0.433623,-99) , 
0, 0.504757, 1, 0, 0.496394,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0709926);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467701,-99) , 
12, -2.58441, 0, 0, 0.592534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345093,-99) , 
12, -1.73957, 0, 0, 0.487036,-99) , 
10, -0.709921, 1, 0, 0.502318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410389,-99) , 
2, -0.0576119, 0, 0, 0.497514,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.394727,-99) , 
6, -0.651728, 1, 0, 0.473499,-99) , 
3, 3.53452, 0, 0, 0.492916,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0703273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390158,-99) , 
3, 5.84389, 0, 0, 0.489235,-99) , 
6, -0.0207303, 1, 0, 0.50449,-99) , 
NN(
0, 
0, 
-1, -0.249037, 1, -1, 0.466472,-99) , 
3, 4.52833, 0, 0, 0.488719,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0588045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.50138, 0, 1, 0.552822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456521,-99) , 
3, 3.04087, 0, 0, 0.498273,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.466006,-99) , 
10, 0.718342, 1, 0, 0.486603,-99) , 
1, 0.00592662, 0, 0, 0.49245,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0867052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.701867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469299,-99) , 
9, -951.286, 0, 0, 0.496171,-99) , 
8, 6.13794, 0, 0, 0.510742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487985,-99) , 
6, 0.781996, 1, 0, 0.549948,-99) , 
NN(
0, 
0, 
-1, 6.83801, 0, -1, 0.456767,-99) , 
1, 0.00255398, 0, 0, 0.473559,-99) , 
6, 0.238071, 1, 0, 0.493951,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0946575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.390746, 1, 1, 0.586028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437415,-99) , 
10, -0.424491, 0, 0, 0.5035,-99) , 
3, 3.00644, 0, 0, 0.556313,-99) , 
NN(
NN(
0, 
0, 
-1, -0.144961, 0, 1, 0.542651,-99) , 
NN(
0, 
0, 
-1, 1.16252, 1, -1, 0.462055,-99) , 
6, -0.904765, 1, 0, 0.469465,-99) , 
1, 0.00236311, 0, 0, 0.492845,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0554831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.47323, 0, 1, 0.565555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471646,-99) , 
8, 6.98817, 0, 0, 0.487187,-99) , 
1, -0.00445233, 1, 0, 0.496568,-99) , 
NN(
0, 
0, 
-1, -0.904797, 1, -1, 0.437093,-99) , 
12, 1.58529, 1, 0, 0.491815,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0582653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403394,-99) , 
3, 1.5765, 0, 0, 0.499531,-99) , 
3, 6.28281, 0, 0, 0.511005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469419,-99) , 
13, 10.965, 1, 0, 0.530714,-99) , 
NN(
0, 
0, 
-1, 6.55808, 0, -1, 0.459142,-99) , 
3, 8.95464, 0, 0, 0.474298,-99) , 
6, 0.428503, 1, 0, 0.497208,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0537922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.291406, 1, 1, 0.59616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432961,-99) , 
6, 0.0200662, 1, 0, 0.495092,-99) , 
8, 6.62022, 0, 0, 0.505143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439841,-99) , 
3, 7.36803, 0, 0, 0.480704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377125,-99) , 
6, 0.945543, 1, 0, 0.473686,-99) , 
6, 0.428546, 1, 0, 0.493268,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0487847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496615,-99) , 
3, 5.79089, 0, 0, 0.508547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46857,-99) , 
10, -0.686552, 1, 0, 0.479767,-99) , 
6, 0.33327, 1, 0, 0.496347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41762,-99) , 
3, 1.55922, 0, 0, 0.49393,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0576718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464288,-99) , 
3, 2.04878, 0, 0, 0.508094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456034,-99) , 
1, 0.00149974, 0, 0, 0.483102,-99) , 
0, 0.499043, 1, 0, 0.497423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413226,-99) , 
4, 8.97269, 1, 0, 0.494841,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0389688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.767077, 1, 1, 0.51499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41051,-99) , 
6, -0.24175, 1, 0, 0.482675,-99) , 
13, 5.71799, 0, 0, 0.49891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41415,-99) , 
12, -2.66864, 0, 0, 0.495597,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0552614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.106465, 1, 1, 0.585336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441626,-99) , 
10, -0.142466, 0, 0, 0.492065,-99) , 
3, 3.49696, 0, 0, 0.536712,-99) , 
NN(
0, 
0, 
-1, 4.51103, 1, -1, 0.477919,-99) , 
1, 0.00458981, 0, 0, 0.485943,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0358158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00583494, 1, 1, 0.50608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407584,-99) , 
6, -0.904793, 1, 0, 0.463314,-99) , 
12, 1.41623, 1, 0, 0.501744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44748,-99) , 
3, 4.50051, 0, 0, 0.485966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401696,-99) , 
6, 0.7142, 1, 0, 0.465673,-99) , 
4, 4.44883, 1, 0, 0.494543,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0679622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.22589, 0, 1, 0.609914,-99) , 
NN(
0, 
0, 
-1, -0.174802, 1, -1, 0.485706,-99) , 
3, 5.36212, 0, 0, 0.499742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459916,-99) , 
6, 0.6734, 1, 0, 0.486224,-99) , 
NN(
0, 
0, 
-1, 0.445127, 1, -1, 0.410539,-99) , 
3, 6.41262, 0, 0, 0.474612,-99) , 
6, 0.23804, 1, 0, 0.488341,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0394284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.362455, 1, 1, 0.585427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49581,-99) , 
3, 2.538, 0, 0, 0.55157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491818,-99) , 
3, 9.49095, 0, 0, 0.495272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403727,-99) , 
12, -2.6728, 0, 0, 0.491596,-99) , 
1, 0.00458981, 0, 0, 0.499668,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0606569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473058,-99) , 
6, 0.33327, 1, 0, 0.500696,-99) , 
5, 0.999525, 1, 0, 0.50589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439325,-99) , 
3, 5.00704, 0, 0, 0.488482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403333,-99) , 
10, 1.28553, 1, 0, 0.471818,-99) , 
4, 4.32582, 1, 0, 0.498732,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0691701);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43192,-99) , 
10, -0.428566, 0, 0, 0.532163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478514,-99) , 
10, -0.674505, 1, 0, 0.492967,-99) , 
11, -2.12774, 0, 0, 0.505162,-99) , 
NN(
0, 
0, 
-1, 0.945539, 1, -1, 0.437531,-99) , 
6, 0.904724, 1, 0, 0.501324,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0564815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0460329, 1, 1, 0.602644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497559,-99) , 
3, 3.03094, 0, 0, 0.553542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489252,-99) , 
6, -0.0207487, 1, 0, 0.500776,-99) , 
NN(
0, 
0, 
-1, -0.263989, 1, -1, 0.470191,-99) , 
3, 4.54442, 0, 0, 0.48907,-99) , 
1, 0.00458981, 0, 0, 0.497312,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0324199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.672745, 1, 1, 0.51126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436648,-99) , 
10, -1.28489, 0, 0, 0.508282,-99) , 
NN(
0, 
0, 
-1, -2.85033, 0, -1, 0.433273,-99) , 
12, -2.474, 0, 0, 0.504257,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0598424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419305,-99) , 
12, -1.39746, 0, 0, 0.507323,-99) , 
10, -0.417423, 1, 0, 0.52699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489393,-99) , 
3, 5.95568, 0, 0, 0.499294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444639,-99) , 
11, -2.74175, 0, 0, 0.464062,-99) , 
6, 0.318731, 1, 0, 0.490881,-99) , 
3, 7.48367, 0, 0, 0.499728,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0618826);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433046,-99) , 
10, -1.28489, 0, 0, 0.518648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349057,-99) , 
10, -1.52349, 1, 0, 0.459226,-99) , 
12, -2.41699, 0, 0, 0.515249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406828,-99) , 
5, 0.998572, 0, 0, 0.512445,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0400065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497795,-99) , 
10, -0.661911, 1, 0, 0.510668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414193,-99) , 
10, -0.714588, 0, 0, 0.485087,-99) , 
3, 3.04814, 0, 0, 0.503259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441231,-99) , 
12, -2.56404, 0, 0, 0.500482,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0268862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00658236, 1, 1, 0.506421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401418,-99) , 
6, -0.904823, 1, 0, 0.461598,-99) , 
12, 1.46138, 1, 0, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425408,-99) , 
2, -0.213015, 0, 0, 0.498953,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0474081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.08019, 1, 1, 0.521151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487475,-99) , 
3, 8.953, 0, 0, 0.491397,-99) , 
2, 0.00730458, 0, 0, 0.502775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459644,-99) , 
3, 6.20879, 0, 0, 0.48616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419912,-99) , 
6, 0.7142, 1, 0, 0.470057,-99) , 
4, 4.54421, 1, 0, 0.496498,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0492534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.56229, 0, 1, 0.520336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388546,-99) , 
8, 5.14987, 0, 0, 0.489875,-99) , 
6, -0.333358, 1, 0, 0.501248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42702,-99) , 
10, 1.00219, 1, 0, 0.501964,-99) , 
NN(
0, 
0, 
-1, 3.00636, 1, -1, 0.428759,-99) , 
8, 6.13406, 0, 0, 0.463484,-99) , 
2, -0.0688005, 0, 0, 0.494912,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0633796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482901,-99) , 
3, 4.52833, 0, 0, 0.513047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457143,-99) , 
6, 0.142803, 1, 0, 0.481877,-99) , 
10, 0.428602, 1, 0, 0.498558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397366,-99) , 
12, -2.82691, 0, 0, 0.495622,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0627157);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493624,-99) , 
10, 0.144897, 1, 0, 0.507138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418668,-99) , 
10, -0.997088, 0, 0, 0.503074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467865,-99) , 
12, -2.40588, 0, 0, 0.52312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320964,-99) , 
10, -0.566151, 1, 0, 0.469777,-99) , 
12, -1.63614, 0, 0, 0.496926,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0616747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465646,-99) , 
3, 3.04087, 0, 0, 0.526267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424143,-99) , 
12, -1.06364, 0, 0, 0.49726,-99) , 
10, -0.14255, 1, 0, 0.506068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394671,-99) , 
12, -2.8499, 0, 0, 0.448299,-99) , 
12, -2.474, 0, 0, 0.50297,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0582885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.21206, 0, 1, 0.569144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422886,-99) , 
10, 1.59616, 1, 0, 0.511085,-99) , 
6, 0.748064, 1, 0, 0.531019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493251,-99) , 
8, 5.51335, 0, 0, 0.504023,-99) , 
NN(
0, 
0, 
-1, 5.78607, 0, -1, 0.465931,-99) , 
6, 0.0462245, 1, 0, 0.489255,-99) , 
8, 8.26639, 0, 0, 0.498484,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0597981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0869102, 1, 1, 0.549122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456523,-99) , 
4, 2.43368, 0, 0, 0.48469,-99) , 
3, 2.53527, 0, 0, 0.53084,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474127,-99) , 
3, 6.99031, 0, 0, 0.487587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389615,-99) , 
4, 8.74938, 1, 0, 0.484245,-99) , 
1, 0.00236311, 0, 0, 0.496283,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0585953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.61866, 1, 1, 0.540843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455482,-99) , 
12, 1.53655, 1, 0, 0.531928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495091,-99) , 
3, 4.0867, 0, 0, 0.512391,-99) , 
NN(
0, 
0, 
-1, 5.54445, 0, -1, 0.472646,-99) , 
6, -0.142949, 1, 0, 0.487729,-99) , 
1, 0.00236311, 0, 0, 0.499433,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0536101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00445068, 1, 1, 0.520572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432561,-99) , 
6, -0.860538, 1, 0, 0.482826,-99) , 
3, 2.4284, 0, 0, 0.51215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479078,-99) , 
5, 0.999524, 1, 0, 0.505158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384013,-99) , 
12, -0.0744372, 1, 0, 0.47595,-99) , 
6, 0.809437, 1, 0, 0.507039,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.023671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49744,-99) , 
8, 3.67487, 0, 0, 0.526893,-99) , 
NN(
0, 
0, 
-1, 0.50285, 1, -1, 0.49442,-99) , 
1, 0.00458981, 0, 0, 0.498701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412821,-99) , 
2, 0.215414, 1, 0, 0.495318,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0863141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457803,-99) , 
3, 1.85068, 0, 0, 0.501281,-99) , 
3, 2.84246, 0, 0, 0.518158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470472,-99) , 
6, 0.76865, 1, 0, 0.549053,-99) , 
NN(
0, 
0, 
-1, 4.43551, 0, -1, 0.463511,-99) , 
1, -0.00184809, 1, 0, 0.485804,-99) , 
6, -0.619067, 1, 0, 0.494434,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0417344);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447262,-99) , 
12, -2.71692, 0, 0, 0.51412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478009,-99) , 
1, 0.00480478, 0, 0, 0.486593,-99) , 
0, 0.501899, 1, 0, 0.508597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443276,-99) , 
2, 0.207489, 1, 0, 0.505854,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0483711);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48653,-99) , 
8, 4.35623, 0, 0, 0.502863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313328,-99) , 
10, -1.03914, 1, 0, 0.434765,-99) , 
12, -2.01782, 0, 0, 0.497966,-99) , 
11, -4.78429, 1, 0, 0.500762,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0739826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00226721, 1, 1, 0.615299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39802,-99) , 
6, -0.238487, 1, 0, 0.496722,-99) , 
3, 4.83685, 0, 0, 0.51281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475105,-99) , 
12, -1.90012, 0, 0, 0.52936,-99) , 
NN(
0, 
0, 
-1, -1.10875, 0, -1, 0.467443,-99) , 
10, -0.119427, 1, 0, 0.48621,-99) , 
6, 0.142835, 1, 0, 0.500019,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0456514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.07361, 0, 1, 0.554837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44076,-99) , 
12, 0.0795769, 1, 0, 0.496201,-99) , 
11, -1.68236, 0, 0, 0.50295,-99) , 
NN(
0, 
0, 
-1, 2.16514, 1, -1, 0.453079,-99) , 
12, 1.23481, 1, 0, 0.497121,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0218683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49838,-99) , 
10, -0.71208, 1, 0, 0.502616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435802,-99) , 
12, -2.68844, 0, 0, 0.500175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37241,-99) , 
1, 0.0121806, 1, 0, 0.496564,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0206706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.66087, 1, 1, 0.552448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425432,-99) , 
12, -1.80289, 0, 0, 0.495993,-99) , 
11, -4.31499, 1, 0, 0.500175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423683,-99) , 
12, -2.82568, 0, 0, 0.498079,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0545572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425726,-99) , 
6, -0.0748764, 1, 0, 0.497067,-99) , 
3, 5.49939, 0, 0, 0.506545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479531,-99) , 
6, 0.550947, 1, 0, 0.494066,-99) , 
NN(
0, 
0, 
-1, 0.498112, 1, -1, 0.41499,-99) , 
3, 6.3004, 0, 0, 0.48079,-99) , 
6, 0.142801, 1, 0, 0.494059,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0396381);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497833,-99) , 
12, 0.999647, 1, 0, 0.56092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452955,-99) , 
3, 3.14472, 0, 0, 0.493675,-99) , 
11, -1.45079, 0, 0, 0.499144,-99) , 
NN(
0, 
0, 
-1, -0.904775, 1, -1, 0.44163,-99) , 
12, 1.34586, 1, 0, 0.493318,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0455961);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48859,-99) , 
6, 0.384292, 1, 0, 0.500626,-99) , 
NN(
0, 
0, 
-1, 0.0144851, 1, -1, 0.478028,-99) , 
3, 6.19106, 0, 0, 0.487275,-99) , 
8, 10.8668, 0, 0, 0.489462,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0650893);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0914381, 1, 1, 0.534803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400508,-99) , 
6, -0.516985, 1, 0, 0.501261,-99) , 
3, 4.03505, 0, 0, 0.521223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479902,-99) , 
10, -0.709932, 1, 0, 0.492731,-99) , 
NN(
0, 
0, 
-1, 0.10446, 1, -1, 0.467967,-99) , 
8, 6.82065, 0, 0, 0.478302,-99) , 
1, -0.000651124, 1, 0, 0.496273,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0672343);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.52896, 0, 1, 0.565969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471236,-99) , 
3, 4.50624, 0, 0, 0.496696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288574,-99) , 
10, -0.870621, 1, 0, 0.448623,-99) , 
12, -1.92837, 0, 0, 0.490225,-99) , 
1, -0.00464865, 1, 0, 0.499116,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0340846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497727,-99) , 
12, 0.938258, 1, 0, 0.525611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468142,-99) , 
8, 4.52201, 0, 0, 0.493337,-99) , 
11, -1.78143, 0, 0, 0.500263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41945,-99) , 
10, 2.42847, 1, 0, 0.498099,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0434964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428566, 1, 1, 0.51757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468214,-99) , 
6, -0.0476643, 1, 0, 0.482681,-99) , 
1, -0.00178541, 1, 0, 0.492987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404052,-99) , 
12, -2.71692, 0, 0, 0.489747,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0688878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440468,-99) , 
13, 9.7244, 1, 0, 0.506704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402298,-99) , 
10, -0.996935, 0, 0, 0.501959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416663,-99) , 
3, 4.69, 0, 0, 0.502999,-99) , 
NN(
0, 
0, 
-1, -1.57944, 0, -1, 0.371077,-99) , 
10, -0.357198, 1, 0, 0.465655,-99) , 
12, -1.33047, 0, 0, 0.492592,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0814203);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466174,-99) , 
5, 0.999995, 0, 0, 0.512798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39069,-99) , 
5, 0.999905, 0, 0, 0.506634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565306,-99) , 
NN(
0, 
0, 
-1, -2.17693, 0, -1, 0.467051,-99) , 
3, 9.72296, 0, 0, 0.476486,-99) , 
6, 0.428491, 1, 0, 0.495166,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0567195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00123926, 1, 1, 0.534432,-99) , 
NN(
0, 
0, 
-1, 0.944537, 1, -1, 0.465223,-99) , 
6, 0.870928, 1, 0, 0.511095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485851,-99) , 
12, 1.20851, 1, 0, 0.53579,-99) , 
NN(
0, 
0, 
-1, -0.245269, 1, -1, 0.475838,-99) , 
10, 1.85731, 0, 0, 0.480845,-99) , 
3, 7.50727, 0, 0, 0.488127,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0771766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.9185, 0, 1, 0.530968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316388,-99) , 
10, -0.238924, 1, 0, 0.479059,-99) , 
12, -1.39994, 0, 0, 0.508449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479453,-99) , 
10, 0.797301, 1, 0, 0.497951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375147,-99) , 
10, 0.850912, 0, 0, 0.427364,-99) , 
11, -2.81925, 0, 0, 0.480778,-99) , 
10, 0.430053, 1, 0, 0.495839,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0353398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0709091, 1, 1, 0.51621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362276,-99) , 
10, 0.353174, 1, 0, 0.488213,-99) , 
12, -0.876362, 0, 0, 0.505507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430779,-99) , 
2, 0.21457, 1, 0, 0.502669,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0559347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435198,-99) , 
5, 0.999524, 0, 0, 0.506895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425248,-99) , 
10, -0.999958, 0, 0, 0.50275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44354,-99) , 
10, -0.792425, 1, 0, 0.463615,-99) , 
5, 0.999524, 1, 0, 0.475515,-99) , 
11, -3.25293, 0, 0, 0.492804,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0473752);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477383,-99) , 
3, 5.6796, 0, 0, 0.488572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264836,-99) , 
10, -0.918671, 1, 0, 0.442171,-99) , 
12, -2.00476, 0, 0, 0.483564,-99) , 
8, 10.7769, 0, 0, 0.486832,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0366006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544667,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28566, 0, -1, 0.491549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272856,-99) , 
10, -0.888354, 1, 0, 0.43066,-99) , 
12, -1.98363, 0, 0, 0.487138,-99) , 
11, -4.77544, 1, 0, 0.489565,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0434187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480238,-99) , 
11, -3.13779, 0, 0, 0.497949,-99) , 
11, -4.25731, 1, 0, 0.500647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482134,-99) , 
10, -1.60857, 1, 0, 0.517762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290025,-99) , 
10, -0.918697, 1, 0, 0.4496,-99) , 
12, -2.00476, 0, 0, 0.494821,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0285902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470129,-99) , 
4, 4.46688, 1, 0, 0.496915,-99) , 
3, 9.48911, 0, 0, 0.499896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406758,-99) , 
12, -2.66864, 0, 0, 0.496279,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0536553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593743,-99) , 
NN(
0, 
0, 
-1, -2.45178, 0, -1, 0.492533,-99) , 
6, 0.109368, 1, 0, 0.501563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476337,-99) , 
3, 3.69499, 0, 0, 0.489027,-99) , 
NN(
0, 
0, 
-1, 4.95844, 0, -1, 0.388848,-99) , 
6, -0.213599, 1, 0, 0.475883,-99) , 
3, 5.00965, 0, 0, 0.489669,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0449521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464001,-99) , 
12, 1.37203, 1, 0, 0.498863,-99) , 
11, -3.99851, 1, 0, 0.502912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448091,-99) , 
12, -2.55398, 0, 0, 0.505242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316814,-99) , 
10, -0.575685, 1, 0, 0.461598,-99) , 
12, -1.68115, 0, 0, 0.495833,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0293812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492146,-99) , 
10, -0.713577, 1, 0, 0.4967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43046,-99) , 
12, -2.71692, 0, 0, 0.494406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422258,-99) , 
2, 0.214436, 1, 0, 0.491619,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0629581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.91382, 0, 1, 0.543154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455678,-99) , 
2, 0.210037, 1, 0, 0.520932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495417,-99) , 
3, 2.44644, 0, 0, 0.512345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469326,-99) , 
1, 0.00306557, 0, 0, 0.48195,-99) , 
6, -0.714354, 1, 0, 0.48896,-99) , 
2, 0.0743015, 0, 0, 0.493731,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0396798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143277, 1, 1, 0.548379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477352,-99) , 
3, 3.71718, 0, 0, 0.501383,-99) , 
6, -0.904766, 1, 0, 0.5058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483744,-99) , 
10, -0.965478, 1, 0, 0.492488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42594,-99) , 
3, 2.0628, 0, 0, 0.483399,-99) , 
0, 0.495234, 0, 0, 0.500092,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.036034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476129,-99) , 
11, -4.25616, 1, 0, 0.558182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412872,-99) , 
10, 2.38792, 1, 0, 0.501757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297787,-99) , 
12, -2.31609, 0, 0, 0.495849,-99) , 
10, -1.28562, 1, 0, 0.500426,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0541055);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386562,-99) , 
12, 0.792169, 1, 0, 0.51743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400778,-99) , 
6, -0.213599, 1, 0, 0.489605,-99) , 
3, 5.03603, 0, 0, 0.504202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430508,-99) , 
12, -2.56404, 0, 0, 0.500627,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0448917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577071,-99) , 
NN(
0, 
0, 
-1, 0.500947, 1, -1, 0.49108,-99) , 
11, -4.15805, 1, 0, 0.494225,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466861,-99) , 
12, -2.76865, 0, 0, 0.521038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279418,-99) , 
10, -0.870621, 1, 0, 0.443704,-99) , 
12, -1.92837, 0, 0, 0.487959,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0293665);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43488,-99) , 
10, -1.28307, 0, 0, 0.501463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295325,-99) , 
10, -0.898462, 1, 0, 0.44594,-99) , 
12, -1.99955, 0, 0, 0.495182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376149,-99) , 
1, 0.0121806, 1, 0, 0.492097,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0596435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433951,-99) , 
10, -0.426539, 0, 0, 0.51345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477279,-99) , 
1, -0.0058824, 1, 0, 0.483582,-99) , 
11, -2.06556, 0, 0, 0.492573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371463,-99) , 
12, -2.83539, 0, 0, 0.488972,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0505199);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481754,-99) , 
13, 5.35352, 0, 0, 0.497123,-99) , 
11, -4.14638, 1, 0, 0.500217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483316,-99) , 
10, -1.58556, 1, 0, 0.518156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355674,-99) , 
10, -0.879384, 1, 0, 0.465031,-99) , 
12, -1.9024, 0, 0, 0.495723,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0571045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.57539, 0, 1, 0.521631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479017,-99) , 
10, -1.28061, 1, 0, 0.48622,-99) , 
6, -0.0476643, 1, 0, 0.502313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447169,-99) , 
6, 0.428512, 0, 0, 0.484035,-99) , 
NN(
0, 
0, 
-1, 0.427802, 1, -1, 0.437183,-99) , 
1, 0.000512347, 1, 0, 0.46345,-99) , 
2, 0.071981, 1, 0, 0.496121,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0331045);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492426,-99) , 
10, -0.43213, 0, 0, 0.540335,-99) , 
NN(
0, 
0, 
-1, 2.28558, 0, -1, 0.490094,-99) , 
6, -0.904765, 1, 0, 0.494977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383893,-99) , 
1, 0.0119697, 1, 0, 0.491533,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0500642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481162,-99) , 
3, 5.92101, 0, 0, 0.516818,-99) , 
NN(
0, 
0, 
-1, -1.2405, 0, -1, 0.489474,-99) , 
10, -0.426558, 1, 0, 0.494934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32017,-99) , 
10, -1.35084, 1, 0, 0.450244,-99) , 
12, -2.28667, 0, 0, 0.491727,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0486536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496142,-99) , 
10, 0.333498, 1, 0, 0.511851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407661,-99) , 
3, 2.52775, 0, 0, 0.452584,-99) , 
10, -0.999913, 0, 0, 0.507573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297383,-99) , 
10, -1.36587, 1, 0, 0.434653,-99) , 
12, -2.36472, 0, 0, 0.502948,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0522636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.494251, 1, 1, 0.524131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465418,-99) , 
6, -0.883971, 1, 0, 0.495267,-99) , 
3, 3.0272, 0, 0, 0.516187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493945,-99) , 
3, 3.5564, 0, 0, 0.513322,-99) , 
NN(
0, 
0, 
-1, -2.19892, 0, -1, 0.474323,-99) , 
6, -0.238192, 1, 0, 0.490153,-99) , 
0, 0.499043, 1, 0, 0.505161,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0332943);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13471, 1, 1, 0.51313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431816,-99) , 
10, -1.57057, 0, 0, 0.510809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41387,-99) , 
12, -2.869, 0, 0, 0.508176,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0482944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.398276, 1, 1, 0.52082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482108,-99) , 
5, 0.999524, 1, 0, 0.489279,-99) , 
11, -2.75706, 0, 0, 0.502854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403579,-99) , 
6, -0.904754, 1, 0, 0.460436,-99) , 
12, 1.4718, 1, 0, 0.4991,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0506399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.335298, 1, 1, 0.513791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454478,-99) , 
10, -0.997096, 0, 0, 0.510792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464513,-99) , 
10, -1.51791, 1, 0, 0.497965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332982,-99) , 
10, -0.613302, 1, 0, 0.459834,-99) , 
12, -1.74374, 0, 0, 0.502623,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0535175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0718956, 1, 1, 0.548573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435085,-99) , 
6, -0.712642, 1, 0, 0.49293,-99) , 
3, 3.49892, 0, 0, 0.524611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430687,-99) , 
11, -1.74909, 1, 0, 0.499874,-99) , 
NN(
0, 
0, 
-1, -0.558188, 1, -1, 0.471424,-99) , 
8, 6.3175, 0, 0, 0.485496,-99) , 
1, 0.00236311, 0, 0, 0.495882,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0567997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495119,-99) , 
11, -2.80361, 0, 0, 0.505652,-99) , 
NN(
0, 
0, 
-1, -2.39588, 0, -1, 0.478038,-99) , 
12, -0.470188, 1, 0, 0.490636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436357,-99) , 
12, -2.79619, 0, 0, 0.519973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296582,-99) , 
10, -0.898462, 1, 0, 0.455909,-99) , 
12, -1.99955, 0, 0, 0.486659,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0555632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451468,-99) , 
6, -0.528382, 1, 0, 0.510791,-99) , 
3, 4.08375, 0, 0, 0.521428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490132,-99) , 
6, -0.00223004, 1, 0, 0.496773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376349,-99) , 
3, 4.55588, 0, 0, 0.489956,-99) , 
6, -0.23811, 1, 0, 0.502404,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0282605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463337,-99) , 
12, -1.38831, 0, 0, 0.495629,-99) , 
11, -4.78429, 1, 0, 0.498017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440052,-99) , 
2, -0.219523, 0, 0, 0.495932,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0304642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.498095, 1, 1, 0.51207,-99) , 
NN(
0, 
0, 
-1, -0.0848268, 0, -1, 0.482907,-99) , 
3, 3.04578, 0, 0, 0.503551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440382,-99) , 
12, -2.66864, 0, 0, 0.501234,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0297192);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.79195, 1, 1, 0.550677,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491891,-99) , 
11, -4.16246, 1, 0, 0.495946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432135,-99) , 
12, -2.66864, 0, 0, 0.493825,-99) , 
8, 10.1295, 0, 0, 0.497258,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0345462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.105456, 1, 1, 0.559084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499821,-99) , 
3, 2.5079, 0, 0, 0.537317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496311,-99) , 
11, -2.30052, 0, 0, 0.503418,-99) , 
NN(
0, 
0, 
-1, -2.02944, 0, -1, 0.477024,-99) , 
12, 0.0914826, 1, 0, 0.495284,-99) , 
1, 0.00458981, 0, 0, 0.500837,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0441283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.04899, 0, 1, 0.586597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460039,-99) , 
11, 0.422606, 0, 0, 0.490884,-99) , 
12, 1.47063, 1, 0, 0.531854,-99) , 
NN(
NN(
0, 
0, 
-1, -0.483126, 1, 1, 0.51021,-99) , 
NN(
0, 
0, 
-1, -0.681292, 1, -1, 0.465093,-99) , 
3, 3.12266, 0, 0, 0.50144,-99) , 
11, -1.29918, 0, 0, 0.506129,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0380633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.09444, 1, 1, 0.567645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453122,-99) , 
12, -0.954521, 1, 0, 0.510355,-99) , 
10, 0.141771, 0, 0, 0.539815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491616,-99) , 
11, -1.22641, 0, 0, 0.496363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431893,-99) , 
12, -2.71692, 0, 0, 0.494031,-99) , 
1, -0.00464865, 1, 0, 0.499741,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0379061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497215,-99) , 
11, -2.52494, 0, 0, 0.508725,-99) , 
5, 0.999526, 1, 0, 0.512115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48025,-99) , 
10, 0.999842, 0, 0, 0.495807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435419,-99) , 
6, 0.713934, 1, 0, 0.481632,-99) , 
4, 4.42151, 1, 0, 0.506057,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0540848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473404,-99) , 
6, -0.351562, 1, 0, 0.51103,-99) , 
8, 6.04974, 0, 0, 0.520772,-99) , 
NN(
NN(
0, 
0, 
-1, -2.55176, 0, 1, 0.509583,-99) , 
NN(
0, 
0, 
-1, 0.782299, 1, -1, 0.453671,-99) , 
12, -0.0445314, 1, 0, 0.496338,-99) , 
6, 0.238071, 1, 0, 0.509704,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0415065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495776,-99) , 
3, 4.52316, 0, 0, 0.507707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437652,-99) , 
5, 0.999048, 0, 0, 0.505184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.323647,-99) , 
10, -1.31812, 1, 0, 0.459284,-99) , 
12, -2.26411, 0, 0, 0.501846,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0507309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.00493, 0, 1, 0.514127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341062,-99) , 
6, -0.428689, 1, 0, 0.470739,-99) , 
12, 1.05922, 1, 0, 0.507388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470309,-99) , 
9, -951.286, 0, 0, 0.524893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294961,-99) , 
10, -0.917572, 1, 0, 0.45719,-99) , 
12, -1.99955, 0, 0, 0.501852,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0545599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.88928, 0, 1, 0.547106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438619,-99) , 
6, -0.778761, 1, 0, 0.477923,-99) , 
3, 3.54584, 0, 0, 0.518729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493309,-99) , 
11, -3.37459, 1, 0, 0.497077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275109,-99) , 
12, -1.34079, 0, 0, 0.41865,-99) , 
12, -1.04743, 0, 0, 0.486098,-99) , 
10, -0.140633, 1, 0, 0.497154,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0478397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492319,-99) , 
3, 4.48025, 0, 0, 0.511169,-99) , 
10, 1.5728, 0, 0, 0.518918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489493,-99) , 
3, 5.14658, 0, 0, 0.500893,-99) , 
NN(
0, 
0, 
-1, 0.0114058, 1, -1, 0.474438,-99) , 
6, 0.142803, 1, 0, 0.486769,-99) , 
1, -0.00178541, 1, 0, 0.496566,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0431958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.23314, 1, 1, 0.551254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450607,-99) , 
12, -1.75511, 0, 0, 0.507671,-99) , 
10, -1.28495, 1, 0, 0.510894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451745,-99) , 
2, 0.214817, 1, 0, 0.508628,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0263017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494801,-99) , 
1, -0.005578, 1, 0, 0.499235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405138,-99) , 
1, 0.0113546, 1, 0, 0.496486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438734,-99) , 
12, 2.19903, 1, 0, 0.494225,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0299454);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.809433, 0, 1, 0.533794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498704,-99) , 
3, 6.57727, 0, 0, 0.504472,-99) , 
NN(
0, 
0, 
-1, 0.511241, 1, -1, 0.480793,-99) , 
6, 0.428503, 1, 0, 0.495763,-99) , 
2, 0.0724048, 0, 0, 0.501763,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0601291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495775,-99) , 
3, 4.45355, 0, 0, 0.535604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489495,-99) , 
11, -1.55918, 0, 0, 0.498766,-99) , 
10, -0.142869, 1, 0, 0.507764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4589,-99) , 
12, -2.844, 0, 0, 0.531164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282273,-99) , 
10, -0.737612, 1, 0, 0.475577,-99) , 
12, -1.89719, 0, 0, 0.503555,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0553563);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45752,-99) , 
5, 0.999819, 0, 0, 0.511795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291543,-99) , 
10, -0.314756, 1, 0, 0.482022,-99) , 
12, -1.47007, 0, 0, 0.505414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430691,-99) , 
5, 0.999048, 0, 0, 0.502929,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0586377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474943,-99) , 
9, -951.286, 0, 0, 0.502619,-99) , 
3, 4.91644, 0, 0, 0.512049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58776,-99) , 
NN(
0, 
0, 
-1, -2.26676, 0, -1, 0.482543,-99) , 
10, -1.27463, 1, 0, 0.488643,-99) , 
6, 0.0475562, 1, 0, 0.499971,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0440293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.09242, 0, 1, 0.533206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394148,-99) , 
12, 1.02309, 1, 0, 0.501048,-99) , 
6, -0.237691, 1, 0, 0.510974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533773,-99) , 
NN(
0, 
0, 
-1, -0.939131, 1, -1, 0.43981,-99) , 
3, 1.83017, 0, 0, 0.473712,-99) , 
3, 2.06594, 0, 0, 0.506034,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0639826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431515,-99) , 
6, -0.201888, 1, 0, 0.503832,-99) , 
3, 4.9145, 0, 0, 0.514564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487218,-99) , 
13, 7.52375, 0, 0, 0.531689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461656,-99) , 
1, -0.00193777, 1, 0, 0.476051,-99) , 
2, -0.0677683, 1, 0, 0.485973,-99) , 
6, 0.0475811, 1, 0, 0.499547,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0490116);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497737,-99) , 
10, -0.704706, 1, 0, 0.506907,-99) , 
6, 0.0555702, 1, 0, 0.512907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479057,-99) , 
3, 3.67839, 0, 0, 0.489312,-99) , 
NN(
0, 
0, 
-1, 4.48171, 0, -1, 0.423422,-99) , 
6, -0.269098, 1, 0, 0.479377,-99) , 
3, 4.98622, 0, 0, 0.497542,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0284933);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497291,-99) , 
3, 6.9964, 0, 0, 0.505632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431501,-99) , 
12, 2.26836, 1, 0, 0.502503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434169,-99) , 
12, -2.55987, 0, 0, 0.499393,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0492207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.81002, 1, 1, 0.514449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368653,-99) , 
10, -0.567353, 1, 0, 0.472058,-99) , 
12, -1.64829, 0, 0, 0.505751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469027,-99) , 
8, 2.20297, 0, 0, 0.498357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347141,-99) , 
6, -0.238253, 1, 0, 0.471587,-99) , 
12, 1.02362, 1, 0, 0.500905,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0345552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.24933, 0, 1, 0.508637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33642,-99) , 
10, -0.945067, 1, 0, 0.468448,-99) , 
12, -2.05506, 0, 0, 0.504038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506562,-99) , 
NN(
0, 
0, 
-1, 1.78214, 1, -1, 0.417935,-99) , 
11, 0.138255, 0, 0, 0.458493,-99) , 
12, 1.41623, 1, 0, 0.49965,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0581992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489601,-99) , 
3, 5.47833, 0, 0, 0.519379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483573,-99) , 
11, -1.58367, 0, 0, 0.493295,-99) , 
10, -0.140935, 1, 0, 0.500077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429769,-99) , 
12, -2.80011, 0, 0, 0.493339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312132,-99) , 
10, -0.899878, 1, 0, 0.443608,-99) , 
12, -2.00476, 0, 0, 0.493797,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0452352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43502,-99) , 
5, 0.999797, 0, 0, 0.506681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426644,-99) , 
5, 0.999525, 0, 0, 0.502648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412684,-99) , 
13, 4.55105, 0, 0, 0.501621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375649,-99) , 
10, -0.541422, 1, 0, 0.471496,-99) , 
12, -1.6247, 0, 0, 0.497061,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0594314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.147802, 1, 1, 0.521761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473539,-99) , 
6, -0.422537, 1, 0, 0.496801,-99) , 
3, 6.48841, 0, 0, 0.505452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435538,-99) , 
12, -2.46611, 0, 0, 0.508625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293054,-99) , 
10, -0.370183, 1, 0, 0.473867,-99) , 
12, -1.56604, 0, 0, 0.499472,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0309641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593873,-99) , 
NN(
0, 
0, 
-1, 0.904725, 1, -1, 0.495187,-99) , 
11, -4.13468, 1, 0, 0.498748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459125,-99) , 
3, 6.12976, 0, 0, 0.498102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361123,-99) , 
10, -0.872967, 1, 0, 0.456419,-99) , 
12, -1.9024, 0, 0, 0.493457,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0398334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.01799, 0, 1, 0.56294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497162,-99) , 
5, 0.999524, 1, 0, 0.502129,-99) , 
10, 1.53695, 0, 0, 0.507069,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463228,-99) , 
3, 2.20806, 0, 0, 0.484069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357853,-99) , 
6, -0.143159, 1, 0, 0.457695,-99) , 
12, 0.814163, 1, 0, 0.498557,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0503956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457015,-99) , 
12, 0.168654, 1, 0, 0.497618,-99) , 
6, -0.489142, 1, 0, 0.504281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459825,-99) , 
3, 1.91352, 0, 0, 0.491844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383999,-99) , 
3, 2.73946, 0, 0, 0.433379,-99) , 
6, -0.754427, 1, 0, 0.475717,-99) , 
3, 3.04814, 0, 0, 0.496195,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0264082);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450979,-99) , 
12, -2.19077, 0, 0, 0.500211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44547,-99) , 
12, 2.01494, 1, 0, 0.497476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434652,-99) , 
1, 0.0103564, 1, 0, 0.495152,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0394511);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483121,-99) , 
3, 3.03032, 0, 0, 0.498702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414181,-99) , 
5, 0.999048, 0, 0, 0.495929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475691,-99) , 
10, -1.58127, 1, 0, 0.506486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351746,-99) , 
10, -0.872967, 1, 0, 0.457289,-99) , 
12, -1.9024, 0, 0, 0.491058,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0179376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499077, 1, 1, 0.540821,-99) , 
NN(
0, 
0, 
-1, -1.77204, 0, -1, 0.495146,-99) , 
11, -4.37934, 1, 0, 0.498352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429652,-99) , 
12, -2.87587, 0, 0, 0.496619,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0226065);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.5451,-99) , 
NN(
0, 
0, 
-1, -1.78255, 0, -1, 0.493576,-99) , 
10, 2.14292, 0, 0, 0.496309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406885,-99) , 
5, 0.999048, 0, 0, 0.493324,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0431891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.47373, 0, 1, 0.52783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473847,-99) , 
11, -2.86822, 0, 0, 0.492096,-99) , 
6, 0.428491, 1, 0, 0.516988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532265,-99) , 
NN(
0, 
0, 
-1, -1.8518, 0, -1, 0.482094,-99) , 
10, -1.28092, 1, 0, 0.485681,-99) , 
1, -0.00141849, 1, 0, 0.496197,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0414756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462257,-99) , 
12, -1.25134, 0, 0, 0.503374,-99) , 
11, -4.00213, 1, 0, 0.507137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491796,-99) , 
11, -4.14448, 0, 0, 0.510804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354976,-99) , 
10, -0.624708, 1, 0, 0.471782,-99) , 
12, -1.708, 0, 0, 0.501485,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0357972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.6061, 0, 1, 0.512386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373511,-99) , 
6, 0.809305, 1, 0, 0.49042,-99) , 
12, -0.17116, 1, 0, 0.502936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356345,-99) , 
10, -1.32864, 1, 0, 0.460688,-99) , 
12, -2.25995, 0, 0, 0.499827,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0362794);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488311,-99) , 
12, 1.05351, 1, 0, 0.512039,-99) , 
NN(
0, 
0, 
-1, 0.482597, 1, -1, 0.487033,-99) , 
11, -1.91, 0, 0, 0.493745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424812,-99) , 
5, 0.999048, 0, 0, 0.491433,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0396934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484055,-99) , 
3, 5.51314, 0, 0, 0.496695,-99) , 
10, 2.03252, 0, 0, 0.500551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456446,-99) , 
0, 0.499996, 0, 0, 0.478642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372264,-99) , 
6, -0.619071, 1, 0, 0.456559,-99) , 
12, 1.09393, 1, 0, 0.494814,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0237117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493016,-99) , 
0, 0.500945, 1, 0, 0.545872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446301,-99) , 
12, -1.48187, 0, 0, 0.495918,-99) , 
11, -4.08537, 1, 0, 0.500802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443759,-99) , 
12, -2.55987, 0, 0, 0.498218,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0529265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493801,-99) , 
3, 4.48889, 0, 0, 0.517801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362045,-99) , 
10, -0.964867, 1, 0, 0.478602,-99) , 
12, -2.04231, 0, 0, 0.508935,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.491423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346587,-99) , 
11, -3.59348, 1, 0, 0.420442,-99) , 
12, -0.866472, 0, 0, 0.481961,-99) , 
10, 0.143713, 1, 0, 0.493805,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0558079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439674,-99) , 
6, -0.75084, 1, 0, 0.49558,-99) , 
3, 2.91019, 0, 0, 0.510953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483189,-99) , 
6, -0.305916, 1, 0, 0.488194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400632,-99) , 
3, 3.71223, 0, 0, 0.482598,-99) , 
6, -0.523834, 1, 0, 0.491361,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0370541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495035,-99) , 
12, 2.03697, 1, 0, 0.534148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478894,-99) , 
6, -0.142966, 1, 0, 0.489061,-99) , 
2, 0.21694, 0, 0, 0.491974,-99) , 
11, -0.590582, 0, 0, 0.495653,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0420838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493606,-99) , 
2, 0.0442853, 1, 0, 0.545272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45944,-99) , 
12, -2.06318, 0, 0, 0.501351,-99) , 
1, 0.00315096, 0, 0, 0.509954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5109,-99) , 
NN(
0, 
0, 
-1, -0.953074, 1, -1, 0.438694,-99) , 
3, 1.77033, 0, 0, 0.470717,-99) , 
3, 2.05214, 0, 0, 0.504905,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0438768);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.9868, 1, 1, 0.536917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480653,-99) , 
12, -0.288294, 1, 0, 0.496443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367969,-99) , 
10, -0.789376, 1, 0, 0.4539,-99) , 
12, -1.78741, 0, 0, 0.492657,-99) , 
11, -4.59518, 1, 0, 0.495524,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0391724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495355,-99) , 
10, -0.24697, 1, 0, 0.508691,-99) , 
NN(
0, 
0, 
-1, -0.239835, 1, -1, 0.486321,-99) , 
13, 5.32229, 0, 0, 0.497951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37446,-99) , 
11, -4.85243, 1, 0, 0.459763,-99) , 
12, -2.28251, 0, 0, 0.495259,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0512323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.50941, 1, 1, 0.517711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414323,-99) , 
5, 0.999525, 0, 0, 0.512762,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485046,-99) , 
11, -3.56867, 0, 0, 0.501034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412403,-99) , 
10, -0.024647, 1, 0, 0.485528,-99) , 
12, -1.11662, 0, 0, 0.504303,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0423784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491422,-99) , 
9, -951.286, 0, 0, 0.546349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410417,-99) , 
3, 4.27639, 0, 0, 0.50299,-99) , 
6, -0.371667, 1, 0, 0.509113,-99) , 
NN(
0, 
0, 
-1, -0.744731, 1, -1, 0.475718,-99) , 
8, 3.0566, 0, 0, 0.500719,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0494436);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489145,-99) , 
3, 4.49843, 0, 0, 0.510365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463286,-99) , 
11, -2.55294, 0, 0, 0.487166,-99) , 
10, 0.144526, 1, 0, 0.496769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336039,-99) , 
10, -1.52824, 1, 0, 0.43985,-99) , 
12, -2.43955, 0, 0, 0.493583,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0341051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.766122, 1, 1, 0.548612,-99) , 
NN(
0, 
0, 
-1, 0.428198, 1, -1, 0.488611,-99) , 
3, 8.36268, 0, 0, 0.493406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372942,-99) , 
8, 10.5039, 0, 0, 0.447335,-99) , 
13, 10.1084, 1, 0, 0.490483,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0530931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443184,-99) , 
6, 0.00216538, 1, 0, 0.503561,-99) , 
3, 5.75813, 0, 0, 0.511295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481003,-99) , 
10, 1.67576, 0, 0, 0.48837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370891,-99) , 
12, 0.650782, 1, 0, 0.478926,-99) , 
6, 0.238036, 1, 0, 0.496802,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0513931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.257964, 1, 1, 0.544818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428237,-99) , 
6, -0.713347, 1, 0, 0.495318,-99) , 
3, 3.49636, 0, 0, 0.523472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461712,-99) , 
12, -2.43486, 0, 0, 0.514198,-99) , 
NN(
0, 
0, 
-1, -1.37604, 0, -1, 0.483922,-99) , 
10, -0.428566, 1, 0, 0.491409,-99) , 
1, 0.00236311, 0, 0, 0.499921,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.034591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.65125, 1, 1, 0.510894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368761,-99) , 
10, -0.163222, 1, 0, 0.487104,-99) , 
12, -1.29367, 0, 0, 0.504835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451256,-99) , 
2, -0.21361, 0, 0, 0.502784,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0434512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404631,-99) , 
5, 0.999905, 0, 0, 0.50061,-99) , 
3, 6.97497, 0, 0, 0.506178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476619,-99) , 
5, 0.999524, 1, 0, 0.488949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386607,-99) , 
12, 0.663789, 1, 0, 0.480609,-99) , 
6, 0.523779, 1, 0, 0.497663,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0386861);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.25136, 1, 1, 0.538023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490043,-99) , 
11, 0.566933, 0, 0, 0.492961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292586,-99) , 
10, -0.644846, 1, 0, 0.435372,-99) , 
12, -1.79158, 0, 0, 0.487615,-99) , 
11, -4.63354, 1, 0, 0.490474,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0524084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.22664, 0, 1, 0.558885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424823,-99) , 
3, 4.2477, 0, 0, 0.499094,-99) , 
6, -0.49126, 1, 0, 0.506887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462809,-99) , 
3, 1.83687, 0, 0, 0.490412,-99) , 
NN(
0, 
0, 
-1, 2.22787, 0, -1, 0.437967,-99) , 
6, -0.864898, 1, 0, 0.469864,-99) , 
3, 2.53931, 0, 0, 0.498805,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0371436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452429,-99) , 
12, -2.41265, 0, 0, 0.502675,-99) , 
6, 0.360607, 1, 0, 0.51201,-99) , 
NN(
0, 
0, 
-1, -1.58813, 0, -1, 0.481792,-99) , 
3, 6.00274, 0, 0, 0.494959,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0428704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.48296, 0, 1, 0.513081,-99) , 
NN(
0, 
0, 
-1, -1.97991, 0, -1, 0.485201,-99) , 
12, 0.0312033, 1, 0, 0.502304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445096,-99) , 
12, -2.64105, 0, 0, 0.496353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307214,-99) , 
10, -0.899878, 1, 0, 0.448476,-99) , 
12, -2.00476, 0, 0, 0.496468,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0551724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489898,-99) , 
6, -0.904756, 1, 0, 0.495924,-99) , 
11, -3.74305, 1, 0, 0.49979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460482,-99) , 
12, -1.89832, 0, 0, 0.48918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312155,-99) , 
10, -0.240829, 1, 0, 0.459506,-99) , 
12, -1.40304, 0, 0, 0.49044,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0378906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494573,-99) , 
1, 0.00321387, 0, 0, 0.508537,-99) , 
NN(
0, 
0, 
-1, -0.493495, 1, -1, 0.485012,-99) , 
3, 4.03906, 0, 0, 0.499829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428708,-99) , 
1, 0.0103564, 1, 0, 0.497121,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0442363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57141, 0, 1, 0.51222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325067,-99) , 
12, 0.367569, 1, 0, 0.48077,-99) , 
6, 0.714204, 1, 0, 0.506167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424808,-99) , 
6, 0.0486545, 0, 0, 0.500117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378152,-99) , 
10, -0.921554, 1, 0, 0.466977,-99) , 
12, -1.99955, 0, 0, 0.501827,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0372466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45733,-99) , 
12, -1.72061, 0, 0, 0.501129,-99) , 
11, -5.01963, 1, 0, 0.503331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414447,-99) , 
6, -0.904797, 1, 0, 0.464448,-99) , 
12, 1.33544, 1, 0, 0.499436,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.045646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434344,-99) , 
11, -3.74382, 1, 0, 0.522371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483801,-99) , 
6, -0.142874, 1, 0, 0.494641,-99) , 
NN(
0, 
0, 
-1, -2.1985, 0, -1, 0.455814,-99) , 
12, -1.19963, 0, 0, 0.485095,-99) , 
10, -1.28311, 1, 0, 0.487794,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0274612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 1, 1, 0.552641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492656,-99) , 
10, 2.42892, 0, 0, 0.494918,-99) , 
3, 8.88219, 0, 0, 0.498583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428592,-99) , 
13, 11.0932, 1, 0, 0.496453,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0401918);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483376,-99) , 
3, 2.52487, 0, 0, 0.545308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486265,-99) , 
11, -2.48473, 0, 0, 0.495915,-99) , 
1, -0.00445233, 1, 0, 0.501937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447822,-99) , 
12, 2.24389, 1, 0, 0.499672,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0493258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420832,-99) , 
12, 0.905132, 1, 0, 0.504986,-99) , 
6, -0.401577, 1, 0, 0.510114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478791,-99) , 
3, 2.361, 0, 0, 0.496092,-99) , 
NN(
0, 
0, 
-1, 3.36087, 0, -1, 0.432625,-99) , 
6, -0.660679, 1, 0, 0.480871,-99) , 
3, 3.52996, 0, 0, 0.500254,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0198299);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457156,-99) , 
12, 0.754207, 1, 0, 0.496384,-99) , 
11, -0.0561419, 0, 0, 0.498869,-99) , 
10, 2.42837, 0, 0, 0.500647,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0248721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497537,-99) , 
11, -3.87606, 1, 0, 0.501518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337,-99) , 
10, -0.387249, 1, 0, 0.474338,-99) , 
12, -1.56604, 0, 0, 0.496097,-99) , 
10, 2.4288, 0, 0, 0.497859,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0362151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449427,-99) , 
8, 7.10006, 0, 0, 0.498653,-99) , 
12, -1.91804, 0, 0, 0.526761,-99) , 
NN(
NN(
0, 
0, 
-1, -3.1668, 1, 1, 0.50706,-99) , 
NN(
0, 
0, 
-1, 0.447682, 1, -1, 0.480071,-99) , 
12, -0.778428, 0, 0, 0.498473,-99) , 
11, -4.08019, 1, 0, 0.502361,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0436425);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439194,-99) , 
5, 0.999905, 0, 0, 0.514179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386809,-99) , 
12, 0.379915, 1, 0, 0.487599,-99) , 
6, 0.619019, 1, 0, 0.506591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439604,-99) , 
3, 1.5573, 0, 0, 0.504694,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0493015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456428,-99) , 
11, -4.12761, 1, 0, 0.527449,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475827,-99) , 
3, 5.86552, 0, 0, 0.488843,-99) , 
NN(
0, 
0, 
-1, 9.34064, 0, -1, 0.449268,-99) , 
13, 9.43611, 1, 0, 0.484751,-99) , 
10, -1.28568, 1, 0, 0.487919,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0404428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487445,-99) , 
11, -4.2115, 1, 0, 0.52457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484334,-99) , 
1, 0.00236311, 0, 0, 0.492109,-99) , 
NN(
0, 
0, 
-1, -0.630736, 1, -1, 0.44706,-99) , 
12, -1.76822, 0, 0, 0.487447,-99) , 
10, -1.28568, 1, 0, 0.490217,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0722963);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481302,-99) , 
7, 0.00305686, 0, 0, 0.503962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364203,-99) , 
7, 0.0128436, 1, 0, 0.498918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458554,-99) , 
0, 0.495251, 0, 0, 0.506651,-99) , 
NN(
0, 
0, 
-1, 0.497141, 0, -1, 0.426347,-99) , 
6, -0.864898, 1, 0, 0.474444,-99) , 
3, 2.56106, 0, 0, 0.493458,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0496618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639957,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432459,-99) , 
2, -0.0575635, 0, 0, 0.49976,-99) , 
3, 3.09078, 0, 0, 0.512931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497194,-99) , 
10, -0.407643, 1, 0, 0.516202,-99) , 
NN(
0, 
0, 
-1, 6.42091, 0, -1, 0.480429,-99) , 
1, -0.00214152, 1, 0, 0.488737,-99) , 
6, -0.523832, 1, 0, 0.496239,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0378632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.417858, 1, 1, 0.519995,-99) , 
NN(
0, 
0, 
-1, -0.387382, 1, -1, 0.489463,-99) , 
8, 4.35623, 0, 0, 0.507776,-99) , 
NN(
0, 
0, 
-1, -1.4962, 1, -1, 0.438692,-99) , 
12, -2.39053, 0, 0, 0.50362,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0258444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.515951, 1, 1, 0.524424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44389,-99) , 
12, -1.80565, 0, 0, 0.494769,-99) , 
3, 7.51293, 0, 0, 0.501811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404984,-99) , 
12, -2.82568, 0, 0, 0.499246,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0330084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.76532, 1, 1, 0.506636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327147,-99) , 
10, -0.300126, 1, 0, 0.484908,-99) , 
12, -1.47638, 0, 0, 0.501824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433642,-99) , 
12, 2.04072, 1, 0, 0.498556,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0572841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.321611, 1, 1, 0.561971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446287,-99) , 
4, 1.06517, 0, 0, 0.491327,-99) , 
3, 3.76952, 0, 0, 0.506672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434077,-99) , 
12, 0.412529, 1, 0, 0.501982,-99) , 
NN(
0, 
0, 
-1, 5.23675, 0, -1, 0.462978,-99) , 
3, 7.20137, 0, 0, 0.483644,-99) , 
6, -0.0476643, 1, 0, 0.494022,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0498558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0556117, 1, 1, 0.547322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430107,-99) , 
6, -0.374647, 1, 0, 0.490764,-99) , 
3, 4.64518, 0, 0, 0.505025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485717,-99) , 
11, -2.42542, 0, 0, 0.511384,-99) , 
NN(
0, 
0, 
-1, 8.70743, 1, -1, 0.47179,-99) , 
8, 9.56559, 0, 0, 0.480936,-99) , 
6, 0.333281, 1, 0, 0.494982,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0310652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367989,-99) , 
7, 0.0125763, 1, 0, 0.497732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443397,-99) , 
9, -951.286, 0, 0, 0.472305,-99) , 
3, 2.06243, 0, 0, 0.494553,-99) , 
NN(
0, 
0, 
-1, 0.505797, 0, -1, 0.465071,-99) , 
0, 0.503802, 1, 0, 0.491484,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0533361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39918,-99) , 
6, 0.0471223, 1, 0, 0.47869,-99) , 
12, 0.874039, 1, 0, 0.52955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478563,-99) , 
3, 4.50495, 0, 0, 0.496292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39795,-99) , 
11, -2.29927, 0, 0, 0.458343,-99) , 
10, 1.16326, 1, 0, 0.49038,-99) , 
10, 1.85714, 0, 0, 0.493966,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0385241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488278,-99) , 
12, -1.50942, 0, 0, 0.504422,-99) , 
NN(
0, 
0, 
-1, -2.60794, 0, -1, 0.47553,-99) , 
10, 0.714118, 1, 0, 0.494104,-99) , 
NN(
0, 
0, 
-1, 10.8497, 0, -1, 0.437128,-99) , 
13, 10.1084, 1, 0, 0.490382,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0513809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.435715, 1, 1, 0.573604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44763,-99) , 
6, -0.688596, 1, 0, 0.490009,-99) , 
3, 3.39233, 0, 0, 0.506761,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470473,-99) , 
10, 0.436887, 1, 0, 0.488993,-99) , 
NN(
0, 
0, 
-1, 0.49808, 0, -1, 0.438128,-99) , 
3, 5.03048, 0, 0, 0.483311,-99) , 
6, -0.23811, 1, 0, 0.492647,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0438029);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493682,-99) , 
8, 4.31034, 0, 0, 0.52179,-99) , 
NN(
0, 
0, 
-1, 5.09954, 0, -1, 0.485681,-99) , 
6, -0.200131, 1, 0, 0.494667,-99) , 
NN(
0, 
0, 
-1, -0.799504, 1, -1, 0.466748,-99) , 
3, 2.54758, 0, 0, 0.488537,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0497839);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489309,-99) , 
11, -2.98457, 0, 0, 0.50279,-99) , 
NN(
0, 
0, 
-1, -2.39588, 0, -1, 0.480225,-99) , 
12, -0.469933, 1, 0, 0.490301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455812,-99) , 
3, 5.77992, 0, 0, 0.49788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347806,-99) , 
10, -0.915825, 1, 0, 0.45422,-99) , 
12, -1.99955, 0, 0, 0.486589,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0224905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57141, 0, 1, 0.506863,-99) , 
NN(
0, 
0, 
-1, -2.27808, 0, -1, 0.486891,-99) , 
6, 0.238075, 1, 0, 0.497519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451548,-99) , 
12, 2.31593, 1, 0, 0.495785,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0291281);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.152563, 1, 1, 0.539813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487346,-99) , 
11, -2.90758, 1, 0, 0.534821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487472,-99) , 
3, 5.18114, 0, 0, 0.496641,-99) , 
3, 8.91346, 0, 0, 0.499951,-99) , 
1, -0.00621516, 1, 0, 0.503,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0541187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464932,-99) , 
11, -2.84043, 0, 0, 0.506079,-99) , 
11, -3.35755, 1, 0, 0.510424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423791,-99) , 
12, -2.60482, 0, 0, 0.500532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402517,-99) , 
10, 0.141864, 1, 0, 0.484674,-99) , 
12, -0.952766, 0, 0, 0.501181,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0713954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477102,-99) , 
7, 0.00305678, 0, 0, 0.501908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376411,-99) , 
7, 0.0128432, 1, 0, 0.49757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465741,-99) , 
3, 2.38001, 0, 0, 0.474929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420051,-99) , 
4, 4.61055, 1, 0, 0.467936,-99) , 
8, 3.03774, 0, 0, 0.490111,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.038376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.77787, 0, 1, 0.584925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466358,-99) , 
12, 1.31534, 1, 0, 0.543915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491711,-99) , 
11, -4.79188, 1, 0, 0.494966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407941,-99) , 
1, 0.0103564, 1, 0, 0.491226,-99) , 
10, 1.85693, 0, 0, 0.496091,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0250052);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.92644, 1, 1, 0.56536,-99) , 
NN(
NN(
0, 
0, 
-1, -0.208023, 1, 1, 0.507013,-99) , 
NN(
0, 
0, 
-1, -0.428542, 1, -1, 0.486999,-99) , 
8, 4.35623, 0, 0, 0.499238,-99) , 
10, 2.14333, 0, 0, 0.502968,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0454883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.12008, 0, 1, 0.521555,-99) , 
NN(
0, 
0, 
-1, -0.709019, 1, -1, 0.484399,-99) , 
3, 3.04624, 0, 0, 0.510257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373566,-99) , 
8, 10.4438, 0, 0, 0.454168,-99) , 
13, 10.1084, 1, 0, 0.506489,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0471173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46661,-99) , 
12, -0.852473, 0, 0, 0.50435,-99) , 
11, -3.65895, 1, 0, 0.507298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412496,-99) , 
12, -2.85992, 0, 0, 0.503158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350073,-99) , 
10, -0.176117, 1, 0, 0.479067,-99) , 
12, -1.33047, 0, 0, 0.500355,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0495539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445287,-99) , 
10, 1.89527, 1, 0, 0.496245,-99) , 
12, 1.21792, 1, 0, 0.517361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489726,-99) , 
10, -1.69272, 1, 0, 0.535846,-99) , 
NN(
0, 
0, 
-1, -2.22351, 0, -1, 0.479444,-99) , 
10, -1.28463, 1, 0, 0.483903,-99) , 
11, -1.17155, 0, 0, 0.488628,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0516638);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472015,-99) , 
11, -2.60598, 1, 0, 0.51735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462792,-99) , 
11, -3.04516, 0, 0, 0.494879,-99) , 
10, 0.144967, 1, 0, 0.502842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480265,-99) , 
10, -1.57453, 1, 0, 0.512944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370245,-99) , 
10, -0.867764, 1, 0, 0.467723,-99) , 
12, -1.89719, 0, 0, 0.498478,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0367557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607417,-99) , 
NN(
0, 
0, 
-1, 10.1314, 1, -1, 0.495915,-99) , 
11, -3.59921, 1, 0, 0.501087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475334,-99) , 
10, -1.62672, 1, 0, 0.484891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385828,-99) , 
10, -0.129407, 1, 0, 0.467097,-99) , 
12, -1.24076, 0, 0, 0.491702,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0418204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.5208, 1, 1, 0.534246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47911,-99) , 
10, -0.140935, 0, 0, 0.524191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458304,-99) , 
12, -2.52339, 0, 0, 0.516579,-99) , 
NN(
0, 
0, 
-1, -1.5973, 0, -1, 0.485562,-99) , 
10, -0.428788, 1, 0, 0.493824,-99) , 
11, -1.17537, 0, 0, 0.498083,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0379818);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480041,-99) , 
12, -1.68115, 0, 0, 0.504234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453627,-99) , 
6, -0.238029, 1, 0, 0.472513,-99) , 
10, 1.1357, 1, 0, 0.497631,-99) , 
10, 2.4284, 0, 0, 0.499374,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0522314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451893,-99) , 
12, -2.07145, 0, 0, 0.502756,-99) , 
6, -0.213339, 1, 0, 0.508636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482789,-99) , 
3, 3.25236, 0, 0, 0.493347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39773,-99) , 
6, -0.432059, 1, 0, 0.48192,-99) , 
8, 4.3541, 0, 0, 0.498456,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0395371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48089,-99) , 
0, 0.497137, 0, 0, 0.504067,-99) , 
8, 4.29422, 0, 0, 0.513649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405001,-99) , 
7, 0.00795456, 1, 0, 0.498096,-99) , 
NN(
0, 
0, 
-1, -0.0933, 1, -1, 0.434512,-99) , 
8, 5.4446, 0, 0, 0.490877,-99) , 
6, -0.238131, 1, 0, 0.500053,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0210021);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.73833, 0, 1, 0.524572,-99) , 
NN(
0, 
0, 
-1, -0.216928, 0, -1, 0.490439,-99) , 
11, -4.59872, 1, 0, 0.492572,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0375506);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.13477, 1, 1, 0.511523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435044,-99) , 
12, -2.84412, 0, 0, 0.512682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385501,-99) , 
10, -0.870111, 1, 0, 0.474437,-99) , 
12, -1.89719, 0, 0, 0.50696,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0518998);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486222,-99) , 
10, 0.72873, 1, 0, 0.559708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42557,-99) , 
6, -0.1748, 1, 0, 0.496722,-99) , 
3, 5.06402, 0, 0, 0.50545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486219,-99) , 
12, -0.668276, 0, 0, 0.522843,-99) , 
NN(
0, 
0, 
-1, 0.854668, 1, -1, 0.4697,-99) , 
3, 9.19889, 0, 0, 0.477645,-99) , 
6, 0.238078, 1, 0, 0.492998,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0376537);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.856568, 1, 1, 0.536256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491268,-99) , 
6, -0.610813, 1, 0, 0.499891,-99) , 
NN(
0, 
0, 
-1, 1.00021, 1, -1, 0.472984,-99) , 
3, 2.35253, 0, 0, 0.494527,-99) , 
8, 10.012, 0, 0, 0.497296,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0346496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.69906, 0, 1, 0.514458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475485,-99) , 
6, 0.777602, 1, 0, 0.495536,-99) , 
3, 7.97731, 1, 0, 0.511104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453414,-99) , 
0, 0.48952, 0, 0, 0.509474,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0549851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.91592, 0, 1, 0.565785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4907,-99) , 
5, 0.999524, 1, 0, 0.498428,-99) , 
6, 0.486312, 1, 0, 0.512014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480168,-99) , 
3, 3.18187, 0, 0, 0.494631,-99) , 
NN(
0, 
0, 
-1, 4.82876, 0, -1, 0.467787,-99) , 
6, -0.399939, 1, 0, 0.484681,-99) , 
3, 6.00274, 0, 0, 0.496724,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0363089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49018,-99) , 
3, 4.03878, 0, 0, 0.523545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381809,-99) , 
12, -1.48214, 0, 0, 0.494624,-99) , 
10, -0.428597, 1, 0, 0.501237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420215,-99) , 
12, -2.79366, 0, 0, 0.498854,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0309811);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490837,-99) , 
3, 4.50294, 0, 0, 0.502864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420499,-99) , 
12, -2.1707, 0, 0, 0.499121,-99) , 
11, -4.85455, 1, 0, 0.501075,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0216689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482528,-99) , 
10, 0.433818, 0, 0, 0.526532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496231,-99) , 
10, 2.13935, 0, 0, 0.49899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4287,-99) , 
12, 1.36981, 1, 0, 0.496552,-99) , 
11, -0.489644, 0, 0, 0.498931,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0192355);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.56139, 1, 1, 0.546942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497759,-99) , 
3, 8.06103, 0, 0, 0.501165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455068,-99) , 
13, 10.1033, 1, 0, 0.49907,-99) , 
6, 0.904648, 0, 0, 0.502157,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0552584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43855, 1, 1, 0.521161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436739,-99) , 
10, -0.364107, 1, 0, 0.485685,-99) , 
12, -1.14622, 0, 0, 0.508502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474574,-99) , 
9, -951.286, 0, 0, 0.49559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380613,-99) , 
11, -1.25172, 0, 0, 0.476046,-99) , 
12, 0.953248, 1, 0, 0.50347,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0364374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.66363, 0, 1, 0.577551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470827,-99) , 
10, -1.47551, 0, 0, 0.491085,-99) , 
8, 3.99315, 0, 0, 0.536003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486086,-99) , 
10, 0.524401, 1, 0, 0.497117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396154,-99) , 
12, -2.04917, 0, 0, 0.493764,-99) , 
10, -0.999277, 1, 0, 0.49869,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0214705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.0701, 1, 1, 0.508325,-99) , 
NN(
0, 
0, 
-1, 0.549479, 1, -1, 0.489917,-99) , 
12, -0.661389, 0, 0, 0.500118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426303,-99) , 
5, 0.998572, 0, 0, 0.498261,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.030195);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495749,-99) , 
11, -3.99851, 1, 0, 0.498557,-99) , 
NN(
0, 
0, 
-1, -0.539966, 1, -1, 0.443909,-99) , 
12, -1.62213, 0, 0, 0.491107,-99) , 
11, -4.68312, 1, 0, 0.493774,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0232542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506235,-99) , 
NN(
0, 
0, 
-1, -1.19897, 0, -1, 0.473897,-99) , 
12, 0.965261, 1, 0, 0.501517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403144,-99) , 
1, 0.0119697, 1, 0, 0.498723,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.052474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462012,-99) , 
2, -0.067804, 0, 0, 0.514703,-99) , 
0, 0.492376, 1, 0, 0.524502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484706,-99) , 
6, 0.427481, 1, 0, 0.542562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480547,-99) , 
8, 9.21186, 0, 0, 0.487363,-99) , 
1, -0.00370858, 1, 0, 0.494351,-99) , 
6, -0.714302, 1, 0, 0.501441,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0281026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468597,-99) , 
6, 0.133279, 1, 0, 0.514651,-99) , 
8, 7.67891, 0, 0, 0.537651,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00385, 1, 1, 0.544762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456664,-99) , 
0, 0.504756, 1, 0, 0.498813,-99) , 
11, -0.380389, 0, 0, 0.502602,-99) , 
11, -4.16173, 1, 0, 0.506847,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0360578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498095,-99) , 
13, 5.32229, 0, 0, 0.521048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481049,-99) , 
6, 0.237659, 1, 0, 0.497087,-99) , 
0, 0.495233, 1, 0, 0.503087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432028,-99) , 
5, 0.999048, 0, 0, 0.50066,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0413257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496254,-99) , 
12, -2.17154, 0, 0, 0.554158,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472202,-99) , 
10, -1.23883, 1, 0, 0.490765,-99) , 
3, 7.15351, 0, 0, 0.513905,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.489274,-99) , 
11, -3.40424, 1, 0, 0.496811,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0263998);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472479,-99) , 
2, 0.0542819, 1, 0, 0.525672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497837,-99) , 
10, -1.28534, 1, 0, 0.50203,-99) , 
11, -1.28043, 0, 0, 0.505833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409714,-99) , 
8, 10.5039, 0, 0, 0.465975,-99) , 
13, 10.1033, 1, 0, 0.503197,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0435034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485777,-99) , 
4, 4.09707, 1, 0, 0.514543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481212,-99) , 
6, 0.523745, 0, 0, 0.496938,-99) , 
10, 0.714924, 1, 0, 0.508145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449617,-99) , 
13, 10.9826, 1, 0, 0.506122,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0432163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.211482, 0, 1, 0.512071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453119,-99) , 
12, 2.49291, 1, 0, 0.509676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418909,-99) , 
3, 3.73883, 0, 0, 0.506559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390077,-99) , 
10, -0.174212, 1, 0, 0.488229,-99) , 
12, -1.33047, 0, 0, 0.504389,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0482471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.163733, 1, 1, 0.521574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474715,-99) , 
6, -0.619704, 1, 0, 0.493113,-99) , 
13, 6.21721, 0, 0, 0.502996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470611,-99) , 
13, 9.97764, 1, 0, 0.499582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397516,-99) , 
8, 9.09823, 0, 0, 0.474745,-99) , 
13, 8.78072, 1, 0, 0.498584,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0371078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.498359, 1, 1, 0.516105,-99) , 
NN(
0, 
0, 
-1, -0.739913, 1, -1, 0.483696,-99) , 
3, 2.96888, 0, 0, 0.505586,-99) , 
NN(
0, 
0, 
-1, 0.0121198, 1, -1, 0.468654,-99) , 
13, 8.78072, 1, 0, 0.499804,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0460797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488153,-99) , 
2, -0.0710983, 1, 0, 0.495513,-99) , 
6, -0.358387, 1, 0, 0.50005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477387,-99) , 
9, -951.286, 0, 0, 0.496521,-99) , 
NN(
0, 
0, 
-1, 0.499041, 1, -1, 0.457775,-99) , 
11, -2.20643, 0, 0, 0.48113,-99) , 
3, 3.5436, 0, 0, 0.493723,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0272074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495176,-99) , 
12, -0.508396, 1, 0, 0.504541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429867,-99) , 
1, 0.0103564, 1, 0, 0.501882,-99) , 
NN(
0, 
0, 
-1, 4.11011, 0, -1, 0.459131,-99) , 
0, 0.504757, 1, 0, 0.498896,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0496082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.484887, 0, 1, 0.516481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399847,-99) , 
6, -0.941363, 1, 0, 0.463286,-99) , 
3, 1.81942, 0, 0, 0.506572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48023,-99) , 
10, 1.86895, 0, 0, 0.486389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395685,-99) , 
12, 0.905132, 1, 0, 0.481851,-99) , 
6, -0.142966, 1, 0, 0.492391,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0452752);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.915704, 1, 1, 0.520072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435292,-99) , 
12, 0.674098, 1, 0, 0.513319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448264,-99) , 
6, -0.460097, 1, 0, 0.491332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388276,-99) , 
10, -1.57155, 0, 0, 0.485193,-99) , 
8, 5.01212, 0, 0, 0.501199,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.036973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493578,-99) , 
10, 2.1427, 0, 0, 0.49736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446459,-99) , 
6, 0.904647, 1, 0, 0.494691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427233,-99) , 
12, -2.79614, 0, 0, 0.495747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353344,-99) , 
10, -0.898436, 1, 0, 0.457011,-99) , 
12, -1.99955, 0, 0, 0.490679,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0381762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496448,-99) , 
12, 0.987315, 1, 0, 0.541313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479501,-99) , 
6, 0.306033, 1, 0, 0.498472,-99) , 
10, 1.57188, 0, 0, 0.503849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422999,-99) , 
6, 0.931768, 1, 0, 0.498963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359785,-99) , 
12, 0.32436, 1, 0, 0.480634,-99) , 
6, 0.714204, 1, 0, 0.49895,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0479472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.73112, 0, 1, 0.558898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492631,-99) , 
6, 0.246355, 1, 0, 0.500755,-99) , 
2, 0.071981, 0, 0, 0.510352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494157,-99) , 
11, -0.552541, 0, 0, 0.513231,-99) , 
NN(
0, 
0, 
-1, 2.78214, 0, -1, 0.469111,-99) , 
6, -0.877115, 1, 0, 0.481125,-99) , 
3, 5.03594, 0, 0, 0.496773,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0241056);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450215,-99) , 
12, -2.78761, 0, 0, 0.525707,-99) , 
NN(
0, 
0, 
-1, -2.05441, 0, -1, 0.494541,-99) , 
10, -0.998739, 1, 0, 0.498306,-99) , 
8, 10.8685, 0, 0, 0.500061,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0362669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.48913, 1, 1, 0.511403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467119,-99) , 
11, -1.85406, 0, 0, 0.489637,-99) , 
3, 3.04814, 0, 0, 0.50458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458383,-99) , 
12, -2.80025, 0, 0, 0.506574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366924,-99) , 
10, -0.918697, 1, 0, 0.46736,-99) , 
12, -2.00476, 0, 0, 0.50072,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0200127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.29527, 1, 1, 0.505593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406754,-99) , 
3, 9.26937, 0, 0, 0.461235,-99) , 
13, 10.1033, 1, 0, 0.502542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446891,-99) , 
12, 2.07892, 1, 0, 0.499932,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0175367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476252,-99) , 
8, 7.24588, 1, 0, 0.530321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430994,-99) , 
12, 2.25945, 1, 0, 0.497932,-99) , 
0, 0.492376, 1, 0, 0.501234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446167,-99) , 
5, 0.999048, 0, 0, 0.499374,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0248476);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492484,-99) , 
11, -1.74663, 0, 0, 0.497956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445842,-99) , 
5, 0.999048, 0, 0, 0.496207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447877,-99) , 
12, -2.63105, 0, 0, 0.494391,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0334045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490548,-99) , 
10, 0.152138, 1, 0, 0.500367,-99) , 
6, -0.172929, 1, 0, 0.505155,-99) , 
NN(
0, 
0, 
-1, 4.04736, 1, -1, 0.482281,-99) , 
3, 4.01922, 0, 0, 0.49641,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0446522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.558228, 1, 1, 0.522442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463684,-99) , 
3, 6.72986, 0, 0, 0.516476,-99) , 
NN(
NN(
0, 
0, 
-1, -0.665455, 1, 1, 0.522273,-99) , 
NN(
0, 
0, 
-1, 3.45877, 0, -1, 0.478891,-99) , 
0, 0.49428, 1, 0, 0.487637,-99) , 
8, 6.96252, 0, 0, 0.498765,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0282994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.256, 0, 1, 0.508521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41846,-99) , 
1, 0.0113546, 1, 0, 0.505909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486269,-99) , 
13, 1.7847, 1, 0, 0.508963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399531,-99) , 
10, 1.88688, 1, 0, 0.479971,-99) , 
12, 1.34586, 1, 0, 0.503226,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0322397);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473701,-99) , 
0, 0.504757, 1, 0, 0.509568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45229,-99) , 
13, 10.9826, 1, 0, 0.507518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442232,-99) , 
1, 0.0103564, 1, 0, 0.505055,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0284438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484013,-99) , 
12, -1.58525, 0, 0, 0.505585,-99) , 
NN(
0, 
0, 
-1, 7.25122, 1, -1, 0.471398,-99) , 
0, 0.492378, 0, 0, 0.501826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435031,-99) , 
12, -2.66864, 0, 0, 0.499586,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0392646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485578,-99) , 
12, 1.15928, 1, 0, 0.556993,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490584,-99) , 
12, 1.5389, 0, 0, 0.493806,-99) , 
NN(
0, 
0, 
-1, 0.714325, 1, -1, 0.446271,-99) , 
10, 1.40813, 1, 0, 0.488237,-99) , 
10, 2.14282, 0, 0, 0.492167,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0293868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54287,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.497007,-99) , 
11, -3.75885, 1, 0, 0.499188,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458536,-99) , 
12, -2.18256, 0, 0, 0.494038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350257,-99) , 
10, -0.297299, 1, 0, 0.469679,-99) , 
12, -1.47007, 0, 0, 0.492882,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.018243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14117, 0, 1, 0.503949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448052,-99) , 
0, 0.496186, 1, 0, 0.468421,-99) , 
12, 1.40582, 1, 0, 0.500601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455888,-99) , 
0, 0.490471, 0, 0, 0.49837,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.030661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450067,-99) , 
5, 0.999524, 0, 0, 0.505595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389921,-99) , 
10, -0.0103728, 1, 0, 0.48277,-99) , 
12, -1.13934, 0, 0, 0.498335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450502,-99) , 
12, 2.01494, 1, 0, 0.49596,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.032224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.856403, 1, 1, 0.53379,-99) , 
NN(
0, 
0, 
-1, 9.55426, 1, -1, 0.486876,-99) , 
8, 9.99288, 0, 0, 0.489736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433768,-99) , 
5, 0.999048, 0, 0, 0.487877,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0186064);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496634,-99) , 
0, 0.492105, 1, 0, 0.499946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456331,-99) , 
0, 0.489519, 0, 0, 0.498711,-99) , 
10, 2.42862, 0, 0, 0.500989,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0170398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497984,-99) , 
11, -3.94326, 1, 0, 0.501559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44311,-99) , 
12, -2.42572, 0, 0, 0.499378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436655,-99) , 
10, -1.85702, 0, 0, 0.497739,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0588887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.70391, 1, 1, 0.526643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390637,-99) , 
10, -0.254119, 1, 0, 0.491154,-99) , 
12, -1.38844, 0, 0, 0.515071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487286,-99) , 
10, 1.57226, 0, 0, 0.506751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416404,-99) , 
6, 0.618855, 1, 0, 0.493472,-99) , 
12, 0.194301, 1, 0, 0.50857,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0676509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496575,-99) , 
6, -0.714341, 0, 0, 0.566301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435261,-99) , 
6, -0.619267, 1, 0, 0.512301,-99) , 
12, 1.05684, 1, 0, 0.52804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461034,-99) , 
7, 0.00136983, 0, 0, 0.500803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365711,-99) , 
7, 0.0143893, 1, 0, 0.496197,-99) , 
11, -1.5113, 0, 0, 0.502363,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0393005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.42886, 0, 1, 0.504848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455391,-99) , 
5, 0.999524, 0, 0, 0.502286,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453512,-99) , 
3, 6.0758, 0, 0, 0.492108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35411,-99) , 
10, -0.0964544, 1, 0, 0.470488,-99) , 
12, -1.24076, 0, 0, 0.493622,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0249795);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49607,-99) , 
12, -1.17342, 0, 0, 0.515062,-99) , 
NN(
0, 
0, 
-1, -0.950822, 0, -1, 0.492272,-99) , 
11, -3.50038, 1, 0, 0.497788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461697,-99) , 
12, -2.43955, 0, 0, 0.495907,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0206079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496209,-99) , 
12, 2.21087, 1, 0, 0.528644,-99) , 
NN(
NN(
0, 
0, 
-1, -0.399348, 1, 1, 0.537124,-99) , 
NN(
0, 
0, 
-1, 1.46068, 1, -1, 0.493405,-99) , 
1, -0.00658236, 1, 0, 0.496199,-99) , 
11, -0.361622, 0, 0, 0.498504,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0403274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484018,-99) , 
3, 1.72128, 0, 0, 0.504465,-99) , 
3, 2.3168, 0, 0, 0.518272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475222,-99) , 
6, 0.673465, 1, 0, 0.497659,-99) , 
NN(
0, 
0, 
-1, 2.85162, 0, -1, 0.446105,-99) , 
8, 3.40096, 0, 0, 0.493222,-99) , 
6, -0.714284, 1, 0, 0.499024,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0436136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.8825, 0, 1, 0.5619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379697,-99) , 
10, -1.31598, 1, 0, 0.488988,-99) , 
12, -2.28058, 0, 0, 0.533039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498831,-99) , 
11, -3.40702, 1, 0, 0.502165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352018,-99) , 
10, 0.0345909, 1, 0, 0.464539,-99) , 
12, -1.06135, 0, 0, 0.494928,-99) , 
11, -3.96471, 1, 0, 0.5008,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.024567);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479461,-99) , 
12, -1.71851, 0, 0, 0.501707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41085,-99) , 
11, -3.12834, 1, 0, 0.46296,-99) , 
6, 0.904647, 1, 0, 0.49944,-99) , 
11, 0.533115, 0, 0, 0.501234,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0360145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475041,-99) , 
2, -0.0777504, 0, 0, 0.510078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425796,-99) , 
10, 0.0601805, 1, 0, 0.489149,-99) , 
12, -1.0436, 0, 0, 0.503664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444868,-99) , 
12, -2.66864, 0, 0, 0.501601,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0548633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.218712, 1, 1, 0.516845,-99) , 
NN(
0, 
0, 
-1, -0.755153, 0, -1, 0.461255,-99) , 
10, 0.142899, 0, 0, 0.504009,-99) , 
NN(
NN(
0, 
0, 
-1, 5.11709, 0, 1, 0.549491,-99) , 
NN(
0, 
0, 
-1, -2.25336, 0, -1, 0.470118,-99) , 
10, -1.35598, 1, 0, 0.477833,-99) , 
11, -2.63472, 0, 0, 0.48944,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0257417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494885,-99) , 
12, -2.68074, 0, 0, 0.527205,-99) , 
NN(
0, 
0, 
-1, -2.08514, 0, -1, 0.488221,-99) , 
11, -4.67429, 1, 0, 0.490278,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0439759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46167,-99) , 
12, -0.0152041, 1, 0, 0.499657,-99) , 
6, -0.0164788, 1, 0, 0.505814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457678,-99) , 
10, -0.712023, 0, 0, 0.494257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421567,-99) , 
6, -0.356317, 1, 0, 0.484097,-99) , 
3, 4.51673, 0, 0, 0.496414,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0289789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48958,-99) , 
0, 0.496172, 1, 0, 0.509683,-99) , 
6, 0.747904, 1, 0, 0.52479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444127,-99) , 
10, -1.57064, 0, 0, 0.503595,-99) , 
NN(
0, 
0, 
-1, 6.46256, 0, -1, 0.486879,-99) , 
6, -0.142898, 1, 0, 0.495,-99) , 
3, 8.47096, 0, 0, 0.498544,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0550894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479595,-99) , 
3, 2.56853, 0, 0, 0.508954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450356,-99) , 
11, -4.25965, 1, 0, 0.480886,-99) , 
12, -1.2031, 0, 0, 0.499998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514025,-99) , 
NN(
0, 
0, 
-1, 1.70084, 1, -1, 0.439582,-99) , 
13, 1.82143, 1, 0, 0.465837,-99) , 
12, 1.34586, 1, 0, 0.496477,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0262182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491792,-99) , 
10, 2.14296, 0, 0, 0.494205,-99) , 
5, 0.999524, 1, 0, 0.497062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448784,-99) , 
4, 8.80212, 1, 0, 0.495496,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0664657);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486507,-99) , 
11, -2.86447, 1, 0, 0.517534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385186,-99) , 
10, -1.31636, 1, 0, 0.473716,-99) , 
12, -2.23128, 0, 0, 0.510181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482144,-99) , 
12, -0.456602, 1, 0, 0.490736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38466,-99) , 
12, -0.865889, 0, 0, 0.448561,-99) , 
11, -3.08096, 0, 0, 0.48177,-99) , 
10, 0.143835, 1, 0, 0.494055,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0398974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714042, 0, 1, 0.565447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432812,-99) , 
10, 1.90172, 1, 0, 0.494248,-99) , 
12, 1.42796, 1, 0, 0.526337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492513,-99) , 
11, -1.88529, 0, 0, 0.497099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43061,-99) , 
12, 0.689235, 1, 0, 0.493197,-99) , 
11, -1.38254, 0, 0, 0.498834,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0194403);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.4284, 0, 1, 0.506927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425676,-99) , 
12, -2.55987, 0, 0, 0.50356,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0545796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.917952, 0, 1, 0.526048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437158,-99) , 
9, -951.286, 1, 0, 0.472177,-99) , 
12, 0.12387, 1, 0, 0.515826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472522,-99) , 
3, 1.93673, 0, 0, 0.504232,-99) , 
NN(
0, 
0, 
-1, 0.69784, 1, -1, 0.470701,-99) , 
11, -2.66805, 0, 0, 0.488388,-99) , 
8, 6.97186, 0, 0, 0.498718,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0333458);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.17009, 1, 1, 0.532273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416826,-99) , 
7, 0.00937771, 1, 0, 0.503229,-99) , 
NN(
0, 
0, 
-1, -0.604427, 1, -1, 0.475209,-99) , 
8, 3.93942, 0, 0, 0.495549,-99) , 
6, -0.904763, 1, 0, 0.49944,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0307744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.681539, 1, 1, 0.521318,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.49431,-99) , 
3, 6.2711, 0, 0, 0.501026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448709,-99) , 
9, -951.286, 0, 0, 0.494282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398815,-99) , 
12, 0.367375, 1, 0, 0.481832,-99) , 
6, 0.714204, 1, 0, 0.496931,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0405217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.53812, 0, 1, 0.537418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484921,-99) , 
0, 0.499995, 0, 0, 0.493439,-99) , 
11, -3.87414, 1, 0, 0.498441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48042,-99) , 
12, -2.79582, 0, 0, 0.508351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338713,-99) , 
10, -1.14278, 1, 0, 0.453801,-99) , 
12, -2.19586, 0, 0, 0.494911,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0242882);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.57539, 0, 1, 0.51211,-99) , 
NN(
0, 
0, 
-1, 5.57087, 0, -1, 0.492073,-99) , 
6, -0.0477215, 1, 0, 0.501554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406841,-99) , 
13, 11.1894, 1, 0, 0.499011,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.041018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49521,-99) , 
11, -2.01592, 0, 0, 0.50539,-99) , 
11, -3.60115, 1, 0, 0.509806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482871,-99) , 
10, -1.35416, 1, 0, 0.497645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412382,-99) , 
10, -0.132508, 1, 0, 0.48369,-99) , 
12, -1.24076, 0, 0, 0.50277,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0485998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475819,-99) , 
12, 1.13226, 1, 0, 0.504174,-99) , 
11, -3.58263, 1, 0, 0.507648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467191,-99) , 
12, -2.3707, 0, 0, 0.510578,-99) , 
NN(
0, 
0, 
-1, -1.53517, 0, -1, 0.414631,-99) , 
10, -0.313521, 1, 0, 0.482366,-99) , 
12, -1.23451, 0, 0, 0.500777,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0369987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495544,-99) , 
11, -1.79575, 0, 0, 0.503337,-99) , 
11, -3.90901, 1, 0, 0.50723,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495484,-99) , 
11, -3.87126, 0, 0, 0.506902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292588,-99) , 
10, -0.358761, 1, 0, 0.476224,-99) , 
12, -1.56604, 0, 0, 0.501471,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0285329);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460953,-99) , 
12, -2.55752, 0, 0, 0.507767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446774,-99) , 
5, 0.999048, 0, 0, 0.50587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4311,-99) , 
13, 11.0132, 1, 0, 0.503349,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0421337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48879,-99) , 
12, -0.903179, 0, 0, 0.511557,-99) , 
NN(
0, 
0, 
-1, 0.713683, 1, -1, 0.486755,-99) , 
12, 0.17706, 1, 0, 0.501198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476322,-99) , 
3, 6.16436, 0, 0, 0.498584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307301,-99) , 
12, -1.6469, 0, 0, 0.451828,-99) , 
10, -0.45564, 1, 0, 0.480711,-99) , 
12, -1.24076, 0, 0, 0.495636,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0389073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498764,-99) , 
11, -3.74004, 0, 0, 0.521818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42885,-99) , 
0, 0.496204, 0, 0, 0.482746,-99) , 
11, -2.76464, 1, 0, 0.511995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562527,-99) , 
NN(
0, 
0, 
-1, -1.0132, 0, -1, 0.485837,-99) , 
11, -3.84122, 1, 0, 0.489414,-99) , 
10, -0.141853, 1, 0, 0.497001,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0336952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.08185, 0, 1, 0.556395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45989,-99) , 
12, -2.82369, 0, 0, 0.534404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472764,-99) , 
10, -0.714262, 0, 0, 0.505388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440458,-99) , 
12, -1.74926, 0, 0, 0.50227,-99) , 
11, -4.18568, 1, 0, 0.506026,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0423281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493628,-99) , 
3, 6.59106, 1, 0, 0.556237,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469795,-99) , 
12, -1.97582, 0, 0, 0.501773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469498,-99) , 
0, 0.492378, 1, 0, 0.476036,-99) , 
10, 0.674062, 1, 0, 0.493033,-99) , 
10, 2.14298, 0, 0, 0.49662,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0375061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.47954, 0, 1, 0.549224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47942,-99) , 
11, -3.55735, 1, 0, 0.5254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481701,-99) , 
10, 0.334315, 1, 0, 0.492133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400986,-99) , 
12, -2.04917, 0, 0, 0.489181,-99) , 
10, -0.998602, 1, 0, 0.493409,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0397077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.67721, 0, 1, 0.525465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453997,-99) , 
6, 0.714072, 1, 0, 0.514786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495103,-99) , 
6, 0.245486, 1, 0, 0.500253,-99) , 
NN(
0, 
0, 
-1, 0.497136, 0, -1, 0.475192,-99) , 
3, 5.53741, 0, 0, 0.488265,-99) , 
1, 0.00236311, 0, 0, 0.495339,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0463231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497136, 1, 1, 0.532479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419792,-99) , 
12, 0.46918, 1, 0, 0.491621,-99) , 
3, 7.01264, 1, 0, 0.517125,-99) , 
NN(
NN(
0, 
0, 
-1, 7.48933, 0, 1, 0.513143,-99) , 
NN(
0, 
0, 
-1, -1.49058, 0, -1, 0.478103,-99) , 
10, -0.344624, 1, 0, 0.492872,-99) , 
10, 0.715829, 0, 0, 0.5016,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0428339);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.42849, 0, 1, 0.514631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475847,-99) , 
3, 7.14062, 0, 0, 0.495646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39713,-99) , 
10, -0.140817, 1, 0, 0.478327,-99) , 
12, -1.24076, 0, 0, 0.504936,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0394078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494631,-99) , 
12, 0.755789, 1, 0, 0.52044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495218,-99) , 
4, 4.38789, 0, 0, 0.500848,-99) , 
10, 1.00001, 0, 0, 0.507481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476251,-99) , 
12, -2.37963, 0, 0, 0.504461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372231,-99) , 
10, -0.581798, 1, 0, 0.475474,-99) , 
12, -1.68115, 0, 0, 0.502189,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0378896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.138715, 0, 1, 0.509838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448565,-99) , 
8, 2.25992, 1, 0, 0.479401,-99) , 
10, -0.142804, 0, 0, 0.505072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427996,-99) , 
10, -0.0299455, 1, 0, 0.494277,-99) , 
NN(
0, 
0, 
-1, -0.526776, 1, -1, 0.423405,-99) , 
13, 4.53351, 0, 0, 0.480304,-99) , 
12, -1.15874, 0, 0, 0.497896,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0345936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.89535, 0, 1, 0.559696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466341,-99) , 
0, 0.495231, 0, 0, 0.531967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492291,-99) , 
11, 0.437163, 0, 0, 0.49524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408748,-99) , 
12, -2.05125, 0, 0, 0.492472,-99) , 
10, -0.999983, 1, 0, 0.497163,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0438048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48975,-99) , 
0, 0.49809, 1, 0, 0.501289,-99) , 
11, -3.99851, 1, 0, 0.503763,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466,-99) , 
10, -1.51317, 1, 0, 0.495597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397321,-99) , 
11, -4.14028, 1, 0, 0.465841,-99) , 
12, -1.68115, 0, 0, 0.497601,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0218801);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.29821, 1, 1, 0.529559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495641,-99) , 
10, 2.1427, 0, 0, 0.498572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42467,-99) , 
12, 1.40014, 1, 0, 0.495831,-99) , 
11, -0.343315, 0, 0, 0.498235,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0121559);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.42831, 0, 1, 0.50405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443747,-99) , 
2, 0.214776, 1, 0, 0.501708,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0277616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498109, 0, 1, 0.562073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495497,-99) , 
5, 0.999524, 1, 0, 0.498795,-99) , 
10, 1.85727, 0, 0, 0.503089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470993,-99) , 
0, 0.498078, 0, 0, 0.490919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420357,-99) , 
10, 1.60848, 1, 0, 0.466523,-99) , 
12, 1.34586, 1, 0, 0.499361,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0192815);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470901,-99) , 
12, -1.62288, 0, 0, 0.49837,-99) , 
11, -4.73106, 1, 0, 0.500856,-99) , 
10, 2.4284, 0, 0, 0.502424,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0280492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00808533, 0, 1, 0.506279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361,-99) , 
7, 0.0141497, 1, 0, 0.500675,-99) , 
NN(
0, 
0, 
-1, 0.422609, 0, -1, 0.462382,-99) , 
12, 1.33544, 1, 0, 0.496844,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0282702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478528,-99) , 
5, 0.999977, 1, 0, 0.510922,-99) , 
5, 0.999524, 1, 0, 0.518691,-99) , 
NN(
0, 
0, 
-1, 0.210794, 1, -1, 0.490423,-99) , 
3, 7.94986, 0, 0, 0.495479,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0435868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47182,-99) , 
6, 0.523723, 1, 0, 0.506938,-99) , 
11, -4.00702, 1, 0, 0.51831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484124,-99) , 
0, 0.496187, 0, 0, 0.503946,-99) , 
NN(
0, 
0, 
-1, -0.515795, 1, -1, 0.464609,-99) , 
12, -1.56604, 0, 0, 0.496144,-99) , 
1, -0.00178541, 1, 0, 0.502636,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0308677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497017,-99) , 
10, -1.18985, 1, 0, 0.501261,-99) , 
10, 2.42825, 0, 0, 0.504067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471203,-99) , 
6, 0.854745, 1, 0, 0.496287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374278,-99) , 
11, -2.2443, 1, 0, 0.470716,-99) , 
6, 0.809428, 1, 0, 0.499664,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0381697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.47212, 1, 1, 0.548743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441811,-99) , 
11, -2.84471, 1, 0, 0.497589,-99) , 
9, -951.286, 0, 0, 0.523336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49396,-99) , 
0, 0.495234, 1, 0, 0.500705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393018,-99) , 
12, -1.78311, 0, 0, 0.495823,-99) , 
10, -0.714262, 1, 0, 0.500732,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0406732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448215,-99) , 
12, -2.48337, 0, 0, 0.510153,-99) , 
6, 0.0650878, 1, 0, 0.515428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489769,-99) , 
6, -0.939073, 1, 0, 0.497028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428473,-99) , 
10, -1.57155, 0, 0, 0.493099,-99) , 
3, 5.01885, 0, 0, 0.504995,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0198977);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.11928, 0, 1, 0.506306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47856,-99) , 
2, -0.00216931, 0, 0, 0.502789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426676,-99) , 
10, 1.88481, 1, 0, 0.481338,-99) , 
12, 1.2031, 1, 0, 0.503363,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0345891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481582,-99) , 
2, 0.0736227, 1, 0, 0.513879,-99) , 
NN(
0, 
0, 
-1, 4.53295, 1, -1, 0.489597,-99) , 
0, 0.497138, 0, 0, 0.503996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448357,-99) , 
10, 2.14262, 1, 0, 0.50139,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0481707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.60919, 0, 1, 0.523628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465158,-99) , 
6, -0.895503, 1, 0, 0.491926,-99) , 
3, 2.41583, 0, 0, 0.51197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484175,-99) , 
10, 1.65249, 0, 0, 0.490566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418548,-99) , 
12, 0.633482, 1, 0, 0.484588,-99) , 
6, 0.238071, 1, 0, 0.499679,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0274964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.58054, 1, 1, 0.549925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495312,-99) , 
10, -0.706882, 1, 0, 0.501446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436471,-99) , 
8, 1.72251, 0, 0, 0.498995,-99) , 
6, 0.904672, 0, 0, 0.502254,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0219196);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544646,-99) , 
NN(
NN(
0, 
0, 
-1, -3.34667, 1, 1, 0.505255,-99) , 
NN(
0, 
0, 
-1, 0.146164, 1, -1, 0.483413,-99) , 
12, -0.936216, 0, 0, 0.497624,-99) , 
3, 9.44592, 0, 0, 0.499939,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0170984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.95682, 0, 1, 0.527449,-99) , 
NN(
0, 
0, 
-1, -1.68718, 0, -1, 0.496512,-99) , 
10, -0.700484, 1, 0, 0.501513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446456,-99) , 
10, -1.85702, 0, 0, 0.500097,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0412039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447929,-99) , 
3, 4.19125, 0, 0, 0.508212,-99) , 
6, -0.395277, 1, 0, 0.511877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48614,-99) , 
9, -951.286, 0, 0, 0.507515,-99) , 
NN(
0, 
0, 
-1, 1.70211, 0, -1, 0.472662,-99) , 
10, 0.430885, 0, 0, 0.485605,-99) , 
8, 3.69261, 0, 0, 0.503159,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0468701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472427,-99) , 
3, 9.49103, 0, 0, 0.497039,-99) , 
6, 0.842425, 1, 0, 0.534338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485458,-99) , 
8, 3.03204, 0, 0, 0.501853,-99) , 
NN(
0, 
0, 
-1, 0.432538, 1, -1, 0.477792,-99) , 
6, -0.0478675, 1, 0, 0.490188,-99) , 
3, 8.50099, 0, 0, 0.49542,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0414004);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.62832, 1, 1, 0.546967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493954,-99) , 
6, -0.523813, 1, 0, 0.503642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429454,-99) , 
12, -1.72359, 0, 0, 0.499638,-99) , 
10, -0.71308, 1, 0, 0.507878,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0332317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00005, 1, 1, 0.513949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437047,-99) , 
5, 0.999955, 1, 0, 0.473025,-99) , 
13, 10.1084, 1, 0, 0.511332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456289,-99) , 
5, 0.999048, 0, 0, 0.50945,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0358091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.158629, 1, 1, 0.510157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44933,-99) , 
6, 0.904648, 1, 0, 0.507139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447448,-99) , 
3, 4.67529, 0, 0, 0.503466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406872,-99) , 
10, -0.556227, 1, 0, 0.480874,-99) , 
12, -1.63614, 0, 0, 0.502643,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0395921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48646,-99) , 
0, 0.495233, 1, 0, 0.500875,-99) , 
8, 2.4003, 0, 0, 0.520972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478642,-99) , 
3, 4.59305, 0, 0, 0.500338,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.460956,-99) , 
12, 0.489019, 1, 0, 0.496069,-99) , 
11, -1.28043, 0, 0, 0.499984,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0263166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492062,-99) , 
6, -0.72791, 1, 0, 0.497235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444597,-99) , 
3, 1.55226, 0, 0, 0.495609,-99) , 
NN(
0, 
0, 
-1, -0.837073, 1, -1, 0.452822,-99) , 
6, 0.904661, 1, 0, 0.493218,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0363899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494979,-99) , 
10, 0.0906837, 1, 0, 0.51029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396432,-99) , 
6, 0.809437, 1, 0, 0.491973,-99) , 
12, -0.136432, 1, 0, 0.502209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463713,-99) , 
10, -1.50467, 1, 0, 0.491811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408622,-99) , 
11, -4.4642, 1, 0, 0.460626,-99) , 
12, -1.92837, 0, 0, 0.49727,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0239837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492171,-99) , 
6, -0.523819, 1, 0, 0.497841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437662,-99) , 
1, 0.0121806, 1, 0, 0.496167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437344,-99) , 
13, 10.7079, 1, 0, 0.49395,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0216409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499555,-99) , 
13, 8.77443, 1, 0, 0.524095,-99) , 
NN(
0, 
0, 
-1, 7.83205, 1, -1, 0.495981,-99) , 
3, 7.43617, 0, 0, 0.502296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424518,-99) , 
13, 11.0061, 1, 0, 0.49975,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0217394);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484505,-99) , 
12, -1.15874, 0, 0, 0.499179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435592,-99) , 
8, 10.3208, 1, 0, 0.49738,-99) , 
3, 9.90338, 0, 0, 0.499024,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0316522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.01039, 1, 1, 0.507888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379266,-99) , 
10, -1.12482, 1, 0, 0.469623,-99) , 
12, -2.14578, 0, 0, 0.504208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469938,-99) , 
10, 0.150012, 1, 0, 0.494558,-99) , 
NN(
0, 
0, 
-1, -0.945719, 1, -1, 0.450154,-99) , 
8, 1.95772, 0, 0, 0.473431,-99) , 
8, 2.38773, 0, 0, 0.499404,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0426374);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49076,-99) , 
6, 0.651746, 1, 0, 0.526921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458978,-99) , 
6, -0.79275, 1, 0, 0.488576,-99) , 
3, 3.04238, 0, 0, 0.513953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47885,-99) , 
8, 6.22225, 0, 0, 0.492317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429797,-99) , 
12, -2.32472, 0, 0, 0.488424,-99) , 
1, 0.00149974, 0, 0, 0.497124,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0293401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444924,-99) , 
12, -2.54119, 0, 0, 0.502787,-99) , 
NN(
0, 
0, 
-1, 0.714204, 1, -1, 0.482635,-99) , 
12, 0.00769318, 1, 0, 0.495495,-99) , 
NN(
0, 
0, 
-1, 10.8732, 0, -1, 0.450419,-99) , 
8, 10.2215, 1, 0, 0.493107,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0455783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.29369, 0, 1, 0.530211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458304,-99) , 
13, 1.90525, 0, 0, 0.492885,-99) , 
3, 4.98873, 0, 0, 0.510456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48387,-99) , 
9, -951.286, 0, 0, 0.508439,-99) , 
NN(
0, 
0, 
-1, -0.75478, 0, -1, 0.47008,-99) , 
6, 0.0476188, 1, 0, 0.486093,-99) , 
10, 0.428602, 1, 0, 0.499117,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.034392);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00431483, 0, 1, 0.525002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461602,-99) , 
6, -0.714169, 0, 0, 0.512343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486661,-99) , 
6, -0.619092, 1, 0, 0.493042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419412,-99) , 
0, 0.497137, 1, 0, 0.46041,-99) , 
2, -0.152418, 0, 0, 0.490437,-99) , 
2, 0.071981, 0, 0, 0.49379,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0210023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.39985, 1, 1, 0.505085,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.47788,-99) , 
4, 4.55086, 1, 0, 0.499921,-99) , 
NN(
0, 
0, 
-1, 0.498098, 1, -1, 0.450494,-99) , 
12, 2.00348, 1, 0, 0.497304,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.022237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495816,-99) , 
8, 10.6374, 0, 0, 0.49789,-99) , 
5, 0.999051, 1, 0, 0.500606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508605,-99) , 
NN(
0, 
0, 
-1, 0.491015, 0, -1, 0.454494,-99) , 
6, -0.714336, 1, 0, 0.471111,-99) , 
0, 0.492376, 0, 0, 0.497474,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0177259);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497653,-99) , 
11, -4.27607, 1, 0, 0.500413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442614,-99) , 
12, -2.14067, 0, 0, 0.497557,-99) , 
11, -4.85498, 1, 0, 0.499259,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0482157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464363,-99) , 
12, 0.376803, 1, 0, 0.505597,-99) , 
6, -0.25117, 1, 0, 0.509106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481417,-99) , 
8, 3.25955, 0, 0, 0.495156,-99) , 
NN(
0, 
0, 
-1, -3.19778, 0, -1, 0.432618,-99) , 
6, -0.496296, 1, 0, 0.484964,-99) , 
3, 4.03906, 0, 0, 0.499703,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0336967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.840149, 1, 1, 0.56804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484118,-99) , 
11, -1.19262, 0, 0, 0.500679,-99) , 
1, -0.0010869, 1, 0, 0.525618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494891,-99) , 
0, 0.503802, 0, 0, 0.498068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443176,-99) , 
11, -3.68554, 1, 0, 0.467199,-99) , 
3, 8.38872, 1, 0, 0.494372,-99) , 
10, 1.28617, 0, 0, 0.50064,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0331219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00361085, 0, 1, 0.563239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496325,-99) , 
4, 7.17689, 0, 0, 0.499307,-99) , 
10, 1.85696, 0, 0, 0.504432,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455222,-99) , 
6, 0.877111, 1, 0, 0.491609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377006,-99) , 
12, 0.343084, 1, 0, 0.477369,-99) , 
6, 0.71387, 1, 0, 0.498788,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0273062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76305, 0, 1, 0.565749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455255,-99) , 
13, 3.86355, 1, 0, 0.49126,-99) , 
12, 1.04521, 1, 0, 0.535967,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0092248, 1, 1, 0.530643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465991,-99) , 
12, -2.50199, 0, 0, 0.49971,-99) , 
1, 0.00458981, 0, 0, 0.503884,-99) , 
10, 1.57171, 0, 0, 0.508407,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0304479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.46944, 0, 1, 0.560543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478387,-99) , 
12, -1.47007, 0, 0, 0.501253,-99) , 
10, 2.14282, 0, 0, 0.504537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434848,-99) , 
5, 0.999048, 0, 0, 0.502205,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0312025);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468107,-99) , 
6, -0.904749, 0, 0, 0.506737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453315,-99) , 
0, 0.50598, 0, 0, 0.469569,-99) , 
0, 0.503803, 1, 0, 0.503167,-99) , 
11, -0.00888225, 0, 0, 0.505916,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0267377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495781,-99) , 
6, -0.655341, 1, 0, 0.501971,-99) , 
NN(
0, 
0, 
-1, -2.59791, 1, -1, 0.469276,-99) , 
6, 0.809487, 1, 0, 0.497406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411933,-99) , 
1, -0.0116379, 0, 0, 0.494954,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0179722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497144, 1, 1, 0.548034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534575,-99) , 
NN(
0, 
0, 
-1, 8.43493, 1, -1, 0.494461,-99) , 
0, 0.505708, 0, 0, 0.496145,-99) , 
10, 2.14296, 0, 0, 0.498945,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.017353);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569417,-99) , 
NN(
NN(
0, 
0, 
-1, -4.93687, 1, 1, 0.504689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442045,-99) , 
2, -0.213764, 0, 0, 0.502136,-99) , 
10, 2.42858, 0, 0, 0.504088,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0408169);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 7.01519, 1, 1, 0.544552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483829,-99) , 
10, -0.675578, 1, 0, 0.512051,-99) , 
NN(
0, 
0, 
-1, -0.622934, 0, -1, 0.484222,-99) , 
11, -3.63942, 1, 0, 0.49102,-99) , 
10, 2.1427, 0, 0, 0.493937,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0272147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.40802, 0, 1, 0.513132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488646,-99) , 
4, 2.64901, 0, 0, 0.497907,-99) , 
6, -0.428554, 1, 0, 0.503373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437682,-99) , 
4, 8.96578, 1, 0, 0.501374,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0171251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56306,-99) , 
NN(
0, 
0, 
-1, -0.904756, 0, -1, 0.495363,-99) , 
11, -0.407066, 0, 0, 0.497684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445003,-99) , 
12, 2.21289, 1, 0, 0.49559,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0473895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.5204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476059,-99) , 
2, -0.0057173, 1, 0, 0.50057,-99) , 
6, -0.142892, 1, 0, 0.509186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471003,-99) , 
0, 0.499051, 0, 0, 0.490036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442323,-99) , 
3, 2.57037, 0, 0, 0.479794,-99) , 
2, 0.0689116, 1, 0, 0.504493,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0444604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497699,-99) , 
0, 0.50095, 1, 0, 0.551316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474778,-99) , 
12, -1.43912, 0, 0, 0.498847,-99) , 
6, -0.213885, 1, 0, 0.505383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470622,-99) , 
4, 1.46687, 0, 0, 0.495167,-99) , 
NN(
0, 
0, 
-1, -0.101844, 0, -1, 0.450907,-99) , 
2, -0.0425232, 0, 0, 0.484811,-99) , 
8, 3.70929, 0, 0, 0.49864,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0467967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476009,-99) , 
12, -0.267364, 1, 0, 0.502591,-99) , 
6, -0.169389, 1, 0, 0.508017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482613,-99) , 
3, 3.04648, 0, 0, 0.49181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437602,-99) , 
6, -0.447445, 1, 0, 0.485262,-99) , 
3, 4.03906, 0, 0, 0.499126,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0408316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.33409, 0, 1, 0.537097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432808,-99) , 
10, 1.89544, 1, 0, 0.482845,-99) , 
12, 1.33044, 1, 0, 0.51733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558369,-99) , 
NN(
0, 
0, 
-1, -2.36304, 0, -1, 0.485954,-99) , 
10, -1.67501, 1, 0, 0.489224,-99) , 
11, -2.05549, 0, 0, 0.497597,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0405667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489313,-99) , 
12, -2.16513, 0, 0, 0.544831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470308,-99) , 
6, 0.0219984, 1, 0, 0.501254,-99) , 
3, 7.20715, 0, 0, 0.517439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462896,-99) , 
12, -0.708976, 0, 0, 0.494553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424431,-99) , 
5, 0.999524, 0, 0, 0.491138,-99) , 
11, -3.49443, 1, 0, 0.498437,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0226456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455677,-99) , 
5, 0.999524, 0, 0, 0.500676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454696,-99) , 
0, 0.505707, 1, 0, 0.498973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453731,-99) , 
12, -0.244769, 1, 0, 0.492366,-99) , 
NN(
0, 
0, 
-1, -0.133879, 0, -1, 0.443942,-99) , 
2, 0.140201, 1, 0, 0.469312,-99) , 
2, 0.0722158, 1, 0, 0.494376,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0259202);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.8399, 1, 1, 0.53758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491892,-99) , 
8, 10.449, 0, 0, 0.493953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449084,-99) , 
0, 0.490471, 0, 0, 0.491678,-99) , 
10, 2.14296, 0, 0, 0.494101,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0272562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491377,-99) , 
8, 7.92593, 1, 0, 0.506651,-99) , 
NN(
0, 
0, 
-1, -0.422168, 0, -1, 0.480923,-99) , 
0, 0.493328, 0, 0, 0.503044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435573,-99) , 
13, 10.9778, 1, 0, 0.500852,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0364859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.308075, 1, 1, 0.514652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409211,-99) , 
12, 1.02309, 1, 0, 0.510405,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470449,-99) , 
4, 3.33484, 1, 0, 0.496276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449852,-99) , 
6, -0.62616, 1, 0, 0.488132,-99) , 
8, 3.70283, 0, 0, 0.503036,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0369729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.54898, 1, 1, 0.553082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49597,-99) , 
12, -2.56922, 0, 0, 0.536108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49044,-99) , 
10, -0.706147, 1, 0, 0.495472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436788,-99) , 
8, 1.77981, 0, 0, 0.492504,-99) , 
11, -4.08019, 1, 0, 0.498263,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.037599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392148,-99) , 
12, -2.23885, 0, 0, 0.5004,-99) , 
10, -1.28061, 1, 0, 0.504673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479216,-99) , 
8, 1.83496, 1, 0, 0.487711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437181,-99) , 
10, -1.00005, 0, 0, 0.479993,-99) , 
8, 3.63923, 0, 0, 0.496628,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0220036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497735,-99) , 
11, -4.16173, 1, 0, 0.501201,-99) , 
10, 2.42815, 0, 0, 0.503392,-99) , 
NN(
0, 
0, 
-1, 9.31675, 0, -1, 0.434434,-99) , 
13, 10.1314, 1, 0, 0.498965,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0437995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571743,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472708,-99) , 
8, 1.74946, 0, 0, 0.508671,-99) , 
11, -3.59428, 1, 0, 0.511695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459471,-99) , 
3, 5.4062, 0, 0, 0.510937,-99) , 
NN(
0, 
0, 
-1, -0.279609, 1, -1, 0.449338,-99) , 
11, -3.87991, 1, 0, 0.489325,-99) , 
12, -1.24076, 0, 0, 0.505775,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.02839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.321, 0, 1, 0.53809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458003,-99) , 
12, 1.36234, 1, 0, 0.497596,-99) , 
1, -0.00721094, 1, 0, 0.500323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470977,-99) , 
10, -1.58138, 1, 0, 0.493228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402896,-99) , 
10, -0.872967, 1, 0, 0.466814,-99) , 
12, -1.89719, 0, 0, 0.496294,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0427763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46972,-99) , 
11, -3.22785, 0, 0, 0.499658,-99) , 
3, 5.14658, 0, 0, 0.505418,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48515,-99) , 
10, 0.1521, 1, 0, 0.497621,-99) , 
NN(
0, 
0, 
-1, 0.498072, 1, -1, 0.437766,-99) , 
13, 6.62448, 0, 0, 0.487539,-99) , 
6, 0.142686, 1, 0, 0.496858,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0317786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.06116, 0, 1, 0.561881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46377,-99) , 
10, 0.790852, 1, 0, 0.491979,-99) , 
12, 1.53263, 1, 0, 0.519106,-99) , 
NN(
0, 
0, 
-1, 11.1728, 1, -1, 0.489146,-99) , 
11, -1.12358, 0, 0, 0.493374,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0419836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47159,-99) , 
10, -1.19431, 1, 0, 0.50635,-99) , 
12, -1.66674, 0, 0, 0.523966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495252,-99) , 
12, 1.13679, 1, 0, 0.509921,-99) , 
NN(
0, 
0, 
-1, 0.128811, 1, -1, 0.484583,-99) , 
11, -1.26825, 0, 0, 0.489121,-99) , 
11, -4.00702, 1, 0, 0.494358,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0161602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497748,-99) , 
5, 0.999909, 1, 0, 0.500663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453804,-99) , 
5, 0.999524, 0, 0, 0.498312,-99) , 
8, 10.6477, 0, 0, 0.499914,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0358934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.549599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463103,-99) , 
12, 1.47144, 1, 0, 0.52886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492452,-99) , 
1, -0.00345402, 1, 0, 0.497946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452053,-99) , 
3, 1.81843, 0, 0, 0.471264,-99) , 
3, 2.05359, 0, 0, 0.494411,-99) , 
10, 1.57175, 0, 0, 0.499063,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0252834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486931,-99) , 
11, -4.88521, 1, 0, 0.536355,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0630468, 0, 1, 0.518341,-99) , 
NN(
0, 
0, 
-1, 0.496049, 0, -1, 0.490962,-99) , 
0, 0.493328, 1, 0, 0.494925,-99) , 
11, -4.59723, 1, 0, 0.497392,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0467855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.557096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428138,-99) , 
12, -2.18982, 0, 0, 0.512402,-99) , 
10, -1.23255, 1, 0, 0.517652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487959,-99) , 
0, 0.496184, 1, 0, 0.501814,-99) , 
NN(
0, 
0, 
-1, 8.36836, 0, -1, 0.456455,-99) , 
6, 0.714204, 1, 0, 0.495664,-99) , 
12, -0.157559, 1, 0, 0.508882,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.041266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420608,-99) , 
12, 0.809096, 1, 0, 0.517261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456854,-99) , 
12, -2.52098, 0, 0, 0.513136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423436,-99) , 
10, -1.5687, 0, 0, 0.498839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421572,-99) , 
8, 5.09037, 1, 0, 0.494117,-99) , 
13, 5.32796, 0, 0, 0.504275,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0414814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.71147, 0, 1, 0.530965,-99) , 
NN(
0, 
0, 
-1, -0.809646, 1, -1, 0.476161,-99) , 
11, -3.18651, 1, 0, 0.513021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492493,-99) , 
0, 0.504755, 0, 0, 0.495994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339081,-99) , 
12, -1.37113, 0, 0, 0.433313,-99) , 
12, -1.2014, 0, 0, 0.49093,-99) , 
10, -0.140935, 1, 0, 0.498262,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0417141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489732,-99) , 
6, 0.523737, 1, 0, 0.507395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463173,-99) , 
2, 0.208366, 0, 0, 0.477546,-99) , 
2, 0.0724048, 1, 0, 0.503066,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45245,-99) , 
10, 0.301589, 1, 0, 0.495779,-99) , 
NN(
0, 
0, 
-1, 0.491106, 1, -1, 0.448846,-99) , 
12, -0.124063, 1, 0, 0.476447,-99) , 
0, 0.494281, 0, 0, 0.497809,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0352501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496622,-99) , 
8, 6.24444, 0, 0, 0.507389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312499,-99) , 
10, -0.387211, 1, 0, 0.480348,-99) , 
12, -1.58624, 0, 0, 0.502689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445015,-99) , 
2, -0.213256, 0, 0, 0.500323,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0358749);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.06016, 1, 1, 0.534862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485524,-99) , 
0, 0.49809, 0, 0, 0.538672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489803,-99) , 
4, 8.55516, 0, 0, 0.492324,-99) , 
5, 0.999524, 1, 0, 0.495437,-99) , 
11, -1.29918, 0, 0, 0.501627,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0346079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499884,-99) , 
6, 0.142381, 1, 0, 0.512691,-99) , 
NN(
0, 
0, 
-1, -0.930912, 1, -1, 0.471294,-99) , 
3, 1.87035, 0, 0, 0.508597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466782,-99) , 
12, -1.51023, 0, 0, 0.492799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43301,-99) , 
11, -2.87218, 1, 0, 0.468569,-99) , 
8, 9.42892, 1, 0, 0.5045,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0370268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481545,-99) , 
10, -0.714297, 0, 0, 0.508335,-99) , 
11, -4.13477, 1, 0, 0.510259,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482488,-99) , 
8, 6.88959, 0, 0, 0.51923,-99) , 
NN(
0, 
0, 
-1, -0.77699, 1, -1, 0.425593,-99) , 
10, -1.15436, 1, 0, 0.471375,-99) , 
12, -1.89719, 0, 0, 0.505639,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0351173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48272,-99) , 
0, 0.50285, 1, 0, 0.503512,-99) , 
11, -3.88763, 1, 0, 0.506306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478065,-99) , 
11, -3.94052, 0, 0, 0.501406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414934,-99) , 
10, -0.54323, 1, 0, 0.481985,-99) , 
12, -1.62011, 0, 0, 0.502102,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0284351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495352,-99) , 
3, 8.52281, 0, 0, 0.504795,-99) , 
0, 0.49333, 1, 0, 0.514114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493241,-99) , 
5, 0.999524, 1, 0, 0.495778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454322,-99) , 
10, 0.809892, 1, 0, 0.492253,-99) , 
10, 1.00035, 0, 0, 0.498276,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0294419);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490589,-99) , 
8, 4.84096, 0, 0, 0.506852,-99) , 
NN(
0, 
0, 
-1, -0.736407, 0, -1, 0.489744,-99) , 
10, 0.142789, 1, 0, 0.496711,-99) , 
11, -4.74947, 1, 0, 0.499062,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0165042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498722,-99) , 
2, 0.0319407, 0, 0, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461209,-99) , 
2, -0.21276, 0, 0, 0.501443,-99) , 
11, -4.77544, 1, 0, 0.503505,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0409247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471936,-99) , 
9, -951.287, 0, 0, 0.492838,-99) , 
12, 0.899978, 1, 0, 0.542537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491434,-99) , 
12, 0.0830441, 1, 0, 0.508703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405793,-99) , 
10, -0.541422, 1, 0, 0.48362,-99) , 
12, -1.6247, 0, 0, 0.50398,-99) , 
10, 1.85695, 0, 0, 0.507447,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0321879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.515294,-99) , 
NN(
0, 
0, 
-1, 0.714201, 1, -1, 0.487473,-99) , 
0, 0.495233, 0, 0, 0.508319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445934,-99) , 
13, 10.7732, 1, 0, 0.505967,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0244539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.40175, 0, 1, 0.525328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446549,-99) , 
12, 0.965528, 1, 0, 0.504983,-99) , 
11, -1.17155, 0, 0, 0.507896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465368,-99) , 
2, -0.213865, 0, 0, 0.506122,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0381711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494695,-99) , 
6, -0.97279, 1, 0, 0.501161,-99) , 
3, 3.30457, 0, 0, 0.508426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486085,-99) , 
9, -951.286, 1, 0, 0.498223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412927,-99) , 
3, 4.01068, 0, 0, 0.492947,-99) , 
6, -0.428598, 1, 0, 0.498311,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0505562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487117,-99) , 
3, 1.91556, 0, 0, 0.513579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474863,-99) , 
11, -3.197, 1, 0, 0.48811,-99) , 
3, 7.01181, 1, 0, 0.506736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481871,-99) , 
11, -3.49248, 0, 0, 0.491875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411323,-99) , 
10, -0.0761111, 1, 0, 0.477946,-99) , 
12, -1.16499, 0, 0, 0.498291,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0298196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25324, 0, 1, 0.524999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485879,-99) , 
3, 3.96712, 0, 0, 0.503662,-99) , 
6, -0.80955, 1, 0, 0.507701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453827,-99) , 
12, -2.56404, 0, 0, 0.505389,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0377182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463852,-99) , 
4, 4.28931, 1, 0, 0.525218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490582,-99) , 
10, -1.16319, 1, 0, 0.49501,-99) , 
10, 1.28571, 0, 0, 0.500954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428726,-99) , 
13, 11.0932, 1, 0, 0.498926,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0402191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497413,-99) , 
4, 2.65649, 1, 0, 0.535384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45144,-99) , 
3, 3.71223, 0, 0, 0.504636,-99) , 
6, -0.523818, 1, 0, 0.512452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448107,-99) , 
3, 1.66483, 0, 0, 0.48659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438273,-99) , 
10, 1.62717, 1, 0, 0.470627,-99) , 
12, 1.40582, 1, 0, 0.508435,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0279893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552403,-99) , 
NN(
NN(
0, 
0, 
-1, 4.33547, 0, 1, 0.508765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486822,-99) , 
0, 0.503804, 0, 0, 0.492017,-99) , 
6, -0.142897, 1, 0, 0.499325,-99) , 
10, 2.42843, 0, 0, 0.500831,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0273471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49028,-99) , 
10, -0.482199, 1, 0, 0.494633,-99) , 
3, 1.58248, 1, 0, 0.496926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453806,-99) , 
10, -1.57057, 0, 0, 0.494897,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0484426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.25104, 0, 1, 0.534648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463845,-99) , 
3, 5.04287, 0, 0, 0.491705,-99) , 
0, 0.494417, 0, 0, 0.513217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480705,-99) , 
6, -0.523837, 1, 0, 0.490274,-99) , 
11, -4.81026, 1, 0, 0.493169,-99) , 
0, 0.497138, 1, 0, 0.501426,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0263623);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473981,-99) , 
0, 0.502852, 1, 0, 0.501476,-99) , 
NN(
0, 
0, 
-1, -0.137005, 0, -1, 0.474146,-99) , 
2, -0.0690844, 0, 0, 0.496961,-99) , 
8, 10.8732, 0, 0, 0.498874,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0355565);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557067,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473016,-99) , 
2, 0.00618719, 1, 0, 0.517674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487861,-99) , 
11, -4.57682, 1, 0, 0.490827,-99) , 
1, 0.00480478, 0, 0, 0.494063,-99) , 
11, 0.510893, 0, 0, 0.496089,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0247591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.7788, 0, 1, 0.559903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46648,-99) , 
0, 0.498051, 0, 0, 0.5075,-99) , 
6, 0.869598, 1, 0, 0.537303,-99) , 
NN(
NN(
0, 
0, 
-1, -3.90939, 1, 1, 0.505577,-99) , 
NN(
0, 
0, 
-1, -0.522258, 1, -1, 0.485511,-99) , 
12, -1.57201, 0, 0, 0.502144,-99) , 
3, 8.46537, 0, 0, 0.506292,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0385692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.790889, 1, 1, 0.51235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463745,-99) , 
12, -0.192088, 0, 0, 0.491241,-99) , 
3, 5.01545, 0, 0, 0.502251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423438,-99) , 
12, -2.71692, 0, 0, 0.499714,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0310127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482144,-99) , 
9, -951.286, 0, 0, 0.536852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472872,-99) , 
12, 0.158664, 1, 0, 0.500358,-99) , 
11, -1.24096, 0, 0, 0.502821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503993,-99) , 
NN(
0, 
0, 
-1, 1.8976, 0, -1, 0.453868,-99) , 
6, -0.950913, 1, 0, 0.474411,-99) , 
3, 2.05722, 0, 0, 0.499005,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0342271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482596,-99) , 
4, 1.81392, 0, 0, 0.497233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432745,-99) , 
4, 8.97226, 1, 0, 0.495262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38553,-99) , 
1, 0.0119697, 1, 0, 0.492146,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0357034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.28311, 0, 1, 0.546117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475679,-99) , 
11, -3.00915, 1, 0, 0.528903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490001,-99) , 
11, -0.0852979, 0, 0, 0.493887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413022,-99) , 
12, -2.04917, 0, 0, 0.491312,-99) , 
10, -0.998602, 1, 0, 0.49548,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0273672);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494646,-99) , 
4, 4.56237, 0, 0, 0.499992,-99) , 
NN(
0, 
0, 
-1, 7.65434, 0, -1, 0.482999,-99) , 
6, 0.238044, 1, 0, 0.492497,-99) , 
2, -0.213015, 1, 0, 0.494481,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0241441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497341,-99) , 
6, -0.541889, 1, 0, 0.503001,-99) , 
NN(
0, 
0, 
-1, 2.20116, 1, -1, 0.473363,-99) , 
3, 2.28839, 0, 0, 0.500425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476715,-99) , 
0, 0.498099, 0, 0, 0.500354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44128,-99) , 
8, 1.92915, 1, 0, 0.475341,-99) , 
6, -0.904756, 0, 0, 0.497894,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0267125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49987,-99) , 
10, -0.426526, 1, 0, 0.506648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371591,-99) , 
10, -1.48691, 1, 0, 0.450623,-99) , 
12, -2.34874, 0, 0, 0.503387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436707,-99) , 
12, 2.12943, 1, 0, 0.500325,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0319254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479909,-99) , 
0, 0.501898, 1, 0, 0.512783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426691,-99) , 
10, 0.594481, 1, 0, 0.493701,-99) , 
12, -0.579113, 0, 0, 0.503783,-99) , 
5, 0.998572, 1, 0, 0.505667,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0228017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.057739, 1, 1, 0.525678,-99) , 
NN(
0, 
0, 
-1, 0.5014, 1, -1, 0.494643,-99) , 
0, 0.502851, 0, 0, 0.499375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473381,-99) , 
6, -0.0746686, 0, 0, 0.488979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391863,-99) , 
6, 0.618974, 1, 0, 0.457637,-99) , 
10, 1.85731, 1, 0, 0.496076,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0191181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.334, 1, 1, 0.505094,-99) , 
NN(
0, 
0, 
-1, -1.08874, 1, -1, 0.466397,-99) , 
12, -2.08441, 0, 0, 0.501645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441418,-99) , 
2, 0.214776, 1, 0, 0.499372,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0363793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472381,-99) , 
12, 1.16319, 1, 0, 0.504096,-99) , 
NN(
0, 
0, 
-1, 0.140903, 1, -1, 0.481352,-99) , 
12, -0.936216, 0, 0, 0.495985,-99) , 
3, 9.90866, 0, 0, 0.498456,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0261979);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495446,-99) , 
11, -3.72663, 1, 0, 0.50159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442569,-99) , 
12, 1.47108, 1, 0, 0.498593,-99) , 
11, 0.196083, 0, 0, 0.501179,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0379842);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.88314, 0, 1, 0.514476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456794,-99) , 
12, 1.64393, 1, 0, 0.512431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451465,-99) , 
13, 1.85546, 1, 0, 0.493011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439945,-99) , 
10, -0.719539, 0, 0, 0.478929,-99) , 
6, -0.904763, 0, 0, 0.508959,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0234729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490203,-99) , 
6, -0.333414, 1, 0, 0.497188,-99) , 
10, 2.42852, 0, 0, 0.498699,-99) , 
2, -0.217323, 1, 0, 0.500574,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0131579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00721094, 1, 1, 0.502556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452725,-99) , 
8, 1.76379, 0, 0, 0.500499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431487,-99) , 
12, -2.6728, 0, 0, 0.498155,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0214185);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.869525, 1, 1, 0.540953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499299,-99) , 
6, 0.809437, 0, 0, 0.502736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387577,-99) , 
10, -1.47452, 1, 0, 0.462357,-99) , 
12, -2.32472, 0, 0, 0.500379,-99) , 
3, 8.99595, 0, 0, 0.503598,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0273041);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490665,-99) , 
8, 4.9384, 0, 0, 0.500362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380999,-99) , 
10, -1.31768, 1, 0, 0.464805,-99) , 
12, -2.29179, 0, 0, 0.497942,-99) , 
10, 2.42849, 0, 0, 0.499893,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.029652);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.24559, 1, 1, 0.536211,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489879,-99) , 
4, 8.60831, 0, 0, 0.491915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453907,-99) , 
2, 0.209674, 1, 0, 0.490289,-99) , 
11, -0.483757, 0, 0, 0.493922,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.027047);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497483,-99) , 
11, -2.07723, 0, 0, 0.553457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46478,-99) , 
11, -3.32494, 1, 0, 0.504204,-99) , 
10, 1.02208, 0, 0, 0.52217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495658,-99) , 
0, 0.491424, 1, 0, 0.498298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423241,-99) , 
5, 0.999524, 0, 0, 0.495489,-99) , 
8, 8.91809, 0, 0, 0.499401,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0455223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474081,-99) , 
12, 2.03301, 1, 0, 0.513879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462441,-99) , 
8, 10.2344, 1, 0, 0.511464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458742,-99) , 
0, 0.500948, 1, 0, 0.500638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329644,-99) , 
10, -0.36222, 1, 0, 0.477281,-99) , 
12, -1.56604, 0, 0, 0.505085,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0213287);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49457,-99) , 
3, 7.94695, 0, 0, 0.498164,-99) , 
0, 0.505708, 0, 0, 0.500258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437263,-99) , 
5, 0.999048, 0, 0, 0.498262,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0372835);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487068,-99) , 
9, 0.140609, 0, 0, 0.547329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457834,-99) , 
12, -0.262354, 0, 0, 0.495748,-99) , 
9, -951.286, 0, 0, 0.521037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486963,-99) , 
10, -0.992366, 1, 0, 0.491105,-99) , 
11, -0.157967, 0, 0, 0.493109,-99) , 
1, -0.00464865, 1, 0, 0.496424,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0155751);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498877,-99) , 
10, -1.28037, 1, 0, 0.502049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434917,-99) , 
3, 1.53288, 0, 0, 0.500208,-99) , 
8, 10.8732, 0, 0, 0.502343,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0498807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494245,-99) , 
5, 0.999989, 0, 0, 0.521326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438854,-99) , 
5, 0.999776, 0, 0, 0.518291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497885,-99) , 
3, 8.38254, 1, 0, 0.5075,-99) , 
NN(
0, 
0, 
-1, 8.09443, 1, -1, 0.463491,-99) , 
8, 8.64207, 0, 0, 0.491063,-99) , 
6, 0.714208, 1, 0, 0.512503,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.04053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.288, 0, 1, 0.547035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492491,-99) , 
3, 4.08098, 0, 0, 0.509664,-99) , 
11, -1.17537, 0, 0, 0.514859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427713,-99) , 
1, 0.0123239, 1, 0, 0.512415,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0123411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458074,-99) , 
12, 2.44308, 1, 0, 0.499464,-99) , 
11, -4.44115, 1, 0, 0.500962,-99) , 
NN(
0, 
0, 
-1, -2.84955, 0, -1, 0.464151,-99) , 
12, -2.23765, 0, 0, 0.498337,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.112587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497552,-99) , 
9, -0.26309, 0, 0, 0.554923,-99) , 
NN(
0, 
0, 
-1, -2.09857, 0, -1, 0.264475,-99) , 
9, -1.2828, 0, 0, 0.506689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469907,-99) , 
0, 0.495232, 0, 0, 0.494177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412346,-99) , 
6, 0.808874, 1, 0, 0.486187,-99) , 
9, -951.286, 0, 0, 0.497672,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.039754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483926,-99) , 
10, -0.102121, 1, 0, 0.519171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461705,-99) , 
10, -0.143117, 0, 0, 0.497528,-99) , 
11, -3.16682, 1, 0, 0.50523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444012,-99) , 
12, -2.74952, 0, 0, 0.503443,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0378375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478535,-99) , 
10, 0.71422, 0, 0, 0.511013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457409,-99) , 
10, 0.780946, 1, 0, 0.492649,-99) , 
11, -2.28327, 0, 0, 0.499279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449908,-99) , 
12, -2.66864, 0, 0, 0.497638,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.030057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485405,-99) , 
6, 0.428574, 1, 0, 0.499695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450287,-99) , 
12, 2.305, 1, 0, 0.49762,-99) , 
NN(
0, 
0, 
-1, -4.03938, 1, -1, 0.461131,-99) , 
10, -1.28425, 0, 0, 0.494765,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0395104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.67899, 0, 1, 0.550501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470416,-99) , 
11, -1.76442, 0, 0, 0.495021,-99) , 
11, -3.01305, 1, 0, 0.519293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47941,-99) , 
12, 0.0949354, 1, 0, 0.494231,-99) , 
NN(
0, 
0, 
-1, 0.619041, 1, -1, 0.471164,-99) , 
12, -1.33672, 0, 0, 0.488713,-99) , 
2, 0.0747642, 0, 0, 0.493368,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.108071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.551177, 0, 1, 0.548004,-99) , 
NN(
0, 
0, 
-1, -1.61218, 0, -1, 0.275689,-99) , 
9, -1.2855, 0, 0, 0.503208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552023,-99) , 
NN(
0, 
0, 
-1, 4.35623, 0, -1, 0.477754,-99) , 
0, 0.491425, 1, 0, 0.483421,-99) , 
9, -951.286, 0, 0, 0.494469,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0215585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48765,-99) , 
11, -3.16318, 1, 0, 0.493699,-99) , 
11, -0.411976, 0, 0, 0.495128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456538,-99) , 
12, 2.07892, 1, 0, 0.493369,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0900182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48412,-99) , 
6, 0.772642, 1, 0, 0.529409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43107,-99) , 
10, 1.28529, 1, 0, 0.492961,-99) , 
8, 4.85871, 0, 0, 0.509775,-99) , 
NN(
NN(
0, 
0, 
-1, 0.958229, 0, 1, 0.530093,-99) , 
NN(
0, 
0, 
-1, -1.7756, 0, -1, 0.27688,-99) , 
9, -1.28596, 0, 0, 0.489194,-99) , 
9, -951.286, 1, 0, 0.498446,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.031969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49041,-99) , 
11, -4.3097, 1, 0, 0.492311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416513,-99) , 
3, 1.55922, 0, 0, 0.490011,-99) , 
NN(
0, 
0, 
-1, -2.63222, 0, -1, 0.442115,-99) , 
12, -2.26411, 0, 0, 0.486668,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.106453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.23012, 1, 1, 0.527794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471824,-99) , 
6, -0.740308, 1, 0, 0.493067,-99) , 
8, 4.93272, 0, 0, 0.509028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461509,-99) , 
8, 3.67823, 0, 0, 0.527613,-99) , 
NN(
0, 
0, 
-1, 4.86942, 1, -1, 0.322478,-99) , 
9, -0.999803, 0, 0, 0.481206,-99) , 
9, -951.286, 1, 0, 0.493575,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0249773);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485732,-99) , 
6, 0.14257, 1, 0, 0.49561,-99) , 
NN(
0, 
0, 
-1, 9.85762, 0, -1, 0.438158,-99) , 
13, 9.59694, 1, 0, 0.491877,-99) , 
8, 10.7226, 0, 0, 0.493755,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0498048);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472737,-99) , 
3, 5.05834, 0, 0, 0.499338,-99) , 
NN(
0, 
0, 
-1, -2.15135, 0, -1, 0.480272,-99) , 
12, -0.134154, 1, 0, 0.489891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4341,-99) , 
6, 0.0477211, 0, 0, 0.480565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375314,-99) , 
10, -0.298204, 1, 0, 0.464628,-99) , 
12, -1.47007, 0, 0, 0.484665,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0440686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49323,-99) , 
0, 0.494279, 1, 0, 0.502061,-99) , 
1, -0.00916273, 1, 0, 0.506397,-99) , 
NN(
0, 
0, 
-1, 5.39311, 0, -1, 0.472992,-99) , 
6, -0.0476639, 1, 0, 0.488472,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0386831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480933,-99) , 
12, -0.870395, 0, 0, 0.502071,-99) , 
11, -4.03254, 1, 0, 0.50425,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452367,-99) , 
12, -2.59154, 0, 0, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412057,-99) , 
10, -0.767708, 1, 0, 0.473078,-99) , 
12, -1.73103, 0, 0, 0.49963,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0314128);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497439,-99) , 
11, -2.4061, 0, 0, 0.504967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418904,-99) , 
5, 0.999048, 0, 0, 0.502348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42124,-99) , 
12, -2.84453, 0, 0, 0.490743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402447,-99) , 
10, -0.827197, 1, 0, 0.464661,-99) , 
12, -1.83244, 0, 0, 0.497367,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0364258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.52238, 0, 1, 0.526794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441922,-99) , 
6, -0.875352, 1, 0, 0.485202,-99) , 
3, 2.21593, 0, 0, 0.510005,-99) , 
NN(
0, 
0, 
-1, 4.5635, 0, -1, 0.485443,-99) , 
6, -0.238097, 1, 0, 0.49535,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0252175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.70505, 1, 1, 0.508203,-99) , 
NN(
0, 
0, 
-1, -0.141469, 1, -1, 0.48205,-99) , 
12, -1.29207, 0, 0, 0.500906,-99) , 
NN(
0, 
0, 
-1, -0.904789, 1, -1, 0.467141,-99) , 
12, 1.64705, 1, 0, 0.498314,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0183131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448316,-99) , 
12, 2.06746, 1, 0, 0.499343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435886,-99) , 
4, 8.60831, 1, 0, 0.497244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426775,-99) , 
11, -2.18524, 0, 0, 0.453772,-99) , 
0, 0.504757, 1, 0, 0.494141,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0314862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489603,-99) , 
11, -4.11426, 1, 0, 0.492136,-99) , 
NN(
0, 
0, 
-1, -0.874229, 1, -1, 0.469857,-99) , 
12, -1.89719, 0, 0, 0.489457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440558,-99) , 
5, 0.999048, 0, 0, 0.487856,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0463586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.91893, 0, 1, 0.536384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449537,-99) , 
11, -1.31415, 0, 0, 0.494825,-99) , 
12, 0.78455, 1, 0, 0.517533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470262,-99) , 
11, -2.52583, 1, 0, 0.500581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451989,-99) , 
11, -2.3308, 0, 0, 0.470778,-99) , 
10, 0.469629, 1, 0, 0.491132,-99) , 
10, 1.2859, 0, 0, 0.496307,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0400001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453927,-99) , 
11, -3.16988, 0, 0, 0.49741,-99) , 
11, -3.65007, 1, 0, 0.500519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445262,-99) , 
12, -2.10699, 0, 0, 0.48371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386354,-99) , 
10, -0.114755, 1, 0, 0.469407,-99) , 
12, -1.26464, 0, 0, 0.492338,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0331847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.522651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493058,-99) , 
11, -4.13823, 1, 0, 0.495673,-99) , 
2, 0.0754972, 0, 0, 0.499757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528616,-99) , 
NN(
0, 
0, 
-1, -0.762445, 1, -1, 0.435382,-99) , 
10, -1.5797, 1, 0, 0.458593,-99) , 
12, -1.89719, 0, 0, 0.494711,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0237785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14208, 1, -1, 0.497203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438289,-99) , 
10, -1.58127, 1, 0, 0.468985,-99) , 
12, -1.89719, 0, 0, 0.493909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436353,-99) , 
13, 10.7982, 1, 0, 0.491697,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0260403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49786,-99) , 
10, 2.05326, 0, 0, 0.500169,-99) , 
NN(
0, 
0, 
-1, 2.15897, 1, -1, 0.46803,-99) , 
12, 1.13229, 1, 0, 0.495385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421642,-99) , 
12, -2.84406, 0, 0, 0.481966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40593,-99) , 
10, -0.867764, 1, 0, 0.460688,-99) , 
12, -1.89719, 0, 0, 0.491189,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.029556);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.36896, 0, 1, 0.529258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436676,-99) , 
13, 7.95733, 1, 0, 0.497673,-99) , 
3, 7.83908, 0, 0, 0.502039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401265,-99) , 
3, 9.4083, 0, 0, 0.459939,-99) , 
13, 10.1033, 1, 0, 0.499404,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.025898);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.93896, 0, 1, 0.537932,-99) , 
NN(
0, 
0, 
-1, 9.55964, 1, -1, 0.489189,-99) , 
3, 8.99595, 0, 0, 0.493027,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0346649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.14563, 0, 1, 0.519719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467367,-99) , 
12, -0.811205, 0, 0, 0.49674,-99) , 
10, -0.426316, 1, 0, 0.502899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437861,-99) , 
3, 7.37432, 0, 0, 0.493682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403942,-99) , 
12, 0.335255, 1, 0, 0.482842,-99) , 
6, 0.618962, 1, 0, 0.497367,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0356925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446986,-99) , 
12, 1.46601, 1, 0, 0.50619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434372,-99) , 
3, 1.67304, 1, 0, 0.471517,-99) , 
6, -0.904763, 0, 0, 0.502145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456962,-99) , 
3, 5.87017, 0, 0, 0.490781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408784,-99) , 
10, -1.08874, 1, 0, 0.4645,-99) , 
12, -2.08441, 0, 0, 0.49881,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.030135);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492766,-99) , 
7, 0.00740858, 0, 0, 0.497087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453753,-99) , 
1, -0.00904791, 0, 0, 0.494954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406123,-99) , 
1, 0.0119697, 1, 0, 0.492164,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0292745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49837,-99) , 
11, -1.95918, 0, 0, 0.504315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414639,-99) , 
13, 10.9452, 1, 0, 0.501005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455435,-99) , 
0, 0.499031, 1, 0, 0.49442,-99) , 
NN(
0, 
0, 
-1, 1.5006, 1, -1, 0.446894,-99) , 
11, -0.326201, 0, 0, 0.469772,-99) , 
11, -1.17537, 1, 0, 0.496646,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0399339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473448,-99) , 
0, 0.493329, 0, 0, 0.509992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463924,-99) , 
12, 0.349711, 0, 0, 0.493451,-99) , 
3, 3.05291, 0, 0, 0.505014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456643,-99) , 
2, 0.214776, 1, 0, 0.503173,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0333319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0080579, 0, 1, 0.507004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412753,-99) , 
7, 0.0130244, 1, 0, 0.50321,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468487,-99) , 
12, 1.44155, 1, 0, 0.490728,-99) , 
NN(
0, 
0, 
-1, -1.64158, 0, -1, 0.422659,-99) , 
11, -1.3675, 0, 0, 0.473137,-99) , 
12, 0.676775, 1, 0, 0.497107,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.029409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48408,-99) , 
3, 2.83482, 0, 0, 0.499859,-99) , 
NN(
0, 
0, 
-1, 0.870715, 1, -1, 0.466203,-99) , 
3, 8.46288, 1, 0, 0.495813,-99) , 
NN(
0, 
0, 
-1, -2.86345, 1, -1, 0.451689,-99) , 
0, 0.504757, 1, 0, 0.492875,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0475477);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487651,-99) , 
9, -951.286, 0, 0, 0.520322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480756,-99) , 
9, -951.286, 1, 0, 0.49547,-99) , 
10, -0.427923, 1, 0, 0.500431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390287,-99) , 
10, -1.60812, 1, 0, 0.448984,-99) , 
12, -2.32472, 0, 0, 0.497252,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0430005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467831,-99) , 
12, -0.108858, 0, 0, 0.498682,-99) , 
3, 3.18653, 0, 0, 0.50638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486734,-99) , 
10, 1.83987, 0, 0, 0.490954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409031,-99) , 
12, 0.866987, 1, 0, 0.48677,-99) , 
6, -0.428575, 1, 0, 0.493742,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0389606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494216,-99) , 
12, -0.959525, 0, 0, 0.509792,-99) , 
NN(
0, 
0, 
-1, 0.809437, 1, -1, 0.488772,-99) , 
12, -0.382428, 1, 0, 0.498711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405456,-99) , 
12, -2.844, 0, 0, 0.490856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406351,-99) , 
10, -0.867942, 1, 0, 0.466387,-99) , 
12, -1.89719, 0, 0, 0.494853,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0398653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460796,-99) , 
12, 0.624653, 1, 0, 0.508176,-99) , 
10, 2.11868, 0, 0, 0.510946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466085,-99) , 
12, 1.71791, 0, 0, 0.501334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412291,-99) , 
10, 1.87846, 1, 0, 0.477866,-99) , 
12, 1.2031, 1, 0, 0.507028,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.032968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.631483, 1, 1, 0.518084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46292,-99) , 
12, 0.120827, 1, 0, 0.508016,-99) , 
NN(
NN(
0, 
0, 
-1, 2.14207, 1, -1, 0.489643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416892,-99) , 
9, -951.286, 1, 0, 0.450015,-99) , 
12, -1.89719, 0, 0, 0.485476,-99) , 
3, 7.48223, 0, 0, 0.490748,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0390836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491934,-99) , 
5, 0.999977, 1, 0, 0.50047,-99) , 
5, 0.999524, 1, 0, 0.50382,-99) , 
NN(
0, 
0, 
-1, 0.809003, 1, -1, 0.460549,-99) , 
4, 4.51103, 1, 0, 0.49558,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0259778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482195,-99) , 
0, 0.5019, 1, 0, 0.499364,-99) , 
11, -4.25585, 1, 0, 0.500956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470935,-99) , 
11, -4.73253, 0, 0, 0.500177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381886,-99) , 
10, -0.899878, 1, 0, 0.471115,-99) , 
12, -1.99955, 0, 0, 0.497829,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0350691);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.863994, 0, 1, 0.528864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492356,-99) , 
13, 7.54556, 0, 0, 0.498471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407845,-99) , 
13, 7.68415, 1, 0, 0.460719,-99) , 
12, -1.81637, 0, 0, 0.493374,-99) , 
0, 0.5019, 0, 0, 0.500487,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0300802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.495623, 0, 1, 0.533074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493709,-99) , 
12, 0.233514, 1, 0, 0.502916,-99) , 
10, -0.713641, 1, 0, 0.505217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446163,-99) , 
3, 4.69, 0, 0, 0.495101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412868,-99) , 
10, -0.514594, 1, 0, 0.476486,-99) , 
12, -1.56604, 0, 0, 0.500013,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0314213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469776,-99) , 
6, 0.80905, 1, 0, 0.498119,-99) , 
11, -3.47067, 1, 0, 0.501347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484072,-99) , 
12, -2.66203, 0, 0, 0.513876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42126,-99) , 
12, -1.60671, 0, 0, 0.467168,-99) , 
10, -0.916737, 1, 0, 0.482982,-99) , 
12, -1.15874, 0, 0, 0.496052,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0315681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493673,-99) , 
8, 4.87929, 1, 0, 0.514768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474557,-99) , 
8, 4.82952, 0, 0, 0.49479,-99) , 
12, 0.150758, 0, 0, 0.501371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403867,-99) , 
0, 0.498091, 0, 0, 0.452044,-99) , 
5, 0.999524, 0, 0, 0.498773,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0199917);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495887,-99) , 
11, -1.35843, 0, 0, 0.499524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462786,-99) , 
8, 1.75462, 0, 0, 0.49792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43344,-99) , 
12, -2.66864, 0, 0, 0.495712,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0387671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486519,-99) , 
10, 1.28467, 0, 0, 0.491652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452222,-99) , 
12, 2.14376, 1, 0, 0.489809,-99) , 
NN(
0, 
0, 
-1, -0.596906, 0, -1, 0.446249,-99) , 
13, 9.55964, 1, 0, 0.485369,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0555973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48298,-99) , 
10, 0.713388, 0, 0, 0.498256,-99) , 
3, 3.83758, 0, 0, 0.507077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47696,-99) , 
11, -3.301, 1, 0, 0.493902,-99) , 
NN(
0, 
0, 
-1, 5.67798, 1, -1, 0.448346,-99) , 
3, 5.74373, 0, 0, 0.48369,-99) , 
6, -0.238131, 1, 0, 0.493189,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0324705);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492616,-99) , 
2, -0.0301024, 0, 0, 0.504982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46225,-99) , 
2, 0.214776, 1, 0, 0.503436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439305,-99) , 
12, -2.75178, 0, 0, 0.479749,-99) , 
NN(
0, 
0, 
-1, -1.00872, 1, -1, 0.4188,-99) , 
11, -4.6759, 1, 0, 0.44692,-99) , 
12, -1.90418, 0, 0, 0.49684,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0391941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.09351, 0, 1, 0.567436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444151,-99) , 
6, -0.367959, 1, 0, 0.503712,-99) , 
3, 4.31444, 0, 0, 0.510674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489924,-99) , 
11, -3.75538, 1, 0, 0.499095,-99) , 
NN(
0, 
0, 
-1, 2.55086, 0, -1, 0.459171,-99) , 
3, 5.73793, 0, 0, 0.493438,-99) , 
6, -0.0477525, 1, 0, 0.501403,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0455245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.39317, 0, 1, 0.522853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409203,-99) , 
6, -0.809651, 1, 0, 0.487376,-99) , 
11, -2.57713, 1, 0, 0.51351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441555,-99) , 
11, -2.87166, 0, 0, 0.493514,-99) , 
11, -3.4022, 1, 0, 0.497564,-99) , 
10, 0.429366, 1, 0, 0.506129,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0293915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564414,-99) , 
NN(
0, 
0, 
-1, 1.18, 1, -1, 0.492881,-99) , 
11, -4.06896, 1, 0, 0.495678,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482807,-99) , 
11, -4.25681, 0, 0, 0.501529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35897,-99) , 
10, -0.69356, 1, 0, 0.470817,-99) , 
12, -1.82158, 0, 0, 0.492505,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0265889);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488731,-99) , 
12, -1.98661, 0, 0, 0.514991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451736,-99) , 
12, -1.1211, 0, 0, 0.496855,-99) , 
10, -0.14053, 1, 0, 0.503045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446183,-99) , 
13, 10.7732, 1, 0, 0.500925,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0306404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484455,-99) , 
5, 0.999991, 0, 0, 0.498508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441247,-99) , 
5, 0.999819, 0, 0, 0.495774,-99) , 
NN(
0, 
0, 
-1, 0.528428, 1, -1, 0.449165,-99) , 
5, 0.999524, 0, 0, 0.493358,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0290658);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.42873, 0, 1, 0.509293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472502,-99) , 
3, 7.07313, 0, 0, 0.491909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437883,-99) , 
13, 8.86446, 1, 0, 0.479886,-99) , 
12, -1.56604, 0, 0, 0.504036,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0433959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.50814, 0, 1, 0.541307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456013,-99) , 
6, -0.809539, 1, 0, 0.480809,-99) , 
12, -0.250866, 1, 0, 0.514153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497126,-99) , 
11, -1.11329, 0, 0, 0.506704,-99) , 
NN(
0, 
0, 
-1, 0.267199, 1, -1, 0.483036,-99) , 
10, 1.28695, 0, 0, 0.487567,-99) , 
0, 0.495233, 1, 0, 0.494311,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0391334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464659,-99) , 
2, 0.0680119, 1, 0, 0.501312,-99) , 
NN(
0, 
0, 
-1, 3.53061, 0, -1, 0.478084,-99) , 
0, 0.498907, 1, 0, 0.489934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449843,-99) , 
10, 0.718053, 1, 0, 0.473057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424179,-99) , 
12, -0.800908, 0, 0, 0.453272,-99) , 
0, 0.492376, 0, 0, 0.486052,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0310745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492117,-99) , 
11, -2.9995, 1, 0, 0.499987,-99) , 
NN(
0, 
0, 
-1, -4.46438, 1, -1, 0.450145,-99) , 
12, -2.08655, 0, 0, 0.495158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440589,-99) , 
12, 2.07892, 1, 0, 0.492633,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.042449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500947, 0, 1, 0.521627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488606,-99) , 
1, 0.00794264, 0, 0, 0.49518,-99) , 
13, 5.35352, 0, 0, 0.507881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451472,-99) , 
8, 8.79821, 1, 0, 0.4916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347665,-99) , 
10, -0.350582, 1, 0, 0.472227,-99) , 
12, -1.55616, 0, 0, 0.50124,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0380489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4573,-99) , 
12, -1.76117, 0, 0, 0.508862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482575,-99) , 
5, 0.999524, 1, 0, 0.48793,-99) , 
3, 5.03603, 1, 0, 0.497167,-99) , 
NN(
0, 
0, 
-1, 0.498103, 0, -1, 0.458367,-99) , 
12, 2.00348, 1, 0, 0.495023,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0403148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.337102, 1, 1, 0.517603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398376,-99) , 
10, -0.236295, 1, 0, 0.480943,-99) , 
12, -1.38492, 0, 0, 0.506272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488834,-99) , 
0, 0.492378, 1, 0, 0.497195,-99) , 
NN(
0, 
0, 
-1, -0.862553, 1, -1, 0.463103,-99) , 
4, 1.19422, 0, 0, 0.48647,-99) , 
3, 4.02381, 0, 0, 0.49853,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.031588);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49041,-99) , 
9, -951.286, 0, 0, 0.502237,-99) , 
NN(
0, 
0, 
-1, -0.555895, 1, -1, 0.473644,-99) , 
12, -1.65212, 0, 0, 0.497636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419803,-99) , 
5, 0.999048, 0, 0, 0.495145,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0373597);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487814,-99) , 
13, 7.82789, 1, 0, 0.530582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488504,-99) , 
12, -1.35267, 0, 0, 0.521045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486704,-99) , 
10, -1.28252, 1, 0, 0.490068,-99) , 
10, 2.14344, 0, 0, 0.492638,-99) , 
0, 0.5019, 0, 0, 0.49834,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0289411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.000118126, 0, 1, 0.549128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466192,-99) , 
10, -0.999983, 0, 0, 0.503481,-99) , 
3, 8.99365, 0, 0, 0.507053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379264,-99) , 
10, -1.31686, 1, 0, 0.457572,-99) , 
12, -2.28667, 0, 0, 0.503874,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0578103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477611,-99) , 
5, 0.999995, 0, 0, 0.507733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427263,-99) , 
5, 0.999905, 0, 0, 0.503179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476947,-99) , 
5, 0.999525, 1, 0, 0.482775,-99) , 
NN(
0, 
0, 
-1, 7.9646, 0, -1, 0.441687,-99) , 
0, 0.494282, 0, 0, 0.47598,-99) , 
6, 0.523779, 1, 0, 0.494156,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0308011);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46677,-99) , 
12, 1.37706, 1, 0, 0.506717,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.486306,-99) , 
0, 0.498091, 0, 0, 0.496627,-99) , 
11, -4.85498, 1, 0, 0.499,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0959137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483114,-99) , 
11, -1.20969, 1, 0, 0.513632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464029,-99) , 
0, 0.503801, 1, 0, 0.508137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467344,-99) , 
9, -0.481395, 0, 0, 0.523562,-99) , 
NN(
0, 
0, 
-1, -2.11372, 0, -1, 0.240491,-99) , 
9, -1.56965, 0, 0, 0.490557,-99) , 
9, -951.286, 1, 0, 0.498367,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0292013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.74806, 0, 1, 0.53628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471257,-99) , 
10, 0.715753, 1, 0, 0.495074,-99) , 
11, -2.86345, 1, 0, 0.513416,-99) , 
NN(
0, 
0, 
-1, 0.500673, 1, -1, 0.488054,-99) , 
0, 0.50285, 0, 0, 0.491767,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.030438);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471456,-99) , 
6, -0.904765, 0, 0, 0.503173,-99) , 
NN(
0, 
0, 
-1, -0.0793829, 1, -1, 0.480335,-99) , 
12, -1.18208, 0, 0, 0.496658,-99) , 
0, 0.505708, 0, 0, 0.498953,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0569944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0419436, 0, 1, 0.560529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441627,-99) , 
6, -0.759348, 1, 0, 0.500386,-99) , 
3, 2.75349, 0, 0, 0.516603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484529,-99) , 
6, 0.455492, 1, 0, 0.511411,-99) , 
NN(
0, 
0, 
-1, -1.1276, 0, -1, 0.475565,-99) , 
10, -0.139131, 1, 0, 0.48622,-99) , 
6, -0.428605, 1, 0, 0.497069,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0396238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.147222, 1, 1, 0.552085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490863,-99) , 
2, -0.075338, 1, 0, 0.499479,-99) , 
6, 0.575562, 1, 0, 0.511322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490222,-99) , 
3, 3.6356, 0, 0, 0.497613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456563,-99) , 
11, -2.45443, 0, 0, 0.467925,-99) , 
6, -0.0247961, 1, 0, 0.490457,-99) , 
3, 6.46424, 0, 0, 0.49844,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0357816);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480257,-99) , 
8, 9.81509, 1, 0, 0.531036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439203,-99) , 
12, 0.403473, 1, 0, 0.492527,-99) , 
11, -2.98662, 1, 0, 0.513765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492284,-99) , 
11, -0.778958, 0, 0, 0.496278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454524,-99) , 
12, -2.20468, 0, 0, 0.493866,-99) , 
8, 7.61044, 0, 0, 0.499831,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0582077);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462089,-99) , 
12, -2.35494, 0, 0, 0.526346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470669,-99) , 
9, -951.286, 1, 0, 0.496764,-99) , 
3, 4.52833, 0, 0, 0.511312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491808,-99) , 
11, -3.1281, 1, 0, 0.497255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41796,-99) , 
11, -3.09036, 0, 0, 0.460399,-99) , 
12, -0.722901, 0, 0, 0.490411,-99) , 
10, 0.143313, 1, 0, 0.499476,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.060327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0836125, 1, 1, 0.530943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446761,-99) , 
11, -2.74043, 1, 0, 0.486993,-99) , 
11, -2.26662, 0, 0, 0.519329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498023,-99) , 
0, 0.499995, 0, 0, 0.512159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467944,-99) , 
10, -1.13501, 1, 0, 0.479885,-99) , 
3, 6.06904, 0, 0, 0.497247,-99) , 
12, -0.306395, 0, 0, 0.506953,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0398536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494286, 1, 1, 0.540752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460619,-99) , 
2, -0.274283, 0, 0, 0.528075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444361,-99) , 
0, 0.490472, 0, 0, 0.505659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436457,-99) , 
10, -0.825183, 1, 0, 0.482385,-99) , 
12, -1.5681, 0, 0, 0.501549,-99) , 
2, -0.0703481, 1, 0, 0.505914,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.080568);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28114,-99) , 
9, -1.57225, 0, 0, 0.512169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480912,-99) , 
0, 0.496186, 1, 0, 0.488187,-99) , 
9, -951.286, 0, 0, 0.501372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489099,-99) , 
2, -0.0512115, 1, 0, 0.50189,-99) , 
NN(
0, 
0, 
-1, 5.42289, 0, -1, 0.45509,-99) , 
0, 0.492059, 1, 0, 0.477115,-99) , 
0, 0.494281, 0, 0, 0.496669,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0224369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473344,-99) , 
12, -1.98363, 0, 0, 0.504912,-99) , 
11, -4.70948, 1, 0, 0.507135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449311,-99) , 
5, 0.999048, 0, 0, 0.505243,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0264128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490275,-99) , 
9, -951.286, 1, 0, 0.49935,-99) , 
11, -0.446834, 0, 0, 0.501188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460972,-99) , 
12, 2.12943, 1, 0, 0.499282,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0460181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475316,-99) , 
10, 0.381582, 0, 0, 0.540284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457969,-99) , 
10, 0.392034, 1, 0, 0.499215,-99) , 
11, -2.8839, 0, 0, 0.505963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53221,-99) , 
NN(
0, 
0, 
-1, -2.28131, 0, -1, 0.479518,-99) , 
11, -2.78313, 1, 0, 0.483271,-99) , 
12, -0.3434, 1, 0, 0.495606,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0237544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.509052, 1, 1, 0.509444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46664,-99) , 
4, 8.93425, 1, 0, 0.50807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428586,-99) , 
1, 0.0121806, 1, 0, 0.505911,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0356744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492026, 1, 1, 0.554836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455658,-99) , 
8, 5.09595, 1, 0, 0.498506,-99) , 
6, 0.52366, 0, 0, 0.523022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497371,-99) , 
3, 6.55219, 0, 0, 0.503304,-99) , 
NN(
0, 
0, 
-1, -1.29892, 0, -1, 0.481585,-99) , 
6, 0.523596, 1, 0, 0.496522,-99) , 
10, 1.28615, 0, 0, 0.50179,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0336919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486802,-99) , 
9, -951.286, 0, 0, 0.510942,-99) , 
10, 1.28585, 0, 0, 0.521619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540774,-99) , 
NN(
0, 
0, 
-1, -0.820523, 0, -1, 0.487359,-99) , 
11, -0.0247478, 0, 0, 0.490144,-99) , 
2, -0.0708144, 1, 0, 0.495114,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0308569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486992,-99) , 
11, -3.20151, 0, 0, 0.521509,-99) , 
2, 0.0652125, 0, 0, 0.533562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492729,-99) , 
11, -4.2115, 1, 0, 0.545482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493334,-99) , 
13, 7.10434, 0, 0, 0.501188,-99) , 
10, -1.28493, 1, 0, 0.504317,-99) , 
0, 0.492376, 1, 0, 0.507337,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0290654);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55119,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480498,-99) , 
10, -1.10444, 0, 0, 0.50804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45865,-99) , 
11, -2.73153, 0, 0, 0.489881,-99) , 
10, 0.618755, 1, 0, 0.501248,-99) , 
10, 2.42852, 0, 0, 0.502575,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0336147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489704,-99) , 
0, 0.498096, 1, 0, 0.510979,-99) , 
11, -3.84044, 1, 0, 0.525383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486612,-99) , 
12, -0.678289, 0, 0, 0.501503,-99) , 
NN(
0, 
0, 
-1, 7.63195, 0, -1, 0.472681,-99) , 
8, 7.80874, 1, 0, 0.497378,-99) , 
8, 8.92473, 0, 0, 0.501395,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0155468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0069341, 1, 1, 0.505074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458395,-99) , 
1, 0.0099254, 1, 0, 0.503239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455068,-99) , 
12, 2.41731, 1, 0, 0.501655,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0207077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.02653, 0, 1, 0.505725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427389,-99) , 
10, 1.35869, 1, 0, 0.470641,-99) , 
12, 1.46138, 1, 0, 0.502569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408557,-99) , 
1, 0.0121806, 1, 0, 0.499866,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0491738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.37038, 0, 1, 0.523427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479902,-99) , 
1, 0.00156451, 0, 0, 0.502627,-99) , 
6, -0.528374, 1, 0, 0.514689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472561,-99) , 
0, 0.497139, 1, 0, 0.484343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427423,-99) , 
12, 0.549008, 1, 0, 0.479268,-99) , 
6, 0.238021, 1, 0, 0.498957,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.039713);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449871,-99) , 
12, 1.10426, 1, 0, 0.512416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397995,-99) , 
10, -0.257064, 1, 0, 0.484398,-99) , 
12, -1.38492, 0, 0, 0.504473,-99) , 
NN(
0, 
0, 
-1, -0.797342, 1, -1, 0.476102,-99) , 
3, 2.57259, 0, 0, 0.497966,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0423731);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44615,-99) , 
12, 2.12943, 1, 0, 0.505904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467234,-99) , 
2, -0.0516513, 1, 0, 0.484798,-99) , 
0, 0.500948, 1, 0, 0.500161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436604,-99) , 
13, 11.1992, 1, 0, 0.490586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383502,-99) , 
8, 9.01625, 0, 0, 0.468089,-99) , 
13, 8.80727, 1, 0, 0.495089,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0204766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.44778, 0, 1, 0.503549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450014,-99) , 
0, 0.490472, 0, 0, 0.501208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432385,-99) , 
11, -1.6342, 1, 0, 0.488258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429605,-99) , 
12, -1.37901, 0, 0, 0.474955,-99) , 
2, -0.0703481, 0, 0, 0.496887,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0454515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481612,-99) , 
12, -1.91248, 0, 0, 0.510042,-99) , 
10, -1.44008, 1, 0, 0.522399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486643,-99) , 
6, 0.515487, 0, 0, 0.490967,-99) , 
NN(
0, 
0, 
-1, 10.4009, 1, -1, 0.46609,-99) , 
8, 7.6147, 1, 0, 0.484109,-99) , 
11, -4.08019, 1, 0, 0.489127,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0175385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.116495, 1, 1, 0.51103,-99) , 
NN(
0, 
0, 
-1, 0.999774, 0, -1, 0.496128,-99) , 
10, 0.143835, 1, 0, 0.502713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440526,-99) , 
5, 0.999048, 0, 0, 0.500657,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0459464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489065,-99) , 
11, -2.51248, 1, 0, 0.5073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390702,-99) , 
11, -4.5307, 1, 0, 0.472531,-99) , 
12, -2.12736, 0, 0, 0.502618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476466,-99) , 
12, 0.866165, 1, 0, 0.504322,-99) , 
NN(
0, 
0, 
-1, -2.35789, 0, -1, 0.462804,-99) , 
10, 1.36734, 0, 0, 0.482915,-99) , 
10, 0.714305, 1, 0, 0.495443,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0320083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481798,-99) , 
10, 0.714909, 1, 0, 0.516423,-99) , 
NN(
0, 
0, 
-1, -0.84587, 0, -1, 0.488528,-99) , 
2, -0.0708144, 1, 0, 0.493021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443141,-99) , 
8, 1.74946, 0, 0, 0.49111,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0145094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49802,-99) , 
11, -4.5549, 1, 0, 0.499736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448655,-99) , 
12, -2.42572, 0, 0, 0.497958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415058,-99) , 
10, -1.85418, 0, 0, 0.495876,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.049652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477065,-99) , 
3, 6.03058, 1, 0, 0.503973,-99) , 
11, -3.12018, 1, 0, 0.510219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470154,-99) , 
12, -1.55942, 0, 0, 0.491141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404038,-99) , 
10, 0.539739, 1, 0, 0.483412,-99) , 
12, -0.668681, 0, 0, 0.498286,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0400939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48938,-99) , 
3, 9.39277, 1, 0, 0.516777,-99) , 
10, 0.196968, 1, 0, 0.534538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47376,-99) , 
3, 7.13568, 1, 0, 0.506129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464839,-99) , 
10, -0.365007, 1, 0, 0.484317,-99) , 
12, -0.526386, 0, 0, 0.495704,-99) , 
8, 9.56424, 0, 0, 0.499328,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.040051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.46463, 1, 1, 0.537763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495193,-99) , 
8, 10.0699, 0, 0, 0.49814,-99) , 
1, -0.00464865, 1, 0, 0.502906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477372,-99) , 
10, 0.428803, 0, 0, 0.502879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450056,-99) , 
1, 0.00397442, 0, 0, 0.464148,-99) , 
0, 0.493329, 1, 0, 0.481472,-99) , 
0, 0.496186, 0, 0, 0.495978,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0222712);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472313,-99) , 
12, -1.41282, 0, 0, 0.520226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479437,-99) , 
8, 7.40687, 1, 0, 0.495719,-99) , 
3, 8.49819, 0, 0, 0.498552,-99) , 
10, 2.42852, 0, 0, 0.50066,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0248543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494579,-99) , 
6, 0.850438, 1, 0, 0.536015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467133,-99) , 
13, 11.2118, 1, 0, 0.520647,-99) , 
NN(
0, 
0, 
-1, -1.65212, 0, -1, 0.490984,-99) , 
8, 9.31019, 0, 0, 0.49436,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.041553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490132,-99) , 
4, 4.57102, 1, 0, 0.513201,-99) , 
6, 0.360607, 1, 0, 0.518068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492055,-99) , 
12, -0.370704, 1, 0, 0.497011,-99) , 
NN(
0, 
0, 
-1, 5.98927, 1, -1, 0.466048,-99) , 
11, -2.86913, 0, 0, 0.485031,-99) , 
3, 5.96855, 0, 0, 0.499398,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0295557);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.52795, 0, 1, 0.514098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491384,-99) , 
10, 1.28756, 0, 0, 0.499147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438689,-99) , 
6, 0.333821, 0, 0, 0.494716,-99) , 
8, 6.91146, 1, 0, 0.506507,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0230068);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.555453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468615,-99) , 
10, -1.10214, 1, 0, 0.499897,-99) , 
3, 7.15565, 0, 0, 0.522163,-99) , 
NN(
0, 
0, 
-1, 0.214776, 1, -1, 0.493851,-99) , 
11, -4.06432, 1, 0, 0.497923,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0443989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496266,-99) , 
12, -0.60751, 1, 0, 0.511829,-99) , 
11, -1.04738, 0, 0, 0.517984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481676,-99) , 
4, 6.27829, 0, 0, 0.485684,-99) , 
6, 0.904661, 0, 0, 0.491695,-99) , 
1, -0.00178541, 1, 0, 0.499521,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.039831);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485806,-99) , 
10, 0.431911, 0, 0, 0.514188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47427,-99) , 
10, 0.298375, 1, 0, 0.496739,-99) , 
11, -2.58416, 0, 0, 0.504396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442785,-99) , 
5, 0.999048, 0, 0, 0.502338,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0471314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.236482, 1, 1, 0.520909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453153,-99) , 
11, -1.89868, 0, 0, 0.487326,-99) , 
12, -0.185674, 1, 0, 0.512104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49399,-99) , 
0, 0.502849, 0, 0, 0.502247,-99) , 
NN(
0, 
0, 
-1, -1.08308, 1, -1, 0.447,-99) , 
11, -3.36442, 0, 0, 0.489584,-99) , 
3, 5.49681, 0, 0, 0.500361,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0178958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.20091, 1, 1, 0.506723,-99) , 
NN(
0, 
0, 
-1, 0.493641, 1, -1, 0.490978,-99) , 
12, -0.75206, 0, 0, 0.500218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450523,-99) , 
0, 0.489521, 0, 0, 0.498703,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0387986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479116,-99) , 
12, -0.957273, 0, 0, 0.507565,-99) , 
11, -3.71795, 1, 0, 0.510372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483667,-99) , 
11, -3.8322, 0, 0, 0.49828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400506,-99) , 
10, -0.219452, 1, 0, 0.483815,-99) , 
12, -1.37042, 0, 0, 0.504224,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0319367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.90577, 1, 1, 0.507556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463712,-99) , 
11, -2.52808, 0, 0, 0.482343,-99) , 
2, -0.0708144, 0, 0, 0.503313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46461,-99) , 
3, 6.83845, 0, 0, 0.504378,-99) , 
NN(
0, 
0, 
-1, -0.692888, 1, -1, 0.446614,-99) , 
11, -4.18066, 1, 0, 0.483698,-99) , 
12, -1.61491, 0, 0, 0.499934,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0285482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492945,-99) , 
12, -1.23451, 0, 0, 0.505674,-99) , 
NN(
0, 
0, 
-1, 3.58513, 0, -1, 0.474524,-99) , 
0, 0.504348, 1, 0, 0.501942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458686,-99) , 
0, 0.495369, 1, 0, 0.494041,-99) , 
NN(
0, 
0, 
-1, 1.71888, 1, -1, 0.45302,-99) , 
8, 2.97126, 0, 0, 0.483193,-99) , 
0, 0.496185, 0, 0, 0.495971,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0387725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.37202, 1, 1, 0.511096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487025,-99) , 
0, 0.491424, 1, 0, 0.491038,-99) , 
13, 6.11349, 0, 0, 0.499867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445101,-99) , 
11, -1.82764, 0, 0, 0.485571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414791,-99) , 
12, 1.20004, 1, 0, 0.461545,-99) , 
10, 1.5715, 1, 0, 0.495066,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0362673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495257,-99) , 
0, 0.496457, 0, 0, 0.508575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482334,-99) , 
2, -0.0872748, 1, 0, 0.48862,-99) , 
0, 0.499995, 1, 0, 0.501547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47392,-99) , 
0, 0.497149, 0, 0, 0.499093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437942,-99) , 
13, 9.28939, 0, 0, 0.481614,-99) , 
8, 8.83754, 1, 0, 0.498486,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0348384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490045,-99) , 
11, -3.33242, 0, 0, 0.508634,-99) , 
NN(
0, 
0, 
-1, -2.83864, 0, -1, 0.489329,-99) , 
10, 0.431374, 1, 0, 0.499885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418285,-99) , 
13, 11.0621, 1, 0, 0.497442,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0221474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498461,-99) , 
10, 0.714109, 0, 0, 0.541544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496667,-99) , 
10, -1.28565, 1, 0, 0.499848,-99) , 
11, -1.29823, 0, 0, 0.502917,-99) , 
NN(
0, 
0, 
-1, -0.904734, 1, -1, 0.464883,-99) , 
12, 1.46138, 1, 0, 0.499487,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0398614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.43107, 0, 1, 0.512891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468765,-99) , 
6, 0.04727, 1, 0, 0.492417,-99) , 
10, 0.716753, 1, 0, 0.50581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463051,-99) , 
11, -2.24395, 0, 0, 0.489614,-99) , 
NN(
0, 
0, 
-1, -3.6964, 1, -1, 0.453964,-99) , 
10, 0.721751, 0, 0, 0.469596,-99) , 
8, 8.91809, 1, 0, 0.500451,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0198884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.506185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429918,-99) , 
5, 0.999751, 0, 0, 0.503936,-99) , 
NN(
0, 
0, 
-1, -0.820074, 1, -1, 0.457424,-99) , 
5, 0.999524, 0, 0, 0.501411,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0372609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460108,-99) , 
12, -2.70233, 0, 0, 0.531299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47405,-99) , 
3, 4.57521, 0, 0, 0.519904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494803,-99) , 
11, -3.39542, 1, 0, 0.498757,-99) , 
NN(
0, 
0, 
-1, 0.0381869, 1, -1, 0.464487,-99) , 
12, -1.05718, 0, 0, 0.492204,-99) , 
11, -3.96059, 1, 0, 0.496687,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0396429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.43486, 1, 1, 0.512902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469399,-99) , 
10, -0.677966, 1, 0, 0.494135,-99) , 
12, -1.03665, 0, 0, 0.506879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431892,-99) , 
2, 0.215158, 1, 0, 0.504043,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0281711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.719871, 0, 1, 0.529018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442208,-99) , 
0, 0.494918, 0, 0, 0.500493,-99) , 
0, 0.494283, 1, 0, 0.505957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484757,-99) , 
13, 6.88623, 0, 0, 0.505214,-99) , 
NN(
0, 
0, 
-1, 8.05254, 0, -1, 0.466879,-99) , 
0, 0.499051, 0, 0, 0.484194,-99) , 
4, 4.47814, 1, 0, 0.501727,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.018503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461101,-99) , 
10, -1.28562, 0, 0, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46117,-99) , 
1, 0.0103564, 1, 0, 0.500653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442703,-99) , 
12, -2.474, 0, 0, 0.497853,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0199491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.813721, 0, 1, 0.506918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455204,-99) , 
6, 0.904494, 1, 0, 0.504676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446951,-99) , 
13, 11.0044, 1, 0, 0.502842,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0379165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489263,-99) , 
10, -0.999901, 1, 0, 0.493897,-99) , 
10, 1.66537, 0, 0, 0.497285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47533,-99) , 
3, 2.18392, 0, 0, 0.487508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415271,-99) , 
6, -0.238175, 1, 0, 0.47142,-99) , 
12, 0.6674, 1, 0, 0.492072,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0254721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488502,-99) , 
8, 9.2383, 1, 0, 0.513478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473541,-99) , 
13, 7.09896, 1, 0, 0.498654,-99) , 
3, 7.50727, 0, 0, 0.502277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453384,-99) , 
1, 0.0121806, 1, 0, 0.50084,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0216612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496227,-99) , 
5, 0.999524, 1, 0, 0.498166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464734,-99) , 
0, 0.490472, 0, 0, 0.496466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452023,-99) , 
13, 10.7146, 1, 0, 0.483355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422648,-99) , 
8, 9.83176, 0, 0, 0.464303,-99) , 
13, 9.55426, 1, 0, 0.493363,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0332317);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469241,-99) , 
6, -0.714126, 0, 0, 0.518082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47763,-99) , 
2, -0.00255251, 1, 0, 0.49105,-99) , 
2, 0.0722158, 0, 0, 0.495237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420069,-99) , 
10, -1.57667, 1, 0, 0.456769,-99) , 
12, -2.28251, 0, 0, 0.492672,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0241831);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49424,-99) , 
10, -1.36201, 1, 0, 0.49746,-99) , 
NN(
0, 
0, 
-1, -0.333806, 1, -1, 0.473137,-99) , 
12, 0.935713, 1, 0, 0.493525,-99) , 
3, 9.9044, 0, 0, 0.494944,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0265817);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468524,-99) , 
9, -951.286, 0, 0, 0.52304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492864,-99) , 
11, -0.626491, 0, 0, 0.495853,-99) , 
10, -1.28565, 1, 0, 0.497801,-99) , 
8, 10.7725, 0, 0, 0.499548,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0244058);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484318,-99) , 
12, -1.22533, 0, 0, 0.499621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451644,-99) , 
10, 2.1431, 1, 0, 0.497516,-99) , 
2, 0.211583, 0, 0, 0.500049,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0613063);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465889,-99) , 
6, 0.0472641, 0, 0, 0.514688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474299,-99) , 
5, 0.999999, 0, 0, 0.492494,-99) , 
5, 0.999977, 1, 0, 0.498565,-99) , 
NN(
0, 
0, 
-1, 7.99923, 0, -1, 0.449514,-99) , 
5, 0.999524, 0, 0, 0.496007,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0408058);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471406,-99) , 
6, 0.846826, 1, 0, 0.515357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486247,-99) , 
11, -2.36214, 0, 0, 0.495843,-99) , 
3, 6.72757, 0, 0, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446052,-99) , 
3, 1.5684, 0, 0, 0.500982,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0475779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.261789, 1, 1, 0.52315,-99) , 
NN(
0, 
0, 
-1, 0.498105, 0, -1, 0.481209,-99) , 
8, 3.05266, 0, 0, 0.517995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483214,-99) , 
10, 1.57176, 0, 0, 0.494846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39856,-99) , 
6, 0.714077, 1, 0, 0.484965,-99) , 
12, 0.0914826, 1, 0, 0.506819,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0319074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471155,-99) , 
10, 0.53384, 0, 0, 0.537939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441735,-99) , 
12, 0.431228, 1, 0, 0.498915,-99) , 
11, -1.6556, 0, 0, 0.501833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468637,-99) , 
0, 0.49715, 1, 0, 0.487863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393042,-99) , 
3, 3.52133, 1, 0, 0.471432,-99) , 
12, 0.98394, 1, 0, 0.497328,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0586328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.435364, 1, 1, 0.578234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462694,-99) , 
3, 1.83536, 0, 0, 0.497691,-99) , 
3, 3.37352, 0, 0, 0.508868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479874,-99) , 
10, -0.496953, 1, 0, 0.50316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461006,-99) , 
10, 0.140711, 1, 0, 0.46838,-99) , 
11, -3.40469, 1, 0, 0.4828,-99) , 
6, -0.333346, 1, 0, 0.492875,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0450756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.00038, 1, 1, 0.527279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486324,-99) , 
5, 0.999524, 1, 0, 0.493641,-99) , 
6, 0.38312, 1, 0, 0.50839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452605,-99) , 
12, -0.525182, 0, 0, 0.49907,-99) , 
NN(
0, 
0, 
-1, -0.877213, 1, -1, 0.456356,-99) , 
4, 0.964857, 0, 0, 0.487996,-99) , 
3, 3.04814, 0, 0, 0.502225,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0308987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.182085, 1, 1, 0.535509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483154,-99) , 
3, 3.55682, 0, 0, 0.517686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486329,-99) , 
0, 0.498091, 0, 0, 0.497034,-99) , 
NN(
0, 
0, 
-1, -0.794401, 1, -1, 0.468383,-99) , 
12, -1.77922, 0, 0, 0.493159,-99) , 
2, 0.0726892, 0, 0, 0.496831,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0300728);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459945,-99) , 
12, 0.764338, 1, 0, 0.50768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466976,-99) , 
11, -2.42808, 0, 0, 0.488809,-99) , 
3, 4.02816, 0, 0, 0.500032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44162,-99) , 
12, -2.71692, 0, 0, 0.498308,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0347725);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.896813, 0, 1, 0.556471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446533,-99) , 
3, 6.83446, 0, 0, 0.504451,-99) , 
NN(
0, 
0, 
-1, 0.521323, 1, -1, 0.487329,-99) , 
13, 7.10434, 0, 0, 0.492702,-99) , 
8, 10.2207, 0, 0, 0.496118,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0316497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484225,-99) , 
8, 6.09299, 1, 0, 0.507608,-99) , 
13, 8.43643, 0, 0, 0.527244,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488806,-99) , 
5, 0.99991, 1, 0, 0.492669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439785,-99) , 
5, 0.999051, 0, 0, 0.491027,-99) , 
10, 1.857, 0, 0, 0.494162,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0507156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486786,-99) , 
8, 2.87251, 0, 0, 0.518544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467926,-99) , 
9, -951.286, 1, 0, 0.490227,-99) , 
6, 0.333168, 1, 0, 0.507218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480683,-99) , 
10, -0.142804, 1, 0, 0.488532,-99) , 
NN(
0, 
0, 
-1, -0.844901, 1, -1, 0.452212,-99) , 
12, -1.81637, 0, 0, 0.483708,-99) , 
0, 0.497138, 1, 0, 0.493094,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0418748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.63707, 0, 1, 0.519828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437142,-99) , 
1, -0.000557718, 1, 0, 0.473697,-99) , 
10, 1.28571, 1, 0, 0.512712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499298,-99) , 
8, 8.01833, 0, 0, 0.527704,-99) , 
NN(
0, 
0, 
-1, 1.57292, 1, -1, 0.484289,-99) , 
1, -0.00317968, 1, 0, 0.489438,-99) , 
6, 0.238078, 1, 0, 0.502281,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0219693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.70064, 0, 1, 0.507505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463867,-99) , 
2, -0.21276, 0, 0, 0.505628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447786,-99) , 
12, 2.01494, 1, 0, 0.502638,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0422435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46045,-99) , 
12, 0.154839, 1, 0, 0.501026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418209,-99) , 
10, -1.57771, 1, 0, 0.462884,-99) , 
12, -2.26508, 0, 0, 0.497658,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471433,-99) , 
0, 0.498089, 0, 0, 0.50843,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.451444,-99) , 
11, -1.04346, 0, 0, 0.477961,-99) , 
11, -1.94235, 1, 0, 0.492393,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0669751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.64875, 1, 1, 0.520333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461206,-99) , 
6, -0.65091, 1, 0, 0.494764,-99) , 
8, 4.79964, 0, 0, 0.506394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496247,-99) , 
9, 0.60383, 0, 0, 0.515886,-99) , 
NN(
0, 
0, 
-1, -2.11586, 0, -1, 0.254242,-99) , 
9, -1.57197, 0, 0, 0.488175,-99) , 
9, -951.286, 1, 0, 0.496397,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0331549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.545001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469526,-99) , 
10, 0.719106, 1, 0, 0.503277,-99) , 
0, 0.498087, 1, 0, 0.523675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496382,-99) , 
11, -4.04895, 1, 0, 0.501296,-99) , 
NN(
0, 
0, 
-1, -2.0845, 0, -1, 0.47954,-99) , 
0, 0.497137, 0, 0, 0.492333,-99) , 
11, -1.17537, 0, 0, 0.496805,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0334237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.38652, 1, 1, 0.515085,-99) , 
NN(
0, 
0, 
-1, 0.138475, 1, -1, 0.489322,-99) , 
12, -0.943802, 0, 0, 0.503983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472808,-99) , 
10, 0.140183, 1, 0, 0.499968,-99) , 
NN(
0, 
0, 
-1, 0.713162, 1, -1, 0.468376,-99) , 
0, 0.497147, 1, 0, 0.48174,-99) , 
3, 2.54506, 0, 0, 0.499023,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0118233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556848,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.498219,-99) , 
11, -4.43541, 1, 0, 0.49997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436155,-99) , 
10, -1.5712, 1, 0, 0.46352,-99) , 
12, -2.23366, 0, 0, 0.497526,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.02748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.23403, 0, 1, 0.53343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492736,-99) , 
0, 0.497138, 1, 0, 0.500612,-99) , 
6, -0.814058, 1, 0, 0.503407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471166,-99) , 
12, 1.19322, 0, 0, 0.49477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436481,-99) , 
6, -0.97279, 0, 0, 0.4769,-99) , 
6, -0.904766, 0, 0, 0.500655,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0313141);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498162,-99) , 
3, 5.393, 0, 0, 0.507404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462641,-99) , 
8, 10.1327, 1, 0, 0.504994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488974,-99) , 
12, -1.81968, 0, 0, 0.508668,-99) , 
NN(
0, 
0, 
-1, -0.898436, 1, -1, 0.449145,-99) , 
12, -2.0039, 0, 0, 0.471479,-99) , 
12, -1.65212, 0, 0, 0.499435,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0344165);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.03415, 1, 1, 0.535115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427397,-99) , 
13, 7.5721, 1, 0, 0.50925,-99) , 
NN(
0, 
0, 
-1, 8.31431, 0, -1, 0.483364,-99) , 
8, 7.73901, 1, 0, 0.503076,-99) , 
6, 0.90452, 0, 0, 0.504945,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0875623);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497964,-99) , 
9, -0.482787, 0, 0, 0.539035,-99) , 
NN(
0, 
0, 
-1, -2.04748, 0, -1, 0.263138,-99) , 
9, -1.5712, 0, 0, 0.508987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477012,-99) , 
11, -3.50682, 1, 0, 0.485883,-99) , 
10, 2.14296, 0, 0, 0.489144,-99) , 
9, -951.286, 0, 0, 0.500051,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0335152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475817,-99) , 
11, -3.21236, 0, 0, 0.501932,-99) , 
11, -3.73233, 1, 0, 0.504452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485454,-99) , 
6, 0.730009, 1, 0, 0.505363,-99) , 
NN(
0, 
0, 
-1, -0.44641, 1, -1, 0.459785,-99) , 
8, 7.63143, 0, 0, 0.478017,-99) , 
12, -1.3943, 0, 0, 0.498372,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0284692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00838765, 0, 1, 0.509668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439096,-99) , 
1, 0.0115451, 1, 0, 0.507269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387588,-99) , 
1, -0.0125855, 0, 0, 0.503926,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0250016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479675,-99) , 
9, -951.287, 0, 0, 0.519745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539035,-99) , 
NN(
0, 
0, 
-1, 1.13647, 1, -1, 0.491195,-99) , 
8, 1.7892, 1, 0, 0.493402,-99) , 
10, -1.28562, 1, 0, 0.495388,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0295898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.84297, 0, 1, 0.511951,-99) , 
NN(
0, 
0, 
-1, 5.856, 1, -1, 0.482912,-99) , 
12, 0.677247, 1, 0, 0.505993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425454,-99) , 
12, -2.77431, 0, 0, 0.503657,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0284658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499757,-99) , 
4, 4.43942, 0, 0, 0.506687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442627,-99) , 
3, 9.27531, 0, 0, 0.471051,-99) , 
3, 8.43333, 1, 0, 0.502234,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.479556,-99) , 
0, 0.497138, 0, 0, 0.493008,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0809219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441096,-99) , 
9, -1.13581, 0, 0, 0.537109,-99) , 
NN(
0, 
0, 
-1, -2.11543, 0, -1, 0.314799,-99) , 
9, -1.5712, 0, 0, 0.51243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49669,-99) , 
10, 1.57123, 0, 0, 0.502632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437319,-99) , 
12, 2.00348, 1, 0, 0.497659,-99) , 
9, -951.286, 0, 0, 0.505738,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.033788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.515952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472719,-99) , 
13, 2.54083, 1, 0, 0.494459,-99) , 
13, 3.41206, 0, 0, 0.509016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452583,-99) , 
13, 10.73, 1, 0, 0.506763,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0356762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474376,-99) , 
6, 0.714205, 1, 0, 0.500642,-99) , 
11, -3.34595, 1, 0, 0.505121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456763,-99) , 
8, 4.57773, 0, 0, 0.496072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429782,-99) , 
10, 0.106117, 1, 0, 0.485906,-99) , 
12, -0.989768, 0, 0, 0.498652,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0397186);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492893,-99) , 
0, 0.499039, 0, 0, 0.50409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468233,-99) , 
11, -3.5857, 1, 0, 0.478169,-99) , 
4, 2.61357, 1, 0, 0.496915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473817,-99) , 
6, -0.523883, 1, 0, 0.485173,-99) , 
NN(
0, 
0, 
-1, 0.428803, 0, -1, 0.439173,-99) , 
2, -0.0700353, 0, 0, 0.472377,-99) , 
4, 4.48201, 1, 0, 0.49216,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0594182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458297,-99) , 
8, 8.37736, 1, 0, 0.50629,-99) , 
8, 9.58457, 0, 0, 0.510543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483601,-99) , 
10, 0.715874, 0, 0, 0.503453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262251,-99) , 
9, -1.85525, 0, 0, 0.486471,-99) , 
9, -951.286, 1, 0, 0.497347,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0266409);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453076,-99) , 
12, -2.35213, 0, 0, 0.501106,-99) , 
NN(
0, 
0, 
-1, -0.904797, 1, -1, 0.469986,-99) , 
12, 1.63001, 1, 0, 0.498695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448231,-99) , 
6, 0.6602, 1, 0, 0.485191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441906,-99) , 
3, 3.53639, 0, 0, 0.470751,-99) , 
2, -0.0710983, 0, 0, 0.494137,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0345452);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486061,-99) , 
8, 7.65642, 0, 0, 0.492115,-99) , 
NN(
0, 
0, 
-1, 9.99844, 0, -1, 0.445971,-99) , 
13, 9.5859, 1, 0, 0.489511,-99) , 
3, 9.49097, 0, 0, 0.49172,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0461825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489109,-99) , 
10, -0.941498, 1, 0, 0.499279,-99) , 
12, -0.514919, 0, 0, 0.506474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474355,-99) , 
4, 1.26723, 0, 0, 0.496742,-99) , 
NN(
0, 
0, 
-1, 0.60232, 1, -1, 0.460835,-99) , 
6, 0.0474969, 1, 0, 0.482874,-99) , 
11, -2.96145, 1, 0, 0.493507,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0199469);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44798,-99) , 
5, 0.999751, 0, 0, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45811,-99) , 
5, 0.999524, 0, 0, 0.499402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455434,-99) , 
10, -1.03611, 1, 0, 0.490141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416637,-99) , 
4, 4.02823, 1, 0, 0.470127,-99) , 
12, -1.99955, 0, 0, 0.496399,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0505625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479777,-99) , 
0, 0.500938, 1, 0, 0.528077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384631,-99) , 
12, -1.6457, 0, 0, 0.493651,-99) , 
10, -0.551155, 1, 0, 0.50519,-99) , 
NN(
0, 
0, 
-1, -0.999983, 0, -1, 0.474902,-99) , 
11, -2.84878, 1, 0, 0.489546,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0347274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494093,-99) , 
12, 0.00769318, 1, 0, 0.50831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448569,-99) , 
9, -951.287, 0, 0, 0.478592,-99) , 
0, 0.490879, 0, 0, 0.505346,-99) , 
NN(
0, 
0, 
-1, -1.70826, 0, -1, 0.47809,-99) , 
0, 0.499042, 1, 0, 0.493551,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0426974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478828,-99) , 
10, 1.5723, 1, 0, 0.516007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480168,-99) , 
10, -1.02361, 1, 0, 0.491397,-99) , 
12, -1.02121, 0, 0, 0.507861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484457,-99) , 
10, 2.23854, 1, 0, 0.523565,-99) , 
NN(
0, 
0, 
-1, -2.50976, 0, -1, 0.480807,-99) , 
10, 1.8578, 0, 0, 0.484463,-99) , 
0, 0.499995, 0, 0, 0.4925,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0188656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466875,-99) , 
12, 0.982919, 1, 0, 0.498074,-99) , 
11, 0.199312, 0, 0, 0.499801,-99) , 
NN(
0, 
0, 
-1, 3.83265, 1, -1, 0.454543,-99) , 
0, 0.491424, 0, 0, 0.496485,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0219203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14226, 0, 1, 0.505171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431975,-99) , 
10, 1.06708, 1, 0, 0.470501,-99) , 
12, 1.61301, 1, 0, 0.502137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506233,-99) , 
NN(
0, 
0, 
-1, 0.338752, 1, -1, 0.453748,-99) , 
8, 8.13481, 0, 0, 0.471779,-99) , 
12, -1.9114, 0, 0, 0.498643,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0251009);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492172,-99) , 
11, -1.23528, 0, 0, 0.495223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425507,-99) , 
8, 1.8423, 0, 0, 0.493283,-99) , 
11, 0.0913196, 0, 0, 0.49543,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.017986);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480487,-99) , 
12, -1.83244, 0, 0, 0.501431,-99) , 
NN(
0, 
0, 
-1, -0.98382, 1, -1, 0.463833,-99) , 
8, 9.31556, 1, 0, 0.498868,-99) , 
3, 9.48911, 0, 0, 0.50017,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0297178);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491911,-99) , 
10, -0.466695, 1, 0, 0.497641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442192,-99) , 
10, -1.28266, 0, 0, 0.495291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450811,-99) , 
12, -2.474, 0, 0, 0.493188,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0118729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450079,-99) , 
12, 1.6516, 1, 0, 0.498303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427872,-99) , 
8, 1.82494, 0, 0, 0.496209,-99) , 
11, 0.494903, 0, 0, 0.497891,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0373547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.755926, 0, 1, 0.549145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491657,-99) , 
6, 0.870715, 1, 0, 0.525078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428953,-99) , 
12, -2.28251, 0, 0, 0.507423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484725,-99) , 
1, 0.00794264, 0, 0, 0.489073,-99) , 
0, 0.498096, 1, 0, 0.498107,-99) , 
3, 8.46288, 0, 0, 0.501283,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0485661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.427846, 0, 1, 0.528797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4461,-99) , 
12, -2.82706, 0, 0, 0.51465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490744,-99) , 
12, 0.889094, 1, 0, 0.508577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477307,-99) , 
10, -0.525939, 1, 0, 0.48495,-99) , 
11, -1.81601, 0, 0, 0.49165,-99) , 
11, -4.00702, 1, 0, 0.495041,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0326774);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.94359, 0, 1, 0.516923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411181,-99) , 
0, 0.497137, 0, 0, 0.471561,-99) , 
4, 4.44634, 1, 0, 0.509104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451799,-99) , 
10, 0.83557, 1, 0, 0.49619,-99) , 
NN(
0, 
0, 
-1, 2.27049, 1, -1, 0.454412,-99) , 
8, 3.74328, 0, 0, 0.488568,-99) , 
12, -0.324822, 0, 0, 0.497828,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0268943);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542856,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493152,-99) , 
13, 6.09456, 0, 0, 0.503347,-99) , 
NN(
0, 
0, 
-1, -0.539793, 0, -1, 0.487083,-99) , 
10, 0.428602, 1, 0, 0.495853,-99) , 
0, 0.505709, 0, 0, 0.497818,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0263728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.508775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442681,-99) , 
12, 2.42925, 1, 0, 0.506435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385191,-99) , 
12, -0.820074, 1, 0, 0.451268,-99) , 
5, 0.999524, 0, 0, 0.503446,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0444175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0700353, 1, 1, 0.521499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466788,-99) , 
12, 0.421098, 0, 0, 0.495959,-99) , 
8, 3.0416, 0, 0, 0.514475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439613,-99) , 
6, 0.884995, 1, 0, 0.507983,-99) , 
NN(
0, 
0, 
-1, -0.549872, 1, -1, 0.480917,-99) , 
3, 5.97518, 0, 0, 0.492351,-99) , 
1, 0.000160057, 0, 0, 0.503203,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0359624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.546764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470757,-99) , 
10, 0.148646, 0, 0, 0.49081,-99) , 
0, 0.491152, 0, 0, 0.520526,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488101,-99) , 
1, -0.00370537, 1, 0, 0.493204,-99) , 
NN(
0, 
0, 
-1, 1.84291, 1, -1, 0.468952,-99) , 
6, -0.904765, 0, 0, 0.490673,-99) , 
0, 0.493328, 1, 0, 0.494993,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0277268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496363,-99) , 
3, 6.93873, 0, 0, 0.499358,-99) , 
1, 0.0103564, 0, 0, 0.503233,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431732,-99) , 
10, 1.93693, 1, 0, 0.496371,-99) , 
NN(
0, 
0, 
-1, 8.62417, 0, -1, 0.440185,-99) , 
11, -3.96067, 0, 0, 0.483549,-99) , 
6, 0.523729, 1, 0, 0.496747,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0365678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498068, 0, 1, 0.550311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487898,-99) , 
4, 7.9935, 0, 0, 0.49036,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.43925,-99) , 
5, 0.999524, 0, 0, 0.487558,-99) , 
11, -0.172408, 0, 0, 0.491546,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0354876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.16624, 0, 1, 0.538888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438229,-99) , 
10, 1.85791, 1, 0, 0.503718,-99) , 
6, 0.332961, 0, 0, 0.513189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495446,-99) , 
7, 0.00764249, 0, 0, 0.499218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391668,-99) , 
7, 0.0114673, 1, 0, 0.493912,-99) , 
12, -0.296832, 0, 0, 0.502543,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0275358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2128, 0, 1, 0.523444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466553,-99) , 
10, -0.71421, 0, 0, 0.50388,-99) , 
11, -3.51271, 1, 0, 0.508474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465219,-99) , 
12, -2.47438, 0, 0, 0.506514,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0478468);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487191,-99) , 
12, -1.79325, 0, 0, 0.529397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443903,-99) , 
3, 1.82307, 0, 0, 0.500964,-99) , 
10, 0.142682, 1, 0, 0.515056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449773,-99) , 
12, 0.590619, 1, 0, 0.501022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456071,-99) , 
8, 9.03957, 0, 0, 0.470886,-99) , 
12, -0.874431, 0, 0, 0.485802,-99) , 
6, 0.333307, 1, 0, 0.502893,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0320313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.670002, 0, 1, 0.514593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459586,-99) , 
10, -0.14053, 0, 0, 0.49583,-99) , 
11, -3.00746, 1, 0, 0.502729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478369,-99) , 
10, -1.60024, 1, 0, 0.504136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376837,-99) , 
10, -0.901319, 1, 0, 0.471093,-99) , 
12, -1.99955, 0, 0, 0.49958,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0348595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.8573, 0, 1, 0.507301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46523,-99) , 
1, 0.00233228, 0, 0, 0.48317,-99) , 
0, 0.503079, 1, 0, 0.500829,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.479538,-99) , 
0, 0.49809, 0, 0, 0.490452,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0617867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.33763, 0, 1, 0.542101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462311,-99) , 
4, 3.3691, 1, 0, 0.521154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462457,-99) , 
7, 0.00163877, 0, 0, 0.49351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410471,-99) , 
7, 0.0114678, 1, 0, 0.489955,-99) , 
6, -0.714321, 1, 0, 0.497332,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0411694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482443,-99) , 
10, -1.18911, 1, 0, 0.48598,-99) , 
10, 2.42852, 0, 0, 0.487587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425559,-99) , 
5, 0.999048, 0, 0, 0.485595,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0281768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492212,-99) , 
0, 0.495233, 1, 0, 0.498436,-99) , 
4, 8.55516, 0, 0, 0.500196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402824,-99) , 
5, 0.999048, 0, 0, 0.497264,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.035324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444865,-99) , 
13, 7.09896, 1, 0, 0.504525,-99) , 
3, 6.94149, 0, 0, 0.50749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481432,-99) , 
6, 0.773138, 1, 0, 0.501979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432284,-99) , 
6, 0.818451, 0, 0, 0.461197,-99) , 
12, -1.43865, 0, 0, 0.489362,-99) , 
6, 0.523718, 1, 0, 0.501606,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.041414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.63751, 0, 1, 0.55668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436662,-99) , 
12, -1.77133, 0, 0, 0.501317,-99) , 
10, -0.706835, 1, 0, 0.509213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489068,-99) , 
3, 2.93897, 0, 0, 0.497064,-99) , 
NN(
0, 
0, 
-1, -0.606057, 1, -1, 0.459035,-99) , 
12, 0.0549428, 0, 0, 0.480272,-99) , 
8, 4.35623, 0, 0, 0.497616,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0268518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485044,-99) , 
3, 9.61039, 0, 0, 0.500298,-99) , 
4, 4.53023, 0, 0, 0.517106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474268,-99) , 
0, 0.494282, 0, 0, 0.495063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434522,-99) , 
13, 8.50594, 1, 0, 0.491534,-99) , 
3, 7.96716, 0, 0, 0.495975,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0316398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505073, 1, 1, 0.536992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483503,-99) , 
11, -2.23765, 1, 0, 0.515952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48855,-99) , 
9, -951.286, 1, 0, 0.501552,-99) , 
NN(
0, 
0, 
-1, 6.40862, 1, -1, 0.487167,-99) , 
8, 6.98122, 0, 0, 0.492703,-99) , 
0, 0.503803, 0, 0, 0.495156,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0480109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.535353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447381,-99) , 
6, -0.375623, 1, 0, 0.502868,-99) , 
3, 4.79396, 0, 0, 0.511385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549834,-99) , 
NN(
0, 
0, 
-1, 0.10382, 1, -1, 0.48204,-99) , 
10, 2.1437, 0, 0, 0.486536,-99) , 
6, 0.428509, 1, 0, 0.502043,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0454891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.88903, 0, 1, 0.571752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477484,-99) , 
9, -951.286, 0, 0, 0.507102,-99) , 
10, -1.04015, 0, 0, 0.530782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489753,-99) , 
6, 0.809272, 0, 0, 0.496535,-99) , 
NN(
0, 
0, 
-1, -2.16312, 0, -1, 0.466509,-99) , 
10, 1.40832, 1, 0, 0.490744,-99) , 
10, -0.713657, 1, 0, 0.49775,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0397564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.345235, 0, 1, 0.575438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492313,-99) , 
4, 2.22424, 0, 0, 0.503638,-99) , 
4, 0.509055, 1, 0, 0.509468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47871,-99) , 
10, 0.00716769, 1, 0, 0.49971,-99) , 
NN(
0, 
0, 
-1, 0.332959, 0, -1, 0.451559,-99) , 
10, 0.714564, 1, 0, 0.48187,-99) , 
4, 4.51103, 1, 0, 0.504223,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0261261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.32164, 0, 1, 0.538496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465945,-99) , 
6, 0.943764, 1, 0, 0.492601,-99) , 
6, 0.882008, 1, 0, 0.513522,-99) , 
NN(
0, 
0, 
-1, 0.723269, 1, -1, 0.489044,-99) , 
6, 0.809437, 0, 0, 0.492365,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0306163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496684, 0, 1, 0.51821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48725,-99) , 
3, 3.89566, 0, 0, 0.502976,-99) , 
0, 0.497138, 1, 0, 0.509059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460681,-99) , 
3, 1.55754, 0, 0, 0.507608,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0399436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.33675, 0, 1, 0.514715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447014,-99) , 
0, 0.490881, 1, 0, 0.476964,-99) , 
0, 0.493329, 0, 0, 0.508051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487614,-99) , 
6, 0.681774, 1, 0, 0.50013,-99) , 
NN(
0, 
0, 
-1, -2.25251, 0, -1, 0.477183,-99) , 
3, 7.22433, 0, 0, 0.487924,-99) , 
6, -0.23811, 1, 0, 0.496254,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0477128);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46037,-99) , 
12, -2.83699, 0, 0, 0.538893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443268,-99) , 
10, 0.124906, 0, 0, 0.493179,-99) , 
10, -0.32063, 1, 0, 0.520551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495742,-99) , 
1, 0.00236311, 0, 0, 0.503004,-99) , 
NN(
0, 
0, 
-1, 0.498101, 1, -1, 0.449452,-99) , 
10, -0.71363, 0, 0, 0.498608,-99) , 
11, -3.41989, 1, 0, 0.505149,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0223396);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482275,-99) , 
12, -0.949929, 0, 0, 0.514416,-99) , 
NN(
0, 
0, 
-1, -2.79579, 0, -1, 0.493993,-99) , 
0, 0.502852, 0, 0, 0.497127,-99) , 
11, 0.494903, 0, 0, 0.499532,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0797256);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354058,-99) , 
9, -1.28474, 0, 0, 0.525605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443058,-99) , 
10, -0.709748, 0, 0, 0.501096,-99) , 
9, -951.286, 0, 0, 0.513578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405248,-99) , 
10, -0.0142872, 1, 0, 0.480246,-99) , 
12, -0.878868, 0, 0, 0.490319,-99) , 
11, -3.16322, 0, 0, 0.50461,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0331015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.89305, 1, 1, 0.552642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497398,-99) , 
10, -0.998647, 1, 0, 0.502283,-99) , 
11, -1.01158, 0, 0, 0.509102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487493,-99) , 
4, 3.866, 0, 0, 0.492088,-99) , 
NN(
0, 
0, 
-1, 0.49632, 0, -1, 0.463381,-99) , 
4, 4.48883, 1, 0, 0.486947,-99) , 
0, 0.499043, 0, 0, 0.49641,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0300443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.106481, 1, 1, 0.513127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479821,-99) , 
4, 2.10131, 1, 0, 0.495302,-99) , 
8, 4.30416, 0, 0, 0.505921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445387,-99) , 
5, 0.999048, 0, 0, 0.504083,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0430937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575744,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453614,-99) , 
6, 0.89523, 1, 0, 0.498777,-99) , 
3, 8.01667, 1, 0, 0.514127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467702,-99) , 
10, 1.857, 1, 0, 0.498885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47288,-99) , 
10, -1.61558, 1, 0, 0.477666,-99) , 
11, -2.74637, 0, 0, 0.488119,-99) , 
8, 8.83754, 0, 0, 0.491974,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0302533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490154, 0, 1, 0.542427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494184,-99) , 
10, 0.429366, 1, 0, 0.503665,-99) , 
0, 0.491424, 1, 0, 0.506519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533974,-99) , 
NN(
0, 
0, 
-1, 0.833078, 1, -1, 0.463163,-99) , 
2, 0.0682512, 0, 0, 0.476496,-99) , 
8, 8.92473, 1, 0, 0.502038,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.019383);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.537599,-99) , 
NN(
NN(
0, 
0, 
-1, 0.854537, 1, 1, 0.526961,-99) , 
NN(
0, 
0, 
-1, -1.88223, 0, -1, 0.495941,-99) , 
6, 0.809087, 0, 0, 0.500082,-99) , 
10, 1.85736, 0, 0, 0.503249,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0250562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472353,-99) , 
12, 1.82527, 1, 0, 0.505351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434387,-99) , 
3, 9.65899, 0, 0, 0.465278,-99) , 
13, 10.1033, 1, 0, 0.502831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447731,-99) , 
12, -2.71692, 0, 0, 0.501132,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.044842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491651,-99) , 
12, -0.236932, 1, 0, 0.516822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412834,-99) , 
10, -1.29371, 1, 0, 0.468825,-99) , 
12, -2.21129, 0, 0, 0.511885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491181,-99) , 
8, 3.33429, 0, 0, 0.497751,-99) , 
NN(
0, 
0, 
-1, -0.451253, 0, -1, 0.459475,-99) , 
6, -0.523824, 1, 0, 0.490997,-99) , 
6, -0.333334, 0, 0, 0.503671,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0282169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457967,-99) , 
6, 0.904724, 1, 0, 0.500769,-99) , 
11, -3.77577, 1, 0, 0.503504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493233,-99) , 
10, -1.54413, 0, 0, 0.526035,-99) , 
NN(
0, 
0, 
-1, -2.10831, 0, -1, 0.456614,-99) , 
10, -1.09142, 1, 0, 0.480493,-99) , 
12, -1.48039, 0, 0, 0.498792,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0408755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.44937, 0, 1, 0.526132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438465,-99) , 
8, 6.54192, 1, 0, 0.490211,-99) , 
11, -1.95997, 0, 0, 0.516369,-99) , 
NN(
NN(
0, 
0, 
-1, -1.7818, 1, 1, 0.534843,-99) , 
NN(
0, 
0, 
-1, 0.0112312, 1, -1, 0.486146,-99) , 
10, -1.40106, 1, 0, 0.490289,-99) , 
12, 0.00769318, 0, 0, 0.499536,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0283583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495155,-99) , 
4, 1.7106, 1, 0, 0.502646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457437,-99) , 
4, 8.60831, 1, 0, 0.50122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447552,-99) , 
9, -951.287, 0, 0, 0.484185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421544,-99) , 
8, 8.21243, 1, 0, 0.467255,-99) , 
10, 1.57224, 1, 0, 0.496996,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.028956);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497562,-99) , 
12, -1.09883, 0, 0, 0.5101,-99) , 
NN(
0, 
0, 
-1, -0.428566, 0, -1, 0.488091,-99) , 
11, -3.40755, 1, 0, 0.494062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444525,-99) , 
12, -2.47817, 0, 0, 0.491789,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0215122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489928, 1, 1, 0.507063,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.471386,-99) , 
0, 0.503804, 1, 0, 0.503192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448772,-99) , 
12, -2.70779, 0, 0, 0.501432,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.020003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4987,-99) , 
0, 0.5, 1, 0, 0.537094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486358,-99) , 
0, 0.496172, 0, 0, 0.536163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455889,-99) , 
12, -1.65314, 0, 0, 0.496605,-99) , 
11, -4.39588, 1, 0, 0.500062,-99) , 
1, -0.00621516, 1, 0, 0.502938,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0264292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.13438, 0, 1, 0.536393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476923,-99) , 
12, -1.44991, 0, 0, 0.502643,-99) , 
11, -4.38182, 1, 0, 0.505657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442247,-99) , 
12, 2.27534, 1, 0, 0.503154,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0161696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.92847, 0, 1, 0.503959,-99) , 
NN(
0, 
0, 
-1, -951.288, 0, -1, 0.465686,-99) , 
0, 0.504756, 1, 0, 0.501244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424691,-99) , 
12, -2.79366, 0, 0, 0.499063,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0335282);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495994,-99) , 
11, -2.43772, 0, 0, 0.502674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458081,-99) , 
10, 1.53561, 1, 0, 0.500175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478891,-99) , 
12, 0.607777, 1, 0, 0.491886,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.454746,-99) , 
10, 0.144763, 0, 0, 0.482389,-99) , 
11, -1.97424, 1, 0, 0.495207,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0294578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490413,-99) , 
0, 0.500676, 1, 0, 0.505567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4652,-99) , 
10, -1.56628, 0, 0, 0.503703,-99) , 
NN(
0, 
0, 
-1, 0.490336, 1, -1, 0.458816,-99) , 
0, 0.491424, 0, 0, 0.500459,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0269707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495669,-99) , 
3, 3.00523, 0, 0, 0.519353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491319,-99) , 
12, -0.32328, 0, 0, 0.499247,-99) , 
10, -0.714569, 1, 0, 0.502734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466576,-99) , 
2, -0.0867053, 1, 0, 0.498262,-99) , 
NN(
0, 
0, 
-1, 0.499999, 0, -1, 0.459273,-99) , 
2, -0.138492, 0, 0, 0.479421,-99) , 
2, -0.0705199, 0, 0, 0.499001,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0258815);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.511356, 1, 1, 0.509494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45432,-99) , 
4, 8.14435, 1, 0, 0.506708,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466656,-99) , 
11, -2.23409, 0, 0, 0.490979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450903,-99) , 
1, 0.00592662, 1, 0, 0.486207,-99) , 
11, -2.70506, 1, 0, 0.496989,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0271934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.429544, 0, 1, 0.524613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460807,-99) , 
2, -0.0708144, 0, 0, 0.49654,-99) , 
0, 0.501899, 0, 0, 0.502338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432745,-99) , 
12, -2.71692, 0, 0, 0.500018,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0371918);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491049,-99) , 
3, 7.232, 0, 0, 0.49584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43032,-99) , 
8, 9.7187, 1, 0, 0.493619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459887,-99) , 
12, -1.00101, 0, 0, 0.485287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408193,-99) , 
12, -0.383529, 1, 0, 0.461343,-99) , 
6, 0.809428, 1, 0, 0.489425,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0386461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00572553, 0, 1, 0.509001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44324,-99) , 
8, 1.77643, 0, 0, 0.504626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557546,-99) , 
NN(
0, 
0, 
-1, 0.415455, 0, -1, 0.476857,-99) , 
11, -3.62436, 1, 0, 0.480965,-99) , 
10, 0.143385, 1, 0, 0.491351,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.036527);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483544,-99) , 
11, -3.94415, 0, 0, 0.534294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491328,-99) , 
10, 1.62116, 0, 0, 0.496796,-99) , 
10, -0.619042, 1, 0, 0.500261,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468085,-99) , 
0, 0.499027, 0, 0, 0.492251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429667,-99) , 
11, -3.66734, 1, 0, 0.471088,-99) , 
10, -0.999983, 0, 0, 0.496767,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0280776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45316,-99) , 
12, 1.49123, 1, 0, 0.503954,-99) , 
8, 1.78249, 1, 0, 0.506306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440028,-99) , 
6, -0.239725, 1, 0, 0.471341,-99) , 
10, -1.28505, 0, 0, 0.503547,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0268196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494481,-99) , 
12, 2.00129, 1, 0, 0.528207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498908,-99) , 
11, -2.34384, 0, 0, 0.503836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434496,-99) , 
8, 4.51546, 1, 0, 0.473795,-99) , 
12, 0.182988, 1, 0, 0.496707,-99) , 
11, -0.590582, 0, 0, 0.499496,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0236419);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54626,-99) , 
NN(
0, 
0, 
-1, 1.45895, 1, -1, 0.489609,-99) , 
11, 0.334481, 0, 0, 0.491865,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0391792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468141,-99) , 
4, 5.05291, 1, 0, 0.506249,-99) , 
3, 4.07652, 0, 0, 0.511076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483639,-99) , 
1, -0.00113456, 1, 0, 0.49515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416218,-99) , 
7, 0.00795456, 1, 0, 0.49108,-99) , 
6, -0.142874, 1, 0, 0.499903,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0472576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461976,-99) , 
12, -2.35814, 0, 0, 0.516784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440296,-99) , 
12, 0.663789, 1, 0, 0.511056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492755,-99) , 
0, 0.501898, 0, 0, 0.508904,-99) , 
NN(
0, 
0, 
-1, -0.501225, 1, -1, 0.479673,-99) , 
2, 0.0184239, 0, 0, 0.489164,-99) , 
6, -0.0477342, 0, 0, 0.500693,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0310952);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.56241, 1, 1, 0.539346,-99) , 
NN(
NN(
0, 
0, 
-1, -0.775118, 0, 1, 0.508842,-99) , 
NN(
0, 
0, 
-1, 7.43989, 1, -1, 0.482003,-99) , 
11, -3.03991, 1, 0, 0.493873,-99) , 
11, -0.173833, 0, 0, 0.496728,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0222972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478385,-99) , 
12, -1.50479, 0, 0, 0.49952,-99) , 
11, -5.02077, 1, 0, 0.50079,-99) , 
NN(
0, 
0, 
-1, 1.62704, 1, -1, 0.464232,-99) , 
12, 1.46138, 1, 0, 0.49753,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.023673);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.73783, 0, 1, 0.50738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492507,-99) , 
0, 0.497136, 1, 0, 0.514345,-99) , 
NN(
0, 
0, 
-1, 3.86338, 1, -1, 0.453896,-99) , 
11, -0.381245, 0, 0, 0.481089,-99) , 
12, 0.953248, 1, 0, 0.503249,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0370126);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496793,-99) , 
8, 6.35766, 1, 0, 0.521104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479364,-99) , 
6, -0.714254, 0, 0, 0.511739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485176,-99) , 
3, 6.49638, 0, 0, 0.493182,-99) , 
NN(
0, 
0, 
-1, 0.00830822, 0, -1, 0.475199,-99) , 
2, -0.00237034, 1, 0, 0.485307,-99) , 
2, 0.0723769, 0, 0, 0.489415,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0644674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352797,-99) , 
9, -1.5712, 0, 0, 0.514194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465108,-99) , 
8, 6.20472, 1, 0, 0.494199,-99) , 
9, -951.286, 0, 0, 0.505009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452267,-99) , 
5, 0.999048, 0, 0, 0.503373,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0254446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492097,-99) , 
3, 7.67715, 0, 0, 0.497007,-99) , 
3, 1.5741, 1, 0, 0.498759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433908,-99) , 
9, -951.286, 1, 0, 0.466649,-99) , 
1, 0.00592662, 1, 0, 0.495771,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0464532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.329053, 0, 1, 0.519455,-99) , 
NN(
0, 
0, 
-1, 2.48307, 0, -1, 0.486418,-99) , 
10, 0.428664, 0, 0, 0.500417,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491349,-99) , 
8, 9.02452, 1, 0, 0.536263,-99) , 
NN(
0, 
0, 
-1, 0.382636, 1, -1, 0.462099,-99) , 
10, -0.408907, 1, 0, 0.476922,-99) , 
3, 6.98546, 1, 0, 0.493167,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0337275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.34435, 0, 1, 0.534391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489018,-99) , 
10, -0.142348, 0, 0, 0.526588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497599,-99) , 
2, -0.073991, 1, 0, 0.502296,-99) , 
NN(
0, 
0, 
-1, 2.45894, 1, -1, 0.457143,-99) , 
3, 3.13318, 0, 0, 0.49272,-99) , 
11, -1.37329, 0, 0, 0.498493,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0353438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495466,-99) , 
10, 0.108053, 1, 0, 0.511429,-99) , 
NN(
0, 
0, 
-1, -4.19821, 1, -1, 0.469156,-99) , 
12, -1.93243, 0, 0, 0.503571,-99) , 
NN(
0, 
0, 
-1, 8.26639, 1, -1, 0.484088,-99) , 
12, -0.125897, 1, 0, 0.495938,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0309467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490476, 1, 1, 0.510813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432103,-99) , 
10, -1.40779, 1, 0, 0.471861,-99) , 
12, -2.15991, 0, 0, 0.507208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503974,-99) , 
NN(
0, 
0, 
-1, 0.000212078, 1, -1, 0.461323,-99) , 
11, 0.209867, 0, 0, 0.474725,-99) , 
12, 1.07919, 1, 0, 0.502768,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0447645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.337495, 1, 1, 0.527441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419389,-99) , 
11, -1.81623, 0, 0, 0.475553,-99) , 
12, 0.278958, 1, 0, 0.520104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459352,-99) , 
10, -1.57142, 0, 0, 0.506682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425196,-99) , 
0, 0.498084, 0, 0, 0.467559,-99) , 
6, -0.14812, 1, 0, 0.501911,-99) , 
13, 5.59823, 0, 0, 0.510984,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0198916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494368,-99) , 
10, 1.85631, 0, 0, 0.496667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450094,-99) , 
13, 10.7732, 1, 0, 0.494919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448986,-99) , 
5, 0.999048, 0, 0, 0.493497,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0300603);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497837,-99) , 
3, 3.38602, 0, 0, 0.516999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463196,-99) , 
11, -4.08338, 0, 0, 0.479255,-99) , 
6, 0.523616, 1, 0, 0.506682,-99) , 
NN(
0, 
0, 
-1, 2.53561, 1, -1, 0.488279,-99) , 
10, -0.142869, 1, 0, 0.494488,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0282036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.939875, 1, 1, 0.514117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491546,-99) , 
2, 0.00913449, 0, 0, 0.49713,-99) , 
2, 0.0207044, 0, 0, 0.502441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444974,-99) , 
2, -0.222325, 0, 0, 0.500504,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0256294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904725, 0, 1, 0.509598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456735,-99) , 
13, 10.8107, 1, 0, 0.507564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490391,-99) , 
8, 8.58377, 0, 0, 0.497283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447483,-99) , 
10, 1.57412, 1, 0, 0.491733,-99) , 
0, 0.500947, 1, 0, 0.503342,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0240404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.32796, 0, 1, 0.518909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493064,-99) , 
5, 0.999526, 1, 0, 0.495791,-99) , 
0, 0.494281, 1, 0, 0.500274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455079,-99) , 
4, 8.80985, 1, 0, 0.49882,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0196064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.1415, 0, 1, 0.504289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460707,-99) , 
5, 0.999524, 0, 0, 0.501944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458811,-99) , 
12, 2.53578, 1, 0, 0.486028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420818,-99) , 
11, -0.42571, 0, 0, 0.46388,-99) , 
12, 1.37203, 1, 0, 0.498055,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0269873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479571,-99) , 
10, 1.28674, 1, 0, 0.508527,-99) , 
5, 0.999526, 1, 0, 0.512122,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490806,-99) , 
0, 0.499043, 0, 0, 0.499886,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0303685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.30552, 1, 1, 0.516247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468916,-99) , 
2, -0.124915, 0, 0, 0.512506,-99) , 
NN(
0, 
0, 
-1, 6.46256, 0, -1, 0.487579,-99) , 
8, 6.31131, 1, 0, 0.501334,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0402144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454572,-99) , 
13, 9.42515, 1, 0, 0.510864,-99) , 
8, 10.1275, 0, 0, 0.513085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490406,-99) , 
3, 5.119, 0, 0, 0.501946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448158,-99) , 
11, -3.79101, 1, 0, 0.472654,-99) , 
8, 7.61856, 1, 0, 0.493536,-99) , 
0, 0.496186, 0, 0, 0.506721,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0240074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490094,-99) , 
12, -1.39081, 0, 0, 0.50398,-99) , 
NN(
0, 
0, 
-1, 1.03083, 1, -1, 0.477553,-99) , 
10, 1.57216, 1, 0, 0.500563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448737,-99) , 
1, 0.0121806, 1, 0, 0.499064,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0276716);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475993,-99) , 
6, 0.941008, 1, 0, 0.533185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491118,-99) , 
0, 0.489519, 1, 0, 0.492597,-99) , 
6, 0.904724, 0, 0, 0.495028,-99) , 
3, 1.57756, 1, 0, 0.496888,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.045693);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48372,-99) , 
12, -1.75251, 0, 0, 0.523599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483817,-99) , 
8, 10.7246, 0, 0, 0.495047,-99) , 
8, 8.22681, 1, 0, 0.511956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491177,-99) , 
4, 0.606235, 1, 0, 0.497609,-99) , 
NN(
0, 
0, 
-1, 4.88233, 0, -1, 0.451437,-99) , 
6, -0.239835, 1, 0, 0.491359,-99) , 
13, 5.32229, 0, 0, 0.502084,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0310745);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.0065, 1, 1, 0.536391,-99) , 
NN(
NN(
0, 
0, 
-1, 4.44496, 0, 1, 0.509741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446161,-99) , 
11, -2.09018, 0, 0, 0.48815,-99) , 
12, -0.0656408, 1, 0, 0.502815,-99) , 
11, -0.472139, 0, 0, 0.505451,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0298112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487813,-99) , 
9, -951.286, 1, 0, 0.507502,-99) , 
6, 0.714028, 0, 0, 0.515246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449233,-99) , 
0, 0.489671, 0, 0, 0.4996,-99) , 
NN(
0, 
0, 
-1, 4.54442, 0, -1, 0.476205,-99) , 
0, 0.498408, 1, 0, 0.492632,-99) , 
0, 0.500948, 0, 0, 0.498769,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0224469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548617,-99) , 
NN(
0, 
0, 
-1, 1.5684, 0, -1, 0.491591,-99) , 
5, 0.999048, 1, 0, 0.493262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439211,-99) , 
4, 8.74289, 1, 0, 0.491538,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0407818);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.213335, 0, 1, 0.514896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49329,-99) , 
0, 0.497147, 1, 0, 0.516096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465387,-99) , 
2, -0.0703481, 1, 0, 0.475025,-99) , 
11, -0.453885, 0, 0, 0.484767,-99) , 
12, 0.0825298, 1, 0, 0.504717,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0329606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00372858, 1, 1, 0.527377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493954,-99) , 
4, 0.960023, 1, 0, 0.502319,-99) , 
4, 4.48883, 0, 0, 0.506299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48123,-99) , 
0, 0.494281, 1, 0, 0.495761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447701,-99) , 
12, -1.37568, 0, 0, 0.483872,-99) , 
2, -0.0710983, 0, 0, 0.502678,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0281044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.441581, 0, 1, 0.518024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471642,-99) , 
3, 4.08087, 0, 0, 0.495352,-99) , 
12, -0.350963, 0, 0, 0.5052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464289,-99) , 
12, 2.07892, 1, 0, 0.503215,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0323227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.67469, 0, 1, 0.518285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470655,-99) , 
8, 9.48252, 1, 0, 0.513662,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498498, 1, -1, 0.491876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432785,-99) , 
10, 0.717359, 0, 0, 0.461257,-99) , 
2, 0.079221, 1, 0, 0.487527,-99) , 
0, 0.499043, 0, 0, 0.498561,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0276457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488437,-99) , 
10, 0.67374, 1, 0, 0.502111,-99) , 
10, 2.14285, 0, 0, 0.504282,-99) , 
NN(
0, 
0, 
-1, -0.61912, 1, -1, 0.46827,-99) , 
0, 0.492377, 0, 0, 0.500539,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.033446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.370134, 1, 1, 0.54188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476742,-99) , 
12, -1.13087, 0, 0, 0.498053,-99) , 
11, -4.37136, 1, 0, 0.501855,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468426,-99) , 
0, 0.495114, 0, 0, 0.492545,-99) , 
NN(
0, 
0, 
-1, -2.29536, 0, -1, 0.444844,-99) , 
0, 0.498104, 1, 0, 0.466524,-99) , 
4, 4.54421, 1, 0, 0.495293,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0262694);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4946,-99) , 
0, 0.497137, 1, 0, 0.503101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433658,-99) , 
5, 0.999773, 0, 0, 0.500622,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.459442,-99) , 
5, 0.999524, 0, 0, 0.498486,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0311101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498437,-99) , 
11, -4.80763, 0, 0, 0.515697,-99) , 
0, 0.497146, 1, 0, 0.533313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489322,-99) , 
10, 1.857, 0, 0, 0.492207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453504,-99) , 
12, 2.00277, 1, 0, 0.490069,-99) , 
11, -4.37136, 1, 0, 0.493822,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.036028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484807,-99) , 
2, -0.00816112, 0, 0, 0.50022,-99) , 
3, 5.15363, 0, 0, 0.505729,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469134,-99) , 
12, -1.41567, 0, 0, 0.493374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436188,-99) , 
12, 0.549008, 1, 0, 0.488403,-99) , 
6, 0.142803, 1, 0, 0.497516,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0340263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.85762, 1, 1, 0.509746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481079,-99) , 
1, -0.00345402, 1, 0, 0.490598,-99) , 
0, 0.499042, 1, 0, 0.501512,-99) , 
NN(
0, 
0, 
-1, -0.904768, 1, -1, 0.460504,-99) , 
12, 1.59916, 1, 0, 0.498329,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0459503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46596,-99) , 
9, -951.287, 0, 0, 0.500235,-99) , 
12, 0.541107, 1, 0, 0.523935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488512,-99) , 
9, -951.286, 0, 0, 0.515092,-99) , 
NN(
0, 
0, 
-1, 7.94501, 1, -1, 0.482774,-99) , 
10, -0.604238, 1, 0, 0.490186,-99) , 
10, 1.57188, 0, 0, 0.494498,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0237123);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486228,-99) , 
6, 0.523729, 1, 0, 0.499661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455575,-99) , 
2, -0.13113, 0, 0, 0.497528,-99) , 
2, -0.21276, 1, 0, 0.499698,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0305507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.66213, 1, 1, 0.53563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428072,-99) , 
12, -1.5804, 0, 0, 0.499306,-99) , 
11, -1.1241, 0, 0, 0.505144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45042,-99) , 
12, -2.51462, 0, 0, 0.492979,-99) , 
NN(
0, 
0, 
-1, -0.904833, 1, -1, 0.452081,-99) , 
11, -3.22541, 1, 0, 0.479867,-99) , 
10, -0.427473, 0, 0, 0.498748,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0240479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491853,-99) , 
10, 0.143748, 1, 0, 0.500015,-99) , 
11, -0.560683, 0, 0, 0.502078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46287,-99) , 
12, 2.01494, 1, 0, 0.500001,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0295333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.68401, 0, 1, 0.567938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478797,-99) , 
11, -2.70766, 1, 0, 0.51494,-99) , 
8, 9.76183, 1, 0, 0.539888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498204,-99) , 
3, 6.76684, 0, 0, 0.500917,-99) , 
NN(
0, 
0, 
-1, 0.494292, 0, -1, 0.469953,-99) , 
3, 7.05206, 1, 0, 0.49514,-99) , 
8, 8.92473, 0, 0, 0.501622,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0449913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450286,-99) , 
8, 9.83085, 1, 0, 0.506706,-99) , 
10, 1.85712, 0, 0, 0.511324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47882,-99) , 
10, 0.138462, 0, 0, 0.49932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449272,-99) , 
9, -951.286, 1, 0, 0.468219,-99) , 
6, 0.0475689, 1, 0, 0.483513,-99) , 
0, 0.49809, 0, 0, 0.49781,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0359942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523801, 1, 1, 0.529808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475169,-99) , 
12, 1.03238, 1, 0, 0.502527,-99) , 
4, 4.47814, 0, 0, 0.507863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472761,-99) , 
9, -951.286, 1, 0, 0.495958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453386,-99) , 
11, -3.00915, 1, 0, 0.485292,-99) , 
10, -0.713657, 0, 0, 0.503816,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0282658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584503,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485673,-99) , 
0, 0.493351, 1, 0, 0.497268,-99) , 
3, 2.44185, 0, 0, 0.510434,-99) , 
NN(
0, 
0, 
-1, 3.4032, 0, -1, 0.491234,-99) , 
6, -0.714291, 1, 0, 0.495979,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0447925);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.756732, 1, 1, 0.546421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462648,-99) , 
6, 0.0445723, 1, 0, 0.507843,-99) , 
3, 6.89693, 0, 0, 0.51742,-99) , 
NN(
NN(
0, 
0, 
-1, 1.68616, 1, 1, 0.529371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483239,-99) , 
11, -3.81103, 1, 0, 0.488057,-99) , 
11, -1.11318, 0, 0, 0.494643,-99) , 
10, -0.426097, 1, 0, 0.500359,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0322617);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497787,-99) , 
10, 1.28682, 0, 0, 0.507962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481418,-99) , 
11, -3.68507, 1, 0, 0.486745,-99) , 
0, 0.500947, 0, 0, 0.492565,-99) , 
11, 0.510893, 0, 0, 0.495249,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0193939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495153,-99) , 
12, 0.0258567, 1, 0, 0.529267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499308,-99) , 
11, -0.780381, 0, 0, 0.502405,-99) , 
0, 0.502851, 0, 0, 0.506174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430588,-99) , 
12, 2.44326, 1, 0, 0.503769,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0245647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.64455, 1, 1, 0.539755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495485,-99) , 
10, 0.755882, 0, 0, 0.52571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480209,-99) , 
12, -1.32804, 0, 0, 0.499096,-99) , 
8, 8.94571, 0, 0, 0.503118,-99) , 
10, -1.28493, 1, 0, 0.50587,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0321662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493328, 1, 1, 0.512779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454113,-99) , 
12, -2.0043, 0, 0, 0.510746,-99) , 
NN(
NN(
0, 
0, 
-1, -1.4721, 1, 1, 0.516853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44683,-99) , 
8, 3.55986, 0, 0, 0.486669,-99) , 
10, -0.999913, 0, 0, 0.507959,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0224277);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49708,-99) , 
13, 7.53884, 0, 0, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455031,-99) , 
13, 9.55426, 1, 0, 0.499996,-99) , 
3, 9.49095, 0, 0, 0.502579,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0310372);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.550987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485729,-99) , 
4, 1.19287, 0, 0, 0.530572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490685,-99) , 
12, 0.291308, 1, 0, 0.514152,-99) , 
NN(
0, 
0, 
-1, 4.54428, 0, -1, 0.490849,-99) , 
10, 1.28617, 0, 0, 0.495459,-99) , 
6, -0.904766, 1, 0, 0.499191,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0268351);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.5398, 1, 1, 0.535448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467947,-99) , 
12, 1.77496, 1, 0, 0.502983,-99) , 
11, -4.08019, 1, 0, 0.507199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435805,-99) , 
4, 8.51999, 1, 0, 0.504903,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0339056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.17624, 0, 1, 0.528759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495211,-99) , 
4, 2.1823, 1, 0, 0.505435,-99) , 
10, 1.28524, 0, 0, 0.509352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444106,-99) , 
13, 7.44223, 0, 0, 0.499838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415442,-99) , 
0, 0.503487, 0, 0, 0.450135,-99) , 
0, 0.500947, 1, 0, 0.487987,-99) , 
3, 7.01594, 1, 0, 0.502749,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0358556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463984,-99) , 
3, 2.54798, 0, 0, 0.528371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480316,-99) , 
12, -1.1318, 0, 0, 0.50039,-99) , 
10, -0.999958, 1, 0, 0.503498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469708,-99) , 
2, -0.0639666, 1, 0, 0.480136,-99) , 
0, 0.490517, 1, 0, 0.488127,-99) , 
0, 0.495233, 0, 0, 0.499549,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0319322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494564,-99) , 
4, 3.87407, 1, 0, 0.526908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495184,-99) , 
11, -3.62216, 1, 0, 0.501476,-99) , 
0, 0.494281, 1, 0, 0.50644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527376,-99) , 
NN(
0, 
0, 
-1, 7.08217, 1, -1, 0.468338,-99) , 
3, 8.48114, 0, 0, 0.476879,-99) , 
10, 1.28559, 1, 0, 0.500823,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0283694);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.904749, 1, 1, 0.510725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434697,-99) , 
11, -2.997, 1, 0, 0.474054,-99) , 
2, 0.0723769, 1, 0, 0.50505,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495494,-99) , 
5, 0.999525, 1, 0, 0.498351,-99) , 
NN(
0, 
0, 
-1, 0.50081, 0, -1, 0.465442,-99) , 
11, -1.5113, 1, 0, 0.492137,-99) , 
0, 0.49809, 1, 0, 0.498436,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0189779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.84044, 1, 1, 0.529086,-99) , 
NN(
0, 
0, 
-1, 8.71263, 1, -1, 0.49528,-99) , 
3, 7.92616, 0, 0, 0.50035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4544,-99) , 
13, 11.0856, 1, 0, 0.498977,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0246687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444303,-99) , 
5, 0.999728, 0, 0, 0.504016,-99) , 
5, 0.999048, 1, 0, 0.50576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448516,-99) , 
4, 8.64615, 1, 0, 0.503834,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0194906);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551657,-99) , 
NN(
NN(
0, 
0, 
-1, -1.25766, 0, 1, 0.515697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49739,-99) , 
0, 0.493331, 1, 0, 0.501514,-99) , 
11, -3.51751, 1, 0, 0.505394,-99) , 
10, 2.42837, 0, 0, 0.506601,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0523794);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499249,-99) , 
11, -2.79537, 1, 0, 0.514981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244523,-99) , 
9, -1.8572, 0, 0, 0.496222,-99) , 
9, -951.286, 1, 0, 0.504643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446991,-99) , 
2, 0.214776, 1, 0, 0.502563,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0509357);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494558,-99) , 
10, 0.469251, 0, 0, 0.523049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418443,-99) , 
11, -2.17234, 0, 0, 0.487656,-99) , 
10, 1.28561, 1, 0, 0.509923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489243,-99) , 
11, -3.26324, 0, 0, 0.502677,-99) , 
NN(
0, 
0, 
-1, -0.933095, 0, -1, 0.4699,-99) , 
10, 0.239422, 1, 0, 0.491036,-99) , 
11, -2.66805, 0, 0, 0.499717,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0135661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.904723, 0, 1, 0.504559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444756,-99) , 
8, 4.2518, 1, 0, 0.478856,-99) , 
0, 0.491424, 0, 0, 0.502704,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0383125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494296, 0, 1, 0.536655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464194,-99) , 
4, 1.00314, 0, 0, 0.498205,-99) , 
3, 3.31287, 0, 0, 0.508074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49744,-99) , 
0, 0.50158, 1, 0, 0.511062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48406,-99) , 
5, 0.999524, 1, 0, 0.487759,-99) , 
0, 0.500945, 0, 0, 0.493501,-99) , 
6, -0.14296, 1, 0, 0.49998,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.035312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.44899, 1, 1, 0.526881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488032,-99) , 
13, 2.78441, 1, 0, 0.506125,-99) , 
3, 5.53871, 0, 0, 0.515628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485257,-99) , 
10, -0.0609285, 1, 0, 0.493703,-99) , 
10, 2.14271, 0, 0, 0.496798,-99) , 
0, 0.499042, 0, 0, 0.504859,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0653466);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499651,-99) , 
12, -1.18432, 0, 0, 0.525985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268014,-99) , 
9, -1.57061, 0, 0, 0.491713,-99) , 
9, -951.286, 1, 0, 0.505886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463872,-99) , 
2, -0.00718164, 1, 0, 0.485041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439067,-99) , 
2, 0.0674288, 1, 0, 0.477886,-99) , 
11, -1.97424, 1, 0, 0.498235,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0350195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491076,-99) , 
0, 0.49809, 0, 0, 0.502853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459833,-99) , 
10, -0.833159, 1, 0, 0.48085,-99) , 
11, -3.61538, 0, 0, 0.497232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453397,-99) , 
12, 2.21289, 1, 0, 0.495397,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0332252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486986,-99) , 
8, 6.31495, 1, 0, 0.507895,-99) , 
NN(
0, 
0, 
-1, 0.60534, 1, -1, 0.489821,-99) , 
12, -0.579113, 0, 0, 0.499378,-99) , 
NN(
0, 
0, 
-1, 4.6037, 1, -1, 0.467323,-99) , 
2, 0.0675429, 1, 0, 0.494119,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0292486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500721, 1, 1, 0.515338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485922,-99) , 
10, 0.148052, 1, 0, 0.495273,-99) , 
0, 0.499995, 0, 0, 0.502102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415591,-99) , 
1, -0.0125855, 0, 0, 0.499705,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0464254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488514,-99) , 
10, 1.5739, 1, 0, 0.523142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493162,-99) , 
4, 4.53295, 0, 0, 0.498656,-99) , 
0, 0.500947, 0, 0, 0.505424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483188,-99) , 
12, -2.67261, 0, 0, 0.531603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447749,-99) , 
11, -3.55713, 0, 0, 0.464521,-99) , 
11, -4.56444, 1, 0, 0.479545,-99) , 
12, -1.16499, 0, 0, 0.498052,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0388509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497683,-99) , 
13, 7.26457, 1, 0, 0.515471,-99) , 
NN(
0, 
0, 
-1, 3.02847, 1, -1, 0.473642,-99) , 
3, 3.26062, 0, 0, 0.50938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493231,-99) , 
12, -0.218712, 1, 0, 0.500956,-99) , 
NN(
0, 
0, 
-1, 2.33791, 1, -1, 0.460546,-99) , 
10, 0.144895, 0, 0, 0.4907,-99) , 
11, -2.63472, 1, 0, 0.500878,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0291296);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47434,-99) , 
0, 0.495231, 0, 0, 0.518436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484666,-99) , 
12, -0.752548, 0, 0, 0.495288,-99) , 
4, 4.06208, 0, 0, 0.500584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437116,-99) , 
5, 0.999049, 0, 0, 0.498652,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0270713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0822888, 0, 1, 0.515972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491118,-99) , 
10, -0.421127, 1, 0, 0.49626,-99) , 
0, 0.496185, 1, 0, 0.502498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434178,-99) , 
10, -1.46873, 1, 0, 0.469032,-99) , 
12, -2.29179, 0, 0, 0.500425,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0400492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47,-99) , 
3, 2.77531, 0, 0, 0.499586,-99) , 
6, -0.904761, 1, 0, 0.503224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473719,-99) , 
6, 0.237916, 0, 0, 0.507583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474873,-99) , 
11, -0.724759, 0, 0, 0.479525,-99) , 
2, 0.0557264, 0, 0, 0.484666,-99) , 
0, 0.498089, 1, 0, 0.493679,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0322578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44518,-99) , 
12, 0.974311, 1, 0, 0.513233,-99) , 
NN(
0, 
0, 
-1, 3.55142, 1, -1, 0.490292,-99) , 
3, 3.55769, 0, 0, 0.50488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438988,-99) , 
12, -2.79366, 0, 0, 0.503024,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0308175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05018, 0, 1, 0.518837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496001,-99) , 
12, -1.03184, 1, 0, 0.499095,-99) , 
11, -3.26725, 1, 0, 0.505653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468909,-99) , 
6, 0.863901, 1, 0, 0.490344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4129,-99) , 
11, -2.47964, 1, 0, 0.470175,-99) , 
6, 0.809437, 1, 0, 0.501016,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0352153);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483432,-99) , 
0, 0.497088, 0, 0, 0.546317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49314,-99) , 
6, 0.269809, 1, 0, 0.507914,-99) , 
6, 0.904724, 0, 0, 0.510334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454136,-99) , 
0, 0.505709, 1, 0, 0.508063,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0351279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.88526, 1, 1, 0.532893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483405,-99) , 
9, -951.286, 1, 0, 0.496815,-99) , 
6, 0.561944, 1, 0, 0.509522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497953,-99) , 
3, 3.42543, 0, 0, 0.502415,-99) , 
NN(
0, 
0, 
-1, 0.498081, 0, -1, 0.472692,-99) , 
6, -0.391147, 1, 0, 0.493658,-99) , 
3, 5.53393, 0, 0, 0.501173,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0185304);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.99621, 0, 1, 0.506102,-99) , 
NN(
0, 
0, 
-1, 2.15879, 1, -1, 0.471706,-99) , 
12, 1.04554, 1, 0, 0.501201,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0285764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.251462, 0, 1, 0.512867,-99) , 
NN(
NN(
0, 
0, 
-1, 2.40816, 0, 1, 0.527207,-99) , 
NN(
0, 
0, 
-1, 4.35373, 1, -1, 0.485682,-99) , 
12, 0.60171, 0, 0, 0.49497,-99) , 
0, 0.496186, 0, 0, 0.507014,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0377136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.06809, 1, 1, 0.536957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436431,-99) , 
10, -0.141014, 0, 0, 0.51823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490803,-99) , 
10, -0.427749, 1, 0, 0.499305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435754,-99) , 
12, -2.83539, 0, 0, 0.497213,-99) , 
11, -1.20773, 0, 0, 0.500329,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0305325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465161,-99) , 
6, -0.904776, 0, 0, 0.499612,-99) , 
11, 0.0958291, 0, 0, 0.502289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469573,-99) , 
11, -3.76889, 0, 0, 0.484858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423447,-99) , 
10, -0.238703, 1, 0, 0.475897,-99) , 
12, -1.3943, 0, 0, 0.496438,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0348775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493336, 1, 1, 0.517847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48775,-99) , 
1, 0.00498554, 0, 0, 0.49446,-99) , 
13, 6.85812, 0, 0, 0.503337,-99) , 
NN(
0, 
0, 
-1, 1.28583, 1, -1, 0.476237,-99) , 
2, -0.0688005, 0, 0, 0.49881,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0158358);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498326,-99) , 
12, 1.55832, 0, 0, 0.500987,-99) , 
NN(
0, 
0, 
-1, -4.78942, 1, -1, 0.467461,-99) , 
12, -2.00476, 0, 0, 0.49779,-99) , 
3, 9.94024, 0, 0, 0.499207,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0499629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.84803, 0, 1, 0.515554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414078,-99) , 
6, -0.71441, 1, 0, 0.492725,-99) , 
11, -2.17904, 1, 0, 0.510443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485639,-99) , 
12, 0.457887, 1, 0, 0.506434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380431,-99) , 
11, -2.73836, 1, 0, 0.464692,-99) , 
11, -2.39141, 0, 0, 0.493911,-99) , 
10, 0.999916, 1, 0, 0.505967,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0500702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.191116, 1, 1, 0.524219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398103,-99) , 
6, -0.714392, 1, 0, 0.482294,-99) , 
10, 0.428482, 0, 0, 0.510823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558338,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.476805,-99) , 
0, 0.504756, 0, 0, 0.481339,-99) , 
11, -2.74325, 0, 0, 0.495508,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0154805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498385,-99) , 
11, -4.8693, 1, 0, 0.500392,-99) , 
1, -0.00911108, 1, 0, 0.502507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415162,-99) , 
3, 1.55994, 0, 0, 0.500029,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0147223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466175,-99) , 
8, 1.74946, 0, 0, 0.501439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424126,-99) , 
5, 0.999601, 1, 0, 0.466644,-99) , 
5, 0.999773, 0, 0, 0.499468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459517,-99) , 
5, 0.999048, 0, 0, 0.498197,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0394485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478978,-99) , 
12, -1.90442, 0, 0, 0.508912,-99) , 
NN(
0, 
0, 
-1, -1.3675, 0, -1, 0.476742,-99) , 
12, 0.676775, 1, 0, 0.502641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478281,-99) , 
4, 1.34851, 1, 0, 0.491716,-99) , 
NN(
0, 
0, 
-1, 0.428124, 1, -1, 0.448143,-99) , 
4, 4.39016, 1, 0, 0.482363,-99) , 
0, 0.499995, 1, 0, 0.495624,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0401484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495429,-99) , 
13, 4.99216, 0, 0, 0.510933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465148,-99) , 
13, 10.1372, 1, 0, 0.507913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47579,-99) , 
6, 0.523504, 1, 0, 0.503038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432776,-99) , 
12, -1.58146, 1, 0, 0.464928,-99) , 
10, -0.13921, 0, 0, 0.489728,-99) , 
0, 0.497138, 0, 0, 0.50061,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0363846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428634, 0, 1, 0.547925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457509,-99) , 
10, 0.80464, 1, 0, 0.488775,-99) , 
12, 1.46542, 1, 0, 0.512622,-99) , 
NN(
NN(
0, 
0, 
-1, -2.53629, 1, -1, 0.489904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405159,-99) , 
10, -1.57544, 1, 0, 0.446276,-99) , 
12, -2.28589, 0, 0, 0.486677,-99) , 
11, -1.26185, 0, 0, 0.490645,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0157536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442839,-99) , 
5, 0.999773, 0, 0, 0.500325,-99) , 
NN(
0, 
0, 
-1, 0.545889, 0, -1, 0.458939,-99) , 
5, 0.999524, 0, 0, 0.498069,-99) , 
11, -4.85455, 1, 0, 0.500187,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0258134);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488934,-99) , 
9, -951.286, 1, 0, 0.497544,-99) , 
11, -0.262416, 0, 0, 0.49936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443366,-99) , 
3, 1.57107, 0, 0, 0.497554,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0352963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490617,-99) , 
11, -3.00236, 1, 0, 0.532535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46999,-99) , 
12, -1.90418, 0, 0, 0.505788,-99) , 
NN(
0, 
0, 
-1, 4.27583, 0, -1, 0.483251,-99) , 
0, 0.497138, 1, 0, 0.492376,-99) , 
8, 9.48252, 0, 0, 0.496375,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0459499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48468,-99) , 
11, -4.46148, 0, 0, 0.514041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470843,-99) , 
2, -0.0295718, 1, 0, 0.488585,-99) , 
11, -2.66155, 1, 0, 0.507483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490783,-99) , 
3, 2.84489, 0, 0, 0.508042,-99) , 
NN(
0, 
0, 
-1, -1.04517, 0, -1, 0.476793,-99) , 
8, 4.40343, 1, 0, 0.487439,-99) , 
10, 0.143385, 1, 0, 0.496238,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0165032);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459241,-99) , 
12, -2.77431, 0, 0, 0.50215,-99) , 
8, 10.2234, 0, 0, 0.504034,-99) , 
10, 2.42852, 0, 0, 0.506048,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0451649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.544626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455134,-99) , 
4, 3.48972, 1, 0, 0.48897,-99) , 
3, 2.21793, 0, 0, 0.511331,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478155,-99) , 
8, 7.20357, 0, 0, 0.49225,-99) , 
NN(
0, 
0, 
-1, -2.84453, 1, -1, 0.459267,-99) , 
6, 0.84572, 1, 0, 0.487654,-99) , 
6, -0.619057, 1, 0, 0.494375,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0389936);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49159,-99) , 
3, 4.86223, 0, 0, 0.498288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476013,-99) , 
5, 0.999524, 1, 0, 0.480087,-99) , 
6, 0.0475983, 1, 0, 0.489192,-99) , 
10, 2.14268, 0, 0, 0.491638,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0400815);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461559,-99) , 
6, 0.809253, 1, 0, 0.509002,-99) , 
NN(
0, 
0, 
-1, 7.48367, 1, -1, 0.48278,-99) , 
0, 0.497137, 0, 0, 0.498407,-99) , 
10, 2.42871, 0, 0, 0.500877,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0237782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458891,-99) , 
4, 1.42063, 0, 0, 0.505645,-99) , 
3, 3.94832, 0, 0, 0.523572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499283,-99) , 
8, 2.40175, 0, 0, 0.520589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445507,-99) , 
3, 2.15992, 0, 0, 0.499134,-99) , 
11, -1.51016, 0, 0, 0.502907,-99) , 
1, -0.00464865, 1, 0, 0.505381,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0240606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.98624, 0, 1, 0.538671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474466,-99) , 
11, -2.54874, 1, 0, 0.525606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458782,-99) , 
10, -0.537367, 0, 0, 0.50148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428921,-99) , 
12, -1.81533, 0, 0, 0.498989,-99) , 
10, -0.714273, 1, 0, 0.503572,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.018754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491966,-99) , 
13, 4.25215, 0, 0, 0.511439,-99) , 
12, -0.966294, 1, 0, 0.52643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496481,-99) , 
3, 9.48911, 0, 0, 0.49839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454448,-99) , 
2, 0.209674, 1, 0, 0.496811,-99) , 
0, 0.503804, 0, 0, 0.499959,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0279388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494705,-99) , 
8, 3.02108, 1, 0, 0.510718,-99) , 
0, 0.494507, 0, 0, 0.519507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494583,-99) , 
8, 10.6282, 0, 0, 0.496272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440678,-99) , 
0, 0.495823, 0, 0, 0.492723,-99) , 
0, 0.495233, 1, 0, 0.499468,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.014594);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.20737, 0, 1, 0.505311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429108,-99) , 
5, 0.999048, 0, 0, 0.503005,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0333131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.14302, 0, 1, 0.536777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416717,-99) , 
9, -0.995044, 0, 0, 0.509785,-99) , 
9, -951.286, 1, 0, 0.522387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49328,-99) , 
11, -4.54051, 1, 0, 0.496389,-99) , 
3, 1.57625, 1, 0, 0.497992,-99) , 
0, 0.49428, 1, 0, 0.502708,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0318932);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482597,-99) , 
12, 1.66849, 1, 0, 0.535613,-99) , 
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.508759,-99) , 
10, 1.28673, 0, 0, 0.513736,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.466494,-99) , 
5, 0.999524, 0, 0, 0.511299,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0366404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4721,-99) , 
4, 4.53295, 1, 0, 0.502273,-99) , 
11, -2.96677, 1, 0, 0.507071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469432,-99) , 
3, 5.09721, 0, 0, 0.49425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432787,-99) , 
10, 0.618077, 1, 0, 0.489028,-99) , 
12, -0.571821, 0, 0, 0.498611,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0258456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49306,-99) , 
9, -951.286, 1, 0, 0.501912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452034,-99) , 
11, -4.82902, 0, 0, 0.499581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45159,-99) , 
10, 2.14268, 1, 0, 0.49746,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0180798);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.945493, 1, 1, 0.549174,-99) , 
NN(
0, 
0, 
-1, 0.999526, 0, -1, 0.493441,-99) , 
6, 0.904671, 0, 0, 0.496684,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0262278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435304,-99) , 
5, 0.999932, 0, 0, 0.52345,-99) , 
NN(
0, 
0, 
-1, 3.47744, 1, -1, 0.496593,-99) , 
4, 4.03863, 0, 0, 0.502848,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.4656,-99) , 
5, 0.999524, 0, 0, 0.50084,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0424392);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474081,-99) , 
12, 2.12427, 1, 0, 0.522562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460434,-99) , 
10, -1.57135, 0, 0, 0.519908,-99) , 
NN(
NN(
0, 
0, 
-1, 1.02211, 0, 1, 0.529436,-99) , 
NN(
0, 
0, 
-1, -1.1538, 0, -1, 0.488536,-99) , 
11, -1.46253, 0, 0, 0.496166,-99) , 
0, 0.497137, 0, 0, 0.510196,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0390511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496157,-99) , 
0, 0.499993, 0, 0, 0.516059,-99) , 
6, 0.775201, 1, 0, 0.531928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455169,-99) , 
13, 8.66193, 1, 0, 0.508212,-99) , 
NN(
0, 
0, 
-1, -0.940339, 1, -1, 0.462779,-99) , 
3, 1.7843, 0, 0, 0.50426,-99) , 
3, 8.46433, 0, 0, 0.507581,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0212927);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497152, 1, 1, 0.529568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496405,-99) , 
10, 1.28879, 0, 0, 0.500818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456531,-99) , 
12, 1.50863, 1, 0, 0.498882,-99) , 
6, -0.904766, 1, 0, 0.502206,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0249297);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.21238, 0, 1, 0.506238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478093,-99) , 
3, 2.17888, 0, 0, 0.496137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365915,-99) , 
13, 3.94701, 1, 0, 0.474216,-99) , 
12, 0.935713, 1, 0, 0.501225,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0255025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489208,-99) , 
3, 2.53127, 0, 0, 0.529365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494629,-99) , 
0, 0.498072, 1, 0, 0.540059,-99) , 
NN(
0, 
0, 
-1, -2.19586, 0, -1, 0.49173,-99) , 
8, 10.1295, 0, 0, 0.494657,-99) , 
1, -0.00621516, 1, 0, 0.497344,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.052446);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4939,-99) , 
8, 3.09304, 0, 0, 0.525963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335527,-99) , 
9, -1.85556, 0, 0, 0.513448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490099,-99) , 
10, -1.0778, 1, 0, 0.509484,-99) , 
NN(
0, 
0, 
-1, -0.428578, 0, -1, 0.490851,-99) , 
11, -3.39131, 1, 0, 0.495697,-99) , 
9, -951.286, 0, 0, 0.505291,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0194467);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533243,-99) , 
NN(
0, 
0, 
-1, 0.503802, 1, -1, 0.492944,-99) , 
8, 10.2234, 0, 0, 0.49507,-99) , 
10, 2.42817, 0, 0, 0.49671,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0426984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484218,-99) , 
13, 7.09896, 1, 0, 0.514329,-99) , 
3, 7.30304, 0, 0, 0.516609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486005,-99) , 
12, -1.18888, 0, 0, 0.5091,-99) , 
NN(
0, 
0, 
-1, 0.443206, 1, -1, 0.464775,-99) , 
12, -0.26599, 1, 0, 0.497193,-99) , 
6, 0.61895, 1, 0, 0.511286,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0264684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491282,-99) , 
9, -951.286, 1, 0, 0.500187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433442,-99) , 
12, 2.45501, 1, 0, 0.497923,-99) , 
10, -1.28427, 1, 0, 0.500406,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0540809);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493087,-99) , 
10, -0.551257, 0, 0, 0.520188,-99) , 
NN(
0, 
0, 
-1, 3.58103, 1, -1, 0.480828,-99) , 
12, -1.85972, 0, 0, 0.511148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487753,-99) , 
10, 0.91834, 1, 0, 0.502323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416336,-99) , 
10, 0.907353, 0, 0, 0.459356,-99) , 
11, -2.86377, 0, 0, 0.492378,-99) , 
10, 0.428429, 1, 0, 0.502546,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0230485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497884,-99) , 
12, -0.800908, 1, 0, 0.527732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492271,-99) , 
4, 8.9721, 0, 0, 0.493859,-99) , 
11, 0.288335, 0, 0, 0.495609,-99) , 
0, 0.491423, 1, 0, 0.497988,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0393524);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487272,-99) , 
0, 0.502852, 1, 0, 0.510295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429169,-99) , 
12, 2.59918, 1, 0, 0.507322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464614,-99) , 
3, 5.70474, 0, 0, 0.490325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434047,-99) , 
10, -0.0289848, 1, 0, 0.481989,-99) , 
12, -1.15874, 0, 0, 0.499969,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0235013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.48333, 0, 1, 0.529991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49682,-99) , 
11, -0.256859, 0, 0, 0.499487,-99) , 
10, 1.28651, 0, 0, 0.505231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434313,-99) , 
5, 0.999048, 0, 0, 0.503134,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.037638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.50885, 0, 1, 0.552119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459627,-99) , 
11, -1.8783, 0, 0, 0.504176,-99) , 
12, 0.122918, 1, 0, 0.519235,-99) , 
NN(
NN(
0, 
0, 
-1, 7.92134, 0, 1, 0.516612,-99) , 
NN(
0, 
0, 
-1, -1.61016, 0, -1, 0.490435,-99) , 
10, -0.522636, 1, 0, 0.498393,-99) , 
10, 1.00066, 0, 0, 0.504078,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0249758);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458322,-99) , 
0, 0.490472, 0, 0, 0.505477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42747,-99) , 
12, -2.82568, 0, 0, 0.50339,-99) , 
2, 0.211347, 0, 0, 0.505247,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0175072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.77714, 1, 1, 0.54791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499723,-99) , 
4, 6.13281, 0, 0, 0.503606,-99) , 
6, 0.904723, 0, 0, 0.50629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50239,-99) , 
NN(
0, 
0, 
-1, 0.490562, 1, -1, 0.454867,-99) , 
10, 0.149175, 1, 0, 0.47658,-99) , 
0, 0.492376, 0, 0, 0.503155,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0580726);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.04163, 0, 1, 0.527043,-99) , 
NN(
0, 
0, 
-1, -2.04628, 0, -1, 0.357789,-99) , 
9, -1.57014, 0, 0, 0.509435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492428,-99) , 
6, -0.0479737, 1, 0, 0.50579,-99) , 
NN(
0, 
0, 
-1, -0.426539, 0, -1, 0.481973,-99) , 
12, -0.37755, 1, 0, 0.493134,-99) , 
9, -951.286, 0, 0, 0.502135,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0398263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484245,-99) , 
11, -2.55112, 0, 0, 0.499087,-99) , 
11, -3.6344, 1, 0, 0.502518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475478,-99) , 
11, -3.8322, 0, 0, 0.492889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421675,-99) , 
10, -0.175156, 1, 0, 0.482475,-99) , 
12, -1.33047, 0, 0, 0.497721,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.05501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0772842, 1, 1, 0.522728,-99) , 
NN(
0, 
0, 
-1, 0.495231, 0, -1, 0.487369,-99) , 
8, 4.35623, 0, 0, 0.504778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486003,-99) , 
9, 0.456733, 0, 0, 0.504347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283232,-99) , 
9, -1.85578, 0, 0, 0.490009,-99) , 
9, -951.286, 1, 0, 0.496741,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0394356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431448,-99) , 
5, 0.999774, 0, 0, 0.507778,-99) , 
5, 0.99905, 1, 0, 0.509719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482464,-99) , 
2, 0.000208711, 1, 0, 0.498817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44067,-99) , 
2, -0.0743827, 0, 0, 0.490357,-99) , 
11, -1.93824, 1, 0, 0.504649,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_8_12::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_8_12::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_8_12 *ReadBDT_maker_LHC19c2b_8_12(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_8_12(theInpVar);
  }
}
