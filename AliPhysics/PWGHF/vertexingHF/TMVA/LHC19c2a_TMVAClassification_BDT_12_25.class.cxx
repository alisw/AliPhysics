#include "LHC19c2a_TMVAClassification_BDT_12_25.class.h"

double ReadBDT_LHC19c2a_12_25::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_12_25::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1.01962633366278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.64889, 0, 1, 0.912749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378212,-99) , 
11, -1.5083, 1, 0, 0.850533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.726084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326851,-99) , 
6, 0.877467, 1, 0, 0.518985,-99) , 
NN(
0, 
0, 
-1, -1.83682, 1, -1, 0.0731497,-99) , 
11, -2.76848, 1, 0, 0.143208,-99) , 
6, 0.714278, 1, 0, 0.501436,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.838434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.70309, 0, 1, 0.905858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382891,-99) , 
6, 0.469346, 1, 0, 0.588736,-99) , 
11, -2.21403, 1, 0, 0.812431,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.723963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281665,-99) , 
3, 14.3664, 0, 0, 0.414852,-99) , 
NN(
0, 
0, 
-1, 0.476621, 1, -1, 0.071335,-99) , 
11, -2.01403, 1, 0, 0.201516,-99) , 
6, 0.714273, 1, 0, 0.508909,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.682245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.637348, 1, 1, 0.918253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.235493,-99) , 
3, 3.70779, 0, 0, 0.576569,-99) , 
11, -3.00494, 1, 0, 0.70828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635229,-99) , 
NN(
0, 
0, 
-1, 15.9138, 0, -1, 0.135618,-99) , 
11, -3.07086, 1, 0, 0.192284,-99) , 
6, 0.809514, 1, 0, 0.502352,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.598416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.9418, 1, 1, 0.821712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384668,-99) , 
3, 3.54633, 0, 0, 0.754621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.817462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401506,-99) , 
3, 17.3142, 0, 0, 0.451154,-99) , 
NN(
0, 
0, 
-1, 14.2576, 0, -1, 0.110062,-99) , 
11, -1.7355, 1, 0, 0.288928,-99) , 
6, 0.618991, 1, 0, 0.492556,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.526959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.52737, 0, 1, 0.857134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.778846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477567,-99) , 
11, -3.44316, 1, 0, 0.552703,-99) , 
6, 0.523765, 1, 0, 0.703245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.730899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309274,-99) , 
3, 14.5644, 0, 0, 0.369099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0988886,-99) , 
6, 0.904622, 1, 0, 0.281116,-99) , 
11, -2.20539, 1, 0, 0.493604,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.470148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.06624, 1, 1, 0.730998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4196,-99) , 
6, 0.904683, 1, 0, 0.679155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.794538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466325,-99) , 
8, 12.4038, 0, 0, 0.539808,-99) , 
NN(
0, 
0, 
-1, 0.434482, 1, -1, 0.177661,-99) , 
6, 0.714272, 1, 0, 0.308501,-99) , 
11, -1.96667, 1, 0, 0.531512,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.389097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.41569, 1, 1, 0.637575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241204,-99) , 
11, -1.03939, 1, 0, 0.583775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.110236,-99) , 
5, 0.999524, 0, 0, 0.520977,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.385114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714258, 1, 1, 0.700167,-99) , 
NN(
0, 
0, 
-1, -1.17392, 0, -1, 0.365129,-99) , 
8, 4.7005, 0, 0, 0.655954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.802982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419369,-99) , 
3, 13.0271, 0, 0, 0.481986,-99) , 
NN(
0, 
0, 
-1, 0.344988, 1, -1, 0.247542,-99) , 
6, 0.809512, 1, 0, 0.376467,-99) , 
11, -2.53413, 1, 0, 0.492254,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.439213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.306105, 1, 1, 0.777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342233,-99) , 
10, -0.142544, 0, 0, 0.507159,-99) , 
3, 4.27737, 0, 0, 0.69525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345581,-99) , 
3, 13.0388, 0, 0, 0.464502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.112355,-99) , 
12, 0.616143, 1, 0, 0.392296,-99) , 
6, 0.523748, 1, 0, 0.506781,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.343223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.9326, 0, 1, 0.915576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367676,-99) , 
6, 0.387653, 1, 0, 0.620414,-99) , 
3, 11.291, 0, 0, 0.663228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33224,-99) , 
6, 0.927413, 1, 0, 0.469696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.18734,-99) , 
12, 0.309445, 1, 0, 0.389523,-99) , 
6, 0.619027, 1, 0, 0.504467,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.29379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.852658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459888,-99) , 
10, -1.71206, 0, 0, 0.769927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386271,-99) , 
5, 0.999977, 0, 0, 0.501401,-99) , 
11, -3.47711, 1, 0, 0.542718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.159559,-99) , 
5, 0.999524, 0, 0, 0.494094,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.291458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.53742, 0, 1, 0.799589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.743214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430532,-99) , 
10, -0.831418, 0, 0, 0.550919,-99) , 
6, 0.618927, 1, 0, 0.695829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420263,-99) , 
3, 15.2194, 0, 0, 0.450403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.148729,-99) , 
5, 0.999525, 0, 0, 0.410713,-99) , 
11, -3.27239, 1, 0, 0.462222,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.225092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.975481, 0, 1, 0.841048,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319129,-99) , 
12, 0.787927, 1, 0, 0.514615,-99) , 
11, -3.73917, 1, 0, 0.545668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196616,-99) , 
5, 0.999525, 0, 0, 0.508683,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.172371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.70823, 1, 1, 0.542782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319891,-99) , 
5, 0.999887, 0, 0, 0.512948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.227424,-99) , 
5, 0.999525, 0, 0, 0.480293,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.267899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.714973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332736,-99) , 
3, 5.11546, 0, 0, 0.621915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404042,-99) , 
6, 0.523803, 1, 0, 0.460896,-99) , 
11, -3.03417, 1, 0, 0.502629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224534,-99) , 
5, 0.999525, 0, 0, 0.472892,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.164768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 15.387, 0, 1, 0.545063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302198,-99) , 
5, 0.999525, 0, 0, 0.519707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.235647,-99) , 
12, 0.990945, 1, 0, 0.490878,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.190052);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.781619, 0, 1, 0.814046,-99) , 
NN(
0, 
0, 
-1, -1.25753, 1, -1, 0.427413,-99) , 
11, -3.66339, 1, 0, 0.461537,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.221781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.847329, 1, 1, 0.670527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415584,-99) , 
6, 0.523702, 1, 0, 0.490676,-99) , 
8, 16.6856, 0, 0, 0.515046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254745,-99) , 
5, 0.999524, 0, 0, 0.488444,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.213884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.767619, 1, 1, 0.586634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391698,-99) , 
6, 0.237903, 1, 0, 0.476498,-99) , 
3, 12.1138, 0, 0, 0.519027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271142,-99) , 
10, 2.14243, 1, 0, 0.496189,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.185741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333301, 1, 1, 0.549032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.221962,-99) , 
3, 3.30691, 0, 0, 0.309487,-99) , 
8, 4.61923, 0, 0, 0.514659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.208004,-99) , 
6, 0.714232, 1, 0, 0.322822,-99) , 
11, -1.25826, 1, 0, 0.480466,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.193424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.905805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.74396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327616,-99) , 
12, -2.05494, 1, 0, 0.57123,-99) , 
10, -0.589706, 0, 0, 0.654339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299868,-99) , 
12, 0.489566, 1, 0, 0.459647,-99) , 
NN(
0, 
0, 
-1, 0.669255, 0, -1, 0.284772,-99) , 
3, 4.88956, 0, 0, 0.429039,-99) , 
11, -3.43226, 1, 0, 0.457779,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.229116);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.35667, 0, 1, 0.733435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432427,-99) , 
3, 12.7365, 0, 0, 0.477077,-99) , 
NN(
0, 
0, 
-1, -1.90861, 1, -1, 0.334728,-99) , 
6, 0.904749, 1, 0, 0.442058,-99) , 
11, -3.78582, 1, 0, 0.463831,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.17904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.841255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.688756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449166,-99) , 
11, -3.81537, 1, 0, 0.535254,-99) , 
10, -0.0986196, 0, 0, 0.598378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331246,-99) , 
6, 0.904739, 1, 0, 0.459734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260439,-99) , 
10, -0.178337, 0, 0, 0.434869,-99) , 
11, -2.9418, 1, 0, 0.475905,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.186905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.56256, 1, 1, 0.717731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.300718,-99) , 
3, 3.09736, 0, 0, 0.477389,-99) , 
3, 10.9209, 0, 0, 0.52788,-99) , 
NN(
0, 
0, 
-1, 11.7705, 0, -1, 0.405677,-99) , 
6, 0.714275, 1, 0, 0.465338,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.200355);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464953,-99) , 
11, -2.70653, 1, 0, 0.510198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294538,-99) , 
11, -0.932118, 1, 0, 0.485445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302082,-99) , 
12, -2.51462, 1, 0, 0.46665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.159536,-99) , 
12, -2.2109, 1, 0, 0.302962,-99) , 
10, -1.00005, 0, 0, 0.462906,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.126956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.81805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394932,-99) , 
5, 0.99991, 0, 0, 0.506888,-99) , 
8, 20.7397, 0, 0, 0.519353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305862,-99) , 
5, 0.999525, 0, 0, 0.498854,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.177017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.770723, 1, 1, 0.591434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410123,-99) , 
11, -2.75588, 1, 0, 0.46069,-99) , 
3, 12.135, 0, 0, 0.509276,-99) , 
NN(
0, 
0, 
-1, 0.714267, 1, -1, 0.36475,-99) , 
11, -1.26371, 1, 0, 0.482955,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.139387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.871627, 1, 1, 0.636987,-99) , 
NN(
0, 
0, 
-1, -0.430909, 0, -1, 0.455744,-99) , 
3, 15.2099, 0, 0, 0.478389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306631,-99) , 
5, 0.999525, 0, 0, 0.461649,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.111619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.542761, 1, 1, 0.656249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349994,-99) , 
6, -0.52374, 0, 0, 0.474462,-99) , 
1, 0.00442927, 0, 0, 0.49074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306423,-99) , 
5, 0.999525, 0, 0, 0.473444,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.180589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.59825, 1, 1, 0.769128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.726627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480088,-99) , 
11, -3.75713, 1, 0, 0.503799,-99) , 
3, 10.4104, 0, 0, 0.551427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.740405,-99) , 
NN(
0, 
0, 
-1, -1.72071, 1, -1, 0.414879,-99) , 
3, 18.7379, 0, 0, 0.435147,-99) , 
6, 0.619031, 1, 0, 0.481086,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0998619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.98329, 1, 1, 0.531032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290741,-99) , 
10, -1.5796, 0, 0, 0.519326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35172,-99) , 
11, -0.879024, 1, 0, 0.503809,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.109825);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.745797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.746177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497683,-99) , 
11, -3.01965, 1, 0, 0.520751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30066,-99) , 
1, 0.000773816, 0, 0, 0.366354,-99) , 
10, -0.420866, 0, 0, 0.493486,-99) , 
11, -4.13796, 1, 0, 0.502832,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.1584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.64403, 1, 1, 0.753465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472456,-99) , 
6, 0.333326, 1, 0, 0.506248,-99) , 
11, -3.45023, 1, 0, 0.527828,-99) , 
NN(
0, 
0, 
-1, 0.143243, 0, -1, 0.208119,-99) , 
10, -1.57128, 0, 0, 0.507533,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.161723);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.33294, 1, 1, 0.695555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.743689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481724,-99) , 
6, 0.74485, 1, 0, 0.535369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34338,-99) , 
6, 0.218243, 1, 0, 0.441491,-99) , 
3, 11.0751, 0, 0, 0.494027,-99) , 
1, 0.00470502, 0, 0, 0.510236,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.233457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.670085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483258,-99) , 
10, -0.195871, 0, 0, 0.599628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348094,-99) , 
6, 0.877009, 1, 0, 0.448397,-99) , 
11, -1.73853, 1, 0, 0.547717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436196,-99) , 
8, 7.96572, 0, 0, 0.499659,-99) , 
NN(
0, 
0, 
-1, 9.55093, 0, -1, 0.347268,-99) , 
6, 0.309666, 1, 0, 0.441367,-99) , 
3, 11.0741, 0, 0, 0.498937,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0807774);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.849593, 1, 1, 0.656641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.704952,-99) , 
NN(
0, 
0, 
-1, -1.17634, 0, -1, 0.480887,-99) , 
11, -4.06866, 1, 0, 0.490874,-99) , 
3, 16.2502, 0, 0, 0.507425,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.137255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.736723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443601,-99) , 
10, -0.570454, 0, 0, 0.532036,-99) , 
3, 18.3023, 0, 0, 0.542307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35814,-99) , 
12, 1.06955, 1, 0, 0.529106,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.144536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.554658, 1, 1, 0.561065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358012,-99) , 
6, 0.216123, 1, 0, 0.448545,-99) , 
3, 11.0466, 0, 0, 0.504232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351616,-99) , 
5, 0.999525, 0, 0, 0.489996,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.17955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.55181, 1, 1, 0.697813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461287,-99) , 
10, -1.26547, 0, 0, 0.61757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460434,-99) , 
11, -2.02884, 1, 0, 0.520403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338965,-99) , 
8, 12.3662, 0, 0, 0.417524,-99) , 
10, 0.23944, 0, 0, 0.490142,-99) , 
11, -3.27239, 1, 0, 0.509805,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.155888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.3669, 1, 1, 0.56253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414333,-99) , 
11, -3.15003, 1, 0, 0.477044,-99) , 
10, 0.429047, 0, 0, 0.522245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32021,-99) , 
2, -0.227293, 0, 0, 0.510531,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.136321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.90891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470965,-99) , 
12, -2.35432, 1, 0, 0.556251,-99) , 
10, -0.834807, 0, 0, 0.663979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397263,-99) , 
10, 2.03682, 1, 0, 0.510156,-99) , 
NN(
0, 
0, 
-1, 8.56495, 0, -1, 0.34366,-99) , 
10, -0.369018, 0, 0, 0.485205,-99) , 
11, -3.48018, 1, 0, 0.503409,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.208352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.907282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435841,-99) , 
10, -0.701859, 0, 0, 0.522463,-99) , 
10, 0.445079, 0, 0, 0.561104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442775,-99) , 
11, -1.75235, 1, 0, 0.498241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369929,-99) , 
8, 15.85, 0, 0, 0.405942,-99) , 
10, 0.985405, 0, 0, 0.455207,-99) , 
11, -2.57241, 1, 0, 0.492945,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.144923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.991682, 0, 1, 0.760033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410515,-99) , 
10, -0.0468859, 0, 0, 0.507885,-99) , 
11, -3.47839, 1, 0, 0.527377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301296,-99) , 
10, -1.57153, 0, 0, 0.51615,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.139924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491337, 0, 1, 0.559281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441277,-99) , 
6, 0.142843, 1, 0, 0.472882,-99) , 
11, -2.11364, 1, 0, 0.519241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561077,-99) , 
NN(
0, 
0, 
-1, 1.28673, 0, -1, 0.41424,-99) , 
3, 15.1892, 0, 0, 0.434279,-99) , 
0, 0.499996, 1, 0, 0.488886,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.141886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.2369, 0, 1, 0.599719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435705,-99) , 
11, -2.50219, 1, 0, 0.478548,-99) , 
6, 0.80951, 1, 0, 0.547632,-99) , 
NN(
NN(
0, 
0, 
-1, -2.03793, 1, 1, 0.602894,-99) , 
NN(
0, 
0, 
-1, 0.191522, 0, -1, 0.452179,-99) , 
11, -3.42342, 1, 0, 0.470186,-99) , 
0, 0.499044, 1, 0, 0.513693,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.156725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.744916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428392,-99) , 
6, 0.904755, 1, 0, 0.520815,-99) , 
11, -2.50524, 1, 0, 0.54123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486801,-99) , 
12, -2.07018, 1, 0, 0.610646,-99) , 
NN(
0, 
0, 
-1, 12.207, 0, -1, 0.424535,-99) , 
11, -3.7686, 1, 0, 0.452378,-99) , 
10, 0.428427, 0, 0, 0.498681,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.118008);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6877,-99) , 
NN(
NN(
0, 
0, 
-1, 0.705801, 1, 1, 0.556794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434931,-99) , 
6, 0.333288, 1, 0, 0.475876,-99) , 
8, 14.0062, 0, 0, 0.501459,-99) , 
11, -4.00682, 1, 0, 0.510249,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.12867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.70565, 0, 1, 0.59594,-99) , 
NN(
0, 
0, 
-1, -1.87305, 1, -1, 0.462236,-99) , 
6, 0.536624, 1, 0, 0.494792,-99) , 
NN(
0, 
0, 
-1, -0.719281, 0, -1, 0.373583,-99) , 
3, 4.88261, 0, 0, 0.475178,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.117094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.588786, 1, 1, 0.543792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435329,-99) , 
8, 7.68842, 0, 0, 0.473331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266867,-99) , 
8, 10.6167, 1, 0, 0.45057,-99) , 
3, 10.0497, 0, 0, 0.511885,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.139902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.44989, 0, 1, 0.708095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36488,-99) , 
10, -0.853418, 0, 0, 0.484461,-99) , 
6, 0.618925, 1, 0, 0.577024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623865,-99) , 
NN(
0, 
0, 
-1, 11.8442, 0, -1, 0.463646,-99) , 
3, 17.2661, 0, 0, 0.4771,-99) , 
11, -2.92641, 1, 0, 0.501929,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.112759);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.716952,-99) , 
NN(
NN(
0, 
0, 
-1, 0.553516, 1, 1, 0.536129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369196,-99) , 
6, 0.222912, 1, 0, 0.452467,-99) , 
3, 11.0982, 0, 0, 0.497844,-99) , 
11, -4.1745, 1, 0, 0.50567,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.164491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.595645, 0, 1, 0.617941,-99) , 
NN(
0, 
0, 
-1, 0.90474, 1, -1, 0.471623,-99) , 
11, -2.05996, 1, 0, 0.529415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.731512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381644,-99) , 
11, -3.80776, 1, 0, 0.423175,-99) , 
1, -0.00386147, 1, 0, 0.451154,-99) , 
10, -0.140444, 0, 0, 0.505505,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0934108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.699614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473027,-99) , 
0, 0.499994, 1, 0, 0.515926,-99) , 
12, -2.02297, 1, 0, 0.522663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325983,-99) , 
10, -1.57178, 0, 0, 0.514485,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.107162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.853692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336074,-99) , 
12, -2.14351, 1, 0, 0.523941,-99) , 
10, -0.79208, 0, 0, 0.61469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489541,-99) , 
11, -2.50705, 1, 0, 0.513359,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.444066,-99) , 
10, -0.0188234, 0, 0, 0.496803,-99) , 
11, -3.47711, 1, 0, 0.508578,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.108408);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.769185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350747,-99) , 
10, -1.21145, 0, 0, 0.519403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332077,-99) , 
7, 0.00329726, 0, 0, 0.406905,-99) , 
0, 0.503805, 1, 0, 0.505477,-99) , 
11, -4.22689, 1, 0, 0.512974,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.136119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.867715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41973,-99) , 
12, -2.08685, 1, 0, 0.57427,-99) , 
10, -0.740454, 0, 0, 0.661972,-99) , 
NN(
NN(
0, 
0, 
-1, 8.03459, 0, 1, 0.608943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442788,-99) , 
3, 12.1038, 0, 0, 0.475034,-99) , 
1, 0.00442927, 0, 0, 0.48659,-99) , 
11, -3.33279, 1, 0, 0.507697,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.131956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.3133, 0, 1, 0.567371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377811,-99) , 
6, 0.945498, 1, 0, 0.466908,-99) , 
6, 0.809449, 1, 0, 0.528051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336659,-99) , 
2, -0.225944, 0, 0, 0.516725,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0922769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.833, 1, 1, 0.695225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385648,-99) , 
10, -1.52477, 0, 0, 0.600694,-99) , 
NN(
NN(
0, 
0, 
-1, -3.20972, 1, 1, 0.511004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393666,-99) , 
2, -0.0884985, 1, 0, 0.425662,-99) , 
0, 0.494281, 0, 0, 0.490959,-99) , 
11, -3.45215, 1, 0, 0.501755,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0984544);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.333271, 1, 1, 0.682152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.704853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486714,-99) , 
12, -1.59489, 1, 0, 0.49986,-99) , 
NN(
0, 
0, 
-1, -2.29648, 1, -1, 0.33908,-99) , 
10, -0.999936, 0, 0, 0.484312,-99) , 
1, 0.00442927, 0, 0, 0.499514,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.183402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.15626, 0, 1, 0.720011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461637,-99) , 
6, 0.142963, 1, 0, 0.504357,-99) , 
12, 0.0321572, 1, 0, 0.540026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307558,-99) , 
10, -1.66747, 0, 0, 0.559386,-99) , 
NN(
0, 
0, 
-1, 10.025, 0, -1, 0.422685,-99) , 
11, -3.12208, 1, 0, 0.458413,-99) , 
10, 0.998524, 0, 0, 0.486091,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.152261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.650288, 1, 1, 0.705104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.75834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479893,-99) , 
6, 0.0347579, 1, 0, 0.495095,-99) , 
1, -0.0023365, 1, 0, 0.52745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617721,-99) , 
NN(
0, 
0, 
-1, -0.702171, 1, -1, 0.351784,-99) , 
10, 0.7063, 0, 0, 0.43141,-99) , 
3, 5.9216, 0, 0, 0.508192,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0972584);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.2993, 1, 1, 0.657234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466098,-99) , 
10, 0.606017, 0, 0, 0.504751,-99) , 
11, -3.45096, 1, 0, 0.515583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36139,-99) , 
10, -1.57026, 0, 0, 0.509406,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0998967);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.711605,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391713,-99) , 
10, -0.922172, 0, 0, 0.524227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394482,-99) , 
6, 0.95013, 1, 0, 0.452122,-99) , 
6, 0.904749, 1, 0, 0.507698,-99) , 
11, -3.85355, 1, 0, 0.517173,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.137955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.81849, 1, 1, 0.76499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382658,-99) , 
12, 1.0129, 1, 0, 0.504613,-99) , 
11, -2.61463, 1, 0, 0.528884,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497132, 1, 1, 0.594497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391041,-99) , 
3, 13.1148, 0, 0, 0.421449,-99) , 
11, -3.57903, 1, 0, 0.459814,-99) , 
10, 0.142454, 0, 0, 0.503508,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.164702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.561736, 1, 1, 0.583322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258687,-99) , 
6, 0.0936089, 1, 0, 0.464848,-99) , 
3, 9.38935, 0, 0, 0.526238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424993,-99) , 
8, 14.1657, 1, 0, 0.493482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36743,-99) , 
11, -1.50691, 1, 0, 0.458904,-99) , 
6, 0.809504, 1, 0, 0.49912,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.106868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467461,-99) , 
10, -0.492466, 0, 0, 0.518167,-99) , 
1, 0.00238009, 0, 0, 0.547164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496788,-99) , 
11, -2.51347, 1, 0, 0.512474,-99) , 
NN(
0, 
0, 
-1, -2.77199, 0, -1, 0.35256,-99) , 
10, 0.253978, 0, 0, 0.4812,-99) , 
12, -1.07053, 1, 0, 0.498865,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.115117);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495176,-99) , 
6, 0.588779, 1, 0, 0.517391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377779,-99) , 
1, 0.00234698, 0, 0, 0.427446,-99) , 
3, 10.0072, 0, 0, 0.488299,-99) , 
1, -0.00632407, 1, 0, 0.497625,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0848906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 17.2846, 0, 1, 0.530886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39099,-99) , 
2, 0.195039, 1, 0, 0.521543,-99) , 
NN(
0, 
0, 
-1, -2.54048, 1, -1, 0.368769,-99) , 
10, -1.28254, 0, 0, 0.511521,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.132546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00368861, 0, 1, 0.604719,-99) , 
NN(
0, 
0, 
-1, 10.0418, 0, -1, 0.459716,-99) , 
7, 0.00262575, 0, 0, 0.506704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282906,-99) , 
7, 0.013785, 1, 0, 0.499925,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.107706);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483825,-99) , 
10, -0.458222, 0, 0, 0.551722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473077,-99) , 
8, 17.8894, 0, 0, 0.48929,-99) , 
11, -2.52002, 1, 0, 0.512099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361819,-99) , 
2, -0.222504, 0, 0, 0.50248,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0857571);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00425222, 1, 1, 0.530283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309928,-99) , 
9, -951.286, 0, 0, 0.411418,-99) , 
8, 4.59624, 0, 0, 0.51285,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.143963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.351689, 1, 1, 0.676963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380181,-99) , 
6, 0.960686, 1, 0, 0.509363,-99) , 
6, 0.174722, 1, 0, 0.520881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413193,-99) , 
12, 0.327091, 0, 0, 0.516731,-99) , 
NN(
0, 
0, 
-1, -0.733043, 1, -1, 0.330439,-99) , 
10, 0.42328, 0, 0, 0.400881,-99) , 
3, 6.97129, 0, 0, 0.492185,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.124353);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.0386, 0, 1, 0.68079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492999,-99) , 
3, 18.6655, 0, 0, 0.505469,-99) , 
6, 0.564425, 1, 0, 0.527997,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.615929,-99) , 
NN(
0, 
0, 
-1, 0.0433402, 1, -1, 0.384605,-99) , 
1, -0.0034466, 1, 0, 0.430887,-99) , 
3, 9.05225, 0, 0, 0.499336,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.129411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.527375, 1, 1, 0.546809,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494653,-99) , 
11, -1.48184, 0, 0, 0.555087,-99) , 
NN(
0, 
0, 
-1, 10.2316, 1, -1, 0.386147,-99) , 
11, -1.97821, 0, 0, 0.441203,-99) , 
3, 10.0497, 0, 0, 0.509241,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0753694);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421489,-99) , 
4, 7.41939, 1, 0, 0.516525,-99) , 
8, 20.7388, 0, 0, 0.523008,-99) , 
11, -4.07586, 1, 0, 0.529402,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.155498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.52682, 0, 1, 0.626148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404806,-99) , 
11, -1.1754, 1, 0, 0.5189,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.739965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460709,-99) , 
0, 0.497138, 1, 0, 0.544004,-99) , 
NN(
0, 
0, 
-1, 0.0210159, 1, -1, 0.438706,-99) , 
11, -3.55921, 1, 0, 0.451046,-99) , 
10, 1.28491, 0, 0, 0.468074,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.141767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.736377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473602,-99) , 
10, -0.601885, 0, 0, 0.634519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486213,-99) , 
10, 0.87975, 0, 0, 0.550973,-99) , 
11, -2.47917, 1, 0, 0.575551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472924,-99) , 
6, 0.142769, 1, 0, 0.535328,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.450691,-99) , 
12, -0.697158, 1, 0, 0.483033,-99) , 
3, 12.1053, 0, 0, 0.520996,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.13691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.782321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480257,-99) , 
0, 0.495233, 1, 0, 0.523016,-99) , 
3, 10.0881, 0, 0, 0.555022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475335,-99) , 
0, 0.499995, 1, 0, 0.542511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417187,-99) , 
9, -0.143882, 0, 0, 0.479879,-99) , 
9, -951.286, 1, 0, 0.499084,-99) , 
6, 0.523761, 1, 0, 0.517942,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0580633);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.741152,-99) , 
NN(
NN(
0, 
0, 
-1, -1.20163, 1, 1, 0.517173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349845,-99) , 
11, -3.77791, 0, 0, 0.511698,-99) , 
11, -4.06436, 1, 0, 0.519509,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.104238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.552189, 0, 1, 0.542498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45319,-99) , 
6, -0.142856, 1, 0, 0.480117,-99) , 
12, -0.417195, 1, 0, 0.510279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349931,-99) , 
10, -1.57018, 0, 0, 0.503949,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0467754);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677689,-99) , 
NN(
0, 
0, 
-1, -1.27605, 0, -1, 0.487217,-99) , 
11, -4.27526, 1, 0, 0.492364,-99) , 
3, 18.294, 0, 0, 0.499846,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.057186);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492343,-99) , 
11, -3.06222, 1, 0, 0.503115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371603,-99) , 
10, -0.862963, 0, 0, 0.494587,-99) , 
12, -2.165, 1, 0, 0.500669,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.116094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 12.7538, 0, 1, 0.579284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439784,-99) , 
11, -1.81156, 1, 0, 0.489404,-99) , 
8, 19.7223, 0, 0, 0.500383,-99) , 
6, 0.714265, 1, 0, 0.535835,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.120521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.8561, 0, 1, 0.679992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401355,-99) , 
3, 10.066, 0, 0, 0.473852,-99) , 
7, 0.00356693, 0, 0, 0.512594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338184,-99) , 
7, 0.0124852, 1, 0, 0.506796,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0982369);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.732235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469024,-99) , 
9, -951.286, 0, 0, 0.548746,-99) , 
3, 9.5587, 0, 0, 0.571873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38027,-99) , 
0, 0.492377, 0, 0, 0.489889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321349,-99) , 
10, -1.28648, 0, 0, 0.480755,-99) , 
6, 0.428536, 1, 0, 0.50781,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.142503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0107603, 0, 1, 0.620386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383127,-99) , 
6, -0.80041, 0, 0, 0.47264,-99) , 
9, -951.286, 0, 0, 0.553397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470722,-99) , 
6, 0.63725, 1, 0, 0.489192,-99) , 
NN(
0, 
0, 
-1, -0.131736, 0, -1, 0.31318,-99) , 
3, 9.80968, 0, 0, 0.466804,-99) , 
6, 0.0476166, 1, 0, 0.487428,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.136702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436997,-99) , 
11, -1.20793, 1, 0, 0.538909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470201,-99) , 
11, -2.79697, 1, 0, 0.513842,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.442517,-99) , 
4, 3.22774, 0, 0, 0.462989,-99) , 
10, 1.57065, 0, 0, 0.476933,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.098518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00376077, 0, 1, 0.530975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404046,-99) , 
4, 6.66832, 1, 0, 0.519648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385093,-99) , 
12, -2.36786, 1, 0, 0.450974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.2139,-99) , 
4, 3.80111, 1, 0, 0.370118,-99) , 
10, -1.0001, 0, 0, 0.504187,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0814278);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440986,-99) , 
4, 4.46144, 1, 0, 0.520243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422301,-99) , 
11, -1.65525, 1, 0, 0.475901,-99) , 
6, 0.809489, 1, 0, 0.501685,-99) , 
11, -3.81162, 1, 0, 0.509428,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.104654);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428234, 0, 1, 0.666568,-99) , 
NN(
NN(
0, 
0, 
-1, -2.48189, 1, 1, 0.52596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412742,-99) , 
1, -0.00244996, 1, 0, 0.434086,-99) , 
10, 0.23944, 0, 0, 0.492716,-99) , 
11, -3.76904, 1, 0, 0.501908,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0858176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.0787, 0, 1, 0.547915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469587,-99) , 
3, 15.1405, 0, 0, 0.488931,-99) , 
6, 0.523811, 1, 0, 0.508014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39551,-99) , 
10, -1.57153, 0, 0, 0.503509,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.130652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.514769, 1, 1, 0.694569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447115,-99) , 
4, 2.87048, 0, 0, 0.476039,-99) , 
3, 9.55003, 0, 0, 0.5261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603021,-99) , 
NN(
0, 
0, 
-1, -1.70139, 1, -1, 0.455771,-99) , 
8, 20.3116, 0, 0, 0.467093,-99) , 
6, 0.619029, 1, 0, 0.489837,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.108781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469942,-99) , 
6, -0.523773, 0, 0, 0.533639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396297,-99) , 
2, 0.00389057, 1, 0, 0.453674,-99) , 
10, -0.428514, 0, 0, 0.516244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381595,-99) , 
5, 0.999525, 0, 0, 0.503682,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0808846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.81123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41383,-99) , 
0, 0.49809, 0, 0, 0.498704,-99) , 
10, -0.75597, 0, 0, 0.573709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480333,-99) , 
11, -1.23148, 0, 0, 0.488016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417247,-99) , 
10, 2.17765, 1, 0, 0.482269,-99) , 
11, -3.38291, 1, 0, 0.492046,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.127646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.819705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310562,-99) , 
12, -1.05079, 1, 0, 0.537482,-99) , 
10, 0.368302, 0, 0, 0.560664,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486338,-99) , 
0, 0.497002, 1, 0, 0.500878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407095,-99) , 
6, 0.523772, 1, 0, 0.443391,-99) , 
0, 0.495233, 0, 0, 0.485784,-99) , 
11, -2.65527, 1, 0, 0.508851,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0491247);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645028,-99) , 
NN(
NN(
0, 
0, 
-1, 3.27948, 0, 1, 0.577437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272395,-99) , 
3, 5.21618, 0, 0, 0.493521,-99) , 
6, -0.619018, 1, 0, 0.505147,-99) , 
8, 20.7388, 0, 0, 0.511157,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0972259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498652, 1, 1, 0.617772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491147,-99) , 
6, 0.523655, 1, 0, 0.51849,-99) , 
0, 0.498997, 1, 0, 0.532256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.685951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470981,-99) , 
6, 0.162928, 1, 0, 0.48859,-99) , 
NN(
0, 
0, 
-1, 4.56373, 1, -1, 0.389912,-99) , 
8, 5.91303, 0, 0, 0.470097,-99) , 
0, 0.49809, 0, 0, 0.501266,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.123733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.7703, 0, 1, 0.648769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476181,-99) , 
6, 0.780148, 1, 0, 0.506056,-99) , 
1, -0.00229925, 1, 0, 0.528864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357635,-99) , 
4, 0.609272, 0, 0, 0.489431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.225792,-99) , 
6, 0.164086, 1, 0, 0.454459,-99) , 
3, 9.01769, 0, 0, 0.507859,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0980684);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00408019, 0, 1, 0.549967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468697,-99) , 
3, 11.4139, 0, 0, 0.486815,-99) , 
NN(
0, 
0, 
-1, -2.74557, 0, -1, 0.406309,-99) , 
8, 13.0199, 1, 0, 0.471123,-99) , 
3, 13.1285, 0, 0, 0.492037,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0654792);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.0824, 0, 1, 0.577079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591555,-99) , 
NN(
0, 
0, 
-1, -1.57059, 0, -1, 0.482939,-99) , 
3, 18.2435, 0, 0, 0.489145,-99) , 
1, -0.00218438, 1, 0, 0.507084,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.109186);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.619045, 1, 1, 0.612596,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492058, 0, 1, 0.577612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477492,-99) , 
6, -0.142885, 1, 0, 0.493003,-99) , 
0, 0.494281, 1, 0, 0.509698,-99) , 
1, -0.00218438, 1, 0, 0.529694,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0745909);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.833, 1, 1, 0.631024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493875,-99) , 
10, 0.790481, 0, 0, 0.521981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44111,-99) , 
5, 0.999525, 0, 0, 0.515023,-99) , 
11, -3.75713, 1, 0, 0.521802,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0800195);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470637,-99) , 
12, 0.258246, 1, 0, 0.515401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349048,-99) , 
10, -1.21661, 0, 0, 0.508465,-99) , 
11, -4.20193, 1, 0, 0.512351,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0863159);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.57021, 1, 1, 0.628077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390271,-99) , 
10, -1.28561, 0, 0, 0.518752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32247,-99) , 
1, -0.0105024, 0, 0, 0.513252,-99) , 
1, 0.00442927, 0, 0, 0.522072,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0579844);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491834,-99) , 
2, 0.198873, 0, 0, 0.499558,-99) , 
NN(
0, 
0, 
-1, 0.809515, 1, -1, 0.444354,-99) , 
12, 0.297347, 1, 0, 0.485649,-99) , 
8, 20.7507, 0, 0, 0.490895,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.114647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.93521, 1, 1, 0.628259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386379,-99) , 
10, -1.23601, 0, 0, 0.513017,-99) , 
4, 2.61703, 0, 0, 0.552032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479149,-99) , 
9, -951.286, 1, 0, 0.508605,-99) , 
NN(
0, 
0, 
-1, -0.266139, 1, -1, 0.444375,-99) , 
3, 9.03091, 0, 0, 0.489681,-99) , 
12, -0.848253, 1, 0, 0.510648,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0953839);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490036,-99) , 
12, -0.19655, 1, 0, 0.517636,-99) , 
11, -3.98666, 1, 0, 0.523153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432563,-99) , 
0, 0.491424, 0, 0, 0.504049,-99) , 
NN(
0, 
0, 
-1, 5.53518, 1, -1, 0.299244,-99) , 
3, 6.88784, 0, 0, 0.433047,-99) , 
0, 0.493329, 0, 0, 0.506695,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0977002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.74698, 0, 1, 0.566354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469573,-99) , 
10, 0.333481, 0, 0, 0.514514,-99) , 
6, 0.333319, 1, 0, 0.528353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359102,-99) , 
12, -2.29648, 1, 0, 0.444681,-99) , 
10, -0.999936, 0, 0, 0.520622,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.104498);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432378,-99) , 
4, 2.99279, 1, 0, 0.56247,-99) , 
NN(
0, 
0, 
-1, 0.498095, 0, -1, 0.402931,-99) , 
2, -0.0683801, 0, 0, 0.530939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482687,-99) , 
6, 0.600938, 1, 0, 0.494397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350114,-99) , 
3, 9.82612, 0, 0, 0.482934,-99) , 
6, 0.238107, 1, 0, 0.49512,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0880828);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714097, 1, 1, 0.604535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491525,-99) , 
12, -0.0611863, 1, 0, 0.521493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398882,-99) , 
12, -0.953425, 1, 0, 0.457832,-99) , 
10, 0.421205, 0, 0, 0.496925,-99) , 
12, -1.73893, 1, 0, 0.506885,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0739138);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.8538, 1, 1, 0.521864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415156,-99) , 
10, -1.16219, 0, 0, 0.503516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330362,-99) , 
6, -0.632611, 1, 0, 0.386418,-99) , 
3, 11.096, 0, 0, 0.441427,-99) , 
10, -0.428743, 0, 0, 0.505597,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.124431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.749241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413795,-99) , 
10, 1.1487, 0, 0, 0.501445,-99) , 
12, -0.301577, 1, 0, 0.525085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422499,-99) , 
11, -2.46566, 0, 0, 0.45446,-99) , 
11, -3.92209, 1, 0, 0.468126,-99) , 
10, 0.713567, 0, 0, 0.49308,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0867795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.766795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471612,-99) , 
4, 2.3008, 1, 0, 0.567257,-99) , 
0, 0.499994, 0, 0, 0.623383,-99) , 
NN(
NN(
0, 
0, 
-1, -0.589312, 0, 1, 0.575629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425856,-99) , 
10, 0.268578, 0, 0, 0.487129,-99) , 
12, -1.36997, 1, 0, 0.495129,-99) , 
11, -3.34946, 1, 0, 0.50873,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.09648);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619442,-99) , 
NN(
NN(
0, 
0, 
-1, 5.87331, 0, 1, 0.615247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452367,-99) , 
7, 0.00181552, 0, 0, 0.482067,-99) , 
1, 0.00461827, 0, 0, 0.491926,-99) , 
1, -0.00544689, 1, 0, 0.49828,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0582589);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714277, 1, 1, 0.583688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444344,-99) , 
12, 1.0374, 1, 0, 0.501976,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.370459,-99) , 
10, -0.542267, 0, 0, 0.487477,-99) , 
12, -1.97144, 1, 0, 0.493836,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.131884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492602, 0, 1, 0.639364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445288,-99) , 
10, -0.215412, 0, 0, 0.48806,-99) , 
0, 0.497138, 1, 0, 0.544866,-99) , 
NN(
NN(
0, 
0, 
-1, -2.29535, 1, 1, 0.557316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440202,-99) , 
9, -951.286, 1, 0, 0.469052,-99) , 
8, 4.53403, 1, 0, 0.481596,-99) , 
12, -0.95869, 1, 0, 0.500638,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0673276);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.698119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487199,-99) , 
12, -1.30968, 1, 0, 0.494905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356791,-99) , 
12, -1.55391, 1, 0, 0.431595,-99) , 
10, -0.368866, 0, 0, 0.483615,-99) , 
11, -3.75713, 1, 0, 0.491141,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.090058);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499045, 1, 1, 0.724389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392879,-99) , 
3, 9.09855, 0, 0, 0.510871,-99) , 
6, 0.0566955, 1, 0, 0.525027,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474571,-99) , 
9, -0.140268, 1, 0, 0.522862,-99) , 
NN(
0, 
0, 
-1, -0.818515, 1, -1, 0.380314,-99) , 
9, -951.286, 0, 0, 0.450076,-99) , 
6, -0.523796, 0, 0, 0.510935,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0964597);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.713885, 1, 1, 0.68484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.690561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494617,-99) , 
11, -2.24535, 1, 0, 0.511544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446508,-99) , 
1, 0.00346798, 0, 0, 0.461438,-99) , 
10, 0.772156, 0, 0, 0.483676,-99) , 
11, -3.6674, 1, 0, 0.494569,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0661676);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.56265, 0, 1, 0.613393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49899,-99) , 
12, -0.70106, 1, 0, 0.516316,-99) , 
NN(
0, 
0, 
-1, 0.499041, 1, -1, 0.450209,-99) , 
10, 0.140838, 0, 0, 0.494833,-99) , 
12, -2.00338, 1, 0, 0.501293,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.080669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.670324, 0, 1, 0.618871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474292,-99) , 
10, 0.826336, 0, 0, 0.498311,-99) , 
12, -1.54651, 1, 0, 0.510371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317671,-99) , 
10, -1.57155, 0, 0, 0.502331,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0679358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.4207, 1, 1, 0.679543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405543,-99) , 
5, 0.999525, 0, 0, 0.50353,-99) , 
11, -3.42059, 1, 0, 0.514558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372127,-99) , 
10, -1.56815, 0, 0, 0.508486,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.072769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414257,-99) , 
0, 0.498085, 0, 0, 0.4892,-99) , 
10, -1.02841, 0, 0, 0.572478,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421373,-99) , 
10, -0.414524, 0, 0, 0.503946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426618,-99) , 
12, 0.953449, 1, 0, 0.496257,-99) , 
12, -1.60913, 1, 0, 0.50572,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0804944);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494748,-99) , 
11, -2.61063, 1, 0, 0.516815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383838,-99) , 
4, 2.90867, 0, 0, 0.429426,-99) , 
0, 0.492376, 0, 0, 0.505464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373421,-99) , 
4, 7.41242, 1, 0, 0.496917,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.054403);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.35149, 1, 1, 0.624644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617596,-99) , 
NN(
0, 
0, 
-1, 9.03867, 0, -1, 0.482029,-99) , 
0, 0.505709, 0, 0, 0.48691,-99) , 
1, -0.00526335, 1, 0, 0.494414,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0633426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0204023, 1, 1, 0.521188,-99) , 
NN(
0, 
0, 
-1, -0.591882, 1, -1, 0.459654,-99) , 
6, -0.428572, 0, 0, 0.509537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369964,-99) , 
6, 0.333282, 1, 0, 0.434137,-99) , 
0, 0.504757, 1, 0, 0.503392,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.106938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.5501, 0, 1, 0.594429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448114,-99) , 
0, 0.497126, 0, 0, 0.489223,-99) , 
6, 0.779429, 1, 0, 0.518479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462615,-99) , 
1, -0.00636215, 1, 0, 0.47485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293631,-99) , 
12, -2.05954, 0, 0, 0.459032,-99) , 
8, 11.2869, 0, 0, 0.495838,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0938097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.77371, 0, 1, 0.596274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426365,-99) , 
0, 0.492512, 0, 0, 0.508863,-99) , 
6, 0.142888, 1, 0, 0.527213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456255,-99) , 
11, -1.45223, 0, 0, 0.471494,-99) , 
3, 16.2468, 0, 0, 0.481066,-99) , 
0, 0.499042, 1, 0, 0.506389,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0988944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.410432, 0, 1, 0.594703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472466,-99) , 
11, -2.38879, 1, 0, 0.497922,-99) , 
6, -0.0476202, 1, 0, 0.517822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380626,-99) , 
10, -1.57128, 0, 0, 0.512069,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.076501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491351,-99) , 
6, 0.769043, 1, 0, 0.511644,-99) , 
6, -0.212467, 1, 0, 0.518747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435336,-99) , 
3, 3.12033, 0, 0, 0.483892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28349,-99) , 
6, -0.655483, 1, 0, 0.454339,-99) , 
3, 4.88956, 0, 0, 0.507832,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0459741);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.618926, 1, 1, 0.63319,-99) , 
NN(
NN(
0, 
0, 
-1, -1.22226, 1, 1, 0.507934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408213,-99) , 
10, -0.574322, 0, 0, 0.502359,-99) , 
12, -1.71489, 1, 0, 0.513589,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0614668);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.742788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457103,-99) , 
3, 11.0631, 0, 0, 0.481541,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.380577,-99) , 
10, -0.97279, 0, 0, 0.475493,-99) , 
12, -2.37067, 1, 0, 0.482659,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0714997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 18.933, 0, 1, 0.609491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490282,-99) , 
6, 0.5238, 1, 0, 0.511417,-99) , 
3, 16.193, 0, 0, 0.520358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409379,-99) , 
2, 0.198873, 1, 0, 0.51275,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.133151);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.42478, 0, 1, 0.680693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431034,-99) , 
11, -1.25057, 1, 0, 0.524193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460475,-99) , 
11, -1.61369, 0, 0, 0.474533,-99) , 
10, 1.31177, 0, 0, 0.488079,-99) , 
12, -1.99351, 1, 0, 0.497807,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0877246);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 0, 1, 0.626129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465114,-99) , 
6, 0.714278, 0, 0, 0.499937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337297,-99) , 
6, 0.618474, 1, 0, 0.401933,-99) , 
10, -1.0001, 0, 0, 0.491438,-99) , 
1, 0.00442927, 0, 0, 0.501496,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.128432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.387712, 1, 1, 0.568095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.30239,-99) , 
6, -0.673487, 1, 0, 0.473924,-99) , 
6, -0.42859, 0, 0, 0.55013,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.578385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435614,-99) , 
10, 1.49338, 0, 0, 0.479164,-99) , 
6, -0.142845, 1, 0, 0.501578,-99) , 
12, -0.254962, 1, 0, 0.528709,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.103304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000931697, 1, 1, 0.644152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481208,-99) , 
11, -2.11915, 0, 0, 0.494778,-99) , 
10, 0.64886, 0, 0, 0.520009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463257,-99) , 
10, 1.70316, 0, 0, 0.500813,-99) , 
NN(
0, 
0, 
-1, 8.99186, 0, -1, 0.431996,-99) , 
0, 0.499042, 0, 0, 0.462778,-99) , 
12, -0.093312, 1, 0, 0.498027,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0842034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.80277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386494,-99) , 
0, 0.49333, 0, 0, 0.489986,-99) , 
3, 7.33988, 0, 0, 0.537396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635756,-99) , 
NN(
0, 
0, 
-1, 10.7231, 0, -1, 0.478473,-99) , 
3, 18.8804, 0, 0, 0.486868,-99) , 
6, 0.238081, 1, 0, 0.499895,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0845722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432368,-99) , 
0, 0.503986, 1, 0, 0.522142,-99) , 
0, 0.505709, 0, 0, 0.527108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50346,-99) , 
NN(
0, 
0, 
-1, 0.498084, 1, -1, 0.344597,-99) , 
12, -2.39631, 1, 0, 0.406088,-99) , 
10, -0.999325, 0, 0, 0.515957,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0824074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491016,-99) , 
9, -951.286, 0, 0, 0.573659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.690811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468138,-99) , 
4, 2.97178, 0, 0, 0.487675,-99) , 
11, -3.97332, 1, 0, 0.494011,-99) , 
3, 3.8529, 1, 0, 0.502934,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.074521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.44049, 1, 1, 0.540978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478902,-99) , 
11, -4.1362, 1, 0, 0.487499,-99) , 
10, 0.427715, 0, 0, 0.516539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436402,-99) , 
5, 0.999525, 0, 0, 0.509284,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.087448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 1, 1, 0.59277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481463,-99) , 
12, -0.643409, 1, 0, 0.509445,-99) , 
1, -0.00245895, 1, 0, 0.524023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478375,-99) , 
0, 0.490471, 1, 0, 0.495415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336303,-99) , 
10, -0.996786, 0, 0, 0.477812,-99) , 
0, 0.496186, 0, 0, 0.508373,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.12137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.3657, 1, 1, 0.702369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414738,-99) , 
12, -0.979555, 1, 0, 0.531483,-99) , 
10, 0.228959, 0, 0, 0.559571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472654,-99) , 
0, 0.50036, 1, 0, 0.518841,-99) , 
NN(
0, 
0, 
-1, 0.826933, 0, -1, 0.466737,-99) , 
0, 0.498092, 0, 0, 0.493711,-99) , 
12, -0.625955, 1, 0, 0.520382,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0956702);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434306,-99) , 
11, -1.15945, 1, 0, 0.512104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420564,-99) , 
6, 0.780669, 1, 0, 0.450607,-99) , 
8, 15.3378, 1, 0, 0.497702,-99) , 
11, -3.82261, 1, 0, 0.50312,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.123017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47455,-99) , 
11, -1.67316, 1, 0, 0.591017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437722,-99) , 
10, 1.00135, 0, 0, 0.473182,-99) , 
0, 0.49351, 0, 0, 0.540179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494627,-99) , 
9, -951.286, 0, 0, 0.573792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464176,-99) , 
6, -0.714253, 1, 0, 0.473474,-99) , 
1, 0.00265106, 0, 0, 0.490284,-99) , 
0, 0.497138, 1, 0, 0.510028,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0953263);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.33334, 1, 1, 0.552888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464346,-99) , 
10, 1.38473, 0, 0, 0.492993,-99) , 
12, -0.750313, 1, 0, 0.512936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349904,-99) , 
10, -1.57155, 0, 0, 0.506121,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.100102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.00609, 1, 1, 0.583883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407915,-99) , 
9, -951.286, 0, 0, 0.482535,-99) , 
3, 4.43744, 0, 0, 0.542095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595018,-99) , 
NN(
0, 
0, 
-1, 0.945554, 1, -1, 0.475177,-99) , 
3, 18.0785, 0, 0, 0.4851,-99) , 
6, 0.619029, 1, 0, 0.506211,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0709078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49636, 1, 1, 0.630997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49701,-99) , 
3, 15.1726, 0, 0, 0.513686,-99) , 
0, 0.495777, 0, 0, 0.540994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484515,-99) , 
6, -0.809519, 1, 0, 0.494039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304451,-99) , 
10, -1.56794, 0, 0, 0.48593,-99) , 
0, 0.497138, 1, 0, 0.507141,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.108421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.81522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491969,-99) , 
0, 0.499044, 1, 0, 0.658241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466179,-99) , 
10, 0.822729, 0, 0, 0.518854,-99) , 
12, -0.739668, 1, 0, 0.53265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465951,-99) , 
10, -0.456159, 0, 0, 0.491672,-99) , 
NN(
0, 
0, 
-1, -2.99162, 0, -1, 0.425618,-99) , 
12, -1.32624, 1, 0, 0.460524,-99) , 
10, 0.142568, 0, 0, 0.506956,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.12243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499903, 1, 1, 0.563929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470471,-99) , 
0, 0.501263, 0, 0, 0.510004,-99) , 
12, -0.0679829, 1, 0, 0.542332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419128,-99) , 
12, 0.402244, 1, 0, 0.52271,-99) , 
NN(
0, 
0, 
-1, 0.497733, 1, -1, 0.408646,-99) , 
0, 0.496593, 1, 0, 0.489947,-99) , 
0, 0.498089, 0, 0, 0.516555,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0835079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.94982, 0, 1, 0.583534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463214,-99) , 
3, 12.1138, 0, 0, 0.486751,-99) , 
7, 0.00328184, 0, 0, 0.508002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354056,-99) , 
7, 0.0137852, 1, 0, 0.503625,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.076188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39143,-99) , 
8, 18.9829, 1, 0, 0.505355,-99) , 
11, -1.18576, 0, 0, 0.518103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403686,-99) , 
12, 1.07696, 1, 0, 0.510016,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0842455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.65306, 1, 1, 0.531757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401933,-99) , 
10, -1.48472, 0, 0, 0.523323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480856,-99) , 
6, 0.682643, 1, 0, 0.500873,-99) , 
NN(
0, 
0, 
-1, 0.512783, 0, -1, 0.413756,-99) , 
6, 0.333322, 0, 0, 0.470124,-99) , 
12, -0.093312, 1, 0, 0.502077,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0763835);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568399,-99) , 
NN(
NN(
0, 
0, 
-1, -1.64098, 1, 1, 0.585739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320884,-99) , 
12, -0.0343924, 1, 0, 0.480184,-99) , 
10, 1.27189, 0, 0, 0.498742,-99) , 
11, -1.08791, 0, 0, 0.508956,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.121362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56196, 0, 1, 0.642706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456081,-99) , 
9, -951.286, 0, 0, 0.515265,-99) , 
3, 5.7242, 0, 0, 0.550559,-99) , 
NN(
NN(
0, 
0, 
-1, 0.836824, 1, 1, 0.550354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449395,-99) , 
12, -2.08753, 1, 0, 0.459081,-99) , 
3, 14.1081, 0, 0, 0.483178,-99) , 
6, 0.142858, 1, 0, 0.498613,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0825945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.76888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407709,-99) , 
12, -2.40872, 1, 0, 0.523738,-99) , 
10, -1.18764, 0, 0, 0.61867,-99) , 
NN(
NN(
0, 
0, 
-1, 10.8948, 1, 1, 0.59417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482691,-99) , 
11, -1.0178, 0, 0, 0.492185,-99) , 
0, 0.491423, 1, 0, 0.501044,-99) , 
12, -1.80604, 1, 0, 0.51141,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0906306);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487893,-99) , 
10, 0.604482, 0, 0, 0.52578,-99) , 
NN(
0, 
0, 
-1, 11.4863, 0, -1, 0.460171,-99) , 
8, 12.6334, 1, 0, 0.494117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3296,-99) , 
10, -1.57137, 0, 0, 0.486719,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0901465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487199,-99) , 
11, -2.10161, 1, 0, 0.513768,-99) , 
6, 0.424733, 1, 0, 0.522178,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498104, 1, 1, 0.5512,-99) , 
NN(
0, 
0, 
-1, 7.12398, 0, -1, 0.407955,-99) , 
6, -0.708908, 1, 0, 0.472675,-99) , 
3, 9.01769, 0, 0, 0.508814,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0800797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.54694, 0, 1, 0.561922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465474,-99) , 
10, 0.142196, 0, 0, 0.504021,-99) , 
6, 0.333303, 1, 0, 0.518677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331574,-99) , 
1, -0.00987108, 0, 0, 0.513016,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0534373);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.87151, 1, 1, 0.524621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433598,-99) , 
2, -0.227293, 0, 0, 0.520105,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.126509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.725646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454369,-99) , 
10, -0.643524, 0, 0, 0.511046,-99) , 
6, 0.428322, 1, 0, 0.55723,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400211,-99) , 
6, 0.932469, 1, 0, 0.50354,-99) , 
NN(
0, 
0, 
-1, -0.66715, 1, -1, 0.435444,-99) , 
3, 10.0173, 0, 0, 0.480243,-99) , 
12, -1.24706, 1, 0, 0.494153,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.086196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.751614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418066,-99) , 
2, -0.0746268, 0, 0, 0.512965,-99) , 
8, 13.7643, 0, 0, 0.529681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434328,-99) , 
11, -1.62867, 1, 0, 0.479221,-99) , 
6, 0.755083, 1, 0, 0.490128,-99) , 
6, 0.714265, 1, 0, 0.507759,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.080297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47765,-99) , 
11, -1.23339, 0, 0, 0.488072,-99) , 
12, 0.892986, 0, 0, 0.498851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365276,-99) , 
2, -0.225944, 0, 0, 0.49137,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0824486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.56117, 0, 1, 0.54888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43106,-99) , 
3, 11.6791, 0, 0, 0.484765,-99) , 
6, 0.333329, 1, 0, 0.501423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377995,-99) , 
10, -1.57178, 0, 0, 0.496646,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0692134);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494468,-99) , 
12, -0.71553, 1, 0, 0.509433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402327,-99) , 
8, 12.3662, 1, 0, 0.456509,-99) , 
10, 0.192525, 0, 0, 0.490364,-99) , 
11, -4.07586, 1, 0, 0.494787,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.040902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493779,-99) , 
0, 0.504756, 0, 0, 0.499618,-99) , 
11, -3.90579, 1, 0, 0.504197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290913,-99) , 
10, -1.85715, 0, 0, 0.498713,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.102791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.94637, 0, 1, 0.632791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449305,-99) , 
6, 0.951142, 1, 0, 0.516683,-99) , 
6, 0.487053, 1, 0, 0.52519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.750142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467492,-99) , 
3, 6.95501, 0, 0, 0.499015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290801,-99) , 
6, 0.172072, 1, 0, 0.471672,-99) , 
3, 9.01288, 0, 0, 0.510868,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.102296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523705, 1, 1, 0.569784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412233,-99) , 
12, -1.47953, 0, 0, 0.50111,-99) , 
0, 0.499995, 0, 0, 0.524518,-99) , 
NN(
NN(
0, 
0, 
-1, -0.411762, 1, 1, 0.567631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403556,-99) , 
11, -2.00834, 0, 0, 0.4537,-99) , 
6, 0.736202, 1, 0, 0.472153,-99) , 
8, 12.6334, 1, 0, 0.49913,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.047827);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.590701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493264,-99) , 
3, 14.1779, 0, 0, 0.503457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377595,-99) , 
10, -0.812126, 0, 0, 0.496572,-99) , 
12, -2.01927, 1, 0, 0.501624,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0958553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483868,-99) , 
3, 6.7571, 0, 0, 0.515964,-99) , 
1, 0.00442927, 0, 0, 0.533768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482493,-99) , 
3, 11.7837, 0, 0, 0.509925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426694,-99) , 
3, 15.1912, 0, 0, 0.461017,-99) , 
8, 13.2743, 1, 0, 0.481052,-99) , 
6, 0.52379, 1, 0, 0.497791,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.091426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430495,-99) , 
10, 2.01937, 1, 0, 0.523276,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.455162,-99) , 
10, -0.426602, 0, 0, 0.509182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377224,-99) , 
8, 20.7826, 0, 0, 0.4326,-99) , 
8, 17.9212, 1, 0, 0.50084,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0781101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.752627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474902,-99) , 
3, 4.27408, 0, 0, 0.566418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411376,-99) , 
6, 0.45578, 0, 0, 0.499669,-99) , 
6, 0.0476098, 1, 0, 0.513075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424759,-99) , 
12, 1.06955, 1, 0, 0.505315,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.078163);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.560324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491455,-99) , 
12, -1.51273, 1, 0, 0.504496,-99) , 
NN(
0, 
0, 
-1, 2.4827, 0, -1, 0.441612,-99) , 
0, 0.499042, 1, 0, 0.476396,-99) , 
6, -0.809486, 1, 0, 0.485066,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0601501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499046, 1, 1, 0.590892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46068,-99) , 
12, 0.252283, 1, 0, 0.491479,-99) , 
11, -3.11109, 1, 0, 0.503466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388839,-99) , 
10, -1.57146, 0, 0, 0.498726,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.127888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.54284, 0, 1, 0.581262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449965,-99) , 
6, 0.714237, 1, 0, 0.473941,-99) , 
11, -1.31571, 1, 0, 0.528929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39728,-99) , 
4, 0.794511, 0, 0, 0.518983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445751,-99) , 
12, -1.90692, 1, 0, 0.464059,-99) , 
6, 0.523802, 1, 0, 0.483036,-99) , 
10, 0.998495, 0, 0, 0.499536,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.118246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458455,-99) , 
4, 3.24926, 1, 0, 0.508331,-99) , 
10, 0.732728, 0, 0, 0.519162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406976,-99) , 
10, 1.78806, 0, 0, 0.447546,-99) , 
11, -0.983789, 0, 0, 0.470525,-99) , 
12, -0.254962, 1, 0, 0.498011,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0989946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00651354, 1, 1, 0.569451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431998,-99) , 
12, 0.153824, 1, 0, 0.52239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467896,-99) , 
11, -3.08556, 1, 0, 0.479642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337004,-99) , 
10, -1.57128, 0, 0, 0.473699,-99) , 
1, 0.0013636, 0, 0, 0.488708,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0782595);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85757, 0, 1, 0.539391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473264,-99) , 
11, -0.903471, 1, 0, 0.532276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415244,-99) , 
4, 2.35022, 0, 0, 0.451996,-99) , 
0, 0.491427, 0, 0, 0.525137,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.083148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.626754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436482,-99) , 
11, -1.9093, 0, 0, 0.49633,-99) , 
0, 0.49714, 1, 0, 0.540873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49055,-99) , 
10, -0.943919, 0, 0, 0.547744,-99) , 
NN(
0, 
0, 
-1, -1.47379, 0, -1, 0.480414,-99) , 
12, -1.67657, 1, 0, 0.487356,-99) , 
6, 0.142846, 1, 0, 0.500318,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0819429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471232,-99) , 
8, 13.197, 1, 0, 0.596871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494922,-99) , 
11, -1.33011, 0, 0, 0.513409,-99) , 
11, -2.81362, 1, 0, 0.522515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52417,-99) , 
NN(
0, 
0, 
-1, -1.73233, 1, -1, 0.395642,-99) , 
11, -3.06946, 0, 0, 0.432636,-99) , 
10, -0.42822, 0, 0, 0.505142,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0967182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409002,-99) , 
2, 0.199145, 1, 0, 0.528004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365034,-99) , 
10, -1.568, 0, 0, 0.52129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382871,-99) , 
0, 0.503803, 0, 0, 0.439986,-99) , 
12, -1.56136, 1, 0, 0.457564,-99) , 
0, 0.501898, 1, 0, 0.506911,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.054875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498093, 0, 1, 0.596818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495418,-99) , 
9, -951.286, 1, 0, 0.512523,-99) , 
1, 0.00349116, 0, 0, 0.520395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416083,-99) , 
6, -0.900225, 1, 0, 0.465193,-99) , 
6, -0.809517, 0, 0, 0.514159,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.10166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0592523, 1, 1, 0.649143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38818,-99) , 
6, 0.428629, 0, 0, 0.511144,-99) , 
6, 0.142872, 1, 0, 0.538195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446576,-99) , 
9, -951.286, 0, 0, 0.533288,-99) , 
NN(
0, 
0, 
-1, -2.85106, 0, -1, 0.464281,-99) , 
3, 12.1371, 0, 0, 0.49205,-99) , 
0, 0.497137, 1, 0, 0.509183,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0743212);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493287,-99) , 
12, -0.888749, 1, 0, 0.502219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414329,-99) , 
2, -0.0121806, 1, 0, 0.449666,-99) , 
11, -2.63763, 0, 0, 0.48575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407284,-99) , 
5, 0.999525, 0, 0, 0.47827,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.128101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.33212, 1, 1, 0.63603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414199,-99) , 
9, -951.286, 0, 0, 0.492214,-99) , 
11, -1.72026, 1, 0, 0.54054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561991,-99) , 
NN(
0, 
0, 
-1, 8.62531, 0, -1, 0.451228,-99) , 
6, -0.809494, 1, 0, 0.464175,-99) , 
10, 0.713833, 0, 0, 0.498636,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0801279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.3228, 1, 1, 0.607038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460123,-99) , 
2, 0.0587182, 1, 0, 0.571351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491922,-99) , 
10, 1.38612, 0, 0, 0.50582,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.442643,-99) , 
12, 0.458333, 1, 0, 0.489934,-99) , 
11, -3.01955, 1, 0, 0.503782,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.112407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.50326, 1, 1, 0.559952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449043,-99) , 
11, -2.36513, 1, 0, 0.490098,-99) , 
8, 15.3095, 1, 0, 0.544742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586418,-99) , 
NN(
0, 
0, 
-1, 0.80948, 1, -1, 0.456958,-99) , 
3, 16.2279, 0, 0, 0.470113,-99) , 
0, 0.496185, 0, 0, 0.519866,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0677111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.528852, 0, 1, 0.53402,-99) , 
NN(
0, 
0, 
-1, 0.500944, 1, -1, 0.476879,-99) , 
11, -1.81156, 1, 0, 0.513789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445067,-99) , 
0, 0.498093, 1, 0, 0.47189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400791,-99) , 
10, 0.157649, 0, 0, 0.450225,-99) , 
8, 16.5509, 1, 0, 0.503557,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.120674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468878,-99) , 
10, 0.0370834, 0, 0, 0.569814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46487,-99) , 
12, 1.02771, 1, 0, 0.517915,-99) , 
11, -2.2429, 1, 0, 0.534175,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442784,-99) , 
3, 11.1303, 0, 0, 0.550892,-99) , 
NN(
0, 
0, 
-1, -3.1131, 1, -1, 0.411493,-99) , 
4, 1.98436, 0, 0, 0.470771,-99) , 
11, -2.9418, 0, 0, 0.520393,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0896411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.756185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496705,-99) , 
6, 0.713814, 1, 0, 0.590804,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469722,-99) , 
11, -2.38327, 1, 0, 0.491835,-99) , 
NN(
0, 
0, 
-1, -3.32112, 0, -1, 0.434888,-99) , 
10, -0.308834, 0, 0, 0.483688,-99) , 
12, -1.78836, 1, 0, 0.49173,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0717138);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664305,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.528145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402012,-99) , 
10, -0.990923, 0, 0, 0.521471,-99) , 
11, -4.03863, 1, 0, 0.525735,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0561255);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494273,-99) , 
0, 0.496823, 1, 0, 0.507468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366392,-99) , 
13, 10.4423, 1, 0, 0.435182,-99) , 
0, 0.491426, 0, 0, 0.501126,-99) , 
12, -2.15157, 1, 0, 0.5073,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0773711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.61929, 0, 1, 0.675169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44519,-99) , 
4, 1.50673, 1, 0, 0.483563,-99) , 
9, -951.286, 0, 0, 0.564386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416572,-99) , 
0, 0.503805, 1, 0, 0.502938,-99) , 
NN(
0, 
0, 
-1, -2.87065, 0, -1, 0.394878,-99) , 
3, 8.07861, 0, 0, 0.493925,-99) , 
8, 5.87967, 1, 0, 0.504664,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0579194);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489295,-99) , 
3, 11.7054, 0, 0, 0.505488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380801,-99) , 
0, 0.497134, 1, 0, 0.424186,-99) , 
8, 16.6671, 1, 0, 0.497354,-99) , 
3, 18.3128, 0, 0, 0.50259,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0856862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.177211, 0, 1, 0.536238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439863,-99) , 
3, 14.8336, 0, 0, 0.48791,-99) , 
8, 14.0417, 1, 0, 0.521205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426345,-99) , 
5, 0.999525, 0, 0, 0.51198,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0946682);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.742502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469693,-99) , 
11, -1.31406, 1, 0, 0.538998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471805,-99) , 
11, -1.44025, 0, 0, 0.483618,-99) , 
10, 1.596, 0, 0, 0.494728,-99) , 
11, -3.81162, 1, 0, 0.500071,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.09503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.727615, 1, 1, 0.63432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478658,-99) , 
11, -2.61074, 0, 0, 0.502583,-99) , 
10, 0.161821, 0, 0, 0.541864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449967,-99) , 
0, 0.498091, 0, 0, 0.4805,-99) , 
11, -2.3751, 1, 0, 0.48657,-99) , 
12, -0.45597, 1, 0, 0.512376,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.103229);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459082,-99) , 
3, 3.54633, 0, 0, 0.533285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361408,-99) , 
4, 5.05679, 1, 0, 0.514893,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463093,-99) , 
11, -2.06085, 1, 0, 0.489771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392298,-99) , 
6, 0.963704, 1, 0, 0.474908,-99) , 
6, 0.619036, 1, 0, 0.489936,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.107036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.528402, 0, 1, 0.6345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408193,-99) , 
6, -0.174604, 1, 0, 0.528126,-99) , 
12, -0.425777, 1, 0, 0.571984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491232,-99) , 
6, 0.854854, 1, 0, 0.520758,-99) , 
NN(
0, 
0, 
-1, 10.8405, 1, -1, 0.416948,-99) , 
3, 10.5726, 0, 0, 0.503257,-99) , 
6, 0.238083, 1, 0, 0.520067,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0733456);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440836,-99) , 
12, -0.54421, 1, 0, 0.480212,-99) , 
10, 1.55535, 0, 0, 0.491849,-99) , 
11, -1.10778, 0, 0, 0.499335,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0719717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498332,-99) , 
11, -2.37716, 1, 0, 0.507141,-99) , 
11, -2.79673, 1, 0, 0.513578,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446216,-99) , 
12, -1.81592, 1, 0, 0.467206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35511,-99) , 
10, -1.35382, 0, 0, 0.452535,-99) , 
10, 0.14264, 0, 0, 0.491952,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.061827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496185, 0, 1, 0.60766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457879,-99) , 
3, 10.152, 0, 0, 0.494576,-99) , 
9, -951.286, 0, 0, 0.56618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495183,-99) , 
6, -0.619043, 1, 0, 0.505762,-99) , 
NN(
0, 
0, 
-1, -0.0155579, 0, -1, 0.417667,-99) , 
10, -1.00005, 0, 0, 0.498666,-99) , 
2, 0.0581243, 0, 0, 0.511664,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0790528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 15.2124, 0, 1, 0.531216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354102,-99) , 
12, -2.2109, 1, 0, 0.43717,-99) , 
10, -1.0001, 0, 0, 0.523754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393582,-99) , 
4, 7.41949, 1, 0, 0.515817,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0718512);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639987,-99) , 
NN(
NN(
0, 
0, 
-1, 20.5406, 0, 1, 0.51557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408102,-99) , 
2, 0.0388611, 0, 0, 0.442493,-99) , 
6, -0.428559, 0, 0, 0.501505,-99) , 
11, -3.65651, 1, 0, 0.508649,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0776643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523735, 1, 1, 0.610664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473762,-99) , 
3, 12.1138, 0, 0, 0.493855,-99) , 
7, 0.0045945, 0, 0, 0.506931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.254085,-99) , 
7, 0.013785, 1, 0, 0.499727,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0835259);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468648,-99) , 
6, 0.523792, 1, 0, 0.490187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40121,-99) , 
5, 0.999864, 0, 0, 0.479713,-99) , 
5, 0.999525, 1, 0, 0.489549,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0545512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.718578, 1, 1, 0.615882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497425,-99) , 
8, 19.4457, 0, 0, 0.505614,-99) , 
1, 0.00297438, 0, 0, 0.519661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358324,-99) , 
7, 0.012485, 1, 0, 0.515063,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.094744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00375229, 0, 1, 0.606463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482297,-99) , 
0, 0.49809, 0, 0, 0.515772,-99) , 
8, 12.6024, 0, 0, 0.536318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455553,-99) , 
12, 0.0770708, 1, 0, 0.503753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414551,-99) , 
11, -2.98101, 0, 0, 0.488592,-99) , 
6, 0.809514, 1, 0, 0.515189,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.108089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471354,-99) , 
0, 0.501899, 1, 0, 0.537372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361353,-99) , 
5, 0.999906, 0, 0, 0.521127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565622,-99) , 
NN(
0, 
0, 
-1, 12.4221, 0, -1, 0.45537,-99) , 
2, -0.0863447, 1, 0, 0.472988,-99) , 
6, 0.714237, 1, 0, 0.494174,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0795635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.41682, 0, 1, 0.576225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45872,-99) , 
0, 0.500947, 0, 0, 0.489865,-99) , 
10, 0.997005, 1, 0, 0.5452,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499025,-99) , 
11, -2.45848, 1, 0, 0.512306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418343,-99) , 
12, -1.38404, 1, 0, 0.473471,-99) , 
10, 0.143444, 0, 0, 0.499418,-99) , 
6, 0.619039, 1, 0, 0.515417,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.113258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.563763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445438,-99) , 
10, 1.89043, 0, 0, 0.495382,-99) , 
12, 0.25691, 1, 0, 0.529213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497317,-99) , 
10, 0.431487, 0, 0, 0.519815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335946,-99) , 
8, 10.8541, 1, 0, 0.421392,-99) , 
0, 0.494282, 0, 0, 0.4968,-99) , 
11, -2.24031, 0, 0, 0.514858,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.078115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.717585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474053,-99) , 
6, 0.800366, 0, 0, 0.550067,-99) , 
6, 0.618925, 1, 0, 0.598094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492506,-99) , 
4, 2.49162, 0, 0, 0.565289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476521,-99) , 
10, 1.34743, 0, 0, 0.490013,-99) , 
0, 0.502853, 0, 0, 0.500924,-99) , 
12, -1.68657, 1, 0, 0.510308,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0845119);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.696731,-99) , 
NN(
NN(
0, 
0, 
-1, -0.718428, 1, 1, 0.521281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438496,-99) , 
10, 0.212323, 0, 0, 0.468247,-99) , 
11, -2.65544, 0, 0, 0.5073,-99) , 
11, -3.73917, 1, 0, 0.515125,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.100761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.391376, 0, 1, 0.541791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37957,-99) , 
10, -1.48464, 0, 0, 0.527011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45583,-99) , 
10, 1.0376, 0, 0, 0.498237,-99) , 
NN(
0, 
0, 
-1, 2.53659, 0, -1, 0.391941,-99) , 
0, 0.5019, 1, 0, 0.472611,-99) , 
12, -0.614307, 1, 0, 0.495704,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0616552);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.2858, 1, 1, 0.643912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492629,-99) , 
6, 0.333314, 1, 0, 0.581298,-99) , 
NN(
0, 
0, 
-1, 0.491426, 0, -1, 0.485452,-99) , 
1, -0.00384117, 1, 0, 0.494313,-99) , 
12, -1.80604, 1, 0, 0.505817,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0822184);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445562,-99) , 
12, -0.911279, 0, 0, 0.585524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483585,-99) , 
0, 0.499995, 0, 0, 0.503409,-99) , 
3, 16.2502, 0, 0, 0.511846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39542,-99) , 
8, 13.5468, 1, 0, 0.471563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329329,-99) , 
8, 7.31909, 0, 0, 0.424072,-99) , 
10, -1.0001, 0, 0, 0.504434,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0858817);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.561748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459281,-99) , 
0, 0.493332, 0, 0, 0.517319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413232,-99) , 
6, 0.847398, 1, 0, 0.451041,-99) , 
8, 16.5509, 1, 0, 0.506687,-99) , 
2, 0.0602445, 0, 0, 0.516698,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.133529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.724012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44713,-99) , 
12, -1.355, 1, 0, 0.549224,-99) , 
10, 0.0904272, 0, 0, 0.575759,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459082,-99) , 
10, 1.38799, 1, 0, 0.508951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408729,-99) , 
6, 0.714091, 0, 0, 0.456501,-99) , 
11, -1.65469, 0, 0, 0.479942,-99) , 
11, -2.68334, 1, 0, 0.504992,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0721307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0456048, 1, 1, 0.521309,-99) , 
NN(
0, 
0, 
-1, 12.302, 0, -1, 0.418267,-99) , 
10, -0.997201, 0, 0, 0.512595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468003,-99) , 
0, 0.502852, 0, 0, 0.521889,-99) , 
NN(
0, 
0, 
-1, -0.015922, 0, -1, 0.432927,-99) , 
4, 3.2212, 0, 0, 0.460328,-99) , 
0, 0.500947, 1, 0, 0.498525,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0899551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.96224, 0, 1, 0.58839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395206,-99) , 
12, -0.869871, 0, 0, 0.520284,-99) , 
12, -1.0394, 1, 0, 0.537966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474983,-99) , 
9, -951.286, 0, 0, 0.522366,-99) , 
NN(
0, 
0, 
-1, 15.1209, 1, -1, 0.46319,-99) , 
4, 2.84714, 0, 0, 0.484117,-99) , 
0, 0.49809, 1, 0, 0.509752,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.114178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497136, 1, 1, 0.587327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424117,-99) , 
10, -0.287893, 0, 0, 0.474427,-99) , 
2, 0.00735113, 1, 0, 0.53587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.752588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492264,-99) , 
6, -0.50115, 0, 0, 0.533318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435778,-99) , 
1, -0.000521434, 1, 0, 0.466554,-99) , 
6, 0.0476375, 1, 0, 0.481983,-99) , 
12, -0.996947, 1, 0, 0.496287,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.111342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0164601, 1, 1, 0.657861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463995,-99) , 
8, 13.5486, 0, 0, 0.493275,-99) , 
11, -1.67138, 1, 0, 0.535617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45443,-99) , 
12, -0.214506, 1, 0, 0.51877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425385,-99) , 
6, 0.752908, 1, 0, 0.453083,-99) , 
8, 13.9848, 1, 0, 0.496572,-99) , 
10, 0.999692, 0, 0, 0.510929,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0652525);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.83047, 1, 1, 0.55587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468666,-99) , 
11, -1.84299, 0, 0, 0.483815,-99) , 
6, -0.904757, 1, 0, 0.491163,-99) , 
3, 15.2142, 0, 0, 0.500696,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0597508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.753551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487793,-99) , 
11, -2.82694, 1, 0, 0.589641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498647,-99) , 
11, -0.92489, 0, 0, 0.50681,-99) , 
11, -2.69417, 1, 0, 0.514401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592009,-99) , 
NN(
0, 
0, 
-1, 13.1068, 1, -1, 0.431064,-99) , 
3, 13.1786, 0, 0, 0.460459,-99) , 
11, -2.92641, 0, 0, 0.502699,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0815922);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333285, 1, 1, 0.597791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47506,-99) , 
10, 0.715662, 0, 0, 0.503189,-99) , 
7, 0.00459502, 0, 0, 0.513916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342036,-99) , 
7, 0.013785, 1, 0, 0.509299,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0784668);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.961271, 0, 1, 0.533913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477237,-99) , 
0, 0.499996, 0, 0, 0.517315,-99) , 
NN(
0, 
0, 
-1, 1.69021, 0, -1, 0.449401,-99) , 
3, 10.9749, 1, 0, 0.479895,-99) , 
12, 0.0345721, 1, 0, 0.5144,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.082323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397158,-99) , 
10, -0.778637, 0, 0, 0.511867,-99) , 
12, -1.97832, 1, 0, 0.518681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426068,-99) , 
4, 2.4827, 0, 0, 0.530845,-99) , 
NN(
0, 
0, 
-1, 0.494143, 1, -1, 0.39789,-99) , 
0, 0.499041, 0, 0, 0.455551,-99) , 
2, -0.080455, 0, 0, 0.507835,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0712056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393708,-99) , 
12, -2.27751, 1, 0, 0.473905,-99) , 
10, -1.04743, 0, 0, 0.565609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469908,-99) , 
7, 0.00178406, 0, 0, 0.489755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381489,-99) , 
7, 0.0124858, 1, 0, 0.486602,-99) , 
12, -1.63316, 1, 0, 0.494978,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0748307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.5707, 0, 1, 0.537291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442148,-99) , 
8, 15.6117, 1, 0, 0.483792,-99) , 
6, 0.714265, 1, 0, 0.507063,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395111,-99) , 
4, 2.70002, 0, 0, 0.464686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330612,-99) , 
11, -2.92478, 0, 0, 0.431441,-99) , 
2, -0.0843733, 0, 0, 0.493786,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.101192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493875,-99) , 
10, 0.430481, 1, 0, 0.534606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444398,-99) , 
11, -1.96667, 0, 0, 0.478521,-99) , 
3, 12.1053, 0, 0, 0.499541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397921,-99) , 
5, 0.999525, 0, 0, 0.48996,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.114214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.01265, 1, 1, 0.598324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402491,-99) , 
12, 0.209743, 0, 0, 0.486106,-99) , 
12, -0.093312, 1, 0, 0.541777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495563,-99) , 
6, 0.83702, 1, 0, 0.532835,-99) , 
NN(
0, 
0, 
-1, 0.00689976, 1, -1, 0.442072,-99) , 
3, 14.0786, 0, 0, 0.466396,-99) , 
6, 0.142872, 1, 0, 0.482952,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0837378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458247,-99) , 
3, 8.12061, 0, 0, 0.580979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489558,-99) , 
6, 0.904758, 0, 0, 0.499855,-99) , 
12, -1.14759, 1, 0, 0.517559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548052,-99) , 
NN(
0, 
0, 
-1, 0.491605, 1, -1, 0.434396,-99) , 
3, 15.2034, 0, 0, 0.449308,-99) , 
0, 0.495233, 0, 0, 0.499217,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0413033);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409052,-99) , 
2, 0.201174, 1, 0, 0.495671,-99) , 
8, 3.56939, 1, 0, 0.503832,-99) , 
8, 19.4153, 0, 0, 0.510068,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0715194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 18.9992, 0, 1, 0.574251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476984,-99) , 
9, -951.286, 1, 0, 0.495342,-99) , 
3, 16.2502, 0, 0, 0.50304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399462,-99) , 
12, 1.06955, 1, 0, 0.494799,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0884491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.87065, 1, 1, 0.574024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416235,-99) , 
2, -0.0955296, 0, 0, 0.549514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48385,-99) , 
6, 0.756544, 1, 0, 0.49621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358433,-99) , 
6, 0.488785, 0, 0, 0.486569,-99) , 
8, 10.9499, 1, 0, 0.505935,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0663825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494798,-99) , 
6, 0.65535, 1, 0, 0.509978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38366,-99) , 
4, 1.34024, 1, 0, 0.4502,-99) , 
6, -0.809417, 0, 0, 0.502423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396067,-99) , 
4, 7.41939, 1, 0, 0.495021,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.12203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0149555, 1, 1, 0.632569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422152,-99) , 
12, -0.526363, 1, 0, 0.523901,-99) , 
10, 0.865714, 0, 0, 0.543648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433925,-99) , 
0, 0.497139, 1, 0, 0.463009,-99) , 
1, 0.0023883, 0, 0, 0.481182,-99) , 
11, -1.7188, 1, 0, 0.52055,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.102516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490455,-99) , 
6, -0.237921, 1, 0, 0.513282,-99) , 
3, 13.1377, 0, 0, 0.545926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424136,-99) , 
4, 3.21137, 1, 0, 0.535962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442292,-99) , 
1, -0.000887917, 1, 0, 0.469017,-99) , 
2, -0.0109361, 1, 0, 0.487146,-99) , 
2, -0.0848457, 1, 0, 0.495961,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0771001);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451994,-99) , 
0, 0.495233, 0, 0, 0.505113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461444,-99) , 
8, 4.7005, 1, 0, 0.475525,-99) , 
11, -2.18102, 0, 0, 0.490856,-99) , 
4, 6.66832, 0, 0, 0.496327,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0648791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489647,-99) , 
6, 0.954645, 1, 0, 0.544518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442938,-99) , 
3, 5.85564, 0, 0, 0.555959,-99) , 
NN(
0, 
0, 
-1, 0.49383, 0, -1, 0.484265,-99) , 
0, 0.492379, 1, 0, 0.49249,-99) , 
6, 0.904747, 0, 0, 0.505979,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0831505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.71788, 0, 1, 0.541795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458871,-99) , 
12, -0.687439, 1, 0, 0.494868,-99) , 
0, 0.499994, 1, 0, 0.525136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464192,-99) , 
12, 0.729506, 1, 0, 0.51612,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.12575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485127,-99) , 
11, -1.79426, 1, 0, 0.524996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444859,-99) , 
12, -1.3141, 1, 0, 0.465624,-99) , 
10, 0.552541, 0, 0, 0.502575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453784,-99) , 
12, -2.24422, 1, 0, 0.478488,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.311631,-99) , 
8, 9.69518, 0, 0, 0.414415,-99) , 
10, -0.426247, 0, 0, 0.484242,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0877891);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.487053, 1, 1, 0.525121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413514,-99) , 
9, -951.286, 0, 0, 0.488615,-99) , 
NN(
0, 
0, 
-1, 7.67, 0, -1, 0.348662,-99) , 
6, -0.192775, 1, 0, 0.454295,-99) , 
3, 9.02727, 0, 0, 0.506739,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0476468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0349628, 0, 1, 0.541679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490304,-99) , 
0, 0.493056, 1, 0, 0.498987,-99) , 
0, 0.5019, 0, 0, 0.507846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446974,-99) , 
5, 0.999525, 0, 0, 0.501657,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0830673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48648,-99) , 
0, 0.492378, 1, 0, 0.508124,-99) , 
0, 0.5019, 0, 0, 0.531485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470095,-99) , 
11, -2.84792, 1, 0, 0.48427,-99) , 
NN(
0, 
0, 
-1, -2.86979, 0, -1, 0.404889,-99) , 
0, 0.503804, 1, 0, 0.474845,-99) , 
4, 3.77414, 0, 0, 0.487716,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0827894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485766,-99) , 
6, 0.834279, 1, 0, 0.522489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314115,-99) , 
8, 5.73996, 1, 0, 0.458911,-99) , 
3, 6.97555, 0, 0, 0.508778,-99) , 
NN(
0, 
0, 
-1, 0.618969, 1, -1, 0.417492,-99) , 
10, -0.996743, 0, 0, 0.50164,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0845316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.629367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488492,-99) , 
0, 0.493735, 0, 0, 0.524249,-99) , 
12, -0.91145, 1, 0, 0.555565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471522,-99) , 
3, 10.0675, 0, 0, 0.509128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391867,-99) , 
0, 0.505981, 1, 0, 0.50265,-99) , 
0, 0.496185, 1, 0, 0.519609,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0702659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454641,-99) , 
3, 11.9297, 0, 0, 0.497605,-99) , 
10, 1.58943, 1, 0, 0.544554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406703,-99) , 
12, -0.0380632, 1, 0, 0.491827,-99) , 
10, 1.46558, 0, 0, 0.501005,-99) , 
11, -1.44568, 0, 0, 0.512125,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0740602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470792,-99) , 
12, -0.187166, 1, 0, 0.535583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456195,-99) , 
4, 1.90347, 0, 0, 0.481758,-99) , 
6, 0.904747, 0, 0, 0.49556,-99) , 
1, -0.00526335, 1, 0, 0.500671,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0923913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457361,-99) , 
0, 0.497138, 1, 0, 0.518103,-99) , 
10, -0.130034, 0, 0, 0.544978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484086,-99) , 
6, -0.853964, 1, 0, 0.537697,-99) , 
NN(
0, 
0, 
-1, 5.36163, 0, -1, 0.469632,-99) , 
8, 4.53403, 1, 0, 0.479282,-99) , 
12, -1.04491, 1, 0, 0.495335,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0938493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.69129, 0, 1, 0.534432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478459,-99) , 
12, 0.997055, 1, 0, 0.524821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430516,-99) , 
10, -0.60045, 0, 0, 0.4915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366662,-99) , 
0, 0.501896, 0, 0, 0.409865,-99) , 
12, -0.763156, 1, 0, 0.470936,-99) , 
11, -2.29059, 0, 0, 0.501079,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0594523);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.685943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466809,-99) , 
3, 12.1334, 0, 0, 0.544939,-99) , 
NN(
0, 
0, 
-1, -0.573923, 0, -1, 0.482988,-99) , 
12, -1.80604, 1, 0, 0.488289,-99) , 
3, 18.2964, 0, 0, 0.496416,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0864403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501492, 1, 1, 0.55589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493899,-99) , 
11, -2.43595, 1, 0, 0.50684,-99) , 
0, 0.499043, 0, 0, 0.527563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475096,-99) , 
0, 0.498092, 0, 0, 0.533582,-99) , 
NN(
0, 
0, 
-1, 11.3804, 0, -1, 0.437315,-99) , 
6, 0.428469, 1, 0, 0.467691,-99) , 
10, 0.141723, 0, 0, 0.507102,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0790693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483989,-99) , 
0, 0.499993, 1, 0, 0.591103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427934,-99) , 
5, 0.999525, 0, 0, 0.515332,-99) , 
NN(
0, 
0, 
-1, -3.28754, 0, -1, 0.427959,-99) , 
10, -0.414248, 0, 0, 0.505519,-99) , 
12, -1.76562, 1, 0, 0.512661,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0983578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460462,-99) , 
0, 0.493324, 0, 0, 0.527284,-99) , 
6, 0.687186, 1, 0, 0.53548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48136,-99) , 
10, 1.20331, 1, 0, 0.527895,-99) , 
NN(
0, 
0, 
-1, 10.9437, 1, -1, 0.441859,-99) , 
11, -2.25567, 0, 0, 0.482553,-99) , 
3, 11.0741, 0, 0, 0.512732,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.077533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.113824, 0, 1, 0.576431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448489,-99) , 
2, -0.215816, 0, 0, 0.533753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467505,-99) , 
0, 0.49714, 0, 0, 0.531196,-99) , 
NN(
0, 
0, 
-1, -0.3032, 0, -1, 0.469476,-99) , 
12, -1.6097, 1, 0, 0.476337,-99) , 
2, -0.081954, 1, 0, 0.484871,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0580265);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59828,-99) , 
NN(
NN(
0, 
0, 
-1, 7.05023, 0, 1, 0.536336,-99) , 
NN(
0, 
0, 
-1, 0.469413, 0, -1, 0.478779,-99) , 
6, 0.142845, 1, 0, 0.492582,-99) , 
8, 19.4163, 0, 0, 0.498533,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0874649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.737123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447576,-99) , 
12, -1.68875, 1, 0, 0.525084,-99) , 
10, -0.468594, 0, 0, 0.573739,-99) , 
NN(
NN(
0, 
0, 
-1, -1.34998, 1, 1, 0.563713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425062,-99) , 
12, 0.0672545, 1, 0, 0.483138,-99) , 
10, 1.63327, 0, 0, 0.501456,-99) , 
12, -1.24706, 1, 0, 0.514651,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0877579);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.35554, 0, 1, 0.578232,-99) , 
NN(
NN(
0, 
0, 
-1, 0.823741, 1, 1, 0.560244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468602,-99) , 
9, -951.286, 1, 0, 0.49112,-99) , 
3, 14.8453, 0, 0, 0.504034,-99) , 
8, 4.53403, 1, 0, 0.513921,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0877794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.562351, 0, 1, 0.665742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49264,-99) , 
0, 0.494283, 1, 0, 0.50796,-99) , 
12, -0.50361, 1, 0, 0.524047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471909,-99) , 
1, 0.000143512, 1, 0, 0.524798,-99) , 
NN(
0, 
0, 
-1, 0.785877, 0, -1, 0.445333,-99) , 
8, 11.0983, 1, 0, 0.472588,-99) , 
10, 0.430185, 0, 0, 0.500728,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.076552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000175744, 0, 1, 0.640231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472175,-99) , 
11, -3.79963, 0, 0, 0.572146,-99) , 
NN(
NN(
0, 
0, 
-1, -2.31197, 1, 1, 0.516944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438234,-99) , 
12, -1.09656, 1, 0, 0.46312,-99) , 
10, 0.639505, 0, 0, 0.492528,-99) , 
12, -1.63316, 1, 0, 0.500924,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.109756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426989,-99) , 
0, 0.491243, 0, 0, 0.573282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467337,-99) , 
10, 0.147276, 0, 0, 0.511363,-99) , 
6, 0.523822, 1, 0, 0.528227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605989,-99) , 
NN(
0, 
0, 
-1, 0.504234, 1, -1, 0.433518,-99) , 
0, 0.50648, 0, 0, 0.460402,-99) , 
0, 0.502852, 1, 0, 0.516737,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.105408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.83791, 1, 1, 0.598257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426694,-99) , 
0, 0.499036, 1, 0, 0.471928,-99) , 
10, -1.17397, 0, 0, 0.570262,-99) , 
NN(
NN(
0, 
0, 
-1, -1.50723, 1, 1, 0.553401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439915,-99) , 
3, 12.0883, 1, 0, 0.48775,-99) , 
10, 1.53614, 0, 0, 0.506793,-99) , 
12, -1.07956, 1, 0, 0.522352,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0742415);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485863,-99) , 
8, 3.52826, 1, 0, 0.544425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470208,-99) , 
1, 0.00524337, 0, 0, 0.474711,-99) , 
3, 3.8529, 1, 0, 0.48322,-99) , 
11, -4.06565, 1, 0, 0.487083,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0892554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.37278, 0, 1, 0.61362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359328,-99) , 
6, 0.21223, 0, 0, 0.517979,-99) , 
6, -0.034008, 1, 0, 0.52763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281843,-99) , 
12, -0.765387, 0, 0, 0.42494,-99) , 
6, -0.809504, 0, 0, 0.515594,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0837672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417563,-99) , 
12, 0.079574, 1, 0, 0.508725,-99) , 
10, 1.55535, 0, 0, 0.524917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467571,-99) , 
11, -1.10338, 1, 0, 0.515866,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0537172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479289,-99) , 
9, -951.286, 0, 0, 0.503013,-99) , 
8, 19.388, 0, 0, 0.508903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413744,-99) , 
2, -0.227293, 0, 0, 0.503415,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0864849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376449,-99) , 
8, 5.87581, 1, 0, 0.496999,-99) , 
3, 7.17591, 0, 0, 0.530221,-99) , 
NN(
0, 
0, 
-1, 0.00644694, 1, -1, 0.466931,-99) , 
8, 9.85841, 1, 0, 0.482076,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0702668);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599551,-99) , 
NN(
NN(
0, 
0, 
-1, 0.732616, 1, 1, 0.520631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455188,-99) , 
11, -3.15009, 1, 0, 0.476512,-99) , 
11, -2.09154, 0, 0, 0.498066,-99) , 
2, -0.223915, 1, 0, 0.502905,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0665391);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477561,-99) , 
2, -0.221154, 1, 0, 0.482754,-99) , 
10, 1.82564, 0, 0, 0.489242,-99) , 
11, -1.02392, 0, 0, 0.498634,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0765625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.723658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499622,-99) , 
8, 14.7504, 0, 0, 0.518712,-99) , 
12, -0.540593, 1, 0, 0.53497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443301,-99) , 
11, -2.76785, 0, 0, 0.472557,-99) , 
0, 0.491423, 1, 0, 0.482875,-99) , 
10, 0.433713, 0, 0, 0.511618,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0867409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.634182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480952,-99) , 
8, 11.3357, 1, 0, 0.500026,-99) , 
10, 1.28114, 0, 0, 0.512408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449853,-99) , 
6, 0.61897, 1, 0, 0.49666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41809,-99) , 
9, -951.286, 0, 0, 0.46588,-99) , 
12, 0.367692, 1, 0, 0.501591,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0942631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481301,-99) , 
12, -1.02675, 1, 0, 0.532167,-99) , 
10, 0.535478, 0, 0, 0.545226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467705,-99) , 
9, -951.286, 0, 0, 0.540799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414769,-99) , 
8, 11.285, 0, 0, 0.490351,-99) , 
6, -0.238092, 1, 0, 0.500407,-99) , 
12, -0.474857, 1, 0, 0.521002,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0800535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.913138, 1, 1, 0.574274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487624,-99) , 
8, 16.0372, 1, 0, 0.547411,-99) , 
NN(
NN(
0, 
0, 
-1, -2.16215, 1, 1, 0.553074,-99) , 
NN(
0, 
0, 
-1, 0.0867086, 1, -1, 0.474941,-99) , 
8, 13.973, 0, 0, 0.484799,-99) , 
6, 0.809502, 0, 0, 0.511619,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0773608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.578188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449053,-99) , 
12, 0.0600178, 1, 0, 0.496231,-99) , 
3, 3.86523, 1, 0, 0.505769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398863,-99) , 
10, -1.57192, 0, 0, 0.501735,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.105093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.951127, 0, 1, 0.624363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457693,-99) , 
8, 8.58265, 0, 0, 0.502728,-99) , 
0, 0.500946, 0, 0, 0.537784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469482,-99) , 
12, 0.0148242, 1, 0, 0.516317,-99) , 
NN(
0, 
0, 
-1, 13.9701, 1, -1, 0.455555,-99) , 
3, 12.731, 0, 0, 0.48674,-99) , 
8, 11.2826, 1, 0, 0.504148,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0696678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458287,-99) , 
6, -0.237731, 1, 0, 0.562464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48442,-99) , 
6, 0.505993, 1, 0, 0.49537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397724,-99) , 
4, 1.69366, 1, 0, 0.448143,-99) , 
8, 8.58544, 0, 0, 0.485297,-99) , 
1, -0.00526335, 1, 0, 0.489392,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0694807);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400213,-99) , 
2, 0.213426, 1, 0, 0.516002,-99) , 
10, 1.4136, 0, 0, 0.52711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437521,-99) , 
6, 0.238151, 0, 0, 0.476959,-99) , 
12, 0.520897, 1, 0, 0.51724,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0843343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499466,-99) , 
0, 0.496187, 1, 0, 0.521534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371323,-99) , 
11, -0.927516, 1, 0, 0.44507,-99) , 
12, 0.456609, 1, 0, 0.507182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328487,-99) , 
12, -0.107705, 0, 0, 0.40054,-99) , 
6, -0.89114, 1, 0, 0.443368,-99) , 
6, -0.428562, 0, 0, 0.494533,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0761274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.355719, 0, 1, 0.604243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460236,-99) , 
6, 0.714268, 0, 0, 0.485187,-99) , 
11, -2.82361, 1, 0, 0.505669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366805,-99) , 
10, -1.56763, 0, 0, 0.499915,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0735936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495235, 0, 1, 0.588373,-99) , 
NN(
0, 
0, 
-1, 0.123445, 1, -1, 0.487759,-99) , 
8, 13.6248, 1, 0, 0.552385,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472874,-99) , 
10, 1.7895, 1, 0, 0.527902,-99) , 
NN(
0, 
0, 
-1, 10.0658, 0, -1, 0.479161,-99) , 
11, -1.51856, 0, 0, 0.493342,-99) , 
2, 0.0562529, 0, 0, 0.504964,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0851274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.37469, 1, 1, 0.535862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466435,-99) , 
9, -951.286, 1, 0, 0.483244,-99) , 
6, 0.714275, 1, 0, 0.505162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530896,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368725,-99) , 
0, 0.500946, 0, 0, 0.401783,-99) , 
10, 0.9985, 0, 0, 0.445017,-99) , 
2, 0.0547267, 1, 0, 0.492182,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0956413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.720389, 1, 1, 0.559977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473404,-99) , 
9, -951.286, 0, 0, 0.507882,-99) , 
8, 11.6685, 0, 0, 0.528302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47583,-99) , 
10, -0.029071, 0, 0, 0.528324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417511,-99) , 
4, 2.79589, 0, 0, 0.45458,-99) , 
12, -0.664616, 1, 0, 0.48299,-99) , 
8, 13.9841, 1, 0, 0.512403,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0819448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491015, 0, 1, 0.630503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488958,-99) , 
8, 13.9441, 1, 0, 0.586626,-99) , 
NN(
NN(
0, 
0, 
-1, -3.07773, 0, 1, 0.556209,-99) , 
NN(
0, 
0, 
-1, 10.0583, 0, -1, 0.46954,-99) , 
12, -1.32379, 1, 0, 0.484186,-99) , 
0, 0.492376, 1, 0, 0.494785,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0732639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483501,-99) , 
3, 13.8344, 0, 0, 0.49715,-99) , 
6, 0.419248, 1, 0, 0.503801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530876,-99) , 
NN(
0, 
0, 
-1, 9.08799, 1, -1, 0.418486,-99) , 
12, 0.350721, 0, 0, 0.448107,-99) , 
3, 9.01769, 0, 0, 0.488754,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0877143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.93336, 0, 1, 0.60678,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468239,-99) , 
3, 15.2764, 1, 0, 0.512827,-99) , 
6, 0.585837, 1, 0, 0.527553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473219,-99) , 
0, 0.496189, 1, 0, 0.513856,-99) , 
NN(
0, 
0, 
-1, 4.0193, 1, -1, 0.428822,-99) , 
4, 1.70242, 1, 0, 0.47128,-99) , 
3, 6.93336, 0, 0, 0.516007,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.110551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.682678, 1, 1, 0.556976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458543,-99) , 
8, 10.9401, 1, 0, 0.493826,-99) , 
0, 0.500539, 1, 0, 0.53022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499404,-99) , 
11, -1.7883, 1, 0, 0.542298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396154,-99) , 
9, -951.286, 1, 0, 0.437395,-99) , 
10, 0.713404, 0, 0, 0.481189,-99) , 
0, 0.495234, 0, 0, 0.516585,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.067654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.22273, 1, 1, 0.524009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373892,-99) , 
10, 0.231239, 0, 0, 0.472148,-99) , 
5, 0.999909, 0, 0, 0.51537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455621,-99) , 
5, 0.999524, 0, 0, 0.509064,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.104701);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484542,-99) , 
3, 14.0721, 1, 0, 0.584375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432294,-99) , 
2, 0.0555192, 1, 0, 0.510901,-99) , 
11, -2.61287, 0, 0, 0.539108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475781,-99) , 
10, 1.42651, 0, 0, 0.507596,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.462234,-99) , 
11, -1.67856, 1, 0, 0.479651,-99) , 
12, -0.45597, 1, 0, 0.506838,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.077671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.987396, 0, 1, 0.601308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475928,-99) , 
12, -0.807329, 1, 0, 0.493755,-99) , 
6, 0.16059, 1, 0, 0.50285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442161,-99) , 
4, 1.25394, 0, 0, 0.489336,-99) , 
NN(
0, 
0, 
-1, -0.0472411, 0, -1, 0.390069,-99) , 
2, -0.00673149, 0, 0, 0.441261,-99) , 
3, 4.90425, 0, 0, 0.492455,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0587836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497589,-99) , 
12, -0.105614, 1, 0, 0.569161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498384,-99) , 
10, 1.47583, 0, 0, 0.512652,-99) , 
0, 0.502852, 0, 0, 0.521139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350313,-99) , 
2, 0.00387163, 1, 0, 0.430158,-99) , 
10, -1.0001, 0, 0, 0.514268,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.123224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.22534, 1, 1, 0.556082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454199,-99) , 
12, -0.879308, 1, 0, 0.485285,-99) , 
4, 2.97911, 1, 0, 0.531019,-99) , 
NN(
NN(
0, 
0, 
-1, 8.05606, 0, 1, 0.612564,-99) , 
NN(
0, 
0, 
-1, -1.58411, 0, -1, 0.448958,-99) , 
9, 0.714709, 0, 0, 0.487602,-99) , 
9, -951.286, 1, 0, 0.502539,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0649647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.0282, 0, 1, 0.622514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491058,-99) , 
0, 0.492379, 1, 0, 0.499737,-99) , 
12, -1.39376, 1, 0, 0.508289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435039,-99) , 
12, -2.36395, 1, 0, 0.46262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31963,-99) , 
8, 7.16548, 0, 0, 0.417286,-99) , 
10, -0.715414, 0, 0, 0.496581,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.103016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.19546, 1, 1, 0.547178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434564,-99) , 
12, -1.68958, 1, 0, 0.488234,-99) , 
10, -0.142918, 0, 0, 0.533638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477418,-99) , 
0, 0.496188, 1, 0, 0.505472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361861,-99) , 
3, 5.78476, 1, 0, 0.483057,-99) , 
3, 7.00927, 0, 0, 0.523003,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0924374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714281, 0, 1, 0.60515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455015,-99) , 
7, 0.000870429, 0, 0, 0.505425,-99) , 
7, 0.0045696, 0, 0, 0.517464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356521,-99) , 
7, 0.011997, 1, 0, 0.512319,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0482304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.900199, 1, 1, 0.610851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499774,-99) , 
10, 2.2379, 0, 0, 0.508597,-99) , 
6, -0.809486, 1, 0, 0.518303,-99) , 
NN(
0, 
0, 
-1, 0.498084, 0, -1, 0.419694,-99) , 
10, -0.997319, 0, 0, 0.509627,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0576819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.318082, 1, 1, 0.549191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493029,-99) , 
11, -1.10778, 0, 0, 0.50304,-99) , 
0, 0.501809, 0, 0, 0.514231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556963,-99) , 
NN(
0, 
0, 
-1, 0.428947, 0, -1, 0.426473,-99) , 
2, -0.0734451, 1, 0, 0.456991,-99) , 
0, 0.492376, 0, 0, 0.507325,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0738008);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142846, 1, 1, 0.530805,-99) , 
NN(
0, 
0, 
-1, 0.618877, 1, -1, 0.420375,-99) , 
10, -0.715079, 0, 0, 0.517167,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0609007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0191499, 1, 1, 0.519234,-99) , 
NN(
0, 
0, 
-1, 5.14537, 0, -1, 0.459958,-99) , 
11, -3.07608, 0, 0, 0.509334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558458,-99) , 
NN(
0, 
0, 
-1, 0.491696, 0, -1, 0.454813,-99) , 
12, -1.67647, 1, 0, 0.463767,-99) , 
0, 0.496185, 0, 0, 0.494475,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0949987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000896041, 1, 1, 0.585906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438009,-99) , 
6, 0.95556, 1, 0, 0.505248,-99) , 
6, 0.533524, 1, 0, 0.518675,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396505,-99) , 
11, -2.73643, 0, 0, 0.518758,-99) , 
NN(
0, 
0, 
-1, 1.58182, 0, -1, 0.403614,-99) , 
9, -951.286, 0, 0, 0.451712,-99) , 
3, 4.87786, 0, 0, 0.506593,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0615118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50364, 1, 1, 0.615719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475454,-99) , 
6, -0.891138, 0, 0, 0.553253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48921,-99) , 
6, 0.29254, 1, 0, 0.49532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327519,-99) , 
3, 7.80041, 0, 0, 0.489978,-99) , 
6, -0.238091, 1, 0, 0.501393,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0873407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476277,-99) , 
0, 0.50326, 1, 0, 0.514048,-99) , 
12, -1.71256, 1, 0, 0.523243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466432,-99) , 
6, 0.904752, 0, 0, 0.483291,-99) , 
NN(
0, 
0, 
-1, -0.0467861, 0, -1, 0.388209,-99) , 
0, 0.498816, 1, 0, 0.467937,-99) , 
0, 0.499995, 0, 0, 0.487238,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0636565);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458762,-99) , 
7, 0.00401141, 1, 0, 0.564756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48581,-99) , 
3, 18.6373, 0, 0, 0.490738,-99) , 
6, -0.714275, 1, 0, 0.499665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348428,-99) , 
7, 0.0120365, 1, 0, 0.494482,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.075161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493323,-99) , 
8, 18.796, 1, 0, 0.546249,-99) , 
3, 18.9941, 0, 0, 0.577925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47748,-99) , 
2, 0.0228905, 0, 0, 0.497495,-99) , 
2, -0.217324, 1, 0, 0.502212,-99) , 
3, 16.2419, 0, 0, 0.510087,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.057162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.345936, 1, 1, 0.572733,-99) , 
NN(
NN(
0, 
0, 
-1, 6.10625, 0, 1, 0.546336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416816,-99) , 
3, 9.76397, 0, 0, 0.496069,-99) , 
6, 0.142829, 1, 0, 0.508921,-99) , 
3, 15.2164, 0, 0, 0.517444,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0759063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.711029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481073,-99) , 
9, -951.286, 0, 0, 0.533722,-99) , 
8, 5.17608, 0, 0, 0.562068,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448128,-99) , 
0, 0.490155, 0, 0, 0.554815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486367,-99) , 
11, -0.98493, 0, 0, 0.494472,-99) , 
0, 0.494282, 1, 0, 0.505599,-99) , 
6, -0.333323, 1, 0, 0.515461,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.119274);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.174678, 0, 1, 0.572424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469665,-99) , 
9, -0.417712, 0, 0, 0.529603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440078,-99) , 
0, 0.500944, 0, 0, 0.467668,-99) , 
9, -951.286, 0, 0, 0.509397,-99) , 
6, 0.238081, 1, 0, 0.523783,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.118253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.11005, 1, 1, 0.558267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424772,-99) , 
4, 1.39494, 1, 0, 0.472755,-99) , 
3, 7.50773, 0, 0, 0.524784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451604,-99) , 
10, 0.0963547, 0, 0, 0.506906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428832,-99) , 
11, -1.43917, 1, 0, 0.486333,-99) , 
6, 0.809491, 1, 0, 0.507901,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0787488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.94497, 0, 1, 0.5544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493639,-99) , 
6, 0.945563, 0, 0, 0.516719,-99) , 
6, 0.714273, 1, 0, 0.531267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583713,-99) , 
NN(
0, 
0, 
-1, -0.713884, 0, -1, 0.460919,-99) , 
2, -0.0990252, 1, 0, 0.477703,-99) , 
0, 0.500947, 1, 0, 0.515994,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0869815);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.219989, 1, 1, 0.529716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407737,-99) , 
10, -0.872135, 0, 0, 0.544113,-99) , 
NN(
0, 
0, 
-1, 12.598, 1, -1, 0.4271,-99) , 
3, 12.2393, 0, 0, 0.462379,-99) , 
11, -2.92641, 0, 0, 0.515258,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.050504);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.21114, 0, 1, 0.574967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490328,-99) , 
11, -2.822, 1, 0, 0.499079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385619,-99) , 
11, -3.32449, 0, 0, 0.493263,-99) , 
12, -1.83206, 1, 0, 0.499476,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0697847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499439,-99) , 
0, 0.498082, 0, 0, 0.579767,-99) , 
NN(
NN(
0, 
0, 
-1, -2.58975, 1, 1, 0.541529,-99) , 
NN(
0, 
0, 
-1, 0.011997, 1, -1, 0.472008,-99) , 
2, 0.0562948, 0, 0, 0.484784,-99) , 
12, -1.72411, 1, 0, 0.49308,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0797198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.707394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463308,-99) , 
8, 20.768, 0, 0, 0.519787,-99) , 
8, 18.7148, 1, 0, 0.580252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490557,-99) , 
6, 0.428536, 1, 0, 0.512537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43807,-99) , 
12, 0.613783, 1, 0, 0.500028,-99) , 
3, 16.1731, 0, 0, 0.508651,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0897539);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523868, 1, 1, 0.601602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472701,-99) , 
4, 3.75356, 1, 0, 0.518925,-99) , 
11, -3.75713, 1, 0, 0.523305,-99) , 
2, -0.0776348, 1, 0, 0.535901,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0698111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.14033, 1, 1, 0.526319,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.458072,-99) , 
2, 0.0558236, 1, 0, 0.51188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266784,-99) , 
10, -1.85341, 0, 0, 0.505587,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.102334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482762,-99) , 
8, 4.17343, 0, 0, 0.55534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382666,-99) , 
5, 0.999906, 0, 0, 0.539288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453901,-99) , 
10, 0.0843543, 0, 0, 0.488183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442685,-99) , 
11, -1.57861, 1, 0, 0.474224,-99) , 
6, 0.714263, 1, 0, 0.500621,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0542426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.6364, 0, 1, 0.625638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480772,-99) , 
10, -1.49675, 0, 0, 0.588224,-99) , 
NN(
NN(
0, 
0, 
-1, -1.19611, 1, 1, 0.50889,-99) , 
NN(
0, 
0, 
-1, 0.499046, 1, -1, 0.390489,-99) , 
11, -3.03219, 0, 0, 0.501538,-99) , 
12, -1.41905, 1, 0, 0.514024,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0882454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499041, 1, 1, 0.614507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483404,-99) , 
3, 18.1834, 0, 0, 0.491979,-99) , 
8, 10.3494, 1, 0, 0.501524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419657,-99) , 
4, 0.942603, 0, 0, 0.487217,-99) , 
NN(
0, 
0, 
-1, 0.500945, 0, -1, 0.365756,-99) , 
4, 2.26508, 1, 0, 0.437554,-99) , 
3, 7.03378, 0, 0, 0.48788,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0886126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.244268, 1, 1, 0.622616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451272,-99) , 
2, -0.0848457, 0, 0, 0.507438,-99) , 
6, 0.657327, 1, 0, 0.519408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428203,-99) , 
4, 2.57427, 0, 0, 0.458647,-99) , 
1, -0.00532441, 1, 0, 0.476949,-99) , 
3, 10.0651, 0, 0, 0.506653,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0417187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499601,-99) , 
11, -3.02913, 1, 0, 0.511647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418919,-99) , 
10, -1.38393, 0, 0, 0.507054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4271,-99) , 
12, 1.07696, 1, 0, 0.499911,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.137189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404475,-99) , 
12, -1.30137, 1, 0, 0.537412,-99) , 
10, -0.0781705, 0, 0, 0.554999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.694125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465458,-99) , 
10, 1.18393, 0, 0, 0.49966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423402,-99) , 
10, 1.36598, 1, 0, 0.461361,-99) , 
11, -1.66527, 1, 0, 0.481814,-99) , 
12, -0.984241, 1, 0, 0.500941,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0968202);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.706159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457881,-99) , 
2, 0.042288, 1, 0, 0.625251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374734,-99) , 
3, 9.01061, 0, 0, 0.524503,-99) , 
6, 0.0521495, 1, 0, 0.534859,-99) , 
NN(
0, 
0, 
-1, 3.50989, 1, -1, 0.443835,-99) , 
6, -0.809518, 0, 0, 0.523512,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0965282);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.854843, 0, 1, 0.578376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463821,-99) , 
8, 19.1745, 1, 0, 0.546593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471263,-99) , 
12, -2.10235, 1, 0, 0.476958,-99) , 
3, 14.763, 0, 0, 0.492031,-99) , 
6, -0.238083, 1, 0, 0.507652,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0775533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.355978, 0, 1, 0.608703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412487,-99) , 
13, 13.7896, 1, 0, 0.504387,-99) , 
0, 0.49809, 0, 0, 0.552465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492787,-99) , 
11, -1.24801, 0, 0, 0.506123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452553,-99) , 
10, 1.93992, 1, 0, 0.49712,-99) , 
11, -2.67958, 1, 0, 0.511563,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.079494);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.186903, 0, 1, 0.648969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465094,-99) , 
10, 0.388879, 0, 0, 0.508157,-99) , 
12, -1.13683, 1, 0, 0.518921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454147,-99) , 
3, 12.5277, 0, 0, 0.482446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363618,-99) , 
3, 15.0488, 1, 0, 0.465881,-99) , 
10, -0.427915, 0, 0, 0.509237,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0696237);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 11.2225, 0, 1, 0.576162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375905,-99) , 
13, 19.0667, 1, 0, 0.527473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453575,-99) , 
10, 0.802712, 0, 0, 0.488049,-99) , 
12, -0.840356, 1, 0, 0.50009,-99) , 
0, 0.504756, 0, 0, 0.50511,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.114131);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.02243, 0, 1, 0.629252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429951,-99) , 
3, 11.2404, 0, 0, 0.516587,-99) , 
8, 8.41416, 1, 0, 0.54245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471503,-99) , 
11, -1.17742, 1, 0, 0.531783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454587,-99) , 
12, -0.536531, 1, 0, 0.470243,-99) , 
10, 1.77428, 0, 0, 0.483811,-99) , 
10, 0.142082, 1, 0, 0.502828,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0652945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493329, 1, 1, 0.536214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476443,-99) , 
6, 0.0476434, 1, 0, 0.489235,-99) , 
4, 3.40104, 0, 0, 0.502787,-99) , 
NN(
0, 
0, 
-1, 11.9597, 0, -1, 0.418068,-99) , 
10, -0.997201, 0, 0, 0.496242,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0841804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490979,-99) , 
10, 0.708543, 1, 0, 0.554087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445429,-99) , 
3, 3.14952, 0, 0, 0.523162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499976,-99) , 
0, 0.502852, 0, 0, 0.514071,-99) , 
NN(
0, 
0, 
-1, 0.499041, 1, -1, 0.447765,-99) , 
8, 13.9875, 0, 0, 0.482044,-99) , 
8, 11.2864, 1, 0, 0.49575,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0765445);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498096, 1, 1, 0.553983,-99) , 
NN(
NN(
0, 
0, 
-1, -0.124569, 0, 1, 0.546271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451333,-99) , 
10, 0.445834, 0, 0, 0.499646,-99) , 
12, -1.06685, 1, 0, 0.512839,-99) , 
10, 1.85632, 0, 0, 0.518917,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0581955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469817,-99) , 
11, -3.03494, 0, 0, 0.512201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436584,-99) , 
6, -0.904745, 0, 0, 0.50662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350259,-99) , 
1, -0.00987108, 0, 0, 0.502191,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0549062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493437,-99) , 
10, 0.43043, 0, 0, 0.57521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456301,-99) , 
0, 0.494281, 0, 0, 0.499535,-99) , 
2, -0.120611, 1, 0, 0.505779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42933,-99) , 
5, 0.999525, 0, 0, 0.498112,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0964941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.971996, 0, 1, 0.54709,-99) , 
NN(
0, 
0, 
-1, 1.95781, 1, -1, 0.482592,-99) , 
11, -1.30893, 1, 0, 0.532173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46865,-99) , 
2, -0.0385418, 1, 0, 0.509139,-99) , 
NN(
0, 
0, 
-1, 0.333318, 0, -1, 0.381542,-99) , 
0, 0.493011, 1, 0, 0.464193,-99) , 
0, 0.494281, 0, 0, 0.517334,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0843051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.641983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472579,-99) , 
3, 3.16467, 0, 0, 0.537988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487636,-99) , 
8, 10.8596, 1, 0, 0.495537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357034,-99) , 
11, -1.89873, 0, 0, 0.438797,-99) , 
3, 9.8894, 0, 0, 0.487033,-99) , 
8, 5.87967, 1, 0, 0.494954,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0839982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.713414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446645,-99) , 
4, 2.72812, 1, 0, 0.512718,-99) , 
10, -0.251702, 0, 0, 0.541103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498863,-99) , 
0, 0.502851, 0, 0, 0.52859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45372,-99) , 
10, 1.13108, 0, 0, 0.482607,-99) , 
3, 9.01173, 1, 0, 0.494292,-99) , 
12, -1.20562, 1, 0, 0.503757,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0749257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 13.1601, 1, 1, 0.551914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562626,-99) , 
NN(
0, 
0, 
-1, 0.503804, 1, -1, 0.478414,-99) , 
6, -0.904745, 1, 0, 0.488566,-99) , 
3, 12.0837, 0, 0, 0.515671,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0922092);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 12.6087, 0, 1, 0.536358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402142,-99) , 
0, 0.49251, 0, 0, 0.524804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385037,-99) , 
3, 16.5824, 0, 0, 0.424648,-99) , 
0, 0.499038, 1, 0, 0.482405,-99) , 
3, 13.1483, 1, 0, 0.520365,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0827661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497133, 0, 1, 0.598551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433861,-99) , 
0, 0.503803, 1, 0, 0.51445,-99) , 
NN(
0, 
0, 
-1, 0.877584, 1, -1, 0.455546,-99) , 
8, 13.8256, 1, 0, 0.49694,-99) , 
3, 17.1941, 0, 0, 0.504718,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.055295);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487321,-99) , 
12, -2.14912, 1, 0, 0.491824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398479,-99) , 
2, -0.225944, 0, 0, 0.486719,-99) , 
10, 2.14243, 0, 0, 0.496789,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0680321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.84642, 1, 1, 0.557528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46383,-99) , 
11, -2.08877, 1, 0, 0.487601,-99) , 
3, 13.525, 0, 0, 0.503668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377819,-99) , 
8, 20.7388, 1, 0, 0.497908,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.060705);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471388,-99) , 
2, -0.041742, 1, 0, 0.48219,-99) , 
2, 0.199279, 0, 0, 0.486429,-99) , 
0, 0.489519, 1, 0, 0.491204,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0545013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.51285, 0, 1, 0.588953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432866,-99) , 
0, 0.50453, 1, 0, 0.503705,-99) , 
0, 0.491424, 1, 0, 0.510423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515262,-99) , 
NN(
0, 
0, 
-1, 11.6949, 1, -1, 0.402037,-99) , 
3, 12.1704, 0, 0, 0.442362,-99) , 
10, -0.711299, 0, 0, 0.501931,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0437238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.462533, 1, 1, 0.581622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496934,-99) , 
0, 0.499995, 1, 0, 0.548838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497031,-99) , 
10, 1.41973, 0, 0, 0.503403,-99) , 
NN(
0, 
0, 
-1, 0.932948, 0, -1, 0.451062,-99) , 
12, 0.512528, 1, 0, 0.492564,-99) , 
8, 16.6864, 0, 0, 0.500251,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0664676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.0014, 1, 1, 0.581667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491022,-99) , 
11, -1.41774, 0, 0, 0.505296,-99) , 
8, 14.7636, 0, 0, 0.517024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435533,-99) , 
8, 14.5793, 1, 0, 0.473113,-99) , 
6, 0.904747, 1, 0, 0.506016,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0629067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485306,-99) , 
8, 12.8454, 1, 0, 0.509118,-99) , 
NN(
0, 
0, 
-1, 19.008, 0, -1, 0.431751,-99) , 
3, 17.2441, 1, 0, 0.502831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361139,-99) , 
2, -0.227193, 0, 0, 0.494955,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0799685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618987, 1, 1, 0.631961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490429,-99) , 
11, -1.77313, 1, 0, 0.577634,-99) , 
NN(
NN(
0, 
0, 
-1, 0.746507, 1, 1, 0.519215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430489,-99) , 
8, 9.28592, 1, 0, 0.472488,-99) , 
3, 11.1325, 0, 0, 0.499392,-99) , 
0, 0.494281, 1, 0, 0.514293,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0841253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373426,-99) , 
10, -1.56815, 0, 0, 0.525642,-99) , 
NN(
0, 
0, 
-1, 0.50485, 0, -1, 0.458211,-99) , 
0, 0.503986, 1, 0, 0.517141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416773,-99) , 
3, 12.8054, 1, 0, 0.48737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348964,-99) , 
6, -0.523269, 0, 0, 0.444435,-99) , 
0, 0.492376, 0, 0, 0.507688,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0574532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477586,-99) , 
0, 0.498091, 0, 0, 0.550988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490421,-99) , 
3, 18.8811, 0, 0, 0.495613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344764,-99) , 
6, -0.469291, 0, 0, 0.487055,-99) , 
6, -0.714201, 1, 0, 0.495251,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0954723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143834, 0, 1, 0.621922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465544,-99) , 
4, 3.40931, 1, 0, 0.511032,-99) , 
11, -2.85232, 1, 0, 0.520083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450686,-99) , 
11, -3.34187, 0, 0, 0.514547,-99) , 
NN(
0, 
0, 
-1, 0.501486, 0, -1, 0.395893,-99) , 
0, 0.499038, 1, 0, 0.455267,-99) , 
10, -0.427763, 0, 0, 0.508595,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0767459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477298,-99) , 
9, -951.286, 1, 0, 0.49149,-99) , 
6, 0.18368, 1, 0, 0.497912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447602,-99) , 
3, 3.55971, 0, 0, 0.469498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314452,-99) , 
6, -0.646224, 1, 0, 0.434988,-99) , 
6, -0.428542, 0, 0, 0.485961,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.124298);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48545,-99) , 
12, -0.319444, 1, 0, 0.528268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43379,-99) , 
10, -0.251702, 0, 0, 0.464898,-99) , 
12, -1.19224, 0, 0, 0.50929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411505,-99) , 
10, 1.78537, 0, 0, 0.499982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41045,-99) , 
11, -0.935373, 1, 0, 0.46388,-99) , 
12, 0.335455, 1, 0, 0.497755,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0762792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489377, 0, 1, 0.601464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498863,-99) , 
0, 0.490699, 1, 0, 0.566458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455232,-99) , 
6, 0.922478, 1, 0, 0.499404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383328,-99) , 
8, 3.52591, 1, 0, 0.438119,-99) , 
3, 8.00621, 0, 0, 0.485674,-99) , 
0, 0.491425, 1, 0, 0.492275,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0819063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.8745, 1, 1, 0.635161,-99) , 
NN(
0, 
0, 
-1, -0.371886, 0, -1, 0.475787,-99) , 
0, 0.503532, 1, 0, 0.535105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540103,-99) , 
NN(
0, 
0, 
-1, -0.0752993, 1, -1, 0.465888,-99) , 
4, 6.34821, 0, 0, 0.472348,-99) , 
0, 0.5019, 0, 0, 0.485009,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0964541);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487031,-99) , 
8, 7.25247, 1, 0, 0.51112,-99) , 
2, 0.0580684, 0, 0, 0.542426,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488263,-99) , 
10, 0.437058, 0, 0, 0.528805,-99) , 
NN(
0, 
0, 
-1, 0.11603, 1, -1, 0.452492,-99) , 
0, 0.493419, 1, 0, 0.465668,-99) , 
0, 0.502852, 0, 0, 0.477942,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.113725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.42761, 1, 1, 0.559233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462139,-99) , 
4, 2.26018, 0, 0, 0.494737,-99) , 
2, -0.00891996, 1, 0, 0.525764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493156,-99) , 
10, 0.180691, 0, 0, 0.550044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421819,-99) , 
11, -2.04002, 1, 0, 0.485083,-99) , 
2, 0.0645605, 1, 0, 0.518191,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0872684);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498722,-99) , 
0, 0.495239, 0, 0, 0.586139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478635,-99) , 
2, -0.0716512, 0, 0, 0.568088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484078,-99) , 
12, -0.719779, 1, 0, 0.495387,-99) , 
3, 3.87133, 1, 0, 0.503735,-99) , 
10, 0.142568, 1, 0, 0.523847,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0974972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.084, 1, 1, 0.554415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474014,-99) , 
12, 1.0597, 1, 0, 0.545063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41444,-99) , 
8, 13.3828, 1, 0, 0.480342,-99) , 
3, 15.2258, 0, 0, 0.491807,-99) , 
11, -2.68342, 0, 0, 0.530278,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.101354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.802261, 1, 1, 0.565363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486421,-99) , 
12, -1.7009, 1, 0, 0.497319,-99) , 
0, 0.497138, 1, 0, 0.522913,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.554614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434943,-99) , 
0, 0.503803, 0, 0, 0.447417,-99) , 
6, -0.619024, 1, 0, 0.476637,-99) , 
8, 12.6334, 0, 0, 0.498563,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0574926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504755, 0, 1, 0.540451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429535,-99) , 
6, 0.961105, 1, 0, 0.490379,-99) , 
6, 0.727877, 1, 0, 0.509754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443351,-99) , 
6, -0.904755, 0, 0, 0.504515,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0676458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467199,-99) , 
0, 0.498087, 0, 0, 0.540171,-99) , 
10, -0.887198, 0, 0, 0.582098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479896,-99) , 
9, -951.286, 0, 0, 0.506701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382498,-99) , 
11, -3.2706, 0, 0, 0.502379,-99) , 
12, -1.61834, 1, 0, 0.511163,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0388102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498704,-99) , 
10, -1.25544, 0, 0, 0.576333,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496698,-99) , 
12, -1.24424, 1, 0, 0.502796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398787,-99) , 
10, -0.574322, 0, 0, 0.49693,-99) , 
12, -1.73893, 1, 0, 0.503503,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0744);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 12.5293, 1, 1, 0.610576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477599,-99) , 
10, 0.397415, 0, 0, 0.508072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402018,-99) , 
5, 0.999524, 0, 0, 0.498399,-99) , 
12, -1.8561, 1, 0, 0.506198,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0646052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 14.3514, 0, 1, 0.566054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420617,-99) , 
8, 16.4087, 1, 0, 0.544123,-99) , 
NN(
NN(
0, 
0, 
-1, -1.34104, 1, 1, 0.569847,-99) , 
NN(
0, 
0, 
-1, -3.22703, 0, -1, 0.484289,-99) , 
12, -1.8561, 1, 0, 0.490144,-99) , 
0, 0.495233, 1, 0, 0.504394,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0895683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440132,-99) , 
4, 4.16191, 1, 0, 0.545186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48029,-99) , 
3, 15.6908, 0, 0, 0.495893,-99) , 
6, 0.714278, 1, 0, 0.516391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419497,-99) , 
2, -0.225944, 0, 0, 0.51075,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0802145);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47591,-99) , 
12, 0.14636, 1, 0, 0.515548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333912,-99) , 
3, 19.0518, 0, 0, 0.417975,-99) , 
8, 18.9097, 1, 0, 0.506536,-99) , 
NN(
0, 
0, 
-1, 3.06992, 0, -1, 0.433689,-99) , 
3, 3.85553, 0, 0, 0.496477,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0661951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.33819, 1, 1, 0.580266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414804,-99) , 
4, 1.11874, 0, 0, 0.506667,-99) , 
9, -951.286, 0, 0, 0.54305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379398,-99) , 
8, 18.05, 1, 0, 0.492834,-99) , 
3, 19.0476, 0, 0, 0.497994,-99) , 
6, 0.333292, 1, 0, 0.508809,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0435339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490672,-99) , 
10, 1.55576, 0, 0, 0.497756,-99) , 
11, -1.08791, 0, 0, 0.504122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424864,-99) , 
4, 7.41939, 1, 0, 0.498977,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.074576);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.752267, 1, 1, 0.549919,-99) , 
NN(
NN(
0, 
0, 
-1, 1.2376, 0, 1, 0.524424,-99) , 
NN(
0, 
0, 
-1, 0.499044, 1, -1, 0.453122,-99) , 
12, 0.3128, 1, 0, 0.504963,-99) , 
8, 13.9841, 0, 0, 0.520439,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0560961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619008, 1, 1, 0.572152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423456,-99) , 
10, 0.714007, 0, 0, 0.489769,-99) , 
0, 0.497139, 0, 0, 0.534819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472864,-99) , 
0, 0.497132, 0, 0, 0.550054,-99) , 
NN(
0, 
0, 
-1, -2.76444, 0, -1, 0.490252,-99) , 
12, -1.78836, 1, 0, 0.494474,-99) , 
2, 0.0500344, 0, 0, 0.502795,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0907484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488709,-99) , 
3, 11.9951, 0, 0, 0.513599,-99) , 
12, -0.0681541, 1, 0, 0.527246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4505,-99) , 
10, -1.28889, 0, 0, 0.542244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459837,-99) , 
10, 0.744129, 0, 0, 0.471379,-99) , 
12, -1.79459, 1, 0, 0.481668,-99) , 
12, -0.244373, 0, 0, 0.501656,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0695038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.4628, 0, 1, 0.573254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420222,-99) , 
11, -3.73985, 0, 0, 0.514737,-99) , 
4, 3.90647, 0, 0, 0.521873,-99) , 
NN(
NN(
0, 
0, 
-1, 0.500604, 0, 1, 0.524986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38015,-99) , 
0, 0.497119, 0, 0, 0.459406,-99) , 
4, 5.42071, 1, 0, 0.513548,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0980183);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394264,-99) , 
4, 6.36866, 1, 0, 0.527925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448134,-99) , 
10, 1.85588, 1, 0, 0.517138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395456,-99) , 
1, -0.00134626, 0, 0, 0.478018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338631,-99) , 
3, 7.92767, 0, 0, 0.444084,-99) , 
2, -0.0863447, 0, 0, 0.504281,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0742787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.77753, 0, 1, 0.563414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427074,-99) , 
0, 0.493782, 0, 0, 0.494943,-99) , 
0, 0.493056, 1, 0, 0.530589,-99) , 
NN(
0, 
0, 
-1, 0.502308, 1, -1, 0.467956,-99) , 
0, 0.495233, 1, 0, 0.483552,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0510481);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592282,-99) , 
NN(
0, 
0, 
-1, -0.793673, 0, -1, 0.483553,-99) , 
12, -2.02653, 1, 0, 0.489525,-99) , 
10, 2.14246, 0, 0, 0.49708,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0682416);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648109,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28487, 1, 1, 0.519923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403071,-99) , 
12, -1.62477, 1, 0, 0.463155,-99) , 
10, -0.362198, 0, 0, 0.510422,-99) , 
11, -3.82957, 1, 0, 0.514725,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0905678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.57456, 1, 1, 0.570717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446739,-99) , 
3, 5.43316, 0, 0, 0.512552,-99) , 
0, 0.495233, 1, 0, 0.526404,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451142,-99) , 
3, 12.8463, 0, 0, 0.489697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378174,-99) , 
0, 0.492377, 0, 0, 0.47723,-99) , 
8, 12.6579, 1, 0, 0.501889,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0645474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489543,-99) , 
10, -0.196841, 0, 0, 0.534635,-99) , 
NN(
0, 
0, 
-1, -0.756701, 1, -1, 0.478588,-99) , 
12, -1.07412, 1, 0, 0.488676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352603,-99) , 
12, -2.31657, 1, 0, 0.425214,-99) , 
10, -1.0001, 0, 0, 0.484019,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0671635);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.1934, 0, 1, 0.574112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47525,-99) , 
0, 0.49809, 1, 0, 0.494823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382611,-99) , 
1, -0.00515372, 0, 0, 0.490621,-99) , 
6, -0.0476041, 1, 0, 0.506654,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0746582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.216415, 0, 1, 0.543687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47709,-99) , 
4, 1.16199, 1, 0, 0.499045,-99) , 
12, -0.605365, 1, 0, 0.516144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448059,-99) , 
4, 7.41242, 1, 0, 0.511663,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.116869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485648,-99) , 
8, 10.3181, 0, 0, 0.547491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451217,-99) , 
8, 18.0372, 1, 0, 0.537182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467872,-99) , 
0, 0.49487, 1, 0, 0.555915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4356,-99) , 
3, 10.0322, 1, 0, 0.46055,-99) , 
11, -2.87177, 1, 0, 0.479024,-99) , 
0, 0.497138, 0, 0, 0.51428,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0957089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482449,-99) , 
10, 1.28751, 1, 0, 0.516609,-99) , 
0, 0.497637, 1, 0, 0.523535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486071,-99) , 
10, 0.427773, 0, 0, 0.553218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412422,-99) , 
0, 0.49215, 1, 0, 0.431887,-99) , 
3, 10.0497, 1, 0, 0.46261,-99) , 
0, 0.497138, 0, 0, 0.499024,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0865352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475161,-99) , 
11, -2.26464, 0, 0, 0.524199,-99) , 
11, -3.47711, 1, 0, 0.533633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47263,-99) , 
12, 0.49283, 1, 0, 0.519346,-99) , 
NN(
0, 
0, 
-1, 0.795902, 0, -1, 0.468044,-99) , 
10, 0.999374, 0, 0, 0.488253,-99) , 
6, 0.714268, 1, 0, 0.507254,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0986524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.762896, 0, 1, 0.538832,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433673,-99) , 
10, 1.67301, 0, 0, 0.472317,-99) , 
11, -1.05144, 0, 0, 0.494309,-99) , 
12, -0.236244, 1, 0, 0.51868,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.111686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.2421, 0, 1, 0.656454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417738,-99) , 
0, 0.496186, 0, 0, 0.479146,-99) , 
11, -1.86158, 1, 0, 0.505091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456083,-99) , 
6, 0.618818, 1, 0, 0.504544,-99) , 
NN(
0, 
0, 
-1, 0.143406, 0, -1, 0.440004,-99) , 
9, -951.286, 1, 0, 0.462692,-99) , 
10, 0.998981, 0, 0, 0.478347,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0946347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.6334, 1, 1, 0.57782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444742,-99) , 
10, -1.41646, 0, 0, 0.548299,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463734,-99) , 
1, 0.000442038, 0, 0, 0.528838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463643,-99) , 
3, 3.88268, 1, 0, 0.474438,-99) , 
2, -0.0848457, 1, 0, 0.482665,-99) , 
12, -1.24706, 1, 0, 0.494316,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0662975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0816566, 1, 1, 0.539044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477411,-99) , 
6, -0.714211, 1, 0, 0.487441,-99) , 
10, 1.08331, 0, 0, 0.501887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424743,-99) , 
12, 1.06955, 1, 0, 0.495782,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0609568);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48932,-99) , 
9, -951.286, 0, 0, 0.545555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480855,-99) , 
0, 0.490471, 1, 0, 0.486316,-99) , 
2, -0.0862331, 1, 0, 0.495034,-99) , 
10, 2.14243, 0, 0, 0.501054,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0721521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.207376, 0, 1, 0.708058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452205,-99) , 
10, 0.182998, 1, 0, 0.486739,-99) , 
9, -951.286, 0, 0, 0.569729,-99) , 
NN(
NN(
0, 
0, 
-1, -0.965121, 1, 1, 0.544072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363074,-99) , 
0, 0.491424, 0, 0, 0.493097,-99) , 
4, 3.7668, 0, 0, 0.506571,-99) , 
8, 5.84293, 1, 0, 0.516222,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0687632);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486325,-99) , 
11, -2.24031, 1, 0, 0.508632,-99) , 
NN(
0, 
0, 
-1, 8.04634, 0, -1, 0.435437,-99) , 
10, -0.588977, 0, 0, 0.500147,-99) , 
11, -3.82957, 1, 0, 0.504574,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.106768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.41498, 1, 1, 0.616192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439145,-99) , 
10, -1.05159, 0, 0, 0.528853,-99) , 
3, 12.1994, 0, 0, 0.563986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475457,-99) , 
10, 0.514054, 0, 0, 0.538047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479308,-99) , 
8, 15.2124, 0, 0, 0.499823,-99) , 
11, -1.88152, 1, 0, 0.514813,-99) , 
12, -0.928153, 1, 0, 0.528016,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0966128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497141, 1, 1, 0.535982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470619,-99) , 
8, 15.2513, 1, 0, 0.517755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467352,-99) , 
11, -2.25163, 1, 0, 0.559723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439197,-99) , 
6, -0.809525, 1, 0, 0.44971,-99) , 
10, 0.830026, 0, 0, 0.460918,-99) , 
11, -2.0499, 0, 0, 0.488642,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0583474);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 18.0538, 0, 1, 0.527075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453073,-99) , 
5, 0.999524, 0, 0, 0.519377,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0917629);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473293,-99) , 
9, 0.429043, 0, 0, 0.512163,-99) , 
NN(
0, 
0, 
-1, 0.502851, 1, -1, 0.47188,-99) , 
9, -951.286, 0, 0, 0.497767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35982,-99) , 
12, -2.35727, 1, 0, 0.418211,-99) , 
10, -0.999325, 0, 0, 0.491343,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0636336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499981, 1, 1, 0.604723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496642,-99) , 
7, 0.00356553, 0, 0, 0.512542,-99) , 
3, 16.23, 0, 0, 0.521748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314701,-99) , 
7, 0.012485, 1, 0, 0.515081,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.092277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.553883, 0, 1, 0.584068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460919,-99) , 
11, -1.43541, 1, 0, 0.491077,-99) , 
12, 0.0912507, 1, 0, 0.551884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476978,-99) , 
3, 10.6044, 0, 0, 0.500916,-99) , 
NN(
0, 
0, 
-1, 17.6479, 0, -1, 0.451082,-99) , 
8, 14.9699, 1, 0, 0.4878,-99) , 
0, 0.497138, 1, 0, 0.513056,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0600269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471037,-99) , 
6, 0.904738, 1, 0, 0.508717,-99) , 
2, 0.220425, 0, 0, 0.513152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426552,-99) , 
5, 0.999524, 0, 0, 0.504613,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0765039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.506042, 0, 1, 0.619475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478878,-99) , 
0, 0.50252, 1, 0, 0.531008,-99) , 
0, 0.505074, 0, 0, 0.549873,-99) , 
NN(
NN(
0, 
0, 
-1, 3.10124, 0, 1, 0.556611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460218,-99) , 
10, 0.148442, 0, 0, 0.49356,-99) , 
2, 0.0543982, 0, 0, 0.505833,-99) , 
0, 0.500947, 0, 0, 0.517338,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0529257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614878,-99) , 
NN(
NN(
0, 
0, 
-1, -0.052311, 1, 1, 0.518605,-99) , 
NN(
0, 
0, 
-1, 0.0488668, 1, -1, 0.456769,-99) , 
10, -0.373597, 0, 0, 0.509845,-99) , 
12, -2.01927, 1, 0, 0.514763,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0456009);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.428187, 1, 1, 0.564213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49509,-99) , 
6, 0.648105, 1, 0, 0.506339,-99) , 
NN(
0, 
0, 
-1, 5.84213, 1, -1, 0.458218,-99) , 
8, 7.09682, 0, 0, 0.497149,-99) , 
0, 0.491425, 1, 0, 0.502152,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0901044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488593,-99) , 
11, -2.7787, 0, 0, 0.516269,-99) , 
10, 0.416724, 0, 0, 0.532548,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469945,-99) , 
9, -951.286, 0, 0, 0.529172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449941,-99) , 
12, -0.252073, 1, 0, 0.463261,-99) , 
0, 0.496186, 1, 0, 0.482875,-99) , 
12, -0.605365, 1, 0, 0.502074,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0545809);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.238503, 0, 1, 0.599094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489637,-99) , 
11, -2.33809, 0, 0, 0.570336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488932,-99) , 
3, 17.2739, 0, 0, 0.495635,-99) , 
1, -0.00384117, 1, 0, 0.502295,-99) , 
11, -3.34946, 1, 0, 0.509444,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0767582);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.50796, 0, 1, 0.537072,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438107,-99) , 
6, 0.71431, 1, 0, 0.472079,-99) , 
11, -1.3928, 1, 0, 0.521178,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0760067);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 20.705, 1, 1, 0.595316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409365,-99) , 
2, 0.166893, 1, 0, 0.513374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452131,-99) , 
0, 0.506252, 0, 0, 0.472897,-99) , 
0, 0.501899, 1, 0, 0.5045,-99) , 
3, 17.2739, 0, 0, 0.51116,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0585459);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 19.1519, 0, 1, 0.600262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435531,-99) , 
10, -0.996729, 0, 0, 0.504078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413407,-99) , 
0, 0.489792, 1, 0, 0.44407,-99) , 
0, 0.493329, 0, 0, 0.494665,-99) , 
8, 19.2279, 0, 0, 0.501419,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.104921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404074,-99) , 
0, 0.498112, 0, 0, 0.526029,-99) , 
0, 0.497637, 1, 0, 0.534437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464465,-99) , 
1, -0.000859737, 0, 0, 0.565081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439273,-99) , 
6, 0.142872, 1, 0, 0.454339,-99) , 
12, -1.30532, 1, 0, 0.471782,-99) , 
0, 0.497138, 0, 0, 0.509248,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0589782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491651,-99) , 
8, 18.6167, 0, 0, 0.533503,-99) , 
0, 0.499044, 0, 0, 0.579777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582216,-99) , 
NN(
0, 
0, 
-1, 0.477537, 1, -1, 0.482164,-99) , 
12, -1.99351, 1, 0, 0.486775,-99) , 
8, 16.6864, 0, 0, 0.499427,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0652304);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572899,-99) , 
NN(
NN(
0, 
0, 
-1, 12.6828, 1, 1, 0.526052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452874,-99) , 
12, 0.501075, 1, 0, 0.516778,-99) , 
10, 2.14243, 0, 0, 0.521664,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0650889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462348,-99) , 
10, 2.14373, 1, 0, 0.5355,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487585,-99) , 
10, 1.53932, 0, 0, 0.494153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422929,-99) , 
11, -1.45406, 1, 0, 0.486551,-99) , 
11, -1.19713, 0, 0, 0.495846,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.091434);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.707939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494613,-99) , 
10, -0.708536, 0, 0, 0.619908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483468,-99) , 
8, 15.2434, 0, 0, 0.511299,-99) , 
11, -2.65068, 1, 0, 0.533029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465092,-99) , 
10, 0.942159, 1, 0, 0.497288,-99) , 
NN(
0, 
0, 
-1, 10.909, 1, -1, 0.449308,-99) , 
11, -2.35143, 0, 0, 0.476272,-99) , 
3, 12.1632, 0, 0, 0.498692,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0905551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.510232, 1, 1, 0.537865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341314,-99) , 
12, -1.01924, 0, 0, 0.441486,-99) , 
6, -0.714243, 0, 0, 0.525694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459691,-99) , 
0, 0.497139, 0, 0, 0.524771,-99) , 
NN(
0, 
0, 
-1, 1.40025, 0, -1, 0.453749,-99) , 
6, -0.142836, 1, 0, 0.469339,-99) , 
12, -0.0848292, 1, 0, 0.502305,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0965234);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575606,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483584,-99) , 
10, 0.0082696, 0, 0, 0.527596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458233,-99) , 
6, -0.238078, 1, 0, 0.47732,-99) , 
12, -0.410163, 1, 0, 0.502355,-99) , 
10, 2.14243, 0, 0, 0.509034,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.080538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473695,-99) , 
11, -1.27981, 1, 0, 0.514029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456381,-99) , 
0, 0.495235, 1, 0, 0.470037,-99) , 
10, 0.998891, 0, 0, 0.486564,-99) , 
NN(
0, 
0, 
-1, 0.498083, 1, -1, 0.392348,-99) , 
7, 0.00927888, 1, 0, 0.481689,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.125594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55853, 0, 1, 0.606182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491262,-99) , 
0, 0.498081, 0, 0, 0.512142,-99) , 
11, -1.52931, 1, 0, 0.541741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409691,-99) , 
3, 16.2702, 1, 0, 0.556656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422317,-99) , 
6, -0.71427, 1, 0, 0.443237,-99) , 
12, -1.04311, 1, 0, 0.486767,-99) , 
10, 0.998811, 0, 0, 0.507316,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0967184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.4284, 1, 1, 0.542415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475393,-99) , 
8, 8.24468, 0, 0, 0.52866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445899,-99) , 
3, 11.814, 0, 0, 0.478197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382394,-99) , 
13, 17.9853, 1, 0, 0.468718,-99) , 
11, -2.09154, 0, 0, 0.499855,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0872433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.10231, 0, 1, 0.539292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377299,-99) , 
3, 4.92719, 0, 0, 0.484339,-99) , 
0, 0.499995, 1, 0, 0.519722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46067,-99) , 
12, 0.434182, 1, 0, 0.480615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404965,-99) , 
10, 1.41778, 0, 0, 0.461584,-99) , 
12, 0.11603, 1, 0, 0.499694,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.050628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.544403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478151,-99) , 
0, 0.497818, 1, 0, 0.490348,-99) , 
11, -2.9418, 1, 0, 0.499503,-99) , 
NN(
0, 
0, 
-1, 0.489246, 1, -1, 0.396835,-99) , 
0, 0.490471, 0, 0, 0.493518,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.088994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485311,-99) , 
2, 0.072767, 0, 0, 0.515192,-99) , 
11, -1.46729, 0, 0, 0.541049,-99) , 
NN(
NN(
0, 
0, 
-1, 0.52369, 1, 1, 0.563591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478764,-99) , 
11, -3.43226, 1, 0, 0.486818,-99) , 
0, 0.503124, 0, 0, 0.504429,-99) , 
0, 0.497139, 1, 0, 0.518987,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.104895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483263,-99) , 
9, -951.286, 0, 0, 0.524934,-99) , 
0, 0.495237, 1, 0, 0.539887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448818,-99) , 
12, -1.32493, 1, 0, 0.4736,-99) , 
10, 1.34346, 0, 0, 0.480604,-99) , 
11, -1.70726, 0, 0, 0.50125,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.106558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.71066, 1, 1, 0.637549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452397,-99) , 
0, 0.496187, 0, 0, 0.528507,-99) , 
6, -0.746051, 0, 0, 0.576759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45961,-99) , 
6, 0.74602, 1, 0, 0.477536,-99) , 
10, 1.85679, 0, 0, 0.488311,-99) , 
6, 0.333319, 1, 0, 0.509379,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.101361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456101,-99) , 
2, -0.160355, 0, 0, 0.552066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415222,-99) , 
4, 7.25719, 1, 0, 0.544082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457169,-99) , 
6, 0.959106, 1, 0, 0.485487,-99) , 
6, 0.904671, 1, 0, 0.528651,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0551528);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462563,-99) , 
12, -0.10723, 1, 0, 0.48933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376995,-99) , 
10, -1.57146, 0, 0, 0.485214,-99) , 
0, 0.489519, 1, 0, 0.488913,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0583457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0476086, 1, 1, 0.519012,-99) , 
NN(
0, 
0, 
-1, 11.984, 1, -1, 0.453108,-99) , 
0, 0.493329, 0, 0, 0.508434,-99) , 
NN(
0, 
0, 
-1, 0.0126452, 1, -1, 0.403846,-99) , 
10, -0.999936, 0, 0, 0.500298,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0939824);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478968,-99) , 
12, 0.533208, 1, 0, 0.528413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455668,-99) , 
12, -0.755099, 1, 0, 0.482381,-99) , 
10, 1.28443, 0, 0, 0.495598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482787,-99) , 
10, 0.442327, 0, 0, 0.539815,-99) , 
NN(
0, 
0, 
-1, 1.22726, 0, -1, 0.418088,-99) , 
4, 3.41351, 0, 0, 0.448996,-99) , 
0, 0.495233, 0, 0, 0.483036,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0891152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.89923, 1, 1, 0.548747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425915,-99) , 
11, -2.28415, 1, 0, 0.469942,-99) , 
10, 1.55461, 0, 0, 0.482266,-99) , 
11, -1.2832, 0, 0, 0.497271,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0748801);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468491,-99) , 
10, 1.82954, 0, 0, 0.477144,-99) , 
11, -0.894493, 0, 0, 0.484447,-99) , 
6, -0.904755, 1, 0, 0.489601,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.10983);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458833,-99) , 
11, -3.01955, 0, 0, 0.53399,-99) , 
NN(
0, 
0, 
-1, 10.3964, 1, -1, 0.389062,-99) , 
9, -0.999201, 0, 0, 0.507931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442514,-99) , 
2, 0.0666739, 0, 0, 0.455892,-99) , 
2, -0.0804514, 1, 0, 0.466984,-99) , 
9, -951.286, 0, 0, 0.492673,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0958562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497395,-99) , 
0, 0.498095, 1, 0, 0.551822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450484,-99) , 
9, 0.151216, 0, 0, 0.485071,-99) , 
9, -951.286, 1, 0, 0.509595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434077,-99) , 
11, -2.65659, 1, 0, 0.474375,-99) , 
NN(
0, 
0, 
-1, -0.150114, 1, -1, 0.368309,-99) , 
2, -0.0829858, 0, 0, 0.454491,-99) , 
11, -2.24031, 0, 0, 0.484941,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0827291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.08372, 0, 1, 0.595012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444077,-99) , 
3, 11.6808, 0, 0, 0.52041,-99) , 
6, 0.523795, 1, 0, 0.541979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580525,-99) , 
NN(
0, 
0, 
-1, -0.0765925, 0, -1, 0.482471,-99) , 
8, 19.4018, 0, 0, 0.488277,-99) , 
0, 0.499043, 0, 0, 0.510858,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0530445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.419155, 0, 1, 0.633461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498008,-99) , 
6, 0.523585, 1, 0, 0.574874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497227,-99) , 
6, 0.206293, 1, 0, 0.50627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396436,-99) , 
6, -0.871705, 1, 0, 0.452568,-99) , 
3, 5.92615, 0, 0, 0.497555,-99) , 
1, -0.0034466, 1, 0, 0.504893,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0716398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408473,-99) , 
10, -1.56815, 0, 0, 0.516826,-99) , 
3, 18.3149, 0, 0, 0.522713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562021,-99) , 
NN(
0, 
0, 
-1, 0.502034, 0, -1, 0.457356,-99) , 
0, 0.500721, 1, 0, 0.47227,-99) , 
0, 0.499995, 1, 0, 0.503995,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0781455);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.701979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475515,-99) , 
10, 0.486936, 0, 0, 0.560401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488231,-99) , 
9, -951.286, 1, 0, 0.506106,-99) , 
12, -0.419667, 1, 0, 0.518753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61199,-99) , 
NN(
0, 
0, 
-1, -1.19285, 1, -1, 0.463843,-99) , 
10, 0.192016, 0, 0, 0.475949,-99) , 
12, -0.860959, 0, 0, 0.505248,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0536761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.703508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384265,-99) , 
10, -1.70232, 0, 0, 0.508915,-99) , 
10, 1.54107, 0, 0, 0.517801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452589,-99) , 
0, 0.498092, 1, 0, 0.478779,-99) , 
11, -1.49484, 1, 0, 0.506609,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0451364);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579661,-99) , 
NN(
NN(
0, 
0, 
-1, -2.16687, 0, 1, 0.57784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370729,-99) , 
12, -1.34923, 0, 0, 0.487068,-99) , 
12, -1.81642, 1, 0, 0.493107,-99) , 
2, -0.189305, 1, 0, 0.498494,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0488322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491357,-99) , 
3, 14.2001, 0, 0, 0.501842,-99) , 
2, 0.160015, 0, 0, 0.507884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44526,-99) , 
5, 0.999524, 0, 0, 0.501384,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0611277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333379, 1, 1, 0.57449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48958,-99) , 
0, 0.497637, 1, 0, 0.505653,-99) , 
0, 0.503805, 0, 0, 0.512912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415425,-99) , 
6, 0.832669, 1, 0, 0.440183,-99) , 
3, 15.2063, 1, 0, 0.501907,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0896509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488614,-99) , 
8, 14.8854, 1, 0, 0.525184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463899,-99) , 
6, -0.621798, 1, 0, 0.490368,-99) , 
8, 11.2831, 0, 0, 0.512951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448238,-99) , 
10, 0.229194, 0, 0, 0.51339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393347,-99) , 
11, -1.76609, 1, 0, 0.46583,-99) , 
2, 0.055017, 1, 0, 0.502868,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0867785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.90894, 1, 1, 0.572378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482243,-99) , 
10, 0.387868, 0, 0, 0.507728,-99) , 
6, 0.714155, 1, 0, 0.532437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461076,-99) , 
12, 0.409066, 1, 0, 0.483646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405619,-99) , 
6, 0.904748, 1, 0, 0.465336,-99) , 
11, -2.06718, 1, 0, 0.497397,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.121243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491842,-99) , 
10, -1.28214, 0, 0, 0.602708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415759,-99) , 
8, 11.9788, 0, 0, 0.477171,-99) , 
0, 0.499995, 1, 0, 0.556504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45117,-99) , 
10, 0.549219, 0, 0, 0.526819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456104,-99) , 
12, -1.27984, 1, 0, 0.464916,-99) , 
6, 0.619035, 1, 0, 0.484626,-99) , 
10, -0.428728, 1, 0, 0.496023,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.101085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00153168, 1, 1, 0.56764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414233,-99) , 
3, 5.39548, 0, 0, 0.462073,-99) , 
0, 0.492375, 0, 0, 0.55153,-99) , 
NN(
NN(
0, 
0, 
-1, -2.54491, 0, 1, 0.555897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471432,-99) , 
9, 0.717817, 0, 0, 0.489108,-99) , 
9, -951.286, 1, 0, 0.510587,-99) , 
6, 0.714273, 1, 0, 0.527192,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0872692);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.16013, 0, 1, 0.618092,-99) , 
NN(
NN(
0, 
0, 
-1, 0.918361, 1, 1, 0.540242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455887,-99) , 
0, 0.499995, 0, 0, 0.480418,-99) , 
6, 0.714273, 0, 0, 0.515756,-99) , 
11, -3.43226, 1, 0, 0.522195,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.053641);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.90365, 1, 1, 0.519742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426985,-99) , 
0, 0.497274, 0, 0, 0.474212,-99) , 
10, -0.143044, 0, 0, 0.508522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390178,-99) , 
0, 0.489519, 0, 0, 0.50419,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0779733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488273,-99) , 
6, -0.722773, 0, 0, 0.581283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365075,-99) , 
6, 0.753737, 0, 0, 0.488397,-99) , 
3, 11.0825, 1, 0, 0.525981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490601,-99) , 
10, 0.433358, 1, 0, 0.507594,-99) , 
NN(
0, 
0, 
-1, -3.07608, 0, -1, 0.459761,-99) , 
3, 12.0567, 0, 0, 0.480445,-99) , 
0, 0.494281, 1, 0, 0.489466,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.10248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425203,-99) , 
12, -0.934728, 0, 0, 0.513781,-99) , 
11, -3.40004, 1, 0, 0.524409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467403,-99) , 
11, -2.19013, 1, 0, 0.494888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330916,-99) , 
3, 11.4965, 0, 0, 0.476353,-99) , 
8, 12.5354, 1, 0, 0.499494,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0658368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28295, 1, 1, 0.609692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491814,-99) , 
11, -1.00991, 0, 0, 0.502285,-99) , 
3, 9.20244, 1, 0, 0.512541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417174,-99) , 
10, -0.15726, 1, 0, 0.457889,-99) , 
8, 4.61916, 0, 0, 0.504204,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0554275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490472,-99) , 
6, 0.853411, 1, 0, 0.51668,-99) , 
NN(
0, 
0, 
-1, 0.491427, 0, -1, 0.478268,-99) , 
3, 9.01173, 0, 0, 0.50698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427399,-99) , 
2, 0.197208, 1, 0, 0.502168,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0746937);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622905,-99) , 
NN(
NN(
0, 
0, 
-1, -0.162838, 1, 1, 0.53323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473192,-99) , 
10, 0.683127, 0, 0, 0.491305,-99) , 
11, -1.98315, 0, 0, 0.512209,-99) , 
12, -2.165, 1, 0, 0.515773,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0775257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.2865, 0, 1, 0.5459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473909,-99) , 
6, 0.428533, 1, 0, 0.489921,-99) , 
10, 0.528761, 0, 0, 0.518487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441083,-99) , 
12, 1.06955, 1, 0, 0.511937,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0847866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.2067, 1, 1, 0.685587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363818,-99) , 
12, -1.15513, 1, 0, 0.491846,-99) , 
10, 0.0604137, 0, 0, 0.525932,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504441, 1, 1, 0.537522,-99) , 
NN(
0, 
0, 
-1, 0.714275, 1, -1, 0.474549,-99) , 
0, 0.502852, 0, 0, 0.484726,-99) , 
12, -0.826308, 1, 0, 0.498095,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0873283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.76876, 1, 1, 0.548432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473827,-99) , 
11, -1.41774, 1, 0, 0.529784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486537,-99) , 
11, -1.49484, 0, 0, 0.511329,-99) , 
NN(
0, 
0, 
-1, 0.726337, 1, -1, 0.425187,-99) , 
4, 1.02892, 0, 0, 0.484566,-99) , 
6, 0.714278, 0, 0, 0.510559,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0784499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499963,-99) , 
12, 0.302959, 1, 0, 0.579621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479521,-99) , 
2, 0.0716363, 0, 0, 0.491643,-99) , 
10, 1.2572, 0, 0, 0.503233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424546,-99) , 
6, 0.618967, 1, 0, 0.455887,-99) , 
11, -1.39441, 1, 0, 0.491503,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.088632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.87183, 0, 1, 0.600412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41831,-99) , 
11, -3.60811, 0, 0, 0.518384,-99) , 
6, 0.619039, 1, 0, 0.539942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496922,-99) , 
6, 0.829655, 1, 0, 0.533173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455894,-99) , 
1, -0.00218438, 1, 0, 0.469179,-99) , 
3, 12.0525, 0, 0, 0.495697,-99) , 
12, -0.474857, 1, 0, 0.515757,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0846132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499044, 1, 1, 0.559353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496315,-99) , 
9, 0.717697, 0, 0, 0.511034,-99) , 
9, -951.286, 1, 0, 0.528125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426799,-99) , 
0, 0.496187, 0, 0, 0.545445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429676,-99) , 
6, 0.714073, 1, 0, 0.476343,-99) , 
2, 0.0541421, 1, 0, 0.517599,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0854032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483673,-99) , 
6, 0.9047, 0, 0, 0.502189,-99) , 
11, -3.08746, 1, 0, 0.50788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401714,-99) , 
12, -1.65141, 1, 0, 0.465365,-99) , 
NN(
0, 
0, 
-1, 0.502528, 0, -1, 0.356583,-99) , 
0, 0.499989, 1, 0, 0.424489,-99) , 
10, -0.42822, 0, 0, 0.492046,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0772348);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621808,-99) , 
NN(
NN(
0, 
0, 
-1, 0.52366, 1, 1, 0.551382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468318,-99) , 
12, -0.345345, 1, 0, 0.495581,-99) , 
4, 3.77424, 0, 0, 0.507925,-99) , 
8, 19.3892, 0, 0, 0.515353,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.113543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500949, 0, 1, 0.595063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422607,-99) , 
0, 0.499996, 1, 0, 0.494915,-99) , 
4, 1.21175, 0, 0, 0.552684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443071,-99) , 
0, 0.499996, 1, 0, 0.555256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449987,-99) , 
10, 0.926138, 0, 0, 0.489667,-99) , 
12, -1.23253, 1, 0, 0.501915,-99) , 
6, 0.333315, 1, 0, 0.514255,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0891501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.338841, 0, 1, 0.548901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34836,-99) , 
2, 0.125075, 0, 0, 0.434352,-99) , 
2, 0.0579437, 1, 0, 0.522973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463844,-99) , 
10, 1.50737, 0, 0, 0.484113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380241,-99) , 
0, 0.491426, 0, 0, 0.475509,-99) , 
12, -0.46321, 1, 0, 0.496832,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0754485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.532458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430906,-99) , 
9, -951.286, 1, 0, 0.459866,-99) , 
10, -0.482446, 0, 0, 0.517573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447358,-99) , 
12, 0.68345, 1, 0, 0.506905,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0702823);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48621,-99) , 
0, 0.495324, 0, 0, 0.516695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411231,-99) , 
10, -0.143611, 1, 0, 0.443981,-99) , 
0, 0.503804, 1, 0, 0.507403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417331,-99) , 
3, 18.306, 1, 0, 0.502525,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0808416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412899,-99) , 
12, -0.914762, 1, 0, 0.56933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387007,-99) , 
12, -0.947356, 0, 0, 0.507195,-99) , 
11, -2.7241, 1, 0, 0.51418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567062,-99) , 
NN(
0, 
0, 
-1, 4.10346, 1, -1, 0.43239,-99) , 
8, 14.8576, 0, 0, 0.462603,-99) , 
10, -0.428728, 0, 0, 0.505578,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0497096);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489112, 0, 1, 0.585758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499871,-99) , 
6, 0.706881, 1, 0, 0.5104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382045,-99) , 
6, -0.559685, 1, 0, 0.466663,-99) , 
3, 8.97086, 0, 0, 0.499549,-99) , 
0, 0.490472, 1, 0, 0.504124,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0477432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453969,-99) , 
0, 0.500946, 1, 0, 0.487513,-99) , 
2, -0.14469, 1, 0, 0.495577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41408,-99) , 
2, -0.225164, 0, 0, 0.49088,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0913243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427744,-99) , 
3, 4.57396, 1, 0, 0.52429,-99) , 
8, 6.2889, 0, 0, 0.545241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475495,-99) , 
6, 0.86697, 1, 0, 0.500518,-99) , 
NN(
0, 
0, 
-1, 9.57855, 0, -1, 0.408727,-99) , 
6, 0.650812, 0, 0, 0.480684,-99) , 
6, -0.0475773, 1, 0, 0.492718,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.080614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.58342, 0, 1, 0.581242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472523,-99) , 
10, 0.996818, 1, 0, 0.535536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484267,-99) , 
11, -2.91936, 1, 0, 0.491883,-99) , 
NN(
0, 
0, 
-1, -1.16389, 1, -1, 0.410253,-99) , 
10, -0.429478, 0, 0, 0.475862,-99) , 
8, 15.0038, 0, 0, 0.489831,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.077022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.572388, 1, 1, 0.600641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479322,-99) , 
6, 0.809502, 1, 0, 0.533461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476569,-99) , 
6, 0.809489, 0, 0, 0.498036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352016,-99) , 
4, 3.08862, 1, 0, 0.489837,-99) , 
4, 3.40104, 0, 0, 0.50111,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.057094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.752866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475351,-99) , 
3, 5.20783, 0, 0, 0.516458,-99) , 
NN(
0, 
0, 
-1, 0.725436, 1, -1, 0.48355,-99) , 
6, -0.0476192, 1, 0, 0.490572,-99) , 
8, 20.7891, 0, 0, 0.495052,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0838578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459908,-99) , 
12, 0.639181, 1, 0, 0.51819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441729,-99) , 
8, 3.40778, 0, 0, 0.503582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455206,-99) , 
11, -1.61491, 1, 0, 0.491814,-99) , 
NN(
0, 
0, 
-1, 13.4466, 0, -1, 0.402434,-99) , 
11, -2.74139, 0, 0, 0.472054,-99) , 
8, 12.6579, 1, 0, 0.488171,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0821575);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 10.0783, 1, 1, 0.580568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491211,-99) , 
6, 0.852948, 1, 0, 0.518463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451088,-99) , 
1, 0.00544861, 0, 0, 0.462153,-99) , 
8, 11.2869, 0, 0, 0.498494,-99) , 
0, 0.503804, 0, 0, 0.506713,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0729136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449108,-99) , 
13, 3.78189, 1, 0, 0.52574,-99) , 
3, 5.01637, 0, 0, 0.553594,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464509,-99) , 
8, 11.6692, 0, 0, 0.506256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388693,-99) , 
1, -0.00539863, 0, 0, 0.502078,-99) , 
8, 8.58152, 1, 0, 0.512295,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0605027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.24654, 1, 1, 0.596813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453523,-99) , 
12, -0.746705, 0, 0, 0.554747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464469,-99) , 
8, 13.6775, 1, 0, 0.487019,-99) , 
8, 20.7702, 0, 0, 0.491954,-99) , 
8, 5.87607, 1, 0, 0.50194,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0890171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.1132, 0, 1, 0.553927,-99) , 
NN(
0, 
0, 
-1, -2.71112, 0, -1, 0.476113,-99) , 
9, -951.286, 0, 0, 0.5255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598437,-99) , 
NN(
0, 
0, 
-1, 9.01067, 0, -1, 0.460038,-99) , 
10, -0.701931, 1, 0, 0.475558,-99) , 
0, 0.497138, 0, 0, 0.505359,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0661179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494885,-99) , 
4, 2.76821, 0, 0, 0.541286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473745,-99) , 
10, 0.71319, 0, 0, 0.493613,-99) , 
3, 15.2164, 0, 0, 0.501114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563179,-99) , 
NN(
0, 
0, 
-1, 2.84007, 0, -1, 0.404267,-99) , 
6, -0.33321, 1, 0, 0.440426,-99) , 
0, 0.503805, 1, 0, 0.49408,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0739011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 14.2283, 1, 1, 0.559442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488571,-99) , 
3, 12.4715, 0, 0, 0.50141,-99) , 
8, 15.0009, 0, 0, 0.515842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427817,-99) , 
3, 12.0918, 1, 0, 0.469612,-99) , 
NN(
0, 
0, 
-1, 1.7694, 0, -1, 0.394384,-99) , 
6, 0.238122, 0, 0, 0.441861,-99) , 
0, 0.502852, 1, 0, 0.503313,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0853239);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.08698, 1, 1, 0.535042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429242,-99) , 
4, 3.7062, 0, 0, 0.461117,-99) , 
10, -1.52972, 1, 0, 0.485623,-99) , 
10, -0.428329, 0, 0, 0.526781,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0719954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.0013, 0, 1, 0.533289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441876,-99) , 
10, 1.45941, 0, 0, 0.49161,-99) , 
12, 0.06517, 1, 0, 0.518195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403712,-99) , 
2, 0.197352, 1, 0, 0.511161,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.063491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495533,-99) , 
3, 17.5667, 1, 0, 0.576568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490706,-99) , 
8, 6.19837, 1, 0, 0.505472,-99) , 
3, 15.2122, 0, 0, 0.514734,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453252,-99) , 
11, -2.57138, 0, 0, 0.487678,-99) , 
NN(
0, 
0, 
-1, -0.978943, 1, -1, 0.408679,-99) , 
0, 0.500267, 0, 0, 0.468021,-99) , 
0, 0.499043, 1, 0, 0.49383,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0873111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.244541, 0, 1, 0.600312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488503,-99) , 
6, 0.333263, 1, 0, 0.50483,-99) , 
0, 0.493328, 1, 0, 0.51997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545346,-99) , 
NN(
0, 
0, 
-1, -0.0476364, 1, -1, 0.446957,-99) , 
8, 14.7333, 0, 0, 0.471816,-99) , 
12, -0.349835, 1, 0, 0.495332,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.081374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452514,-99) , 
10, -0.54532, 0, 0, 0.522065,-99) , 
12, -2.01927, 1, 0, 0.5263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411352,-99) , 
5, 0.999525, 0, 0, 0.514988,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0790702);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.578721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492866,-99) , 
6, -0.873021, 0, 0, 0.545983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486506,-99) , 
10, 0.509715, 0, 0, 0.499138,-99) , 
NN(
0, 
0, 
-1, 0.497143, 0, -1, 0.453384,-99) , 
12, -0.497442, 1, 0, 0.474562,-99) , 
6, 0.333318, 1, 0, 0.491421,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0656817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238082, 1, 1, 0.518867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421803,-99) , 
2, 0.0491185, 0, 0, 0.454612,-99) , 
0, 0.492694, 0, 0, 0.508922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402136,-99) , 
3, 13.6217, 0, 0, 0.429718,-99) , 
6, -0.237966, 1, 0, 0.455016,-99) , 
0, 0.502852, 1, 0, 0.500434,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0708789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493601, 1, 1, 0.564251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499218,-99) , 
4, 0.602217, 1, 0, 0.513035,-99) , 
4, 3.41303, 0, 0, 0.526584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453356,-99) , 
8, 14.14, 1, 0, 0.497621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420263,-99) , 
12, 0.415807, 1, 0, 0.477937,-99) , 
0, 0.49809, 1, 0, 0.501497,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0760431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.81654, 0, 1, 0.593418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461095,-99) , 
12, -0.0164277, 1, 0, 0.491002,-99) , 
6, 0.56462, 1, 0, 0.500553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59993,-99) , 
NN(
0, 
0, 
-1, -0.233605, 1, -1, 0.431972,-99) , 
0, 0.493331, 1, 0, 0.458531,-99) , 
6, 0.238089, 0, 0, 0.490284,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.066062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619355,-99) , 
NN(
NN(
0, 
0, 
-1, -0.873007, 0, 1, 0.549472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461207,-99) , 
6, 0.845735, 0, 0, 0.481748,-99) , 
6, -0.619045, 1, 0, 0.491495,-99) , 
8, 20.7388, 0, 0, 0.496033,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0705945);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.73226, 0, 1, 0.531184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467003,-99) , 
10, 1.00049, 0, 0, 0.492004,-99) , 
8, 10.8998, 1, 0, 0.504184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397655,-99) , 
8, 20.7721, 1, 0, 0.499578,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0799665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493328, 1, 1, 0.517762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396921,-99) , 
11, -1.20942, 1, 0, 0.470031,-99) , 
10, 1.57119, 1, 0, 0.507314,-99) , 
NN(
0, 
0, 
-1, 0.432092, 1, -1, 0.436246,-99) , 
8, 16.6864, 1, 0, 0.496831,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0671921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.28267, 1, 1, 0.563057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449085,-99) , 
12, -0.575564, 1, 0, 0.474405,-99) , 
11, -1.11236, 0, 0, 0.482746,-99) , 
3, 15.2099, 0, 0, 0.494645,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0817085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404271,-99) , 
11, -2.38469, 0, 0, 0.525683,-99) , 
12, -1.34711, 1, 0, 0.538754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484034,-99) , 
10, 0.138016, 0, 0, 0.539787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461051,-99) , 
0, 0.499996, 0, 0, 0.477049,-99) , 
8, 6.32989, 1, 0, 0.489978,-99) , 
8, 15.3348, 0, 0, 0.500705,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0844441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497451,-99) , 
12, -1.72768, 1, 0, 0.506105,-99) , 
0, 0.497592, 0, 0, 0.516255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458881,-99) , 
6, 0.523785, 1, 0, 0.484774,-99) , 
NN(
0, 
0, 
-1, -0.349909, 0, -1, 0.416908,-99) , 
9, -951.286, 0, 0, 0.458925,-99) , 
0, 0.498091, 1, 0, 0.486125,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0870663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452127,-99) , 
2, -0.0804514, 0, 0, 0.509097,-99) , 
6, 0.413728, 1, 0, 0.513941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371635,-99) , 
12, 0.06188, 0, 0, 0.423515,-99) , 
8, 3.36589, 1, 0, 0.464654,-99) , 
3, 9.00179, 0, 0, 0.501592,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.084237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497043,-99) , 
8, 4.71545, 0, 0, 0.555102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436183,-99) , 
0, 0.499971, 0, 0, 0.486937,-99) , 
8, 13.4596, 1, 0, 0.532153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490744,-99) , 
0, 0.502852, 0, 0, 0.498988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290366,-99) , 
9, -1.56952, 0, 0, 0.482853,-99) , 
9, -951.286, 1, 0, 0.499936,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.102504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.29569, 0, 1, 0.580765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391749,-99) , 
0, 0.502535, 0, 0, 0.456422,-99) , 
0, 0.499995, 1, 0, 0.535075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489172,-99) , 
3, 14.1574, 0, 0, 0.503521,-99) , 
NN(
0, 
0, 
-1, -1.3102, 0, -1, 0.444319,-99) , 
9, -951.286, 1, 0, 0.465132,-99) , 
12, -1.13149, 1, 0, 0.47881,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0815405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.6721, 0, 1, 0.543551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487027,-99) , 
6, 0.904749, 1, 0, 0.528519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457825,-99) , 
0, 0.502626, 1, 0, 0.545104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453401,-99) , 
6, 0.904662, 0, 0, 0.469416,-99) , 
2, -0.0904988, 1, 0, 0.480035,-99) , 
0, 0.497138, 1, 0, 0.499138,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.083306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434384,-99) , 
8, 11.2982, 1, 0, 0.488134,-99) , 
6, 0.809273, 0, 0, 0.505203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476586,-99) , 
11, -2.33836, 1, 0, 0.499967,-99) , 
NN(
0, 
0, 
-1, 15.02, 1, -1, 0.433474,-99) , 
3, 14.806, 0, 0, 0.460282,-99) , 
3, 12.1053, 1, 0, 0.485904,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0728496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.29788, 1, 1, 0.564437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490879,-99) , 
8, 14.0069, 0, 0, 0.508944,-99) , 
0, 0.494282, 1, 0, 0.51937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463447,-99) , 
1, 0.000147137, 0, 0, 0.510031,-99) , 
NN(
0, 
0, 
-1, -3.14945, 0, -1, 0.435066,-99) , 
12, -1.70813, 1, 0, 0.460846,-99) , 
10, -0.142918, 0, 0, 0.505444,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0920131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446,-99) , 
5, 0.999906, 0, 0, 0.554827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450468,-99) , 
4, 3.41781, 1, 0, 0.49811,-99) , 
6, 0.727879, 1, 0, 0.519337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433544,-99) , 
6, -0.904754, 0, 0, 0.512288,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0742137);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502851, 0, 1, 0.577736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480491,-99) , 
4, 3.7668, 0, 0, 0.496851,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.389999,-99) , 
3, 7.37047, 0, 0, 0.490305,-99) , 
6, -0.619034, 1, 0, 0.502139,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0937123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.11556, 1, 1, 0.542076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442224,-99) , 
11, -0.91294, 0, 0, 0.466629,-99) , 
12, 0.234961, 1, 0, 0.516836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513139,-99) , 
NN(
0, 
0, 
-1, 0.497132, 1, -1, 0.387504,-99) , 
0, 0.50094, 0, 0, 0.417445,-99) , 
11, -3.27239, 0, 0, 0.505798,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0544453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475431,-99) , 
3, 12.1409, 0, 0, 0.493694,-99) , 
7, 0.00653844, 0, 0, 0.498744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398804,-99) , 
7, 0.0124849, 1, 0, 0.495616,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.06331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49079, 1, 1, 0.587041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461208,-99) , 
3, 12.1053, 1, 0, 0.486722,-99) , 
0, 0.492377, 1, 0, 0.496735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407203,-99) , 
5, 0.999525, 0, 0, 0.488497,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0675479);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.22268, 1, 1, 0.550365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579457,-99) , 
NN(
0, 
0, 
-1, 0.904725, 1, -1, 0.475006,-99) , 
10, 1.41973, 0, 0, 0.483812,-99) , 
12, 0.501997, 0, 0, 0.497064,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0469671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55461, 0, 1, 0.517627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465089,-99) , 
11, -1.11788, 1, 0, 0.508283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416736,-99) , 
0, 0.505709, 1, 0, 0.504236,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0961072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498106, 1, 1, 0.650978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462118,-99) , 
0, 0.494281, 0, 0, 0.510838,-99) , 
10, 0.896247, 0, 0, 0.524088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469986,-99) , 
9, -951.286, 0, 0, 0.537815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423712,-99) , 
9, -951.286, 1, 0, 0.451859,-99) , 
3, 9.92443, 1, 0, 0.479681,-99) , 
12, -0.0715851, 1, 0, 0.506437,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0683112);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498927,-99) , 
0, 0.496321, 1, 0, 0.522587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42566,-99) , 
10, 1.96965, 0, 0, 0.464707,-99) , 
12, 0.446957, 1, 0, 0.509401,-99) , 
NN(
0, 
0, 
-1, -0.0446237, 0, -1, 0.426509,-99) , 
0, 0.502852, 1, 0, 0.496103,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0849283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.345345, 1, 1, 0.550932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442195,-99) , 
0, 0.504757, 1, 0, 0.538592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475882,-99) , 
0, 0.494554, 1, 0, 0.487366,-99) , 
NN(
0, 
0, 
-1, 0.00205243, 0, -1, 0.39321,-99) , 
0, 0.492377, 0, 0, 0.476578,-99) , 
8, 10.9486, 1, 0, 0.494421,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0835811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000923699, 0, 1, 0.607311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48694,-99) , 
10, -0.673497, 0, 0, 0.516777,-99) , 
3, 11.1235, 1, 0, 0.555221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493356,-99) , 
9, -951.286, 0, 0, 0.573857,-99) , 
NN(
0, 
0, 
-1, -1.5516, 0, -1, 0.466894,-99) , 
11, -2.81836, 1, 0, 0.4761,-99) , 
10, -0.428728, 1, 0, 0.488731,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0656554);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467525,-99) , 
3, 5.17864, 0, 0, 0.510256,-99) , 
NN(
0, 
0, 
-1, 10.1539, 0, -1, 0.459443,-99) , 
0, 0.496185, 0, 0, 0.493666,-99) , 
8, 19.3902, 0, 0, 0.500404,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0516513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465234,-99) , 
12, -1.83472, 1, 0, 0.546984,-99) , 
10, -0.602019, 0, 0, 0.579526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492947,-99) , 
3, 17.2661, 0, 0, 0.497704,-99) , 
0, 0.490472, 1, 0, 0.5027,-99) , 
12, -1.42232, 1, 0, 0.512674,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0959279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.00057, 1, 1, 0.552327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456635,-99) , 
4, 1.05827, 0, 0, 0.491686,-99) , 
0, 0.499042, 1, 0, 0.525679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471561,-99) , 
0, 0.498083, 0, 0, 0.545197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416883,-99) , 
8, 15.9184, 0, 0, 0.436561,-99) , 
2, -0.0843733, 1, 0, 0.468011,-99) , 
4, 3.40104, 1, 0, 0.509407,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0628619);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.0421, 1, 1, 0.611912,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47213,-99) , 
10, 0.957415, 1, 0, 0.494342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393918,-99) , 
10, -0.573923, 0, 0, 0.488221,-99) , 
12, -1.71273, 1, 0, 0.497242,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0827911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414882,-99) , 
8, 6.37491, 1, 0, 0.470239,-99) , 
6, 0.71424, 0, 0, 0.539114,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482183,-99) , 
2, -0.00995351, 1, 0, 0.501966,-99) , 
NN(
0, 
0, 
-1, -0.00134626, 0, -1, 0.445543,-99) , 
2, -0.0871645, 0, 0, 0.491621,-99) , 
2, 0.0602445, 0, 0, 0.500487,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.088672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.732872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466511,-99) , 
9, -951.286, 0, 0, 0.522867,-99) , 
12, -0.34021, 1, 0, 0.538479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454394,-99) , 
11, -2.20295, 1, 0, 0.500489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403684,-99) , 
4, 2.04383, 0, 0, 0.450815,-99) , 
0, 0.5019, 1, 0, 0.490241,-99) , 
10, 0.714431, 0, 0, 0.513197,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0575928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483402,-99) , 
4, 1.86456, 1, 0, 0.504533,-99) , 
4, 7.41939, 0, 0, 0.509521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423499,-99) , 
3, 18.3101, 1, 0, 0.505092,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0892533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479804,-99) , 
10, 2.09198, 1, 0, 0.559082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467563,-99) , 
6, 0.619033, 1, 0, 0.48507,-99) , 
10, 1.54219, 0, 0, 0.495928,-99) , 
11, -1.31114, 0, 0, 0.510099,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0837721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452452,-99) , 
2, 0.0245787, 1, 0, 0.525451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482094,-99) , 
0, 0.492376, 1, 0, 0.491588,-99) , 
2, -0.0176559, 0, 0, 0.510986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465952,-99) , 
3, 11.8461, 0, 0, 0.491038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374645,-99) , 
3, 14.183, 1, 0, 0.461378,-99) , 
2, 0.0562529, 1, 0, 0.500983,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0777446);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482297,-99) , 
0, 0.499042, 1, 0, 0.5757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476353,-99) , 
1, 0.00275002, 0, 0, 0.486714,-99) , 
7, 0.00525068, 0, 0, 0.494101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277962,-99) , 
7, 0.013785, 1, 0, 0.488687,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0869064);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.07266, 1, 1, 0.542081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449745,-99) , 
0, 0.492387, 0, 0, 0.549306,-99) , 
NN(
0, 
0, 
-1, 11.1345, 0, -1, 0.466982,-99) , 
9, -951.286, 1, 0, 0.495884,-99) , 
10, 0.714099, 0, 0, 0.517811,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0623516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.748131, 1, 1, 0.52562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443636,-99) , 
0, 0.497137, 0, 0, 0.486694,-99) , 
3, 11.0109, 0, 0, 0.507123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503262,-99) , 
NN(
0, 
0, 
-1, 16.0548, 0, -1, 0.422407,-99) , 
8, 19.2617, 0, 0, 0.456928,-99) , 
8, 16.6891, 1, 0, 0.499894,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0953457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.103347, 0, 1, 0.57712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41942,-99) , 
12, -1.96671, 1, 0, 0.48597,-99) , 
10, -0.827571, 0, 0, 0.551822,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475283,-99) , 
0, 0.499996, 1, 0, 0.514924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457036,-99) , 
6, 0.904739, 1, 0, 0.500807,-99) , 
12, -0.788759, 1, 0, 0.517265,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.085156);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.1764, 1, 1, 0.534546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416609,-99) , 
0, 0.490474, 0, 0, 0.52739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44011,-99) , 
9, -951.286, 0, 0, 0.492299,-99) , 
NN(
0, 
0, 
-1, 0.499041, 0, -1, 0.382962,-99) , 
3, 9.99857, 0, 0, 0.451782,-99) , 
10, -0.429478, 0, 0, 0.513885,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0844724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469521,-99) , 
4, 2.22624, 1, 0, 0.51,-99) , 
NN(
0, 
0, 
-1, 0.4981, 1, -1, 0.466648,-99) , 
6, 0.904738, 1, 0, 0.498731,-99) , 
NN(
0, 
0, 
-1, 10.0641, 0, -1, 0.398947,-99) , 
10, -1.00068, 0, 0, 0.491039,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0756673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477418,-99) , 
2, -0.008304, 0, 0, 0.522681,-99) , 
10, 1.28673, 0, 0, 0.555912,-99) , 
NN(
NN(
0, 
0, 
-1, 0.809725, 1, 1, 0.538762,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.479166,-99) , 
4, 3.2544, 0, 0, 0.496552,-99) , 
0, 0.500947, 0, 0, 0.512515,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0510134);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53628,-99) , 
NN(
0, 
0, 
-1, 0.0288488, 1, -1, 0.481133,-99) , 
11, -1.33808, 0, 0, 0.490255,-99) , 
10, 2.14133, 0, 0, 0.496961,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0693613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.151417, 0, 1, 0.590903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450882,-99) , 
4, 1.63491, 0, 0, 0.517163,-99) , 
4, 2.77095, 0, 0, 0.562047,-99) , 
NN(
NN(
0, 
0, 
-1, -2.50608, 1, 1, 0.512608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428556,-99) , 
0, 0.496179, 1, 0, 0.467365,-99) , 
10, -0.143551, 0, 0, 0.501634,-99) , 
2, -0.0843733, 1, 0, 0.510101,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0750764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486023,-99) , 
6, 0.750567, 1, 0, 0.498146,-99) , 
0, 0.502852, 0, 0, 0.506393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454119,-99) , 
0, 0.499041, 1, 0, 0.52738,-99) , 
NN(
0, 
0, 
-1, -0.201815, 1, -1, 0.43546,-99) , 
12, -0.974486, 1, 0, 0.452605,-99) , 
6, 0.523795, 0, 0, 0.490589,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.109442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.02803, 0, 1, 0.563837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450088,-99) , 
11, -1.3575, 1, 0, 0.496819,-99) , 
10, 1.28707, 1, 0, 0.544728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39432,-99) , 
9, -1.30898, 0, 0, 0.511558,-99) , 
NN(
0, 
0, 
-1, -0.396157, 0, -1, 0.436524,-99) , 
9, -951.286, 0, 0, 0.482621,-99) , 
0, 0.49809, 1, 0, 0.51198,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0847979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489835,-99) , 
4, 2.4419, 1, 0, 0.535441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437207,-99) , 
12, 0.381428, 1, 0, 0.498668,-99) , 
3, 13.1365, 0, 0, 0.510187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427575,-99) , 
4, 3.77927, 0, 0, 0.447422,-99) , 
3, 15.1657, 0, 0, 0.46163,-99) , 
0, 0.495233, 0, 0, 0.496991,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.0328283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498783,-99) , 
4, 3.77424, 0, 0, 0.507172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446174,-99) , 
2, 0.190568, 1, 0, 0.503254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406359,-99) , 
3, 18.2988, 1, 0, 0.498011,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.10211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.600677, 1, 1, 0.614315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490769,-99) , 
6, -0.523609, 0, 0, 0.57891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44542,-99) , 
11, -0.846632, 1, 0, 0.52602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460242,-99) , 
3, 13.1863, 0, 0, 0.482108,-99) , 
11, -1.68997, 0, 0, 0.497505,-99) , 
0, 0.492377, 1, 0, 0.505959,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0923817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.560888, 1, 1, 0.568922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457488,-99) , 
0, 0.50095, 0, 0, 0.494006,-99) , 
3, 5.41711, 0, 0, 0.536792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548114,-99) , 
NN(
0, 
0, 
-1, -0.419634, 0, -1, 0.466631,-99) , 
5, 0.999525, 1, 0, 0.480397,-99) , 
6, 0.714265, 1, 0, 0.502753,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0577817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489872,-99) , 
6, -0.0476913, 1, 0, 0.501909,-99) , 
10, 1.28488, 0, 0, 0.51047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443612,-99) , 
6, 0.523803, 1, 0, 0.468374,-99) , 
12, 0.362386, 1, 0, 0.499416,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0639822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494928,-99) , 
10, 2.05178, 1, 0, 0.550586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487079,-99) , 
12, -0.747478, 0, 0, 0.572516,-99) , 
NN(
0, 
0, 
-1, 9.94539, 0, -1, 0.481907,-99) , 
6, -0.714243, 1, 0, 0.492634,-99) , 
11, -1.26371, 0, 0, 0.505189,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0718315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490153, 0, 1, 0.651668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436703,-99) , 
3, 18.3073, 1, 0, 0.520638,-99) , 
0, 0.491424, 1, 0, 0.530385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459407,-99) , 
6, 0.33333, 1, 0, 0.475578,-99) , 
12, 0.298096, 1, 0, 0.515693,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0897491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476836,-99) , 
12, 0.297347, 0, 0, 0.495244,-99) , 
6, 0.904736, 0, 0, 0.515027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531555,-99) , 
NN(
0, 
0, 
-1, 0.755075, 0, -1, 0.436466,-99) , 
6, -0.714192, 1, 0, 0.450126,-99) , 
0, 0.495233, 0, 0, 0.49764,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0743062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.144522, 0, 1, 0.548451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477839,-99) , 
0, 0.499043, 1, 0, 0.508791,-99) , 
2, -0.011451, 1, 0, 0.522745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438333,-99) , 
6, 0.708534, 1, 0, 0.460722,-99) , 
4, 5.80978, 1, 0, 0.516133,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0681763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430705,-99) , 
13, 13.3228, 1, 0, 0.566788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54389,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.478256,-99) , 
10, 2.15739, 0, 0, 0.485411,-99) , 
11, -3.26614, 1, 0, 0.492932,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.066956);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.05284, 1, 1, 0.562341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49943,-99) , 
6, 0.809325, 1, 0, 0.550955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446798,-99) , 
0, 0.497593, 0, 0, 0.489598,-99) , 
0, 0.495235, 1, 0, 0.504762,-99) , 
11, -1.31114, 0, 0, 0.517712,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0532255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490335, 1, 1, 0.5909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498415,-99) , 
9, -951.286, 0, 0, 0.555898,-99) , 
NN(
NN(
0, 
0, 
-1, 0.501533, 1, 1, 0.526643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429044,-99) , 
3, 9.02994, 0, 0, 0.490391,-99) , 
0, 0.499632, 0, 0, 0.505791,-99) , 
0, 0.492376, 1, 0, 0.510936,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0806194);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.333293, 1, 1, 0.530884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503212,-99) , 
NN(
0, 
0, 
-1, 0.479273, 1, -1, 0.42455,-99) , 
0, 0.500946, 0, 0, 0.445956,-99) , 
12, 0.015409, 1, 0, 0.499042,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0827527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.1956, 0, 1, 0.536509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447777,-99) , 
10, 0.42948, 1, 0, 0.481649,-99) , 
2, 0.0501505, 1, 0, 0.524838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538137,-99) , 
NN(
0, 
0, 
-1, 0.504928, 1, -1, 0.416192,-99) , 
0, 0.506163, 0, 0, 0.445555,-99) , 
0, 0.503805, 1, 0, 0.516019,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0638942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462078,-99) , 
10, 0.157611, 0, 0, 0.574921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480056,-99) , 
8, 14.8596, 1, 0, 0.511967,-99) , 
4, 5.82934, 0, 0, 0.518392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450294,-99) , 
5, 0.999525, 0, 0, 0.510897,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0691587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495738,-99) , 
0, 0.496184, 1, 0, 0.527769,-99) , 
NN(
0, 
0, 
-1, 9.96265, 0, -1, 0.473095,-99) , 
1, -0.000654086, 1, 0, 0.493265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301441,-99) , 
7, 0.013785, 1, 0, 0.487414,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0696004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474626,-99) , 
3, 3.8561, 0, 0, 0.563819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463404,-99) , 
10, 0.144345, 0, 0, 0.498789,-99) , 
7, 0.00356523, 0, 0, 0.509647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407494,-99) , 
7, 0.012485, 1, 0, 0.506757,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0865859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.679387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448068,-99) , 
8, 11.37, 0, 0, 0.512407,-99) , 
11, -2.87552, 1, 0, 0.5397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476201,-99) , 
0, 0.492376, 1, 0, 0.485159,-99) , 
NN(
0, 
0, 
-1, 2.13985, 0, -1, 0.422659,-99) , 
12, 0.500759, 1, 0, 0.471609,-99) , 
2, -0.0829858, 1, 0, 0.482538,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0638696);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497139, 0, 1, 0.561848,-99) , 
NN(
NN(
0, 
0, 
-1, -0.296285, 1, 1, 0.519535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462571,-99) , 
11, -2.15552, 0, 0, 0.476085,-99) , 
10, 0.712914, 0, 0, 0.496319,-99) , 
3, 16.2357, 0, 0, 0.503171,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0857221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237897, 1, 1, 0.558897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454317,-99) , 
0, 0.503803, 1, 0, 0.545483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486279,-99) , 
6, 0.891172, 1, 0, 0.51642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461372,-99) , 
8, 15.4333, 0, 0, 0.468172,-99) , 
6, 0.809515, 0, 0, 0.489046,-99) , 
12, -0.984241, 1, 0, 0.503423,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0566025);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48446,-99) , 
2, 0.0379854, 0, 0, 0.495082,-99) , 
3, 18.306, 0, 0, 0.499923,-99) , 
2, 0.198631, 0, 0, 0.505774,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0630481);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42848,-99) , 
7, 0.00927905, 1, 0, 0.523121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454083,-99) , 
2, 0.119052, 1, 0, 0.519056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451477,-99) , 
2, 0.199376, 1, 0, 0.514936,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0399974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.36476, 0, 1, 0.564382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383313,-99) , 
3, 7.17451, 0, 0, 0.499049,-99) , 
8, 5.87989, 1, 0, 0.509206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391636,-99) , 
10, -1.57128, 0, 0, 0.504795,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0638143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00057449, 0, 1, 0.593768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497597,-99) , 
0, 0.498072, 1, 0, 0.531344,-99) , 
3, 17.1765, 0, 0, 0.563026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483723,-99) , 
8, 14.5228, 0, 0, 0.492333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392812,-99) , 
8, 15.8596, 1, 0, 0.48558,-99) , 
3, 15.2099, 0, 0, 0.49613,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0680957);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492745,-99) , 
11, -1.45767, 1, 0, 0.525585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45187,-99) , 
12, -0.319762, 1, 0, 0.483916,-99) , 
4, 2.63054, 1, 0, 0.509242,-99) , 
0, 0.489519, 1, 0, 0.513175,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0592474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497165,-99) , 
6, 0.714267, 1, 0, 0.514256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427082,-99) , 
2, -0.218939, 0, 0, 0.508179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454818,-99) , 
10, 0.42948, 1, 0, 0.508553,-99) , 
NN(
0, 
0, 
-1, 1.47257, 0, -1, 0.426378,-99) , 
4, 3.18144, 0, 0, 0.464795,-99) , 
2, 0.0731625, 1, 0, 0.500845,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.048495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640658,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428958,-99) , 
8, 19.3267, 1, 0, 0.506622,-99) , 
0, 0.499995, 0, 0, 0.5521,-99) , 
NN(
NN(
0, 
0, 
-1, 14.8664, 0, 1, 0.510921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475668,-99) , 
6, 0.904758, 1, 0, 0.502918,-99) , 
3, 16.2396, 0, 0, 0.508198,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.078358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.78224, 1, 1, 0.550266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402448,-99) , 
10, 1.0949, 0, 0, 0.482559,-99) , 
12, -0.258004, 1, 0, 0.519135,-99) , 
NN(
0, 
0, 
-1, 3.67937, 1, -1, 0.453384,-99) , 
6, -0.523818, 0, 0, 0.50747,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.088963);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465639,-99) , 
0, 0.490884, 0, 0, 0.534532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420062,-99) , 
8, 13.4978, 0, 0, 0.466488,-99) , 
4, 3.75356, 1, 0, 0.518074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495927,-99) , 
4, 2.4827, 0, 0, 0.547826,-99) , 
NN(
0, 
0, 
-1, 2.23529, 0, -1, 0.457567,-99) , 
0, 0.504347, 0, 0, 0.474229,-99) , 
0, 0.499042, 1, 0, 0.499177,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0703876);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494031,-99) , 
11, -2.85559, 1, 0, 0.527285,-99) , 
NN(
0, 
0, 
-1, 11.6696, 0, -1, 0.468769,-99) , 
8, 5.87989, 1, 0, 0.478654,-99) , 
4, 7.39984, 0, 0, 0.484585,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0852434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.42665, 0, 1, 0.586029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425794,-99) , 
12, -1.18906, 0, 0, 0.556411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471814,-99) , 
12, -0.0285377, 1, 0, 0.506891,-99) , 
NN(
0, 
0, 
-1, 0.365894, 1, -1, 0.420542,-99) , 
3, 9.98902, 0, 0, 0.497444,-99) , 
6, -0.142814, 1, 0, 0.508628,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0798352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502308, 1, 1, 0.56141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388069,-99) , 
12, -1.78121, 0, 0, 0.496269,-99) , 
9, -951.286, 1, 0, 0.518575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489238,-99) , 
10, -0.543268, 0, 0, 0.528433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445368,-99) , 
10, 1.50643, 0, 0, 0.468466,-99) , 
10, -0.135968, 1, 0, 0.481849,-99) , 
0, 0.499043, 0, 0, 0.497648,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0524231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491456,-99) , 
8, 11.0488, 1, 0, 0.507736,-99) , 
4, 5.68412, 0, 0, 0.512409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435381,-99) , 
4, 7.42073, 1, 0, 0.507496,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0765948);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.7438, 1, 1, 0.659766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490038,-99) , 
11, -2.66119, 0, 0, 0.513783,-99) , 
10, 0.141452, 0, 0, 0.541482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480804,-99) , 
0, 0.497455, 1, 0, 0.494907,-99) , 
NN(
0, 
0, 
-1, 0.888438, 0, -1, 0.443537,-99) , 
0, 0.494281, 0, 0, 0.484246,-99) , 
12, -0.702943, 1, 0, 0.503963,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0749067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482734,-99) , 
6, 0.523765, 1, 0, 0.513082,-99) , 
12, -0.275407, 0, 0, 0.553623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474059,-99) , 
12, 0.406609, 1, 0, 0.513973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408701,-99) , 
0, 0.494916, 0, 0, 0.508672,-99) , 
0, 0.494281, 1, 0, 0.51769,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0631315);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523742, 1, 1, 0.580819,-99) , 
NN(
NN(
0, 
0, 
-1, 1.19167, 0, 1, 0.52378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445067,-99) , 
8, 13.1366, 0, 0, 0.474398,-99) , 
11, -1.49062, 1, 0, 0.509425,-99) , 
0, 0.503804, 0, 0, 0.517073,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0551887);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437772,-99) , 
10, -0.12384, 0, 0, 0.531101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474884,-99) , 
11, -2.11364, 1, 0, 0.491942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389865,-99) , 
2, -0.220886, 0, 0, 0.486405,-99) , 
3, 16.2279, 0, 0, 0.491461,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0607398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 15.8911, 1, 1, 0.577463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492443,-99) , 
12, -1.2333, 1, 0, 0.503267,-99) , 
3, 13.7943, 0, 0, 0.514159,-99) , 
NN(
0, 
0, 
-1, 14.709, 1, -1, 0.454525,-99) , 
6, 0.904747, 1, 0, 0.498568,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0614048);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490978,-99) , 
10, 1.84006, 0, 0, 0.498831,-99) , 
NN(
0, 
0, 
-1, 15.4746, 0, -1, 0.422428,-99) , 
8, 16.3182, 1, 0, 0.485877,-99) , 
11, -0.903471, 0, 0, 0.495245,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0686809);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611998,-99) , 
NN(
NN(
0, 
0, 
-1, -0.423978, 0, 1, 0.555842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399313,-99) , 
3, 9.65281, 0, 0, 0.510194,-99) , 
8, 9.25799, 1, 0, 0.520183,-99) , 
3, 18.273, 0, 0, 0.524758,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.102119);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493806,-99) , 
3, 16.5444, 1, 0, 0.569271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467657,-99) , 
6, 0.333312, 1, 0, 0.502014,-99) , 
8, 13.5596, 0, 0, 0.527907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450239,-99) , 
6, -0.836736, 0, 0, 0.513183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442792,-99) , 
3, 15.6908, 0, 0, 0.460687,-99) , 
6, 0.714263, 1, 0, 0.481883,-99) , 
0, 0.497138, 1, 0, 0.49991,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.105165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436312,-99) , 
3, 10.6503, 0, 0, 0.529993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457366,-99) , 
12, -1.46234, 1, 0, 0.477805,-99) , 
8, 14.8854, 1, 0, 0.510116,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434381,-99) , 
12, -0.775104, 0, 0, 0.513319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428797,-99) , 
11, -2.74256, 1, 0, 0.449639,-99) , 
0, 0.500948, 0, 0, 0.467708,-99) , 
8, 11.2831, 0, 0, 0.4956,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0576441);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594808,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488983,-99) , 
11, -3.27288, 1, 0, 0.495843,-99) , 
NN(
0, 
0, 
-1, 14.1813, 1, -1, 0.462438,-99) , 
0, 0.499043, 1, 0, 0.480714,-99) , 
10, -1.28636, 1, 0, 0.485085,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0625662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.23279, 1, 1, 0.563412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455388,-99) , 
6, 0.906965, 1, 0, 0.491876,-99) , 
8, 5.84776, 1, 0, 0.50252,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443214,-99) , 
10, -1.47629, 0, 0, 0.485517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305478,-99) , 
6, -0.523862, 0, 0, 0.427795,-99) , 
10, -1.0001, 0, 0, 0.496545,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0773889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.539368, 1, 1, 0.530215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442901,-99) , 
0, 0.503804, 1, 0, 0.520185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585868,-99) , 
NN(
0, 
0, 
-1, 6.64934, 0, -1, 0.460542,-99) , 
6, -0.809531, 1, 0, 0.477373,-99) , 
10, 0.428324, 0, 0, 0.50182,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0485375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487529,-99) , 
12, -0.0781661, 1, 0, 0.507721,-99) , 
4, 6.00992, 0, 0, 0.511773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437379,-99) , 
4, 7.39984, 1, 0, 0.507259,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0507173);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.11796, 1, 1, 0.582508,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499851,-99) , 
10, 0.738118, 1, 0, 0.530649,-99) , 
NN(
0, 
0, 
-1, 0.501899, 1, -1, 0.481647,-99) , 
8, 15.3745, 0, 0, 0.492669,-99) , 
12, -1.73893, 1, 0, 0.498788,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0987241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402917,-99) , 
9, -1.28216, 0, 0, 0.529542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437731,-99) , 
6, 0.428384, 1, 0, 0.476156,-99) , 
9, -951.286, 0, 0, 0.507663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430537,-99) , 
9, -951.286, 1, 0, 0.453164,-99) , 
8, 19.5161, 0, 0, 0.467827,-99) , 
8, 13.5596, 1, 0, 0.492119,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0912281);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.351299, 1, 1, 0.540704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471127,-99) , 
10, 0.056027, 0, 0, 0.502233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366069,-99) , 
3, 4.63724, 1, 0, 0.436152,-99) , 
3, 10.1086, 0, 0, 0.480805,-99) , 
11, -2.29059, 0, 0, 0.51625,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0779375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473499,-99) , 
0, 0.498094, 0, 0, 0.508741,-99) , 
0, 0.494282, 1, 0, 0.517047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476084,-99) , 
0, 0.503804, 0, 0, 0.491606,-99) , 
NN(
0, 
0, 
-1, 0.000179004, 0, -1, 0.412281,-99) , 
10, 1.5703, 1, 0, 0.472926,-99) , 
6, 0.71427, 0, 0, 0.498761,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0975808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490694,-99) , 
12, -0.943405, 0, 0, 0.560365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43417,-99) , 
0, 0.50512, 1, 0, 0.473933,-99) , 
0, 0.502852, 1, 0, 0.542589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.678026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480522,-99) , 
3, 13.4338, 0, 0, 0.546525,-99) , 
NN(
0, 
0, 
-1, -0.669864, 1, -1, 0.459412,-99) , 
12, -1.55335, 1, 0, 0.470491,-99) , 
8, 11.0746, 1, 0, 0.491839,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0835274);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.696133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44498,-99) , 
2, -0.0816723, 0, 0, 0.517215,-99) , 
NN(
0, 
0, 
-1, 0.961418, 0, -1, 0.458637,-99) , 
6, 0.714273, 0, 0, 0.493117,-99) , 
11, -3.86157, 1, 0, 0.498085,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0787022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.21083, 1, 1, 0.547312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387174,-99) , 
8, 18.784, 1, 0, 0.506435,-99) , 
10, 0.428324, 0, 0, 0.529787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443911,-99) , 
5, 0.999525, 0, 0, 0.521442,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0664032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.8552, 0, 1, 0.528645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433123,-99) , 
6, 0.814033, 1, 0, 0.483248,-99) , 
6, 0.904738, 0, 0, 0.495289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47205,-99) , 
4, 2.52019, 0, 0, 0.509363,-99) , 
NN(
0, 
0, 
-1, 0.0492921, 0, -1, 0.411248,-99) , 
2, -0.0214854, 1, 0, 0.441185,-99) , 
0, 0.501898, 1, 0, 0.483265,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0988795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.997999, 1, 1, 0.607672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444327,-99) , 
0, 0.495234, 1, 0, 0.506243,-99) , 
0, 0.499043, 0, 0, 0.553348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458042,-99) , 
10, -0.140407, 0, 0, 0.530384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4673,-99) , 
8, 10.0636, 1, 0, 0.476953,-99) , 
3, 12.7834, 0, 0, 0.498918,-99) , 
6, -0.0476329, 1, 0, 0.508869,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.103639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.697515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464496,-99) , 
8, 15.0531, 1, 0, 0.52064,-99) , 
10, 0.941185, 0, 0, 0.533077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467594,-99) , 
10, 1.60198, 0, 0, 0.502299,-99) , 
NN(
0, 
0, 
-1, 0.499985, 1, -1, 0.446687,-99) , 
11, -1.44424, 1, 0, 0.467552,-99) , 
12, -0.0887548, 1, 0, 0.504946,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.104928);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00181376, 1, 1, 0.582759,-99) , 
NN(
NN(
0, 
0, 
-1, 3.23345, 0, 1, 0.52807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44421,-99) , 
10, 1.27208, 0, 0, 0.460957,-99) , 
11, -1.72266, 0, 0, 0.489255,-99) , 
12, -1.44137, 1, 0, 0.500925,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0751383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484245,-99) , 
0, 0.499994, 1, 0, 0.597799,-99) , 
NN(
0, 
0, 
-1, -1.81878, 1, 1, 0.521588,-99) , 
10, 0.430584, 1, 0, 0.547274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476387,-99) , 
3, 10.5212, 0, 0, 0.504912,-99) , 
NN(
0, 
0, 
-1, -3.01511, 0, -1, 0.437269,-99) , 
8, 14.0156, 1, 0, 0.494077,-99) , 
3, 14.1779, 0, 0, 0.505272,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.082171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485569,-99) , 
0, 0.493328, 1, 0, 0.500241,-99) , 
11, -1.46746, 0, 0, 0.522285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478419,-99) , 
10, 0.809924, 0, 0, 0.500384,-99) , 
NN(
0, 
0, 
-1, 14.4809, 0, -1, 0.453066,-99) , 
11, -1.78692, 1, 0, 0.479877,-99) , 
3, 11.0915, 1, 0, 0.49688,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0655007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428087, 1, 1, 0.55573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479641,-99) , 
9, -951.286, 1, 0, 0.494727,-99) , 
8, 14.666, 0, 0, 0.505781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427102,-99) , 
8, 14.579, 1, 0, 0.463088,-99) , 
6, 0.904738, 1, 0, 0.494125,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.553052, 1, 1, 0.513882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401993,-99) , 
6, 0.61897, 0, 0, 0.47309,-99) , 
4, 3.22774, 1, 0, 0.501597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432815,-99) , 
12, 1.06955, 1, 0, 0.495584,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0755364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492939,-99) , 
8, 8.99356, 0, 0, 0.535137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475041,-99) , 
0, 0.496186, 1, 0, 0.493171,-99) , 
6, 0.714275, 1, 0, 0.509495,-99) , 
NN(
0, 
0, 
-1, 0.000522824, 1, -1, 0.399181,-99) , 
0, 0.490471, 0, 0, 0.503069,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0672022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489716,-99) , 
11, -2.38994, 0, 0, 0.583264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373774,-99) , 
0, 0.503032, 1, 0, 0.513793,-99) , 
0, 0.503803, 0, 0, 0.521624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462277,-99) , 
12, 0.697186, 1, 0, 0.512112,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0566311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487708,-99) , 
10, 0.0630908, 0, 0, 0.527539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462743,-99) , 
10, 0.803039, 0, 0, 0.490593,-99) , 
12, -0.749614, 1, 0, 0.501198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543488,-99) , 
NN(
0, 
0, 
-1, 0.498079, 0, -1, 0.400179,-99) , 
11, -3.92704, 1, 0, 0.443888,-99) , 
12, -1.73893, 0, 0, 0.496144,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0412386);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.420854, 1, 1, 0.587471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499325,-99) , 
9, -951.286, 0, 0, 0.544222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363951,-99) , 
3, 7.38168, 0, 0, 0.492892,-99) , 
6, -0.619005, 1, 0, 0.500448,-99) , 
0, 0.504757, 0, 0, 0.506419,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0554079);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.35339, 0, 1, 0.539811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483981,-99) , 
1, -0.00357353, 1, 0, 0.491249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357285,-99) , 
7, 0.00834135, 1, 0, 0.486365,-99) , 
8, 4.52907, 1, 0, 0.493382,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0490675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499993,-99) , 
6, 0.523803, 1, 0, 0.513664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429548,-99) , 
12, -1.95994, 1, 0, 0.458009,-99) , 
10, -0.551055, 0, 0, 0.504377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413668,-99) , 
10, 2.14246, 1, 0, 0.497046,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.063192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478306,-99) , 
9, -951.286, 0, 0, 0.515446,-99) , 
11, -2.85876, 1, 0, 0.530674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483737,-99) , 
3, 15.0492, 0, 0, 0.492307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40904,-99) , 
3, 17.2589, 1, 0, 0.486311,-99) , 
4, 3.3878, 0, 0, 0.498685,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0910615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 14.0774, 1, 1, 0.608212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360972,-99) , 
12, -1.31498, 1, 0, 0.516747,-99) , 
11, -3.03213, 0, 0, 0.557904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48127,-99) , 
11, -1.9641, 1, 0, 0.501862,-99) , 
NN(
0, 
0, 
-1, 7.59461, 1, -1, 0.406758,-99) , 
1, 0.00442927, 1, 0, 0.493764,-99) , 
12, -0.996947, 1, 0, 0.510298,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0823209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454314,-99) , 
10, -0.714227, 0, 0, 0.497239,-99) , 
10, -0.176672, 0, 0, 0.526135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482393,-99) , 
10, 1.86384, 1, 0, 0.520883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473297,-99) , 
10, 1.69309, 0, 0, 0.481766,-99) , 
11, -1.3108, 0, 0, 0.492888,-99) , 
11, -2.86795, 1, 0, 0.499273,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0826608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.94784, 0, 1, 0.572007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409459,-99) , 
10, -0.144496, 0, 0, 0.508676,-99) , 
4, 2.37606, 1, 0, 0.541446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487746,-99) , 
3, 15.0556, 0, 0, 0.500049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398609,-99) , 
0, 0.499405, 1, 0, 0.491081,-99) , 
0, 0.499995, 0, 0, 0.509073,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0597915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627165,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.561189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465787,-99) , 
3, 10.0651, 0, 0, 0.498365,-99) , 
0, 0.493646, 1, 0, 0.509398,-99) , 
0, 0.505709, 0, 0, 0.513745,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0796279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.685774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455352,-99) , 
9, -951.286, 0, 0, 0.542076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482883,-99) , 
10, 0.240713, 0, 0, 0.501929,-99) , 
NN(
0, 
0, 
-1, -2.09638, 0, -1, 0.464016,-99) , 
12, -0.363897, 1, 0, 0.482823,-99) , 
6, -0.714241, 1, 0, 0.490875,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.106574);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40312,-99) , 
11, -3.73584, 0, 0, 0.531061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422291,-99) , 
0, 0.503487, 0, 0, 0.466114,-99) , 
0, 0.500947, 1, 0, 0.512874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487306,-99) , 
3, 16.39, 0, 0, 0.532834,-99) , 
NN(
0, 
0, 
-1, 1.04562, 0, -1, 0.399115,-99) , 
10, 0.434486, 1, 0, 0.446225,-99) , 
3, 14.1779, 1, 0, 0.498101,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0745095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.15444, 1, 1, 0.58645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482987,-99) , 
0, 0.49428, 0, 0, 0.563571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466188,-99) , 
10, -0.873783, 0, 0, 0.549217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468834,-99) , 
10, 0.793328, 0, 0, 0.491518,-99) , 
12, -1.15395, 1, 0, 0.503563,-99) , 
1, 0.0023883, 0, 0, 0.514163,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0495317);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493173,-99) , 
12, -0.747905, 1, 0, 0.508282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417675,-99) , 
10, -0.921935, 0, 0, 0.503185,-99) , 
11, -3.86882, 1, 0, 0.5067,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0450378);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482123,-99) , 
6, 0.619028, 1, 0, 0.494159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41054,-99) , 
0, 0.489519, 0, 0, 0.491036,-99) , 
2, 0.198873, 0, 0, 0.494749,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0836524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494872, 1, 1, 0.537441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475511,-99) , 
10, -0.134612, 1, 0, 0.495001,-99) , 
9, -951.286, 0, 0, 0.521926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440724,-99) , 
0, 0.50444, 1, 0, 0.489485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335436,-99) , 
12, -1.37796, 0, 0, 0.459452,-99) , 
0, 0.502853, 1, 0, 0.512271,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0328099);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498458,-99) , 
2, -0.137352, 1, 0, 0.504349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439508,-99) , 
5, 0.999525, 0, 0, 0.498292,-99) , 
12, -2.19447, 1, 0, 0.502943,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0361141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.81194, 0, 1, 0.552066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499346,-99) , 
10, 2.14246, 0, 0, 0.506311,-99) , 
8, 5.8845, 1, 0, 0.51403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432677,-99) , 
2, 0.197208, 1, 0, 0.50931,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0534417);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620099,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492584,-99) , 
0, 0.498089, 0, 0, 0.554222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396523,-99) , 
3, 9.69276, 0, 0, 0.496042,-99) , 
8, 9.32371, 1, 0, 0.509232,-99) , 
3, 18.3149, 0, 0, 0.51478,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0936719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00162075, 0, 1, 0.564753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441495,-99) , 
10, -0.555431, 0, 0, 0.497289,-99) , 
10, 0.42071, 0, 0, 0.533763,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394387,-99) , 
9, 1.93894, 1, 0, 0.51171,-99) , 
NN(
0, 
0, 
-1, 13.6605, 0, -1, 0.424584,-99) , 
9, -0.713549, 0, 0, 0.488639,-99) , 
9, -951.286, 1, 0, 0.504195,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0711629);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492377, 1, 1, 0.539143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470404,-99) , 
0, 0.500946, 0, 0, 0.495841,-99) , 
3, 10.7234, 0, 0, 0.518119,-99) , 
NN(
0, 
0, 
-1, -2.36759, 0, -1, 0.472817,-99) , 
6, 0.904752, 1, 0, 0.506087,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0957567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.34186, 0, 1, 0.571834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446484,-99) , 
7, 0.0022031, 0, 0, 0.493692,-99) , 
3, 12.1127, 1, 0, 0.538423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466385,-99) , 
0, 0.504115, 1, 0, 0.516218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456978,-99) , 
11, -3.01195, 1, 0, 0.467614,-99) , 
0, 0.49945, 0, 0, 0.495778,-99) , 
0, 0.496185, 1, 0, 0.509086,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.101471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496185, 0, 1, 0.590409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463796,-99) , 
0, 0.498101, 1, 0, 0.495976,-99) , 
10, 1.56138, 1, 0, 0.567643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461701,-99) , 
6, 0.836722, 1, 0, 0.480447,-99) , 
8, 19.647, 0, 0, 0.487815,-99) , 
6, 0.714273, 1, 0, 0.518716,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0522719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.4831, 1, 1, 0.544107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489374,-99) , 
6, 0.238039, 1, 0, 0.502405,-99) , 
3, 14.1902, 0, 0, 0.511077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389948,-99) , 
10, -1.57128, 0, 0, 0.507125,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.103697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.1185, 0, 1, 0.547257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471643,-99) , 
0, 0.500948, 0, 0, 0.490133,-99) , 
8, 13.6835, 1, 0, 0.525518,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444864,-99) , 
0, 0.497137, 0, 0, 0.524495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389887,-99) , 
12, -0.600364, 1, 0, 0.438086,-99) , 
8, 14.7857, 0, 0, 0.464432,-99) , 
4, 3.12323, 1, 0, 0.506301,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0728767);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.69154, 1, 1, 0.58483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491893,-99) , 
3, 3.35222, 0, 0, 0.542601,-99) , 
NN(
NN(
0, 
0, 
-1, -0.593317, 0, 1, 0.549109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477693,-99) , 
10, 1.71969, 0, 0, 0.493407,-99) , 
12, -1.21878, 1, 0, 0.503229,-99) , 
6, 0.428581, 1, 0, 0.512951,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0361088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 18.3065, 1, 1, 0.580026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379766,-99) , 
0, 0.489519, 0, 0, 0.49627,-99) , 
3, 16.2419, 0, 0, 0.504491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308126,-99) , 
7, 0.013785, 1, 0, 0.498885,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.059807);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497096,-99) , 
8, 16.2834, 0, 0, 0.507322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378734,-99) , 
6, 0.714237, 0, 0, 0.457524,-99) , 
0, 0.494281, 0, 0, 0.496628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379399,-99) , 
8, 20.772, 1, 0, 0.491609,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0334231);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613686,-99) , 
NN(
NN(
0, 
0, 
-1, -0.495453, 1, 1, 0.508273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390687,-99) , 
10, -0.863319, 0, 0, 0.502148,-99) , 
11, -3.77184, 1, 0, 0.505677,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.105093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.54434, 1, 1, 0.544455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420204,-99) , 
10, 0.603538, 0, 0, 0.49824,-99) , 
3, 11.0609, 0, 0, 0.526025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474178,-99) , 
6, -0.782299, 0, 0, 0.521235,-99) , 
NN(
0, 
0, 
-1, 12.3725, 0, -1, 0.433189,-99) , 
6, 0.523686, 1, 0, 0.460009,-99) , 
10, -0.143547, 0, 0, 0.510148,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0571226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.31607, 0, 1, 0.583959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418792,-99) , 
0, 0.494508, 0, 0, 0.49389,-99) , 
0, 0.491424, 1, 0, 0.500258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429431,-99) , 
5, 0.999525, 0, 0, 0.493194,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0763483);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.629573, 0, 1, 0.554718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316833,-99) , 
9, -1.56763, 0, 0, 0.501201,-99) , 
9, -951.286, 1, 0, 0.519805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424599,-99) , 
6, 0.714275, 1, 0, 0.454108,-99) , 
11, -1.31114, 1, 0, 0.504265,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0893486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411549,-99) , 
6, 0.791064, 1, 0, 0.469755,-99) , 
6, 0.890454, 0, 0, 0.515836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459333,-99) , 
12, -0.901996, 1, 0, 0.475265,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.427467,-99) , 
6, -0.809491, 0, 0, 0.467099,-99) , 
8, 15.3348, 0, 0, 0.477715,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0744241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478598,-99) , 
0, 0.499997, 1, 0, 0.534055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463805,-99) , 
4, 1.26916, 1, 0, 0.478913,-99) , 
12, 0.306877, 0, 0, 0.49406,-99) , 
NN(
0, 
0, 
-1, 0.144676, 1, -1, 0.424618,-99) , 
4, 6.11486, 1, 0, 0.487307,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0526631);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492626,-99) , 
10, 0.472219, 0, 0, 0.512347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416653,-99) , 
8, 20.5664, 1, 0, 0.507299,-99) , 
11, -3.75713, 1, 0, 0.512127,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.124295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496195, 1, 1, 0.591537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407508,-99) , 
0, 0.496188, 0, 0, 0.509109,-99) , 
8, 13.919, 0, 0, 0.540899,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405543,-99) , 
0, 0.501893, 1, 0, 0.529059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422659,-99) , 
10, 0.714099, 1, 0, 0.467953,-99) , 
2, -0.0183279, 1, 0, 0.485812,-99) , 
4, 3.3878, 0, 0, 0.50067,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0901181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.78122, 1, 1, 0.525138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46223,-99) , 
6, -0.52377, 1, 0, 0.47063,-99) , 
12, -1.05307, 1, 0, 0.476638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560563,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.392147,-99) , 
3, 13.1863, 0, 0, 0.423889,-99) , 
11, -2.9418, 0, 0, 0.467085,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0606751);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 16.2152, 1, -1, 0.485424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338996,-99) , 
12, -1.63559, 1, 0, 0.478523,-99) , 
NN(
0, 
0, 
-1, -2.31206, 1, -1, 0.365379,-99) , 
10, -0.954376, 0, 0, 0.415435,-99) , 
12, -1.50185, 0, 0, 0.475615,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0722283);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498078, 1, 1, 0.535215,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497171,-99) , 
12, -0.625426, 1, 0, 0.514663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397329,-99) , 
0, 0.499995, 0, 0, 0.442519,-99) , 
11, -2.65912, 0, 0, 0.496376,-99) , 
6, 0.904749, 0, 0, 0.506721,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0790022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443032,-99) , 
11, -3.35774, 0, 0, 0.52344,-99) , 
6, -0.237895, 1, 0, 0.529909,-99) , 
NN(
0, 
0, 
-1, -0.900982, 1, -1, 0.459878,-99) , 
8, 4.61916, 0, 0, 0.51813,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0760772);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490085,-99) , 
11, -1.78951, 1, 0, 0.528412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464919,-99) , 
4, 2.84913, 0, 0, 0.480296,-99) , 
10, 0.71319, 0, 0, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0.706787, 1, -1, 0.433256,-99) , 
1, 0.0038934, 1, 0, 0.495432,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.079391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487444,-99) , 
10, 0.144478, 0, 0, 0.527254,-99) , 
NN(
0, 
0, 
-1, 16.1855, 0, -1, 0.464065,-99) , 
8, 16.6891, 1, 0, 0.517732,-99) , 
NN(
0, 
0, 
-1, 0.523745, 0, -1, 0.434387,-99) , 
0, 0.492376, 0, 0, 0.507133,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0726226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496455,-99) , 
3, 10.9666, 1, 0, 0.552395,-99) , 
2, -0.0905206, 1, 0, 0.582272,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0774134, 0, 1, 0.543144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474459,-99) , 
6, 0.523846, 1, 0, 0.488403,-99) , 
12, -0.788759, 1, 0, 0.504476,-99) , 
0, 0.492376, 1, 0, 0.513593,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0783053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486638,-99) , 
11, -2.50917, 0, 0, 0.522255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375146,-99) , 
0, 0.495864, 0, 0, 0.456877,-99) , 
3, 16.1969, 1, 0, 0.515366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410704,-99) , 
8, 4.43348, 0, 0, 0.495817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386611,-99) , 
4, 5.49315, 1, 0, 0.482256,-99) , 
0, 0.499995, 1, 0, 0.503826,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0826072);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.238122, 1, 1, 0.586458,-99) , 
NN(
NN(
0, 
0, 
-1, -1.31179, 1, 1, 0.53215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463375,-99) , 
8, 5.87989, 1, 0, 0.476148,-99) , 
0, 0.496866, 1, 0, 0.499919,-99) , 
0, 0.503804, 0, 0, 0.508577,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.089608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.692846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459782,-99) , 
6, 0.941014, 1, 0, 0.503824,-99) , 
6, 0.752259, 1, 0, 0.520642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459382,-99) , 
0, 0.503804, 0, 0, 0.468622,-99) , 
11, -3.38551, 1, 0, 0.476384,-99) , 
8, 14.0298, 0, 0, 0.490846,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0957002);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465135,-99) , 
0, 0.494281, 0, 0, 0.527929,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.473792,-99) , 
4, 3.24926, 1, 0, 0.512096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411727,-99) , 
11, -1.37205, 1, 0, 0.440743,-99) , 
10, 1.57046, 1, 0, 0.496705,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0561453);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.501187, 0, 1, 0.5545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439297,-99) , 
8, 11.734, 0, 0, 0.492201,-99) , 
NN(
0, 
0, 
-1, -2.62004, 0, -1, 0.38533,-99) , 
3, 9.80968, 0, 0, 0.482709,-99) , 
6, 0.0476218, 1, 0, 0.496209,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0542039);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488658,-99) , 
9, -951.286, 0, 0, 0.57234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475724,-99) , 
3, 7.98055, 0, 0, 0.50525,-99) , 
0, 0.491424, 1, 0, 0.509998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426116,-99) , 
5, 0.999525, 0, 0, 0.501154,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0841889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.78231, 0, 1, 0.522245,-99) , 
NN(
0, 
0, 
-1, 0.498084, 0, -1, 0.454681,-99) , 
11, -1.1649, 1, 0, 0.501216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433889,-99) , 
0, 0.493328, 1, 0, 0.447034,-99) , 
1, 0.00371048, 0, 0, 0.455727,-99) , 
12, -0.625955, 0, 0, 0.482912,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0537415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.539717, 1, 1, 0.588214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46261,-99) , 
12, -0.913051, 0, 0, 0.563773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492849,-99) , 
12, -2.06192, 1, 0, 0.496799,-99) , 
NN(
0, 
0, 
-1, 0.00387163, 0, -1, 0.407903,-99) , 
6, 0.10201, 0, 0, 0.487513,-99) , 
6, -0.714264, 1, 0, 0.497631,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.069557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.86422, 0, 1, 0.570663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456788,-99) , 
10, -0.28167, 0, 0, 0.515419,-99) , 
12, -1.60884, 1, 0, 0.520884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54425,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.425046,-99) , 
0, 0.50512, 0, 0, 0.465623,-99) , 
0, 0.502852, 1, 0, 0.512652,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0768072);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481994,-99) , 
11, -1.02392, 0, 0, 0.494094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382825,-99) , 
0, 0.498091, 1, 0, 0.428848,-99) , 
6, 0.274394, 0, 0, 0.481657,-99) , 
6, -0.904754, 1, 0, 0.489521,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0733431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480488,-99) , 
1, 0.000568899, 0, 0, 0.504168,-99) , 
4, 6.66832, 0, 0, 0.512112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352461,-99) , 
7, 0.011997, 1, 0, 0.506887,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0764207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00202799, 1, 1, 0.652754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465753,-99) , 
10, -0.637983, 0, 0, 0.520392,-99) , 
3, 13.0947, 0, 0, 0.561037,-99) , 
NN(
NN(
0, 
0, 
-1, -2.40597, 1, 1, 0.527455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465452,-99) , 
11, -1.79055, 0, 0, 0.492715,-99) , 
6, 0.714278, 1, 0, 0.507139,-99) , 
12, -1.24706, 1, 0, 0.516638,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0502729);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654377,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.516335,-99) , 
NN(
0, 
0, 
-1, 0.496188, 0, -1, 0.467738,-99) , 
12, 0.306877, 1, 0, 0.503389,-99) , 
3, 19.153, 0, 0, 0.508509,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0545397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551483,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.533095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478686,-99) , 
10, -1.04151, 1, 0, 0.483301,-99) , 
2, -0.0829858, 1, 0, 0.490663,-99) , 
10, 2.14243, 0, 0, 0.496714,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0866185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.455151, 1, 1, 0.618958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478673,-99) , 
12, -1.21783, 1, 0, 0.511341,-99) , 
10, 0.499883, 0, 0, 0.532213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471324,-99) , 
8, 15.0248, 1, 0, 0.507835,-99) , 
NN(
0, 
0, 
-1, 10.4817, 1, -1, 0.463183,-99) , 
8, 12.5389, 0, 0, 0.486597,-99) , 
11, -2.12647, 1, 0, 0.506613,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0676734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.464899, 0, 1, 0.595475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441257,-99) , 
12, -1.47751, 0, 0, 0.512718,-99) , 
2, 0.0617191, 0, 0, 0.527524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536337,-99) , 
NN(
0, 
0, 
-1, 0.499991, 1, -1, 0.476391,-99) , 
6, 0.863969, 1, 0, 0.48999,-99) , 
6, 0.809512, 1, 0, 0.51014,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0805935);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435322,-99) , 
11, -0.856228, 1, 0, 0.505886,-99) , 
NN(
0, 
0, 
-1, -0.484245, 1, -1, 0.463866,-99) , 
10, 1.0935, 0, 0, 0.47894,-99) , 
12, -1.97144, 1, 0, 0.483742,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0898521);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464534,-99) , 
0, 0.504168, 1, 0, 0.523862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41233,-99) , 
0, 0.48952, 0, 0, 0.519657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445636,-99) , 
4, 2.68664, 1, 0, 0.52325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427296,-99) , 
12, -0.354722, 1, 0, 0.476729,-99) , 
3, 13.1458, 1, 0, 0.506861,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0710886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496677,-99) , 
11, -2.99624, 0, 0, 0.532908,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.470355,-99) , 
12, -0.996947, 1, 0, 0.485913,-99) , 
0, 0.489519, 1, 0, 0.491586,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.06212);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46918,-99) , 
6, -0.428493, 0, 0, 0.531038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490584,-99) , 
8, 4.57579, 1, 0, 0.499411,-99) , 
9, -951.286, 1, 0, 0.510755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434015,-99) , 
2, 0.195553, 1, 0, 0.505905,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0523992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477704,-99) , 
0, 0.500721, 1, 0, 0.506329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399021,-99) , 
0, 0.489519, 0, 0, 0.502526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409819,-99) , 
11, -3.70823, 0, 0, 0.498072,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0449343);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545578,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473148,-99) , 
0, 0.498091, 1, 0, 0.525439,-99) , 
NN(
0, 
0, 
-1, 14.4139, 1, -1, 0.492961,-99) , 
8, 15.0398, 0, 0, 0.501427,-99) , 
12, 0.858016, 0, 0, 0.506944,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0623412);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 18.9367, 0, 1, 0.52628,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490397,-99) , 
2, -0.0010546, 0, 0, 0.513888,-99) , 
NN(
0, 
0, 
-1, 3.92613, 0, -1, 0.410875,-99) , 
6, -0.836732, 1, 0, 0.469736,-99) , 
6, -0.428572, 0, 0, 0.515552,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0721057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466483,-99) , 
0, 0.499993, 1, 0, 0.520227,-99) , 
10, 0.332024, 0, 0, 0.532526,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49202,-99) , 
10, 0.964132, 0, 0, 0.517197,-99) , 
NN(
0, 
0, 
-1, 1.31149, 0, -1, 0.475669,-99) , 
12, -0.132975, 1, 0, 0.488753,-99) , 
12, -0.698861, 1, 0, 0.503835,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0755262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.817808, 1, 1, 0.583755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486881,-99) , 
3, 16.4735, 0, 0, 0.499707,-99) , 
6, -0.2381, 1, 0, 0.51325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41092,-99) , 
12, 1.06955, 1, 0, 0.504134,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0569371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499038,-99) , 
4, 0.977556, 0, 0, 0.566469,-99) , 
NN(
0, 
0, 
-1, 16.6584, 0, 1, 0.519138,-99) , 
6, -0.523793, 1, 0, 0.526532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433203,-99) , 
10, -1.28628, 0, 0, 0.522363,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0838272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.52627, 1, 1, 0.533663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388445,-99) , 
13, 11.601, 1, 0, 0.463681,-99) , 
11, -3.27239, 0, 0, 0.526929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445227,-99) , 
5, 0.999525, 0, 0, 0.518381,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0508664);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.536386, 0, 1, 0.52698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489497,-99) , 
12, 0.41529, 0, 0, 0.507682,-99) , 
NN(
0, 
0, 
-1, 11.8927, 1, -1, 0.471156,-99) , 
6, 0.71427, 0, 0, 0.491282,-99) , 
12, -0.451003, 1, 0, 0.507131,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0499119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493581,-99) , 
0, 0.504757, 0, 0, 0.498751,-99) , 
6, -0.0022127, 1, 0, 0.504498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557219,-99) , 
NN(
0, 
0, 
-1, -0.352776, 0, -1, 0.426822,-99) , 
4, 0.660332, 1, 0, 0.452754,-99) , 
6, -0.619007, 0, 0, 0.495941,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0654426);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489111, 1, 1, 0.617351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482221,-99) , 
10, 1.82706, 0, 0, 0.489703,-99) , 
11, -1.02392, 0, 0, 0.499898,-99) , 
0, 0.490471, 1, 0, 0.505994,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.068406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 18.2706, 0, 1, 0.629848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498508,-99) , 
10, 0.830757, 0, 0, 0.514126,-99) , 
8, 18.1211, 0, 0, 0.523111,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465931,-99) , 
0, 0.500944, 0, 0, 0.486746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406513,-99) , 
12, 1.0701, 1, 0, 0.46703,-99) , 
12, 0.11603, 1, 0, 0.504585,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0613356);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.48877, 1, 1, 0.52949,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498629,-99) , 
8, 11.6478, 0, 0, 0.54339,-99) , 
NN(
0, 
0, 
-1, 0.637048, 1, -1, 0.473335,-99) , 
4, 3.12043, 0, 0, 0.492046,-99) , 
6, 0.809501, 0, 0, 0.50915,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0619937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497092, 0, 1, 0.540656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485972,-99) , 
12, -0.660578, 1, 0, 0.504606,-99) , 
9, -951.286, 1, 0, 0.517878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426894,-99) , 
0, 0.505709, 1, 0, 0.514171,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.116416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496188, 1, 1, 0.596097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473319,-99) , 
0, 0.499042, 0, 0, 0.525112,-99) , 
3, 10.5693, 0, 0, 0.550918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48056,-99) , 
8, 16.7557, 0, 0, 0.503467,-99) , 
NN(
0, 
0, 
-1, -1.23962, 1, -1, 0.409041,-99) , 
11, -2.50994, 0, 0, 0.47689,-99) , 
8, 12.6369, 1, 0, 0.514324,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0885323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49333, 1, 1, 0.550622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496846,-99) , 
12, 0.905822, 1, 0, 0.542255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495907,-99) , 
12, -1.56247, 1, 0, 0.544084,-99) , 
NN(
0, 
0, 
-1, 0.0800985, 1, -1, 0.453451,-99) , 
8, 12.3662, 0, 0, 0.494871,-99) , 
10, -0.143426, 0, 0, 0.530778,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0609978);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488651,-99) , 
6, -0.782281, 0, 0, 0.519923,-99) , 
11, -2.82421, 1, 0, 0.548457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491171,-99) , 
1, -0.000544935, 1, 0, 0.508827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369262,-99) , 
6, 0.0566935, 0, 0, 0.503976,-99) , 
6, -0.2381, 1, 0, 0.51178,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.081053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464132,-99) , 
2, -0.0588951, 0, 0, 0.519233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413311,-99) , 
2, -0.0828719, 1, 0, 0.459013,-99) , 
4, 4.16847, 1, 0, 0.511035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439514,-99) , 
4, 6.66832, 1, 0, 0.504962,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0637216);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.716461, 1, 1, 0.548506,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498496,-99) , 
8, 15.6117, 0, 0, 0.515057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462608,-99) , 
6, 0.959185, 1, 0, 0.505074,-99) , 
6, 0.714275, 1, 0, 0.522106,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0623782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493898,-99) , 
10, 0.443837, 0, 0, 0.506438,-99) , 
0, 0.492376, 1, 0, 0.514965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480648,-99) , 
9, -951.287, 0, 0, 0.534379,-99) , 
NN(
0, 
0, 
-1, -1.92577, 0, -1, 0.467249,-99) , 
6, -0.142851, 1, 0, 0.481843,-99) , 
12, -0.355934, 1, 0, 0.497844,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0799143);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.7938, 0, 1, 0.602175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426004,-99) , 
8, 9.34572, 1, 0, 0.512901,-99) , 
8, 12.3132, 0, 0, 0.55628,-99) , 
NN(
NN(
0, 
0, 
-1, 12.947, 0, 1, 0.517665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440716,-99) , 
3, 17.566, 0, 0, 0.465137,-99) , 
3, 13.1542, 1, 0, 0.501584,-99) , 
0, 0.502852, 0, 0, 0.510001,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.047659);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579021,-99) , 
NN(
0, 
0, 
-1, 17.2855, 1, -1, 0.480772,-99) , 
11, -3.75713, 1, 0, 0.483979,-99) , 
0, 0.505708, 0, 0, 0.487909,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.087791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450298,-99) , 
0, 0.502852, 1, 0, 0.549892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451209,-99) , 
11, -2.94307, 0, 0, 0.508358,-99) , 
2, -0.00915969, 1, 0, 0.519767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463508,-99) , 
8, 11.7771, 1, 0, 0.506841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368653,-99) , 
8, 7.44369, 0, 0, 0.479061,-99) , 
2, -0.0829858, 0, 0, 0.51309,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0891841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.706839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488694,-99) , 
4, 3.24843, 0, 0, 0.506376,-99) , 
10, 0.539075, 0, 0, 0.52366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481984,-99) , 
12, 0.334234, 0, 0, 0.528716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43307,-99) , 
11, -1.05558, 0, 0, 0.453341,-99) , 
6, 0.238102, 1, 0, 0.472134,-99) , 
12, -0.474857, 1, 0, 0.493912,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0616555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.604804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442496,-99) , 
10, 0.154297, 0, 0, 0.519593,-99) , 
3, 15.5024, 1, 0, 0.554308,-99) , 
NN(
NN(
0, 
0, 
-1, 3.28554, 0, 1, 0.543138,-99) , 
NN(
0, 
0, 
-1, 7.52629, 0, -1, 0.488527,-99) , 
3, 5.68246, 1, 0, 0.499982,-99) , 
8, 15.3745, 0, 0, 0.512298,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0883953);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.34946, 1, 1, 0.531944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440477,-99) , 
12, -0.885369, 1, 0, 0.484836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383148,-99) , 
8, 19.8312, 1, 0, 0.46014,-99) , 
8, 15.0009, 1, 0, 0.513608,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0654562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.2689, 1, 1, 0.554037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481867,-99) , 
0, 0.49809, 0, 0, 0.505376,-99) , 
3, 13.5155, 0, 0, 0.516735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418764,-99) , 
8, 20.7407, 1, 0, 0.51236,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0972706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.32856, 0, 1, 0.59421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419126,-99) , 
3, 11.6853, 0, 0, 0.506335,-99) , 
3, 11.096, 1, 0, 0.540391,-99) , 
NN(
NN(
0, 
0, 
-1, 1.04065, 0, 1, 0.554038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467694,-99) , 
12, -0.50361, 1, 0, 0.477618,-99) , 
3, 14.1892, 0, 0, 0.496059,-99) , 
10, 0.428427, 1, 0, 0.51432,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0741874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 1, 1, 0.581859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417594,-99) , 
8, 9.62082, 0, 0, 0.497517,-99) , 
9, -951.286, 0, 0, 0.549837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475205,-99) , 
11, -3.19245, 0, 0, 0.538789,-99) , 
NN(
0, 
0, 
-1, 0.278231, 0, -1, 0.483838,-99) , 
10, 0.142196, 1, 0, 0.500607,-99) , 
2, 0.0518413, 0, 0, 0.510737,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0936337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.36571, 1, 1, 0.55077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421918,-99) , 
8, 9.69606, 0, 0, 0.523203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471563,-99) , 
10, -0.14348, 0, 0, 0.503007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442518,-99) , 
6, 0.619029, 1, 0, 0.466455,-99) , 
11, -2.47847, 1, 0, 0.482818,-99) , 
10, 1.28512, 0, 0, 0.494822,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0941061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.2949, 1, 1, 0.535225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426853,-99) , 
2, 0.0375424, 1, 0, 0.485305,-99) , 
3, 14.1404, 1, 0, 0.519486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396424,-99) , 
2, 0.0394556, 1, 0, 0.507783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399859,-99) , 
6, 0.398737, 1, 0, 0.475926,-99) , 
8, 11.1969, 0, 0, 0.505456,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0853896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.383415, 0, 1, 0.55671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43364,-99) , 
12, -0.525524, 0, 0, 0.474472,-99) , 
8, 17.1081, 1, 0, 0.524983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45739,-99) , 
10, -0.739718, 0, 0, 0.528601,-99) , 
NN(
0, 
0, 
-1, 10.5347, 1, -1, 0.465762,-99) , 
11, -3.03417, 1, 0, 0.475075,-99) , 
8, 14.0292, 0, 0, 0.491906,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0838966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.034291, 1, 1, 0.633294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450237,-99) , 
2, 0.0630342, 1, 0, 0.504501,-99) , 
10, 1.13789, 0, 0, 0.517949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519071,-99) , 
NN(
0, 
0, 
-1, 1.38799, 1, -1, 0.436647,-99) , 
4, 3.40996, 0, 0, 0.459311,-99) , 
11, -1.66112, 1, 0, 0.496836,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0734599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.32858, 0, 1, 0.534366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466167,-99) , 
11, -1.29035, 1, 0, 0.490927,-99) , 
12, 0.200505, 1, 0, 0.520278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391875,-99) , 
10, -1.57146, 0, 0, 0.515941,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.078498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.9086, 1, 1, 0.563914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478563,-99) , 
6, 0.76536, 1, 0, 0.48831,-99) , 
6, 0.648064, 1, 0, 0.501969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435352,-99) , 
2, -0.0482929, 1, 0, 0.450122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.348764,-99) , 
0, 0.492379, 0, 0, 0.432685,-99) , 
8, 7.2307, 0, 0, 0.487222,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.076644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.02707, 0, 1, 0.613001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491035,-99) , 
11, -3.10561, 1, 0, 0.575858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497152,-99) , 
0, 0.499042, 1, 0, 0.522638,-99) , 
NN(
0, 
0, 
-1, -2.79935, 0, -1, 0.451496,-99) , 
10, 0.268426, 0, 0, 0.504402,-99) , 
12, -1.36794, 1, 0, 0.514431,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0718093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470015,-99) , 
3, 14.2989, 1, 0, 0.554839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465224,-99) , 
12, 0.370857, 1, 0, 0.500589,-99) , 
3, 13.2971, 0, 0, 0.508496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442994,-99) , 
3, 17.1711, 0, 0, 0.499947,-99) , 
NN(
0, 
0, 
-1, 0.500812, 0, -1, 0.390951,-99) , 
0, 0.498091, 1, 0, 0.439277,-99) , 
3, 15.2098, 1, 0, 0.49759,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0598759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488061,-99) , 
11, -1.02348, 1, 0, 0.560578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497132,-99) , 
2, 0.121935, 0, 0, 0.503995,-99) , 
10, 1.57106, 0, 0, 0.516344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345816,-99) , 
0, 0.497137, 0, 0, 0.443239,-99) , 
4, 5.49315, 1, 0, 0.50653,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0746428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406505,-99) , 
3, 9.15667, 0, 0, 0.515274,-99) , 
8, 7.65146, 1, 0, 0.520349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424908,-99) , 
3, 3.28954, 0, 0, 0.446139,-99) , 
3, 3.87806, 0, 0, 0.50923,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0657165);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.708512, 1, 1, 0.577504,-99) , 
NN(
NN(
0, 
0, 
-1, -1.66615, 1, 1, 0.511567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42643,-99) , 
12, 0.728727, 1, 0, 0.501224,-99) , 
6, 0.333342, 1, 0, 0.519132,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0715524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.5785, 0, 1, 0.572768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425851,-99) , 
11, -2.67549, 0, 0, 0.49807,-99) , 
12, -1.22474, 1, 0, 0.509941,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467398,-99) , 
3, 14.9342, 1, 0, 0.501488,-99) , 
NN(
0, 
0, 
-1, -0.84485, 1, -1, 0.415015,-99) , 
11, -2.19013, 0, 0, 0.467857,-99) , 
8, 13.9848, 1, 0, 0.494942,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0784958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499399,-99) , 
6, 0.238145, 1, 0, 0.513504,-99) , 
12, 0.176393, 1, 0, 0.525518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457531,-99) , 
0, 0.490879, 1, 0, 0.464614,-99) , 
0, 0.504757, 0, 0, 0.470699,-99) , 
10, 1.2856, 0, 0, 0.486933,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0794672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.20361, 0, 1, 0.566861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468256,-99) , 
12, -1.68714, 1, 0, 0.475382,-99) , 
6, 0.31065, 1, 0, 0.486588,-99) , 
NN(
0, 
0, 
-1, -0.882089, 1, -1, 0.441267,-99) , 
6, -0.809518, 0, 0, 0.480864,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0757886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.067979, 1, 1, 0.56256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479385,-99) , 
11, -3.46887, 1, 0, 0.485961,-99) , 
11, -1.11236, 0, 0, 0.501657,-99) , 
6, -0.619045, 1, 0, 0.510802,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0733647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0121475, 0, 1, 0.567647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468925,-99) , 
9, -951.286, 0, 0, 0.501444,-99) , 
11, -1.36084, 1, 0, 0.529906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493796,-99) , 
6, 0.809251, 0, 0, 0.515635,-99) , 
NN(
0, 
0, 
-1, 14.9831, 0, -1, 0.439697,-99) , 
8, 15.387, 1, 0, 0.500538,-99) , 
11, -1.85691, 0, 0, 0.513531,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0706477);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553468,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478095,-99) , 
10, 1.90923, 1, 0, 0.518092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468016,-99) , 
12, -1.51656, 1, 0, 0.477355,-99) , 
11, -1.30088, 0, 0, 0.48649,-99) , 
6, -0.904743, 1, 0, 0.491268,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0890592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493782, 0, 1, 0.564604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441529,-99) , 
3, 14.1465, 1, 0, 0.536902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477434,-99) , 
3, 10.9486, 1, 0, 0.537795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464198,-99) , 
10, 1.85519, 0, 0, 0.471996,-99) , 
1, 0.00265106, 0, 0, 0.48191,-99) , 
0, 0.495233, 1, 0, 0.496079,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0691419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00399806, 0, 1, 0.522693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356062,-99) , 
7, 0.0119971, 1, 0, 0.517333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547971,-99) , 
NN(
0, 
0, 
-1, -1.92991, 1, -1, 0.414509,-99) , 
12, -0.913239, 1, 0, 0.447392,-99) , 
0, 0.493328, 0, 0, 0.506174,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0523907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49658,-99) , 
2, 0.0119451, 0, 0, 0.515612,-99) , 
NN(
0, 
0, 
-1, -0.657886, 1, -1, 0.464171,-99) , 
3, 5.93546, 0, 0, 0.506073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404847,-99) , 
2, -0.228908, 0, 0, 0.501331,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0770148);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 15.1797, 0, 1, 0.531402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526468,-99) , 
NN(
0, 
0, 
-1, 11.0478, 1, -1, 0.40863,-99) , 
3, 13.1752, 0, 0, 0.442573,-99) , 
12, -1.35417, 0, 0, 0.516272,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0607635);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498275,-99) , 
10, 1.31745, 0, 0, 0.507119,-99) , 
NN(
0, 
0, 
-1, -0.978587, 1, -1, 0.453065,-99) , 
12, 0.379602, 1, 0, 0.492095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548508,-99) , 
NN(
0, 
0, 
-1, 11.1939, 0, -1, 0.352569,-99) , 
0, 0.499995, 0, 0, 0.402506,-99) , 
11, -3.33279, 0, 0, 0.483372,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0626732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.07969, 0, 1, 0.568952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485582,-99) , 
1, -0.00328386, 1, 0, 0.494852,-99) , 
3, 15.1988, 0, 0, 0.505585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.323625,-99) , 
7, 0.013785, 1, 0, 0.500715,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0769291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456906,-99) , 
0, 0.504349, 1, 0, 0.523723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465796,-99) , 
0, 0.490879, 1, 0, 0.483482,-99) , 
0, 0.496185, 0, 0, 0.510346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451193,-99) , 
10, 2.14267, 1, 0, 0.504866,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0796102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50846, 0, 1, 0.521242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45686,-99) , 
11, -1.0015, 1, 0, 0.511767,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436127,-99) , 
6, -0.195735, 1, 0, 0.525709,-99) , 
NN(
0, 
0, 
-1, -0.778588, 0, -1, 0.40456,-99) , 
10, 0.42102, 0, 0, 0.458852,-99) , 
8, 9.98491, 0, 0, 0.497802,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0948978);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486092,-99) , 
3, 15.5126, 1, 0, 0.540684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43907,-99) , 
11, -2.20637, 0, 0, 0.48789,-99) , 
9, -951.286, 0, 0, 0.524959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480908,-99) , 
6, -0.809531, 1, 0, 0.507343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423405,-99) , 
10, 1.88511, 0, 0, 0.444122,-99) , 
11, -2.14886, 1, 0, 0.472126,-99) , 
8, 12.6334, 0, 0, 0.498381,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0898747);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.22285, 0, 1, 0.578966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483181,-99) , 
3, 12.7153, 0, 0, 0.509818,-99) , 
6, 0.428563, 1, 0, 0.526543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336665,-99) , 
0, 0.489519, 0, 0, 0.519762,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0505901);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.706615, 1, 1, 0.551666,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44903,-99) , 
2, -0.086773, 0, 0, 0.494768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401081,-99) , 
10, -0.146497, 1, 0, 0.438958,-99) , 
6, -0.428539, 0, 0, 0.484844,-99) , 
0, 0.503805, 0, 0, 0.49235,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0919035);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496861,-99) , 
0, 0.505164, 1, 0, 0.587798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482603,-99) , 
11, -2.10073, 1, 0, 0.511241,-99) , 
0, 0.501899, 0, 0, 0.526852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613103,-99) , 
NN(
0, 
0, 
-1, 13.0534, 0, -1, 0.454924,-99) , 
6, 0.670749, 1, 0, 0.466094,-99) , 
8, 12.6374, 1, 0, 0.496904,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0667235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.03948, 1, 1, 0.55677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457359,-99) , 
12, -0.765302, 1, 0, 0.518027,-99) , 
10, 0.713431, 0, 0, 0.536527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494709,-99) , 
0, 0.50431, 0, 0, 0.500232,-99) , 
NN(
0, 
0, 
-1, 2.48005, 1, -1, 0.440805,-99) , 
0, 0.505346, 1, 0, 0.493837,-99) , 
0, 0.49809, 1, 0, 0.513972,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.074208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461429,-99) , 
10, -0.311186, 0, 0, 0.518712,-99) , 
12, -2.165, 1, 0, 0.522166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429862,-99) , 
2, 0.199145, 1, 0, 0.515724,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0695872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47974,-99) , 
1, -9.31025e-05, 1, 0, 0.519318,-99) , 
10, 0.999615, 0, 0, 0.557987,-99) , 
NN(
NN(
0, 
0, 
-1, 0.710541, 0, 1, 0.525309,-99) , 
NN(
0, 
0, 
-1, 13.0873, 1, -1, 0.470249,-99) , 
12, -0.30924, 1, 0, 0.49657,-99) , 
2, 0.0731625, 0, 0, 0.506474,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0458184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.1714, 0, 1, 0.598927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397318,-99) , 
10, 0.150128, 0, 0, 0.505824,-99) , 
8, 18.6069, 1, 0, 0.548848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499481,-99) , 
6, -0.904757, 1, 0, 0.504848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379344,-99) , 
10, 0.428149, 1, 0, 0.425682,-99) , 
0, 0.491423, 0, 0, 0.497954,-99) , 
3, 15.1988, 0, 0, 0.505536,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0417239);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.59493, 1, 1, 0.517267,-99) , 
NN(
0, 
0, 
-1, -1.28616, 1, -1, 0.435568,-99) , 
10, -1.00054, 0, 0, 0.511061,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0572479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446145,-99) , 
12, -0.965957, 0, 0, 0.529996,-99) , 
2, 0.0408795, 0, 0, 0.557348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497042,-99) , 
2, 0.1275, 1, 0, 0.538335,-99) , 
NN(
0, 
0, 
-1, -3.29076, 0, -1, 0.490274,-99) , 
2, 0.0605006, 0, 0, 0.499827,-99) , 
3, 9.03687, 1, 0, 0.512008,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0821532);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.261061, 0, 1, 0.566661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427039,-99) , 
0, 0.498091, 0, 0, 0.493613,-99) , 
12, 0.158056, 1, 0, 0.53712,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495992,-99) , 
12, 0.306269, 1, 0, 0.523483,-99) , 
NN(
0, 
0, 
-1, 10.6669, 0, -1, 0.469891,-99) , 
11, -1.76177, 0, 0, 0.491004,-99) , 
8, 11.2831, 1, 0, 0.505692,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0968854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48204,-99) , 
12, -0.710866, 1, 0, 0.560757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453173,-99) , 
6, 0.809375, 1, 0, 0.495745,-99) , 
10, -0.233734, 0, 0, 0.530979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468651,-99) , 
10, 1.68559, 0, 0, 0.488796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398579,-99) , 
1, 0.00346798, 1, 0, 0.477386,-99) , 
12, -0.454267, 1, 0, 0.501226,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0951259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.68457, 0, 1, 0.588019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475752,-99) , 
8, 13.1427, 0, 0, 0.508752,-99) , 
11, -1.34952, 1, 0, 0.550362,-99) , 
NN(
NN(
0, 
0, 
-1, 19.9789, 1, 1, 0.571312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479719,-99) , 
2, -0.142107, 1, 0, 0.491766,-99) , 
3, 15.2194, 0, 0, 0.501854,-99) , 
10, 0.714099, 0, 0, 0.525105,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0696696);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.60456, 1, 1, 0.526349,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443219,-99) , 
8, 12.7677, 1, 0, 0.492481,-99) , 
NN(
0, 
0, 
-1, 1.50664, 0, -1, 0.387715,-99) , 
6, -0.142813, 0, 0, 0.459226,-99) , 
0, 0.502851, 1, 0, 0.515303,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0634473);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428656,-99) , 
3, 10.547, 0, 0, 0.513407,-99) , 
9, -951.286, 1, 0, 0.563491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370484,-99) , 
2, -0.189305, 0, 0, 0.495883,-99) , 
NN(
0, 
0, 
-1, 1.00419, 0, -1, 0.457218,-99) , 
8, 14.0292, 1, 0, 0.482263,-99) , 
0, 0.503804, 0, 0, 0.490456,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0794872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433366,-99) , 
10, -0.997319, 0, 0, 0.52765,-99) , 
NN(
0, 
0, 
-1, 0.489298, 0, -1, 0.438877,-99) , 
0, 0.490562, 0, 0, 0.519847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469765,-99) , 
4, 2.42585, 1, 0, 0.539792,-99) , 
NN(
0, 
0, 
-1, 0.292628, 0, -1, 0.465696,-99) , 
6, -0.238091, 1, 0, 0.480546,-99) , 
0, 0.499995, 1, 0, 0.505746,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0745034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489637,-99) , 
10, 0.427715, 0, 0, 0.519871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435928,-99) , 
3, 12.1786, 0, 0, 0.47021,-99) , 
0, 0.502308, 1, 0, 0.507393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531728,-99) , 
NN(
0, 
0, 
-1, 0.912183, 0, -1, 0.449492,-99) , 
12, -1.29639, 1, 0, 0.462148,-99) , 
0, 0.495234, 0, 0, 0.495716,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0619283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476553,-99) , 
12, -0.459376, 0, 0, 0.492345,-99) , 
2, 0.164822, 0, 0, 0.498134,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418723,-99) , 
6, 0.523861, 0, 0, 0.485175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388251,-99) , 
2, 0.0177639, 1, 0, 0.454628,-99) , 
10, 1.57128, 1, 0, 0.488208,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0884559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47484,-99) , 
11, -2.11364, 0, 0, 0.511927,-99) , 
3, 11.8455, 0, 0, 0.52283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475169,-99) , 
6, 0.904739, 0, 0, 0.504692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426844,-99) , 
12, 0.138592, 1, 0, 0.483487,-99) , 
6, 0.714265, 1, 0, 0.498518,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0542279);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.3878, 0, 1, 0.520518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402401,-99) , 
10, 0.435685, 1, 0, 0.452044,-99) , 
8, 18.0396, 1, 0, 0.51351,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0738729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502852, 1, 1, 0.592531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487104,-99) , 
9, 0.444165, 0, 0, 0.514453,-99) , 
9, -951.286, 1, 0, 0.542924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489287,-99) , 
2, 0.054604, 0, 0, 0.499305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386615,-99) , 
4, 2.60015, 0, 0, 0.413534,-99) , 
8, 7.23497, 0, 0, 0.482994,-99) , 
0, 0.500947, 0, 0, 0.498436,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0534701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809452, 1, 1, 0.550035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491936,-99) , 
3, 15.2063, 0, 0, 0.50211,-99) , 
4, 3.3878, 0, 0, 0.514007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438988,-99) , 
2, 0.197074, 1, 0, 0.509364,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0659249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.221143, 0, 1, 0.603888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420635,-99) , 
2, -0.112706, 0, 0, 0.500538,-99) , 
2, -0.157325, 1, 0, 0.557607,-99) , 
NN(
NN(
0, 
0, 
-1, -0.777766, 0, 1, 0.551974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443308,-99) , 
12, 0.604702, 1, 0, 0.494127,-99) , 
6, -0.333313, 1, 0, 0.503956,-99) , 
2, -0.0903933, 1, 0, 0.512167,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.108044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.62635, 1, 1, 0.553553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418428,-99) , 
6, -0.846641, 1, 0, 0.476281,-99) , 
8, 5.94749, 0, 0, 0.543001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45826,-99) , 
2, -0.0193585, 1, 0, 0.504635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44392,-99) , 
2, 0.054604, 1, 0, 0.493061,-99) , 
12, -0.337216, 1, 0, 0.517448,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0600088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480722,-99) , 
10, 0.131956, 0, 0, 0.504563,-99) , 
8, 19.4181, 0, 0, 0.509598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44188,-99) , 
11, -1.07086, 1, 0, 0.498016,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0777477);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.602297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470991,-99) , 
12, -0.797171, 1, 0, 0.490157,-99) , 
6, 0.387754, 1, 0, 0.498611,-99) , 
NN(
0, 
0, 
-1, 3.82588, 1, -1, 0.44072,-99) , 
6, -0.428559, 0, 0, 0.487844,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0458803);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494566,-99) , 
0, 0.502852, 0, 0, 0.503523,-99) , 
10, 2.1577, 0, 0, 0.510651,-99) , 
11, -3.58943, 1, 0, 0.514944,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.045124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.210728, 0, 1, 0.518661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468034,-99) , 
5, 0.999524, 0, 0, 0.513646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434766,-99) , 
3, 18.2992, 1, 0, 0.509171,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0723433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496407,-99) , 
6, 0.42857, 1, 0, 0.519461,-99) , 
10, 0.714929, 0, 0, 0.533577,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492979,-99) , 
8, 7.21274, 0, 0, 0.525306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462002,-99) , 
2, -0.0503503, 1, 0, 0.473975,-99) , 
3, 10.049, 1, 0, 0.487633,-99) , 
11, -2.18102, 1, 0, 0.506668,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0629309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.566408, 1, 1, 0.589577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44021,-99) , 
3, 14.6647, 0, 0, 0.484437,-99) , 
8, 12.3183, 1, 0, 0.532693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567255,-99) , 
NN(
0, 
0, 
-1, 0.0579437, 1, -1, 0.481357,-99) , 
12, -1.97595, 1, 0, 0.485469,-99) , 
0, 0.494283, 1, 0, 0.494521,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0645782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675151,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447151,-99) , 
11, -3.81624, 0, 0, 0.521863,-99) , 
10, -0.751403, 0, 0, 0.57486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497431,-99) , 
6, 0.547042, 1, 0, 0.505724,-99) , 
NN(
0, 
0, 
-1, 1.39919, 1, -1, 0.449303,-99) , 
8, 9.93636, 0, 0, 0.490956,-99) , 
12, -1.42761, 1, 0, 0.502094,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.068559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.574288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499027,-99) , 
2, 0.0501505, 1, 0, 0.557553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493719,-99) , 
0, 0.495233, 1, 0, 0.506329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408109,-99) , 
3, 12.8246, 1, 0, 0.498958,-99) , 
8, 13.9873, 0, 0, 0.519356,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0703001);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.98498, 1, 1, 0.576892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454175,-99) , 
12, 1.00025, 1, 0, 0.527308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48819,-99) , 
3, 3.89409, 1, 0, 0.50134,-99) , 
11, -1.78964, 0, 0, 0.511499,-99) , 
0, 0.504757, 0, 0, 0.516149,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0664254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.000203798, 0, 1, 0.575335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499046,-99) , 
12, 0.000980922, 1, 0, 0.525299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474376,-99) , 
10, 1.57226, 0, 0, 0.490119,-99) , 
0, 0.497138, 0, 0, 0.510731,-99) , 
3, 16.2383, 0, 0, 0.517471,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.102144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00613288, 0, 1, 0.580438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469078,-99) , 
10, 1.09434, 1, 0, 0.514268,-99) , 
6, 0.891109, 1, 0, 0.547633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602189,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468876,-99) , 
10, 1.75731, 0, 0, 0.482831,-99) , 
10, -0.716323, 1, 0, 0.494575,-99) , 
6, 0.714235, 0, 0, 0.52586,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0851647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28821, 0, 1, 0.562984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43105,-99) , 
0, 0.497892, 1, 0, 0.515508,-99) , 
0, 0.498406, 0, 0, 0.535265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406384,-99) , 
12, -0.728722, 0, 0, 0.46674,-99) , 
0, 0.503804, 1, 0, 0.527632,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.121315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.2851, 1, 1, 0.558998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434298,-99) , 
10, 1.00201, 1, 0, 0.507431,-99) , 
8, 9.55014, 0, 0, 0.536098,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460486,-99) , 
3, 16.8877, 1, 0, 0.526494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437241,-99) , 
10, -0.41008, 1, 0, 0.455883,-99) , 
3, 14.8375, 0, 0, 0.47903,-99) , 
8, 12.6374, 1, 0, 0.507635,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.10202);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.59069, 0, 1, 0.594047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37629,-99) , 
6, 0.156217, 1, 0, 0.46942,-99) , 
0, 0.494281, 0, 0, 0.564124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372795,-99) , 
10, -0.990013, 0, 0, 0.507816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425712,-99) , 
0, 0.501901, 1, 0, 0.493069,-99) , 
6, 0.619031, 1, 0, 0.514811,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0871934);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.54113, 1, 1, 0.547001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459729,-99) , 
0, 0.500947, 0, 0, 0.475904,-99) , 
3, 12.6784, 0, 0, 0.496485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397534,-99) , 
8, 19.388, 1, 0, 0.489626,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.057918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.468659, 1, 1, 0.544648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444035,-99) , 
12, -1.5395, 1, 0, 0.483721,-99) , 
10, 0.135557, 0, 0, 0.525406,-99) , 
NN(
0, 
0, 
-1, -3.77909, 0, -1, 0.477719,-99) , 
0, 0.500947, 0, 0, 0.489884,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0559785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477107,-99) , 
4, 3.10124, 1, 0, 0.506104,-99) , 
12, -1.59711, 1, 0, 0.511711,-99) , 
NN(
0, 
0, 
-1, 11.9716, 1, -1, 0.438699,-99) , 
10, -0.999936, 0, 0, 0.506594,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0855335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.812724, 0, 1, 0.552197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451558,-99) , 
9, -951.286, 1, 0, 0.483783,-99) , 
11, -1.89873, 1, 0, 0.520688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494596,-99) , 
11, -1.56992, 1, 0, 0.516727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453114,-99) , 
6, -0.714271, 1, 0, 0.463616,-99) , 
10, 1.2851, 0, 0, 0.478947,-99) , 
0, 0.498091, 1, 0, 0.498243,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0736341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.641881, 1, 1, 0.523003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446367,-99) , 
10, -0.0682059, 0, 0, 0.469067,-99) , 
11, -2.61063, 0, 0, 0.507902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453659,-99) , 
6, -0.523786, 0, 0, 0.496323,-99) , 
NN(
0, 
0, 
-1, -1.23528e-05, 0, -1, 0.398096,-99) , 
3, 13.119, 1, 0, 0.465442,-99) , 
0, 0.49714, 0, 0, 0.491044,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0670428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47585,-99) , 
8, 12.6506, 0, 0, 0.54058,-99) , 
9, -951.286, 1, 0, 0.575482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480596,-99) , 
3, 11.4177, 0, 0, 0.502976,-99) , 
NN(
0, 
0, 
-1, 0.388083, 0, -1, 0.442302,-99) , 
3, 16.23, 1, 0, 0.49564,-99) , 
12, -1.60913, 1, 0, 0.503383,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0517778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638269,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465283,-99) , 
8, 13.0157, 1, 0, 0.51943,-99) , 
3, 15.0203, 0, 0, 0.534597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452879,-99) , 
2, -0.0402708, 0, 0, 0.491188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417875,-99) , 
2, 0.200944, 1, 0, 0.487046,-99) , 
0, 0.494281, 1, 0, 0.496406,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0629132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.523473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449149,-99) , 
11, -3.42342, 0, 0, 0.517697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484942,-99) , 
0, 0.49808, 1, 0, 0.514565,-99) , 
NN(
0, 
0, 
-1, 0.900201, 1, -1, 0.454563,-99) , 
3, 13.4066, 0, 0, 0.483231,-99) , 
6, 0.809501, 1, 0, 0.501629,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0757993);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529994,-99) , 
NN(
NN(
0, 
0, 
-1, 0.619098, 1, 1, 0.535884,-99) , 
NN(
0, 
0, 
-1, 0.490472, 0, -1, 0.459878,-99) , 
2, -0.0818425, 1, 0, 0.47119,-99) , 
11, -1.12685, 0, 0, 0.481493,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0733844);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440705,-99) , 
2, -0.0888877, 0, 0, 0.505558,-99) , 
3, 17.2865, 0, 0, 0.513882,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478936,-99) , 
3, 6.99834, 0, 0, 0.534428,-99) , 
NN(
0, 
0, 
-1, -0.368638, 1, -1, 0.464289,-99) , 
6, 0.619012, 1, 0, 0.486085,-99) , 
0, 0.49809, 0, 0, 0.500551,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0484772);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493692,-99) , 
2, 0.00202799, 1, 0, 0.56303,-99) , 
NN(
NN(
0, 
0, 
-1, -1.81595, 1, 1, 0.521907,-99) , 
NN(
0, 
0, 
-1, -0.528993, 0, -1, 0.480766,-99) , 
10, 1.09263, 0, 0, 0.496655,-99) , 
12, -1.73893, 1, 0, 0.501985,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0873052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.205077, 0, 1, 0.621451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413716,-99) , 
0, 0.502852, 1, 0, 0.504863,-99) , 
10, 0.0678079, 0, 0, 0.526107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457197,-99) , 
10, 0.682616, 0, 0, 0.507452,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.466591,-99) , 
11, -1.63218, 1, 0, 0.486084,-99) , 
12, -0.810149, 1, 0, 0.498593,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.091718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490406,-99) , 
11, -2.79753, 0, 0, 0.534776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46077,-99) , 
12, -0.013172, 1, 0, 0.475609,-99) , 
10, 0.998524, 1, 0, 0.510725,-99) , 
NN(
0, 
0, 
-1, 0.963726, 1, -1, 0.445804,-99) , 
6, 0.904747, 1, 0, 0.493301,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0729485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.4876, 1, 1, 0.530252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430907,-99) , 
0, 0.505709, 1, 0, 0.525956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398971,-99) , 
10, 0.433557, 1, 0, 0.437916,-99) , 
4, 2.76821, 0, 0, 0.47701,-99) , 
8, 16.3182, 1, 0, 0.518233,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0784105);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446489,-99) , 
3, 3.4486, 0, 0, 0.513112,-99) , 
NN(
0, 
0, 
-1, 12.8142, 0, -1, 0.472833,-99) , 
8, 10.3675, 1, 0, 0.483249,-99) , 
3, 18.2968, 0, 0, 0.488065,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0835152);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.724269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493097,-99) , 
3, 5.71805, 0, 0, 0.597418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47919,-99) , 
3, 13.7234, 0, 0, 0.515403,-99) , 
6, 0.71387, 1, 0, 0.546324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393842,-99) , 
9, -0.999151, 0, 0, 0.483806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420889,-99) , 
8, 5.64638, 1, 0, 0.441007,-99) , 
9, -951.286, 0, 0, 0.467378,-99) , 
11, -2.9418, 1, 0, 0.479876,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0862177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445186,-99) , 
8, 4.64697, 0, 0, 0.529071,-99) , 
8, 16.208, 0, 0, 0.552651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497471,-99) , 
11, -1.90556, 0, 0, 0.515599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428548,-99) , 
12, 0.891309, 0, 0, 0.45171,-99) , 
10, 0.998604, 1, 0, 0.49107,-99) , 
0, 0.500947, 0, 0, 0.507931,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0758944);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.40512, 0, 1, 0.547218,-99) , 
NN(
NN(
0, 
0, 
-1, 17.2937, 0, 1, 0.518332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333204,-99) , 
13, 10.6225, 1, 0, 0.42157,-99) , 
11, -2.22903, 0, 0, 0.505793,-99) , 
12, -0.625955, 1, 0, 0.521559,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0728996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496188, 1, 1, 0.57124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461852,-99) , 
3, 12.1138, 0, 0, 0.48688,-99) , 
1, 0.00297438, 0, 0, 0.497312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392038,-99) , 
7, 0.0124849, 1, 0, 0.494395,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0536188);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483599,-99) , 
12, 0.0982294, 0, 0, 0.49974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384556,-99) , 
1, -0.00789397, 0, 0, 0.49615,-99) , 
11, -3.81268, 1, 0, 0.499829,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0529327);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565841,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487732,-99) , 
12, -0.546786, 0, 0, 0.547491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480061,-99) , 
12, -0.506972, 1, 0, 0.49778,-99) , 
6, -0.809517, 1, 0, 0.503831,-99) , 
3, 18.2924, 0, 0, 0.507421,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0531412);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0748052, 1, 1, 0.562021,-99) , 
NN(
NN(
0, 
0, 
-1, -1.06971, 0, 1, 0.51442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454634,-99) , 
0, 0.502851, 0, 0, 0.474888,-99) , 
2, 0.0547267, 1, 0, 0.505828,-99) , 
6, -0.809486, 1, 0, 0.512382,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0605597);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.36572, 0, 1, 0.569122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530207,-99) , 
NN(
0, 
0, 
-1, -0.519562, 1, -1, 0.472538,-99) , 
11, -1.03752, 0, 0, 0.481432,-99) , 
11, -3.46883, 1, 0, 0.486446,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0515702);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620696,-99) , 
NN(
NN(
0, 
0, 
-1, 3.96473, 0, 1, 0.54973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487924,-99) , 
3, 18.8164, 0, 0, 0.494079,-99) , 
6, -0.523783, 1, 0, 0.502421,-99) , 
10, -1.28219, 1, 0, 0.506963,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0540033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.05892, 1, 1, 0.548995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491806,-99) , 
10, 1.57, 0, 0, 0.49952,-99) , 
0, 0.49605, 1, 0, 0.509138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443767,-99) , 
10, 0.147081, 1, 0, 0.484213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426062,-99) , 
3, 11.9651, 1, 0, 0.460281,-99) , 
0, 0.493328, 0, 0, 0.501462,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0806034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.17866, 0, 1, 0.534299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446416,-99) , 
4, 6.36787, 1, 0, 0.526772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572688,-99) , 
NN(
0, 
0, 
-1, 0.495237, 0, -1, 0.454681,-99) , 
12, 0.267247, 1, 0, 0.475055,-99) , 
10, 1.28461, 1, 0, 0.511125,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0807399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4838, 0, 1, 0.534488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458875,-99) , 
12, 0.613783, 1, 0, 0.521462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476861,-99) , 
8, 15.3605, 0, 0, 0.497933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407145,-99) , 
8, 10.7593, 1, 0, 0.436193,-99) , 
0, 0.501809, 0, 0, 0.475328,-99) , 
0, 0.499995, 1, 0, 0.505163,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0610042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490948,-99) , 
12, -0.0294257, 1, 0, 0.540236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484422,-99) , 
10, 0.996066, 0, 0, 0.501551,-99) , 
2, -0.0442658, 1, 0, 0.510647,-99) , 
2, 0.197074, 0, 0, 0.51499,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0517208);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489775,-99) , 
10, 1.8767, 0, 0, 0.498433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424524,-99) , 
11, -0.76757, 1, 0, 0.491536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403736,-99) , 
11, -3.75713, 0, 0, 0.487492,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0851862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479039,-99) , 
3, 9.41378, 0, 0, 0.53075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468826,-99) , 
3, 16.5763, 0, 0, 0.484462,-99) , 
6, 0.809504, 1, 0, 0.508084,-99) , 
NN(
0, 
0, 
-1, -1.40287, 0, -1, 0.457892,-99) , 
12, 0.306877, 1, 0, 0.494227,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.107944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00153168, 1, 1, 0.592476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482548,-99) , 
10, -0.225188, 0, 0, 0.536313,-99) , 
9, -951.286, 1, 0, 0.555341,-99) , 
NN(
NN(
0, 
0, 
-1, 0.499046, 0, 1, 0.554689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410981,-99) , 
10, 1.42666, 0, 0, 0.473983,-99) , 
6, -0.142836, 1, 0, 0.492198,-99) , 
12, -0.14834, 1, 0, 0.527411,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.081543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425952,-99) , 
8, 13.0622, 1, 0, 0.54755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42164,-99) , 
11, -2.47751, 0, 0, 0.492779,-99) , 
11, -2.68334, 1, 0, 0.507007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566557,-99) , 
NN(
0, 
0, 
-1, 0.892304, 0, -1, 0.438018,-99) , 
3, 19.0299, 0, 0, 0.453282,-99) , 
3, 13.1429, 1, 0, 0.490414,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.102244);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469694,-99) , 
3, 3.88646, 0, 0, 0.528491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444482,-99) , 
6, 0.618865, 1, 0, 0.469332,-99) , 
0, 0.497139, 0, 0, 0.503959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415491,-99) , 
11, -1.03718, 1, 0, 0.467448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344223,-99) , 
8, 10.6571, 0, 0, 0.431491,-99) , 
10, 1.57046, 1, 0, 0.488547,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0718608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.44687, 1, 1, 0.628565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485018,-99) , 
6, 0.523702, 1, 0, 0.5191,-99) , 
10, -0.623035, 0, 0, 0.562024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541385,-99) , 
NN(
0, 
0, 
-1, -0.121715, 0, -1, 0.474688,-99) , 
10, 2.08889, 0, 0, 0.483344,-99) , 
12, -1.22474, 1, 0, 0.497125,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0500047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.74965, 0, 1, 0.581424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49353,-99) , 
6, -0.238126, 1, 0, 0.504537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450686,-99) , 
11, -0.94534, 1, 0, 0.496651,-99) , 
12, -1.73893, 1, 0, 0.503388,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0530038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0219792, 1, 1, 0.574685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460468,-99) , 
0, 0.502443, 0, 0, 0.555223,-99) , 
NN(
NN(
0, 
0, 
-1, -3.71461, 0, 1, 0.571668,-99) , 
NN(
0, 
0, 
-1, -0.378302, 0, -1, 0.488731,-99) , 
12, -1.71489, 1, 0, 0.495023,-99) , 
0, 0.501898, 0, 0, 0.507128,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0585762);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.333329, 1, 1, 0.545238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491249,-99) , 
4, 2.56212, 0, 0, 0.503295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428315,-99) , 
12, 0.887655, 1, 0, 0.494046,-99) , 
4, 3.77733, 0, 0, 0.506222,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0690452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00473, 1, 1, 0.566612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414209,-99) , 
12, -0.330972, 0, 0, 0.5012,-99) , 
8, 9.48573, 0, 0, 0.550604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466522,-99) , 
6, -0.809474, 0, 0, 0.510109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404675,-99) , 
11, -3.82957, 0, 0, 0.505776,-99) , 
0, 0.495233, 1, 0, 0.517175,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0762456);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486571,-99) , 
10, 1.56805, 1, 0, 0.607984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457148,-99) , 
0, 0.502852, 1, 0, 0.513646,-99) , 
6, 0.580666, 1, 0, 0.524181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361663,-99) , 
4, 0.513636, 0, 0, 0.484728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343045,-99) , 
8, 6.79195, 1, 0, 0.465022,-99) , 
8, 8.34351, 0, 0, 0.51161,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0711014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.1118, 0, 1, 0.591165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467182,-99) , 
8, 15.246, 1, 0, 0.566385,-99) , 
NN(
NN(
0, 
0, 
-1, -2.72767, 1, 1, 0.511355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437529,-99) , 
11, -1.51412, 1, 0, 0.465158,-99) , 
10, 0.853269, 1, 0, 0.487126,-99) , 
11, -2.89989, 1, 0, 0.500548,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0650309);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481134,-99) , 
0, 0.499042, 1, 0, 0.508039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420453,-99) , 
0, 0.498091, 0, 0, 0.45961,-99) , 
3, 12.7114, 1, 0, 0.493006,-99) , 
8, 19.4171, 0, 0, 0.496908,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0548798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498349,-99) , 
8, 16.9529, 0, 0, 0.506598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393353,-99) , 
4, 6.22102, 0, 0, 0.451168,-99) , 
4, 4.32349, 1, 0, 0.496272,-99) , 
NN(
0, 
0, 
-1, 15.6196, 1, -1, 0.455409,-99) , 
6, 0.904678, 1, 0, 0.48526,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0645991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491292,-99) , 
0, 0.498079, 1, 0, 0.510159,-99) , 
8, 18.8511, 1, 0, 0.539714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463304,-99) , 
0, 0.492376, 0, 0, 0.535305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470996,-99) , 
1, 0.0013636, 0, 0, 0.486248,-99) , 
2, 0.0562948, 0, 0, 0.495779,-99) , 
3, 16.2419, 0, 0, 0.500556,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0874069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473004,-99) , 
11, -1.81491, 1, 0, 0.554445,-99) , 
NN(
0, 
0, 
-1, -0.630558, 1, -1, 0.478103,-99) , 
10, 0.587259, 0, 0, 0.504279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451894,-99) , 
10, 1.92617, 1, 0, 0.490882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40236,-99) , 
4, 3.23345, 1, 0, 0.4633,-99) , 
11, -1.5083, 1, 0, 0.491559,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0728288);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.10659, 0, 1, 0.535112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443177,-99) , 
11, -2.79451, 1, 0, 0.469494,-99) , 
3, 14.1853, 1, 0, 0.520845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515273,-99) , 
NN(
0, 
0, 
-1, 0.523655, 1, -1, 0.459305,-99) , 
8, 13.2046, 0, 0, 0.481332,-99) , 
12, -0.0752993, 1, 0, 0.504664,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0916368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.54472, 1, 1, 0.593847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399676,-99) , 
12, -1.70291, 0, 0, 0.497478,-99) , 
4, 2.81461, 1, 0, 0.558273,-99) , 
NN(
NN(
0, 
0, 
-1, 0.891236, 1, 1, 0.535385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470616,-99) , 
2, 0.11782, 0, 0, 0.478929,-99) , 
6, 0.809512, 0, 0, 0.50436,-99) , 
12, -1.08323, 1, 0, 0.515968,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.113864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 1, 1, 0.621584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41632,-99) , 
0, 0.498091, 0, 0, 0.49648,-99) , 
4, 1.76373, 1, 0, 0.555264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458523,-99) , 
3, 10.7099, 0, 0, 0.515964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452785,-99) , 
11, -2.82642, 1, 0, 0.470613,-99) , 
6, 0.873005, 1, 0, 0.495838,-99) , 
6, 0.33333, 1, 0, 0.509204,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0761388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429338,-99) , 
4, 3.79799, 1, 0, 0.501998,-99) , 
0, 0.502853, 0, 0, 0.518183,-99) , 
NN(
NN(
0, 
0, 
-1, 7.29243, 0, 1, 0.526759,-99) , 
NN(
0, 
0, 
-1, 1.40981, 0, -1, 0.464647,-99) , 
3, 10.0429, 1, 0, 0.480295,-99) , 
11, -2.44928, 1, 0, 0.492317,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0514367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714278, 1, 1, 0.523019,-99) , 
NN(
0, 
0, 
-1, -0.132055, 0, -1, 0.478448,-99) , 
2, -0.0427205, 0, 0, 0.511788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432104,-99) , 
2, 0.198873, 1, 0, 0.506423,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0512099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476792,-99) , 
8, 13.7259, 1, 0, 0.502635,-99) , 
2, -0.149003, 1, 0, 0.506724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425122,-99) , 
2, -0.229227, 0, 0, 0.502887,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0656166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492377, 1, 1, 0.518845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463441,-99) , 
5, 0.999525, 0, 0, 0.512126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561187,-99) , 
NN(
0, 
0, 
-1, -2.47175, 0, -1, 0.407034,-99) , 
4, 0.771767, 1, 0, 0.43905,-99) , 
3, 4.9079, 0, 0, 0.498971,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0742883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470815,-99) , 
9, -951.286, 0, 0, 0.521647,-99) , 
6, 0.752849, 1, 0, 0.531358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453252,-99) , 
12, -0.809132, 0, 0, 0.493789,-99) , 
NN(
0, 
0, 
-1, 13.1727, 0, -1, 0.416637,-99) , 
3, 12.252, 1, 0, 0.482281,-99) , 
8, 14.0062, 0, 0, 0.499056,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0619847);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478049,-99) , 
4, 2.64918, 1, 0, 0.514998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461328,-99) , 
0, 0.49714, 1, 0, 0.483756,-99) , 
3, 10.9778, 1, 0, 0.496468,-99) , 
8, 19.3871, 0, 0, 0.500073,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0670555);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599738,-99) , 
NN(
NN(
0, 
0, 
-1, 0.809512, 1, 1, 0.531618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473652,-99) , 
10, 1.54219, 0, 0, 0.482388,-99) , 
11, -1.31114, 0, 0, 0.493712,-99) , 
1, -0.0075517, 1, 0, 0.497024,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0780472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415063,-99) , 
9, -951.286, 0, 0, 0.517981,-99) , 
11, -3.04273, 0, 0, 0.546589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549304,-99) , 
NN(
0, 
0, 
-1, -1.70277, 1, -1, 0.474319,-99) , 
11, -0.781476, 0, 0, 0.482217,-99) , 
12, -1.24706, 1, 0, 0.493335,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.094119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.70253, 1, 1, 0.532152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435907,-99) , 
9, -951.286, 1, 0, 0.475559,-99) , 
11, -2.97028, 0, 0, 0.516751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419661,-99) , 
11, -1.17893, 0, 0, 0.450151,-99) , 
10, 2.14648, 0, 0, 0.471471,-99) , 
12, -0.067069, 1, 0, 0.497991,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.108981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.387857, 1, 1, 0.571181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395309,-99) , 
6, -0.838805, 1, 0, 0.474153,-99) , 
3, 4.38147, 0, 0, 0.522844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478697,-99) , 
0, 0.498073, 1, 0, 0.517089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43358,-99) , 
3, 17.2251, 0, 0, 0.445091,-99) , 
1, -0.000544935, 1, 0, 0.472731,-99) , 
6, 0.619046, 1, 0, 0.488134,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0797911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471412,-99) , 
3, 14.1852, 1, 0, 0.516884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446912,-99) , 
10, 1.28871, 0, 0, 0.471236,-99) , 
1, 0.0013636, 1, 0, 0.50244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401895,-99) , 
2, 0.202082, 1, 0, 0.496349,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0616869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479457,-99) , 
4, 1.7743, 0, 0, 0.57485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485951,-99) , 
3, 14.2183, 0, 0, 0.496472,-99) , 
10, 1.22624, 0, 0, 0.508767,-99) , 
NN(
0, 
0, 
-1, -0.845148, 0, -1, 0.46741,-99) , 
11, -1.31114, 1, 0, 0.499173,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0672142);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.954646, 1, 1, 0.534668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489454,-99) , 
11, -1.48637, 0, 0, 0.505704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430201,-99) , 
12, 0.700799, 1, 0, 0.491018,-99) , 
6, 0.80951, 0, 0, 0.511103,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0802132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499041, 0, 1, 0.540622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462899,-99) , 
0, 0.494282, 1, 0, 0.481651,-99) , 
8, 15.9984, 1, 0, 0.51889,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476496,-99) , 
11, -2.57384, 1, 0, 0.49174,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.407224,-99) , 
12, -1.42031, 0, 0, 0.480176,-99) , 
8, 12.6579, 0, 0, 0.49898,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0679605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491076,-99) , 
10, -0.097881, 1, 0, 0.510504,-99) , 
10, 1.35301, 0, 0, 0.518137,-99) , 
NN(
0, 
0, 
-1, 12.0906, 0, -1, 0.449215,-99) , 
10, 1.57112, 1, 0, 0.503404,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0678845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 1, 1, 0.552327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475399,-99) , 
12, 0.700799, 1, 0, 0.534222,-99) , 
NN(
NN(
0, 
0, 
-1, 13.7789, 0, 1, 0.535313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42865,-99) , 
6, 0.82313, 0, 0, 0.478764,-99) , 
4, 3.78358, 0, 0, 0.494579,-99) , 
6, 0.714265, 1, 0, 0.510127,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0763649);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466886,-99) , 
11, -2.04819, 1, 0, 0.522001,-99) , 
11, -1.32178, 0, 0, 0.536749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490192,-99) , 
7, 0.00818358, 0, 0, 0.49679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388654,-99) , 
2, 0.14963, 1, 0, 0.486996,-99) , 
0, 0.499043, 0, 0, 0.508564,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0720277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.435034, 1, 1, 0.560144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487056,-99) , 
9, 1.00025, 0, 0, 0.501267,-99) , 
9, -951.286, 1, 0, 0.518766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561129,-99) , 
NN(
0, 
0, 
-1, -0.186389, 0, -1, 0.461201,-99) , 
10, -0.716472, 1, 0, 0.472673,-99) , 
6, 0.238096, 0, 0, 0.507822,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0430508);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445231,-99) , 
6, -0.809487, 0, 0, 0.498446,-99) , 
NN(
0, 
0, 
-1, 0.498093, 0, -1, 0.416058,-99) , 
2, 0.116711, 1, 0, 0.493949,-99) , 
2, 0.197352, 0, 0, 0.498558,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.086018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442456,-99) , 
0, 0.492376, 0, 0, 0.557766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297381,-99) , 
13, 5.6122, 1, 0, 0.423357,-99) , 
11, -3.00494, 0, 0, 0.529323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492928,-99) , 
8, 14.869, 0, 0, 0.535996,-99) , 
NN(
0, 
0, 
-1, -0.153344, 1, -1, 0.478198,-99) , 
0, 0.494282, 1, 0, 0.488937,-99) , 
6, 0.52379, 1, 0, 0.499701,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0791444);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.809311, 1, 1, 0.557771,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464462,-99) , 
3, 12.152, 1, 0, 0.495947,-99) , 
2, 0.179626, 0, 0, 0.503849,-99) , 
12, 0.3128, 0, 0, 0.518606,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.094132);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46472,-99) , 
11, -0.90783, 1, 0, 0.542813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477963,-99) , 
12, -1.14135, 1, 0, 0.50999,-99) , 
10, 0.428427, 0, 0, 0.529345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460411,-99) , 
0, 0.505708, 1, 0, 0.526318,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0881396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419871,-99) , 
12, -0.840378, 1, 0, 0.492493,-99) , 
11, -2.18063, 0, 0, 0.514666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453679,-99) , 
10, 2.14104, 0, 0, 0.466917,-99) , 
11, -2.43063, 1, 0, 0.475245,-99) , 
10, 0.427323, 1, 0, 0.491247,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0791033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.54141, 0, 1, 0.619872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489702,-99) , 
8, 17.4545, 0, 0, 0.499014,-99) , 
10, 0.97396, 0, 0, 0.522909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434643,-99) , 
0, 0.498086, 1, 0, 0.476776,-99) , 
11, -1.49484, 1, 0, 0.508914,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0695751);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492922,-99) , 
6, -0.333352, 1, 0, 0.506997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448003,-99) , 
4, 3.7201, 0, 0, 0.467771,-99) , 
9, -951.286, 0, 0, 0.491397,-99) , 
5, 0.999525, 1, 0, 0.498857,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0613537);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497514,-99) , 
4, 1.81339, 0, 0, 0.606508,-99) , 
NN(
0, 
0, 
-1, 0.0475684, 1, 1, 0.516148,-99) , 
12, -0.676605, 1, 0, 0.526187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499535,-99) , 
11, -3.23763, 1, 0, 0.520764,-99) , 
NN(
0, 
0, 
-1, 14.9793, 1, -1, 0.442995,-99) , 
1, 0.000137627, 1, 0, 0.481135,-99) , 
10, 0.141948, 0, 0, 0.511755,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0711025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.24855, 1, 1, 0.567456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494201,-99) , 
0, 0.495233, 1, 0, 0.511727,-99) , 
3, 13.1285, 0, 0, 0.528206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458254,-99) , 
10, 1.8574, 1, 0, 0.518071,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0738329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523726, 1, 1, 0.548779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335006,-99) , 
13, 19.0173, 1, 0, 0.4878,-99) , 
11, -2.36665, 0, 0, 0.519791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422413,-99) , 
11, -1.09006, 1, 0, 0.459082,-99) , 
10, 1.56972, 1, 0, 0.506602,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0275057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333344, 1, 1, 0.556731,-99) , 
NN(
0, 
0, 
-1, 0.503033, 1, -1, 0.495649,-99) , 
0, 0.503805, 0, 0, 0.501974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427379,-99) , 
2, 0.200417, 1, 0, 0.497256,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0784316);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.854777, 0, 1, 0.594629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486575,-99) , 
6, 0.823119, 1, 0, 0.509762,-99) , 
6, -0.238037, 1, 0, 0.523485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483696,-99) , 
0, 0.48948, 0, 0, 0.520753,-99) , 
NN(
0, 
0, 
-1, 11.1151, 0, -1, 0.447958,-99) , 
0, 0.490879, 1, 0, 0.464465,-99) , 
0, 0.495233, 0, 0, 0.507562,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0700534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.909211, 1, 1, 0.528268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460816,-99) , 
4, 3.94737, 0, 0, 0.478352,-99) , 
10, -0.140444, 0, 0, 0.5155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436231,-99) , 
4, 7.41939, 1, 0, 0.510018,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0742843);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629243,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0770949, 1, 1, 0.524373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468294,-99) , 
6, 0.274409, 1, 0, 0.478448,-99) , 
0, 0.499994, 0, 0, 0.493807,-99) , 
6, -0.904754, 1, 0, 0.503141,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0573706);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485199,-99) , 
10, -0.0565056, 0, 0, 0.517684,-99) , 
NN(
0, 
0, 
-1, -0.095324, 1, -1, 0.475959,-99) , 
8, 13.6867, 1, 0, 0.501817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436704,-99) , 
10, 2.14237, 1, 0, 0.49646,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0803294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436649,-99) , 
8, 16.7217, 1, 0, 0.531498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457665,-99) , 
12, 0.0105108, 1, 0, 0.490376,-99) , 
0, 0.497819, 1, 0, 0.508814,-99) , 
NN(
0, 
0, 
-1, 0.428149, 0, -1, 0.381696,-99) , 
0, 0.490472, 0, 0, 0.501168,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0505598);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.429975, 1, 1, 0.574247,-99) , 
NN(
NN(
0, 
0, 
-1, -0.333337, 1, 1, 0.556385,-99) , 
NN(
0, 
0, 
-1, -0.714263, 0, -1, 0.485868,-99) , 
0, 0.502852, 0, 0, 0.496028,-99) , 
8, 18.0363, 0, 0, 0.503323,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0903626);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497146, 1, 1, 0.564469,-99) , 
NN(
NN(
0, 
0, 
-1, 0.332024, 0, 1, 0.534211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453744,-99) , 
11, -1.19591, 0, 0, 0.484103,-99) , 
12, -0.691101, 1, 0, 0.502209,-99) , 
3, 3.87303, 1, 0, 0.509878,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0420863);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59484,-99) , 
NN(
NN(
0, 
0, 
-1, 3.50516, 1, 1, 0.509042,-99) , 
NN(
0, 
0, 
-1, -0.142994, 0, -1, 0.454786,-99) , 
2, 0.0541328, 1, 0, 0.498384,-99) , 
8, 19.3902, 0, 0, 0.504369,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0753144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.9228, 1, 1, 0.57294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407391,-99) , 
10, -1.28616, 0, 0, 0.505563,-99) , 
3, 15.8352, 0, 0, 0.515771,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433779,-99) , 
11, -2.23414, 0, 0, 0.484363,-99) , 
NN(
0, 
0, 
-1, 0.499989, 1, -1, 0.309236,-99) , 
4, 0.65322, 0, 0, 0.440979,-99) , 
6, 0.238083, 0, 0, 0.497673,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0616847);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485708,-99) , 
8, 14.874, 0, 0, 0.497437,-99) , 
0, 0.498497, 0, 0, 0.506029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440805,-99) , 
12, -0.810149, 0, 0, 0.485965,-99) , 
NN(
0, 
0, 
-1, 11.6337, 0, -1, 0.399495,-99) , 
4, 4.65046, 1, 0, 0.469772,-99) , 
0, 0.499042, 1, 0, 0.49039,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0511042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.01931, 1, 1, 0.517997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433148,-99) , 
2, -0.231256, 0, 0, 0.512819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425774,-99) , 
12, 1.06955, 1, 0, 0.505378,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.05988);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479449,-99) , 
10, 1.81131, 0, 0, 0.56735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482014,-99) , 
12, -0.469578, 1, 0, 0.503923,-99) , 
10, 1.54101, 0, 0, 0.511817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457111,-99) , 
11, -1.11236, 1, 0, 0.501347,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0880418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484367,-99) , 
10, 1.57114, 1, 0, 0.54775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437598,-99) , 
12, -0.0487402, 1, 0, 0.480403,-99) , 
8, 12.6369, 1, 0, 0.512336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477288,-99) , 
4, 3.82965, 0, 0, 0.509491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425491,-99) , 
11, -1.30322, 0, 0, 0.452355,-99) , 
11, -2.4896, 1, 0, 0.469056,-99) , 
0, 0.499043, 1, 0, 0.493917,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.059954);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.223847, 0, 1, 0.556425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490029,-99) , 
3, 3.84612, 1, 0, 0.498976,-99) , 
12, -0.638521, 1, 0, 0.510476,-99) , 
NN(
0, 
0, 
-1, -0.0818425, 0, -1, 0.453426,-99) , 
10, -0.140109, 0, 0, 0.495785,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.079325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0805731, 1, 1, 0.530032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462666,-99) , 
4, 3.83259, 0, 0, 0.479927,-99) , 
11, -2.29059, 0, 0, 0.510096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460433,-99) , 
3, 13.1236, 0, 0, 0.47941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390779,-99) , 
3, 15.0114, 1, 0, 0.464487,-99) , 
0, 0.495234, 0, 0, 0.498041,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0774761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.578597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454161,-99) , 
0, 0.496186, 0, 0, 0.495325,-99) , 
6, 0.619037, 1, 0, 0.515083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47026,-99) , 
10, 1.0216, 1, 0, 0.522065,-99) , 
NN(
0, 
0, 
-1, 8.63665, 0, -1, 0.463084,-99) , 
6, -0.523796, 1, 0, 0.474383,-99) , 
12, -0.46321, 1, 0, 0.491864,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0689814);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495524,-99) , 
11, -2.15782, 1, 0, 0.517198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456816,-99) , 
11, -2.53293, 0, 0, 0.48244,-99) , 
10, 0.142454, 0, 0, 0.505778,-99) , 
NN(
0, 
0, 
-1, 0.489247, 0, -1, 0.418849,-99) , 
0, 0.490471, 0, 0, 0.501147,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0835663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.197485, 1, 1, 0.554959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489571,-99) , 
10, 1.18946, 0, 0, 0.543625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48437,-99) , 
0, 0.494145, 0, 0, 0.524396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46666,-99) , 
0, 0.505436, 0, 0, 0.473405,-99) , 
0, 0.496186, 1, 0, 0.490397,-99) , 
10, 0.999087, 0, 0, 0.510777,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0536368);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.523507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444503,-99) , 
5, 0.999525, 0, 0, 0.515394,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0921615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.668898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485182,-99) , 
6, -0.872991, 1, 0, 0.519482,-99) , 
6, -0.77776, 0, 0, 0.556498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467355,-99) , 
10, 0.387052, 0, 0, 0.505135,-99) , 
NN(
0, 
0, 
-1, 0.499041, 1, -1, 0.456145,-99) , 
12, 0.138592, 1, 0, 0.489918,-99) , 
6, -0.333318, 1, 0, 0.500966,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0835537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0478075, 1, 1, 0.527334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458501,-99) , 
3, 3.88646, 0, 0, 0.517407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451734,-99) , 
10, 0.481763, 0, 0, 0.479982,-99) , 
NN(
0, 
0, 
-1, 0.428515, 1, -1, 0.425286,-99) , 
12, -0.328228, 1, 0, 0.453761,-99) , 
0, 0.496186, 0, 0, 0.495724,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0760142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.562854, 0, 1, 0.539815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457264,-99) , 
10, -1.23243, 0, 0, 0.530054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494821,-99) , 
8, 14.517, 0, 0, 0.509927,-99) , 
NN(
0, 
0, 
-1, -0.0476378, 1, -1, 0.43021,-99) , 
0, 0.499994, 1, 0, 0.480776,-99) , 
12, -0.474857, 1, 0, 0.501916,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0659512);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669101,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47886,-99) , 
10, 0.215414, 0, 0, 0.53361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458437,-99) , 
6, 0.80951, 1, 0, 0.484669,-99) , 
0, 0.495233, 1, 0, 0.497478,-99) , 
11, -3.84362, 1, 0, 0.502336,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0936465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.321533, 1, 1, 0.571305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4111,-99) , 
3, 13.1429, 1, 0, 0.494922,-99) , 
1, 0.00078586, 0, 0, 0.5219,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472001,-99) , 
0, 0.50054, 1, 0, 0.528296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455227,-99) , 
2, -0.086773, 1, 0, 0.464205,-99) , 
11, -3.13635, 1, 0, 0.471866,-99) , 
0, 0.495233, 1, 0, 0.484795,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0771886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.670212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418366,-99) , 
12, -1.48588, 1, 0, 0.521294,-99) , 
6, 0.333211, 1, 0, 0.552584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465082,-99) , 
8, 12.6579, 0, 0, 0.488067,-99) , 
NN(
0, 
0, 
-1, 12.1037, 0, -1, 0.43822,-99) , 
0, 0.501899, 1, 0, 0.477813,-99) , 
11, -2.99574, 1, 0, 0.487619,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0793209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482543,-99) , 
4, 4.96798, 1, 0, 0.530136,-99) , 
4, 7.39984, 0, 0, 0.533854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422124,-99) , 
12, -0.616257, 1, 0, 0.465784,-99) , 
0, 0.504756, 1, 0, 0.528291,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0800908);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486722,-99) , 
5, 0.999977, 0, 0, 0.526622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470971,-99) , 
4, 0.463414, 1, 0, 0.482117,-99) , 
4, 1.88511, 0, 0, 0.506076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424792,-99) , 
5, 0.999525, 0, 0, 0.497602,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0342465);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.30406, 1, 1, 0.512393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398046,-99) , 
2, -0.225264, 0, 0, 0.506361,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0612403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427856, 0, 1, 0.586707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423921,-99) , 
10, 0.128623, 0, 0, 0.477335,-99) , 
9, -951.286, 0, 0, 0.543549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525413,-99) , 
NN(
0, 
0, 
-1, 12.7303, 1, -1, 0.478002,-99) , 
11, -1.13223, 0, 0, 0.486977,-99) , 
2, 0.0579437, 0, 0, 0.497415,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0931556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462654,-99) , 
12, 0.70142, 1, 0, 0.535311,-99) , 
NN(
0, 
0, 
-1, -0.0605763, 0, -1, 0.481327,-99) , 
10, 0.714099, 0, 0, 0.506878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573994,-99) , 
NN(
0, 
0, 
-1, 14.2242, 0, -1, 0.432836,-99) , 
11, -2.93346, 1, 0, 0.454743,-99) , 
0, 0.500947, 1, 0, 0.49286,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0572022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.15967, 0, 1, 0.605445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449518,-99) , 
2, 0.00180341, 0, 0, 0.492918,-99) , 
12, -0.570829, 1, 0, 0.536849,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488605,-99) , 
12, 0.68345, 0, 0, 0.498323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372933,-99) , 
0, 0.494011, 0, 0, 0.49327,-99) , 
0, 0.49333, 1, 0, 0.499629,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0807277);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.1779, 0, 1, 0.593089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482752,-99) , 
2, 0.0501505, 0, 0, 0.503121,-99) , 
9, -951.286, 1, 0, 0.528983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472575,-99) , 
0, 0.498091, 1, 0, 0.499529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364806,-99) , 
11, -3.73917, 0, 0, 0.491978,-99) , 
3, 12.1268, 0, 0, 0.507377,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0949513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.1346, 1, 1, 0.580279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445868,-99) , 
8, 12.5156, 0, 0, 0.492981,-99) , 
10, 0.145496, 0, 0, 0.549338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460385,-99) , 
10, -0.711859, 0, 0, 0.545253,-99) , 
NN(
0, 
0, 
-1, -0.00533344, 0, -1, 0.467013,-99) , 
2, -0.0158795, 1, 0, 0.499642,-99) , 
2, 0.0579437, 0, 0, 0.509154,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0803455);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483674,-99) , 
0, 0.494283, 0, 0, 0.537422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463962,-99) , 
10, 1.85537, 1, 0, 0.526838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439754,-99) , 
10, 0.478087, 0, 0, 0.473336,-99) , 
6, 0.904683, 1, 0, 0.511795,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_12_25::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_12_25::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_12_25 *ReadBDT_maker_LHC19c2a_12_25(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_12_25(theInpVar);
  }
}
