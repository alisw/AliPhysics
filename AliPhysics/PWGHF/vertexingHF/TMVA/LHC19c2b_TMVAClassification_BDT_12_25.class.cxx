#include "LHC19c2b_TMVAClassification_BDT_12_25.class.h"

double ReadBDT_LHC19c2b_12_25::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_12_25::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.88337903736284);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.901719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498294,-99) , 
3, 3.66536, 0, 0, 0.860104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29405,-99) , 
12, 0.449003, 1, 0, 0.7922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.177693,-99) , 
6, 0.863829, 1, 0, 0.309222,-99) , 
NN(
0, 
0, 
-1, 1.49095, 1, -1, 0.0497796,-99) , 
10, 0.737311, 1, 0, 0.142463,-99) , 
6, 0.714269, 1, 0, 0.501938,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.775671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.30613, 0, 1, 0.848734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.355011,-99) , 
12, 0.662969, 1, 0, 0.798725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276224,-99) , 
8, 15.5128, 0, 0, 0.385313,-99) , 
NN(
0, 
0, 
-1, 13.9718, 0, -1, 0.092714,-99) , 
10, 0.768007, 1, 0, 0.212827,-99) , 
6, 0.619025, 1, 0, 0.506623,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.601388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.4086, 0, 1, 0.820862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406619,-99) , 
6, -0.755089, 0, 0, 0.523257,-99) , 
12, -0.197782, 1, 0, 0.740432,-99) , 
NN(
0, 
0, 
-1, 1.28405, 1, -1, 0.216807,-99) , 
6, 0.714283, 1, 0, 0.50701,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.493536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.69856, 0, 1, 0.7482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349148,-99) , 
10, 1.6478, 1, 0, 0.47937,-99) , 
12, -0.540784, 1, 0, 0.637896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.275999,-99) , 
3, 15.93, 0, 0, 0.34717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.0606974,-99) , 
10, 1.28371, 1, 0, 0.214218,-99) , 
6, 0.809508, 1, 0, 0.487669,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.411178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.715419, 1, 1, 0.743082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402148,-99) , 
9, -951.286, 0, 0, 0.513204,-99) , 
3, 5.07605, 0, 0, 0.666155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230073,-99) , 
6, 0.931901, 1, 0, 0.434993,-99) , 
NN(
0, 
0, 
-1, 0.863876, 1, -1, 0.1239,-99) , 
10, 1.29614, 1, 0, 0.317079,-99) , 
6, 0.523785, 1, 0, 0.472135,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.354404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.28797, 1, 1, 0.642652,-99) , 
NN(
0, 
0, 
-1, 0.378619, 1, -1, 0.393529,-99) , 
12, -0.0778726, 1, 0, 0.570046,-99) , 
NN(
0, 
0, 
-1, 1.29911, 1, -1, 0.254678,-99) , 
6, 0.809452, 1, 0, 0.464109,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.382858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.58, 0, 1, 0.687471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292215,-99) , 
6, -0.897296, 0, 0, 0.379849,-99) , 
8, 3.87742, 0, 0, 0.622123,-99) , 
NN(
NN(
0, 
0, 
-1, -0.903956, 1, 1, 0.565705,-99) , 
NN(
0, 
0, 
-1, 13.7743, 0, -1, 0.260119,-99) , 
10, 0.143604, 1, 0, 0.353007,-99) , 
6, 0.523787, 1, 0, 0.476295,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.348005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.413352, 1, 1, 0.72042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445459,-99) , 
1, -0.00354631, 1, 0, 0.483964,-99) , 
3, 5.68886, 0, 0, 0.60881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310352,-99) , 
3, 12.6848, 0, 0, 0.427895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.136106,-99) , 
12, 0.426169, 1, 0, 0.366348,-99) , 
6, 0.428588, 1, 0, 0.467192,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.348094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.98728, 0, 1, 0.646166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.732316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387352,-99) , 
3, 14.9126, 0, 0, 0.460409,-99) , 
6, 0.541813, 1, 0, 0.565076,-99) , 
NN(
0, 
0, 
-1, -0.511585, 1, -1, 0.241322,-99) , 
6, 0.904608, 1, 0, 0.496062,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.276779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.742177, 1, 1, 0.798411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42123,-99) , 
12, -0.926445, 1, 0, 0.502459,-99) , 
3, 14.6033, 0, 0, 0.531971,-99) , 
NN(
0, 
0, 
-1, 0.472354, 1, -1, 0.276504,-99) , 
6, 0.904731, 1, 0, 0.479042,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.180372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470883,-99) , 
3, 12.6528, 0, 0, 0.510046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370126,-99) , 
6, 0.904714, 1, 0, 0.484686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.23237,-99) , 
10, 2.1431, 1, 0, 0.460023,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.267519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498086, 1, 1, 0.88595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404348,-99) , 
3, 3.08471, 0, 0, 0.591651,-99) , 
3, 10.7865, 0, 0, 0.629495,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.732356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451962,-99) , 
8, 20.0106, 0, 0, 0.472297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.184369,-99) , 
12, 0.48445, 1, 0, 0.418994,-99) , 
6, 0.523818, 1, 0, 0.512354,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.243374);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.687772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452497,-99) , 
6, 0.84968, 1, 0, 0.62842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407158,-99) , 
6, -0.00256414, 1, 0, 0.502593,-99) , 
3, 11.5875, 0, 0, 0.542052,-99) , 
NN(
0, 
0, 
-1, 13.8318, 0, -1, 0.339938,-99) , 
6, 0.904619, 1, 0, 0.500721,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.164649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279021,-99) , 
7, 0.0127885, 1, 0, 0.531869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336579,-99) , 
7, 0.0042786, 0, 0, 0.38609,-99) , 
0, 0.503805, 1, 0, 0.512555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245933,-99) , 
10, 2.1431, 1, 0, 0.487585,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.129598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.305347, 1, 1, 0.533946,-99) , 
NN(
0, 
0, 
-1, -0.0489781, 1, -1, 0.421606,-99) , 
3, 8.03923, 0, 0, 0.497117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262937,-99) , 
12, 0.957881, 1, 0, 0.477343,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.21777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00182649, 0, 1, 0.701262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420112,-99) , 
6, 0.360525, 1, 0, 0.504454,-99) , 
8, 14.2847, 0, 0, 0.537659,-99) , 
NN(
0, 
0, 
-1, 0.739078, 1, -1, 0.339688,-99) , 
6, 0.904743, 1, 0, 0.498304,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.23864);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.789746, 1, 1, 0.650312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403905,-99) , 
9, -951.286, 0, 0, 0.490329,-99) , 
8, 11.9102, 0, 0, 0.556407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399368,-99) , 
8, 12.6306, 0, 0, 0.447182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.226101,-99) , 
6, 0.90473, 1, 0, 0.397994,-99) , 
10, 0.714992, 1, 0, 0.485311,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.129675);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494707,-99) , 
8, 13.0277, 0, 0, 0.528781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405434,-99) , 
6, 0.904614, 1, 0, 0.505782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268418,-99) , 
10, 2.14293, 1, 0, 0.483966,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.173177);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.712687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476185,-99) , 
6, 0.168561, 1, 0, 0.523235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267577,-99) , 
12, -0.849008, 0, 0, 0.37689,-99) , 
3, 4.89827, 0, 0, 0.494499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283578,-99) , 
12, 0.967511, 1, 0, 0.476725,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.140341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.83576, 0, 1, 0.676579,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393531,-99) , 
0, 0.492382, 0, 0, 0.514263,-99) , 
10, -1.03958, 1, 0, 0.529581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281208,-99) , 
10, 2.14289, 1, 0, 0.507812,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.203867);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434976,-99) , 
8, 4.45672, 0, 0, 0.570211,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286806,-99) , 
6, 0.809232, 1, 0, 0.423494,-99) , 
10, 1.28609, 1, 0, 0.528304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36398,-99) , 
8, 11.9127, 0, 0, 0.432132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237795,-99) , 
2, -0.197177, 0, 0, 0.37122,-99) , 
2, -0.0648281, 0, 0, 0.498583,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.174547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.262048,-99) , 
2, -0.177755, 0, 0, 0.530976,-99) , 
NN(
0, 
0, 
-1, 5.84577, 0, -1, 0.418726,-99) , 
2, 0.040277, 1, 0, 0.502174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298191,-99) , 
10, 2.14148, 1, 0, 0.483582,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.166805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.423757, 1, 1, 0.616421,-99) , 
NN(
0, 
0, 
-1, -2.80305, 0, -1, 0.460763,-99) , 
3, 10.3698, 0, 0, 0.511494,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425652,-99) , 
10, -0.3462, 1, 0, 0.466233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26616,-99) , 
10, 1.28609, 1, 0, 0.405974,-99) , 
6, 0.809536, 1, 0, 0.477253,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.156522);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523878, 1, 1, 0.647892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.707828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471164,-99) , 
8, 19.0051, 0, 0, 0.484229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310203,-99) , 
10, -0.351622, 1, 0, 0.351308,-99) , 
2, -0.0548855, 0, 0, 0.456646,-99) , 
1, 0.00309911, 0, 0, 0.484102,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.158624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42507,-99) , 
8, 5.9903, 0, 0, 0.591086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289676,-99) , 
12, -1.59877, 0, 0, 0.49361,-99) , 
10, -0.345886, 1, 0, 0.522738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320544,-99) , 
12, 0.332185, 0, 0, 0.467285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319221,-99) , 
6, 0.809521, 1, 0, 0.414496,-99) , 
10, 1.28615, 1, 0, 0.493467,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.184511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497139, 1, 1, 0.554942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405362,-99) , 
6, -0.0476284, 1, 0, 0.446617,-99) , 
10, 0.715211, 1, 0, 0.507138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553252,-99) , 
NN(
0, 
0, 
-1, 0.000853449, 0, -1, 0.297817,-99) , 
7, 0.00298189, 0, 0, 0.353953,-99) , 
2, -0.0585094, 0, 0, 0.47444,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.11976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 18.271, 0, 1, 0.545033,-99) , 
NN(
0, 
0, 
-1, 3.464, 0, -1, 0.379804,-99) , 
2, -0.121481, 0, 0, 0.52657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330283,-99) , 
2, 0.199574, 1, 0, 0.516166,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.17184);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498076, 1, 1, 0.699746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440134,-99) , 
6, 0.714236, 1, 0, 0.502093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34571,-99) , 
6, -0.142766, 1, 0, 0.392649,-99) , 
10, 1.00347, 1, 0, 0.463303,-99) , 
8, 18.8003, 0, 0, 0.475435,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.114467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.758965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498732,-99) , 
6, 0.8286, 1, 0, 0.566869,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465995,-99) , 
1, -0.00593158, 1, 0, 0.47506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350781,-99) , 
6, 0.904731, 1, 0, 0.456502,-99) , 
3, 15.1698, 0, 0, 0.469452,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.185771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.73625, 1, 1, 0.685839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354358,-99) , 
11, -2.89534, 0, 0, 0.427571,-99) , 
8, 6.83856, 0, 0, 0.587963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303016,-99) , 
12, -2.82047, 0, 0, 0.54164,-99) , 
NN(
0, 
0, 
-1, -3.14887, 0, -1, 0.444337,-99) , 
10, 0.145477, 1, 0, 0.479622,-99) , 
1, -0.00165388, 1, 0, 0.507233,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.163911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.726319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469403,-99) , 
12, -2.6247, 0, 0, 0.649275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474056,-99) , 
1, 0.00440751, 0, 0, 0.489867,-99) , 
10, -0.426097, 1, 0, 0.520496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.697426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45234,-99) , 
6, 0.304165, 1, 0, 0.481737,-99) , 
NN(
0, 
0, 
-1, -0.260102, 1, -1, 0.346987,-99) , 
3, 7.83706, 0, 0, 0.432189,-99) , 
0, 0.498093, 1, 0, 0.474197,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.138828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0198462, 1, 1, 0.548497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361738,-99) , 
9, -951.286, 0, 0, 0.43255,-99) , 
3, 4.88289, 0, 0, 0.525824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39596,-99) , 
2, -0.0774437, 1, 0, 0.455206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327499,-99) , 
2, -0.164811, 0, 0, 0.423919,-99) , 
2, -0.0337783, 0, 0, 0.498086,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.144854);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.445061, 1, 1, 0.564102,-99) , 
NN(
0, 
0, 
-1, -0.72604, 0, -1, 0.418518,-99) , 
3, 4.89768, 0, 0, 0.536274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387617,-99) , 
12, 0.879764, 1, 0, 0.521394,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.151866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.728457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402869,-99) , 
2, 0.0556148, 1, 0, 0.514036,-99) , 
10, -0.99889, 1, 0, 0.531309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.744896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443537,-99) , 
8, 7.39989, 0, 0, 0.491639,-99) , 
NN(
0, 
0, 
-1, 0.501266, 1, -1, 0.422778,-99) , 
6, 0.0476034, 1, 0, 0.44476,-99) , 
0, 0.498092, 1, 0, 0.485361,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.153106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.869071, 1, 1, 0.763505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439514,-99) , 
3, 4.53811, 0, 0, 0.507055,-99) , 
3, 11.2992, 0, 0, 0.534051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459581,-99) , 
10, -0.904808, 1, 0, 0.479088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.287134,-99) , 
10, 1.86005, 1, 0, 0.451788,-99) , 
6, 0.619062, 1, 0, 0.493043,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.189645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00222677, 0, 1, 0.706122,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436223,-99) , 
6, 0.0612595, 1, 0, 0.536626,-99) , 
3, 10.8592, 0, 0, 0.569552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435554,-99) , 
12, -1.06786, 0, 0, 0.500661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303264,-99) , 
12, 0.391408, 1, 0, 0.469142,-99) , 
6, 0.714279, 1, 0, 0.52338,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0902433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.85961, 0, 1, 0.631657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.75717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493561,-99) , 
3, 18.2816, 0, 0, 0.505064,-99) , 
7, 0.00426051, 0, 0, 0.52655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279304,-99) , 
7, 0.0127885, 1, 0, 0.515495,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.145935);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 18.6674, 0, 1, 0.634287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399564,-99) , 
3, 3.20463, 0, 0, 0.532536,-99) , 
NN(
0, 
0, 
-1, 11.3892, 0, -1, 0.441005,-99) , 
6, 0.428547, 1, 0, 0.481749,-99) , 
3, 16.2616, 0, 0, 0.493805,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.100213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 18.2759, 0, 1, 0.541165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277236,-99) , 
13, 10.4386, 0, 0, 0.404478,-99) , 
12, -2.57802, 0, 0, 0.530093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406687,-99) , 
12, 0.895552, 1, 0, 0.519465,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.109768);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.695806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464977,-99) , 
3, 5.3089, 0, 0, 0.531087,-99) , 
NN(
0, 
0, 
-1, 0.498082, 1, -1, 0.449776,-99) , 
6, 0.904731, 1, 0, 0.515438,-99) , 
8, 20.3278, 0, 0, 0.521435,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0988846);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680812,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464149,-99) , 
8, 11.5094, 0, 0, 0.496019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431275,-99) , 
6, 0.90473, 1, 0, 0.484255,-99) , 
8, 20.3278, 0, 0, 0.490872,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0975618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69265, 0, 1, 0.672224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456049,-99) , 
9, -951.286, 0, 0, 0.500308,-99) , 
10, -1.28442, 1, 0, 0.509164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314324,-99) , 
2, 0.203037, 1, 0, 0.499449,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.14241);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.738045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49712,-99) , 
8, 7.05373, 0, 0, 0.550039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433462,-99) , 
10, -0.712837, 1, 0, 0.453598,-99) , 
6, 0.238144, 1, 0, 0.488713,-99) , 
3, 18.2561, 0, 0, 0.49808,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.123999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.49904, 0, 1, 0.553694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416258,-99) , 
10, 0.999734, 1, 0, 0.496353,-99) , 
6, 0.809512, 1, 0, 0.535489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350355,-99) , 
4, 7.04715, 1, 0, 0.522248,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.144973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445903,-99) , 
12, -2.01065, 0, 0, 0.545924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401739,-99) , 
2, 0.143046, 1, 0, 0.535089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412118,-99) , 
6, 0.778295, 1, 0, 0.461235,-99) , 
NN(
0, 
0, 
-1, -0.323348, 1, -1, 0.375872,-99) , 
8, 9.74611, 0, 0, 0.421508,-99) , 
0, 0.500948, 1, 0, 0.501996,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.141428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.0543, 1, 1, 0.568969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446467,-99) , 
6, -0.808554, 1, 0, 0.464452,-99) , 
10, -0.338816, 1, 0, 0.483749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298527,-99) , 
12, -2.80305, 0, 0, 0.473415,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0794806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.333448, 0, 1, 0.721162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38713,-99) , 
12, 0.977409, 1, 0, 0.500752,-99) , 
10, -0.811704, 1, 0, 0.514253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237148,-99) , 
10, -1.41861, 1, 0, 0.404799,-99) , 
12, -2.48398, 0, 0, 0.505363,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.161872);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342478,-99) , 
10, -0.0667265, 0, 0, 0.542529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38159,-99) , 
6, 0.6189, 1, 0, 0.450507,-99) , 
10, 1.78501, 1, 0, 0.516347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322645,-99) , 
2, 0.0928032, 1, 0, 0.533806,-99) , 
NN(
0, 
0, 
-1, -1.83026, 0, -1, 0.412619,-99) , 
10, -0.565755, 1, 0, 0.452366,-99) , 
11, -2.85719, 0, 0, 0.483838,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0886228);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.737228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449374,-99) , 
12, -2.48525, 0, 0, 0.578413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433788,-99) , 
12, -1.32775, 0, 0, 0.490663,-99) , 
11, -4.07574, 1, 0, 0.501847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516204,-99) , 
NN(
0, 
0, 
-1, 0.504893, 0, -1, 0.335936,-99) , 
9, -951.286, 1, 0, 0.391346,-99) , 
0, 0.503805, 1, 0, 0.488033,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0914826);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.618924, 0, 1, 0.623707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.689106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42951,-99) , 
3, 10.5762, 0, 0, 0.468645,-99) , 
8, 20.3278, 0, 0, 0.47598,-99) , 
1, 0.00388765, 0, 0, 0.491232,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.174816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.27874, 1, 1, 0.541614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347677,-99) , 
10, -0.138762, 0, 0, 0.437003,-99) , 
8, 4.51165, 0, 0, 0.521864,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414607,-99) , 
6, 0.714294, 1, 0, 0.527053,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.333974,-99) , 
11, -1.83907, 0, 0, 0.414513,-99) , 
10, 1.00313, 1, 0, 0.483568,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.153315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.437346, 1, 1, 0.641558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429574,-99) , 
3, 4.81409, 0, 0, 0.562199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469236,-99) , 
12, -2.01473, 0, 0, 0.529656,-99) , 
NN(
0, 
0, 
-1, -1.22848, 0, -1, 0.430968,-99) , 
10, -0.142183, 1, 0, 0.455383,-99) , 
1, -0.00229635, 1, 0, 0.475476,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0668461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42983,-99) , 
12, -1.1831, 0, 0, 0.480451,-99) , 
10, -1.01865, 1, 0, 0.486532,-99) , 
NN(
0, 
0, 
-1, -1.51333, 1, -1, 0.376008,-99) , 
12, -2.54945, 0, 0, 0.478455,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.129475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00182484, 0, 1, 0.704434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425654,-99) , 
6, -0.15204, 1, 0, 0.499566,-99) , 
8, 11.0776, 0, 0, 0.531898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643219,-99) , 
NN(
0, 
0, 
-1, 0.945564, 1, -1, 0.450902,-99) , 
8, 20.1487, 0, 0, 0.462537,-99) , 
6, 0.619036, 1, 0, 0.496133,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.143436);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485061,-99) , 
3, 10.0325, 0, 0, 0.538778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4319,-99) , 
3, 16.2519, 0, 0, 0.450516,-99) , 
7, 0.00182596, 0, 0, 0.493187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266266,-99) , 
7, 0.0127885, 1, 0, 0.483397,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.131187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.689105, 1, 1, 0.57017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450611,-99) , 
6, -0.142872, 1, 0, 0.484488,-99) , 
3, 13.0248, 0, 0, 0.50588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.189384,-99) , 
10, -1.4788, 1, 0, 0.343068,-99) , 
12, -2.51857, 0, 0, 0.491579,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.130918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.59827, 0, 1, 0.571855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290915,-99) , 
2, -0.133665, 0, 0, 0.54761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652999,-99) , 
NN(
0, 
0, 
-1, 11.2687, 0, -1, 0.45448,-99) , 
10, -0.998422, 1, 0, 0.468388,-99) , 
6, 0.428595, 1, 0, 0.499502,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0913462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.694129, 1, 1, 0.52581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389038,-99) , 
12, -2.73509, 0, 0, 0.518611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431994,-99) , 
0, 0.491801, 0, 0, 0.48284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283402,-99) , 
0, 0.492785, 1, 0, 0.428864,-99) , 
0, 0.493329, 0, 0, 0.503595,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0935668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475579,-99) , 
1, -0.0039028, 1, 0, 0.486527,-99) , 
11, -1.52345, 0, 0, 0.496263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337195,-99) , 
12, 0.99234, 1, 0, 0.485088,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0664292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.752682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423647,-99) , 
3, 5.04089, 0, 0, 0.634617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324556,-99) , 
12, -1.93338, 0, 0, 0.493293,-99) , 
10, -0.833653, 1, 0, 0.50536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360568,-99) , 
12, -2.87726, 0, 0, 0.499577,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.13247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.48847, 1, 1, 0.702063,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42214,-99) , 
6, 0.947719, 1, 0, 0.508777,-99) , 
6, 0.451128, 1, 0, 0.529938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.736344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476526,-99) , 
3, 5.90373, 0, 0, 0.503589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.271873,-99) , 
7, 0.00227795, 0, 0, 0.382816,-99) , 
6, -0.23412, 1, 0, 0.46816,-99) , 
8, 9.74611, 0, 0, 0.50725,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.117503);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377266,-99) , 
0, 0.489662, 0, 0, 0.534792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414505,-99) , 
3, 6.89594, 1, 0, 0.449275,-99) , 
0, 0.501901, 1, 0, 0.517261,-99) , 
NN(
0, 
0, 
-1, -1.3095, 1, -1, 0.397004,-99) , 
2, -0.0984693, 0, 0, 0.501973,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0994103);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.89202, 1, 1, 0.610373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442552,-99) , 
0, 0.503804, 1, 0, 0.58647,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497149, 0, 1, 0.610442,-99) , 
NN(
0, 
0, 
-1, 1.85747, 1, -1, 0.468811,-99) , 
3, 16.1906, 0, 0, 0.479977,-99) , 
1, -0.00229635, 1, 0, 0.499688,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0596484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00481264, 0, 1, 0.517864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344689,-99) , 
1, 0.0094159, 1, 0, 0.511406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394608,-99) , 
6, -0.904763, 0, 0, 0.50177,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.102932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.714336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436091,-99) , 
12, -2.86784, 0, 0, 0.602276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467127,-99) , 
11, -3.24223, 1, 0, 0.484597,-99) , 
NN(
0, 
0, 
-1, 0.497152, 0, -1, 0.345928,-99) , 
12, -2.0184, 0, 0, 0.476096,-99) , 
10, -0.999272, 1, 0, 0.486173,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0830783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.442973, 1, 1, 0.646182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493038,-99) , 
0, 0.497142, 1, 0, 0.519434,-99) , 
4, 4.7647, 0, 0, 0.529136,-99) , 
NN(
0, 
0, 
-1, 0.166131, 1, -1, 0.40767,-99) , 
4, 6.6221, 1, 0, 0.519151,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0825084);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312645,-99) , 
12, -2.50874, 0, 0, 0.510795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388731,-99) , 
7, 0.00251181, 0, 0, 0.438421,-99) , 
10, 1.69429, 1, 0, 0.498446,-99) , 
10, -1.56998, 1, 0, 0.503966,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.1786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237574, 1, 1, 0.628885,-99) , 
NN(
0, 
0, 
-1, -1.18666, 0, -1, 0.444461,-99) , 
9, 0.154212, 0, 0, 0.520627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41503,-99) , 
0, 0.500266, 0, 0, 0.526218,-99) , 
NN(
0, 
0, 
-1, -3.01226, 0, -1, 0.394774,-99) , 
0, 0.499042, 0, 0, 0.446613,-99) , 
9, -951.286, 0, 0, 0.491459,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.107329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.733847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497994,-99) , 
0, 0.497138, 1, 0, 0.52762,-99) , 
3, 18.2797, 0, 0, 0.534552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585509,-99) , 
NN(
0, 
0, 
-1, 0.499027, 0, -1, 0.352583,-99) , 
1, 0.00152473, 0, 0, 0.410334,-99) , 
2, -0.0750248, 0, 0, 0.512999,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0857695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.689097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48624,-99) , 
3, 8.0656, 0, 0, 0.552527,-99) , 
0, 0.502854, 0, 0, 0.571009,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484502,-99) , 
10, 0.389321, 1, 0, 0.502304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322032,-99) , 
12, -1.59804, 0, 0, 0.492068,-99) , 
10, -0.427469, 1, 0, 0.507176,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0660067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333428, 1, 1, 0.617865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351714,-99) , 
3, 18.29, 1, 0, 0.503271,-99) , 
11, -1.88064, 0, 0, 0.518975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436352,-99) , 
12, 0.956949, 1, 0, 0.512255,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.105684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.670145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468049,-99) , 
6, -0.800422, 0, 0, 0.509286,-99) , 
10, 0.699683, 0, 0, 0.566775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429435,-99) , 
7, 0.00089656, 0, 0, 0.489921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.292031,-99) , 
7, 0.00941483, 1, 0, 0.479585,-99) , 
6, -0.619059, 1, 0, 0.494245,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0883525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493139,-99) , 
10, 1.00099, 0, 0, 0.520882,-99) , 
NN(
0, 
0, 
-1, 0.956808, 1, -1, 0.434843,-99) , 
6, 0.90928, 1, 0, 0.504041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382179,-99) , 
6, -0.904763, 0, 0, 0.493484,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0794111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.339625, 1, 1, 0.520284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393191,-99) , 
11, -4.91792, 0, 0, 0.514046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474844,-99) , 
9, -951.286, 0, 0, 0.542842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341698,-99) , 
1, -0.00083002, 1, 0, 0.389033,-99) , 
3, 8.88177, 1, 0, 0.441532,-99) , 
0, 0.494286, 0, 0, 0.499354,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0879997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.764652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481071,-99) , 
12, -2.67399, 0, 0, 0.645958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466038,-99) , 
10, -1.85566, 0, 0, 0.593284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477294,-99) , 
3, 15.2198, 0, 0, 0.488051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255755,-99) , 
12, -2.16825, 0, 0, 0.478768,-99) , 
10, -0.998736, 1, 0, 0.488645,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.116488);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.96021, 0, 1, 0.658774,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370344,-99) , 
10, -0.694129, 0, 0, 0.558756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471729,-99) , 
0, 0.504755, 0, 0, 0.479538,-99) , 
6, -0.0476991, 1, 0, 0.501704,-99) , 
11, -4.39116, 1, 0, 0.513483,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0994386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47936,-99) , 
3, 5.00835, 0, 0, 0.604431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484113,-99) , 
11, -1.86216, 0, 0, 0.505757,-99) , 
10, -0.402922, 1, 0, 0.520334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.233336,-99) , 
10, -1.47923, 1, 0, 0.374492,-99) , 
12, -2.51857, 0, 0, 0.508258,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.137161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483385,-99) , 
12, 0.0435291, 1, 0, 0.547338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443417,-99) , 
11, -2.73483, 0, 0, 0.482446,-99) , 
0, 0.500948, 1, 0, 0.528707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415076,-99) , 
1, 0.00184041, 0, 0, 0.464492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.220305,-99) , 
10, -0.502384, 1, 0, 0.420171,-99) , 
12, -1.7853, 0, 0, 0.506317,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.134991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.26663, 1, 1, 0.669534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455896,-99) , 
8, 4.93597, 1, 0, 0.515167,-99) , 
8, 9.79445, 0, 0, 0.601558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430227,-99) , 
2, 0.0810016, 1, 0, 0.516879,-99) , 
NN(
0, 
0, 
-1, -0.248111, 1, -1, 0.286459,-99) , 
12, -1.54731, 0, 0, 0.494412,-99) , 
10, -0.427493, 1, 0, 0.51421,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.084332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.38255, 1, 1, 0.687137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479817,-99) , 
11, -4.78759, 0, 0, 0.597207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426877,-99) , 
2, -0.066125, 0, 0, 0.500528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356351,-99) , 
12, -1.95894, 0, 0, 0.492234,-99) , 
11, -4.13326, 1, 0, 0.503894,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.109816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461026,-99) , 
6, -0.523817, 1, 0, 0.497379,-99) , 
3, 14.0444, 0, 0, 0.53309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.727826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472847,-99) , 
7, 0.00658331, 0, 0, 0.485119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285147,-99) , 
7, 0.0115213, 1, 0, 0.475445,-99) , 
12, -0.155162, 0, 0, 0.493773,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0788626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494165,-99) , 
3, 11.2846, 0, 0, 0.517279,-99) , 
NN(
0, 
0, 
-1, 0.945559, 1, -1, 0.452071,-99) , 
6, 0.809529, 1, 0, 0.495389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360876,-99) , 
0, 0.505707, 1, 0, 0.487925,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.116089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.683366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430502,-99) , 
13, 15.581, 1, 0, 0.519222,-99) , 
11, -1.37858, 0, 0, 0.528857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379373,-99) , 
12, 0.995992, 1, 0, 0.518639,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0903764);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 7.90954, 0, 1, 0.634248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442864,-99) , 
2, -0.0773456, 0, 0, 0.511131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31801,-99) , 
12, -2.07672, 0, 0, 0.501524,-99) , 
10, -0.998804, 1, 0, 0.512339,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0997402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.79113, 1, 1, 0.65064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367724,-99) , 
8, 9.10778, 0, 0, 0.517512,-99) , 
6, 0.0266673, 1, 0, 0.530196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350173,-99) , 
8, 5.5393, 1, 0, 0.490949,-99) , 
NN(
0, 
0, 
-1, 0.499051, 0, -1, 0.395377,-99) , 
4, 1.11104, 0, 0, 0.455887,-99) , 
3, 5.91328, 0, 0, 0.512572,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.119206);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496665,-99) , 
0, 0.501898, 1, 0, 0.603813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367625,-99) , 
6, 0.428232, 1, 0, 0.45686,-99) , 
2, 0.015637, 1, 0, 0.551504,-99) , 
NN(
0, 
0, 
-1, 0.066066, 1, -1, 0.45773,-99) , 
1, 0.00145893, 0, 0, 0.484029,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0749082);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.90633, 0, 1, 0.620273,-99) , 
NN(
0, 
0, 
-1, -4.05457, 0, -1, 0.469649,-99) , 
11, -4.32773, 1, 0, 0.481431,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.124372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459245,-99) , 
3, 3.89759, 0, 0, 0.536297,-99) , 
NN(
0, 
0, 
-1, -0.0283513, 0, -1, 0.428718,-99) , 
8, 16.4247, 1, 0, 0.520446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470935,-99) , 
2, 0.133297, 1, 0, 0.512629,-99) , 
NN(
0, 
0, 
-1, -1.18918, 0, -1, 0.329734,-99) , 
3, 9.00272, 0, 0, 0.439081,-99) , 
2, 0.066066, 1, 0, 0.505717,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.110084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49532,-99) , 
6, 0.809465, 1, 0, 0.556234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329839,-99) , 
10, -1.6426, 1, 0, 0.410504,-99) , 
12, -2.54861, 0, 0, 0.533972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485608,-99) , 
10, 0.917193, 1, 0, 0.503402,-99) , 
NN(
0, 
0, 
-1, 0.498082, 0, -1, 0.381135,-99) , 
12, -0.631997, 0, 0, 0.480061,-99) , 
10, 0.426394, 1, 0, 0.504628,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.117519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.524041, 1, 1, 0.643261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466045,-99) , 
10, -0.999755, 1, 0, 0.476889,-99) , 
7, 0.00438886, 0, 0, 0.498609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.32909,-99) , 
7, 0.011521, 1, 0, 0.490988,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0899823);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489505,-99) , 
0, 0.497138, 0, 0, 0.52747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360852,-99) , 
1, 0.0098602, 1, 0, 0.522076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357436,-99) , 
10, -1.57028, 0, 0, 0.513761,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.11036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.37305, 1, 1, 0.630808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467266,-99) , 
0, 0.4924, 0, 0, 0.604024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471957,-99) , 
12, -2.05232, 0, 0, 0.555521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481967,-99) , 
8, 16.4301, 0, 0, 0.49663,-99) , 
0, 0.499044, 0, 0, 0.520014,-99) , 
1, -0.00229635, 1, 0, 0.535278,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0817046);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.61799, 1, 1, 0.527517,-99) , 
NN(
0, 
0, 
-1, -0.0760057, 1, -1, 0.453108,-99) , 
12, -1.17702, 0, 0, 0.498971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311774,-99) , 
1, 0.010139, 1, 0, 0.491873,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.107613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432879,-99) , 
6, 0.942597, 1, 0, 0.503565,-99) , 
6, -0.205111, 1, 0, 0.514104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414776,-99) , 
8, 4.46178, 1, 0, 0.556784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364507,-99) , 
11, -3.51329, 1, 0, 0.397574,-99) , 
0, 0.499991, 0, 0, 0.450571,-99) , 
8, 5.79202, 0, 0, 0.49993,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.129843);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.63336, 0, 1, 0.622382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332787,-99) , 
12, -1.42621, 0, 0, 0.515781,-99) , 
10, -0.141572, 1, 0, 0.542454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381994,-99) , 
2, 0.0047009, 0, 0, 0.448182,-99) , 
3, 3.85909, 0, 0, 0.528689,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.07328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490821,-99) , 
1, -0.0014408, 1, 0, 0.509408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42647,-99) , 
0, 0.503259, 1, 0, 0.460956,-99) , 
0, 0.501898, 1, 0, 0.498936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293101,-99) , 
10, -1.59606, 1, 0, 0.39785,-99) , 
12, -2.59041, 0, 0, 0.492649,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.101944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376025,-99) , 
10, 1.16026, 1, 0, 0.517347,-99) , 
12, 0.449003, 0, 0, 0.543051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497088,-99) , 
8, 20.2386, 0, 0, 0.507175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37744,-99) , 
8, 11.6507, 0, 0, 0.487255,-99) , 
6, 0.619032, 1, 0, 0.513316,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0883862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.439105, 1, 1, 0.534544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409826,-99) , 
11, -2.70618, 0, 0, 0.466495,-99) , 
3, 4.82988, 0, 0, 0.521496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379001,-99) , 
0, 0.505704, 1, 0, 0.514669,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.108962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465204,-99) , 
8, 8.5274, 0, 0, 0.579819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45991,-99) , 
10, -0.234817, 1, 0, 0.471719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.226902,-99) , 
12, -2.16949, 0, 0, 0.462459,-99) , 
10, -0.996528, 1, 0, 0.47196,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.120242);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478528,-99) , 
3, 4.90641, 0, 0, 0.545217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388307,-99) , 
3, 9.80816, 0, 0, 0.464542,-99) , 
2, 0.067462, 1, 0, 0.53202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459818,-99) , 
0, 0.503262, 1, 0, 0.497894,-99) , 
NN(
0, 
0, 
-1, 0.501856, 1, -1, 0.401226,-99) , 
0, 0.502536, 0, 0, 0.460884,-99) , 
0, 0.500949, 1, 0, 0.511383,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0914434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.46479, 1, 1, 0.655339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47735,-99) , 
10, 1.39883, 0, 0, 0.493014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404986,-99) , 
12, 0.858873, 1, 0, 0.484284,-99) , 
10, -0.996893, 1, 0, 0.497039,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0983405);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.47115, 0, 1, 0.603201,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316561,-99) , 
10, -0.617149, 0, 0, 0.538041,-99) , 
NN(
0, 
0, 
-1, 9.52058, 0, -1, 0.47057,-99) , 
6, -0.238012, 1, 0, 0.48645,-99) , 
10, -0.995378, 1, 0, 0.495707,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.156232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487535,-99) , 
6, 0.569195, 1, 0, 0.613451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437138,-99) , 
10, 0.712626, 0, 0, 0.490019,-99) , 
8, 7.74432, 0, 0, 0.547596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474686,-99) , 
4, 3.52429, 0, 0, 0.503679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360601,-99) , 
12, 0.207999, 1, 0, 0.478709,-99) , 
6, 0.714279, 1, 0, 0.514876,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0806066);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00408005, 1, 1, 0.537456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427974,-99) , 
6, -0.904741, 0, 0, 0.528714,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.106536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47831,-99) , 
3, 5.09911, 0, 0, 0.601904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484138,-99) , 
6, -0.618946, 1, 0, 0.502946,-99) , 
11, -3.32183, 1, 0, 0.527186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286297,-99) , 
10, -1.41963, 1, 0, 0.408142,-99) , 
12, -2.43277, 0, 0, 0.518086,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0683867);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.686645,-99) , 
NN(
NN(
0, 
0, 
-1, -1.77646, 0, 1, 0.524842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416693,-99) , 
10, 2.14302, 1, 0, 0.516654,-99) , 
8, 20.4066, 0, 0, 0.521917,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.111335);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441159,-99) , 
12, -2.43256, 0, 0, 0.541102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360012,-99) , 
0, 0.501899, 1, 0, 0.461601,-99) , 
2, -0.081753, 0, 0, 0.526128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474043,-99) , 
10, 0.142032, 0, 0, 0.525702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329406,-99) , 
10, 0.142804, 1, 0, 0.384765,-99) , 
13, 12.0874, 0, 0, 0.448456,-99) , 
2, 0.066066, 1, 0, 0.511999,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0497279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411946,-99) , 
12, 0.954274, 1, 0, 0.49704,-99) , 
10, -1.01693, 1, 0, 0.504514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388071,-99) , 
12, -2.71153, 0, 0, 0.498749,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0897729);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.755461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46125,-99) , 
3, 18.1723, 1, 0, 0.59021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470698,-99) , 
0, 0.502852, 0, 0, 0.481837,-99) , 
8, 17.7971, 0, 0, 0.490119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391798,-99) , 
11, -1.08366, 1, 0, 0.482802,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.1329);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.699621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475185,-99) , 
3, 4.87988, 0, 0, 0.625162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404771,-99) , 
12, -2.8365, 0, 0, 0.576109,-99) , 
NN(
NN(
0, 
0, 
-1, 0.882662, 1, 1, 0.54867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443902,-99) , 
10, -0.0926392, 1, 0, 0.463639,-99) , 
11, -2.60377, 0, 0, 0.506843,-99) , 
10, -0.427715, 1, 0, 0.519288,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.140919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379332,-99) , 
4, 5.9123, 1, 0, 0.557894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440216,-99) , 
0, 0.496458, 0, 0, 0.491306,-99) , 
6, 0.71415, 1, 0, 0.525457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389276,-99) , 
12, -1.48024, 0, 0, 0.486076,-99) , 
NN(
0, 
0, 
-1, -0.756337, 0, -1, 0.356189,-99) , 
8, 5.65992, 0, 0, 0.448774,-99) , 
0, 0.499995, 1, 0, 0.496168,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0952335);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.699669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490543,-99) , 
6, 0.586461, 1, 0, 0.511958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432165,-99) , 
0, 0.493331, 1, 0, 0.453293,-99) , 
3, 10.0156, 0, 0, 0.489089,-99) , 
1, 0.00663906, 0, 0, 0.494616,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0822481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.623575, 1, 1, 0.532837,-99) , 
NN(
0, 
0, 
-1, -2.58671, 0, -1, 0.464307,-99) , 
3, 11.0992, 0, 0, 0.497409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381048,-99) , 
12, 0.95171, 1, 0, 0.488173,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.103723);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477933,-99) , 
0, 0.499995, 1, 0, 0.525152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317324,-99) , 
12, -3.05554, 0, 0, 0.518618,-99) , 
NN(
0, 
0, 
-1, 0.524097, 1, -1, 0.410606,-99) , 
10, 1.85751, 1, 0, 0.504305,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0787055);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483355,-99) , 
3, 8.07058, 0, 0, 0.547766,-99) , 
NN(
0, 
0, 
-1, -1.89112, 0, -1, 0.470555,-99) , 
10, -0.7131, 1, 0, 0.480927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332115,-99) , 
0, 0.489521, 0, 0, 0.474887,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.111214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.712995, 1, 1, 0.54611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386724,-99) , 
5, 0.999906, 0, 0, 0.536607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562499,-99) , 
NN(
0, 
0, 
-1, -0.0803444, 1, -1, 0.43429,-99) , 
11, -3.5909, 1, 0, 0.461008,-99) , 
6, 0.809493, 1, 0, 0.509944,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0766238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.76321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452535,-99) , 
11, -4.3824, 1, 0, 0.568998,-99) , 
1, -0.000711809, 1, 0, 0.637699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483564,-99) , 
12, -0.206718, 1, 0, 0.508162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392672,-99) , 
0, 0.489524, 0, 0, 0.50428,-99) , 
11, -4.11922, 1, 0, 0.517857,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.124339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48124,-99) , 
12, -0.0135944, 1, 0, 0.577655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43463,-99) , 
0, 0.492924, 1, 0, 0.486226,-99) , 
0, 0.496188, 0, 0, 0.54395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474626,-99) , 
6, 0.385017, 1, 0, 0.494476,-99) , 
NN(
0, 
0, 
-1, -2.60986, 0, -1, 0.395586,-99) , 
3, 5.91251, 0, 0, 0.470083,-99) , 
1, 0.00145585, 0, 0, 0.490886,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0961729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.746095, 1, 1, 0.551295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44379,-99) , 
6, 0.202476, 1, 0, 0.501205,-99) , 
3, 11.0266, 0, 0, 0.526468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389019,-99) , 
1, 0.0098602, 1, 0, 0.52224,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0631177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.11102, 0, 1, 0.547593,-99) , 
NN(
0, 
0, 
-1, -0.403657, 0, -1, 0.491117,-99) , 
11, -3.23155, 1, 0, 0.505276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427775,-99) , 
11, -4.6345, 0, 0, 0.48857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258462,-99) , 
10, -0.839309, 1, 0, 0.429136,-99) , 
12, -2.06303, 0, 0, 0.495754,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.069471);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.78272, 0, 1, 0.633476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499504,-99) , 
9, -951.286, 0, 0, 0.568007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347708,-99) , 
8, 6.4086, 0, 0, 0.49905,-99) , 
6, -0.619035, 1, 0, 0.511008,-99) , 
11, -4.52524, 1, 0, 0.518396,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0840082);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.572323,-99) , 
NN(
NN(
0, 
0, 
-1, 0.58941, 1, 1, 0.515805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422903,-99) , 
6, -0.333344, 1, 0, 0.465345,-99) , 
8, 12.1785, 0, 0, 0.488639,-99) , 
0, 0.493331, 1, 0, 0.499214,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.089609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.768981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451522,-99) , 
6, 0.904733, 1, 0, 0.51201,-99) , 
11, -4.50365, 1, 0, 0.519913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359445,-99) , 
12, -2.81322, 0, 0, 0.512265,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.100441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.867509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453215,-99) , 
6, -0.251782, 1, 0, 0.508851,-99) , 
3, 9.58369, 0, 0, 0.538885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403024,-99) , 
3, 10.6163, 0, 0, 0.500983,-99) , 
NN(
0, 
0, 
-1, -0.806156, 1, -1, 0.404712,-99) , 
12, -1.76243, 0, 0, 0.481931,-99) , 
6, 0.42855, 1, 0, 0.503656,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0884509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44169,-99) , 
3, 4.97121, 0, 0, 0.55107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486346,-99) , 
11, -4.38003, 1, 0, 0.494689,-99) , 
0, 0.499996, 0, 0, 0.514062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402212,-99) , 
12, 0.963366, 1, 0, 0.505702,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0936692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.679828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362686,-99) , 
6, -0.184194, 1, 0, 0.506802,-99) , 
3, 7.64293, 0, 0, 0.529647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470264,-99) , 
7, 0.00340825, 0, 0, 0.483324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280024,-99) , 
7, 0.0071576, 1, 0, 0.475357,-99) , 
6, 0.142856, 1, 0, 0.492752,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0878515);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46635,-99) , 
3, 10.0156, 0, 0, 0.50831,-99) , 
NN(
0, 
0, 
-1, 0.238409, 1, -1, 0.406883,-99) , 
0, 0.491426, 0, 0, 0.499455,-99) , 
NN(
0, 
0, 
-1, -3.11026, 0, -1, 0.369847,-99) , 
1, 0.00702288, 1, 0, 0.492289,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0974);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0515326, 1, 1, 0.624092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483457,-99) , 
12, -1.59838, 1, 0, 0.506197,-99) , 
3, 7.2583, 0, 0, 0.542028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656246,-99) , 
NN(
0, 
0, 
-1, 17.3941, 1, -1, 0.466578,-99) , 
3, 18.4398, 0, 0, 0.47734,-99) , 
6, 0.428456, 1, 0, 0.501951,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.105613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.621195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444693,-99) , 
10, -0.639569, 1, 0, 0.510289,-99) , 
12, -1.00153, 0, 0, 0.575791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473902,-99) , 
11, -4.26809, 1, 0, 0.481556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33873,-99) , 
12, -2.83228, 0, 0, 0.475165,-99) , 
0, 0.495235, 1, 0, 0.498652,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.095958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.73174, 0, 1, 0.547636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408892,-99) , 
12, -1.21889, 0, 0, 0.473836,-99) , 
9, -951.286, 0, 0, 0.522267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354779,-99) , 
4, 0.701113, 0, 0, 0.469984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31218,-99) , 
12, -2.1302, 0, 0, 0.449488,-99) , 
8, 9.83992, 0, 0, 0.49531,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0504267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.688236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410547,-99) , 
3, 9.65005, 1, 0, 0.586017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628403,-99) , 
NN(
0, 
0, 
-1, 16.6817, 1, -1, 0.489646,-99) , 
3, 18.2561, 0, 0, 0.49454,-99) , 
1, 0.0045751, 0, 0, 0.501649,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0858361);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471253,-99) , 
10, -0.151989, 0, 0, 0.572408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422763,-99) , 
3, 6.2482, 0, 0, 0.509758,-99) , 
8, 4.49579, 1, 0, 0.519427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415179,-99) , 
4, 7.04013, 1, 0, 0.512367,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0596072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428603,-99) , 
6, -0.809294, 0, 0, 0.49341,-99) , 
11, -4.61715, 1, 0, 0.500478,-99) , 
NN(
0, 
0, 
-1, 9.38679, 1, -1, 0.361659,-99) , 
0, 0.504757, 1, 0, 0.488021,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.118676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.89363, 1, 1, 0.552113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369008,-99) , 
6, 0.619057, 1, 0, 0.458404,-99) , 
12, 0.294144, 1, 0, 0.515846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456372,-99) , 
6, 0.809281, 0, 0, 0.487623,-99) , 
NN(
0, 
0, 
-1, 0.540837, 1, -1, 0.375224,-99) , 
10, 0.379968, 1, 0, 0.471675,-99) , 
12, -0.770518, 0, 0, 0.494027,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0887694);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.77455, 0, 1, 0.613952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4899,-99) , 
0, 0.494284, 1, 0, 0.511876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398867,-99) , 
11, -1.82421, 0, 0, 0.448579,-99) , 
12, -0.330108, 1, 0, 0.485508,-99) , 
10, -1.2849, 1, 0, 0.49263,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0792386);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.730847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466271,-99) , 
3, 5.95753, 0, 0, 0.611893,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334216,-99) , 
12, -1.82284, 0, 0, 0.509278,-99) , 
10, -0.694206, 1, 0, 0.519401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416594,-99) , 
12, -2.80305, 0, 0, 0.515321,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.112773);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.16952, 1, 1, 0.641044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463314,-99) , 
12, -0.857245, 1, 0, 0.493082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289749,-99) , 
12, -2.1509, 0, 0, 0.484256,-99) , 
11, -4.31657, 1, 0, 0.496173,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.136987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.814871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41752,-99) , 
4, 2.96881, 1, 0, 0.539165,-99) , 
3, 7.22949, 0, 0, 0.568206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368906,-99) , 
12, -2.59728, 0, 0, 0.51406,-99) , 
NN(
0, 
0, 
-1, -1.24885, 0, -1, 0.412125,-99) , 
0, 0.499996, 1, 0, 0.477309,-99) , 
6, 0.0475766, 1, 0, 0.502782,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0734733);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.82693, 1, 1, 0.577029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478281,-99) , 
7, 0.00608682, 0, 0, 0.486419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339173,-99) , 
7, 0.0127887, 1, 0, 0.480868,-99) , 
0, 0.503804, 0, 0, 0.490862,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.055715);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617807,-99) , 
NN(
0, 
0, 
-1, 0.494283, 0, -1, 0.481563,-99) , 
3, 18.271, 0, 0, 0.48616,-99) , 
11, -4.70991, 1, 0, 0.493555,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0787247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494375,-99) , 
11, -3.35818, 1, 0, 0.51378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364679,-99) , 
12, -2.96122, 0, 0, 0.508195,-99) , 
NN(
NN(
0, 
0, 
-1, 0.491156, 1, 1, 0.572099,-99) , 
NN(
0, 
0, 
-1, -3.36929, 0, -1, 0.367273,-99) , 
2, 0.0112041, 0, 0, 0.439826,-99) , 
0, 0.493335, 0, 0, 0.497714,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.139727);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425313,-99) , 
3, 3.91156, 0, 0, 0.57958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389261,-99) , 
12, -1.23647, 0, 0, 0.522455,-99) , 
10, -0.223783, 1, 0, 0.537591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46739,-99) , 
10, 1.85748, 1, 0, 0.528859,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0922707);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.730469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469594,-99) , 
10, -1.03582, 1, 0, 0.516278,-99) , 
8, 4.85833, 1, 0, 0.542151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438277,-99) , 
3, 10.0252, 0, 0, 0.479885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382782,-99) , 
12, 0.999397, 1, 0, 0.470758,-99) , 
11, -3.66779, 1, 0, 0.485804,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0942908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.729061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461624,-99) , 
3, 3.17446, 0, 0, 0.518734,-99) , 
8, 5.40776, 0, 0, 0.543342,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464659,-99) , 
6, 0.727862, 1, 0, 0.487114,-99) , 
NN(
0, 
0, 
-1, 2.16535, 0, -1, 0.356985,-99) , 
3, 7.28858, 0, 0, 0.477069,-99) , 
6, -0.428494, 1, 0, 0.491724,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.127076);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499001, 1, 1, 0.559173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383842,-99) , 
1, -0.000629689, 1, 0, 0.437779,-99) , 
13, 14.8609, 1, 0, 0.531209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464403,-99) , 
11, -2.68065, 0, 0, 0.565714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439928,-99) , 
10, -0.426853, 1, 0, 0.45551,-99) , 
3, 14.0782, 0, 0, 0.476211,-99) , 
0, 0.498094, 0, 0, 0.503915,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0655873);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498083, 1, 1, 0.621236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425633,-99) , 
10, 2.23732, 1, 0, 0.506767,-99) , 
NN(
0, 
0, 
-1, -0.33997, 1, -1, 0.446336,-99) , 
12, -1.5644, 0, 0, 0.497728,-99) , 
10, -0.999272, 1, 0, 0.507287,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.108583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.20138, 0, 1, 0.625191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450894,-99) , 
6, -0.909297, 0, 0, 0.554786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484992,-99) , 
11, -3.03072, 0, 0, 0.512818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435713,-99) , 
11, -2.01597, 0, 0, 0.46968,-99) , 
10, 0.428884, 1, 0, 0.488494,-99) , 
6, -0.523799, 1, 0, 0.501518,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.101923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.07692, 0, 1, 0.625045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393308,-99) , 
10, -0.82019, 1, 0, 0.482088,-99) , 
8, 13.7143, 1, 0, 0.580054,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432562,-99) , 
0, 0.501887, 1, 0, 0.491106,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288079,-99) , 
10, 0.0305968, 1, 0, 0.389822,-99) , 
12, -1.28949, 0, 0, 0.482085,-99) , 
10, -0.141285, 1, 0, 0.505224,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0980667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454637,-99) , 
6, 0.809119, 1, 0, 0.548853,-99) , 
NN(
0, 
0, 
-1, 0.499405, 1, -1, 0.47984,-99) , 
0, 0.499994, 0, 0, 0.50185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357258,-99) , 
0, 0.501902, 1, 0, 0.478333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25489,-99) , 
10, -0.482881, 1, 0, 0.433426,-99) , 
12, -1.74623, 0, 0, 0.489442,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.112942);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421987,-99) , 
4, 6.55331, 1, 0, 0.538171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446564,-99) , 
6, -0.33334, 1, 0, 0.472523,-99) , 
12, -0.13163, 1, 0, 0.51506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.240748,-99) , 
10, -1.44319, 1, 0, 0.395506,-99) , 
12, -2.4903, 0, 0, 0.507268,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.158471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.174616, 1, 1, 0.569346,-99) , 
NN(
0, 
0, 
-1, 0.492378, 0, -1, 0.441695,-99) , 
6, -0.333288, 0, 0, 0.527322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431151,-99) , 
6, 0.809499, 1, 0, 0.528774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397313,-99) , 
11, -3.19583, 1, 0, 0.413673,-99) , 
11, -2.17337, 0, 0, 0.46602,-99) , 
10, 0.429454, 1, 0, 0.492426,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0579836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466669,-99) , 
2, 0.0608823, 1, 0, 0.598202,-99) , 
NN(
0, 
0, 
-1, -2.85433, 0, -1, 0.490149,-99) , 
7, 0.00426234, 0, 0, 0.50566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356029,-99) , 
7, 0.0127891, 1, 0, 0.500541,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.110794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.75325, 0, 1, 0.641192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443686,-99) , 
8, 3.64833, 0, 0, 0.480344,-99) , 
8, 4.50466, 0, 0, 0.540351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451499,-99) , 
8, 12.7566, 0, 0, 0.488277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.238956,-99) , 
3, 7.44288, 0, 0, 0.478012,-99) , 
6, -0.142872, 1, 0, 0.494363,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.126712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.323371, 1, 1, 0.568648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331921,-99) , 
10, -0.614515, 1, 0, 0.46292,-99) , 
12, -1.68188, 0, 0, 0.548366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44226,-99) , 
0, 0.496203, 0, 0, 0.516908,-99) , 
NN(
0, 
0, 
-1, -0.0450247, 0, -1, 0.441791,-99) , 
4, 3.59448, 0, 0, 0.465086,-99) , 
8, 12.3915, 1, 0, 0.510451,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0603379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809527, 1, 1, 0.524335,-99) , 
NN(
0, 
0, 
-1, 0.587172, 1, -1, 0.476656,-99) , 
12, -0.587727, 0, 0, 0.498382,-99) , 
NN(
0, 
0, 
-1, 8.76221, 1, -1, 0.36721,-99) , 
1, 0.00702288, 1, 0, 0.490756,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0879138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483906,-99) , 
0, 0.494417, 0, 0, 0.524734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450238,-99) , 
6, 0.42855, 1, 0, 0.476444,-99) , 
0, 0.497139, 1, 0, 0.495659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384743,-99) , 
12, -2.71153, 0, 0, 0.490692,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0354257);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.693376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499464,-99) , 
3, 17.2641, 0, 0, 0.504656,-99) , 
NN(
0, 
0, 
-1, 11.2303, 0, -1, 0.441215,-99) , 
2, 0.0823977, 1, 0, 0.495696,-99) , 
0, 0.489521, 1, 0, 0.500677,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.104812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491011,-99) , 
3, 9.65264, 0, 0, 0.530555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388087,-99) , 
6, 0.954651, 1, 0, 0.458847,-99) , 
6, 0.904738, 1, 0, 0.515771,-99) , 
NN(
0, 
0, 
-1, -1.3801, 1, -1, 0.367707,-99) , 
12, -2.40886, 0, 0, 0.503828,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.086667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486053,-99) , 
10, 0.0676498, 1, 0, 0.561737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.324622,-99) , 
10, -0.254751, 0, 0, 0.503082,-99) , 
11, -3.09833, 1, 0, 0.523172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.313881,-99) , 
10, -1.62761, 1, 0, 0.410388,-99) , 
12, -2.56906, 0, 0, 0.516108,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.107596);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473907,-99) , 
7, 0.000548638, 0, 0, 0.542475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385882,-99) , 
7, 0.011521, 1, 0, 0.536106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455606,-99) , 
4, 1.80982, 1, 0, 0.481999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424231,-99) , 
6, 0.714306, 1, 0, 0.461355,-99) , 
12, 0.301607, 1, 0, 0.520891,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.116851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.59904, 0, 1, 0.661401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395026,-99) , 
3, 6.02435, 0, 0, 0.551343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467737,-99) , 
10, -0.182607, 1, 0, 0.480683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279685,-99) , 
12, -1.89112, 0, 0, 0.471733,-99) , 
10, -0.713192, 1, 0, 0.481321,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.128561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.789892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497971,-99) , 
9, 0.718044, 0, 0, 0.562476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432503,-99) , 
8, 6.48528, 0, 0, 0.484023,-99) , 
9, -951.286, 0, 0, 0.531946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.721141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498479,-99) , 
6, 0.333265, 1, 0, 0.584925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426636,-99) , 
2, 0.0933672, 0, 0, 0.439583,-99) , 
10, -1.02491, 1, 0, 0.458436,-99) , 
12, -0.619346, 0, 0, 0.493018,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.138799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.690149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475014,-99) , 
6, -0.4283, 0, 0, 0.514707,-99) , 
0, 0.498096, 1, 0, 0.593412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407884,-99) , 
9, -0.701179, 0, 0, 0.522917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41311,-99) , 
11, -2.46215, 1, 0, 0.474921,-99) , 
9, -951.286, 0, 0, 0.504916,-99) , 
1, 0.00388765, 0, 0, 0.51371,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0551085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.21118, 0, 1, 0.632052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278534,-99) , 
12, -2.07672, 0, 0, 0.494945,-99) , 
10, -0.978717, 1, 0, 0.502923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.285893,-99) , 
12, -3.05602, 0, 0, 0.497152,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0718178);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493746,-99) , 
11, -3.39729, 1, 0, 0.51053,-99) , 
NN(
0, 
0, 
-1, -0.634714, 1, -1, 0.406197,-99) , 
12, -1.77493, 0, 0, 0.49822,-99) , 
11, -4.52524, 1, 0, 0.505812,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.127738);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.01236, 1, 1, 0.548829,-99) , 
NN(
NN(
0, 
0, 
-1, -1.63357, 0, 1, 0.556638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366881,-99) , 
4, 3.35241, 0, 0, 0.416871,-99) , 
11, -3.54998, 1, 0, 0.491231,-99) , 
12, -0.907825, 0, 0, 0.524437,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0993557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.62607, 1, 1, 0.530576,-99) , 
NN(
0, 
0, 
-1, -1.27992, 1, -1, 0.388616,-99) , 
12, -2.398, 0, 0, 0.51826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368105,-99) , 
4, 2.70409, 1, 0, 0.479677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36509,-99) , 
8, 3.33111, 0, 0, 0.429806,-99) , 
3, 4.82988, 0, 0, 0.499655,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0780873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486697,-99) , 
11, -1.77646, 0, 0, 0.504485,-99) , 
0, 0.491426, 1, 0, 0.517841,-99) , 
NN(
0, 
0, 
-1, -0.0585956, 0, -1, 0.460438,-99) , 
6, 0.619051, 1, 0, 0.48626,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0648972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00466807, 0, 1, 0.519626,-99) , 
NN(
0, 
0, 
-1, -951.287, 0, -1, 0.44714,-99) , 
7, 0.000609044, 0, 0, 0.504544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31006,-99) , 
7, 0.0127887, 1, 0, 0.497567,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0834737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.1159, 1, 1, 0.623753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46517,-99) , 
3, 3.04724, 0, 0, 0.55156,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482023,-99) , 
3, 8.87727, 1, 0, 0.493291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339568,-99) , 
3, 5.45526, 0, 0, 0.484776,-99) , 
6, -0.618861, 1, 0, 0.49679,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0724628);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43198,-99) , 
3, 16.2172, 1, 0, 0.541257,-99) , 
NN(
0, 
0, 
-1, 0.242203, 1, -1, 0.485289,-99) , 
0, 0.497139, 1, 0, 0.507204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329439,-99) , 
12, -2.90317, 0, 0, 0.500363,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.113497);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454266,-99) , 
6, 0.724036, 1, 0, 0.542847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345865,-99) , 
3, 3.85724, 1, 0, 0.466045,-99) , 
3, 4.87068, 0, 0, 0.513117,-99) , 
NN(
0, 
0, 
-1, -2.37134, 0, -1, 0.463925,-99) , 
8, 12.4788, 1, 0, 0.491449,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0796524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.26797, 0, 1, 0.567289,-99) , 
NN(
NN(
0, 
0, 
-1, -3.81159, 0, 1, 0.563429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328042,-99) , 
12, -1.32934, 0, 0, 0.491356,-99) , 
10, -0.141572, 1, 0, 0.507956,-99) , 
6, -0.714269, 1, 0, 0.516829,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.110191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423083,-99) , 
9, -0.987823, 0, 0, 0.54966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369521,-99) , 
8, 14.554, 1, 0, 0.475687,-99) , 
9, -951.286, 0, 0, 0.519428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497533,-99) , 
12, 0.408927, 1, 0, 0.539529,-99) , 
NN(
0, 
0, 
-1, -0.383476, 1, -1, 0.446505,-99) , 
11, -2.14031, 0, 0, 0.471121,-99) , 
0, 0.497139, 0, 0, 0.500062,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.143105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376937,-99) , 
11, -2.12134, 1, 0, 0.55428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.250432,-99) , 
10, -0.475546, 1, 0, 0.464589,-99) , 
12, -1.74766, 0, 0, 0.526011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383414,-99) , 
12, 0.980857, 1, 0, 0.503707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.288101,-99) , 
11, -3.0165, 1, 0, 0.374358,-99) , 
12, -0.430315, 0, 0, 0.479666,-99) , 
10, 0.715211, 1, 0, 0.504709,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.136592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.376119, 0, 1, 0.679078,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481987,-99) , 
12, -0.952915, 0, 0, 0.512213,-99) , 
1, -0.00314484, 1, 0, 0.528475,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498136, 0, 1, 0.559621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389071,-99) , 
6, -0.809527, 1, 0, 0.430089,-99) , 
8, 13.7791, 0, 0, 0.465115,-99) , 
12, -0.378879, 1, 0, 0.501112,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0745185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472654,-99) , 
1, -0.00060979, 0, 0, 0.503505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383128,-99) , 
2, -0.193924, 0, 0, 0.496858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302304,-99) , 
7, 0.0127887, 1, 0, 0.490194,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.114606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.550786, 1, 1, 0.549284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455773,-99) , 
8, 11.5783, 1, 0, 0.471918,-99) , 
0, 0.49809, 0, 0, 0.507678,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454786,-99) , 
12, -0.394419, 1, 0, 0.485954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350356,-99) , 
11, -4.46322, 1, 0, 0.381979,-99) , 
10, -0.14177, 0, 0, 0.448791,-99) , 
8, 9.74189, 0, 0, 0.486745,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0789427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49905, 1, 1, 0.636001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492419,-99) , 
11, -3.03523, 1, 0, 0.514017,-99) , 
6, 0.75803, 1, 0, 0.537523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484483,-99) , 
4, 3.3794, 0, 0, 0.493623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380037,-99) , 
2, -0.0585956, 1, 0, 0.420341,-99) , 
4, 4.14964, 1, 0, 0.478043,-99) , 
8, 13.7848, 0, 0, 0.494969,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.119453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.2101, 0, 1, 0.585372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426306,-99) , 
3, 10.4818, 0, 0, 0.497752,-99) , 
6, -0.238092, 1, 0, 0.519014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425153,-99) , 
11, -3.78212, 0, 0, 0.455989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309429,-99) , 
10, -0.21639, 1, 0, 0.432641,-99) , 
12, -1.50917, 0, 0, 0.497935,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0877135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.492314, 1, 1, 0.605202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454125,-99) , 
3, 9.11301, 0, 0, 0.50904,-99) , 
0, 0.495238, 1, 0, 0.531928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587151,-99) , 
NN(
0, 
0, 
-1, -1.20564, 0, -1, 0.46489,-99) , 
10, -0.242931, 1, 0, 0.47083,-99) , 
11, -3.31345, 1, 0, 0.488602,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.100247);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.827833, 1, 1, 0.589536,-99) , 
NN(
NN(
0, 
0, 
-1, 11.3245, 0, 1, 0.546045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456225,-99) , 
0, 0.496181, 1, 0, 0.480674,-99) , 
6, 0.619051, 1, 0, 0.513499,-99) , 
3, 15.1321, 0, 0, 0.52336,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.106358);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.729196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461439,-99) , 
12, -0.0954402, 1, 0, 0.629746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439413,-99) , 
6, 0.956047, 1, 0, 0.502429,-99) , 
6, 0.538659, 1, 0, 0.517974,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383631,-99) , 
0, 0.493331, 0, 0, 0.505667,-99) , 
NN(
0, 
0, 
-1, 0.0651083, 1, -1, 0.405761,-99) , 
4, 1.87275, 1, 0, 0.452245,-99) , 
8, 9.73249, 0, 0, 0.494609,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0826329);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498094, 0, 1, 0.635867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499194,-99) , 
11, -2.3315, 1, 0, 0.55963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401652,-99) , 
12, -2.42846, 0, 0, 0.519175,-99) , 
NN(
0, 
0, 
-1, -2.55921, 0, -1, 0.472046,-99) , 
10, 0.429454, 1, 0, 0.493149,-99) , 
8, 16.4411, 0, 0, 0.501523,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0760602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466424,-99) , 
0, 0.495235, 1, 0, 0.477956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389166,-99) , 
2, 0.20868, 1, 0, 0.473313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312532,-99) , 
1, 0.0103789, 1, 0, 0.468672,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.122294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.848387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480743,-99) , 
6, 0.382076, 0, 0, 0.664406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482465,-99) , 
10, 1.57189, 0, 0, 0.503185,-99) , 
3, 10.4863, 0, 0, 0.522314,-99) , 
NN(
0, 
0, 
-1, -2.06583, 1, -1, 0.43157,-99) , 
6, 0.619057, 1, 0, 0.470536,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.124138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.727362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435649,-99) , 
10, 0.12979, 0, 0, 0.515599,-99) , 
3, 4.16244, 0, 0, 0.567131,-99) , 
NN(
NN(
0, 
0, 
-1, -3.72732, 1, 1, 0.534025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451976,-99) , 
7, 0.00439398, 0, 0, 0.476239,-99) , 
6, 0.795795, 0, 0, 0.503857,-99) , 
6, -0.428523, 1, 0, 0.516613,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0534761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498094, 1, 1, 0.57758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358875,-99) , 
12, -1.49644, 0, 0, 0.489439,-99) , 
10, -0.402922, 1, 0, 0.500904,-99) , 
NN(
0, 
0, 
-1, -1.3891, 1, -1, 0.406717,-99) , 
12, -2.43088, 0, 0, 0.494291,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.04263);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.97829, 1, 1, 0.51835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404174,-99) , 
12, -2.83228, 0, 0, 0.514,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.057103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497669,-99) , 
7, 0.0030444, 0, 0, 0.517642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344493,-99) , 
7, 0.0127887, 1, 0, 0.511638,-99) , 
NN(
0, 
0, 
-1, 0.619028, 1, -1, 0.45928,-99) , 
12, 0.449003, 1, 0, 0.502444,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0993112);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492244,-99) , 
10, 0.714992, 1, 0, 0.537652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382299,-99) , 
10, -0.0975569, 0, 0, 0.460935,-99) , 
3, 4.77254, 0, 0, 0.518252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413993,-99) , 
3, 13.8436, 0, 0, 0.460909,-99) , 
6, 0.904703, 1, 0, 0.506053,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.125488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499998, 1, 1, 0.735756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326285,-99) , 
9, -1.3592, 0, 0, 0.498045,-99) , 
9, 1.28851, 0, 0, 0.526341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640666,-99) , 
NN(
0, 
0, 
-1, 13.6926, 1, -1, 0.449213,-99) , 
3, 15.0392, 0, 0, 0.466189,-99) , 
9, -951.286, 0, 0, 0.503638,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0809416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499762,-99) , 
6, 0.714269, 1, 0, 0.543977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474528,-99) , 
0, 0.50435, 0, 0, 0.485751,-99) , 
0, 0.496191, 1, 0, 0.503307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346288,-99) , 
1, 0.00815977, 1, 0, 0.495855,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.103163);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415493,-99) , 
12, -2.655, 0, 0, 0.549351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434934,-99) , 
6, 0.864625, 0, 0, 0.487701,-99) , 
6, 0.741503, 1, 0, 0.516998,-99) , 
NN(
0, 
0, 
-1, 0.136296, 0, -1, 0.423812,-99) , 
6, -0.809406, 0, 0, 0.502959,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0745786);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490915,-99) , 
2, 0.0255077, 0, 0, 0.511852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334632,-99) , 
3, 4.87351, 0, 0, 0.448841,-99) , 
4, 0.754423, 0, 0, 0.500815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41448,-99) , 
4, 6.87778, 1, 0, 0.493099,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.120312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486831,-99) , 
10, 1.00991, 1, 0, 0.578698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461311,-99) , 
4, 1.98242, 1, 0, 0.50729,-99) , 
0, 0.495238, 1, 0, 0.524917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36189,-99) , 
12, -1.80567, 0, 0, 0.503049,-99) , 
NN(
0, 
0, 
-1, -2.33602, 1, -1, 0.435565,-99) , 
6, 0.891147, 1, 0, 0.468624,-99) , 
6, 0.714288, 1, 0, 0.497986,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0894664);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.67927, 0, 1, 0.619603,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437448,-99) , 
2, 0.0813528, 1, 0, 0.506362,-99) , 
NN(
0, 
0, 
-1, -0.901815, 1, -1, 0.337926,-99) , 
12, -1.84306, 0, 0, 0.489574,-99) , 
11, -4.3643, 1, 0, 0.498803,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.105552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.91163, 0, 1, 0.547476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452588,-99) , 
11, -3.48431, 1, 0, 0.47168,-99) , 
6, 0.741491, 1, 0, 0.506619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38207,-99) , 
13, 3.49987, 0, 0, 0.419753,-99) , 
6, -0.809505, 0, 0, 0.493723,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.08246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.697648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496788,-99) , 
1, 0.00546674, 0, 0, 0.504286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.682854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379913,-99) , 
10, -0.415184, 1, 0, 0.417867,-99) , 
2, -0.0573264, 0, 0, 0.48606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308618,-99) , 
7, 0.0127888, 1, 0, 0.479365,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.102524);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.717751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424269,-99) , 
10, 0.95071, 0, 0, 0.59798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419496,-99) , 
10, 1.13645, 1, 0, 0.505076,-99) , 
11, -2.07861, 0, 0, 0.517769,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0968296, 0, 1, 0.541711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350911,-99) , 
9, -951.287, 0, 0, 0.463182,-99) , 
10, 1.57186, 1, 0, 0.506322,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0709419);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451317,-99) , 
12, -1.85691, 0, 0, 0.51018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438759,-99) , 
12, 0.649409, 1, 0, 0.500022,-99) , 
8, 20.4099, 0, 0, 0.50427,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0960913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457873,-99) , 
3, 12.0956, 1, 0, 0.585553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372418,-99) , 
10, 0.143419, 0, 0, 0.527007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424219,-99) , 
10, 0.175897, 1, 0, 0.473331,-99) , 
11, -2.74627, 0, 0, 0.502375,-99) , 
11, -4.39116, 1, 0, 0.508014,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.108379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395919,-99) , 
12, -1.59302, 0, 0, 0.495582,-99) , 
10, -1.28401, 1, 0, 0.502281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395853,-99) , 
2, 0.0795933, 0, 0, 0.41918,-99) , 
3, 14.0404, 0, 0, 0.442943,-99) , 
0, 0.500948, 1, 0, 0.484961,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0577686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495578,-99) , 
3, 4.87756, 0, 0, 0.533996,-99) , 
NN(
0, 
0, 
-1, 9.11906, 0, -1, 0.483507,-99) , 
6, -0.142858, 1, 0, 0.495646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373476,-99) , 
0, 0.505709, 1, 0, 0.488004,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0779279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.75843, 1, 1, 0.529299,-99) , 
NN(
0, 
0, 
-1, -0.584266, 0, -1, 0.463275,-99) , 
3, 11.3466, 0, 0, 0.490792,-99) , 
NN(
0, 
0, 
-1, 20.242, 0, -1, 0.391373,-99) , 
3, 17.2641, 1, 0, 0.483826,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0875209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.51139, 0, 1, 0.629668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44443,-99) , 
8, 5.71828, 0, 0, 0.567178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468927,-99) , 
0, 0.499043, 0, 0, 0.488214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.268356,-99) , 
12, -1.89112, 0, 0, 0.478075,-99) , 
10, -0.713115, 1, 0, 0.488958,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0693376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492209,-99) , 
0, 0.495238, 0, 0, 0.577115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327861,-99) , 
12, -1.42676, 0, 0, 0.485128,-99) , 
10, -0.303161, 1, 0, 0.498679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201965,-99) , 
10, -1.28255, 1, 0, 0.399838,-99) , 
12, -2.39655, 0, 0, 0.490527,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0650544);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442747,-99) , 
8, 7.21118, 0, 0, 0.556251,-99) , 
NN(
0, 
0, 
-1, -1.96357, 0, -1, 0.482925,-99) , 
10, -0.712995, 1, 0, 0.492053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342845,-99) , 
7, 0.0127885, 1, 0, 0.486475,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.132874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.689257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471695,-99) , 
12, -2.29529, 0, 0, 0.598391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435891,-99) , 
12, -0.560962, 0, 0, 0.501556,-99) , 
10, -0.428542, 1, 0, 0.518591,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430558,-99) , 
12, -1.56678, 0, 0, 0.485384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414927,-99) , 
11, -2.52203, 1, 0, 0.453832,-99) , 
6, 0.809475, 1, 0, 0.493815,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0665713);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.67195, 0, 1, 0.573698,-99) , 
NN(
0, 
0, 
-1, 5.86189, 0, -1, 0.470095,-99) , 
10, -0.998354, 1, 0, 0.477976,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0867322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.02361, 0, 1, 0.575867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373547,-99) , 
3, 6.93365, 0, 0, 0.459175,-99) , 
0, 0.493334, 0, 0, 0.555926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411875,-99) , 
12, -0.987786, 0, 0, 0.499799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417602,-99) , 
10, 2.18253, 1, 0, 0.490003,-99) , 
10, 0.142908, 1, 0, 0.511951,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0678711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561664,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466328,-99) , 
10, 0.6686, 1, 0, 0.498145,-99) , 
11, -1.46432, 0, 0, 0.505246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395809,-99) , 
0, 0.505709, 1, 0, 0.499638,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0932904);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47279,-99) , 
7, 0.00104943, 0, 0, 0.522514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456613,-99) , 
3, 18.4741, 0, 0, 0.47594,-99) , 
8, 13.7848, 1, 0, 0.507835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385256,-99) , 
7, 0.0110203, 1, 0, 0.502691,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0496499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.55803, 0, 1, 0.532298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433545,-99) , 
8, 11.7175, 0, 0, 0.487128,-99) , 
6, 0.428564, 1, 0, 0.503594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318448,-99) , 
12, -3.06288, 0, 0, 0.498941,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0729235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00165388, 1, 1, 0.535734,-99) , 
NN(
0, 
0, 
-1, 0.611294, 0, -1, 0.468742,-99) , 
6, 0.546458, 1, 0, 0.493304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425148,-99) , 
6, -0.904765, 0, 0, 0.487621,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0840073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468629,-99) , 
0, 0.505645, 1, 0, 0.562833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468072,-99) , 
10, 0.43079, 1, 0, 0.492558,-99) , 
0, 0.502445, 0, 0, 0.504516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375649,-99) , 
0, 0.489524, 0, 0, 0.499848,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.113696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425116,-99) , 
10, -0.133637, 1, 0, 0.495981,-99) , 
10, 0.734911, 0, 0, 0.562144,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389948,-99) , 
2, 0.0690905, 1, 0, 0.547063,-99) , 
NN(
0, 
0, 
-1, -3.39438, 0, -1, 0.460487,-99) , 
10, -0.427402, 1, 0, 0.475025,-99) , 
8, 16.4737, 0, 0, 0.486532,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.103073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.22532, 0, 1, 0.591615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476099,-99) , 
12, 0.332694, 1, 0, 0.527541,-99) , 
6, 0.619036, 1, 0, 0.554598,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.739625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428157,-99) , 
3, 7.98215, 0, 0, 0.582027,-99) , 
NN(
0, 
0, 
-1, -2.18746, 0, -1, 0.474981,-99) , 
10, -1.16869, 1, 0, 0.488018,-99) , 
11, -2.74014, 0, 0, 0.519133,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.062459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.93811, 0, 1, 0.652064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384377,-99) , 
12, -1.77354, 0, 0, 0.504924,-99) , 
10, -0.694129, 1, 0, 0.516474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41586,-99) , 
12, -2.71153, 0, 0, 0.511871,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.112389);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484745,-99) , 
12, -2.38533, 0, 0, 0.606619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386765,-99) , 
12, -1.37263, 0, 0, 0.507274,-99) , 
11, -3.52742, 1, 0, 0.52764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476074,-99) , 
3, 9.29548, 0, 0, 0.516588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398491,-99) , 
1, 0.000677622, 0, 0, 0.444668,-99) , 
10, 0.709024, 0, 0, 0.474541,-99) , 
3, 11.0623, 0, 0, 0.501067,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0825163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.720059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456538,-99) , 
12, -2.92789, 0, 0, 0.602863,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495806,-99) , 
1, -0.00152073, 1, 0, 0.525385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439397,-99) , 
10, 1.33351, 0, 0, 0.481185,-99) , 
11, -2.62175, 1, 0, 0.50327,-99) , 
11, -4.39662, 1, 0, 0.510072,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0705838);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.675569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476468,-99) , 
10, 0.552017, 1, 0, 0.495402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379147,-99) , 
2, -0.196956, 0, 0, 0.488577,-99) , 
10, -1.28442, 1, 0, 0.497431,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0655773);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 18.2766, 0, 1, 0.524633,-99) , 
NN(
0, 
0, 
-1, 0.00634629, 1, -1, 0.459049,-99) , 
2, -0.0498117, 0, 0, 0.509849,-99) , 
NN(
0, 
0, 
-1, 13.1304, 1, -1, 0.393053,-99) , 
12, -2.56978, 0, 0, 0.503269,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0449205);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377148,-99) , 
12, -2.10924, 0, 0, 0.501015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343564,-99) , 
1, 0.0103789, 1, 0, 0.49648,-99) , 
10, -1.28458, 1, 0, 0.502466,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.110739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451505,-99) , 
0, 0.494286, 0, 0, 0.513504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295037,-99) , 
7, 0.00941526, 1, 0, 0.504545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428768,-99) , 
0, 0.497151, 1, 0, 0.503954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328859,-99) , 
0, 0.500003, 0, 0, 0.384417,-99) , 
10, 0.13228, 0, 0, 0.444605,-99) , 
3, 4.92283, 0, 0, 0.492468,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.123385);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455159,-99) , 
4, 5.68918, 1, 0, 0.531144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409953,-99) , 
11, -2.52199, 1, 0, 0.463297,-99) , 
6, 0.837907, 1, 0, 0.499724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385774,-99) , 
6, -0.820737, 1, 0, 0.514758,-99) , 
NN(
0, 
0, 
-1, 4.54786, 0, -1, 0.390015,-99) , 
8, 4.38647, 1, 0, 0.447852,-99) , 
8, 8.47133, 0, 0, 0.484076,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0515078);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621901,-99) , 
NN(
0, 
0, 
-1, 0.502852, 1, -1, 0.484039,-99) , 
11, -4.35585, 1, 0, 0.48827,-99) , 
NN(
0, 
0, 
-1, -1.75564, 0, -1, 0.369471,-99) , 
12, -2.56791, 0, 0, 0.481313,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.107724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49714, 0, 1, 0.664364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470137,-99) , 
9, -951.286, 0, 0, 0.525264,-99) , 
3, 5.42245, 0, 0, 0.560907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468285,-99) , 
3, 15.3445, 0, 0, 0.482196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33665,-99) , 
12, -2.69121, 0, 0, 0.473769,-99) , 
6, 0.0476088, 1, 0, 0.497056,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0950964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358097,-99) , 
11, -2.58615, 1, 0, 0.541244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277832,-99) , 
12, -0.976807, 0, 0, 0.489186,-99) , 
10, 0.362323, 1, 0, 0.501749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433036,-99) , 
10, -1.14682, 1, 0, 0.474031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279178,-99) , 
11, -3.45396, 1, 0, 0.443484,-99) , 
12, -1.50119, 0, 0, 0.488486,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0856362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.33216, 0, 1, 0.527116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416782,-99) , 
10, 1.30504, 0, 0, 0.479693,-99) , 
12, -0.306784, 1, 0, 0.505685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406383,-99) , 
10, -1.79883, 0, 0, 0.510434,-99) , 
NN(
0, 
0, 
-1, -4.25528, 1, -1, 0.353895,-99) , 
10, -1.06022, 1, 0, 0.431094,-99) , 
12, -1.90995, 0, 0, 0.495252,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.107468);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.472894, 1, 1, 0.535403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3679,-99) , 
6, -0.809036, 1, 0, 0.44776,-99) , 
8, 6.9753, 0, 0, 0.511902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395051,-99) , 
3, 3.52964, 0, 0, 0.481608,-99) , 
NN(
0, 
0, 
-1, 0.501132, 0, -1, 0.428656,-99) , 
6, 0.714122, 1, 0, 0.456376,-99) , 
0, 0.497142, 1, 0, 0.477716,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.102382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499045, 1, 1, 0.58808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464924,-99) , 
11, -3.90795, 1, 0, 0.482278,-99) , 
11, -1.81807, 0, 0, 0.496127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396261,-99) , 
12, 0.95171, 1, 0, 0.488562,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0829159);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415847,-99) , 
3, 3.16664, 0, 0, 0.500031,-99) , 
NN(
0, 
0, 
-1, 0.000582157, 1, -1, 0.383984,-99) , 
3, 16.2087, 1, 0, 0.488513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529255,-99) , 
NN(
0, 
0, 
-1, 0.347414, 0, -1, 0.42179,-99) , 
6, -0.142626, 1, 0, 0.442799,-99) , 
10, 1.28623, 1, 0, 0.475733,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0434074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.831109, 1, 1, 0.510467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400668,-99) , 
11, -4.78755, 0, 0, 0.504455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412237,-99) , 
12, 0.961669, 1, 0, 0.49636,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0898543);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386252,-99) , 
10, -1.68913, 0, 0, 0.522385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395759,-99) , 
10, 1.91105, 0, 0, 0.458171,-99) , 
10, 1.57136, 1, 0, 0.509498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38531,-99) , 
6, 0.846986, 1, 0, 0.429802,-99) , 
8, 16.194, 1, 0, 0.497748,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0781451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.762844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417333,-99) , 
3, 4.93276, 0, 0, 0.602003,-99) , 
NN(
0, 
0, 
-1, -1.77814, 0, -1, 0.480663,-99) , 
10, -0.694234, 1, 0, 0.490182,-99) , 
NN(
0, 
0, 
-1, -1.66066, 1, -1, 0.350621,-99) , 
12, -2.61772, 0, 0, 0.481709,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.068703);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.699361,-99) , 
NN(
NN(
0, 
0, 
-1, 3.46545, 0, 1, 0.576134,-99) , 
NN(
0, 
0, 
-1, -2.53411, 0, -1, 0.476511,-99) , 
6, -0.809506, 1, 0, 0.487824,-99) , 
10, -1.56917, 1, 0, 0.493838,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0927624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465896,-99) , 
0, 0.498407, 1, 0, 0.506689,-99) , 
0, 0.503802, 0, 0, 0.517315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426423,-99) , 
12, -1.66668, 0, 0, 0.464065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.35279,-99) , 
10, 0.295105, 1, 0, 0.453281,-99) , 
12, -0.949108, 0, 0, 0.492034,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.125587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523702, 1, 1, 0.55018,-99) , 
NN(
0, 
0, 
-1, -1.68204, 0, -1, 0.325418,-99) , 
9, -1.27504, 0, 0, 0.515222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419033,-99) , 
0, 0.494286, 0, 0, 0.50213,-99) , 
NN(
0, 
0, 
-1, -1.6959, 1, -1, 0.422434,-99) , 
11, -2.17747, 1, 0, 0.474142,-99) , 
9, -951.286, 0, 0, 0.498561,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.103973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47979,-99) , 
12, -0.675328, 1, 0, 0.503593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410247,-99) , 
9, -951.286, 1, 0, 0.442848,-99) , 
4, 4.17849, 1, 0, 0.490562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400709,-99) , 
3, 5.99979, 0, 0, 0.493104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.236168,-99) , 
10, -0.119767, 1, 0, 0.444009,-99) , 
12, -1.40487, 0, 0, 0.478215,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.10614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.703164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42936,-99) , 
11, -2.44886, 0, 0, 0.493095,-99) , 
11, -2.89803, 1, 0, 0.510756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414445,-99) , 
13, 12.0585, 1, 0, 0.538147,-99) , 
NN(
0, 
0, 
-1, -2.11781, 0, -1, 0.441103,-99) , 
11, -4.42447, 1, 0, 0.451303,-99) , 
10, 0.714992, 0, 0, 0.478416,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0375097);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.24298, 1, 1, 0.514295,-99) , 
NN(
0, 
0, 
-1, 1.12628e-05, 0, -1, 0.418888,-99) , 
12, -2.43088, 0, 0, 0.507939,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0675204);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603874,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465117,-99) , 
11, -2.68743, 0, 0, 0.486696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399268,-99) , 
2, -0.161821, 0, 0, 0.480465,-99) , 
0, 0.490474, 1, 0, 0.486112,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0841881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49459, 0, 1, 0.547412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447672,-99) , 
0, 0.498149, 0, 0, 0.483459,-99) , 
0, 0.495324, 1, 0, 0.501741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382034,-99) , 
8, 9.80086, 0, 0, 0.465589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344572,-99) , 
1, 0.000427088, 1, 0, 0.405118,-99) , 
0, 0.503803, 1, 0, 0.489322,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.044722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39949, 0, 1, 0.516191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441178,-99) , 
12, 0.961669, 1, 0, 0.510304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41412,-99) , 
1, 0.00815977, 1, 0, 0.506232,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0545901);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.64527, 1, 1, 0.512038,-99) , 
NN(
0, 
0, 
-1, -0.977156, 1, -1, 0.433435,-99) , 
12, -2.07854, 0, 0, 0.502231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382937,-99) , 
12, 0.956949, 1, 0, 0.491996,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0805061);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556946,-99) , 
NN(
0, 
0, 
-1, 0.489521, 0, -1, 0.461,-99) , 
4, 7.04315, 0, 0, 0.467235,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0999398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443902,-99) , 
6, 0.959155, 1, 0, 0.520234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444026,-99) , 
6, -0.0930181, 1, 0, 0.463183,-99) , 
6, 0.904733, 0, 0, 0.475408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330166,-99) , 
12, -2.93047, 0, 0, 0.470565,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0806884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496189, 1, 1, 0.588034,-99) , 
NN(
0, 
0, 
-1, 3.25914, 0, -1, 0.473014,-99) , 
11, -3.84824, 1, 0, 0.486577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334791,-99) , 
12, -2.80305, 0, 0, 0.479543,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0443599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.618843, 1, 1, 0.514262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437514,-99) , 
8, 3.30522, 0, 0, 0.507313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416752,-99) , 
2, 0.199574, 1, 0, 0.502356,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.102375);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49171,-99) , 
0, 0.497134, 0, 0, 0.578535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429239,-99) , 
12, -0.293741, 1, 0, 0.504025,-99) , 
12, 0.184611, 0, 0, 0.522521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513695,-99) , 
NN(
0, 
0, 
-1, 0.149813, 1, -1, 0.437723,-99) , 
11, -1.77103, 0, 0, 0.452562,-99) , 
6, 0.809499, 1, 0, 0.495366,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0740674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65109, 1, 1, 0.547713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454483,-99) , 
0, 0.498908, 0, 0, 0.492381,-99) , 
0, 0.496189, 1, 0, 0.509257,-99) , 
NN(
0, 
0, 
-1, 13.8792, 0, -1, 0.448816,-99) , 
6, 0.904733, 1, 0, 0.496569,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0881848);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466157,-99) , 
0, 0.498501, 1, 0, 0.544686,-99) , 
NN(
0, 
0, 
-1, -1.34906, 0, -1, 0.479676,-99) , 
10, -0.427166, 1, 0, 0.490754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577525,-99) , 
NN(
0, 
0, 
-1, -0.0478286, 1, -1, 0.397502,-99) , 
3, 13.142, 0, 0, 0.430485,-99) , 
0, 0.501901, 1, 0, 0.477553,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.04875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.42263, 1, 1, 0.516395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411489,-99) , 
2, 0.190616, 1, 0, 0.510255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391796,-99) , 
11, -4.91842, 0, 0, 0.505196,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0594204);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577781,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459109,-99) , 
0, 0.496187, 0, 0, 0.490385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230666,-99) , 
10, -1.0467, 1, 0, 0.433911,-99) , 
12, -2.17718, 0, 0, 0.485056,-99) , 
3, 18.3186, 0, 0, 0.48862,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0721371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491217,-99) , 
3, 7.04474, 0, 0, 0.574304,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4637,-99) , 
11, -2.2826, 1, 0, 0.493404,-99) , 
NN(
0, 
0, 
-1, -0.313611, 1, -1, 0.419414,-99) , 
12, -1.58347, 0, 0, 0.483428,-99) , 
10, -0.998736, 1, 0, 0.489983,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.112897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.688123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426119,-99) , 
3, 8.14245, 0, 0, 0.518319,-99) , 
7, 0.0035283, 0, 0, 0.553909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408144,-99) , 
8, 15.9455, 1, 0, 0.502535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431735,-99) , 
11, -1.55905, 0, 0, 0.44518,-99) , 
0, 0.497139, 1, 0, 0.467026,-99) , 
10, -0.427382, 1, 0, 0.480847,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0832753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498142,-99) , 
11, -3.08933, 1, 0, 0.5061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394282,-99) , 
10, -0.0341623, 1, 0, 0.456922,-99) , 
12, -0.906015, 0, 0, 0.489529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374052,-99) , 
1, 0.000703604, 1, 0, 0.494848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310048,-99) , 
10, -0.921839, 1, 0, 0.427858,-99) , 
12, -1.99004, 0, 0, 0.482069,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.125098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441114,-99) , 
3, 4.91629, 0, 0, 0.539837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454828,-99) , 
6, -0.047635, 1, 0, 0.484694,-99) , 
0, 0.499996, 1, 0, 0.520769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359698,-99) , 
12, -1.75948, 0, 0, 0.402925,-99) , 
10, -1.18116, 1, 0, 0.451236,-99) , 
11, -3.85736, 0, 0, 0.509236,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.101866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374972,-99) , 
10, -0.0469316, 0, 0, 0.543636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425139,-99) , 
10, 0.0439274, 1, 0, 0.482453,-99) , 
11, -2.95221, 0, 0, 0.510492,-99) , 
NN(
0, 
0, 
-1, 9.93349, 0, -1, 0.452243,-99) , 
10, 1.57056, 1, 0, 0.497842,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0438361);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613438,-99) , 
NN(
0, 
0, 
-1, 18.643, 1, -1, 0.48058,-99) , 
8, 20.4099, 0, 0, 0.48409,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0720413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.493686, 0, 1, 0.546181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.302274,-99) , 
6, 0.019502, 0, 0, 0.506632,-99) , 
8, 8.39861, 1, 0, 0.516762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399395,-99) , 
12, -2.80305, 0, 0, 0.51189,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.124028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466224,-99) , 
0, 0.501901, 1, 0, 0.54209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379897,-99) , 
0, 0.491426, 1, 0, 0.442693,-99) , 
0, 0.494283, 0, 0, 0.515807,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460599,-99) , 
11, -3.91149, 1, 0, 0.471442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359971,-99) , 
12, -2.28883, 0, 0, 0.461706,-99) , 
6, 0.428564, 1, 0, 0.481046,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0643765);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45545,-99) , 
8, 15.1731, 1, 0, 0.502237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416671,-99) , 
11, -1.18507, 1, 0, 0.493787,-99) , 
NN(
0, 
0, 
-1, -2.90771, 1, -1, 0.384183,-99) , 
12, -2.58635, 0, 0, 0.487476,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0859453);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456686,-99) , 
0, 0.495232, 0, 0, 0.502822,-99) , 
6, 0.302258, 1, 0, 0.51436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539063,-99) , 
NN(
0, 
0, 
-1, 0.494291, 0, -1, 0.426479,-99) , 
12, 0.333742, 0, 0, 0.456504,-99) , 
3, 7.97338, 0, 0, 0.497074,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0783258);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 15.1431, 1, 1, 0.614979,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422404,-99) , 
8, 18.3167, 0, 0, 0.492056,-99) , 
8, 17.1178, 1, 0, 0.548816,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495236, 1, 1, 0.549899,-99) , 
NN(
0, 
0, 
-1, 0.492382, 0, -1, 0.472779,-99) , 
2, 0.0672061, 0, 0, 0.484903,-99) , 
3, 14.1568, 0, 0, 0.496927,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.073119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.88819, 0, 1, 0.538762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368766,-99) , 
10, 0.587172, 1, 0, 0.483557,-99) , 
12, -0.584266, 0, 0, 0.51145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374082,-99) , 
2, 0.207157, 1, 0, 0.504623,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0539403);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.581831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479378,-99) , 
8, 11.9298, 0, 0, 0.494863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388781,-99) , 
8, 16.9504, 1, 0, 0.488666,-99) , 
3, 17.2924, 0, 0, 0.493832,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.103033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.03892, 1, 1, 0.562089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398397,-99) , 
0, 0.502716, 0, 0, 0.484624,-99) , 
0, 0.5019, 1, 0, 0.522904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486896,-99) , 
6, 0.428519, 1, 0, 0.524866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439233,-99) , 
6, -0.714087, 1, 0, 0.455092,-99) , 
4, 3.36187, 0, 0, 0.472393,-99) , 
0, 0.499043, 0, 0, 0.493273,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.102297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404544,-99) , 
13, 13.7095, 1, 0, 0.530821,-99) , 
3, 15.1008, 0, 0, 0.544422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476305,-99) , 
0, 0.502897, 0, 0, 0.490299,-99) , 
NN(
0, 
0, 
-1, 4.41908, 1, -1, 0.415655,-99) , 
6, -0.618971, 0, 0, 0.476099,-99) , 
0, 0.495237, 1, 0, 0.492364,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.120106);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478285,-99) , 
4, 3.49386, 1, 0, 0.538617,-99) , 
NN(
0, 
0, 
-1, -4.20054, 1, -1, 0.437855,-99) , 
11, -3.94555, 0, 0, 0.52294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.721019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464363,-99) , 
9, 1.29043, 0, 0, 0.494619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400785,-99) , 
2, 0.0386373, 0, 0, 0.428011,-99) , 
9, -951.286, 0, 0, 0.467768,-99) , 
0, 0.499044, 1, 0, 0.499729,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0557247);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.693512, 1, 1, 0.553881,-99) , 
NN(
NN(
0, 
0, 
-1, -4.84006, 0, 1, 0.593394,-99) , 
NN(
0, 
0, 
-1, -2.22244, 0, -1, 0.489128,-99) , 
10, -1.16215, 1, 0, 0.49802,-99) , 
10, 1.28623, 0, 0, 0.513431,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0588662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.99551, 1, 1, 0.538901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371374,-99) , 
11, -2.49466, 1, 0, 0.488639,-99) , 
10, 0.519046, 0, 0, 0.512619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441126,-99) , 
12, 0.956949, 1, 0, 0.506716,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0807768);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494073,-99) , 
9, -951.286, 1, 0, 0.513559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438912,-99) , 
10, 1.85827, 1, 0, 0.502876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570934,-99) , 
NN(
0, 
0, 
-1, 0.362211, 0, -1, 0.407927,-99) , 
12, -1.55452, 1, 0, 0.434517,-99) , 
0, 0.494282, 0, 0, 0.487999,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0988919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.183703, 1, 1, 0.555409,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364901,-99) , 
4, 2.52273, 1, 0, 0.461,-99) , 
6, -0.428443, 0, 0, 0.532516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492469,-99) , 
10, 0.862556, 1, 0, 0.55407,-99) , 
NN(
0, 
0, 
-1, 0.500942, 1, -1, 0.461333,-99) , 
6, -0.33334, 1, 0, 0.480382,-99) , 
11, -2.93546, 1, 0, 0.501389,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.088707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492049,-99) , 
11, -2.07226, 1, 0, 0.534702,-99) , 
NN(
0, 
0, 
-1, 16.4247, 1, -1, 0.483455,-99) , 
12, -0.854112, 0, 0, 0.512953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458517,-99) , 
10, 0.701208, 0, 0, 0.525408,-99) , 
NN(
0, 
0, 
-1, 3.47365, 0, -1, 0.395809,-99) , 
2, 0.114094, 1, 0, 0.456812,-99) , 
2, 0.0483677, 1, 0, 0.500616,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.110459);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498232,-99) , 
0, 0.500953, 1, 0, 0.557761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419827,-99) , 
0, 0.493334, 0, 0, 0.502972,-99) , 
10, 0.701766, 0, 0, 0.534206,-99) , 
NN(
0, 
0, 
-1, -0.468479, 1, -1, 0.404824,-99) , 
12, -1.71303, 0, 0, 0.510008,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.100019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.776838, 1, 1, 0.541939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441548,-99) , 
10, 0.406242, 0, 0, 0.533413,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409658,-99) , 
8, 4.57875, 0, 0, 0.507951,-99) , 
NN(
0, 
0, 
-1, -1.43794, 0, -1, 0.430898,-99) , 
10, -0.202462, 1, 0, 0.468753,-99) , 
12, -0.819578, 0, 0, 0.50451,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.11275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444711,-99) , 
4, 0.809427, 0, 0, 0.552097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441424,-99) , 
3, 11.7186, 0, 0, 0.49545,-99) , 
6, 0.5238, 1, 0, 0.517742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411166,-99) , 
11, -2.47583, 1, 0, 0.464111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373651,-99) , 
1, -0.00217314, 0, 0, 0.440692,-99) , 
2, 0.0595711, 1, 0, 0.502507,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0591266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492128,-99) , 
8, 11.9025, 1, 0, 0.514938,-99) , 
NN(
0, 
0, 
-1, 7.27978, 1, -1, 0.471623,-99) , 
3, 7.53032, 0, 0, 0.502076,-99) , 
NN(
0, 
0, 
-1, 0.498071, 1, -1, 0.419024,-99) , 
8, 19.0051, 1, 0, 0.49704,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0549876);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464611,-99) , 
0, 0.494282, 0, 0, 0.505726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402649,-99) , 
8, 19.9793, 1, 0, 0.501477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356229,-99) , 
10, -1.85565, 0, 0, 0.496925,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0726004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498372, 1, 1, 0.584731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492475,-99) , 
0, 0.496195, 0, 0, 0.553687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439956,-99) , 
6, 0.809377, 1, 0, 0.486885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.308525,-99) , 
8, 15.6667, 1, 0, 0.478524,-99) , 
8, 16.3597, 0, 0, 0.488272,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0642366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.717871, 1, 1, 0.517476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368608,-99) , 
12, -0.862512, 0, 0, 0.457498,-99) , 
3, 6.90904, 0, 0, 0.501484,-99) , 
NN(
0, 
0, 
-1, -1.66167, 1, -1, 0.388673,-99) , 
12, -2.51857, 0, 0, 0.494403,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.114363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428972,-99) , 
9, -0.706522, 0, 0, 0.506959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430675,-99) , 
0, 0.495551, 1, 0, 0.454341,-99) , 
9, -951.286, 0, 0, 0.486193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347308,-99) , 
0, 0.489521, 0, 0, 0.481186,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0863108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370283,-99) , 
6, -0.142917, 0, 0, 0.507685,-99) , 
10, 1.00024, 0, 0, 0.551815,-99) , 
NN(
NN(
0, 
0, 
-1, 7.35428, 0, 1, 0.542181,-99) , 
NN(
0, 
0, 
-1, -1.42012, 0, -1, 0.472957,-99) , 
6, 0.0476845, 1, 0, 0.492037,-99) , 
2, -0.0648558, 1, 0, 0.50303,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0553057);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714307, 1, 1, 0.61432,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427241,-99) , 
12, -1.40127, 0, 0, 0.491087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307904,-99) , 
12, -1.8943, 0, 0, 0.48348,-99) , 
10, -0.713192, 1, 0, 0.497514,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0945056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.677854, 0, 1, 0.61594,-99) , 
NN(
0, 
0, 
-1, 0.00635269, 1, -1, 0.476699,-99) , 
6, 0.298162, 1, 0, 0.486571,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421857,-99) , 
11, -2.59332, 1, 0, 0.463424,-99) , 
NN(
0, 
0, 
-1, -1.774, 1, -1, 0.382946,-99) , 
10, -0.139314, 0, 0, 0.433843,-99) , 
3, 7.98524, 0, 0, 0.47115,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0523101);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.720481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493514,-99) , 
11, -4.06243, 1, 0, 0.501336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345078,-99) , 
12, -2.15568, 0, 0, 0.493818,-99) , 
10, -1.28436, 1, 0, 0.500512,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0908576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368911,-99) , 
7, 0.0115213, 1, 0, 0.529076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444869,-99) , 
3, 14.1691, 0, 0, 0.459699,-99) , 
2, 0.0385174, 1, 0, 0.511257,-99) , 
NN(
0, 
0, 
-1, 1.91195, 0, -1, 0.446685,-99) , 
10, 1.5717, 1, 0, 0.497888,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.115315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.4575, 0, 1, 0.537424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434962,-99) , 
12, 0.681344, 1, 0, 0.518924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429041,-99) , 
0, 0.499042, 1, 0, 0.495883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286967,-99) , 
10, 0.0958814, 1, 0, 0.465356,-99) , 
12, -1.17702, 0, 0, 0.500692,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0581341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487216,-99) , 
11, -3.13997, 0, 0, 0.51085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426607,-99) , 
0, 0.490474, 0, 0, 0.506113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454869,-99) , 
0, 0.497121, 0, 0, 0.486724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357636,-99) , 
3, 16.2904, 0, 0, 0.438212,-99) , 
13, 17.5964, 1, 0, 0.498591,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0566949);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.63562, 0, 1, 0.596007,-99) , 
NN(
NN(
0, 
0, 
-1, -0.205285, 1, 1, 0.512175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40524,-99) , 
0, 0.499996, 0, 0, 0.444898,-99) , 
3, 4.89162, 0, 0, 0.498997,-99) , 
11, -4.33387, 1, 0, 0.506205,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.091817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28356, 1, 1, 0.535619,-99) , 
NN(
0, 
0, 
-1, -3.30825, 0, -1, 0.457647,-99) , 
2, 0.108958, 1, 0, 0.523367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427804,-99) , 
13, 7.49002, 0, 0, 0.494459,-99) , 
NN(
0, 
0, 
-1, 3.15377, 0, -1, 0.414457,-99) , 
13, 13.5103, 1, 0, 0.463881,-99) , 
2, -0.0350475, 0, 0, 0.506789,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.115793);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473372,-99) , 
4, 1.51614, 0, 0, 0.549429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370415,-99) , 
4, 5.96187, 1, 0, 0.521732,-99) , 
NN(
0, 
0, 
-1, -0.563525, 0, -1, 0.450726,-99) , 
11, -3.42179, 1, 0, 0.468934,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.083918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.2253, 1, 1, 0.647144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473595,-99) , 
0, 0.489434, 0, 0, 0.523594,-99) , 
0, 0.49143, 0, 0, 0.576959,-99) , 
NN(
NN(
0, 
0, 
-1, 0.853335, 1, 1, 0.564479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456778,-99) , 
0, 0.498094, 0, 0, 0.492422,-99) , 
8, 16.3597, 0, 0, 0.502235,-99) , 
0, 0.493334, 1, 0, 0.512369,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0855355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454503,-99) , 
0, 0.49905, 1, 0, 0.525557,-99) , 
2, -0.0186392, 1, 0, 0.555957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482431,-99) , 
8, 16.2313, 0, 0, 0.492161,-99) , 
NN(
0, 
0, 
-1, -0.0487182, 1, -1, 0.386726,-99) , 
12, -1.34263, 0, 0, 0.478043,-99) , 
10, -0.427469, 1, 0, 0.490839,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.111594);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.500941, 1, 1, 0.546414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481058,-99) , 
6, 0.428599, 1, 0, 0.512842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393674,-99) , 
0, 0.495235, 1, 0, 0.423603,-99) , 
2, -0.010909, 0, 0, 0.47659,-99) , 
11, -2.20387, 0, 0, 0.498307,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0548358);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363432,-99) , 
7, 0.00576053, 1, 0, 0.492644,-99) , 
NN(
0, 
0, 
-1, 0.500722, 0, -1, 0.441743,-99) , 
3, 9.02173, 0, 0, 0.476102,-99) , 
0, 0.489522, 1, 0, 0.480373,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.115915);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460491,-99) , 
11, -1.46432, 1, 0, 0.545077,-99) , 
NN(
0, 
0, 
-1, 0.139019, 0, -1, 0.426937,-99) , 
0, 0.504755, 1, 0, 0.53347,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383502,-99) , 
8, 18.0038, 1, 0, 0.528205,-99) , 
NN(
0, 
0, 
-1, 0.901799, 0, -1, 0.454212,-99) , 
6, 0.828147, 1, 0, 0.476378,-99) , 
3, 12.1112, 1, 0, 0.511291,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0626418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487331,-99) , 
11, -2.90124, 1, 0, 0.510613,-99) , 
11, -1.40537, 0, 0, 0.517575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395983,-99) , 
1, 0.0103789, 1, 0, 0.514083,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.135462);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418631,-99) , 
13, 17.9894, 1, 0, 0.558976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42432,-99) , 
10, -0.132676, 1, 0, 0.452454,-99) , 
9, -0.137585, 0, 0, 0.508208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518485,-99) , 
NN(
0, 
0, 
-1, -2.64628, 1, -1, 0.442992,-99) , 
10, 1.57021, 0, 0, 0.45717,-99) , 
9, -951.286, 0, 0, 0.488121,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.157612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360635,-99) , 
10, -0.708643, 0, 0, 0.545553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.21402,-99) , 
10, -0.839309, 1, 0, 0.442333,-99) , 
12, -2.07013, 0, 0, 0.524609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429327,-99) , 
6, 0.809394, 1, 0, 0.502878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393715,-99) , 
11, -2.86062, 1, 0, 0.431766,-99) , 
11, -2.1125, 0, 0, 0.469289,-99) , 
10, 0.714992, 1, 0, 0.498279,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.104981);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.563276, 0, 1, 0.553244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430007,-99) , 
10, 1.45607, 0, 0, 0.479493,-99) , 
12, -0.200606, 1, 0, 0.516102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436094,-99) , 
12, -1.94134, 0, 0, 0.477973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322402,-99) , 
10, -0.0684515, 1, 0, 0.448353,-99) , 
12, -1.28859, 0, 0, 0.49664,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0510691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.567804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494546,-99) , 
3, 14.0177, 0, 0, 0.505632,-99) , 
4, 4.75189, 0, 0, 0.513484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409872,-99) , 
4, 8.21387, 1, 0, 0.507045,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0701473);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494208,-99) , 
10, 2.06472, 1, 0, 0.533737,-99) , 
NN(
0, 
0, 
-1, 14.7689, 1, -1, 0.470469,-99) , 
10, 1.69155, 0, 0, 0.481123,-99) , 
10, -1.57067, 1, 0, 0.486454,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0980987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423288,-99) , 
6, 0.160785, 1, 0, 0.512665,-99) , 
3, 9.98384, 0, 0, 0.52525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489444,-99) , 
11, -2.79545, 1, 0, 0.549033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453884,-99) , 
2, 0.0741566, 0, 0, 0.468567,-99) , 
0, 0.495236, 1, 0, 0.485024,-99) , 
6, 0.523847, 1, 0, 0.500323,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.086472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484433,-99) , 
4, 3.51296, 0, 0, 0.50397,-99) , 
3, 8.42302, 1, 0, 0.511487,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470114,-99) , 
6, -0.809539, 1, 0, 0.524285,-99) , 
NN(
0, 
0, 
-1, -0.714108, 1, -1, 0.382282,-99) , 
11, -3.0362, 0, 0, 0.460377,-99) , 
6, -0.33334, 0, 0, 0.499325,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0870326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.680917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466127,-99) , 
4, 2.38141, 0, 0, 0.510696,-99) , 
10, -0.42758, 1, 0, 0.529681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409406,-99) , 
3, 3.07648, 0, 0, 0.500425,-99) , 
NN(
0, 
0, 
-1, 0.918335, 1, -1, 0.441653,-99) , 
6, 0.80947, 1, 0, 0.483216,-99) , 
8, 14.8856, 0, 0, 0.493744,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0829136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401903,-99) , 
8, 10.4067, 0, 0, 0.505189,-99) , 
3, 9.4562, 1, 0, 0.513432,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400176,-99) , 
11, -2.10792, 0, 0, 0.513869,-99) , 
NN(
0, 
0, 
-1, 0.501902, 0, -1, 0.415654,-99) , 
10, 1.00068, 0, 0, 0.445902,-99) , 
3, 7.98524, 0, 0, 0.493185,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0845984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499038, 1, 1, 0.635427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479595,-99) , 
1, 0.00194736, 0, 0, 0.491377,-99) , 
11, -2.08472, 0, 0, 0.512419,-99) , 
NN(
0, 
0, 
-1, 0.986394, 1, -1, 0.442248,-99) , 
12, 0.53383, 1, 0, 0.501597,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0986996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00329083, 0, 1, 0.533661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363755,-99) , 
7, 0.0115212, 1, 0, 0.526742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433759,-99) , 
12, -2.55403, 0, 0, 0.503182,-99) , 
NN(
0, 
0, 
-1, 0.497118, 1, -1, 0.380587,-99) , 
10, -0.55013, 1, 0, 0.449343,-99) , 
10, -0.141872, 0, 0, 0.505805,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0645946);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.425454, 1, 1, 0.524878,-99) , 
NN(
0, 
0, 
-1, 17.4682, 1, -1, 0.472402,-99) , 
4, 3.25768, 1, 0, 0.507307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385855,-99) , 
12, 1.04413, 1, 0, 0.498423,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0875652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.75539, 0, 1, 0.610651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470984,-99) , 
12, 0.122003, 1, 0, 0.511875,-99) , 
10, -0.99889, 1, 0, 0.518755,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434387,-99) , 
0, 0.503261, 1, 0, 0.463465,-99) , 
NN(
0, 
0, 
-1, -0.457076, 1, -1, 0.362876,-99) , 
11, -3.6103, 0, 0, 0.436373,-99) , 
0, 0.5019, 1, 0, 0.499976,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0885519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.666868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488391,-99) , 
10, 0.204959, 1, 0, 0.507167,-99) , 
6, 0.564838, 1, 0, 0.515118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438,-99) , 
8, 3.72826, 0, 0, 0.491831,-99) , 
NN(
0, 
0, 
-1, 11.3331, 1, -1, 0.390847,-99) , 
11, -3.37052, 0, 0, 0.457473,-99) , 
3, 11.0966, 0, 0, 0.486295,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.135307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439582,-99) , 
12, 0.445005, 1, 0, 0.522561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359604,-99) , 
7, 0.00560929, 1, 0, 0.512915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445284,-99) , 
3, 4.34448, 0, 0, 0.478515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359534,-99) , 
1, -0.00200256, 1, 0, 0.395184,-99) , 
6, -0.451788, 1, 0, 0.437914,-99) , 
8, 11.0446, 0, 0, 0.480676,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.10604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.21575, 0, 1, 0.542757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452223,-99) , 
10, 0.14522, 1, 0, 0.479536,-99) , 
6, -0.238083, 1, 0, 0.498519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511808,-99) , 
NN(
0, 
0, 
-1, -2.9086, 0, -1, 0.416647,-99) , 
2, -0.0845259, 1, 0, 0.438207,-99) , 
4, 3.58524, 1, 0, 0.48094,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.146793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.063681, 1, 1, 0.551357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416974,-99) , 
11, -1.69672, 1, 0, 0.521574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.651196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433948,-99) , 
12, -1.44353, 0, 0, 0.580717,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428101,-99) , 
11, -3.65112, 1, 0, 0.451409,-99) , 
9, 0.717325, 0, 0, 0.480497,-99) , 
9, -951.286, 1, 0, 0.495594,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.106621);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473121,-99) , 
10, 0.175896, 0, 0, 0.593307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472209,-99) , 
10, 0.496054, 1, 0, 0.499322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3274,-99) , 
6, 0.714816, 1, 0, 0.414841,-99) , 
12, -1.65055, 0, 0, 0.48402,-99) , 
3, 16.2622, 0, 0, 0.493429,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.109856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49446,-99) , 
11, -2.44838, 0, 0, 0.557432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470712,-99) , 
2, 0.0741566, 1, 0, 0.544549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.68451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472572,-99) , 
8, 12.1335, 0, 0, 0.50034,-99) , 
NN(
0, 
0, 
-1, 0.850094, 0, -1, 0.441348,-99) , 
6, 0.714064, 1, 0, 0.467073,-99) , 
12, -0.527062, 0, 0, 0.503959,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0675845);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492378, 1, 1, 0.52705,-99) , 
NN(
0, 
0, 
-1, -0.0842145, 1, -1, 0.447498,-99) , 
12, -1.35723, 0, 0, 0.506137,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0537797);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484549,-99) , 
1, -0.00129495, 1, 0, 0.497328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412469,-99) , 
4, 8.20909, 1, 0, 0.493019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37104,-99) , 
0, 0.489526, 0, 0, 0.488639,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0818813);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.451128, 1, 1, 0.518975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463584,-99) , 
0, 0.500002, 1, 0, 0.535261,-99) , 
NN(
0, 
0, 
-1, 0.187108, 1, -1, 0.406508,-99) , 
11, -2.69831, 0, 0, 0.460334,-99) , 
8, 9.7742, 0, 0, 0.498678,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.102777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.281176, 1, 1, 0.529438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373576,-99) , 
6, -0.749423, 1, 0, 0.452893,-99) , 
8, 7.06791, 0, 0, 0.508813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339538,-99) , 
11, -4.96306, 0, 0, 0.450052,-99) , 
NN(
0, 
0, 
-1, -4.25528, 1, -1, 0.325036,-99) , 
10, -1.06195, 1, 0, 0.39375,-99) , 
12, -1.99004, 0, 0, 0.493296,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0875435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.7963, 1, 1, 0.651553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481041,-99) , 
13, 3.73738, 0, 0, 0.562068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565836,-99) , 
NN(
0, 
0, 
-1, 0.246138, 1, -1, 0.470429,-99) , 
11, -1.29908, 0, 0, 0.479023,-99) , 
8, 7.11941, 1, 0, 0.497317,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.11345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494482,-99) , 
10, 1.20358, 1, 0, 0.564543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46548,-99) , 
11, -1.96111, 0, 0, 0.489141,-99) , 
2, -0.0263015, 1, 0, 0.509073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463877,-99) , 
6, 0.428439, 1, 0, 0.528162,-99) , 
NN(
0, 
0, 
-1, 10.9789, 0, -1, 0.417938,-99) , 
10, -0.8317, 1, 0, 0.444651,-99) , 
12, -0.996861, 0, 0, 0.484287,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0640374);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466754,-99) , 
4, 4.16304, 1, 0, 0.523309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421021,-99) , 
0, 0.498402, 1, 0, 0.483269,-99) , 
0, 0.500268, 0, 0, 0.496657,-99) , 
0, 0.490474, 1, 0, 0.5004,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0742957);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479581,-99) , 
3, 9.9092, 1, 0, 0.501196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310009,-99) , 
12, -2.4911, 0, 0, 0.495041,-99) , 
10, -1.56998, 1, 0, 0.49991,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0806342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455136,-99) , 
8, 3.69018, 0, 0, 0.508331,-99) , 
3, 16.2494, 0, 0, 0.516596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457965,-99) , 
2, 0.0792046, 1, 0, 0.505031,-99) , 
NN(
0, 
0, 
-1, 0.4917, 0, -1, 0.42451,-99) , 
2, 0.0155587, 0, 0, 0.450743,-99) , 
0, 0.496187, 0, 0, 0.49521,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0739952);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.0127292, 0, 1, 0.571192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47386,-99) , 
6, 0.809377, 0, 0, 0.491801,-99) , 
NN(
0, 
0, 
-1, 0.207303, 0, -1, 0.407748,-99) , 
0, 0.492382, 0, 0, 0.481869,-99) , 
3, 16.1256, 0, 0, 0.489479,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0766583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494964, 0, 1, 0.556035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39389,-99) , 
2, 0.0145161, 0, 0, 0.463212,-99) , 
1, -0.00107188, 0, 0, 0.522248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588221,-99) , 
NN(
0, 
0, 
-1, -0.0720295, 0, -1, 0.478126,-99) , 
0, 0.505981, 0, 0, 0.483996,-99) , 
0, 0.496188, 1, 0, 0.495531,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0766737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.79521, 1, 1, 0.630155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47577,-99) , 
6, 0.523794, 1, 0, 0.559206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483368,-99) , 
6, -0.291312, 1, 0, 0.490599,-99) , 
NN(
0, 
0, 
-1, -0.758994, 1, -1, 0.428076,-99) , 
3, 4.82988, 0, 0, 0.479147,-99) , 
0, 0.502853, 0, 0, 0.489921,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.108819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.6671, 1, 1, 0.552202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46044,-99) , 
4, 3.86285, 0, 0, 0.491043,-99) , 
0, 0.49619, 0, 0, 0.532031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409781,-99) , 
8, 14.6009, 0, 0, 0.468213,-99) , 
6, 0.904733, 1, 0, 0.517438,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0724627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491965,-99) , 
6, 0.877521, 1, 0, 0.529033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410017,-99) , 
6, 0.550981, 1, 0, 0.488953,-99) , 
6, 0.71426, 0, 0, 0.506505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532075,-99) , 
NN(
0, 
0, 
-1, 2.14965, 1, -1, 0.394589,-99) , 
3, 18.7048, 0, 0, 0.446542,-99) , 
8, 17.7556, 1, 0, 0.500707,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0556389);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383369,-99) , 
12, -2.24439, 0, 0, 0.506954,-99) , 
10, -1.28444, 1, 0, 0.512489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483263,-99) , 
11, -3.00428, 1, 0, 0.49851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382648,-99) , 
0, 0.497148, 0, 0, 0.447348,-99) , 
8, 4.5374, 0, 0, 0.501469,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0605111);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 11.8636, 0, 1, 0.611441,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0421645, 1, 1, 0.519766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305831,-99) , 
12, -2.15673, 0, 0, 0.409953,-99) , 
12, -1.92344, 0, 0, 0.51277,-99) , 
10, -0.998699, 1, 0, 0.519504,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.105958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.511678, 0, 1, 0.553978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462363,-99) , 
10, 1.29402, 1, 0, 0.525688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459608,-99) , 
11, -2.38597, 1, 0, 0.513543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442988,-99) , 
3, 3.43604, 1, 0, 0.456392,-99) , 
3, 13.0719, 0, 0, 0.471801,-99) , 
0, 0.495234, 1, 0, 0.485079,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0712319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0476576, 1, 1, 0.538441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408828,-99) , 
3, 8.9841, 0, 0, 0.488161,-99) , 
7, 0.00182612, 0, 0, 0.510038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384851,-99) , 
7, 0.0127887, 1, 0, 0.506205,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0952985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475198,-99) , 
3, 8.05853, 0, 0, 0.50572,-99) , 
0, 0.491426, 1, 0, 0.518599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420399,-99) , 
7, 0.0022388, 1, 0, 0.48078,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.4205,-99) , 
11, -2.37547, 1, 0, 0.456955,-99) , 
6, 0.714291, 1, 0, 0.487847,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0796001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461561,-99) , 
0, 0.49451, 0, 0, 0.512499,-99) , 
0, 0.491426, 1, 0, 0.518626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437506,-99) , 
0, 0.499038, 1, 0, 0.494539,-99) , 
NN(
0, 
0, 
-1, 0.00242672, 1, -1, 0.424234,-99) , 
2, -0.100521, 0, 0, 0.459875,-99) , 
2, -0.0350475, 0, 0, 0.502303,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0815962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484816,-99) , 
11, -2.54633, 1, 0, 0.531012,-99) , 
NN(
0, 
0, 
-1, 0.495235, 1, -1, 0.460659,-99) , 
3, 16.2494, 0, 0, 0.466842,-99) , 
1, 0.00601212, 0, 0, 0.470807,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0601862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00147582, 0, 1, 0.566234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370849,-99) , 
12, -1.45657, 0, 0, 0.49714,-99) , 
10, -0.256455, 1, 0, 0.511786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404857,-99) , 
12, 0.995992, 1, 0, 0.502787,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0865476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14917, 1, 1, 0.624745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435752,-99) , 
12, 0.970654, 1, 0, 0.496439,-99) , 
10, 0.812937, 1, 0, 0.521151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498139,-99) , 
11, -3.3634, 0, 0, 0.515841,-99) , 
NN(
0, 
0, 
-1, -1.23555, 0, -1, 0.433286,-99) , 
10, 0.0914703, 1, 0, 0.475604,-99) , 
11, -2.57981, 0, 0, 0.495462,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0617655);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.47598, 0, 1, 0.589106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485872,-99) , 
0, 0.492379, 1, 0, 0.492279,-99) , 
NN(
0, 
0, 
-1, 0.00217419, 1, -1, 0.443812,-99) , 
4, 4.16304, 1, 0, 0.481359,-99) , 
11, -4.37573, 1, 0, 0.488637,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0684171);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.80847, 0, 1, 0.622302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48822,-99) , 
11, -2.47228, 0, 0, 0.510307,-99) , 
NN(
0, 
0, 
-1, 0.504213, 0, -1, 0.44877,-99) , 
0, 0.502852, 1, 0, 0.500055,-99) , 
11, -4.39116, 1, 0, 0.507478,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.094689);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.630753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436339,-99) , 
4, 1.53925, 0, 0, 0.525292,-99) , 
10, 0.698393, 1, 0, 0.581788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42812,-99) , 
6, 0.950057, 1, 0, 0.495009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326191,-99) , 
7, 0.00635241, 1, 0, 0.486039,-99) , 
6, -0.0476284, 1, 0, 0.50936,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.125487);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432057,-99) , 
3, 5.01491, 0, 0, 0.525785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390809,-99) , 
12, -0.637277, 0, 0, 0.44862,-99) , 
10, 0.328893, 1, 0, 0.496883,-99) , 
NN(
0, 
0, 
-1, 13.1221, 1, -1, 0.445566,-99) , 
11, -2.57981, 1, 0, 0.472874,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0784323);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475457,-99) , 
0, 0.499043, 1, 0, 0.506902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335744,-99) , 
12, -3.10494, 0, 0, 0.500877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391698,-99) , 
6, 0.619036, 1, 0, 0.439299,-99) , 
11, -1.75169, 1, 0, 0.488675,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0988178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498772, 1, 1, 0.587366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411952,-99) , 
9, -951.286, 0, 0, 0.462161,-99) , 
0, 0.495236, 0, 0, 0.550352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478852,-99) , 
10, 0.553208, 1, 0, 0.501779,-99) , 
NN(
0, 
0, 
-1, -1.379, 1, -1, 0.390388,-99) , 
12, -2.06325, 0, 0, 0.489568,-99) , 
6, -0.0476213, 1, 0, 0.505307,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.118289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.58973, 1, 1, 0.557721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432167,-99) , 
2, -0.0489153, 1, 0, 0.468069,-99) , 
6, 0.142915, 0, 0, 0.524793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496041,-99) , 
3, 10.7926, 1, 0, 0.551646,-99) , 
NN(
0, 
0, 
-1, -3.31101, 1, -1, 0.449746,-99) , 
0, 0.50095, 0, 0, 0.475717,-99) , 
12, -0.707594, 0, 0, 0.501544,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0830346);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.784038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493403,-99) , 
10, 1.24231, 1, 0, 0.656177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43487,-99) , 
11, -2.67929, 0, 0, 0.505798,-99) , 
3, 4.7656, 0, 0, 0.548765,-99) , 
NN(
0, 
0, 
-1, 0.00705526, 1, -1, 0.480364,-99) , 
6, 0.0476088, 1, 0, 0.498784,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0563557);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488485,-99) , 
11, -3.55307, 1, 0, 0.499632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312452,-99) , 
12, -2.34161, 0, 0, 0.494361,-99) , 
10, -1.28436, 1, 0, 0.500093,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.121125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433747,-99) , 
8, 19.6434, 1, 0, 0.548112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331823,-99) , 
12, -2.6355, 0, 0, 0.535402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468091,-99) , 
4, 1.95406, 0, 0, 0.512509,-99) , 
NN(
0, 
0, 
-1, 9.56932, 0, -1, 0.443952,-99) , 
6, 0.122276, 1, 0, 0.484314,-99) , 
3, 11.1087, 0, 0, 0.51022,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0905687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489325,-99) , 
0, 0.498092, 0, 0, 0.536336,-99) , 
8, 6.81856, 0, 0, 0.551227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.696817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472515,-99) , 
12, -2.30724, 0, 0, 0.572126,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406081,-99) , 
10, 0.230679, 0, 0, 0.486483,-99) , 
10, -0.420637, 1, 0, 0.498121,-99) , 
6, -0.0476284, 1, 0, 0.511957,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0902067);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.12714, 0, 1, 0.580777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486235,-99) , 
3, 15.1283, 0, 0, 0.499167,-99) , 
6, 0.238096, 1, 0, 0.522672,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410013,-99) , 
13, 14.1104, 1, 0, 0.484085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367082,-99) , 
8, 5.59831, 0, 0, 0.446413,-99) , 
0, 0.502852, 1, 0, 0.509318,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0616279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.71049, 0, 1, 0.618149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451275,-99) , 
3, 3.80661, 1, 0, 0.538929,-99) , 
6, -0.714311, 0, 0, 0.566315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489428,-99) , 
12, -2.48938, 0, 0, 0.568274,-99) , 
NN(
0, 
0, 
-1, -1.77689, 0, -1, 0.491025,-99) , 
10, -0.713727, 1, 0, 0.498002,-99) , 
6, -0.142872, 1, 0, 0.514686,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.100783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.914568, 1, 1, 0.549402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356139,-99) , 
11, -4.89421, 1, 0, 0.442851,-99) , 
12, -2.43733, 0, 0, 0.538201,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490448,-99) , 
12, 0.0111165, 1, 0, 0.511615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380124,-99) , 
10, 0.764177, 0, 0, 0.490998,-99) , 
11, -2.28419, 1, 0, 0.521435,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0694427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.637379, 1, 1, 0.518093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452288,-99) , 
1, 0.0045751, 0, 0, 0.471162,-99) , 
3, 9.27567, 0, 0, 0.500556,-99) , 
NN(
0, 
0, 
-1, 2.56602, 1, -1, 0.435229,-99) , 
8, 17.5841, 1, 0, 0.494069,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0738149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.722529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47217,-99) , 
2, 0.00862224, 1, 0, 0.594713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463594,-99) , 
12, -1.23298, 0, 0, 0.50983,-99) , 
10, -0.998422, 1, 0, 0.515867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445946,-99) , 
6, -0.904763, 0, 0, 0.509602,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0583152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597427,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00260292, 0, 1, 0.557266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373073,-99) , 
12, -1.28861, 0, 0, 0.490535,-99) , 
10, -0.141872, 1, 0, 0.505621,-99) , 
6, -0.904763, 1, 0, 0.512453,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.104817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486359,-99) , 
6, 0.618948, 1, 0, 0.521435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376667,-99) , 
9, -1.56487, 0, 0, 0.509813,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49715, 1, 1, 0.5262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388518,-99) , 
11, -3.36285, 1, 0, 0.442794,-99) , 
10, 0.997986, 0, 0, 0.470498,-99) , 
9, -951.286, 0, 0, 0.493825,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0757176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492062, 1, 1, 0.646494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440833,-99) , 
6, 0.0476435, 0, 0, 0.49594,-99) , 
2, 0.0338413, 0, 0, 0.540611,-99) , 
NN(
NN(
0, 
0, 
-1, 16.2976, 0, 1, 0.512043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429231,-99) , 
6, 0.14285, 1, 0, 0.457555,-99) , 
11, -2.32602, 1, 0, 0.492226,-99) , 
0, 0.494286, 1, 0, 0.500946,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0967182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.30738, 0, 1, 0.610313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377146,-99) , 
13, 16.842, 1, 0, 0.483388,-99) , 
6, 0.714037, 1, 0, 0.533092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483612,-99) , 
6, 0.5238, 1, 0, 0.505709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384514,-99) , 
8, 11.7396, 0, 0, 0.428727,-99) , 
11, -2.78667, 0, 0, 0.480496,-99) , 
12, -1.35723, 1, 0, 0.493399,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0590645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402774,-99) , 
1, 0.00761678, 1, 0, 0.508249,-99) , 
3, 18.3231, 0, 0, 0.513971,-99) , 
10, -1.28436, 1, 0, 0.519719,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0559291);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43369,-99) , 
0, 0.492382, 0, 0, 0.501202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362615,-99) , 
12, -2.09745, 0, 0, 0.494236,-99) , 
10, -1.27874, 1, 0, 0.50092,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0956049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393951,-99) , 
12, -2.47334, 0, 0, 0.47876,-99) , 
8, 11.8953, 0, 0, 0.547112,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490613,-99) , 
10, 1.20051, 1, 0, 0.506166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425088,-99) , 
2, 0.00570353, 0, 0, 0.462605,-99) , 
10, 1.0107, 0, 0, 0.480398,-99) , 
11, -4.13326, 1, 0, 0.487243,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0819598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496156,-99) , 
12, -0.345153, 1, 0, 0.517224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378851,-99) , 
12, -1.19682, 0, 0, 0.511581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443762,-99) , 
10, -0.903495, 1, 0, 0.467608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329206,-99) , 
11, -2.91209, 1, 0, 0.446891,-99) , 
10, 0.143736, 0, 0, 0.489464,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0671188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478246,-99) , 
0, 0.49809, 0, 0, 0.497204,-99) , 
3, 18.2806, 0, 0, 0.501317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473788,-99) , 
2, -0.118552, 0, 0, 0.530876,-99) , 
NN(
0, 
0, 
-1, 3.40482, 0, -1, 0.412518,-99) , 
3, 9.87224, 1, 0, 0.447939,-99) , 
2, -0.0593128, 0, 0, 0.490581,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0925053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.49257, 0, 1, 0.56935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458054,-99) , 
10, 1.56886, 1, 0, 0.494573,-99) , 
0, 0.496177, 1, 0, 0.518296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397958,-99) , 
0, 0.49238, 0, 0, 0.49546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364863,-99) , 
11, -2.55924, 0, 0, 0.413531,-99) , 
10, 0.567958, 1, 0, 0.474477,-99) , 
12, -0.364011, 0, 0, 0.493024,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0385207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00660906, 0, 1, 0.5935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497395,-99) , 
3, 5.83708, 0, 0, 0.559627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380013,-99) , 
12, -2.45565, 0, 0, 0.493669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362769,-99) , 
0, 0.50616, 1, 0, 0.487844,-99) , 
0, 0.492377, 1, 0, 0.494677,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0903145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.713261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489701,-99) , 
0, 0.491702, 0, 0, 0.551543,-99) , 
8, 14.8504, 0, 0, 0.583411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469208,-99) , 
12, -0.150921, 0, 0, 0.525567,-99) , 
NN(
0, 
0, 
-1, -0.30869, 1, -1, 0.463168,-99) , 
10, 1.0008, 0, 0, 0.486182,-99) , 
0, 0.493334, 1, 0, 0.499545,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.103889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499997, 0, 1, 0.611604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419129,-99) , 
4, 2.1494, 1, 0, 0.47645,-99) , 
12, -1.71339, 0, 0, 0.528008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473611,-99) , 
0, 0.493332, 1, 0, 0.485893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424008,-99) , 
6, 0.904751, 1, 0, 0.472595,-99) , 
11, -3.42071, 1, 0, 0.486302,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0593188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493333, 1, 1, 0.512984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412402,-99) , 
2, 0.162319, 1, 0, 0.504687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600021,-99) , 
NN(
0, 
0, 
-1, -1.0532, 0, -1, 0.434737,-99) , 
10, -0.426552, 1, 0, 0.457184,-99) , 
2, -0.0572402, 0, 0, 0.49489,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.096147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460765,-99) , 
9, -951.288, 0, 0, 0.513825,-99) , 
11, -2.22929, 1, 0, 0.53798,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471027,-99) , 
6, 0.428599, 1, 0, 0.49489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393261,-99) , 
11, -1.99972, 1, 0, 0.481957,-99) , 
10, 1.28609, 0, 0, 0.49853,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.111643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499994, 0, 1, 0.56661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365821,-99) , 
10, -0.0608038, 1, 0, 0.458732,-99) , 
10, 0.428699, 0, 0, 0.521393,-99) , 
NN(
NN(
0, 
0, 
-1, -3.32355, 1, 1, 0.541283,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.450898,-99) , 
0, 0.495235, 1, 0, 0.471354,-99) , 
3, 12.1405, 0, 0, 0.489924,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.105213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.78372, 0, 1, 0.559062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468634,-99) , 
3, 15.2436, 0, 0, 0.498969,-99) , 
8, 12.2846, 1, 0, 0.529502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451853,-99) , 
9, -951.286, 0, 0, 0.507885,-99) , 
NN(
0, 
0, 
-1, 0.255711, 0, -1, 0.432207,-99) , 
10, -0.203649, 1, 0, 0.479487,-99) , 
12, -1.10838, 0, 0, 0.512496,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0518166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473236,-99) , 
3, 7.43433, 0, 0, 0.535672,-99) , 
NN(
0, 
0, 
-1, 0.489526, 0, -1, 0.490706,-99) , 
10, 1.28629, 0, 0, 0.50375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380077,-99) , 
3, 18.253, 1, 0, 0.496889,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0791715);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.646908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440408,-99) , 
3, 14.2751, 1, 0, 0.503828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3905,-99) , 
0, 0.499991, 0, 0, 0.439592,-99) , 
3, 4.16929, 0, 0, 0.492728,-99) , 
3, 18.3186, 0, 0, 0.498133,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0958473);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42785,-99) , 
0, 0.493335, 0, 0, 0.521636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451692,-99) , 
2, -0.0188457, 1, 0, 0.475331,-99) , 
3, 12.1531, 1, 0, 0.502868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429364,-99) , 
12, 0.95171, 1, 0, 0.496117,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0783192);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.654337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425752,-99) , 
3, 14.2185, 1, 0, 0.541651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441738,-99) , 
4, 0.72889, 0, 0, 0.489152,-99) , 
4, 3.35966, 0, 0, 0.505219,-99) , 
0, 0.490478, 1, 0, 0.511735,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0733917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497999,-99) , 
10, -1.28442, 1, 0, 0.503244,-99) , 
8, 20.0616, 0, 0, 0.508873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413643,-99) , 
8, 3.45379, 0, 0, 0.468276,-99) , 
NN(
0, 
0, 
-1, 0.497145, 1, -1, 0.340365,-99) , 
6, -0.691374, 1, 0, 0.423708,-99) , 
8, 7.22991, 0, 0, 0.485968,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0492593);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 18.1688, 1, 1, 0.565395,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431318,-99) , 
3, 4.09359, 0, 0, 0.489674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422262,-99) , 
12, 0.558946, 1, 0, 0.479681,-99) , 
8, 17.8134, 0, 0, 0.487194,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0752207);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473588,-99) , 
4, 3.20117, 1, 0, 0.521438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413179,-99) , 
6, 0.810212, 1, 0, 0.46614,-99) , 
4, 4.16304, 1, 0, 0.509272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379166,-99) , 
12, -2.81164, 0, 0, 0.503685,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0644923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.90454, 1, 1, 0.523522,-99) , 
NN(
0, 
0, 
-1, 0.145956, 0, -1, 0.464032,-99) , 
4, 4.16304, 1, 0, 0.509587,-99) , 
NN(
0, 
0, 
-1, 0.000633244, 1, -1, 0.380893,-99) , 
12, -2.51668, 0, 0, 0.501582,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0970619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5324, 1, 1, 0.556603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329755,-99) , 
3, 6.05148, 0, 0, 0.523515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580085,-99) , 
NN(
0, 
0, 
-1, 0.886401, 0, -1, 0.463834,-99) , 
4, 0.439337, 1, 0, 0.470459,-99) , 
4, 3.56867, 0, 0, 0.485387,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.106026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482051,-99) , 
4, 3.56867, 1, 0, 0.532076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455332,-99) , 
3, 14.2043, 0, 0, 0.471053,-99) , 
0, 0.498091, 1, 0, 0.500232,-99) , 
NN(
0, 
0, 
-1, -1.33454, 1, -1, 0.421697,-99) , 
10, -0.142004, 0, 0, 0.478804,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0769179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458584,-99) , 
9, -951.286, 0, 0, 0.493424,-99) , 
NN(
0, 
0, 
-1, 0.797272, 1, -1, 0.40267,-99) , 
0, 0.503803, 1, 0, 0.482885,-99) , 
NN(
0, 
0, 
-1, 10.9027, 0, -1, 0.366348,-99) , 
11, -4.7375, 0, 0, 0.476861,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0533519);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483032,-99) , 
4, 2.15989, 1, 0, 0.559093,-99) , 
NN(
0, 
0, 
-1, -4.02156, 0, -1, 0.484709,-99) , 
11, -4.33405, 1, 0, 0.490475,-99) , 
11, -1.05438, 0, 0, 0.499097,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0800716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.667267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493865,-99) , 
13, 12.9271, 1, 0, 0.607322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48091,-99) , 
4, 3.35005, 0, 0, 0.500743,-99) , 
1, -0.00262264, 1, 0, 0.513904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404623,-99) , 
7, 0.0110205, 1, 0, 0.509191,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0497328);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356388,-99) , 
10, -1.79331, 0, 0, 0.494659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416081,-99) , 
12, 0.313255, 1, 0, 0.48401,-99) , 
12, 0.85551, 0, 0, 0.496419,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0904749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.686316, 1, 1, 0.618244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496192,-99) , 
3, 3.05744, 0, 0, 0.56249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493601,-99) , 
10, 1.28521, 0, 0, 0.521645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363422,-99) , 
12, -0.386386, 1, 0, 0.447913,-99) , 
0, 0.495237, 0, 0, 0.503123,-99) , 
8, 5.71993, 1, 0, 0.513904,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0913397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494283, 1, 1, 0.558742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431717,-99) , 
11, -2.32735, 1, 0, 0.481208,-99) , 
6, 0.854779, 1, 0, 0.515819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475136,-99) , 
3, 6.17793, 0, 0, 0.499673,-99) , 
NN(
0, 
0, 
-1, 8.57259, 0, -1, 0.427994,-99) , 
6, 0.0958757, 1, 0, 0.477072,-99) , 
8, 11.0968, 0, 0, 0.499979,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0654239);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607695,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00242593, 0, 1, 0.510051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428903,-99) , 
6, -0.83469, 1, 0, 0.457131,-99) , 
3, 10.0768, 0, 0, 0.489859,-99) , 
0, 0.505709, 0, 0, 0.494687,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0816685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499039, 1, 1, 0.57124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486091,-99) , 
10, -1.16221, 1, 0, 0.496806,-99) , 
11, -2.36636, 0, 0, 0.509939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376202,-99) , 
9, 0.492138, 0, 0, 0.417203,-99) , 
9, -951.286, 1, 0, 0.452676,-99) , 
10, 1.28609, 1, 0, 0.493162,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.089323);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494624,-99) , 
2, -0.00433889, 1, 0, 0.536751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454046,-99) , 
11, -1.76505, 1, 0, 0.51693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476422,-99) , 
9, 1.26272, 0, 0, 0.490702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332295,-99) , 
9, -1.55971, 0, 0, 0.475583,-99) , 
9, -951.286, 1, 0, 0.490334,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0519296);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 7.98215, 0, 1, 0.590679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495667,-99) , 
0, 0.503803, 0, 0, 0.505059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332815,-99) , 
12, -1.89112, 0, 0, 0.499036,-99) , 
10, -0.713603, 1, 0, 0.508841,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.104069);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442761,-99) , 
0, 0.504758, 1, 0, 0.571261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429554,-99) , 
4, 3.97626, 1, 0, 0.553039,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448106,-99) , 
0, 0.495235, 0, 0, 0.505742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356943,-99) , 
7, 0.00635209, 1, 0, 0.497169,-99) , 
6, -0.0476284, 1, 0, 0.511337,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0452059);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592038,-99) , 
NN(
NN(
0, 
0, 
-1, -0.641193, 1, 1, 0.513093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4096,-99) , 
6, -0.813965, 0, 0, 0.507257,-99) , 
6, -0.904763, 1, 0, 0.513095,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0625827);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.58479, 0, 1, 0.608422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447444,-99) , 
2, -0.0585956, 0, 0, 0.498308,-99) , 
NN(
0, 
0, 
-1, -0.781333, 1, -1, 0.398554,-99) , 
12, -1.8314, 0, 0, 0.491184,-99) , 
11, -4.33387, 1, 0, 0.498844,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.072339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.9559, 1, 1, 0.554147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43826,-99) , 
6, 0.80938, 1, 0, 0.491622,-99) , 
8, 13.4347, 0, 0, 0.505335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560759,-99) , 
NN(
0, 
0, 
-1, 0.766387, 0, -1, 0.399788,-99) , 
12, -1.10639, 1, 0, 0.439493,-99) , 
8, 16.1703, 1, 0, 0.494952,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.081087);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.998607, 1, 1, 0.532185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452398,-99) , 
6, 0.931925, 1, 0, 0.493544,-99) , 
NN(
0, 
0, 
-1, 0.450245, 0, -1, 0.432381,-99) , 
3, 12.4195, 0, 0, 0.467094,-99) , 
6, 0.71426, 1, 0, 0.499419,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.076006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471543,-99) , 
13, 13.4559, 1, 0, 0.531927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462905,-99) , 
3, 10.0543, 1, 0, 0.479651,-99) , 
11, -3.38485, 1, 0, 0.49442,-99) , 
10, 2.14313, 0, 0, 0.501185,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0670682);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488114,-99) , 
0, 0.498092, 1, 0, 0.511848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328433,-99) , 
12, -3.0844, 0, 0, 0.506824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411923,-99) , 
12, 0.995992, 1, 0, 0.498586,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0559024);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498099, 0, 1, 0.551356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457277,-99) , 
12, -0.406337, 1, 0, 0.486401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.270907,-99) , 
10, -1.6399, 1, 0, 0.384172,-99) , 
12, -2.61101, 0, 0, 0.479931,-99) , 
11, -1.49778, 0, 0, 0.488973,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.110294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460439,-99) , 
8, 5.17768, 0, 0, 0.519654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408637,-99) , 
8, 18.9474, 1, 0, 0.511353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464709,-99) , 
6, 0.333372, 1, 0, 0.506802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368667,-99) , 
9, -951.288, 1, 0, 0.414329,-99) , 
11, -1.92499, 0, 0, 0.461808,-99) , 
10, 1.00062, 1, 0, 0.492478,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0892594);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.70185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333594,-99) , 
6, -0.636988, 0, 0, 0.51441,-99) , 
6, -0.809509, 1, 0, 0.5272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584529,-99) , 
NN(
0, 
0, 
-1, 14.7406, 1, -1, 0.462189,-99) , 
3, 15.197, 0, 0, 0.474368,-99) , 
9, -951.286, 0, 0, 0.50644,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.131337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495578,-99) , 
4, 3.11391, 1, 0, 0.545412,-99) , 
NN(
0, 
0, 
-1, 0.504665, 0, -1, 0.417341,-99) , 
0, 0.502855, 1, 0, 0.522133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422731,-99) , 
8, 12.3758, 1, 0, 0.457512,-99) , 
NN(
0, 
0, 
-1, 11.2503, 0, -1, 0.325283,-99) , 
9, -0.994153, 0, 0, 0.429081,-99) , 
9, -951.286, 1, 0, 0.462883,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0938466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.664921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437565,-99) , 
6, 0.705264, 0, 0, 0.501274,-99) , 
6, 0.523884, 1, 0, 0.509121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464242,-99) , 
4, 2.94098, 0, 0, 0.503227,-99) , 
NN(
0, 
0, 
-1, 7.83, 1, -1, 0.398051,-99) , 
10, 0.712175, 1, 0, 0.452165,-99) , 
3, 10.0768, 0, 0, 0.48754,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.117646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.746035, 0, 1, 0.577649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400534,-99) , 
11, -3.93539, 1, 0, 0.469147,-99) , 
10, -0.151989, 0, 0, 0.536871,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458812,-99) , 
1, 0.00191959, 0, 0, 0.472851,-99) , 
NN(
0, 
0, 
-1, -3.09352, 0, -1, 0.376664,-99) , 
6, 0.238101, 0, 0, 0.459683,-99) , 
6, -0.333325, 1, 0, 0.475899,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0949034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458308,-99) , 
10, 0.112337, 1, 0, 0.476738,-99) , 
11, -1.40611, 0, 0, 0.490185,-99) , 
NN(
0, 
0, 
-1, 15.2521, 0, -1, 0.418949,-99) , 
6, 0.904733, 1, 0, 0.47425,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0983906);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497461,-99) , 
10, 0.813696, 1, 0, 0.567796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487875,-99) , 
11, -2.35783, 0, 0, 0.499479,-99) , 
0, 0.499045, 0, 0, 0.527858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473866,-99) , 
12, 0.632703, 1, 0, 0.518465,-99) , 
NN(
0, 
0, 
-1, 0.309997, 0, -1, 0.399696,-99) , 
9, -951.286, 0, 0, 0.469294,-99) , 
11, -2.14628, 1, 0, 0.508677,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0808769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.69883, 0, 1, 0.54877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480962,-99) , 
10, -0.998251, 1, 0, 0.489002,-99) , 
0, 0.498092, 0, 0, 0.517938,-99) , 
NN(
0, 
0, 
-1, 0.195429, 0, -1, 0.424655,-99) , 
4, 6.53517, 1, 0, 0.508344,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0512446);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.92594, 1, 1, 0.515253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421337,-99) , 
8, 12.014, 0, 0, 0.488035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294183,-99) , 
10, -0.977156, 1, 0, 0.418189,-99) , 
12, -2.08327, 0, 0, 0.505754,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.110333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498087, 1, 1, 0.588823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495418,-99) , 
10, 0.14522, 1, 0, 0.515377,-99) , 
3, 15.3983, 0, 0, 0.535556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432843,-99) , 
0, 0.490886, 1, 0, 0.442445,-99) , 
0, 0.504757, 0, 0, 0.451449,-99) , 
8, 12.4413, 0, 0, 0.48829,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0946253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478306,-99) , 
0, 0.501494, 1, 0, 0.532639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405636,-99) , 
3, 5.56492, 0, 0, 0.463004,-99) , 
0, 0.493334, 0, 0, 0.520632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459371,-99) , 
3, 12.8173, 0, 0, 0.494661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388547,-99) , 
12, -1.65134, 0, 0, 0.472004,-99) , 
6, 0.80953, 1, 0, 0.500864,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0796609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.332955, 1, 1, 0.519207,-99) , 
NN(
0, 
0, 
-1, 0.237533, 0, -1, 0.445264,-99) , 
11, -3.72463, 0, 0, 0.503428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604387,-99) , 
NN(
0, 
0, 
-1, 19.2932, 1, -1, 0.381808,-99) , 
11, -3.03523, 1, 0, 0.425751,-99) , 
3, 15.2198, 1, 0, 0.492078,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0970478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0320233, 1, 1, 0.618583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499047,-99) , 
6, 0.714269, 1, 0, 0.564274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451362,-99) , 
0, 0.495779, 1, 0, 0.473875,-99) , 
NN(
0, 
0, 
-1, -1.57392, 1, -1, 0.339526,-99) , 
12, -2.45565, 0, 0, 0.464825,-99) , 
0, 0.5019, 0, 0, 0.483349,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0972161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.614514, 0, 1, 0.547542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461345,-99) , 
11, -2.42811, 0, 0, 0.484674,-99) , 
0, 0.499996, 0, 0, 0.504728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442733,-99) , 
11, -2.77314, 0, 0, 0.504017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359077,-99) , 
2, 0.0127089, 1, 0, 0.445017,-99) , 
6, -0.619051, 0, 0, 0.493016,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0588793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488563,-99) , 
2, -0.147837, 0, 0, 0.549824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446847,-99) , 
0, 0.499996, 1, 0, 0.482656,-99) , 
2, -0.0809292, 1, 0, 0.491782,-99) , 
8, 20.1136, 0, 0, 0.496203,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0784763);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489281,-99) , 
8, 4.66299, 1, 0, 0.499527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42728,-99) , 
2, -0.038041, 1, 0, 0.451475,-99) , 
0, 0.500677, 1, 0, 0.483293,-99) , 
NN(
0, 
0, 
-1, -0.851132, 0, -1, 0.368415,-99) , 
0, 0.491426, 0, 0, 0.474909,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0774412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.14964, 0, 1, 0.532119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399813,-99) , 
0, 0.495235, 0, 0, 0.473288,-99) , 
3, 11.1154, 0, 0, 0.504449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401141,-99) , 
12, 1.02529, 1, 0, 0.49635,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0825951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499995, 0, 1, 0.616278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496223,-99) , 
13, 3.25307, 0, 0, 0.564499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459369,-99) , 
9, -951.286, 1, 0, 0.475065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347167,-99) , 
3, 6.27025, 0, 0, 0.469964,-99) , 
8, 5.84594, 1, 0, 0.487561,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0870078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402825,-99) , 
12, -2.40979, 0, 0, 0.505177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339841,-99) , 
7, 0.00168265, 0, 0, 0.394997,-99) , 
8, 18.3544, 1, 0, 0.493382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611483,-99) , 
NN(
0, 
0, 
-1, 4.54575, 1, -1, 0.409145,-99) , 
12, -1.57189, 1, 0, 0.431399,-99) , 
3, 5.88641, 0, 0, 0.479312,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0761185);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.05741, 0, 1, 0.603103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477284,-99) , 
12, -0.257423, 1, 0, 0.501909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418988,-99) , 
4, 3.35159, 0, 0, 0.44986,-99) , 
12, -1.33598, 0, 0, 0.491648,-99) , 
10, -0.998422, 1, 0, 0.499123,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0628542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00235051, 1, 1, 0.518151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432408,-99) , 
10, 2.04182, 1, 0, 0.507118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417721,-99) , 
12, -2.46585, 0, 0, 0.467304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338251,-99) , 
11, -3.77207, 1, 0, 0.43945,-99) , 
12, -1.63336, 0, 0, 0.494398,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0717195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.708483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490169,-99) , 
6, 0.714185, 1, 0, 0.511137,-99) , 
12, -0.238, 0, 0, 0.52402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411268,-99) , 
6, 0.904602, 1, 0, 0.485605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364733,-99) , 
10, 0.424012, 0, 0, 0.47307,-99) , 
11, -2.44741, 1, 0, 0.502921,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.092293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.707812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440815,-99) , 
3, 7.64156, 1, 0, 0.580337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492717,-99) , 
6, 0.768753, 1, 0, 0.505191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44303,-99) , 
1, 0.00637674, 0, 0, 0.458042,-99) , 
6, 0.714293, 0, 0, 0.482322,-99) , 
1, -0.00487853, 1, 0, 0.487635,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0790387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.17776, 0, 1, 0.586996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477691,-99) , 
0, 0.501904, 1, 0, 0.562423,-99) , 
NN(
NN(
0, 
0, 
-1, 3.37993, 0, 1, 0.512363,-99) , 
NN(
0, 
0, 
-1, 1.66328, 1, -1, 0.445746,-99) , 
12, -0.364011, 1, 0, 0.483065,-99) , 
4, 4.14964, 0, 0, 0.499541,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0984043);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.79454, 0, 1, 0.560461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374004,-99) , 
6, -0.109206, 1, 0, 0.49585,-99) , 
8, 10.9088, 0, 0, 0.531929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63973,-99) , 
NN(
0, 
0, 
-1, 4.00124, 0, -1, 0.467494,-99) , 
11, -4.76472, 1, 0, 0.475459,-99) , 
12, -0.257977, 0, 0, 0.497527,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.114297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.6718, 1, 1, 0.580067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438987,-99) , 
6, 0.142879, 0, 0, 0.509357,-99) , 
1, -0.0014408, 1, 0, 0.526972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467569,-99) , 
6, 0.71433, 1, 0, 0.521029,-99) , 
NN(
0, 
0, 
-1, -2.02144, 1, -1, 0.422923,-99) , 
11, -1.63774, 0, 0, 0.472498,-99) , 
11, -2.21326, 1, 0, 0.508761,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0884589);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.637951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48681,-99) , 
6, 0.52373, 1, 0, 0.515491,-99) , 
12, -1.40785, 0, 0, 0.540287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476012,-99) , 
9, 0.143044, 0, 0, 0.517032,-99) , 
NN(
0, 
0, 
-1, -1.67608, 1, -1, 0.466701,-99) , 
9, -951.286, 0, 0, 0.496977,-99) , 
11, -3.42179, 1, 0, 0.50728,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0771081);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491434,-99) , 
0, 0.497271, 0, 0, 0.531581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473106,-99) , 
10, -0.985034, 1, 0, 0.487593,-99) , 
12, -0.540784, 0, 0, 0.508621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397826,-99) , 
0, 0.489522, 0, 0, 0.504837,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.100444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.6974, 0, 1, 0.583767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48052,-99) , 
0, 0.500946, 0, 0, 0.501915,-99) , 
11, -2.65266, 1, 0, 0.542407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459778,-99) , 
0, 0.493331, 0, 0, 0.521322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413479,-99) , 
0, 0.499041, 0, 0, 0.451131,-99) , 
3, 9.89245, 1, 0, 0.495583,-99) , 
8, 12.429, 0, 0, 0.515951,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0911121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499353,-99) , 
0, 0.49713, 0, 0, 0.57742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469078,-99) , 
11, -2.93546, 0, 0, 0.494497,-99) , 
8, 12.5802, 0, 0, 0.509241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46468,-99) , 
8, 15.6096, 1, 0, 0.494125,-99) , 
NN(
0, 
0, 
-1, 0.751464, 0, -1, 0.395366,-99) , 
3, 14.1326, 0, 0, 0.453091,-99) , 
8, 13.7143, 1, 0, 0.491453,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0934333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000899757, 0, 1, 0.643575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47839,-99) , 
8, 9.81976, 0, 0, 0.530668,-99) , 
0, 0.495234, 1, 0, 0.55552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482218,-99) , 
10, 0.795243, 1, 0, 0.496392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356831,-99) , 
12, -0.898864, 0, 0, 0.488894,-99) , 
10, 0.427968, 1, 0, 0.515655,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.105356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.7637, 1, 1, 0.583645,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397378,-99) , 
12, -1.6369, 0, 0, 0.511638,-99) , 
8, 14.6239, 0, 0, 0.55648,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411133,-99) , 
0, 0.492379, 0, 0, 0.507867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423166,-99) , 
3, 3.28512, 0, 0, 0.490931,-99) , 
3, 12.1284, 0, 0, 0.515188,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0592768);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 11.1183, 1, 1, 0.573758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608478,-99) , 
NN(
0, 
0, 
-1, -2.09048, 0, -1, 0.478904,-99) , 
10, -1.28403, 1, 0, 0.484202,-99) , 
0, 0.492382, 1, 0, 0.493204,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0867605);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491594,-99) , 
3, 10.0325, 0, 0, 0.528298,-99) , 
NN(
0, 
0, 
-1, -1.54088, 1, -1, 0.4323,-99) , 
12, -2.43088, 0, 0, 0.522169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589593,-99) , 
NN(
0, 
0, 
-1, 0.504309, 0, -1, 0.419486,-99) , 
0, 0.503532, 1, 0, 0.449033,-99) , 
0, 0.502852, 1, 0, 0.511176,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.085519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237995, 1, 1, 0.540426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466527,-99) , 
10, -0.794548, 1, 0, 0.493547,-99) , 
11, -3.297, 0, 0, 0.524929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435891,-99) , 
10, 2.14289, 1, 0, 0.516686,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.106858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.839768, 1, 1, 0.601327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499093,-99) , 
3, 3.05695, 0, 0, 0.560933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405751,-99) , 
4, 6.43446, 1, 0, 0.529935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409967,-99) , 
10, 1.29818, 0, 0, 0.457454,-99) , 
11, -2.91456, 1, 0, 0.486478,-99) , 
6, -0.333325, 1, 0, 0.50234,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0560666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.593124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453674,-99) , 
3, 4.88347, 0, 0, 0.490556,-99) , 
4, 4.72661, 0, 0, 0.503161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392193,-99) , 
4, 8.18935, 1, 0, 0.497342,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0745631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.823672, 1, 1, 0.536495,-99) , 
NN(
0, 
0, 
-1, 0.572965, 1, -1, 0.483103,-99) , 
8, 15.1098, 0, 0, 0.49472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490476,-99) , 
0, 0.50326, 1, 0, 0.547829,-99) , 
NN(
0, 
0, 
-1, -2.89187, 1, -1, 0.429453,-99) , 
6, -0.523693, 1, 0, 0.456216,-99) , 
0, 0.499997, 1, 0, 0.481435,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.083924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.584668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423583,-99) , 
0, 0.504123, 0, 0, 0.493278,-99) , 
0, 0.500948, 1, 0, 0.550247,-99) , 
NN(
NN(
0, 
0, 
-1, 14.2413, 1, 1, 0.570274,-99) , 
NN(
0, 
0, 
-1, -1.72316, 0, -1, 0.485864,-99) , 
10, -0.71322, 1, 0, 0.493657,-99) , 
6, 0.428527, 1, 0, 0.512892,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0880264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999951, 0, 1, 0.575301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.656335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453509,-99) , 
0, 0.489638, 1, 0, 0.495366,-99) , 
0, 0.492922, 0, 0, 0.543139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48485,-99) , 
8, 4.42978, 1, 0, 0.49698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.276744,-99) , 
10, -1.32416, 1, 0, 0.409568,-99) , 
12, -2.21927, 0, 0, 0.489812,-99) , 
0, 0.496187, 1, 0, 0.506548,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0629651);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49333, 0, 1, 0.573311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489597,-99) , 
1, 0.00493689, 0, 0, 0.495969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343304,-99) , 
7, 0.011521, 1, 0, 0.489169,-99) , 
0, 0.494282, 1, 0, 0.504594,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0720052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504347, 0, 1, 0.584889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406536,-99) , 
10, -0.0632446, 1, 0, 0.49567,-99) , 
10, 0.429213, 0, 0, 0.54627,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487169,-99) , 
4, 3.32255, 0, 0, 0.501992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403992,-99) , 
0, 0.501217, 1, 0, 0.4961,-99) , 
0, 0.501898, 0, 0, 0.506552,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0668984);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.000251674, 1, 1, 0.600136,-99) , 
NN(
NN(
0, 
0, 
-1, 12.8582, 0, 1, 0.524065,-99) , 
NN(
0, 
0, 
-1, -1.12359, 0, -1, 0.441534,-99) , 
3, 14.7024, 1, 0, 0.516584,-99) , 
8, 17.7599, 0, 0, 0.523703,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0560257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481727,-99) , 
1, 0.000677622, 0, 0, 0.516983,-99) , 
NN(
0, 
0, 
-1, 0.51018, 0, -1, 0.484,-99) , 
6, 0.42852, 1, 0, 0.494872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397362,-99) , 
0, 0.505709, 1, 0, 0.489452,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0773493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0627008, 1, 1, 0.568333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399979,-99) , 
10, -1.28984, 0, 0, 0.553193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626368,-99) , 
NN(
0, 
0, 
-1, 0.493337, 0, -1, 0.486797,-99) , 
3, 17.6993, 0, 0, 0.497341,-99) , 
6, 0.428557, 1, 0, 0.516375,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.103328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 12.8569, 0, 1, 0.560024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456235,-99) , 
6, 0.954637, 1, 0, 0.542384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48595,-99) , 
0, 0.491698, 1, 0, 0.500068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385297,-99) , 
0, 0.504755, 1, 0, 0.48457,-99) , 
6, 0.0477338, 0, 0, 0.525637,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0783571);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.363154, 0, 1, 0.596995,-99) , 
NN(
NN(
0, 
0, 
-1, 3.64684, 0, 1, 0.573934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431503,-99) , 
3, 9.09379, 0, 0, 0.496354,-99) , 
8, 4.45672, 1, 0, 0.50647,-99) , 
0, 0.502851, 0, 0, 0.519388,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0802052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.10792, 0, 1, 0.555742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392389,-99) , 
6, 0.251691, 0, 0, 0.502913,-99) , 
6, -0.047635, 1, 0, 0.516284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377618,-99) , 
3, 10.3366, 0, 0, 0.47601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310318,-99) , 
10, -1.17688, 1, 0, 0.413249,-99) , 
12, -2.1591, 0, 0, 0.507429,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.121094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474371,-99) , 
4, 5.70858, 1, 0, 0.570205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412595,-99) , 
10, 1.28376, 1, 0, 0.482017,-99) , 
0, 0.499998, 1, 0, 0.534621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417347,-99) , 
6, 0.918345, 1, 0, 0.488047,-99) , 
NN(
0, 
0, 
-1, 0.904729, 0, -1, 0.416639,-99) , 
8, 14.7891, 1, 0, 0.458137,-99) , 
6, 0.714279, 1, 0, 0.4943,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0928621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498854,-99) , 
10, 0.172512, 0, 0, 0.58185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458277,-99) , 
12, 0.188702, 0, 0, 0.500787,-99) , 
4, 2.4442, 0, 0, 0.527611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387309,-99) , 
2, -0.133826, 0, 0, 0.493054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401036,-99) , 
11, -3.67323, 1, 0, 0.42317,-99) , 
3, 11.2416, 0, 0, 0.471422,-99) , 
8, 8.42034, 1, 0, 0.485427,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.074124);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 3.58524, 0, 1, 0.535519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446896,-99) , 
12, 0.995992, 1, 0, 0.528083,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.106119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.725356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434383,-99) , 
12, 0.360198, 1, 0, 0.499664,-99) , 
3, 9.96571, 0, 0, 0.516745,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43088,-99) , 
2, -0.0156363, 0, 0, 0.499128,-99) , 
NN(
0, 
0, 
-1, 13.0229, 1, -1, 0.442053,-99) , 
3, 12.3947, 0, 0, 0.473147,-99) , 
6, 0.523794, 1, 0, 0.489296,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0970281);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.631452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368831,-99) , 
3, 8.94992, 0, 0, 0.579387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420445,-99) , 
12, -1.88544, 0, 0, 0.496381,-99) , 
4, 4.17042, 0, 0, 0.51365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473575,-99) , 
10, 1.38162, 1, 0, 0.496612,-99) , 
NN(
0, 
0, 
-1, 0.494556, 1, -1, 0.422987,-99) , 
10, 1.00089, 0, 0, 0.449478,-99) , 
0, 0.496187, 0, 0, 0.492227,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.093704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492654,-99) , 
11, -2.10864, 0, 0, 0.511569,-99) , 
NN(
0, 
0, 
-1, -2.16286, 1, -1, 0.442005,-99) , 
9, -951.286, 0, 0, 0.483602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559894,-99) , 
NN(
0, 
0, 
-1, 10.6808, 0, -1, 0.388765,-99) , 
0, 0.493331, 1, 0, 0.416145,-99) , 
2, 0.082476, 1, 0, 0.473397,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0582921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472894,-99) , 
0, 0.497142, 1, 0, 0.489572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369729,-99) , 
12, -2.3945, 0, 0, 0.485665,-99) , 
10, -1.5679, 1, 0, 0.488879,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0588656);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 13.2684, 0, 1, 0.531597,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.553075,-99) , 
NN(
0, 
0, 
-1, 3.36716, 1, -1, 0.475394,-99) , 
4, 4.66139, 0, 0, 0.486583,-99) , 
6, 0.904755, 0, 0, 0.497359,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0871315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493331, 1, 1, 0.55795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469912,-99) , 
8, 3.79996, 0, 0, 0.533554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47563,-99) , 
7, 0.000836855, 1, 0, 0.496818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365685,-99) , 
7, 0.00439423, 1, 0, 0.486062,-99) , 
3, 11.0511, 1, 0, 0.507565,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0755754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.361645, 1, 1, 0.512138,-99) , 
NN(
0, 
0, 
-1, -1.24566, 1, -1, 0.382569,-99) , 
10, -0.0778107, 0, 0, 0.498165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452535,-99) , 
0, 0.495238, 1, 0, 0.4821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321115,-99) , 
10, -0.317325, 1, 0, 0.44234,-99) , 
12, -1.4896, 0, 0, 0.48574,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0815826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488367,-99) , 
8, 11.5615, 0, 0, 0.507179,-99) , 
1, -0.00660347, 1, 0, 0.514559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448415,-99) , 
0, 0.498079, 1, 0, 0.493072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411874,-99) , 
12, -0.0701248, 1, 0, 0.472169,-99) , 
6, 0.809506, 1, 0, 0.497864,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0871925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49304,-99) , 
4, 2.89956, 0, 0, 0.517022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401442,-99) , 
0, 0.499045, 0, 0, 0.44664,-99) , 
2, -0.0403994, 0, 0, 0.499047,-99) , 
NN(
0, 
0, 
-1, -2.50375, 0, -1, 0.436649,-99) , 
6, 0.904744, 1, 0, 0.483586,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0946196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.401427, 1, 1, 0.605633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468415,-99) , 
3, 4.1497, 0, 0, 0.51684,-99) , 
9, -951.286, 0, 0, 0.554713,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0561303, 1, 1, 0.53985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434205,-99) , 
3, 12.2277, 0, 0, 0.470959,-99) , 
9, -951.286, 1, 0, 0.493081,-99) , 
6, 0.0476123, 1, 0, 0.508959,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0954211);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448403,-99) , 
3, 4.19516, 0, 0, 0.541898,-99) , 
NN(
0, 
0, 
-1, -1.0923, 0, -1, 0.466517,-99) , 
10, 0.144138, 1, 0, 0.489392,-99) , 
6, -0.90454, 1, 0, 0.499991,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0991147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.95764, 1, 1, 0.572698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455705,-99) , 
0, 0.504757, 1, 0, 0.557302,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479475,-99) , 
1, -0.00102207, 1, 0, 0.502986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.248805,-99) , 
7, 0.00715696, 1, 0, 0.49297,-99) , 
6, 0.142856, 1, 0, 0.511157,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0375501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.336, 0, 1, 0.589871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453248,-99) , 
0, 0.501901, 1, 0, 0.491116,-99) , 
11, -4.24776, 1, 0, 0.49659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382446,-99) , 
12, -2.81322, 0, 0, 0.492174,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.105319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.555881,-99) , 
NN(
0, 
0, 
-1, -1.38228, 1, -1, 0.433356,-99) , 
12, -2.1324, 0, 0, 0.544612,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479543,-99) , 
6, 0.591734, 1, 0, 0.505308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335278,-99) , 
3, 4.65624, 1, 0, 0.439981,-99) , 
8, 8.47703, 0, 0, 0.486419,-99) , 
0, 0.497139, 0, 0, 0.520636,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0449423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.0454, 1, 1, 0.511065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362363,-99) , 
8, 5.964, 1, 0, 0.465988,-99) , 
6, -0.0476284, 0, 0, 0.498972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390087,-99) , 
12, -2.6334, 0, 0, 0.49361,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0842914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00162178, 0, 1, 0.612107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386024,-99) , 
4, 4.40451, 1, 0, 0.524834,-99) , 
3, 9.32611, 0, 0, 0.541098,-99) , 
NN(
NN(
0, 
0, 
-1, -2.66309, 0, 1, 0.586681,-99) , 
NN(
0, 
0, 
-1, -1.12619, 0, -1, 0.475825,-99) , 
10, -0.707903, 1, 0, 0.485976,-99) , 
8, 11.0953, 1, 0, 0.506923,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.089927);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499046, 1, 1, 0.582668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407634,-99) , 
10, 0.91969, 0, 0, 0.519294,-99) , 
10, 0.429872, 1, 0, 0.544923,-99) , 
NN(
NN(
0, 
0, 
-1, 1.6982, 0, 1, 0.511675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367907,-99) , 
9, -1.5547, 0, 0, 0.497479,-99) , 
9, -951.286, 1, 0, 0.515653,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0816735);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471811,-99) , 
8, 5.62928, 1, 0, 0.477992,-99) , 
NN(
0, 
0, 
-1, -0.817685, 1, -1, 0.426619,-99) , 
3, 4.20219, 0, 0, 0.468654,-99) , 
8, 19.0811, 0, 0, 0.473131,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0955969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491724,-99) , 
11, -3.05616, 0, 0, 0.521001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413911,-99) , 
9, -951.287, 1, 0, 0.46709,-99) , 
2, -0.0585956, 0, 0, 0.510212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346408,-99) , 
10, -1.1543, 1, 0, 0.467383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298544,-99) , 
3, 8.43775, 0, 0, 0.410343,-99) , 
12, -2.21147, 0, 0, 0.501174,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0893633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493332, 1, 1, 0.529912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394831,-99) , 
8, 12.5126, 1, 0, 0.449051,-99) , 
10, 1.34793, 1, 0, 0.517781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40745,-99) , 
12, 0.594941, 1, 0, 0.500744,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.060559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.37842, 1, 1, 0.59411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439935,-99) , 
12, -2.63471, 0, 0, 0.532631,-99) , 
NN(
0, 
0, 
-1, -1.95132, 0, -1, 0.476088,-99) , 
11, -4.07399, 1, 0, 0.48241,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0648185);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587947,-99) , 
NN(
0, 
0, 
-1, 0.738907, 0, -1, 0.472618,-99) , 
4, 0.432047, 1, 0, 0.477977,-99) , 
4, 6.87778, 0, 0, 0.484348,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0777564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409831,-99) , 
4, 5.5991, 1, 0, 0.518568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420882,-99) , 
4, 6.8905, 1, 0, 0.510295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399457,-99) , 
12, 1.02529, 1, 0, 0.501346,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0363767);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360167,-99) , 
12, -2.20206, 0, 0, 0.496561,-99) , 
10, 2.14748, 0, 0, 0.504917,-99) , 
11, -4.46508, 1, 0, 0.510756,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0643714);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45702,-99) , 
0, 0.498116, 1, 0, 0.555283,-99) , 
NN(
0, 
0, 
-1, 15.9118, 1, -1, 0.479809,-99) , 
3, 16.2494, 0, 0, 0.486221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.298651,-99) , 
12, -3.05602, 0, 0, 0.480898,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0892164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462059,-99) , 
0, 0.499996, 1, 0, 0.498137,-99) , 
6, -0.112412, 1, 0, 0.505783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431642,-99) , 
10, 0.145264, 0, 0, 0.508274,-99) , 
NN(
0, 
0, 
-1, 4.16114, 0, -1, 0.373328,-99) , 
6, -0.814984, 1, 0, 0.449161,-99) , 
8, 5.83466, 0, 0, 0.493703,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0834705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.04903, 1, 1, 0.614075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480037,-99) , 
12, -0.158551, 0, 0, 0.526782,-99) , 
6, -0.782317, 0, 0, 0.555461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477692,-99) , 
7, 0.00440539, 0, 0, 0.488059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318618,-99) , 
7, 0.00925156, 1, 0, 0.482344,-99) , 
6, -0.428561, 1, 0, 0.49673,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0698633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501337, 0, 1, 0.528898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359386,-99) , 
2, 0.0545184, 1, 0, 0.468085,-99) , 
0, 0.503306, 1, 0, 0.519894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379228,-99) , 
0, 0.489521, 0, 0, 0.515052,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0425384);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497365,-99) , 
3, 14.0596, 0, 0, 0.508773,-99) , 
NN(
0, 
0, 
-1, 0.497006, 0, -1, 0.456444,-99) , 
2, 0.0810016, 1, 0, 0.500741,-99) , 
0, 0.490474, 1, 0, 0.504998,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0608338);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.674541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471304,-99) , 
8, 13.7643, 1, 0, 0.498985,-99) , 
NN(
0, 
0, 
-1, 0.428564, 1, -1, 0.434211,-99) , 
11, -1.50224, 1, 0, 0.488926,-99) , 
10, -1.28472, 1, 0, 0.496365,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0610979);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00410884, 0, 1, 0.562482,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488725,-99) , 
11, -3.38842, 1, 0, 0.505153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392544,-99) , 
12, -2.7213, 0, 0, 0.499927,-99) , 
6, -0.809526, 1, 0, 0.507064,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0973268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475321,-99) , 
2, 0.066066, 1, 0, 0.531626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398983,-99) , 
1, -0.00308566, 0, 0, 0.521125,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47762,-99) , 
1, -0.0039028, 1, 0, 0.498751,-99) , 
NN(
0, 
0, 
-1, 9.64989, 0, -1, 0.406957,-99) , 
3, 8.35392, 1, 0, 0.471046,-99) , 
6, 0.5238, 0, 0, 0.501444,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0796628);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408447,-99) , 
11, -4.97704, 0, 0, 0.512784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380906,-99) , 
3, 18.2728, 1, 0, 0.506514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446858,-99) , 
4, 1.91488, 0, 0, 0.48377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378464,-99) , 
4, 3.25449, 1, 0, 0.448968,-99) , 
10, 1.28604, 1, 0, 0.490269,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0476794);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.000124867, 1, 1, 0.608365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493133,-99) , 
11, -4.4631, 1, 0, 0.499296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369951,-99) , 
13, 17.5964, 1, 0, 0.49175,-99) , 
3, 17.2641, 0, 0, 0.49782,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0507704);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409746,-99) , 
8, 17.3667, 1, 0, 0.505989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317102,-99) , 
10, -1.3992, 1, 0, 0.437882,-99) , 
12, -2.31243, 0, 0, 0.501058,-99) , 
8, 19.0051, 0, 0, 0.505475,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.115832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.42811, 0, 1, 0.570489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417935,-99) , 
0, 0.492695, 0, 0, 0.473365,-99) , 
9, -951.286, 0, 0, 0.528446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461637,-99) , 
3, 9.51956, 0, 0, 0.489437,-99) , 
NN(
0, 
0, 
-1, 12.7138, 0, -1, 0.444362,-99) , 
6, 0.619049, 1, 0, 0.462041,-99) , 
0, 0.494282, 1, 0, 0.47397,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0704906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.11385, 1, 1, 0.542255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484474,-99) , 
4, 6.53517, 0, 0, 0.492733,-99) , 
11, -2.60705, 0, 0, 0.515089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329832,-99) , 
0, 0.489523, 0, 0, 0.509104,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.115705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.422957, 1, 1, 0.566857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470437,-99) , 
3, 12.8261, 0, 0, 0.515695,-99) , 
3, 11.0606, 1, 0, 0.538937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453218,-99) , 
11, -1.74276, 0, 0, 0.519334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398523,-99) , 
10, 0.0588623, 1, 0, 0.444822,-99) , 
10, 1.00468, 0, 0, 0.473807,-99) , 
0, 0.497139, 0, 0, 0.511264,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0931939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45153,-99) , 
6, -0.237921, 0, 0, 0.510249,-99) , 
9, 1.57339, 0, 0, 0.52224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462423,-99) , 
13, 9.29756, 1, 0, 0.527032,-99) , 
NN(
0, 
0, 
-1, 0.902493, 0, -1, 0.446677,-99) , 
11, -3.43504, 1, 0, 0.464576,-99) , 
9, -951.286, 0, 0, 0.499131,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0785765);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.143643, 0, 1, 0.595167,-99) , 
NN(
NN(
0, 
0, 
-1, 10.1052, 1, 1, 0.547077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465619,-99) , 
9, -951.286, 1, 0, 0.484324,-99) , 
4, 3.35966, 0, 0, 0.501932,-99) , 
3, 15.1931, 0, 0, 0.512879,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.124339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.678146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389323,-99) , 
10, 0.198976, 0, 0, 0.530344,-99) , 
11, -3.1706, 1, 0, 0.539312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401426,-99) , 
0, 0.494284, 0, 0, 0.511361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378108,-99) , 
11, -3.10642, 0, 0, 0.412122,-99) , 
10, -0.156444, 1, 0, 0.472561,-99) , 
12, -1.02535, 0, 0, 0.515421,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0407338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.933, 1, 1, 0.507524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416307,-99) , 
10, -0.694234, 0, 0, 0.503551,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444462,-99) , 
11, -4.83816, 0, 0, 0.506776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328971,-99) , 
10, -0.976374, 1, 0, 0.441234,-99) , 
12, -2.05012, 0, 0, 0.497319,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.10062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0474044, 0, 1, 0.618864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3888,-99) , 
10, -0.55391, 1, 0, 0.49901,-99) , 
12, -1.76822, 0, 0, 0.541339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356689,-99) , 
10, -0.650762, 0, 0, 0.514852,-99) , 
NN(
0, 
0, 
-1, -1.13082, 0, -1, 0.462734,-99) , 
10, -0.00120053, 1, 0, 0.469524,-99) , 
11, -3.57804, 1, 0, 0.48416,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0605629);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499914,-99) , 
3, 10.7228, 0, 0, 0.544093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434029,-99) , 
12, -0.0983578, 1, 0, 0.492433,-99) , 
10, 1.5709, 0, 0, 0.503422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393708,-99) , 
1, 0.00123383, 1, 0, 0.481544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34098,-99) , 
3, 15.9666, 0, 0, 0.435965,-99) , 
3, 15.1816, 1, 0, 0.494451,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0742022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462184,-99) , 
4, 2.06978, 1, 0, 0.527586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452924,-99) , 
8, 12.8719, 0, 0, 0.477447,-99) , 
8, 4.46462, 1, 0, 0.485415,-99) , 
NN(
0, 
0, 
-1, -1.50463, 1, -1, 0.393126,-99) , 
12, -2.43088, 0, 0, 0.479724,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.102408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.300884, 1, 1, 0.561238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345819,-99) , 
6, -0.659512, 1, 0, 0.475223,-99) , 
3, 5.83816, 0, 0, 0.531653,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483875,-99) , 
10, 0.153288, 0, 0, 0.575322,-99) , 
NN(
0, 
0, 
-1, -1.32968, 0, -1, 0.454676,-99) , 
9, 1.28715, 0, 0, 0.467713,-99) , 
9, -951.286, 1, 0, 0.491082,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0932098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503986, 0, 1, 0.534211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440354,-99) , 
0, 0.505709, 1, 0, 0.527167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450125,-99) , 
2, -0.0486648, 0, 0, 0.509295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390532,-99) , 
3, 15.7852, 0, 0, 0.412735,-99) , 
9, -951.286, 0, 0, 0.477497,-99) , 
3, 11.0868, 1, 0, 0.499969,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0804626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492911,-99) , 
0, 0.497142, 0, 0, 0.525003,-99) , 
NN(
0, 
0, 
-1, 15.1577, 1, -1, 0.451164,-99) , 
6, 0.904733, 1, 0, 0.506471,-99) , 
NN(
0, 
0, 
-1, -1.53993, 1, -1, 0.384399,-99) , 
12, -2.51668, 0, 0, 0.499109,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0742796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.703099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480719,-99) , 
1, -0.00182141, 1, 0, 0.494697,-99) , 
6, -0.294812, 1, 0, 0.501989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516318,-99) , 
NN(
0, 
0, 
-1, 2.0507, 1, -1, 0.420185,-99) , 
11, -2.38801, 0, 0, 0.460531,-99) , 
3, 4.88992, 0, 0, 0.493075,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0657372);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.641013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48893,-99) , 
8, 17.3239, 0, 0, 0.496674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408302,-99) , 
3, 18.325, 1, 0, 0.491795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411162,-99) , 
10, 0.16582, 0, 0, 0.475003,-99) , 
NN(
0, 
0, 
-1, 14.0008, 0, -1, 0.408703,-99) , 
8, 12.3005, 1, 0, 0.444797,-99) , 
0, 0.495235, 0, 0, 0.480092,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0519265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.545244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405523,-99) , 
1, -0.00304658, 0, 0, 0.493174,-99) , 
6, 0.523686, 1, 0, 0.51147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359593,-99) , 
7, 0.0127885, 1, 0, 0.506005,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0593473);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.0083, 0, 1, 0.593106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460172,-99) , 
12, 0.572965, 1, 0, 0.506479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404224,-99) , 
0, 0.503034, 1, 0, 0.502433,-99) , 
0, 0.503805, 0, 0, 0.512258,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.100558);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450851,-99) , 
10, 0.469714, 1, 0, 0.480383,-99) , 
10, 1.85725, 0, 0, 0.492504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438545,-99) , 
7, 0.00428994, 0, 0, 0.476144,-99) , 
NN(
0, 
0, 
-1, 4.48667, 1, -1, 0.382967,-99) , 
0, 0.497141, 1, 0, 0.416518,-99) , 
3, 4.80693, 0, 0, 0.477276,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.07816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.919913, 1, 1, 0.512692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446645,-99) , 
10, 0.70074, 0, 0, 0.46164,-99) , 
11, -2.92998, 0, 0, 0.487994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420982,-99) , 
12, 0.961669, 1, 0, 0.481433,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0905343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.726676, 1, 1, 0.564795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37477,-99) , 
11, -4.34457, 1, 0, 0.458803,-99) , 
11, -3.96387, 0, 0, 0.547738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447655,-99) , 
6, 0.857401, 1, 0, 0.472588,-99) , 
0, 0.504755, 0, 0, 0.478978,-99) , 
8, 11.0115, 1, 0, 0.503773,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.108257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466759,-99) , 
0, 0.49619, 0, 0, 0.50323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286914,-99) , 
1, -0.000504226, 0, 0, 0.411599,-99) , 
13, 16.6881, 1, 0, 0.492325,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463465,-99) , 
12, 0.775164, 1, 0, 0.492162,-99) , 
NN(
0, 
0, 
-1, 0.117568, 0, -1, 0.416337,-99) , 
10, 1.78358, 0, 0, 0.438368,-99) , 
11, -2.69413, 1, 0, 0.464811,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.114458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496761, 1, 1, 0.553934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443146,-99) , 
6, 0.237977, 1, 0, 0.48731,-99) , 
0, 0.494599, 0, 0, 0.524667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426039,-99) , 
3, 4.87777, 0, 0, 0.490929,-99) , 
NN(
0, 
0, 
-1, 11.0357, 1, -1, 0.423015,-99) , 
0, 0.501266, 0, 0, 0.455197,-99) , 
0, 0.498091, 1, 0, 0.487193,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0824216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466822,-99) , 
11, -3.67025, 0, 0, 0.515342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398471,-99) , 
8, 3.29089, 0, 0, 0.503937,-99) , 
NN(
0, 
0, 
-1, -2.70037, 0, -1, 0.423796,-99) , 
8, 17.3628, 1, 0, 0.495317,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0913669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.64381, 0, 1, 0.586222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405956,-99) , 
9, -0.982206, 0, 0, 0.483358,-99) , 
6, -0.333299, 1, 0, 0.49873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450252,-99) , 
8, 11.8984, 1, 0, 0.479864,-99) , 
NN(
0, 
0, 
-1, -2.65169, 1, -1, 0.414443,-99) , 
3, 8.91468, 0, 0, 0.451433,-99) , 
9, -951.286, 0, 0, 0.479824,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0740168);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45724,-99) , 
6, -0.0476164, 1, 0, 0.468745,-99) , 
4, 7.05193, 0, 0, 0.474658,-99) , 
10, -1.28436, 1, 0, 0.480797,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0723832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.06102, 1, 1, 0.534985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475048,-99) , 
3, 14.1471, 0, 0, 0.489627,-99) , 
10, 0.429371, 0, 0, 0.515747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394486,-99) , 
6, 0.23851, 1, 0, 0.438184,-99) , 
0, 0.491426, 0, 0, 0.509971,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.120786);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468485,-99) , 
0, 0.494284, 0, 0, 0.55583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432843,-99) , 
8, 7.93327, 0, 0, 0.469269,-99) , 
2, 0.0173005, 1, 0, 0.524348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44699,-99) , 
12, -1.2225, 0, 0, 0.485465,-99) , 
NN(
0, 
0, 
-1, 15.2698, 0, -1, 0.42963,-99) , 
11, -2.55368, 1, 0, 0.46043,-99) , 
6, 0.5238, 1, 0, 0.483689,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.120208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.652781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435473,-99) , 
6, 0.428421, 1, 0, 0.474477,-99) , 
12, 0.387808, 1, 0, 0.52143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441059,-99) , 
13, 15.828, 1, 0, 0.509907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420859,-99) , 
11, -3.20278, 1, 0, 0.435582,-99) , 
10, 0.524472, 1, 0, 0.476661,-99) , 
11, -1.9119, 0, 0, 0.487334,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0953755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493746, 1, 1, 0.659813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470914,-99) , 
7, 0.00223861, 0, 0, 0.503256,-99) , 
0, 0.496195, 1, 0, 0.553662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555883,-99) , 
NN(
0, 
0, 
-1, 13.2364, 1, -1, 0.462757,-99) , 
8, 14.4342, 0, 0, 0.46817,-99) , 
8, 15.063, 0, 0, 0.485402,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0931861);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467383,-99) , 
6, -0.809407, 0, 0, 0.533869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445448,-99) , 
6, 0.619065, 1, 0, 0.476558,-99) , 
0, 0.496096, 0, 0, 0.512698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519567,-99) , 
NN(
0, 
0, 
-1, 0.504713, 0, -1, 0.384629,-99) , 
3, 5.86967, 1, 0, 0.431424,-99) , 
0, 0.503804, 1, 0, 0.502242,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0726212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493459,-99) , 
6, 0.954631, 1, 0, 0.5155,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468173,-99) , 
4, 4.56338, 0, 0, 0.473363,-99) , 
NN(
0, 
0, 
-1, -0.000141467, 1, -1, 0.412539,-99) , 
4, 5.60783, 1, 0, 0.465778,-99) , 
6, 0.904741, 0, 0, 0.476906,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0687839);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.61507, 0, 1, 0.594754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433035,-99) , 
12, -1.39375, 0, 0, 0.499804,-99) , 
NN(
0, 
0, 
-1, 0.527443, 0, -1, 0.434265,-99) , 
0, 0.493335, 0, 0, 0.489445,-99) , 
11, -4.11922, 1, 0, 0.499614,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.060019);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.436726, 1, 1, 0.516421,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462578,-99) , 
11, -2.99767, 1, 0, 0.525677,-99) , 
NN(
0, 
0, 
-1, 0.809242, 1, -1, 0.444652,-99) , 
2, -0.0648558, 1, 0, 0.467402,-99) , 
4, 3.37623, 1, 0, 0.501482,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.0725776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460603,-99) , 
12, 0.291412, 1, 0, 0.510011,-99) , 
3, 15.9543, 0, 0, 0.517104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423461,-99) , 
3, 18.3145, 1, 0, 0.512522,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0668939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500949, 0, 1, 0.523948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473377,-99) , 
0, 0.491431, 1, 0, 0.483141,-99) , 
7, 0.00182787, 0, 0, 0.5011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346148,-99) , 
7, 0.0127894, 1, 0, 0.495801,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.0586885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46436,-99) , 
12, -1.48919, 0, 0, 0.554964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490909,-99) , 
10, -0.89528, 1, 0, 0.499045,-99) , 
2, 0.067462, 0, 0, 0.508252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311209,-99) , 
12, -3.11231, 0, 0, 0.503032,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.105866);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499003, 1, 1, 0.620928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446018,-99) , 
4, 1.08556, 0, 0, 0.525059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434071,-99) , 
6, 0.854863, 0, 0, 0.467802,-99) , 
6, 0.238125, 1, 0, 0.485406,-99) , 
8, 18.4932, 0, 0, 0.493805,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0816787);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.60398, 0, 1, 0.563489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476817,-99) , 
6, 0.841289, 1, 0, 0.501146,-99) , 
10, -0.141668, 1, 0, 0.514684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464697,-99) , 
10, -0.471682, 1, 0, 0.477459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34362,-99) , 
10, -1.28635, 0, 0, 0.465314,-99) , 
6, 0.523794, 0, 0, 0.495329,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0775394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.558446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427335,-99) , 
4, 4.07543, 1, 0, 0.503006,-99) , 
3, 10.6975, 0, 0, 0.527754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446104,-99) , 
10, 0.739078, 0, 0, 0.471238,-99) , 
6, 0.904755, 1, 0, 0.513606,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0869092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483693,-99) , 
0, 0.489722, 1, 0, 0.545952,-99) , 
0, 0.491018, 0, 0, 0.609516,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469227,-99) , 
6, 0.809452, 0, 0, 0.492645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420851,-99) , 
10, 1.85748, 1, 0, 0.482246,-99) , 
0, 0.492378, 1, 0, 0.495041,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0957862);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48168,-99) , 
11, -3.00352, 1, 0, 0.511058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327159,-99) , 
10, -1.45332, 1, 0, 0.427879,-99) , 
12, -2.24151, 0, 0, 0.502446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39029,-99) , 
11, -1.30553, 0, 0, 0.437331,-99) , 
12, 0.294554, 1, 0, 0.488171,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0816309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494961, 0, 1, 0.541616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464351,-99) , 
4, 3.34324, 0, 0, 0.48524,-99) , 
0, 0.496186, 1, 0, 0.502339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413233,-99) , 
6, -0.904473, 0, 0, 0.4938,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.105294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.787828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491777,-99) , 
9, -951.286, 0, 0, 0.643218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467222,-99) , 
3, 6.64567, 1, 0, 0.534112,-99) , 
3, 9.1032, 0, 0, 0.551581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45807,-99) , 
9, -951.286, 0, 0, 0.511089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41331,-99) , 
12, 0.445005, 1, 0, 0.499048,-99) , 
6, 0.523681, 1, 0, 0.5179,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0637736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451198,-99) , 
3, 3.80252, 0, 0, 0.500791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281102,-99) , 
10, -1.49894, 1, 0, 0.392482,-99) , 
12, -2.39655, 0, 0, 0.493572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559502,-99) , 
NN(
0, 
0, 
-1, 0.82485, 0, -1, 0.364752,-99) , 
10, 0.145477, 1, 0, 0.417467,-99) , 
1, 0.00388765, 1, 0, 0.485361,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0783633);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.38679, 1, 1, 0.615891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476327,-99) , 
9, -951.286, 1, 0, 0.497358,-99) , 
0, 0.504757, 0, 0, 0.505512,-99) , 
NN(
0, 
0, 
-1, -3.08543, 0, -1, 0.3632,-99) , 
12, -2.43277, 0, 0, 0.496595,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.103313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.203019, 1, 1, 0.583441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457815,-99) , 
9, -951.286, 0, 0, 0.491006,-99) , 
6, -0.591721, 0, 0, 0.529423,-99) , 
NN(
NN(
0, 
0, 
-1, 0.395715, 1, 1, 0.561628,-99) , 
NN(
0, 
0, 
-1, 3.58777, 1, -1, 0.454338,-99) , 
8, 17.8022, 0, 0, 0.467932,-99) , 
6, 0.428603, 1, 0, 0.487731,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.090286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.707033, 1, 1, 0.594394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474044,-99) , 
10, -0.0454542, 1, 0, 0.506999,-99) , 
11, -2.74779, 0, 0, 0.518462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467053,-99) , 
11, -1.78914, 0, 0, 0.503677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412286,-99) , 
6, 0.904733, 1, 0, 0.483171,-99) , 
11, -2.54087, 1, 0, 0.50254,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.13034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.117, 1, 1, 0.614963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41014,-99) , 
12, -1.77689, 0, 0, 0.53944,-99) , 
10, -0.713833, 1, 0, 0.546162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444538,-99) , 
2, 0.0290922, 0, 0, 0.477244,-99) , 
NN(
0, 
0, 
-1, 1.13597e-05, 1, -1, 0.351682,-99) , 
8, 4.84367, 1, 0, 0.442123,-99) , 
8, 7.11941, 0, 0, 0.519164,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0604632);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.76781, 0, 1, 0.514946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427538,-99) , 
6, 0.909298, 0, 0, 0.486724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447824,-99) , 
0, 0.497138, 0, 0, 0.470321,-99) , 
6, 0.809506, 1, 0, 0.496156,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.102834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.823684, 1, 1, 0.528749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378819,-99) , 
10, 0.143506, 0, 0, 0.518579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423085,-99) , 
2, 0.0652953, 1, 0, 0.517973,-99) , 
NN(
0, 
0, 
-1, -1.32133, 0, -1, 0.420288,-99) , 
10, -0.0371249, 1, 0, 0.466237,-99) , 
11, -2.69413, 0, 0, 0.491709,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0790062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452701,-99) , 
3, 13.958, 1, 0, 0.488035,-99) , 
6, 0.564604, 1, 0, 0.496538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563441,-99) , 
NN(
0, 
0, 
-1, -0.135167, 0, -1, 0.437206,-99) , 
11, -4.20514, 1, 0, 0.447539,-99) , 
6, 0.42855, 0, 0, 0.479556,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.106319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486698,-99) , 
10, -0.14586, 0, 0, 0.580908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451635,-99) , 
4, 6.87549, 1, 0, 0.516161,-99) , 
NN(
0, 
0, 
-1, -4.8998, 0, -1, 0.451598,-99) , 
4, 3.58206, 0, 0, 0.469641,-99) , 
6, -0.809301, 1, 0, 0.48236,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0285508);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37887,-99) , 
12, -2.67075, 0, 0, 0.495756,-99) , 
NN(
0, 
0, 
-1, 0.498098, 0, -1, 0.409649,-99) , 
8, 17.3814, 1, 0, 0.490126,-99) , 
8, 19.9691, 0, 0, 0.493657,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0798495);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 12.6119, 0, 1, 0.527198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52621,-99) , 
NN(
0, 
0, 
-1, 13.8698, 1, -1, 0.443997,-99) , 
3, 16.3453, 0, 0, 0.458074,-99) , 
6, 0.714269, 1, 0, 0.490331,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.062086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490056,-99) , 
1, 0.00455598, 0, 0, 0.494896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381835,-99) , 
4, 8.18935, 1, 0, 0.487796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365914,-99) , 
6, -0.904741, 0, 0, 0.476232,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.123067);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400772,-99) , 
12, -2.50475, 0, 0, 0.534109,-99) , 
NN(
0, 
0, 
-1, -0.000107541, 0, -1, 0.434739,-99) , 
2, -0.0445486, 0, 0, 0.509457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402564,-99) , 
11, -1.77998, 0, 0, 0.485701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388462,-99) , 
11, -2.08298, 1, 0, 0.424733,-99) , 
0, 0.499043, 0, 0, 0.450513,-99) , 
10, 1.28489, 1, 0, 0.491603,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0370664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649074,-99) , 
NN(
0, 
0, 
-1, 17.5841, 1, -1, 0.491389,-99) , 
11, -4.28356, 1, 0, 0.496316,-99) , 
NN(
0, 
0, 
-1, 10.3332, 0, -1, 0.394487,-99) , 
12, -2.51668, 0, 0, 0.490236,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0521434);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491163,-99) , 
2, -0.0298414, 1, 0, 0.5208,-99) , 
NN(
0, 
0, 
-1, 14.9685, 1, -1, 0.481207,-99) , 
10, 1.28525, 0, 0, 0.492642,-99) , 
8, 20.3716, 0, 0, 0.496599,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0560194);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650607,-99) , 
NN(
NN(
0, 
0, 
-1, 17.9723, 1, 1, 0.576102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458982,-99) , 
11, -2.16417, 1, 0, 0.492882,-99) , 
3, 16.2494, 0, 0, 0.500123,-99) , 
11, -4.84147, 1, 0, 0.504183,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0873346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.609376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460385,-99) , 
9, 0.446886, 0, 0, 0.509745,-99) , 
9, -951.286, 1, 0, 0.548262,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486425,-99) , 
8, 12.429, 0, 0, 0.50821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421266,-99) , 
6, 0.334091, 1, 0, 0.445235,-99) , 
4, 3.51043, 1, 0, 0.493562,-99) , 
2, -0.0648558, 1, 0, 0.503294,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.107651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49583,-99) , 
10, 1.5719, 1, 0, 0.562584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438708,-99) , 
0, 0.497137, 0, 0, 0.489529,-99) , 
2, 0.0537731, 1, 0, 0.545925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442926,-99) , 
8, 18.2024, 1, 0, 0.517069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407146,-99) , 
2, 0.0256065, 0, 0, 0.445895,-99) , 
12, -1.31908, 0, 0, 0.497468,-99) , 
8, 11.1348, 1, 0, 0.515677,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.115766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.00364, 1, 1, 0.651154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459982,-99) , 
3, 3.00611, 0, 0, 0.503149,-99) , 
3, 4.10133, 0, 0, 0.55242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449923,-99) , 
6, 0.90018, 1, 0, 0.510517,-99) , 
NN(
0, 
0, 
-1, -1.84558, 1, -1, 0.446765,-99) , 
0, 0.498094, 1, 0, 0.477561,-99) , 
6, -0.0475451, 1, 0, 0.495423,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.080795);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403679,-99) , 
3, 13.6592, 1, 0, 0.517876,-99) , 
NN(
0, 
0, 
-1, 0.619054, 0, -1, 0.465815,-99) , 
1, -0.00229635, 1, 0, 0.474397,-99) , 
11, -4.52471, 1, 0, 0.480543,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0866617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00113557, 1, 1, 0.551156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45416,-99) , 
2, -0.0252203, 0, 0, 0.493912,-99) , 
3, 12.0217, 0, 0, 0.515988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471301,-99) , 
0, 0.494286, 1, 0, 0.491598,-99) , 
NN(
0, 
0, 
-1, -1.4984, 0, -1, 0.355211,-99) , 
10, -0.195153, 1, 0, 0.451158,-99) , 
12, -1.29142, 0, 0, 0.498397,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0601965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.58338, 1, 1, 0.527962,-99) , 
NN(
0, 
0, 
-1, -0.419485, 0, -1, 0.474492,-99) , 
0, 0.499047, 1, 0, 0.504164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39907,-99) , 
8, 20.4066, 1, 0, 0.499634,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0750613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.53687, 0, 1, 0.560087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347164,-99) , 
7, 0.00547781, 1, 0, 0.504452,-99) , 
8, 11.0688, 1, 0, 0.524606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364884,-99) , 
7, 0.0127885, 1, 0, 0.51912,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.108997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387585,-99) , 
13, 14.4887, 1, 0, 0.51009,-99) , 
3, 16.1878, 0, 0, 0.517135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479704,-99) , 
4, 3.33662, 0, 0, 0.546763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453188,-99) , 
12, -1.75337, 1, 0, 0.465235,-99) , 
2, -0.0809292, 1, 0, 0.476759,-99) , 
0, 0.499044, 0, 0, 0.493892,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.123991);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467709,-99) , 
11, -4.63578, 0, 0, 0.561267,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463612,-99) , 
6, 0.523828, 1, 0, 0.493304,-99) , 
10, 0.143643, 1, 0, 0.514154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55565,-99) , 
NN(
0, 
0, 
-1, -0.714312, 0, -1, 0.408913,-99) , 
3, 14.9939, 0, 0, 0.426095,-99) , 
0, 0.495235, 0, 0, 0.49091,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.106298);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28851, 1, 1, 0.554308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40865,-99) , 
6, -0.618975, 0, 0, 0.497238,-99) , 
4, 1.91163, 1, 0, 0.533488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470414,-99) , 
10, 0.698813, 1, 0, 0.531586,-99) , 
NN(
0, 
0, 
-1, 12.3412, 0, -1, 0.438571,-99) , 
6, 0.333242, 1, 0, 0.456069,-99) , 
4, 3.26313, 1, 0, 0.508764,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.128201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.603412, 1, 1, 0.568848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436575,-99) , 
9, -951.286, 1, 0, 0.471966,-99) , 
6, 0.836711, 1, 0, 0.520129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474779,-99) , 
8, 5.0319, 0, 0, 0.492794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309854,-99) , 
6, -0.387787, 1, 0, 0.464088,-99) , 
6, -0.14287, 0, 0, 0.505623,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0881529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.463768, 1, 1, 0.525698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440948,-99) , 
13, 17.6391, 1, 0, 0.515463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475361,-99) , 
2, -0.0354599, 1, 0, 0.502714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338982,-99) , 
10, 0.28519, 1, 0, 0.385918,-99) , 
10, 0.178331, 1, 0, 0.470789,-99) , 
12, -0.857259, 0, 0, 0.497664,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0805647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.287, 0, 1, 0.607577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430182,-99) , 
0, 0.496189, 0, 0, 0.501554,-99) , 
10, 0.427202, 0, 0, 0.552845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483871,-99) , 
6, 0.579584, 1, 0, 0.492166,-99) , 
NN(
0, 
0, 
-1, 0.173723, 1, -1, 0.425506,-99) , 
3, 9.62545, 0, 0, 0.48085,-99) , 
6, -0.523797, 1, 0, 0.494694,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0857361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497143, 1, 1, 0.613564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449863,-99) , 
0, 0.498041, 0, 0, 0.524553,-99) , 
3, 11.9634, 1, 0, 0.566053,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504893, 1, 1, 0.596135,-99) , 
NN(
0, 
0, 
-1, 0.142665, 0, -1, 0.480119,-99) , 
0, 0.502853, 0, 0, 0.495088,-99) , 
4, 4.14964, 0, 0, 0.510391,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0775212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497384, 0, 1, 0.547673,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477277,-99) , 
0, 0.493331, 1, 0, 0.489466,-99) , 
6, 0.904595, 0, 0, 0.504189,-99) , 
NN(
0, 
0, 
-1, 0.506253, 1, -1, 0.401512,-99) , 
0, 0.504757, 1, 0, 0.495615,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.095475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.101287, 1, 1, 0.5325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42638,-99) , 
0, 0.496416, 1, 0, 0.471338,-99) , 
3, 6.96241, 0, 0, 0.517836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342663,-99) , 
0, 0.489522, 0, 0, 0.511267,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0707165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.659473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40974,-99) , 
0, 0.494286, 0, 0, 0.530925,-99) , 
3, 13.0747, 0, 0, 0.55502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494033,-99) , 
4, 4.1825, 0, 0, 0.515946,-99) , 
NN(
0, 
0, 
-1, -0.80811, 0, -1, 0.475169,-99) , 
11, -2.25901, 0, 0, 0.491762,-99) , 
11, -3.72463, 1, 0, 0.501754,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0557232);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.846628, 1, 1, 0.565858,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.477785,-99) , 
8, 16.3597, 0, 0, 0.489122,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0699547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.583163,-99) , 
NN(
0, 
0, 
-1, 20.3312, 0, -1, 0.456483,-99) , 
3, 16.5451, 1, 0, 0.530876,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497877,-99) , 
12, -1.19266, 1, 0, 0.526546,-99) , 
NN(
0, 
0, 
-1, 0.494917, 0, -1, 0.473549,-99) , 
0, 0.494281, 1, 0, 0.483399,-99) , 
8, 15.0838, 0, 0, 0.492797,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.103931);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.681276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456084,-99) , 
0, 0.491429, 0, 0, 0.532635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425938,-99) , 
10, -0.796467, 1, 0, 0.470702,-99) , 
12, -1.26715, 0, 0, 0.515951,-99) , 
8, 20.3546, 0, 0, 0.52128,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0801701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.262451, 1, 1, 0.535056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354272,-99) , 
3, 4.27005, 1, 0, 0.489847,-99) , 
6, -0.523716, 0, 0, 0.524899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363899,-99) , 
2, 0.0149736, 1, 0, 0.444217,-99) , 
12, -2.12492, 0, 0, 0.518182,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0868187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417334,-99) , 
12, -2.04185, 0, 0, 0.514857,-99) , 
NN(
0, 
0, 
-1, 2.05587, 0, -1, 0.440926,-99) , 
12, 0.498741, 1, 0, 0.502375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372881,-99) , 
4, 8.20208, 1, 0, 0.4954,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0870858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.595576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447593,-99) , 
10, -0.714496, 0, 0, 0.562971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480185,-99) , 
0, 0.496186, 1, 0, 0.509976,-99) , 
NN(
0, 
0, 
-1, -0.174159, 1, -1, 0.464904,-99) , 
3, 12.864, 0, 0, 0.481137,-99) , 
6, -0.714181, 1, 0, 0.49346,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0999516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.156493, 0, 1, 0.559459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392012,-99) , 
2, 0.120869, 1, 0, 0.543909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458377,-99) , 
8, 15.3702, 1, 0, 0.506382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.272074,-99) , 
6, 0.573727, 1, 0, 0.415565,-99) , 
6, 0.61908, 0, 0, 0.495769,-99) , 
6, 0.428624, 1, 0, 0.51157,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.117466);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481381,-99) , 
8, 12.3021, 0, 0, 0.537467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461293,-99) , 
6, 0.201771, 1, 0, 0.475126,-99) , 
11, -2.83713, 1, 0, 0.502296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424128,-99) , 
4, 2.18092, 1, 0, 0.485657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320671,-99) , 
4, 0.689533, 0, 0, 0.443026,-99) , 
6, -0.523853, 0, 0, 0.48954,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0981514);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404061,-99) , 
10, -0.721268, 0, 0, 0.50962,-99) , 
3, 4.64131, 0, 0, 0.534861,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453401,-99) , 
7, 0.00204482, 0, 0, 0.474613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345035,-99) , 
7, 0.00715719, 1, 0, 0.469671,-99) , 
6, -0.238004, 1, 0, 0.483775,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0634332);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.795749, 1, 1, 0.626593,-99) , 
NN(
NN(
0, 
0, 
-1, 0.714644, 1, 1, 0.564674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411937,-99) , 
12, -2.51668, 0, 0, 0.506381,-99) , 
2, -0.0809292, 1, 0, 0.515231,-99) , 
8, 17.7934, 0, 0, 0.523685,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0514995);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640021,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488314,-99) , 
10, -0.467457, 1, 0, 0.493838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371202,-99) , 
12, -2.11691, 0, 0, 0.488661,-99) , 
10, -1.28422, 1, 0, 0.49543,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0741032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 11.6589, 1, 1, 0.587411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414556,-99) , 
0, 0.493196, 1, 0, 0.519605,-99) , 
0, 0.493784, 0, 0, 0.542833,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493163,-99) , 
11, -1.99585, 0, 0, 0.506044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38381,-99) , 
8, 12.2712, 0, 0, 0.439723,-99) , 
10, 1.57374, 1, 0, 0.492462,-99) , 
0, 0.495235, 1, 0, 0.504718,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0789542);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452237,-99) , 
2, -0.0860434, 0, 0, 0.517436,-99) , 
6, 0.627168, 1, 0, 0.524839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426255,-99) , 
0, 0.501897, 1, 0, 0.487086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408039,-99) , 
11, -1.69803, 1, 0, 0.472764,-99) , 
3, 11.0722, 0, 0, 0.500721,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0396283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435701,-99) , 
12, -1.90205, 0, 0, 0.491865,-99) , 
6, -0.904637, 1, 0, 0.497784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372349,-99) , 
2, 0.200071, 1, 0, 0.491209,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.106317);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474364,-99) , 
0, 0.494285, 0, 0, 0.567954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388757,-99) , 
6, -0.809312, 1, 0, 0.460711,-99) , 
6, -0.428436, 0, 0, 0.543055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436417,-99) , 
10, 1.18038, 1, 0, 0.489181,-99) , 
NN(
0, 
0, 
-1, 0.989852, 0, -1, 0.44214,-99) , 
11, -1.97104, 1, 0, 0.470625,-99) , 
11, -3.15426, 1, 0, 0.492886,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0717739);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615843,-99) , 
NN(
NN(
0, 
0, 
-1, 3.80252, 1, 1, 0.513235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423603,-99) , 
3, 14.1694, 0, 0, 0.445667,-99) , 
0, 0.501901, 1, 0, 0.497482,-99) , 
10, 2.14326, 0, 0, 0.508575,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0854274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498977,-99) , 
4, 3.04713, 0, 0, 0.525982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457268,-99) , 
11, -2.51787, 0, 0, 0.477361,-99) , 
0, 0.499046, 0, 0, 0.496984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455562,-99) , 
3, 12.025, 0, 0, 0.477193,-99) , 
NN(
0, 
0, 
-1, 0.498063, 1, -1, 0.411664,-99) , 
11, -1.63148, 0, 0, 0.449035,-99) , 
12, 0.0777155, 1, 0, 0.483439,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.086959);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474337,-99) , 
12, -0.201558, 1, 0, 0.515592,-99) , 
NN(
0, 
0, 
-1, 1.6737, 1, -1, 0.455624,-99) , 
2, -0.0142572, 1, 0, 0.475187,-99) , 
4, 6.60991, 0, 0, 0.482876,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0634962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576245,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464996,-99) , 
0, 0.49986, 1, 0, 0.49577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350596,-99) , 
0, 0.489521, 0, 0, 0.490731,-99) , 
10, 2.1431, 0, 0, 0.498527,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0427811);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491991,-99) , 
12, -1.9668, 1, 0, 0.497185,-99) , 
NN(
0, 
0, 
-1, -2.95994, 1, -1, 0.401107,-99) , 
12, -2.51857, 0, 0, 0.491422,-99) , 
3, 18.2561, 0, 0, 0.496236,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0736721);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597084,-99) , 
NN(
NN(
0, 
0, 
-1, 0.836715, 0, 1, 0.52592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46041,-99) , 
11, -1.61475, 0, 0, 0.482303,-99) , 
11, -2.82268, 1, 0, 0.499957,-99) , 
11, -4.51381, 1, 0, 0.504844,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0788555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.288, 0, 1, 0.604731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463344,-99) , 
13, 13.8352, 1, 0, 0.521925,-99) , 
11, -2.6895, 0, 0, 0.537986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496157,-99) , 
11, -2.94835, 1, 0, 0.505173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400442,-99) , 
1, 0.00361333, 1, 0, 0.493557,-99) , 
10, 0.715085, 1, 0, 0.515836,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0703678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0154507, 0, 1, 0.602511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456393,-99) , 
12, 0.881485, 1, 0, 0.501554,-99) , 
10, 0.157919, 1, 0, 0.511058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405701,-99) , 
3, 13.8382, 1, 0, 0.501384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364086,-99) , 
8, 4.45526, 0, 0, 0.465675,-99) , 
10, -0.141285, 0, 0, 0.500054,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0429902);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627543,-99) , 
NN(
NN(
0, 
0, 
-1, -3.43382, 1, 1, 0.513153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39032,-99) , 
12, -2.15568, 0, 0, 0.508488,-99) , 
10, -1.28496, 1, 0, 0.513502,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.10276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440386,-99) , 
0, 0.505164, 1, 0, 0.516396,-99) , 
8, 16.3597, 0, 0, 0.530112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435692,-99) , 
6, 0.904704, 0, 0, 0.459291,-99) , 
7, 0.00572071, 0, 0, 0.467409,-99) , 
0, 0.499043, 0, 0, 0.493197,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.104101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417249,-99) , 
11, -2.1586, 0, 0, 0.500042,-99) , 
11, -2.53423, 1, 0, 0.516955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47044,-99) , 
12, -1.75598, 0, 0, 0.515612,-99) , 
NN(
0, 
0, 
-1, -1.48708, 0, -1, 0.4418,-99) , 
11, -3.30941, 1, 0, 0.473484,-99) , 
10, 1.00061, 0, 0, 0.490383,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0652415);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482861,-99) , 
8, 11.0115, 1, 0, 0.500274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.296218,-99) , 
8, 11.1075, 0, 0, 0.415548,-99) , 
11, -4.08158, 0, 0, 0.493787,-99) , 
10, -1.27839, 1, 0, 0.498314,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0538778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499047, 1, 1, 0.610306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429554,-99) , 
10, -0.618984, 0, 0, 0.502667,-99) , 
10, -0.999755, 1, 0, 0.510153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474574,-99) , 
0, 0.498088, 0, 0, 0.490085,-99) , 
NN(
0, 
0, 
-1, 3.15122, 0, -1, 0.369265,-99) , 
11, -3.02871, 0, 0, 0.438648,-99) , 
2, -0.0750248, 0, 0, 0.497663,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0872275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493249,-99) , 
6, -0.827132, 1, 0, 0.539181,-99) , 
6, -0.546435, 0, 0, 0.564537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480329,-99) , 
6, 0.900082, 1, 0, 0.517518,-99) , 
NN(
0, 
0, 
-1, 10.3161, 0, -1, 0.449804,-99) , 
0, 0.501898, 1, 0, 0.503283,-99) , 
6, -0.0476265, 1, 0, 0.518406,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.130004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463853,-99) , 
10, -0.795431, 0, 0, 0.542296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406154,-99) , 
10, -0.277408, 1, 0, 0.517241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473888,-99) , 
10, 0.307588, 1, 0, 0.482127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371199,-99) , 
10, 0.834008, 0, 0, 0.39686,-99) , 
11, -2.81973, 0, 0, 0.454616,-99) , 
10, -0.141381, 1, 0, 0.468618,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0851327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417477,-99) , 
3, 16.3589, 0, 0, 0.502912,-99) , 
10, 0.715085, 0, 0, 0.553419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444644,-99) , 
8, 3.45421, 0, 0, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0.452704, 1, -1, 0.452303,-99) , 
6, 0.809506, 1, 0, 0.48571,-99) , 
3, 14.1518, 0, 0, 0.498503,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0827183);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.54156, 1, 1, 0.606083,-99) , 
NN(
NN(
0, 
0, 
-1, 3.03419, 0, 1, 0.553056,-99) , 
NN(
0, 
0, 
-1, 4.66965, 0, -1, 0.467025,-99) , 
6, -0.809527, 1, 0, 0.478363,-99) , 
3, 16.2494, 0, 0, 0.488593,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.080642);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.6634, 0, 1, 0.664081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436296,-99) , 
8, 17.4971, 1, 0, 0.511476,-99) , 
NN(
0, 
0, 
-1, 10.1149, 0, -1, 0.429592,-99) , 
10, -0.273928, 0, 0, 0.498902,-99) , 
11, -4.33232, 1, 0, 0.508051,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0650138);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.23745, 0, 1, 0.57001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.626233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45198,-99) , 
9, -951.286, 0, 0, 0.485133,-99) , 
10, -1.61094, 1, 0, 0.489644,-99) , 
10, 1.85648, 0, 0, 0.50085,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0681942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459756,-99) , 
2, 0.0380437, 1, 0, 0.544714,-99) , 
0, 0.501903, 0, 0, 0.564822,-99) , 
NN(
NN(
0, 
0, 
-1, 14.3267, 0, 1, 0.509038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391141,-99) , 
0, 0.49061, 1, 0, 0.431049,-99) , 
0, 0.493331, 0, 0, 0.496494,-99) , 
8, 14.955, 0, 0, 0.511312,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.10716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.567844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412432,-99) , 
10, -1.54017, 1, 0, 0.466327,-99) , 
12, -2.43096, 0, 0, 0.544731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470446,-99) , 
7, 0.00182536, 1, 0, 0.545754,-99) , 
NN(
0, 
0, 
-1, -1.07096, 0, -1, 0.456937,-99) , 
8, 13.7848, 0, 0, 0.483117,-99) , 
12, -1.28859, 1, 0, 0.498131,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0873952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488471,-99) , 
8, 12.2985, 0, 0, 0.530209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423229,-99) , 
0, 0.49891, 0, 0, 0.475266,-99) , 
0, 0.49619, 1, 0, 0.492083,-99) , 
NN(
0, 
0, 
-1, 0.498095, 0, -1, 0.419685,-99) , 
2, 0.090383, 1, 0, 0.481963,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.104334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436963,-99) , 
12, -1.30759, 0, 0, 0.609936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465983,-99) , 
3, 16.0304, 1, 0, 0.523126,-99) , 
9, -951.286, 1, 0, 0.549457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452244,-99) , 
0, 0.492514, 0, 0, 0.530186,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.472584,-99) , 
0, 0.496187, 1, 0, 0.491372,-99) , 
8, 13.7143, 0, 0, 0.510235,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.10193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471547,-99) , 
12, -1.13893, 0, 0, 0.560689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41204,-99) , 
9, -1.2788, 0, 0, 0.502863,-99) , 
9, -951.286, 1, 0, 0.524311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4783,-99) , 
3, 7.50498, 0, 0, 0.505988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40958,-99) , 
0, 0.49306, 1, 0, 0.433768,-99) , 
6, 0.523848, 1, 0, 0.45927,-99) , 
0, 0.49714, 0, 0, 0.498445,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0851272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.145371, 1, 1, 0.623873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406249,-99) , 
4, 1.53948, 0, 0, 0.466906,-99) , 
0, 0.499996, 1, 0, 0.553102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480965,-99) , 
2, -0.0572402, 1, 0, 0.491658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.359296,-99) , 
7, 0.00715738, 1, 0, 0.485775,-99) , 
3, 6.89546, 1, 0, 0.500258,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0707079);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476531,-99) , 
9, -951.286, 1, 0, 0.495187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412422,-99) , 
11, -1.15936, 1, 0, 0.487548,-99) , 
11, -4.52524, 1, 0, 0.494552,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0786688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00223853, 0, 1, 0.570738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465371,-99) , 
12, 0.449003, 1, 0, 0.511937,-99) , 
8, 15.1046, 0, 0, 0.522951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504904,-99) , 
NN(
0, 
0, 
-1, 11.2312, 1, -1, 0.404776,-99) , 
1, 0.00150595, 0, 0, 0.431049,-99) , 
2, -0.0984693, 0, 0, 0.510644,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0977718);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470166,-99) , 
6, -0.428589, 0, 0, 0.525798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42311,-99) , 
8, 12.9256, 1, 0, 0.478746,-99) , 
2, -0.00111461, 0, 0, 0.506933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414076,-99) , 
8, 11.9921, 1, 0, 0.48257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390436,-99) , 
2, -0.142221, 0, 0, 0.429877,-99) , 
2, -0.0750248, 0, 0, 0.494349,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0718547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.59112, 0, 1, 0.525207,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458062,-99) , 
4, 1.36571, 1, 0, 0.480449,-99) , 
0, 0.499995, 0, 0, 0.495108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42294,-99) , 
4, 6.60289, 1, 0, 0.488431,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0649361);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.590877,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405351,-99) , 
10, -0.617429, 0, 0, 0.513334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.309472,-99) , 
12, -2.07941, 0, 0, 0.505243,-99) , 
10, -0.998422, 1, 0, 0.510825,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0788627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.25045, 0, 1, 0.590145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425318,-99) , 
2, -0.00512483, 1, 0, 0.471322,-99) , 
1, 2.31273e-05, 1, 0, 0.527734,-99) , 
NN(
0, 
0, 
-1, -1.35711, 1, -1, 0.465485,-99) , 
8, 16.3597, 0, 0, 0.473916,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.142458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.585355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455016,-99) , 
10, 0.891711, 1, 0, 0.492512,-99) , 
8, 12.2846, 1, 0, 0.537679,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472403,-99) , 
0, 0.5, 1, 0, 0.547496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414522,-99) , 
10, -0.495121, 1, 0, 0.448115,-99) , 
8, 12.0664, 0, 0, 0.492514,-99) , 
11, -2.74014, 0, 0, 0.515933,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0579019);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.702202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49693,-99) , 
13, 11.1678, 0, 0, 0.587922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491119,-99) , 
4, 3.35811, 0, 0, 0.505098,-99) , 
10, -0.617048, 1, 0, 0.512991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350098,-99) , 
12, -2.9566, 0, 0, 0.507383,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0591623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714199, 1, 1, 0.54163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458953,-99) , 
0, 0.498409, 1, 0, 0.497544,-99) , 
0, 0.500948, 0, 0, 0.509325,-99) , 
NN(
0, 
0, 
-1, 11.263, 0, -1, 0.435186,-99) , 
12, -2.39655, 0, 0, 0.504704,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0645073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.66107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477214,-99) , 
8, 7.22932, 0, 0, 0.58194,-99) , 
NN(
0, 
0, 
-1, -1.52169, 0, -1, 0.485589,-99) , 
10, -0.338816, 1, 0, 0.49852,-99) , 
NN(
0, 
0, 
-1, -3.06882, 0, -1, 0.36611,-99) , 
12, -2.51668, 0, 0, 0.491022,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0642511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.783231, 0, 1, 0.554201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491936,-99) , 
10, -0.0294986, 1, 0, 0.507063,-99) , 
3, 8.98005, 1, 0, 0.519982,-99) , 
NN(
0, 
0, 
-1, -4.84879, 0, -1, 0.435628,-99) , 
12, -2.31074, 0, 0, 0.514087,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.107888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0140393, 0, 1, 0.547838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44112,-99) , 
11, -3.27492, 1, 0, 0.474135,-99) , 
2, 0.0595711, 1, 0, 0.534839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476223,-99) , 
0, 0.504347, 0, 0, 0.520561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3835,-99) , 
4, 1.69132, 0, 0, 0.431363,-99) , 
4, 2.86483, 0, 0, 0.468451,-99) , 
0, 0.501898, 1, 0, 0.520335,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.107791);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.100191, 0, 1, 0.538683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438258,-99) , 
10, -0.126296, 1, 0, 0.471905,-99) , 
3, 6.9431, 0, 0, 0.523295,-99) , 
NN(
NN(
0, 
0, 
-1, 1.3976, 1, 1, 0.544194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39821,-99) , 
3, 14.0122, 0, 0, 0.422235,-99) , 
10, 1.02089, 0, 0, 0.467536,-99) , 
0, 0.49619, 0, 0, 0.50502,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0799006);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619545,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469128,-99) , 
8, 13.7564, 1, 0, 0.499721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398802,-99) , 
8, 13.4741, 0, 0, 0.451744,-99) , 
4, 3.49386, 1, 0, 0.485457,-99) , 
10, -1.56998, 1, 0, 0.489085,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0825823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.12383, 0, 1, 0.590546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484123,-99) , 
10, 1.93478, 1, 0, 0.539479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465993,-99) , 
4, 1.95505, 0, 0, 0.495073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399082,-99) , 
4, 6.56809, 1, 0, 0.485951,-99) , 
11, -1.9119, 0, 0, 0.498573,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0494073);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 11.0282, 1, 1, 0.638059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446304,-99) , 
0, 0.50453, 1, 0, 0.499705,-99) , 
NN(
0, 
0, 
-1, 11.9661, 1, -1, 0.39573,-99) , 
11, -4.39116, 0, 0, 0.491474,-99) , 
0, 0.491426, 1, 0, 0.500102,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0501142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493658,-99) , 
3, 15.2315, 0, 0, 0.501551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3995,-99) , 
6, 0.809465, 1, 0, 0.467309,-99) , 
2, 0.0272608, 1, 0, 0.492429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428391,-99) , 
0, 0.505709, 1, 0, 0.488944,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0686484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.89138, 0, 1, 0.565054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481298,-99) , 
3, 18.5566, 0, 0, 0.486051,-99) , 
6, -0.0438744, 1, 0, 0.494368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387301,-99) , 
9, -951.287, 0, 0, 0.434282,-99) , 
8, 4.46462, 0, 0, 0.484312,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.0668365);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 7.72895, 0, 1, 0.609019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60698,-99) , 
NN(
0, 
0, 
-1, -2.02789, 0, -1, 0.483183,-99) , 
10, -1.28436, 1, 0, 0.489107,-99) , 
2, -0.0737556, 1, 0, 0.505802,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0927718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238159, 1, 1, 0.54055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44926,-99) , 
10, -1.05334, 1, 0, 0.475652,-99) , 
10, 0.143643, 0, 0, 0.517821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525193,-99) , 
NN(
0, 
0, 
-1, -2.58101, 1, -1, 0.447799,-99) , 
10, 1.57212, 0, 0, 0.464296,-99) , 
0, 0.498091, 0, 0, 0.491442,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0885447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.85996, 1, 1, 0.561877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477035,-99) , 
12, -0.369081, 0, 0, 0.495157,-99) , 
1, 0.00388765, 0, 0, 0.501549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400314,-99) , 
0, 0.499989, 0, 0, 0.457238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364541,-99) , 
11, -2.22865, 1, 0, 0.417616,-99) , 
3, 14.2008, 1, 0, 0.483984,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0972489);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499452,-99) , 
10, 0.905472, 1, 0, 0.529283,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413313,-99) , 
11, -3.37822, 1, 0, 0.46227,-99) , 
11, -2.95235, 0, 0, 0.511461,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37849,-99) , 
3, 13.8437, 1, 0, 0.482177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369824,-99) , 
8, 4.45748, 0, 0, 0.450144,-99) , 
10, -0.141968, 0, 0, 0.495734,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.099735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.814558, 1, 1, 0.545006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.259383,-99) , 
10, -0.985375, 1, 0, 0.42939,-99) , 
12, -2.14142, 0, 0, 0.533917,-99) , 
NN(
0, 
0, 
-1, 2.98575, 1, -1, 0.453294,-99) , 
3, 4.88934, 0, 0, 0.517528,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0460551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.123162, 0, 1, 0.513477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373754,-99) , 
2, -0.201743, 0, 0, 0.505127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419333,-99) , 
2, 0.199574, 1, 0, 0.501161,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0795012);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498944,-99) , 
4, 2.15713, 1, 0, 0.545521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428285,-99) , 
12, 0.341439, 1, 0, 0.489166,-99) , 
6, 0.428621, 1, 0, 0.508308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389796,-99) , 
1, -0.00180473, 0, 0, 0.483553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.250329,-99) , 
10, -0.119739, 1, 0, 0.44349,-99) , 
12, -1.40487, 0, 0, 0.49293,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0454495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467238,-99) , 
6, 0.809481, 1, 0, 0.489577,-99) , 
2, -0.11711, 1, 0, 0.493524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417158,-99) , 
2, -0.196956, 0, 0, 0.488921,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.118761);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438663,-99) , 
3, 9.7847, 1, 0, 0.535427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.685251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353508,-99) , 
8, 7.59811, 0, 0, 0.448136,-99) , 
2, -0.0403994, 0, 0, 0.511779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459702,-99) , 
7, 0.000604852, 1, 0, 0.473841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278746,-99) , 
7, 0.00635209, 1, 0, 0.464909,-99) , 
8, 11.1108, 1, 0, 0.482144,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.111818);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426838,-99) , 
0, 0.494296, 0, 0, 0.579227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456601,-99) , 
0, 0.499997, 1, 0, 0.504132,-99) , 
12, -0.798619, 1, 0, 0.516814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449799,-99) , 
10, -0.684098, 1, 0, 0.489256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.306189,-99) , 
10, 0.0391191, 1, 0, 0.457414,-99) , 
12, -1.21889, 0, 0, 0.499314,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.11269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.69254, 1, 1, 0.569027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412327,-99) , 
2, 0.0705504, 1, 0, 0.535484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398059,-99) , 
6, 0.72353, 0, 0, 0.529365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440266,-99) , 
0, 0.502898, 0, 0, 0.452448,-99) , 
8, 14.8648, 0, 0, 0.46838,-99) , 
0, 0.495235, 1, 0, 0.484079,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0938849);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479588,-99) , 
6, 0.809481, 1, 0, 0.522783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362929,-99) , 
10, -1.85566, 0, 0, 0.515123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532216,-99) , 
NN(
0, 
0, 
-1, -0.189863, 0, -1, 0.448903,-99) , 
4, 4.1789, 0, 0, 0.464374,-99) , 
10, 1.00048, 1, 0, 0.494766,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.115352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.4499, 0, 1, 0.58008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441052,-99) , 
4, 2.28207, 1, 0, 0.511452,-99) , 
4, 3.35811, 0, 0, 0.530328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461676,-99) , 
4, 1.99646, 0, 0, 0.498461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384791,-99) , 
4, 3.38891, 1, 0, 0.467192,-99) , 
12, 0.0424959, 1, 0, 0.511232,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0888458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000228993, 0, 1, 0.569553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460309,-99) , 
4, 3.35979, 1, 0, 0.503313,-99) , 
2, -0.0720295, 1, 0, 0.513527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439297,-99) , 
12, -1.77643, 0, 0, 0.479492,-99) , 
NN(
0, 
0, 
-1, -3.55855, 1, -1, 0.373303,-99) , 
10, 0.00315206, 1, 0, 0.450287,-99) , 
12, -1.05612, 0, 0, 0.492526,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.100379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0225851, 1, 1, 0.58819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373089,-99) , 
2, -0.00290658, 0, 0, 0.48716,-99) , 
1, -0.000179959, 0, 0, 0.538784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472828,-99) , 
11, -4.33387, 1, 0, 0.479557,-99) , 
NN(
0, 
0, 
-1, -0.3939, 0, -1, 0.425951,-99) , 
6, -0.809371, 0, 0, 0.470129,-99) , 
3, 14.0332, 0, 0, 0.483403,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0580856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496181, 1, 1, 0.577466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431329,-99) , 
2, 0.0962076, 1, 0, 0.549372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48934,-99) , 
11, -3.53722, 1, 0, 0.496344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381399,-99) , 
12, -1.60182, 0, 0, 0.490848,-99) , 
10, -0.428042, 1, 0, 0.499425,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0699668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400489,-99) , 
2, 0.0354617, 1, 0, 0.511492,-99) , 
3, 12.0814, 0, 0, 0.54607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468857,-99) , 
8, 11.128, 0, 0, 0.495582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.326478,-99) , 
12, -1.62233, 0, 0, 0.48747,-99) , 
10, -0.42758, 1, 0, 0.496121,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0631385);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489115,-99) , 
12, -1.13956, 0, 0, 0.515261,-99) , 
NN(
0, 
0, 
-1, 14.9693, 1, -1, 0.474244,-99) , 
11, -3.21697, 1, 0, 0.488742,-99) , 
11, -1.38378, 0, 0, 0.496986,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0966187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436525,-99) , 
13, 15.3874, 1, 0, 0.567979,-99) , 
NN(
0, 
0, 
-1, 0.0476352, 0, -1, 0.477966,-99) , 
2, 0.000623044, 0, 0, 0.520007,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440071,-99) , 
6, 0.71426, 0, 0, 0.47342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333319,-99) , 
1, 0.00567397, 1, 0, 0.462347,-99) , 
11, -2.64561, 1, 0, 0.491428,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0907126);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.28604, 0, 1, 0.56481,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454003,-99) , 
6, 0.0475895, 0, 0, 0.527321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448944,-99) , 
10, 1.24729, 0, 0, 0.474031,-99) , 
11, -3.25817, 1, 0, 0.488513,-99) , 
0, 0.50095, 0, 0, 0.508407,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.098208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.49902, 0, 1, 0.55019,-99) , 
NN(
0, 
0, 
-1, 19.2129, 0, -1, 0.445166,-99) , 
8, 17.0669, 1, 0, 0.539357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429858,-99) , 
4, 3.3793, 1, 0, 0.491772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37619,-99) , 
10, 0.658704, 0, 0, 0.478387,-99) , 
11, -2.28419, 1, 0, 0.516703,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0584906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.451, 1, 1, 0.595303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443001,-99) , 
0, 0.493738, 0, 0, 0.509012,-99) , 
0, 0.491425, 1, 0, 0.514781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42031,-99) , 
2, -0.171514, 0, 0, 0.508019,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.120553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407652,-99) , 
3, 14.0856, 1, 0, 0.569609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455677,-99) , 
3, 12.1259, 0, 0, 0.478149,-99) , 
11, -3.07074, 0, 0, 0.507713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576032,-99) , 
NN(
0, 
0, 
-1, -0.441756, 0, -1, 0.447185,-99) , 
2, 0.0810799, 0, 0, 0.464491,-99) , 
10, 0.714867, 1, 0, 0.486378,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0493763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41806,-99) , 
12, 0.77507, 1, 0, 0.496689,-99) , 
6, -0.904763, 1, 0, 0.50456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314706,-99) , 
12, -3.11231, 0, 0, 0.499563,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0995808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497775,-99) , 
0, 0.5019, 1, 0, 0.558906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414645,-99) , 
11, -4.14658, 0, 0, 0.539931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479552,-99) , 
8, 17.8096, 0, 0, 0.490829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360126,-99) , 
6, 0.84128, 1, 0, 0.426523,-99) , 
0, 0.499991, 1, 0, 0.469896,-99) , 
6, 0.523815, 1, 0, 0.49336,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0909853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.552708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442989,-99) , 
0, 0.496871, 1, 0, 0.486651,-99) , 
12, -0.478232, 1, 0, 0.51984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552491,-99) , 
NN(
0, 
0, 
-1, 0.00630482, 1, -1, 0.445862,-99) , 
2, 0.103409, 0, 0, 0.459331,-99) , 
0, 0.499046, 1, 0, 0.49409,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0855617);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478709,-99) , 
3, 10.2771, 1, 0, 0.562779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395276,-99) , 
13, 13.2541, 1, 0, 0.496419,-99) , 
11, -1.90317, 0, 0, 0.510474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454002,-99) , 
0, 0.500669, 1, 0, 0.504907,-99) , 
NN(
0, 
0, 
-1, 15.2738, 0, -1, 0.43719,-99) , 
0, 0.499038, 0, 0, 0.463875,-99) , 
8, 13.7564, 1, 0, 0.495173,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0858047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.1629, 1, 1, 0.605632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48224,-99) , 
8, 9.42986, 1, 0, 0.524368,-99) , 
13, 12.0464, 0, 0, 0.567655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49876,-99) , 
11, -3.1322, 0, 0, 0.525744,-99) , 
NN(
0, 
0, 
-1, -0.953131, 0, -1, 0.469489,-99) , 
10, 0.26525, 1, 0, 0.49703,-99) , 
10, 1.28514, 0, 0, 0.517971,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0682317);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47226,-99) , 
10, 1.09884, 1, 0, 0.503014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405084,-99) , 
8, 19.0966, 1, 0, 0.496144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379611,-99) , 
12, -2.61105, 0, 0, 0.49083,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0826071);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469496,-99) , 
0, 0.497951, 0, 0, 0.522817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470505,-99) , 
4, 2.90986, 0, 0, 0.48028,-99) , 
4, 3.56867, 0, 0, 0.491293,-99) , 
0, 0.505707, 0, 0, 0.496458,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0829358);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499033, 1, 1, 0.579784,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4643,-99) , 
10, 0.715039, 0, 0, 0.493875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432179,-99) , 
6, 0.90473, 1, 0, 0.480626,-99) , 
3, 16.2286, 0, 0, 0.488067,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.106822);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48136,-99) , 
0, 0.49429, 0, 0, 0.589165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434552,-99) , 
12, 0.743467, 1, 0, 0.503815,-99) , 
11, -3.13649, 1, 0, 0.528347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369106,-99) , 
12, -2.67075, 0, 0, 0.521089,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0832721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456041,-99) , 
9, -951.286, 0, 0, 0.545561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473539,-99) , 
12, 0.28251, 0, 0, 0.488628,-99) , 
10, -0.338816, 1, 0, 0.496807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352747,-99) , 
12, -2.80305, 0, 0, 0.490333,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0750649);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483368,-99) , 
0, 0.504123, 1, 0, 0.593631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412672,-99) , 
12, -0.699962, 0, 0, 0.50989,-99) , 
10, 0.140852, 1, 0, 0.534704,-99) , 
NN(
0, 
0, 
-1, 15.1173, 1, -1, 0.472146,-99) , 
0, 0.500949, 0, 0, 0.487636,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0465976);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.658947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494017,-99) , 
0, 0.493833, 1, 0, 0.505549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378329,-99) , 
0, 0.489526, 0, 0, 0.501076,-99) , 
12, -2.73351, 1, 0, 0.505168,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.109506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.687835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435936,-99) , 
12, -1.20078, 0, 0, 0.524794,-99) , 
11, -3.68237, 1, 0, 0.534352,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371873,-99) , 
13, 5.67485, 0, 0, 0.494076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.307551,-99) , 
10, -0.458413, 1, 0, 0.45144,-99) , 
12, -1.67187, 0, 0, 0.52056,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.106436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.333354, 1, 1, 0.546006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396928,-99) , 
9, -1.56163, 0, 0, 0.532429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422834,-99) , 
0, 0.497137, 1, 0, 0.45254,-99) , 
3, 15.1816, 0, 0, 0.468009,-99) , 
9, -951.286, 0, 0, 0.506293,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0793673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.2798, 0, 1, 0.563302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410052,-99) , 
8, 11.87, 0, 0, 0.47648,-99) , 
4, 3.51043, 1, 0, 0.537643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460781,-99) , 
0, 0.495774, 0, 0, 0.500786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41794,-99) , 
0, 0.504748, 1, 0, 0.493524,-99) , 
11, -3.10406, 1, 0, 0.50842,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0831898);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394234,-99) , 
7, 0.00634379, 1, 0, 0.537396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362273,-99) , 
0, 0.503807, 1, 0, 0.481555,-99) , 
1, -0.000712534, 0, 0, 0.516417,-99) , 
NN(
0, 
0, 
-1, -2.47935, 0, -1, 0.461659,-99) , 
11, -2.69413, 1, 0, 0.487067,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0895013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496201, 1, 1, 0.558472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466191,-99) , 
10, 0.471279, 1, 0, 0.509518,-99) , 
10, 1.28704, 0, 0, 0.524484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456446,-99) , 
6, -0.904763, 0, 0, 0.51856,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0459137);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49795,-99) , 
6, -0.637116, 1, 0, 0.504491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338339,-99) , 
6, -0.891161, 1, 0, 0.441566,-99) , 
6, -0.809525, 0, 0, 0.495736,-99) , 
NN(
0, 
0, 
-1, 11.3793, 0, -1, 0.4072,-99) , 
12, -2.1302, 0, 0, 0.487687,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.116592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469705,-99) , 
10, 0.541773, 0, 0, 0.537023,-99) , 
NN(
0, 
0, 
-1, 12.3856, 1, -1, 0.456726,-99) , 
10, 1.74106, 1, 0, 0.51428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445149,-99) , 
10, -0.512251, 0, 0, 0.498637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.282971,-99) , 
10, 0.264716, 1, 0, 0.467374,-99) , 
12, -0.970749, 0, 0, 0.497602,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0558526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.618922, 1, 1, 0.531683,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45423,-99) , 
1, -0.00107188, 0, 0, 0.4904,-99) , 
0, 0.499996, 0, 0, 0.50487,-99) , 
NN(
0, 
0, 
-1, -1.25195, 1, -1, 0.418371,-99) , 
12, -2.31074, 0, 0, 0.498362,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.102727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523818, 1, 1, 0.598464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407651,-99) , 
6, -0.714139, 0, 0, 0.496033,-99) , 
12, -1.18802, 1, 0, 0.521442,-99) , 
NN(
NN(
0, 
0, 
-1, -2.95576, 0, 1, 0.56206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444232,-99) , 
6, 0.523686, 1, 0, 0.462438,-99) , 
9, 1.28851, 0, 0, 0.474237,-99) , 
9, -951.286, 1, 0, 0.492101,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0851842);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592361,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462512,-99) , 
0, 0.501084, 1, 0, 0.518694,-99) , 
NN(
0, 
0, 
-1, 0.523794, 0, -1, 0.460261,-99) , 
12, -0.910972, 1, 0, 0.480788,-99) , 
0, 0.490474, 1, 0, 0.485719,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0636547);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496135,-99) , 
8, 9.83752, 1, 0, 0.507739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391273,-99) , 
4, 2.03495, 0, 0, 0.440585,-99) , 
3, 4.19296, 0, 0, 0.494338,-99) , 
NN(
0, 
0, 
-1, 0.498071, 0, -1, 0.387098,-99) , 
8, 19.0051, 1, 0, 0.487178,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0682575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497135, 1, 1, 0.592226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463881,-99) , 
6, -0.508373, 0, 0, 0.532283,-99) , 
8, 4.41515, 1, 0, 0.569857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.672313,-99) , 
NN(
0, 
0, 
-1, -2.13596, 0, -1, 0.486294,-99) , 
10, -1.28442, 1, 0, 0.492814,-99) , 
6, -0.142852, 1, 0, 0.510099,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.124341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.65756, 0, 1, 0.563393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450251,-99) , 
0, 0.502309, 0, 0, 0.497204,-99) , 
0, 0.499045, 1, 0, 0.535437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563034,-99) , 
NN(
0, 
0, 
-1, 13.3135, 1, -1, 0.425983,-99) , 
8, 14.449, 0, 0, 0.45684,-99) , 
12, -1.58353, 0, 0, 0.520998,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.107228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.29437, 0, 1, 0.551508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435909,-99) , 
6, 0.902893, 0, 0, 0.495122,-99) , 
6, 0.843127, 1, 0, 0.521574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595071,-99) , 
NN(
0, 
0, 
-1, 8.65912, 1, -1, 0.428599,-99) , 
2, -0.0876078, 1, 0, 0.443832,-99) , 
8, 9.80974, 0, 0, 0.497022,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.114437);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.604003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471877,-99) , 
6, -0.14292, 1, 0, 0.4973,-99) , 
0, 0.499043, 0, 0, 0.538892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456629,-99) , 
10, 0.551831, 1, 0, 0.464596,-99) , 
3, 3.9394, 1, 0, 0.479614,-99) , 
10, 0.429371, 1, 0, 0.502271,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.101263);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.657858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378238,-99) , 
10, 0.146672, 0, 0, 0.537311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424441,-99) , 
4, 3.34165, 1, 0, 0.485219,-99) , 
11, -2.80586, 0, 0, 0.515614,-99) , 
10, -1.28401, 1, 0, 0.521563,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0921336);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481808,-99) , 
10, 0.0272578, 1, 0, 0.500081,-99) , 
NN(
0, 
0, 
-1, 7.98524, 0, -1, 0.448055,-99) , 
0, 0.499996, 0, 0, 0.46562,-99) , 
11, -4.52584, 1, 0, 0.47129,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.108517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492968, 1, 1, 0.535049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407127,-99) , 
0, 0.491426, 0, 0, 0.523966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.639432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443952,-99) , 
10, -0.468006, 0, 0, 0.483724,-99) , 
NN(
0, 
0, 
-1, -1.49713, 0, -1, 0.350889,-99) , 
10, -0.201657, 1, 0, 0.446399,-99) , 
12, -1.31203, 0, 0, 0.503998,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0647775);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481645,-99) , 
6, 0.546486, 1, 0, 0.497173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419957,-99) , 
6, -0.904763, 0, 0, 0.490009,-99) , 
10, -1.28422, 1, 0, 0.49585,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0825893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6272,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461558,-99) , 
12, -0.0330627, 1, 0, 0.516015,-99) , 
NN(
0, 
0, 
-1, 10.1941, 1, -1, 0.461334,-99) , 
8, 11.5964, 0, 0, 0.49014,-99) , 
8, 20.4202, 0, 0, 0.494356,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0977033);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.644479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489584,-99) , 
11, -2.61883, 0, 0, 0.511468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439585,-99) , 
1, -0.00347373, 1, 0, 0.453589,-99) , 
12, -0.354724, 1, 0, 0.488652,-99) , 
10, 2.1431, 0, 0, 0.499353,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0797216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.676961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474052,-99) , 
3, 12.1103, 1, 0, 0.507173,-99) , 
4, 3.2527, 0, 0, 0.515324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461435,-99) , 
8, 15.2028, 1, 0, 0.497227,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384695,-99) , 
6, 0.523836, 1, 0, 0.432881,-99) , 
8, 13.0698, 0, 0, 0.461306,-99) , 
4, 3.58206, 1, 0, 0.500255,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0889833);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48989,-99) , 
1, -0.00101961, 1, 0, 0.516784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311925,-99) , 
7, 0.00715696, 1, 0, 0.508199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479937,-99) , 
3, 4.30818, 0, 0, 0.501248,-99) , 
NN(
0, 
0, 
-1, 7.14349, 0, -1, 0.394463,-99) , 
6, -0.463686, 1, 0, 0.464306,-99) , 
8, 9.72529, 0, 0, 0.494748,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0937198);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.1545, 1, 1, 0.610344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482533,-99) , 
0, 0.50326, 1, 0, 0.53147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410198,-99) , 
0, 0.498906, 1, 0, 0.466,-99) , 
3, 14.1844, 1, 0, 0.518187,-99) , 
0, 0.492378, 1, 0, 0.526994,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.113391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.6572, 1, 1, 0.562524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478252,-99) , 
7, 0.00256887, 0, 0, 0.50227,-99) , 
12, -1.11046, 0, 0, 0.542848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472714,-99) , 
10, 0.429454, 0, 0, 0.520266,-99) , 
NN(
0, 
0, 
-1, 9.56742, 0, -1, 0.429187,-99) , 
6, 0.023084, 1, 0, 0.477724,-99) , 
3, 11.0511, 0, 0, 0.512946,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0819234);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.686923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48455,-99) , 
10, 0.302137, 1, 0, 0.526867,-99) , 
NN(
0, 
0, 
-1, 0.577207, 0, -1, 0.470061,-99) , 
11, -2.32602, 1, 0, 0.505722,-99) , 
8, 20.2263, 0, 0, 0.510916,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0611674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.684442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470186,-99) , 
10, -1.25723, 0, 0, 0.527261,-99) , 
0, 0.498094, 1, 0, 0.589661,-99) , 
NN(
NN(
0, 
0, 
-1, -1.62477, 1, 1, 0.519162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385196,-99) , 
12, -1.89112, 0, 0, 0.515086,-99) , 
10, -0.713072, 1, 0, 0.522489,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0796275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.39681, 0, 1, 0.616594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483047,-99) , 
4, 1.67659, 1, 0, 0.518842,-99) , 
0, 0.498094, 1, 0, 0.562523,-99) , 
NN(
NN(
0, 
0, 
-1, 0.505571, 0, 1, 0.532016,-99) , 
NN(
0, 
0, 
-1, -0.853331, 0, -1, 0.474635,-99) , 
0, 0.499042, 0, 0, 0.498883,-99) , 
12, -1.28859, 1, 0, 0.514599,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0637649);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649458,-99) , 
NN(
NN(
0, 
0, 
-1, -2.54256, 1, 1, 0.574674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466994,-99) , 
6, 0.90473, 1, 0, 0.507807,-99) , 
8, 16.4721, 0, 0, 0.516682,-99) , 
10, -1.57004, 1, 0, 0.520847,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.111746);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478883,-99) , 
0, 0.493329, 0, 0, 0.583318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476036,-99) , 
0, 0.499038, 0, 0, 0.501365,-99) , 
3, 10.8648, 1, 0, 0.521034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440072,-99) , 
3, 4.2451, 0, 0, 0.473396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.291579,-99) , 
6, -0.372151, 1, 0, 0.451088,-99) , 
3, 6.94213, 0, 0, 0.503415,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0656794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490338, 0, 1, 0.610089,-99) , 
NN(
0, 
0, 
-1, -0.142715, 0, -1, 0.480615,-99) , 
0, 0.491426, 1, 0, 0.489471,-99) , 
NN(
0, 
0, 
-1, -1.62736, 1, -1, 0.343152,-99) , 
12, -2.6334, 0, 0, 0.481441,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.074115);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484636,-99) , 
0, 0.501902, 1, 0, 0.59628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463185,-99) , 
0, 0.497091, 0, 0, 0.509783,-99) , 
6, 0.52373, 1, 0, 0.534408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487872,-99) , 
0, 0.491426, 1, 0, 0.49451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.390345,-99) , 
10, 0.283373, 0, 0, 0.486563,-99) , 
12, -0.907825, 1, 0, 0.503693,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0755103);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499037, 1, 1, 0.569218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486395,-99) , 
0, 0.499996, 1, 0, 0.518471,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415812,-99) , 
10, -0.0166757, 1, 0, 0.465502,-99) , 
12, -0.888912, 0, 0, 0.501679,-99) , 
11, -4.13326, 1, 0, 0.507874,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.111352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431362,-99) , 
2, 0.0897366, 1, 0, 0.541335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422069,-99) , 
1, 0.00096188, 1, 0, 0.47248,-99) , 
0, 0.49469, 0, 0, 0.514796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373902,-99) , 
4, 0.729859, 0, 0, 0.502156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411634,-99) , 
4, 4.18524, 0, 0, 0.438779,-99) , 
6, 0.523719, 1, 0, 0.462345,-99) , 
0, 0.499043, 1, 0, 0.492308,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.125616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496587,-99) , 
12, -2.119, 0, 0, 0.55614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426855,-99) , 
11, -2.64811, 1, 0, 0.543963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468019,-99) , 
10, 0.825775, 1, 0, 0.489807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380597,-99) , 
10, 0.856077, 0, 0, 0.433644,-99) , 
11, -2.73965, 0, 0, 0.472946,-99) , 
10, 0.14522, 1, 0, 0.493481,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0707618);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.691033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48603,-99) , 
8, 11.3996, 0, 0, 0.513881,-99) , 
3, 18.1748, 0, 0, 0.520081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413746,-99) , 
2, 0.186305, 1, 0, 0.513687,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0804328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500948, 0, 1, 0.557953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48447,-99) , 
0, 0.503805, 0, 0, 0.494656,-99) , 
7, 0.00182654, 0, 0, 0.521732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391279,-99) , 
7, 0.0127885, 1, 0, 0.517443,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0827283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453726,-99) , 
0, 0.496195, 0, 0, 0.505068,-99) , 
0, 0.490479, 1, 0, 0.511758,-99) , 
NN(
0, 
0, 
-1, 0.959114, 1, -1, 0.451361,-99) , 
6, 0.904685, 1, 0, 0.496334,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0813139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.51369, 1, 1, 0.539508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457919,-99) , 
12, -2.71153, 0, 0, 0.536469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445464,-99) , 
4, 8.21106, 1, 0, 0.530596,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0790685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490339, 0, 1, 0.604724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481392,-99) , 
6, 0.523686, 0, 0, 0.520262,-99) , 
0, 0.49238, 1, 0, 0.528521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467527,-99) , 
4, 3.0037, 1, 0, 0.507263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419402,-99) , 
12, -0.151133, 0, 0, 0.45213,-99) , 
0, 0.498092, 0, 0, 0.479336,-99) , 
9, -951.286, 0, 0, 0.508604,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0834586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.27492, 0, 1, 0.626177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430535,-99) , 
6, 0.469147, 1, 0, 0.513687,-99) , 
3, 10.8783, 0, 0, 0.531277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453963,-99) , 
3, 15.0155, 1, 0, 0.501077,-99) , 
NN(
0, 
0, 
-1, 13.8893, 0, -1, 0.455241,-99) , 
0, 0.499971, 1, 0, 0.486261,-99) , 
6, 0.714141, 1, 0, 0.506969,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0955412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471301,-99) , 
0, 0.501892, 1, 0, 0.562938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419582,-99) , 
6, 0.428631, 1, 0, 0.486466,-99) , 
12, 0.572302, 1, 0, 0.530989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38875,-99) , 
0, 0.491246, 0, 0, 0.497138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.315657,-99) , 
0, 0.504667, 0, 0, 0.407685,-99) , 
0, 0.502853, 1, 0, 0.483258,-99) , 
12, -0.247321, 0, 0, 0.501388,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0846474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466683,-99) , 
3, 14.1592, 0, 0, 0.478903,-99) , 
12, 0.496327, 0, 0, 0.488837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405358,-99) , 
12, 1.00959, 1, 0, 0.481215,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0750212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445699,-99) , 
12, -1.44618, 0, 0, 0.499629,-99) , 
0, 0.491429, 1, 0, 0.506529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522728,-99) , 
NN(
0, 
0, 
-1, 0.000601746, 0, -1, 0.40333,-99) , 
11, -3.12911, 1, 0, 0.44124,-99) , 
2, -0.0750248, 0, 0, 0.495955,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0394238);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615158,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440456,-99) , 
3, 3.7967, 0, 0, 0.494584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342327,-99) , 
12, -2.47459, 0, 0, 0.490415,-99) , 
10, -1.56988, 1, 0, 0.494064,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0863458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469926,-99) , 
1, 0.000955904, 1, 0, 0.554552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46571,-99) , 
13, 8.52715, 0, 0, 0.497461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426774,-99) , 
11, -1.86365, 0, 0, 0.446186,-99) , 
8, 12.9323, 1, 0, 0.4791,-99) , 
3, 16.1629, 0, 0, 0.485754,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0868633);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433286,-99) , 
11, -2.20426, 1, 0, 0.560786,-99) , 
NN(
0, 
0, 
-1, 18.6255, 1, -1, 0.489511,-99) , 
11, -2.80202, 0, 0, 0.505668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469046,-99) , 
11, -2.56812, 1, 0, 0.493404,-99) , 
NN(
0, 
0, 
-1, -2.53964, 0, -1, 0.427519,-99) , 
8, 10.9088, 0, 0, 0.469252,-99) , 
10, 0.711234, 1, 0, 0.487253,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0837914);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.745604,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475846,-99) , 
10, 0.171481, 0, 0, 0.51367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408005,-99) , 
0, 0.497142, 1, 0, 0.45245,-99) , 
2, 0.0483677, 1, 0, 0.500389,-99) , 
10, -1.56954, 1, 0, 0.506716,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0825265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427146,-99) , 
8, 17.773, 1, 0, 0.506346,-99) , 
10, -1.2828, 1, 0, 0.512309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4314,-99) , 
0, 0.500951, 1, 0, 0.5243,-99) , 
NN(
0, 
0, 
-1, -0.888963, 1, -1, 0.36221,-99) , 
6, 0.333318, 1, 0, 0.433,-99) , 
1, -0.00229635, 0, 0, 0.498469,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0742015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474442,-99) , 
4, 4.17042, 1, 0, 0.518753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405617,-99) , 
12, -2.51857, 0, 0, 0.512362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622029,-99) , 
NN(
0, 
0, 
-1, 0.00262265, 1, -1, 0.462265,-99) , 
10, -0.998781, 1, 0, 0.470935,-99) , 
8, 12.3915, 1, 0, 0.492318,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.105506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714165, 1, 1, 0.563571,-99) , 
NN(
0, 
0, 
-1, 7.96152, 0, -1, 0.435287,-99) , 
0, 0.502851, 1, 0, 0.5399,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587894,-99) , 
NN(
0, 
0, 
-1, -2.46398, 0, -1, 0.465533,-99) , 
3, 15.0363, 0, 0, 0.483752,-99) , 
10, 0.715211, 1, 0, 0.510397,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.121625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499988, 1, 1, 0.583165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408364,-99) , 
10, 1.52049, 1, 0, 0.484892,-99) , 
6, -0.0476164, 0, 0, 0.548905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.647505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494593,-99) , 
12, -0.774736, 1, 0, 0.585835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458611,-99) , 
10, -1.2512, 1, 0, 0.468616,-99) , 
1, 0.00309911, 0, 0, 0.480963,-99) , 
12, -0.195837, 0, 0, 0.507167,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0916576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.15422, 0, 1, 0.605741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447981,-99) , 
3, 11.2942, 0, 0, 0.497726,-99) , 
0, 0.497141, 1, 0, 0.540463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479296,-99) , 
4, 3.89064, 0, 0, 0.495241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432782,-99) , 
6, 0.904751, 1, 0, 0.479704,-99) , 
11, -3.60843, 1, 0, 0.491636,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0927444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.752193, 0, 1, 0.608991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471526,-99) , 
8, 13.463, 0, 0, 0.52041,-99) , 
8, 8.4234, 1, 0, 0.547291,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420789,-99) , 
6, 0.143802, 0, 0, 0.545049,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472636,-99) , 
0, 0.493333, 1, 0, 0.482946,-99) , 
2, 0.0705504, 0, 0, 0.492718,-99) , 
0, 0.500948, 0, 0, 0.50745,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0981855);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490246,-99) , 
6, 0.619051, 0, 0, 0.532422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397795,-99) , 
2, 0.148948, 1, 0, 0.470055,-99) , 
2, 0.0823977, 1, 0, 0.523155,-99) , 
NN(
0, 
0, 
-1, 0.238058, 1, -1, 0.445615,-99) , 
12, 0.572965, 1, 0, 0.508696,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.054383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47277,-99) , 
3, 3.87604, 0, 0, 0.532256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414343,-99) , 
0, 0.498804, 0, 0, 0.496321,-99) , 
0, 0.498363, 1, 0, 0.513147,-99) , 
NN(
0, 
0, 
-1, 9.75819, 1, -1, 0.440322,-99) , 
0, 0.491426, 0, 0, 0.507904,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0664903);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.591773,-99) , 
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.522578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444027,-99) , 
10, -0.907547, 1, 0, 0.471154,-99) , 
12, -1.40487, 0, 0, 0.510547,-99) , 
1, 0.00388765, 0, 0, 0.517569,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0892028);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463819,-99) , 
3, 14.9035, 1, 0, 0.550953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478977,-99) , 
4, 0.75447, 1, 0, 0.495277,-99) , 
4, 3.49386, 0, 0, 0.5117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51835,-99) , 
NN(
0, 
0, 
-1, -1.74492, 0, -1, 0.428129,-99) , 
10, 2.17621, 0, 0, 0.457028,-99) , 
12, 0.0939794, 1, 0, 0.495454,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.109953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.69024,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444787,-99) , 
0, 0.499992, 1, 0, 0.505858,-99) , 
3, 10.4177, 0, 0, 0.523399,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459644,-99) , 
2, -0.0242196, 1, 0, 0.482417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414615,-99) , 
12, 0.207999, 1, 0, 0.469687,-99) , 
6, 0.619054, 1, 0, 0.490991,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0945286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.671688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470932,-99) , 
9, -951.286, 0, 0, 0.509311,-99) , 
10, -0.999235, 1, 0, 0.520224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41423,-99) , 
12, -2.11159, 0, 0, 0.518829,-99) , 
NN(
0, 
0, 
-1, -0.78123, 0, -1, 0.460502,-99) , 
11, -3.13156, 1, 0, 0.480238,-99) , 
6, 0.714257, 1, 0, 0.498571,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0762652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503262, 1, 1, 0.593035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462763,-99) , 
4, 3.23384, 1, 0, 0.509106,-99) , 
8, 10.3364, 1, 0, 0.537869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47515,-99) , 
11, -3.5905, 1, 0, 0.484469,-99) , 
3, 18.1727, 0, 0, 0.489711,-99) , 
0, 0.499997, 0, 0, 0.505992,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0641266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486365,-99) , 
10, -1.14577, 0, 0, 0.50875,-99) , 
3, 11.0974, 1, 0, 0.576524,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493138,-99) , 
3, 12.0922, 0, 0, 0.512443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320494,-99) , 
12, -1.90668, 0, 0, 0.506322,-99) , 
10, -0.711726, 1, 0, 0.513883,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0669268);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.638301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455482,-99) , 
10, 0.463783, 0, 0, 0.565387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.587896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496396,-99) , 
11, -4.38818, 1, 0, 0.501607,-99) , 
8, 16.4349, 0, 0, 0.510638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430237,-99) , 
12, -0.998231, 0, 0, 0.48118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4013,-99) , 
10, 1.28752, 1, 0, 0.458779,-99) , 
4, 3.56867, 1, 0, 0.496608,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.107148);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499663,-99) , 
8, 14.7995, 1, 0, 0.550799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456352,-99) , 
9, -951.286, 0, 0, 0.502359,-99) , 
3, 8.94721, 0, 0, 0.536308,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472965,-99) , 
8, 4.64205, 0, 0, 0.527424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428529,-99) , 
1, 0.00151243, 0, 0, 0.451565,-99) , 
8, 11.2324, 1, 0, 0.482923,-99) , 
0, 0.495237, 0, 0, 0.523195,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0625859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.708767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414481,-99) , 
12, -2.68145, 0, 0, 0.523991,-99) , 
8, 14.305, 0, 0, 0.562985,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392482,-99) , 
12, -1.52609, 0, 0, 0.500214,-99) , 
NN(
0, 
0, 
-1, -3.81533, 0, -1, 0.369968,-99) , 
11, -3.7058, 0, 0, 0.4913,-99) , 
11, -3.96135, 1, 0, 0.500315,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0957091);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.530627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376877,-99) , 
12, -2.80305, 0, 0, 0.524996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430645,-99) , 
2, -0.0372223, 1, 0, 0.477249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389369,-99) , 
12, 0.204846, 1, 0, 0.456193,-99) , 
4, 3.35979, 1, 0, 0.504105,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.115643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 16.0758, 0, 1, 0.61644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449701,-99) , 
2, 0.0127292, 0, 0, 0.492387,-99) , 
8, 16.9524, 1, 0, 0.550619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454321,-99) , 
3, 3.08095, 0, 0, 0.531247,-99) , 
NN(
0, 
0, 
-1, -2.36892, 0, -1, 0.458968,-99) , 
3, 6.18773, 1, 0, 0.478522,-99) , 
8, 14.907, 0, 0, 0.493161,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0783308);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.21814, 1, 1, 0.570315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391834,-99) , 
12, -2.4903, 0, 0, 0.506631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4193,-99) , 
12, 0.247286, 0, 0, 0.448237,-99) , 
1, -0.0014254, 0, 0, 0.490555,-99) , 
3, 15.1165, 0, 0, 0.501442,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0784278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.67977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487507,-99) , 
3, 11.1126, 1, 0, 0.569557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474939,-99) , 
10, 0.844018, 1, 0, 0.502993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384212,-99) , 
10, -0.862561, 1, 0, 0.433506,-99) , 
12, -1.74294, 0, 0, 0.496394,-99) , 
11, -4.37973, 1, 0, 0.50085,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0652041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.677902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49954,-99) , 
10, 0.731222, 1, 0, 0.575629,-99) , 
NN(
NN(
0, 
0, 
-1, -2.49202, 1, 1, 0.541716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461791,-99) , 
6, 0.618921, 1, 0, 0.482728,-99) , 
3, 15.2315, 0, 0, 0.490693,-99) , 
0, 0.492378, 1, 0, 0.498889,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0647752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482732,-99) , 
11, -3.44052, 0, 0, 0.519211,-99) , 
NN(
0, 
0, 
-1, 2.09628, 1, -1, 0.443828,-99) , 
3, 16.1878, 1, 0, 0.512976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459307,-99) , 
10, 2.14286, 1, 0, 0.507479,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0741762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441555,-99) , 
2, 0.0506084, 1, 0, 0.545919,-99) , 
NN(
0, 
0, 
-1, 20.0479, 1, -1, 0.489919,-99) , 
11, -2.24863, 0, 0, 0.509994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380097,-99) , 
2, -0.187468, 0, 0, 0.501764,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.116246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.03257, 1, 1, 0.556351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427146,-99) , 
7, 0.00223163, 0, 0, 0.46672,-99) , 
2, -0.0954201, 0, 0, 0.544789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477118,-99) , 
3, 12.9958, 0, 0, 0.501689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407565,-99) , 
11, -2.21176, 1, 0, 0.468455,-99) , 
0, 0.500948, 1, 0, 0.523286,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0662026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492363,-99) , 
9, -951.286, 1, 0, 0.510557,-99) , 
3, 17.0929, 0, 0, 0.518969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573757,-99) , 
NN(
0, 
0, 
-1, 0.524133, 0, -1, 0.463828,-99) , 
10, -0.99889, 1, 0, 0.470219,-99) , 
0, 0.498091, 0, 0, 0.49469,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0705533);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.56625, 0, 1, 0.541631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47734,-99) , 
4, 6.89592, 0, 0, 0.484485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371707,-99) , 
0, 0.491425, 0, 0, 0.477022,-99) , 
3, 10.078, 1, 0, 0.498145,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0897642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.583932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461929,-99) , 
3, 14.1592, 1, 0, 0.5107,-99) , 
12, -1.81347, 1, 0, 0.521857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405054,-99) , 
11, -1.42968, 0, 0, 0.4741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415804,-99) , 
12, 0.899775, 1, 0, 0.446734,-99) , 
11, -1.743, 1, 0, 0.505769,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0463506);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499042, 0, 1, 0.598663,-99) , 
NN(
NN(
0, 
0, 
-1, 0.645878, 1, 1, 0.539805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443749,-99) , 
12, 0.0331264, 1, 0, 0.49631,-99) , 
10, 1.64217, 0, 0, 0.505259,-99) , 
11, -4.39662, 1, 0, 0.510482,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0738144);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487317,-99) , 
10, 0.871992, 0, 0, 0.523179,-99) , 
11, -3.25463, 1, 0, 0.557768,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.520337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389311,-99) , 
10, -0.305175, 1, 0, 0.459727,-99) , 
10, 0.143749, 0, 0, 0.500371,-99) , 
2, 0.0810799, 0, 0, 0.508612,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0832179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437659,-99) , 
0, 0.505257, 0, 0, 0.500993,-99) , 
13, 9.95058, 0, 0, 0.544685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449735,-99) , 
4, 3.39388, 1, 0, 0.500559,-99) , 
NN(
0, 
0, 
-1, 11.4524, 1, -1, 0.460533,-99) , 
8, 12.476, 0, 0, 0.479145,-99) , 
0, 0.503805, 0, 0, 0.486284,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0539085);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.4543, 1, 1, 0.618238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49186,-99) , 
11, -2.49378, 1, 0, 0.507917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396506,-99) , 
12, -0.171924, 0, 0, 0.447369,-99) , 
1, 0.00388765, 1, 0, 0.501393,-99) , 
10, -0.998828, 1, 0, 0.508793,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.107575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462869,-99) , 
11, -1.30061, 1, 0, 0.57862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47996,-99) , 
0, 0.500002, 1, 0, 0.543528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470062,-99) , 
13, 12.9004, 1, 0, 0.49879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38807,-99) , 
11, -2.82394, 0, 0, 0.424494,-99) , 
8, 7.17841, 0, 0, 0.482338,-99) , 
11, -2.14628, 0, 0, 0.502004,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0897053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499038, 0, 1, 0.53704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430486,-99) , 
11, -2.66665, 0, 0, 0.527016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490607,-99) , 
10, -1.25745, 1, 0, 0.514981,-99) , 
NN(
0, 
0, 
-1, -2.91679, 0, -1, 0.438358,-99) , 
11, -3.4125, 1, 0, 0.471038,-99) , 
12, -0.388794, 0, 0, 0.495684,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0853751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482227,-99) , 
0, 0.497141, 1, 0, 0.507184,-99) , 
3, 16.2566, 0, 0, 0.515322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582465,-99) , 
NN(
0, 
0, 
-1, -2.00071, 0, -1, 0.456604,-99) , 
0, 0.502853, 0, 0, 0.474563,-99) , 
10, 0.714941, 1, 0, 0.494297,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0666863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.125436, 1, 1, 0.566055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43122,-99) , 
1, -0.000159079, 0, 0, 0.474796,-99) , 
12, -1.81452, 0, 0, 0.552304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422047,-99) , 
3, 3.84971, 0, 0, 0.491533,-99) , 
0, 0.490568, 1, 0, 0.497934,-99) , 
0, 0.499997, 0, 0, 0.516381,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0987754);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 0, 1, 0.607636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485565,-99) , 
6, -0.909319, 0, 0, 0.550241,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.458461,-99) , 
6, -0.619054, 1, 0, 0.474904,-99) , 
3, 17.2641, 0, 0, 0.482867,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.092739);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.81605e-05, 1, 1, 0.629803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46177,-99) , 
0, 0.501811, 0, 0, 0.525942,-99) , 
3, 13.1692, 0, 0, 0.550768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478354,-99) , 
11, -2.42535, 0, 0, 0.498494,-99) , 
NN(
0, 
0, 
-1, 2.03322, 0, -1, 0.401853,-99) , 
8, 17.3798, 1, 0, 0.487725,-99) , 
0, 0.499998, 0, 0, 0.50896,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0938355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419736,-99) , 
9, -1.56127, 0, 0, 0.52068,-99) , 
6, -0.714154, 1, 0, 0.535688,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472648,-99) , 
8, 12.4449, 0, 0, 0.501072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404341,-99) , 
6, -0.809288, 0, 0, 0.479945,-99) , 
9, -951.286, 0, 0, 0.513026,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0990675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.67835, 1, 1, 0.553037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422783,-99) , 
0, 0.492376, 0, 0, 0.535973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450658,-99) , 
7, 0.00220276, 0, 0, 0.470705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.342532,-99) , 
7, 0.00925149, 1, 0, 0.464466,-99) , 
9, -951.286, 1, 0, 0.49056,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0673531);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.48534, 0, 1, 0.582076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492354,-99) , 
9, -951.286, 1, 0, 0.517504,-99) , 
NN(
0, 
0, 
-1, 1.04255, 0, -1, 0.478175,-99) , 
12, -0.262251, 1, 0, 0.49818,-99) , 
10, -0.427493, 1, 0, 0.511089,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.109637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.64927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493266,-99) , 
10, -0.0886667, 1, 0, 0.575668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347924,-99) , 
11, -4.20971, 1, 0, 0.494879,-99) , 
12, -1.9809, 0, 0, 0.54585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49133,-99) , 
0, 0.490336, 0, 0, 0.553066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455425,-99) , 
11, -1.26484, 0, 0, 0.465798,-99) , 
0, 0.492378, 1, 0, 0.47527,-99) , 
12, -1.18457, 1, 0, 0.493786,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0828856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.346944, 1, 1, 0.53111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385024,-99) , 
12, -2.69121, 0, 0, 0.52437,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48567,-99) , 
4, 0.970028, 0, 0, 0.51968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389617,-99) , 
4, 2.06773, 1, 0, 0.458467,-99) , 
6, -0.71429, 0, 0, 0.512605,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0834549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.605474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412714,-99) , 
4, 0.606859, 0, 0, 0.505665,-99) , 
4, 5.32765, 0, 0, 0.514136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47645,-99) , 
11, -3.37356, 1, 0, 0.497397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444998,-99) , 
8, 13.0006, 0, 0, 0.477571,-99) , 
6, 0.71427, 1, 0, 0.494746,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0806038);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497412,-99) , 
0, 0.495764, 1, 0, 0.527173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402291,-99) , 
10, 0.447627, 1, 0, 0.454081,-99) , 
0, 0.491108, 0, 0, 0.517334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36295,-99) , 
9, -1.27777, 0, 0, 0.489996,-99) , 
NN(
0, 
0, 
-1, 0.501717, 0, -1, 0.439714,-99) , 
9, -951.286, 0, 0, 0.469956,-99) , 
0, 0.498091, 1, 0, 0.49335,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0782004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.662444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470651,-99) , 
6, 0.836742, 1, 0, 0.495641,-99) , 
3, 5.17548, 1, 0, 0.501126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428121,-99) , 
10, -0.127684, 0, 0, 0.514151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.376741,-99) , 
2, 0.0145604, 1, 0, 0.457752,-99) , 
6, -0.714072, 0, 0, 0.493561,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0692323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.9252, 1, 1, 0.573536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439865,-99) , 
11, -3.80523, 0, 0, 0.490059,-99) , 
8, 13.5147, 0, 0, 0.500986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398365,-99) , 
12, -1.85571, 0, 0, 0.501367,-99) , 
NN(
0, 
0, 
-1, 17.4413, 1, -1, 0.409378,-99) , 
11, -2.49106, 1, 0, 0.453143,-99) , 
8, 14.7416, 1, 0, 0.489715,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0773253);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00243377, 0, 1, 0.540797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472454,-99) , 
8, 16.025, 0, 0, 0.485914,-99) , 
10, 0.143916, 1, 0, 0.50235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352993,-99) , 
7, 0.0127887, 1, 0, 0.497251,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0525408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.305673, 1, 1, 0.518407,-99) , 
NN(
0, 
0, 
-1, -2.9836, 1, -1, 0.463238,-99) , 
10, -0.143009, 0, 0, 0.505295,-99) , 
NN(
0, 
0, 
-1, 18.6, 0, -1, 0.422475,-99) , 
8, 18.8986, 1, 0, 0.500037,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0586356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.650662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487661,-99) , 
9, -951.286, 1, 0, 0.529803,-99) , 
12, -1.68092, 0, 0, 0.558338,-99) , 
NN(
NN(
0, 
0, 
-1, 13.6145, 0, 1, 0.510062,-99) , 
NN(
0, 
0, 
-1, -2.27037, 1, -1, 0.449604,-99) , 
3, 13.1221, 1, 0, 0.493234,-99) , 
11, -3.72463, 1, 0, 0.503766,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.14165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339858,-99) , 
7, 0.00553458, 1, 0, 0.558337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438162,-99) , 
8, 5.67706, 1, 0, 0.487185,-99) , 
3, 11.0722, 0, 0, 0.525915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428952,-99) , 
10, 1.85751, 1, 0, 0.512032,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0995708);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408445,-99) , 
12, -2.81462, 0, 0, 0.521288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416305,-99) , 
4, 2.35849, 0, 0, 0.441508,-99) , 
8, 5.74072, 0, 0, 0.504133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472388,-99) , 
12, -0.917187, 0, 0, 0.535879,-99) , 
NN(
0, 
0, 
-1, 15.8053, 1, -1, 0.36837,-99) , 
8, 11.9182, 1, 0, 0.447504,-99) , 
2, -0.0413661, 0, 0, 0.491638,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0812796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416118,-99) , 
7, 0.00869154, 1, 0, 0.521321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438544,-99) , 
6, -0.904741, 0, 0, 0.513327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44744,-99) , 
2, 0.11873, 1, 0, 0.496777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37487,-99) , 
2, 0.156543, 1, 0, 0.429215,-99) , 
2, 0.090383, 1, 0, 0.502054,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.100653);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0337368, 1, 1, 0.610683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478877,-99) , 
6, 0.523718, 1, 0, 0.545579,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.642254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496114,-99) , 
3, 16.1769, 1, 0, 0.543299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441391,-99) , 
11, -3.41821, 1, 0, 0.459171,-99) , 
8, 16.4112, 0, 0, 0.47176,-99) , 
1, -0.00229635, 1, 0, 0.482759,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.113454);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.631552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429513,-99) , 
4, 1.17104, 1, 0, 0.477288,-99) , 
4, 2.56289, 0, 0, 0.52164,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463867,-99) , 
6, 0.451242, 1, 0, 0.473753,-99) , 
NN(
0, 
0, 
-1, 1.85781, 0, -1, 0.403869,-99) , 
11, -1.76304, 1, 0, 0.459874,-99) , 
6, -0.047635, 1, 0, 0.474397,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.104657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.0025, 0, 1, 0.542459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454321,-99) , 
12, 0.270327, 1, 0, 0.525542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431772,-99) , 
0, 0.495235, 0, 0, 0.512431,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.411112,-99) , 
2, -0.0169797, 0, 0, 0.472769,-99) , 
6, 0.619036, 0, 0, 0.503785,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0580706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.709436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493135,-99) , 
4, 3.39525, 0, 0, 0.522476,-99) , 
1, 0.00239404, 0, 0, 0.539339,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386378,-99) , 
12, -2.46373, 0, 0, 0.496651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413493,-99) , 
10, -0.11678, 1, 0, 0.433877,-99) , 
4, 4.16621, 1, 0, 0.484478,-99) , 
8, 13.7791, 0, 0, 0.50097,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0737623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.44511, 1, 1, 0.539078,-99) , 
NN(
0, 
0, 
-1, 0.497775, 1, -1, 0.477767,-99) , 
12, -0.106128, 0, 0, 0.497978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533548,-99) , 
NN(
0, 
0, 
-1, 0.504213, 0, -1, 0.401548,-99) , 
12, -1.2189, 1, 0, 0.433516,-99) , 
0, 0.502852, 1, 0, 0.487386,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0884786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 17.8349, 0, 1, 0.604525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404208,-99) , 
0, 0.497136, 1, 0, 0.472576,-99) , 
4, 2.64636, 1, 0, 0.545023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435274,-99) , 
12, -1.50125, 0, 0, 0.488032,-99) , 
NN(
0, 
0, 
-1, -2.73292, 1, -1, 0.421354,-99) , 
3, 11.7641, 1, 0, 0.469019,-99) , 
3, 14.125, 0, 0, 0.483789,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0620581);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497524,-99) , 
11, -2.73376, 1, 0, 0.523418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436232,-99) , 
6, 0.714047, 1, 0, 0.486312,-99) , 
3, 12.0661, 0, 0, 0.5017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446609,-99) , 
12, 0.929733, 1, 0, 0.496121,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0653435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491302,-99) , 
8, 13.6278, 0, 0, 0.506156,-99) , 
NN(
0, 
0, 
-1, 0.853208, 1, -1, 0.425837,-99) , 
8, 17.3104, 1, 0, 0.494986,-99) , 
NN(
0, 
0, 
-1, 3.1347, 1, -1, 0.442548,-99) , 
6, -0.52383, 0, 0, 0.483944,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0708339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.715248, 1, 1, 0.599975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413264,-99) , 
0, 0.496187, 0, 0, 0.493154,-99) , 
3, 11.0807, 1, 0, 0.528197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480706,-99) , 
8, 16.4349, 0, 0, 0.487838,-99) , 
4, 0.439328, 1, 0, 0.492947,-99) , 
4, 3.56867, 0, 0, 0.502331,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.097312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458548,-99) , 
8, 17.3547, 1, 0, 0.516276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412479,-99) , 
12, -1.94217, 0, 0, 0.503962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.612819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473995,-99) , 
3, 9.63793, 0, 0, 0.497669,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.407678,-99) , 
2, -0.00858989, 0, 0, 0.456276,-99) , 
6, 0.619036, 0, 0, 0.484935,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0986034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.6533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476984,-99) , 
10, 0.030944, 1, 0, 0.505472,-99) , 
11, -2.35885, 0, 0, 0.518207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43604,-99) , 
0, 0.498078, 0, 0, 0.480994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373736,-99) , 
10, 1.07009, 0, 0, 0.461222,-99) , 
12, -0.226582, 1, 0, 0.496063,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0676063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44619,-99) , 
4, 3.54644, 1, 0, 0.496265,-99) , 
4, 6.12469, 0, 0, 0.503413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540534,-99) , 
NN(
0, 
0, 
-1, -0.000762592, 0, -1, 0.447768,-99) , 
6, 0.854889, 1, 0, 0.465105,-99) , 
6, 0.809506, 1, 0, 0.487591,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0933257);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.14449, 0, 1, 0.537129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401485,-99) , 
13, 9.91158, 0, 0, 0.48246,-99) , 
10, 1.28471, 1, 0, 0.51838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422888,-99) , 
6, 0.954653, 1, 0, 0.466526,-99) , 
6, 0.904733, 1, 0, 0.505788,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0598261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.706853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492116,-99) , 
11, -2.54633, 1, 0, 0.565945,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482686,-99) , 
0, 0.503986, 0, 0, 0.48932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401503,-99) , 
0, 0.505709, 1, 0, 0.48473,-99) , 
3, 16.2112, 0, 0, 0.490943,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0440743);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498118, 1, 1, 0.588901,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494002,-99) , 
6, -0.904743, 1, 0, 0.50019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375958,-99) , 
7, 0.0127888, 1, 0, 0.495913,-99) , 
8, 17.7094, 0, 0, 0.504612,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0898031);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486912,-99) , 
4, 3.59089, 1, 0, 0.552284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492222,-99) , 
11, -3.55278, 1, 0, 0.510792,-99) , 
9, -951.286, 0, 0, 0.535943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450851,-99) , 
8, 10.9535, 1, 0, 0.479824,-99) , 
3, 17.2204, 0, 0, 0.487978,-99) , 
0, 0.497139, 1, 0, 0.506924,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0649171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 14.1146, 1, 1, 0.533451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471865,-99) , 
4, 3.33695, 0, 0, 0.486318,-99) , 
8, 13.2966, 0, 0, 0.501721,-99) , 
NN(
0, 
0, 
-1, 0.498071, 1, -1, 0.425408,-99) , 
8, 19.0202, 1, 0, 0.496901,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.103203);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00216509, 0, 1, 0.601485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477753,-99) , 
12, 0.759819, 0, 0, 0.517427,-99) , 
12, 0.369321, 1, 0, 0.547287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331969,-99) , 
9, -1.56281, 0, 0, 0.511849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426087,-99) , 
10, -0.346474, 1, 0, 0.452274,-99) , 
9, -951.286, 0, 0, 0.4876,-99) , 
10, 1.28615, 0, 0, 0.504747,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0841409);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.50157, 1, 1, 0.530524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422126,-99) , 
10, -0.297036, 0, 0, 0.524778,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422018,-99) , 
12, -2.26191, 0, 0, 0.473919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.303538,-99) , 
10, -0.271998, 1, 0, 0.441445,-99) , 
12, -1.5536, 0, 0, 0.509466,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0919676);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46814,-99) , 
6, -0.872778, 0, 0, 0.551759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475984,-99) , 
3, 13.8411, 0, 0, 0.498235,-99) , 
6, 0.333367, 1, 0, 0.51173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469428,-99) , 
12, 0.816728, 1, 0, 0.496465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397632,-99) , 
10, 1.68522, 0, 0, 0.46322,-99) , 
12, 0.137926, 1, 0, 0.497434,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.100204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483413,-99) , 
11, -2.50375, 1, 0, 0.531671,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43798,-99) , 
4, 2.14988, 1, 0, 0.522854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4508,-99) , 
11, -1.743, 0, 0, 0.462868,-99) , 
8, 5.71088, 1, 0, 0.476861,-99) , 
6, 0.904733, 0, 0, 0.490564,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.108809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.50955, 1, 1, 0.540195,-99) , 
NN(
0, 
0, 
-1, 0.00220742, 1, -1, 0.452164,-99) , 
6, 0.238159, 0, 0, 0.516027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397455,-99) , 
3, 14.1527, 0, 0, 0.416113,-99) , 
2, -0.0567665, 1, 0, 0.445263,-99) , 
0, 0.500948, 1, 0, 0.495265,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0870458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.342, 0, 1, 0.55173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451833,-99) , 
3, 12.0165, 0, 0, 0.496372,-99) , 
8, 11.2346, 1, 0, 0.516374,-99) , 
NN(
0, 
0, 
-1, 0.543672, 0, -1, 0.45212,-99) , 
11, -2.28419, 1, 0, 0.49261,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0802271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.714755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479585,-99) , 
12, 0.440901, 0, 0, 0.515449,-99) , 
12, -1.56535, 1, 0, 0.536875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463538,-99) , 
6, 0.700659, 0, 0, 0.503524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283657,-99) , 
10, -1.17695, 1, 0, 0.412178,-99) , 
12, -2.18537, 0, 0, 0.495753,-99) , 
6, -0.0476333, 1, 0, 0.505572,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0488679);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.623437,-99) , 
NN(
NN(
0, 
0, 
-1, -3.92699, 1, 1, 0.512237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401088,-99) , 
10, -1.25763, 1, 0, 0.464402,-99) , 
10, -0.713603, 0, 0, 0.506327,-99) , 
0, 0.489521, 1, 0, 0.509784,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0710731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.648872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448909,-99) , 
10, 0.12979, 0, 0, 0.506757,-99) , 
3, 4.32144, 0, 0, 0.534228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493008,-99) , 
11, -2.44478, 0, 0, 0.508307,-99) , 
NN(
0, 
0, 
-1, 11.7686, 0, -1, 0.457595,-99) , 
12, -0.079497, 1, 0, 0.492537,-99) , 
6, -0.333344, 1, 0, 0.501121,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.089521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.81709, 0, 1, 0.594316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451757,-99) , 
6, 0.883319, 1, 0, 0.485573,-99) , 
6, 0.388081, 1, 0, 0.497802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473866,-99) , 
8, 3.8372, 1, 0, 0.521724,-99) , 
NN(
0, 
0, 
-1, 0.0243814, 1, -1, 0.403693,-99) , 
0, 0.499049, 1, 0, 0.457382,-99) , 
8, 7.06791, 0, 0, 0.487894,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0902207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.13043, 0, 1, 0.594926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464669,-99) , 
0, 0.494104, 1, 0, 0.49677,-99) , 
0, 0.499998, 0, 0, 0.533323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.649528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453291,-99) , 
9, -951.286, 1, 0, 0.469843,-99) , 
8, 20.4276, 0, 0, 0.477138,-99) , 
6, 0.333328, 1, 0, 0.493377,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0758771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 17.9132, 1, 1, 0.587139,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453238,-99) , 
3, 13.5667, 1, 0, 0.505209,-99) , 
NN(
0, 
0, 
-1, 3.90104, 1, -1, 0.457444,-99) , 
3, 9.30465, 0, 0, 0.489015,-99) , 
3, 16.1906, 0, 0, 0.496514,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0510215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.69544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493111,-99) , 
6, 0.3329, 0, 0, 0.507765,-99) , 
12, -1.03358, 1, 0, 0.562228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591924,-99) , 
NN(
0, 
0, 
-1, 4.92278, 0, -1, 0.484586,-99) , 
11, -4.52584, 1, 0, 0.489628,-99) , 
2, -0.0809292, 1, 0, 0.499789,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.0644028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 15.1111, 1, 1, 0.612365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482294,-99) , 
8, 12.1835, 1, 0, 0.529596,-99) , 
3, 13.154, 0, 0, 0.545754,-99) , 
NN(
NN(
0, 
0, 
-1, 0.713825, 1, 1, 0.537007,-99) , 
NN(
0, 
0, 
-1, 2.22582, 1, -1, 0.479326,-99) , 
4, 4.14964, 0, 0, 0.492415,-99) , 
1, 0.00145585, 0, 0, 0.506553,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0661045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.184693, 1, 1, 0.513968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354044,-99) , 
9, -951.286, 1, 0, 0.449814,-99) , 
6, -0.523727, 0, 0, 0.502371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514431,-99) , 
NN(
0, 
0, 
-1, 0.00291881, 0, -1, 0.425966,-99) , 
6, -0.14263, 1, 0, 0.457546,-99) , 
12, 0.180798, 1, 0, 0.490876,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0610757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621737,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472385,-99) , 
12, 0.0169046, 1, 0, 0.504016,-99) , 
0, 0.490474, 1, 0, 0.50884,-99) , 
NN(
0, 
0, 
-1, 12.9557, 1, -1, 0.406497,-99) , 
12, -2.43088, 0, 0, 0.502622,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0939045);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.559578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44936,-99) , 
9, -951.287, 0, 0, 0.485217,-99) , 
12, -0.0135944, 1, 0, 0.526976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411355,-99) , 
12, -1.55038, 0, 0, 0.494575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402921,-99) , 
8, 11.6663, 0, 0, 0.478898,-99) , 
6, 0.619032, 1, 0, 0.497414,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.100994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493013, 0, 1, 0.572639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405813,-99) , 
13, 11.8011, 1, 0, 0.491357,-99) , 
0, 0.494283, 1, 0, 0.50762,-99) , 
NN(
0, 
0, 
-1, 20.6464, 1, -1, 0.431052,-99) , 
8, 12.429, 1, 0, 0.471776,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0603609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491356,-99) , 
8, 9.3698, 1, 0, 0.528129,-99) , 
NN(
0, 
0, 
-1, -2.00916, 1, -1, 0.481962,-99) , 
10, 1.28615, 0, 0, 0.495645,-99) , 
NN(
0, 
0, 
-1, 0.00168203, 1, -1, 0.404045,-99) , 
3, 17.1937, 1, 0, 0.488729,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0925332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00222782, 0, 1, 0.587681,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488527,-99) , 
10, 1.28371, 0, 0, 0.504736,-99) , 
6, 0.727903, 1, 0, 0.521934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372689,-99) , 
10, -0.720527, 0, 0, 0.496927,-99) , 
NN(
0, 
0, 
-1, 9.17228, 0, -1, 0.377424,-99) , 
6, 0.0203882, 1, 0, 0.465881,-99) , 
6, 0.428617, 0, 0, 0.502446,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0754284);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466926,-99) , 
0, 0.493326, 0, 0, 0.545037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479986,-99) , 
10, 1.85572, 0, 0, 0.490475,-99) , 
8, 13.2729, 0, 0, 0.50829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375399,-99) , 
8, 20.3278, 1, 0, 0.502441,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.103062);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 10.8573, 1, 1, 0.619338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482201,-99) , 
2, -0.0445486, 1, 0, 0.506135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444928,-99) , 
6, -0.523638, 1, 0, 0.46229,-99) , 
0, 0.496187, 1, 0, 0.476616,-99) , 
10, -0.998354, 1, 0, 0.485648,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0917589);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498085, 0, 1, 0.569654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495606,-99) , 
11, -2.93038, 1, 0, 0.536677,-99) , 
NN(
0, 
0, 
-1, 0.673801, 1, -1, 0.468176,-99) , 
0, 0.498091, 1, 0, 0.500468,-99) , 
10, 1.28615, 0, 0, 0.520358,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.128491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470989,-99) , 
0, 0.503805, 1, 0, 0.557295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347372,-99) , 
11, -2.83757, 0, 0, 0.462002,-99) , 
13, 18.1844, 1, 0, 0.547533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420321,-99) , 
10, 1.85898, 1, 0, 0.463546,-99) , 
11, -1.49815, 1, 0, 0.535129,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.0634461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.715295, 0, 1, 0.542083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384398,-99) , 
9, -1.56281, 0, 0, 0.498222,-99) , 
9, -951.286, 1, 0, 0.514492,-99) , 
NN(
0, 
0, 
-1, 0.169465, 0, -1, 0.427476,-99) , 
0, 0.491426, 0, 0, 0.507296,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0693052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498776, 0, 1, 0.599986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494148,-99) , 
10, 0.429501, 1, 0, 0.511914,-99) , 
2, 0.0989369, 0, 0, 0.520905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532212,-99) , 
NN(
0, 
0, 
-1, 0.433233, 0, -1, 0.398982,-99) , 
8, 12.3258, 0, 0, 0.451116,-99) , 
0, 0.493331, 0, 0, 0.509992,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.100591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487782,-99) , 
3, 14.9026, 1, 0, 0.526318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458376,-99) , 
6, 0.863825, 0, 0, 0.51135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459101,-99) , 
4, 2.73749, 0, 0, 0.491485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37714,-99) , 
6, 0.72314, 1, 0, 0.469177,-99) , 
6, 0.80938, 0, 0, 0.486692,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0896182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492712,-99) , 
10, 1.32713, 1, 0, 0.531523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336693,-99) , 
10, 0.0504694, 1, 0, 0.484866,-99) , 
12, -1.26163, 0, 0, 0.518273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414278,-99) , 
3, 3.07201, 0, 0, 0.461894,-99) , 
3, 3.85909, 0, 0, 0.509388,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0648192);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588448,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47472,-99) , 
3, 7.92825, 0, 0, 0.508408,-99) , 
NN(
0, 
0, 
-1, 0.0017915, 1, -1, 0.445766,-99) , 
12, -1.24361, 0, 0, 0.494137,-99) , 
11, -4.51381, 1, 0, 0.498323,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0721701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49619, 0, 1, 0.602136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483515,-99) , 
9, -951.286, 1, 0, 0.502289,-99) , 
11, -3.69067, 1, 0, 0.509427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366313,-99) , 
9, -951.286, 0, 0, 0.480564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371,-99) , 
3, 8.00707, 0, 0, 0.451008,-99) , 
12, -1.84159, 0, 0, 0.50224,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0919026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.449909, 0, 1, 0.604571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466225,-99) , 
13, 11.8011, 0, 0, 0.507059,-99) , 
12, -0.334552, 1, 0, 0.518896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488737,-99) , 
0, 0.499046, 0, 0, 0.51371,-99) , 
NN(
0, 
0, 
-1, 14.4287, 1, -1, 0.437672,-99) , 
10, 0.222771, 1, 0, 0.484344,-99) , 
12, -0.536352, 0, 0, 0.502055,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0943687);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42645,-99) , 
8, 17.5028, 1, 0, 0.51777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437533,-99) , 
10, -0.570654, 1, 0, 0.475451,-99) , 
12, -1.17702, 0, 0, 0.506152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41891,-99) , 
8, 6.77236, 0, 0, 0.508165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3595,-99) , 
0, 0.498092, 1, 0, 0.426594,-99) , 
3, 10.8778, 1, 0, 0.459726,-99) , 
2, -0.066125, 0, 0, 0.498528,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0636117);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468319,-99) , 
12, -1.42348, 0, 0, 0.512049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456022,-99) , 
11, -1.13595, 1, 0, 0.50643,-99) , 
NN(
0, 
0, 
-1, 13.7825, 1, -1, 0.378053,-99) , 
12, -2.43088, 0, 0, 0.497904,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.118636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444406,-99) , 
1, 0.00446133, 1, 0, 0.556522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337882,-99) , 
10, -0.329741, 1, 0, 0.469886,-99) , 
12, -1.51978, 0, 0, 0.539069,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00195615, 0, 1, 0.534131,-99) , 
NN(
0, 
0, 
-1, -0.946887, 1, -1, 0.424956,-99) , 
8, 11.1016, 1, 0, 0.477685,-99) , 
9, -951.286, 0, 0, 0.515066,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.102994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496697,-99) , 
6, 0.238062, 1, 0, 0.552253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477365,-99) , 
6, -0.237201, 0, 0, 0.554992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452765,-99) , 
0, 0.504757, 0, 0, 0.460717,-99) , 
10, -0.96937, 1, 0, 0.468693,-99) , 
12, 0.557433, 0, 0, 0.482561,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.079451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473975,-99) , 
2, -0.0300892, 0, 0, 0.520697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404823,-99) , 
1, -0.00109443, 1, 0, 0.431177,-99) , 
2, -0.102559, 0, 0, 0.509558,-99) , 
NN(
0, 
0, 
-1, 0.160751, 0, -1, 0.411851,-99) , 
0, 0.504756, 1, 0, 0.501206,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0671535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496818,-99) , 
8, 10.3705, 1, 0, 0.5082,-99) , 
NN(
0, 
0, 
-1, -1.3777, 1, -1, 0.388231,-99) , 
12, -2.36892, 0, 0, 0.499428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413185,-99) , 
8, 4.39216, 1, 0, 0.508326,-99) , 
NN(
0, 
0, 
-1, -0.722441, 0, -1, 0.406207,-99) , 
4, 1.81998, 1, 0, 0.456285,-99) , 
3, 5.87353, 0, 0, 0.489748,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.104682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.854865, 1, 1, 0.559103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456531,-99) , 
2, -0.03157, 1, 0, 0.480044,-99) , 
6, 0.619057, 0, 0, 0.518313,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492938,-99) , 
9, -0.0976507, 1, 0, 0.513588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39092,-99) , 
3, 14.0417, 0, 0, 0.41921,-99) , 
9, -0.423799, 0, 0, 0.477405,-99) , 
9, -951.286, 1, 0, 0.493341,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.108038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.724331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475584,-99) , 
10, -0.084205, 1, 0, 0.530602,-99) , 
10, 0.601532, 0, 0, 0.550706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395067,-99) , 
10, -0.204465, 0, 0, 0.537529,-99) , 
NN(
0, 
0, 
-1, -2.34162, 0, -1, 0.462558,-99) , 
10, 0.567699, 1, 0, 0.47662,-99) , 
11, -3.03465, 1, 0, 0.502254,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0602697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.75776, 0, 1, 0.528133,-99) , 
NN(
0, 
0, 
-1, -0.145125, 0, -1, 0.478935,-99) , 
6, 0.809508, 1, 0, 0.506148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34329,-99) , 
0, 0.505981, 0, 0, 0.416149,-99) , 
0, 0.504757, 1, 0, 0.498693,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.107918);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 17.6894, 1, 1, 0.611124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458801,-99) , 
13, 9.46404, 0, 0, 0.531313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454332,-99) , 
0, 0.502854, 0, 0, 0.466106,-99) , 
12, -0.770518, 1, 0, 0.491611,-99) , 
8, 17.7386, 0, 0, 0.501522,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0954384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460714,-99) , 
8, 16.0837, 1, 0, 0.523401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399234,-99) , 
10, -1.24894, 1, 0, 0.445384,-99) , 
12, -1.79764, 0, 0, 0.512379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398445,-99) , 
2, -0.167734, 0, 0, 0.503497,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0454629);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.628627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492389,-99) , 
9, -951.286, 0, 0, 0.579782,-99) , 
NN(
0, 
0, 
-1, -1.98078, 0, -1, 0.48631,-99) , 
11, -4.24711, 1, 0, 0.493746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391965,-99) , 
0, 0.489524, 0, 0, 0.489918,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0511897);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491258,-99) , 
6, 0.886105, 1, 0, 0.529021,-99) , 
NN(
0, 
0, 
-1, 0.50571, 1, -1, 0.48812,-99) , 
3, 12.0348, 0, 0, 0.504509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42922,-99) , 
2, 0.20868, 1, 0, 0.499825,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0672475);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.494282, 1, 1, 0.580961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498842,-99) , 
10, 0.836199, 1, 0, 0.515899,-99) , 
NN(
0, 
0, 
-1, 3.69145, 0, -1, 0.469235,-99) , 
11, -2.90913, 0, 0, 0.496201,-99) , 
3, 14.1576, 0, 0, 0.511453,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0624756);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499326,-99) , 
6, 0.310702, 1, 0, 0.520431,-99) , 
NN(
0, 
0, 
-1, 3.49496, 1, -1, 0.455288,-99) , 
6, -0.809383, 0, 0, 0.510767,-99) , 
3, 18.2728, 0, 0, 0.517631,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0555113);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490474, 1, 1, 0.524729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41002,-99) , 
11, -4.75895, 0, 0, 0.519459,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0712581);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630738,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462599,-99) , 
0, 0.494204, 0, 0, 0.516943,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393103,-99) , 
3, 11.0733, 1, 0, 0.45771,-99) , 
0, 0.503531, 1, 0, 0.509224,-99) , 
0, 0.490474, 1, 0, 0.514388,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0885714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88404, 0, 1, 0.58825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48429,-99) , 
12, 0.952831, 1, 0, 0.55489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491161,-99) , 
4, 3.25768, 0, 0, 0.525947,-99) , 
NN(
0, 
0, 
-1, 0.493329, 0, -1, 0.464598,-99) , 
11, -3.75706, 1, 0, 0.47792,-99) , 
12, 0.0939794, 0, 0, 0.499548,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0604254);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391841,-99) , 
0, 0.505709, 1, 0, 0.509334,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.457767,-99) , 
8, 15.0265, 1, 0, 0.497881,-99) , 
12, 0.619761, 0, 0, 0.506221,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0732758);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.77789, 1, 1, 0.52479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387275,-99) , 
10, -1.06249, 1, 0, 0.446372,-99) , 
12, -1.98888, 0, 0, 0.516181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39723,-99) , 
10, -0.127684, 0, 0, 0.464088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369638,-99) , 
0, 0.502853, 1, 0, 0.441851,-99) , 
8, 5.79202, 0, 0, 0.499829,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.105402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.673496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436167,-99) , 
13, 14.9655, 1, 0, 0.506305,-99) , 
8, 17.6426, 0, 0, 0.515463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456363,-99) , 
12, 0.258341, 1, 0, 0.487138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351151,-99) , 
12, -0.423759, 1, 0, 0.41688,-99) , 
11, -2.15105, 0, 0, 0.465322,-99) , 
11, -2.5211, 1, 0, 0.492286,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0930485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423413,-99) , 
3, 18.705, 0, 0, 0.4692,-99) , 
3, 16.7958, 1, 0, 0.532792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42422,-99) , 
3, 12.029, 1, 0, 0.479035,-99) , 
NN(
0, 
0, 
-1, 0.506253, 1, -1, 0.42365,-99) , 
0, 0.501901, 1, 0, 0.466132,-99) , 
3, 15.2235, 0, 0, 0.474719,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0670983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.663919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492241,-99) , 
6, -0.904763, 1, 0, 0.501538,-99) , 
3, 18.2751, 0, 0, 0.507038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421356,-99) , 
8, 13.7719, 0, 0, 0.461552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316085,-99) , 
11, -4.08877, 0, 0, 0.442738,-99) , 
4, 4.16621, 1, 0, 0.492393,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0711293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.661874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424989,-99) , 
3, 10.5631, 0, 0, 0.5175,-99) , 
10, -1.08407, 1, 0, 0.573174,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.603101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497695,-99) , 
9, 1.00429, 0, 0, 0.513924,-99) , 
NN(
0, 
0, 
-1, 15.037, 1, -1, 0.46132,-99) , 
9, -951.286, 0, 0, 0.492215,-99) , 
11, -3.99302, 1, 0, 0.500536,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0897087);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 20.5911, 0, 1, 0.647821,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459698,-99) , 
4, 3.49386, 1, 0, 0.509008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357861,-99) , 
12, -2.6334, 0, 0, 0.501823,-99) , 
3, 17.1937, 0, 0, 0.511586,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0585474);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523686, 0, 1, 0.564714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498089,-99) , 
12, -2.5024, 0, 0, 0.562046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423958,-99) , 
12, -1.39526, 0, 0, 0.498535,-99) , 
11, -3.68839, 1, 0, 0.510939,-99) , 
10, 1.85541, 0, 0, 0.518852,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0728894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.378121, 0, 1, 0.566452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400248,-99) , 
12, -1.90205, 0, 0, 0.546898,-99) , 
NN(
NN(
0, 
0, 
-1, 11.2671, 0, 1, 0.560201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469927,-99) , 
6, 0.333311, 1, 0, 0.485848,-99) , 
10, -0.713923, 1, 0, 0.493457,-99) , 
8, 15.0838, 0, 0, 0.504603,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.091138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484327,-99) , 
10, -0.139843, 0, 0, 0.570695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467954,-99) , 
10, 0.139788, 1, 0, 0.504438,-99) , 
2, 0.00795385, 1, 0, 0.542333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584207,-99) , 
NN(
0, 
0, 
-1, 11.5365, 0, -1, 0.480206,-99) , 
8, 18.4148, 0, 0, 0.491558,-99) , 
6, 0.714147, 1, 0, 0.514874,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.080262);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401311,-99) , 
8, 9.91002, 0, 0, 0.513804,-99) , 
6, -0.523603, 1, 0, 0.538926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495791,-99) , 
11, -1.4696, 0, 0, 0.521839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466866,-99) , 
0, 0.491021, 1, 0, 0.47366,-99) , 
10, 1.5709, 0, 0, 0.484244,-99) , 
0, 0.501898, 0, 0, 0.495366,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.101332);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482759,-99) , 
12, -1.49711, 0, 0, 0.536918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448242,-99) , 
12, 0.172769, 1, 0, 0.526187,-99) , 
NN(
0, 
0, 
-1, 1.50212, 0, -1, 0.435306,-99) , 
11, -1.68018, 1, 0, 0.508253,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0957008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.00411, 0, 1, 0.529493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454405,-99) , 
10, -0.182441, 1, 0, 0.468748,-99) , 
9, -951.286, 0, 0, 0.504855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562714,-99) , 
NN(
0, 
0, 
-1, -4.37837, 1, -1, 0.365802,-99) , 
3, 11.9865, 0, 0, 0.419265,-99) , 
10, -0.713606, 0, 0, 0.493952,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0600492);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498085, 1, 1, 0.567937,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488166,-99) , 
3, 5.00835, 0, 0, 0.57105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.391335,-99) , 
11, -1.69321, 1, 0, 0.490819,-99) , 
10, -0.821714, 1, 0, 0.499617,-99) , 
10, 1.57178, 0, 0, 0.514945,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0765293);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.2383, 0, 1, 0.578453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.601565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489947,-99) , 
11, -2.5677, 1, 0, 0.561472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47999,-99) , 
8, 15.037, 0, 0, 0.492582,-99) , 
0, 0.493329, 1, 0, 0.501677,-99) , 
10, 1.85731, 0, 0, 0.513924,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0677916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476754,-99) , 
0, 0.501628, 1, 0, 0.525937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398766,-99) , 
0, 0.495779, 1, 0, 0.490257,-99) , 
0, 0.496187, 0, 0, 0.514399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438018,-99) , 
2, -0.194297, 0, 0, 0.509552,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.09535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463954,-99) , 
6, 0.904807, 1, 0, 0.525697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464157,-99) , 
6, 0.240082, 1, 0, 0.475321,-99) , 
11, -2.83047, 1, 0, 0.497323,-99) , 
NN(
0, 
0, 
-1, -2.6157, 0, -1, 0.424368,-99) , 
3, 3.86047, 0, 0, 0.485494,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.087223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483336,-99) , 
4, 3.59792, 1, 0, 0.533686,-99) , 
11, -2.37617, 1, 0, 0.544808,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485096,-99) , 
11, -2.57834, 0, 0, 0.499406,-99) , 
NN(
0, 
0, 
-1, 2.18437, 0, -1, 0.417042,-99) , 
8, 15.1866, 1, 0, 0.481174,-99) , 
12, -0.257977, 0, 0, 0.504987,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0939673);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.22591, 0, 1, 0.623372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458947,-99) , 
12, -1.6116, 1, 0, 0.589243,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427243,-99) , 
8, 18.1048, 1, 0, 0.507284,-99) , 
NN(
0, 
0, 
-1, -3.47094, 0, -1, 0.445177,-99) , 
3, 9.99383, 0, 0, 0.485536,-99) , 
10, -0.42758, 1, 0, 0.500784,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0749458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497121, 0, 1, 0.561076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489347,-99) , 
3, 12.9151, 0, 0, 0.499971,-99) , 
10, 1.57267, 0, 0, 0.51236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463411,-99) , 
8, 16.0826, 0, 0, 0.521182,-99) , 
NN(
0, 
0, 
-1, 2.21562, 0, -1, 0.427082,-99) , 
11, -3.18111, 1, 0, 0.449245,-99) , 
8, 14.7914, 1, 0, 0.497131,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0461626);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.635273,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498088,-99) , 
6, 0.523792, 1, 0, 0.511702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42728,-99) , 
0, 0.505709, 1, 0, 0.507304,-99) , 
11, -4.46249, 1, 0, 0.513523,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.101709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.1219, 1, 1, 0.577572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412892,-99) , 
10, 0.546162, 1, 0, 0.498368,-99) , 
12, -0.639735, 0, 0, 0.517139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570498,-99) , 
NN(
0, 
0, 
-1, -2.01079, 0, -1, 0.435285,-99) , 
3, 3.80119, 1, 0, 0.463725,-99) , 
12, -0.197782, 1, 0, 0.495942,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.12201);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0876503, 0, 1, 0.560567,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455189,-99) , 
0, 0.497133, 1, 0, 0.498746,-99) , 
6, 0.809506, 1, 0, 0.535748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352491,-99) , 
0, 0.49238, 0, 0, 0.513529,-99) , 
NN(
0, 
0, 
-1, 12.2432, 0, -1, 0.364924,-99) , 
10, 0.23333, 1, 0, 0.486794,-99) , 
12, -0.942459, 0, 0, 0.518142,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0862349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458825,-99) , 
12, -0.0101734, 1, 0, 0.52246,-99) , 
11, -1.74211, 0, 0, 0.528647,-99) , 
NN(
0, 
0, 
-1, 0.498083, 1, -1, 0.437852,-99) , 
12, 0.498741, 1, 0, 0.511721,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0808333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.6103, 1, 1, 0.559475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358224,-99) , 
9, -1.28023, 0, 0, 0.485544,-99) , 
9, -951.286, 1, 0, 0.518489,-99) , 
NN(
NN(
0, 
0, 
-1, -0.743824, 1, 1, 0.535092,-99) , 
NN(
0, 
0, 
-1, 0.918369, 1, -1, 0.463073,-99) , 
11, -3.46461, 1, 0, 0.479286,-99) , 
6, 0.714269, 1, 0, 0.496947,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_12_25::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_12_25::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_12_25 *ReadBDT_maker_LHC19c2b_12_25(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_12_25(theInpVar);
  }
}
