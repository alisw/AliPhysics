#include "LHC19c2b_TMVAClassification_BDT_4_6_noP.class.h"

double ReadBDT_LHC19c2b_4_6_noP::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_4_6_noP::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.366959182764097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.707094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.28981,-99) , 
4, 0.999524, 0, 0, 0.673578,-99) , 
NN(
NN(
0, 
0, 
-1, 0.430496, 1, 1, 0.629746,-99) , 
NN(
0, 
0, 
-1, -1.41492, 1, -1, 0.344218,-99) , 
10, 3.80033, 0, 0, 0.37645,-99) , 
7, -951.286, 0, 0, 0.500871,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.253553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.137288, 1, 1, 0.684021,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334304,-99) , 
7, -0.429223, 0, 0, 0.437879,-99) , 
5, 0.492676, 1, 0, 0.641161,-99) , 
NN(
0, 
0, 
-1, 1.57139, 1, -1, 0.404738,-99) , 
7, -951.286, 0, 0, 0.503483,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.213718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.641298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318408,-99) , 
4, 0.999524, 0, 0, 0.614316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.184894,-99) , 
8, -1.69385, 0, 0, 0.471805,-99) , 
NN(
0, 
0, 
-1, 2.25167, 1, -1, 0.188336,-99) , 
8, 1.57137, 1, 0, 0.438518,-99) , 
7, -951.286, 0, 0, 0.511283,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.196808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0652671, 0, 1, 0.6405,-99) , 
NN(
0, 
0, 
-1, -0.714717, 0, -1, 0.44061,-99) , 
5, 0.403476, 1, 0, 0.595623,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.420563,-99) , 
7, -951.286, 0, 0, 0.492936,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.193147);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278253,-99) , 
8, -1.84351, 0, 0, 0.541792,-99) , 
NN(
0, 
0, 
-1, 2.23809, 1, -1, 0.26214,-99) , 
8, 1.8571, 1, 0, 0.524764,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.246451,-99) , 
4, 0.999524, 0, 0, 0.502424,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.201441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.634963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493209,-99) , 
4, 0.999977, 0, 0, 0.583615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393088,-99) , 
10, 0.33037, 1, 0, 0.453911,-99) , 
7, -951.286, 0, 0, 0.507017,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.257704,-99) , 
4, 0.999524, 0, 0, 0.487545,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.191756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429203,-99) , 
4, 0.999524, 0, 0, 0.579972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377428,-99) , 
7, -1.57147, 0, 0, 0.562687,-99) , 
NN(
NN(
0, 
0, 
-1, -0.836307, 1, 1, 0.631759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310206,-99) , 
9, -1.44143, 1, 0, 0.410741,-99) , 
10, 3.77212, 0, 0, 0.437801,-99) , 
7, -951.286, 0, 0, 0.489444,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.142405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.233869,-99) , 
8, -2.14286, 0, 0, 0.52612,-99) , 
NN(
0, 
0, 
-1, -0.108223, 1, -1, 0.401108,-99) , 
4, 0.999955, 0, 0, 0.494009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.223937,-99) , 
4, 0.999048, 0, 0, 0.481269,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.137643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500948, 1, 1, 0.560088,-99) , 
NN(
0, 
0, 
-1, 0.150232, 1, -1, 0.418386,-99) , 
5, 0.590612, 1, 0, 0.541731,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.427727,-99) , 
7, -951.286, 0, 0, 0.474833,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.0781356);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253281,-99) , 
6, 0.0238062, 1, 0, 0.499725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.19798,-99) , 
8, -2.26531, 0, 0, 0.49065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.211375,-99) , 
8, 2.14274, 1, 0, 0.479707,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.0658353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263734,-99) , 
8, -2.0204, 0, 0, 0.49016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.233673,-99) , 
8, 2.14285, 1, 0, 0.480645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.242382,-99) , 
4, 0.999048, 0, 0, 0.469242,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.219593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.620978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418453,-99) , 
6, 0.00566464, 0, 0, 0.484732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.259085,-99) , 
6, 0.023792, 1, 0, 0.475281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.23767,-99) , 
4, 0.999048, 0, 0, 0.464293,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0604673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279829,-99) , 
6, 0.0237841, 1, 0, 0.494332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.216709,-99) , 
8, -2.2653, 0, 0, 0.485986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.237255,-99) , 
8, 2.1428, 1, 0, 0.476503,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0618618);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.469108,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.095087);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294341,-99) , 
4, 0.999048, 0, 0, 0.501706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.187726,-99) , 
9, -2.57153, 1, 0, 0.347385,-99) , 
8, -1.61224, 0, 0, 0.487938,-99) , 
NN(
0, 
0, 
-1, 2.3469, 1, -1, 0.292047,-99) , 
8, 1.85709, 1, 0, 0.476245,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0623787);
  fForest.push_back( 
NN(
0, 
0, 
-1, 1.85709, 1, -1, 0.468851,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.049601);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295642,-99) , 
6, 0.023792, 1, 0, 0.492372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.236358,-99) , 
8, -2.2653, 0, 0, 0.485077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255164,-99) , 
8, 2.14277, 1, 0, 0.476753,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0786078);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398458,-99) , 
4, 0.999909, 0, 0, 0.490263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273988,-99) , 
8, -2.14285, 0, 0, 0.482696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280262,-99) , 
4, 0.999048, 0, 0, 0.473626,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.082309);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295432,-99) , 
6, 0.0237526, 1, 0, 0.492062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224816,-99) , 
10, -0.97548, 1, 0, 0.361299,-99) , 
8, -1.47618, 0, 0, 0.477543,-99) , 
NN(
0, 
0, 
-1, -0.344705, 1, -1, 0.335779,-99) , 
8, 1.57142, 1, 0, 0.464671,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.147029);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.574994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360237,-99) , 
7, -1.57147, 0, 0, 0.504964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352393,-99) , 
9, -2.37572, 1, 0, 0.405758,-99) , 
7, -951.286, 0, 0, 0.44664,-99) , 
9, 3.22523, 0, 0, 0.460092,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.086712);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.456752,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0909853);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367708,-99) , 
8, -1.57145, 0, 0, 0.496271,-99) , 
NN(
0, 
0, 
-1, -0.272046, 1, -1, 0.412763,-99) , 
4, 0.999955, 0, 0, 0.474962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27395,-99) , 
4, 0.999048, 0, 0, 0.466019,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.172269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415828,-99) , 
6, 0.00453453, 0, 0, 0.476896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295045,-99) , 
6, 0.0238062, 1, 0, 0.469411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.248939,-99) , 
4, 0.998572, 0, 0, 0.462874,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.10092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.221396, 1, 1, 0.560887,-99) , 
NN(
0, 
0, 
-1, -1.28568, 0, -1, 0.458031,-99) , 
9, -3.42687, 1, 0, 0.47235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260575,-99) , 
4, 0.998572, 0, 0, 0.466168,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.050718);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.14285, 1, -1, 0.474663,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0451235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325739,-99) , 
6, 0.0237559, 1, 0, 0.494688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322211,-99) , 
8, -2.0204, 0, 0, 0.487472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299244,-99) , 
8, 2.14285, 1, 0, 0.480885,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0939834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.574688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424583,-99) , 
9, -1.47796, 1, 0, 0.473186,-99) , 
9, 3.19208, 0, 0, 0.484343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316072,-99) , 
4, 0.999048, 0, 0, 0.477078,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0619685);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34258,-99) , 
6, 0.0238087, 1, 0, 0.496676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278157,-99) , 
10, -0.756155, 1, 0, 0.392164,-99) , 
8, -1.28571, 0, 0, 0.482828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294252,-99) , 
8, 2.14285, 1, 0, 0.476488,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0958742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46652,-99) , 
9, 1.46522, 0, 0, 0.48058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295818,-99) , 
8, -2.14286, 0, 0, 0.474692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.316552,-99) , 
4, 0.999048, 0, 0, 0.467868,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0430635);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.478482,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.130011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435326,-99) , 
6, 0.00339789, 0, 0, 0.496852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337128,-99) , 
6, 0.0237869, 1, 0, 0.490609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297285,-99) , 
4, 0.998572, 0, 0, 0.485128,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0768779);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353002,-99) , 
6, 0.0238087, 1, 0, 0.504816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321542,-99) , 
10, -0.871234, 1, 0, 0.419914,-99) , 
8, -1.04084, 0, 0, 0.489431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312526,-99) , 
8, 2.14278, 1, 0, 0.483548,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0470059);
  fForest.push_back( 
NN(
0, 
0, 
-1, 1.85707, 1, -1, 0.476514,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0681433);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429229,-99) , 
4, 0.999864, 0, 0, 0.503354,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.430955,-99) , 
0, 0.5019, 1, 0, 0.490108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.340252,-99) , 
4, 0.999048, 0, 0, 0.483751,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0417989);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.479113,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.034086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375839,-99) , 
3, 9.08109, 1, 0, 0.494885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.310368,-99) , 
8, 2.2653, 1, 0, 0.48977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329967,-99) , 
8, -2.14284, 0, 0, 0.484721,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0769519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486592,-99) , 
5, 0.0273748, 1, 0, 0.518245,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.46521,-99) , 
7, -951.286, 0, 0, 0.4875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350922,-99) , 
2, -0.214223, 0, 0, 0.480719,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0621528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435822,-99) , 
8, -1.14965, 0, 0, 0.499793,-99) , 
NN(
0, 
0, 
-1, -0.0640806, 1, -1, 0.38864,-99) , 
8, 1.85714, 1, 0, 0.493764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356429,-99) , 
2, -0.214244, 0, 0, 0.487086,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.061458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.131801, 1, 1, 0.549551,-99) , 
NN(
0, 
0, 
-1, -1.57142, 0, -1, 0.479072,-99) , 
9, -3.34239, 1, 0, 0.490273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.368867,-99) , 
2, -0.213848, 0, 0, 0.484282,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0332674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37675,-99) , 
3, 9.42599, 1, 0, 0.496882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330083,-99) , 
8, 2.2653, 1, 0, 0.492372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336433,-99) , 
8, -2.14284, 0, 0, 0.487663,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.100703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00008, 0, 1, 0.592159,-99) , 
NN(
0, 
0, 
-1, 0.00226137, 0, -1, 0.464612,-99) , 
6, 0.00791492, 0, 0, 0.489075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.352541,-99) , 
6, 0.0237449, 1, 0, 0.483806,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0399881);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38637,-99) , 
6, 0.023792, 1, 0, 0.502164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366401,-99) , 
8, -2.14284, 0, 0, 0.497951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366537,-99) , 
4, 0.999048, 0, 0, 0.492479,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0897281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4632,-99) , 
0, 0.500948, 1, 0, 0.506953,-99) , 
9, -4.3433, 1, 0, 0.516213,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452288,-99) , 
5, -0.62785, 1, 0, 0.479246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.318532,-99) , 
8, -1.28568, 0, 0, 0.466374,-99) , 
10, 0.162395, 1, 0, 0.487281,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0302482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366998,-99) , 
6, 0.0237868, 1, 0, 0.49615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350276,-99) , 
8, -2.14285, 0, 0, 0.491702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.331164,-99) , 
4, 0.998572, 0, 0, 0.487348,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.046903);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448951,-99) , 
4, 0.999932, 0, 0, 0.493935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344545,-99) , 
8, -2.14284, 0, 0, 0.489531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334855,-99) , 
4, 0.998572, 0, 0, 0.485319,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0871366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472698,-99) , 
6, 0.00793623, 0, 0, 0.491624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369577,-99) , 
6, 0.0238087, 1, 0, 0.486937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366438,-99) , 
3, 9.41001, 1, 0, 0.481748,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0509093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.625899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477812,-99) , 
9, -4.09327, 1, 0, 0.513036,-99) , 
5, 0.312482, 1, 0, 0.55639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.357721,-99) , 
8, 2.18363, 1, 0, 0.496819,-99) , 
NN(
0, 
0, 
-1, -2.02044, 0, -1, 0.355125,-99) , 
8, -1.28571, 0, 0, 0.483446,-99) , 
9, -3.6582, 1, 0, 0.491347,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.056837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.96578, 1, 1, 0.548271,-99) , 
NN(
0, 
0, 
-1, -1.28572, 0, -1, 0.480298,-99) , 
9, -3.34239, 1, 0, 0.491046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375458,-99) , 
3, 9.52224, 1, 0, 0.486243,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0668596);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383515,-99) , 
6, 0.0238062, 1, 0, 0.503351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.353519,-99) , 
8, 2.23809, 1, 0, 0.49856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.334252,-99) , 
7, -951.286, 0, 0, 0.392398,-99) , 
9, -3.78355, 1, 0, 0.442121,-99) , 
8, -0.99999, 0, 0, 0.488214,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0510227);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489608,-99) , 
10, -1.36512, 1, 0, 0.496354,-99) , 
NN(
0, 
0, 
-1, 0.182049, 1, -1, 0.418808,-99) , 
0, 0.503805, 1, 0, 0.489642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380638,-99) , 
2, -0.214589, 0, 0, 0.484315,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0753845);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453595,-99) , 
8, 1.2312, 1, 0, 0.50529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394181,-99) , 
10, -0.636004, 1, 0, 0.460602,-99) , 
8, -0.714326, 0, 0, 0.493877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378652,-99) , 
3, 9.50466, 1, 0, 0.48908,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0808041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4737,-99) , 
4, 0.999997, 0, 0, 0.497351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392091,-99) , 
10, -0.0368092, 1, 0, 0.448006,-99) , 
4, 0.999932, 0, 0, 0.487102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361025,-99) , 
4, 0.998572, 0, 0, 0.48362,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0669231);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482408,-99) , 
4, 0.999996, 0, 0, 0.504116,-99) , 
NN(
0, 
0, 
-1, 0.716995, 1, -1, 0.453751,-99) , 
4, 0.999955, 0, 0, 0.49144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385196,-99) , 
4, 0.999048, 0, 0, 0.487085,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0276197);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39548,-99) , 
6, 0.0237868, 1, 0, 0.498847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381602,-99) , 
8, -2.14285, 0, 0, 0.495425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360663,-99) , 
4, 0.998572, 0, 0, 0.491766,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0452017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469812,-99) , 
0, 0.499995, 1, 0, 0.496121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380262,-99) , 
8, -2.14285, 0, 0, 0.492793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398892,-99) , 
3, 9.18604, 1, 0, 0.488434,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0502112);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453506,-99) , 
8, 1.47615, 1, 0, 0.500036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383174,-99) , 
10, -0.770638, 1, 0, 0.450239,-99) , 
8, -1, 0, 0, 0.491012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396468,-99) , 
3, 9.50853, 1, 0, 0.487098,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0598502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476162,-99) , 
4, 0.999994, 0, 0, 0.496351,-99) , 
NN(
0, 
0, 
-1, -0.741675, 1, -1, 0.448155,-99) , 
4, 0.999932, 0, 0, 0.486363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377746,-99) , 
4, 0.998572, 0, 0, 0.483386,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.075796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438824,-99) , 
6, 0.00226533, 0, 0, 0.493514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40708,-99) , 
6, 0.0237868, 1, 0, 0.490131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408507,-99) , 
3, 9.25868, 1, 0, 0.486434,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0428308);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475885,-99) , 
10, 0.537217, 1, 0, 0.490761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406978,-99) , 
3, 9.41001, 1, 0, 0.487161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385472,-99) , 
8, -2.14284, 0, 0, 0.48422,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0535904);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461819,-99) , 
5, 0.310171, 1, 0, 0.498375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406629,-99) , 
10, -0.585087, 1, 0, 0.45866,-99) , 
8, -0.714306, 0, 0, 0.488217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37955,-99) , 
4, 0.998572, 0, 0, 0.485247,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0635222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396939,-99) , 
7, -1.57141, 0, 0, 0.496687,-99) , 
NN(
0, 
0, 
-1, -1.57142, 0, -1, 0.457006,-99) , 
7, -951.286, 0, 0, 0.474022,-99) , 
5, -0.906398, 1, 0, 0.478102,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0550121);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437514,-99) , 
6, 0.00226536, 0, 0, 0.481555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379789,-99) , 
6, 0.0237868, 1, 0, 0.478256,-99) , 
5, -0.906431, 1, 0, 0.481734,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0508047);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483986,-99) , 
5, -0.812829, 1, 0, 0.488754,-99) , 
NN(
0, 
0, 
-1, -0.0594491, 1, -1, 0.43829,-99) , 
0, 0.503805, 1, 0, 0.484367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398118,-99) , 
2, -0.214186, 0, 0, 0.480249,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0587229);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480496,-99) , 
10, 1.07273, 1, 0, 0.50009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421078,-99) , 
10, -0.514797, 1, 0, 0.462974,-99) , 
8, -0.4286, 0, 0, 0.487284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375533,-99) , 
4, 0.998572, 0, 0, 0.484356,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.065394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479836,-99) , 
6, 0.00906865, 0, 0, 0.492911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417799,-99) , 
6, 0.0238062, 1, 0, 0.490078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399854,-99) , 
2, -0.214281, 0, 0, 0.485766,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0660413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47617,-99) , 
5, 0.0295814, 1, 0, 0.505313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458962,-99) , 
9, 1.64541, 0, 0, 0.47111,-99) , 
8, -0.428564, 0, 0, 0.493572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410318,-99) , 
2, -0.214589, 0, 0, 0.489569,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0583873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497055,-99) , 
9, 0.0734045, 1, 0, 0.536615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47991,-99) , 
9, 2.21059, 0, 0, 0.486247,-99) , 
6, 0.00680166, 0, 0, 0.498631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415298,-99) , 
6, 0.0238062, 1, 0, 0.495465,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0363423);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.96668, 1, 1, 0.517393,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.48584,-99) , 
10, 0.152027, 1, 0, 0.498937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418682,-99) , 
3, 9.52224, 1, 0, 0.495692,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0357073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.43508, 1, 1, 0.554041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374736,-99) , 
8, -1.57139, 0, 0, 0.498915,-99) , 
10, -1.65099, 1, 0, 0.502785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430824,-99) , 
2, -0.214594, 0, 0, 0.49938,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0568712);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479879,-99) , 
5, 0.497567, 1, 0, 0.511853,-99) , 
NN(
0, 
0, 
-1, 1.84122, 1, -1, 0.481374,-99) , 
0, 0.499995, 1, 0, 0.501912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392841,-99) , 
7, -951.286, 0, 0, 0.438434,-99) , 
9, -4.14865, 1, 0, 0.462698,-99) , 
8, -1.00001, 0, 0, 0.494903,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0425668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.722739, 0, 1, 0.548583,-99) , 
NN(
0, 
0, 
-1, 0.0012956, 0, -1, 0.486142,-99) , 
6, 0.00906903, 0, 0, 0.495436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422151,-99) , 
6, 0.0238087, 1, 0, 0.492639,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0462979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488979,-99) , 
4, 0.999987, 0, 0, 0.505937,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384348,-99) , 
5, 0.118741, 0, 0, 0.463946,-99) , 
4, 0.999864, 0, 0, 0.500435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405638,-99) , 
4, 0.998572, 0, 0, 0.498012,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0565051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.245469, 1, 1, 0.512799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363744,-99) , 
5, -0.445093, 1, 0, 0.477329,-99) , 
10, 1.79452, 1, 0, 0.501531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382589,-99) , 
7, -951.286, 0, 0, 0.428278,-99) , 
9, -3.90487, 1, 0, 0.461364,-99) , 
8, -0.999989, 0, 0, 0.494365,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0369398);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446759,-99) , 
6, 0.00113293, 0, 0, 0.49606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428844,-99) , 
6, 0.023792, 1, 0, 0.493471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424514,-99) , 
2, -0.213964, 0, 0, 0.49023,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0246382);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.487683,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0337246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492827,-99) , 
6, 0.0113363, 0, 0, 0.498276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431861,-99) , 
6, 0.0238087, 1, 0, 0.495753,-99) , 
NN(
0, 
0, 
-1, -0.142732, 0, -1, 0.448886,-99) , 
0, 0.503804, 1, 0, 0.491553,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0437838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480598,-99) , 
9, -0.170866, 1, 0, 0.50599,-99) , 
NN(
0, 
0, 
-1, 0.000863859, 0, -1, 0.466142,-99) , 
6, 0.0011338, 0, 0, 0.499432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430465,-99) , 
6, 0.0238088, 1, 0, 0.496841,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0170842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446968,-99) , 
6, 0.0238062, 1, 0, 0.499692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443962,-99) , 
3, 9.12253, 1, 0, 0.497112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408273,-99) , 
8, -2.14285, 0, 0, 0.494703,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.027207);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496822,-99) , 
5, -0.906421, 1, 0, 0.499899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383219,-99) , 
5, 0.209933, 0, 0, 0.456819,-99) , 
4, 0.999796, 0, 0, 0.495689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417153,-99) , 
4, 0.998572, 0, 0, 0.493651,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0487847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496874,-99) , 
9, -0.0160066, 1, 0, 0.528603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482227,-99) , 
9, 2.21036, 0, 0, 0.487465,-99) , 
6, 0.00680165, 0, 0, 0.497601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435766,-99) , 
6, 0.0238062, 1, 0, 0.495263,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.055969);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471401,-99) , 
7, -951.286, 1, 0, 0.525649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447522,-99) , 
9, -0.847262, 1, 0, 0.497744,-99) , 
9, 0.955207, 0, 0, 0.502997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418474,-99) , 
0, 0.505709, 1, 0, 0.500257,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0510435);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484944,-99) , 
5, 0.122443, 1, 0, 0.508074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459674,-99) , 
9, -3.90487, 1, 0, 0.479643,-99) , 
8, -0.714296, 0, 0, 0.500884,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.458046,-99) , 
0, 0.503805, 1, 0, 0.497073,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0578857);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492399,-99) , 
10, 1.49939, 1, 0, 0.512534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451524,-99) , 
5, 0.684759, 1, 0, 0.508491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436363,-99) , 
10, -0.520823, 1, 0, 0.477329,-99) , 
9, 3.12661, 0, 0, 0.484537,-99) , 
8, -0.142872, 0, 0, 0.497956,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0183216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445416,-99) , 
6, 0.0237526, 1, 0, 0.50091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441011,-99) , 
3, 9.50853, 1, 0, 0.498465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42465,-99) , 
8, -2.14285, 0, 0, 0.496448,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0383555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464332,-99) , 
7, -951.286, 1, 0, 0.527002,-99) , 
NN(
0, 
0, 
-1, 1.72291, 1, -1, 0.491075,-99) , 
9, 1.46522, 0, 0, 0.497012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400655,-99) , 
8, -2.14285, 0, 0, 0.494485,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0491919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.48895, 1, 1, 0.537302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.37593,-99) , 
10, 2.00289, 1, 0, 0.494022,-99) , 
5, -0.439546, 1, 0, 0.507961,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489096,-99) , 
7, -951.286, 1, 0, 0.52953,-99) , 
NN(
0, 
0, 
-1, -1.91157, 0, -1, 0.476875,-99) , 
10, -1.61964, 1, 0, 0.485798,-99) , 
8, -0.142898, 0, 0, 0.49817,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0430673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367589,-99) , 
4, 0.99981, 0, 0, 0.505603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456575,-99) , 
10, -0.171992, 1, 0, 0.484754,-99) , 
5, -0.0640133, 1, 0, 0.496952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4205,-99) , 
8, -2.14284, 0, 0, 0.494903,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.052449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484712,-99) , 
5, -0.699522, 1, 0, 0.549338,-99) , 
NN(
0, 
0, 
-1, 0.142648, 1, -1, 0.475479,-99) , 
7, -951.286, 1, 0, 0.518698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494495,-99) , 
9, -4.18558, 1, 0, 0.498288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394209,-99) , 
7, -951.286, 0, 0, 0.446625,-99) , 
9, -0.396604, 1, 0, 0.490133,-99) , 
9, 1.04356, 0, 0, 0.495439,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0215771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499519,-99) , 
2, 0.0643626, 0, 0, 0.50453,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40741,-99) , 
5, 0.0245686, 0, 0, 0.464639,-99) , 
4, 0.999864, 0, 0, 0.499804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449492,-99) , 
4, 0.999048, 0, 0, 0.497771,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0366194);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457662,-99) , 
5, 0.684166, 1, 0, 0.506295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434757,-99) , 
4, 0.999796, 0, 0, 0.502346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373444,-99) , 
7, -951.286, 0, 0, 0.465476,-99) , 
4, 0.999524, 0, 0, 0.499813,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0233356);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494224,-99) , 
2, 0.0196377, 0, 0, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446875,-99) , 
2, 0.276061, 1, 0, 0.49859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447811,-99) , 
2, -0.213471, 0, 0, 0.496183,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0367049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480503,-99) , 
6, 0.00226585, 0, 0, 0.502619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451029,-99) , 
6, 0.023792, 1, 0, 0.500624,-99) , 
NN(
0, 
0, 
-1, -0.17048, 1, -1, 0.46312,-99) , 
0, 0.503805, 1, 0, 0.497309,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0220668);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.812803, 1, 1, 0.508404,-99) , 
NN(
0, 
0, 
-1, -1.28567, 0, -1, 0.489835,-99) , 
0, 0.498091, 1, 0, 0.498935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448376,-99) , 
3, 9.52058, 1, 0, 0.496869,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0466765);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48107,-99) , 
10, 1.63041, 1, 0, 0.503165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426132,-99) , 
7, -951.286, 0, 0, 0.469444,-99) , 
8, -1.28571, 0, 0, 0.499121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429695,-99) , 
3, 9.50466, 1, 0, 0.496408,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0338825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497405,-99) , 
9, 0.874947, 0, 0, 0.502698,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.43608,-99) , 
4, 0.999841, 0, 0, 0.497714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.358598,-99) , 
7, -951.286, 0, 0, 0.453324,-99) , 
4, 0.999524, 0, 0, 0.494709,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0155102);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443179,-99) , 
6, 0.0237841, 1, 0, 0.500603,-99) , 
5, -0.906398, 1, 0, 0.502576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458185,-99) , 
2, -0.214244, 0, 0, 0.500478,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0316073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487245,-99) , 
8, -0.428588, 0, 0, 0.501276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402741,-99) , 
5, 0.0255246, 0, 0, 0.464454,-99) , 
4, 0.999864, 0, 0, 0.496505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410565,-99) , 
4, 0.998572, 0, 0, 0.494315,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0270652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453351,-99) , 
5, 0.590599, 1, 0, 0.502357,-99) , 
NN(
0, 
0, 
-1, 0.118741, 0, -1, 0.460002,-99) , 
4, 0.999864, 0, 0, 0.497431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438838,-99) , 
4, 0.999048, 0, 0, 0.495152,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0278581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490915,-99) , 
7, -951.286, 1, 0, 0.52415,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.488662,-99) , 
10, -1.3261, 1, 0, 0.492743,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0194925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496265,-99) , 
10, -1.66111, 1, 0, 0.499087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434541,-99) , 
2, 0.275511, 1, 0, 0.497265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447885,-99) , 
2, -0.214238, 0, 0, 0.495007,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0193603);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499612,-99) , 
2, 0.070297, 0, 0, 0.503667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424701,-99) , 
7, -951.286, 0, 0, 0.463088,-99) , 
4, 0.999773, 0, 0, 0.500621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428324,-99) , 
4, 0.999048, 0, 0, 0.497888,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0300612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478864,-99) , 
2, -0.0666868, 0, 0, 0.515959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461542,-99) , 
10, 1.295, 1, 0, 0.49434,-99) , 
5, -0.62584, 1, 0, 0.499057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435424,-99) , 
8, -2.14282, 0, 0, 0.497368,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0326961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487781,-99) , 
5, -0.0670876, 1, 0, 0.502762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432306,-99) , 
7, -951.286, 0, 0, 0.46839,-99) , 
4, 0.999864, 0, 0, 0.498745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449111,-99) , 
4, 0.999048, 0, 0, 0.496799,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.028582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48895,-99) , 
10, -0.126935, 1, 0, 0.497609,-99) , 
5, -0.906412, 1, 0, 0.499634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45424,-99) , 
4, 0.999048, 0, 0, 0.497846,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0371844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496089,-99) , 
5, -0.240277, 1, 0, 0.507515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411193,-99) , 
5, -0.543216, 1, 0, 0.4825,-99) , 
10, 2.32604, 1, 0, 0.501087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401063,-99) , 
9, -1.8152, 1, 0, 0.471812,-99) , 
10, 1.93357, 0, 0, 0.483032,-99) , 
8, -0.714292, 0, 0, 0.496498,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0419565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.297917, 1, 1, 0.515451,-99) , 
NN(
0, 
0, 
-1, -0.57508, 1, -1, 0.481647,-99) , 
10, 2.60756, 1, 0, 0.507539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554528,-99) , 
NN(
0, 
0, 
-1, -1.4161, 1, -1, 0.472769,-99) , 
9, 1.83811, 0, 0, 0.482225,-99) , 
8, -0.428565, 0, 0, 0.498953,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.030087);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49406,-99) , 
4, 0.999989, 0, 0, 0.505381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421192,-99) , 
7, -951.286, 0, 0, 0.469146,-99) , 
4, 0.999773, 0, 0, 0.502606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459335,-99) , 
4, 0.999048, 0, 0, 0.500924,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0296137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48538,-99) , 
7, -951.286, 1, 0, 0.507007,-99) , 
8, -1.59004, 1, 0, 0.525824,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493338,-99) , 
5, -0.438407, 1, 0, 0.500207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.377943,-99) , 
8, -1.85711, 0, 0, 0.49645,-99) , 
10, -1.3261, 1, 0, 0.499819,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0228651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143402, 0, 1, 0.531167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48892,-99) , 
8, 0.142862, 0, 0, 0.496315,-99) , 
3, 0.535255, 1, 0, 0.498811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458862,-99) , 
3, 9.16847, 1, 0, 0.497013,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0151903);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42883, 0, 1, 0.503144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42158,-99) , 
5, 0.210862, 0, 0, 0.471092,-99) , 
4, 0.999773, 0, 0, 0.500716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458228,-99) , 
4, 0.999048, 0, 0, 0.499085,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0395674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471486,-99) , 
10, -0.353719, 1, 0, 0.517008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483069,-99) , 
8, 0.428517, 0, 0, 0.498398,-99) , 
10, -0.123811, 1, 0, 0.505066,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48834,-99) , 
10, 0.396566, 1, 0, 0.513429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476013,-99) , 
10, -0.836789, 1, 0, 0.481646,-99) , 
2, 0.0715678, 0, 0, 0.48691,-99) , 
0, 0.499043, 1, 0, 0.497534,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0284574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.55576, 1, 1, 0.536667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472209,-99) , 
9, -0.56751, 1, 0, 0.493778,-99) , 
6, 0.0102025, 0, 0, 0.498785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453955,-99) , 
6, 0.0238062, 1, 0, 0.497058,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0241227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490155,-99) , 
7, -951.286, 1, 0, 0.517238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484187,-99) , 
10, 1.62495, 1, 0, 0.495431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.386455,-99) , 
8, -1.85714, 0, 0, 0.492075,-99) , 
10, -1.28911, 1, 0, 0.495061,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0471615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.759282, 1, 1, 0.542456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477723,-99) , 
7, -951.286, 1, 0, 0.515235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493214,-99) , 
5, -0.433438, 1, 0, 0.50649,-99) , 
NN(
0, 
0, 
-1, -1.11667, 1, -1, 0.476242,-99) , 
7, -951.286, 0, 0, 0.489439,-99) , 
9, 1.04356, 0, 0, 0.494219,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0145391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49952,-99) , 
10, -2.01547, 1, 0, 0.520516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392395,-99) , 
8, -1.85713, 0, 0, 0.497525,-99) , 
10, -1.36224, 1, 0, 0.499941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460744,-99) , 
3, 9.50466, 1, 0, 0.498364,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0255181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494976,-99) , 
4, 0.999989, 0, 0, 0.50403,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.451938,-99) , 
4, 0.999773, 0, 0, 0.500186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460074,-99) , 
4, 0.999048, 0, 0, 0.498625,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0156937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489148,-99) , 
7, -951.286, 1, 0, 0.502995,-99) , 
8, -1.45314, 1, 0, 0.521651,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.494743,-99) , 
10, -1.3596, 1, 0, 0.497628,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0363781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.92916, 1, 1, 0.537281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484147,-99) , 
7, -951.286, 0, 0, 0.496166,-99) , 
6, 0.0102026, 0, 0, 0.500971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448487,-99) , 
6, 0.0238062, 1, 0, 0.498994,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0171607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.556064, 1, 1, 0.527994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483149,-99) , 
8, -0.999984, 0, 0, 0.499654,-99) , 
3, 0.551254, 1, 0, 0.501807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460515,-99) , 
3, 9.50466, 1, 0, 0.50015,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0416508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.333459, 1, 1, 0.512881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422731,-99) , 
5, -0.541275, 1, 0, 0.487504,-99) , 
10, 2.29542, 1, 0, 0.506253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482794,-99) , 
8, -1.3674, 1, 0, 0.526358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450715,-99) , 
7, -951.286, 0, 0, 0.474802,-99) , 
9, -3.71298, 1, 0, 0.489526,-99) , 
8, -0.714277, 0, 0, 0.502068,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0198666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480712,-99) , 
7, -951.286, 1, 0, 0.500855,-99) , 
10, -2.07245, 1, 0, 0.522723,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.49303,-99) , 
10, -1.4139, 1, 0, 0.496032,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0368293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496784,-99) , 
5, -0.244904, 1, 0, 0.506219,-99) , 
NN(
0, 
0, 
-1, -0.355862, 1, -1, 0.484355,-99) , 
10, 1.82695, 1, 0, 0.499432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43498,-99) , 
7, -951.286, 0, 0, 0.4665,-99) , 
9, -4.0402, 1, 0, 0.481281,-99) , 
8, -0.999989, 0, 0, 0.496256,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.021541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454515,-99) , 
7, -951.286, 0, 0, 0.530602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42955,-99) , 
4, 0.999751, 0, 0, 0.499593,-99) , 
4, 0.999524, 1, 0, 0.501655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466138,-99) , 
3, 9.41001, 1, 0, 0.50019,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0293736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495861,-99) , 
5, -0.724432, 0, 0, 0.528419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487096,-99) , 
10, -0.087763, 1, 0, 0.495518,-99) , 
6, 0.0101941, 0, 0, 0.499328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454762,-99) , 
6, 0.0237868, 1, 0, 0.497644,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0337721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.893011, 1, 1, 0.552204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483388,-99) , 
7, -951.286, 1, 0, 0.52428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487995,-99) , 
5, 0.0340461, 1, 0, 0.499518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38596,-99) , 
9, -2.44468, 1, 0, 0.464307,-99) , 
8, -1.2857, 0, 0, 0.495479,-99) , 
5, -0.812784, 1, 0, 0.49833,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0396507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469499,-99) , 
7, -951.286, 1, 0, 0.498851,-99) , 
8, -0.999951, 1, 0, 0.514383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496214,-99) , 
7, -951.286, 1, 0, 0.510449,-99) , 
NN(
0, 
0, 
-1, -1.28574, 0, -1, 0.483284,-99) , 
10, -0.378029, 1, 0, 0.493232,-99) , 
9, 1.04356, 0, 0, 0.497177,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0390867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.500003, 1, 1, 0.513489,-99) , 
NN(
0, 
0, 
-1, -0.45137, 1, -1, 0.479234,-99) , 
10, 2.12436, 1, 0, 0.503908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537853,-99) , 
NN(
0, 
0, 
-1, -1.3708, 1, -1, 0.469598,-99) , 
10, 1.8471, 0, 0, 0.480695,-99) , 
8, -0.714294, 0, 0, 0.498124,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0295955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.16027, 1, 1, 0.50835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47568,-99) , 
5, -0.720462, 1, 0, 0.48104,-99) , 
6, 0.00226722, 0, 0, 0.499615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460072,-99) , 
6, 0.0238062, 1, 0, 0.498129,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0240602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.84416, 1, 1, 0.51592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466003,-99) , 
10, 1.295, 1, 0, 0.495347,-99) , 
5, -0.625664, 1, 0, 0.499857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453425,-99) , 
8, -2.14285, 0, 0, 0.498674,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0462599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494938,-99) , 
10, 1.81933, 1, 0, 0.508939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451028,-99) , 
5, 0.67656, 1, 0, 0.504826,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488619,-99) , 
7, -951.286, 1, 0, 0.508197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45796,-99) , 
9, 2.13329, 0, 0, 0.471855,-99) , 
10, -0.492255, 1, 0, 0.488256,-99) , 
8, 0.142861, 0, 0, 0.495778,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0324519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498244,-99) , 
7, -951.286, 0, 0, 0.52171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446199,-99) , 
5, 0.497353, 1, 0, 0.50957,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494021,-99) , 
9, -2.7148, 0, 0, 0.499255,-99) , 
NN(
0, 
0, 
-1, -0.626399, 1, -1, 0.483358,-99) , 
10, -0.15899, 1, 0, 0.490181,-99) , 
8, 0.999999, 0, 0, 0.493865,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0344125);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.51189, 1, 1, 0.524764,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487953,-99) , 
5, -0.344911, 1, 0, 0.500106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383437,-99) , 
8, -1.85713, 0, 0, 0.496696,-99) , 
10, -1.5128, 1, 0, 0.499182,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0441886);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498529,-99) , 
10, 2.27494, 1, 0, 0.518878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471476,-99) , 
9, -2.31666, 0, 0, 0.49494,-99) , 
5, 0.310203, 1, 0, 0.512797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461555,-99) , 
10, -0.32164, 1, 0, 0.511139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510731,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466092,-99) , 
5, -0.73578, 1, 0, 0.480657,-99) , 
10, -0.0959974, 1, 0, 0.496254,-99) , 
8, 0.428547, 0, 0, 0.502139,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0289184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46132,-99) , 
5, -0.0686493, 1, 0, 0.4961,-99) , 
7, -951.286, 0, 0, 0.529515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473897,-99) , 
10, 4.60069, 1, 0, 0.500486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450959,-99) , 
7, -951.286, 0, 0, 0.480134,-99) , 
8, -1.25849, 0, 0, 0.497723,-99) , 
8, 1.57142, 0, 0, 0.500434,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0244853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470091,-99) , 
5, -0.157656, 1, 0, 0.496327,-99) , 
7, -951.286, 0, 0, 0.525869,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493367,-99) , 
5, -0.813197, 1, 0, 0.495754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450464,-99) , 
0, 0.505709, 1, 0, 0.49427,-99) , 
8, 1.57138, 0, 0, 0.496943,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0447338);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481479,-99) , 
4, 0.999982, 0, 0, 0.512638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39508,-99) , 
4, 0.99981, 0, 0, 0.506118,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488091,-99) , 
9, -1.45254, 0, 0, 0.492612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439208,-99) , 
10, 1.41387, 1, 0, 0.488905,-99) , 
5, -0.251209, 1, 0, 0.497201,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0204758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482149,-99) , 
6, 0.00113376, 0, 0, 0.502372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468605,-99) , 
6, 0.0238087, 1, 0, 0.501107,-99) , 
NN(
0, 
0, 
-1, -0.14294, 0, -1, 0.470654,-99) , 
0, 0.504757, 1, 0, 0.499355,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0327743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451465,-99) , 
4, 0.999819, 0, 0, 0.503111,-99) , 
4, 0.999524, 1, 0, 0.508126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445431,-99) , 
5, 0.497575, 1, 0, 0.503731,-99) , 
NN(
0, 
0, 
-1, -0.299442, 1, -1, 0.480265,-99) , 
8, 0.428574, 0, 0, 0.492198,-99) , 
10, 0.0681685, 1, 0, 0.498582,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0286233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460485,-99) , 
5, -0.157494, 1, 0, 0.487905,-99) , 
7, -951.286, 0, 0, 0.519241,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479491,-99) , 
3, 4.6393, 1, 0, 0.511011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485118,-99) , 
0, 0.49809, 1, 0, 0.493141,-99) , 
2, 0.0714447, 0, 0, 0.495904,-99) , 
8, 1.57142, 0, 0, 0.497881,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0213251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466007,-99) , 
8, 2.04758, 1, 0, 0.490241,-99) , 
7, -951.286, 0, 0, 0.519463,-99) , 
NN(
NN(
0, 
0, 
-1, -4.18294, 1, 1, 0.504124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468792,-99) , 
5, -0.536457, 1, 0, 0.488035,-99) , 
10, 0.550008, 1, 0, 0.496859,-99) , 
8, 1.57138, 0, 0, 0.498778,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0207321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582153,-99) , 
NN(
0, 
0, 
-1, 2.04764, 1, -1, 0.481142,-99) , 
7, -951.286, 0, 0, 0.51743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489282,-99) , 
8, -0.170094, 0, 0, 0.495065,-99) , 
NN(
0, 
0, 
-1, -0.823133, 0, -1, 0.477311,-99) , 
0, 0.502852, 1, 0, 0.492724,-99) , 
8, 1.57142, 0, 0, 0.494806,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0331555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478472,-99) , 
10, 2.91926, 1, 0, 0.512221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487357,-99) , 
9, -3.73229, 1, 0, 0.490583,-99) , 
6, 0.00793623, 0, 0, 0.494713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453971,-99) , 
6, 0.0238087, 1, 0, 0.493188,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.013581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18778, 0, 1, 0.50217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411592,-99) , 
5, 0.11875, 0, 0, 0.46508,-99) , 
4, 0.999796, 0, 0, 0.49872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446192,-99) , 
4, 0.998572, 0, 0, 0.497397,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0282181);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49716,-99) , 
5, -0.228737, 1, 0, 0.508707,-99) , 
NN(
0, 
0, 
-1, -0.660216, 1, -1, 0.481041,-99) , 
10, 2.93662, 1, 0, 0.502816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521315,-99) , 
NN(
0, 
0, 
-1, -0.92711, 1, -1, 0.48653,-99) , 
5, -0.813414, 1, 0, 0.490244,-99) , 
8, -0.142871, 0, 0, 0.497281,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0131521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498085,-99) , 
3, 0.568192, 1, 0, 0.49999,-99) , 
4, 0.999048, 1, 0, 0.501811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459899,-99) , 
3, 9.50853, 1, 0, 0.500166,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0304513);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.425988, 1, 1, 0.509361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444573,-99) , 
5, -0.541267, 1, 0, 0.487806,-99) , 
10, 2.07256, 1, 0, 0.503422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547038,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436976,-99) , 
10, -1.31917, 1, 0, 0.471227,-99) , 
10, 1.91021, 0, 0, 0.482248,-99) , 
8, -1, 0, 0, 0.499699,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0232333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491636,-99) , 
5, -0.070841, 1, 0, 0.52436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471941,-99) , 
10, 3.65917, 1, 0, 0.49828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466044,-99) , 
7, -951.286, 0, 0, 0.485711,-99) , 
8, -0.918359, 0, 0, 0.495656,-99) , 
8, 1.85714, 0, 0, 0.497153,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0322987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474371,-99) , 
8, 2.04763, 1, 0, 0.49827,-99) , 
7, -951.286, 0, 0, 0.524056,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476667,-99) , 
3, 4.63401, 1, 0, 0.508425,-99) , 
NN(
0, 
0, 
-1, -0.347396, 1, -1, 0.488492,-99) , 
2, 0.0710265, 0, 0, 0.491597,-99) , 
8, 1.57142, 0, 0, 0.494334,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0190366);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492825,-99) , 
10, 2.91926, 1, 0, 0.520809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483693,-99) , 
10, 1.49993, 1, 0, 0.497156,-99) , 
6, 0.0102035, 0, 0, 0.499896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470498,-99) , 
6, 0.0238087, 1, 0, 0.49878,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0229099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.779445, 1, 1, 0.516154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470483,-99) , 
9, -2.27781, 0, 0, 0.492489,-99) , 
5, 0.216617, 1, 0, 0.509057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495393,-99) , 
5, -0.81354, 1, 0, 0.497871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455363,-99) , 
2, 0.214564, 1, 0, 0.496091,-99) , 
8, 0.428575, 0, 0, 0.500696,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0196578);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0645417, 1, 1, 0.526962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496936,-99) , 
9, -2.18999, 0, 0, 0.502665,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47334,-99) , 
5, -0.447804, 1, 0, 0.490731,-99) , 
10, 0.360988, 1, 0, 0.49661,-99) , 
8, 1.85714, 0, 0, 0.498214,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0327245);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459773,-99) , 
10, 5.41142, 1, 0, 0.508052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486183,-99) , 
5, -0.719652, 1, 0, 0.489944,-99) , 
6, 0.00340116, 0, 0, 0.499644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465912,-99) , 
6, 0.0238087, 1, 0, 0.498377,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0381198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47007,-99) , 
8, -1.13363, 0, 0, 0.503165,-99) , 
9, -4.18342, 1, 0, 0.507292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420643,-99) , 
4, 0.999905, 0, 0, 0.505638,-99) , 
NN(
0, 
0, 
-1, 1.9952, 1, -1, 0.475396,-99) , 
5, -0.438477, 1, 0, 0.493818,-99) , 
10, 0.346506, 1, 0, 0.500043,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0272598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488612,-99) , 
5, -0.34478, 1, 0, 0.501858,-99) , 
7, -951.286, 0, 0, 0.521458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498512,-99) , 
9, -2.51127, 0, 0, 0.50342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486007,-99) , 
6, 0.023792, 0, 0, 0.488775,-99) , 
10, 0.0148824, 1, 0, 0.495282,-99) , 
8, 1.28568, 0, 0, 0.498722,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.00926555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472311,-99) , 
4, 0.999728, 0, 0, 0.497996,-99) , 
8, 1.8571, 0, 0, 0.499719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45556,-99) , 
4, 0.998572, 0, 0, 0.4986,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0548806);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452638,-99) , 
8, -0.768159, 0, 0, 0.52926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494662,-99) , 
5, -0.277274, 1, 0, 0.501125,-99) , 
9, -2.03845, 0, 0, 0.506827,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470794,-99) , 
7, -951.286, 1, 0, 0.507649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456064,-99) , 
7, -951.286, 0, 0, 0.480147,-99) , 
9, 1.26162, 0, 0, 0.490571,-99) , 
10, 0.725063, 1, 0, 0.499378,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0179755);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497471,-99) , 
10, 0.047316, 1, 0, 0.504203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476274,-99) , 
6, 0.0238087, 1, 0, 0.503132,-99) , 
NN(
0, 
0, 
-1, 0.142347, 0, -1, 0.472907,-99) , 
0, 0.491424, 0, 0, 0.501335,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0205697);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438357,-99) , 
7, -951.286, 0, 0, 0.528412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450292,-99) , 
4, 0.999728, 0, 0, 0.500412,-99) , 
4, 0.999524, 1, 0, 0.502238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463499,-99) , 
3, 9.52058, 1, 0, 0.50073,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.018741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.853273, 1, 1, 0.526506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495492,-99) , 
2, 0.0711326, 0, 0, 0.499313,-99) , 
3, 0.573094, 1, 0, 0.501566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469951,-99) , 
3, 9.52452, 1, 0, 0.50032,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0203855);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490072,-99) , 
8, 2.04762, 1, 0, 0.501976,-99) , 
7, -951.286, 0, 0, 0.529141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496295,-99) , 
10, -0.496635, 1, 0, 0.501809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47997,-99) , 
10, 5.44341, 1, 0, 0.500081,-99) , 
8, 1.57142, 0, 0, 0.502553,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0305709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418427,-99) , 
4, 0.999619, 0, 0, 0.507603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484069,-99) , 
2, -0.0713947, 1, 0, 0.490525,-99) , 
5, 0.216585, 1, 0, 0.502995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460457,-99) , 
8, -2.14284, 0, 0, 0.501926,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0353818);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.517971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479908,-99) , 
9, -2.19552, 0, 0, 0.496933,-99) , 
10, -0.627386, 1, 0, 0.50797,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489536,-99) , 
7, -951.286, 0, 0, 0.510955,-99) , 
NN(
0, 
0, 
-1, -0.368118, 1, -1, 0.488305,-99) , 
8, 1.28571, 0, 0, 0.493518,-99) , 
10, 0.352436, 1, 0, 0.500248,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0291777);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.413504, 1, 1, 0.515278,-99) , 
NN(
0, 
0, 
-1, -0.660184, 1, -1, 0.480835,-99) , 
10, 2.7989, 1, 0, 0.507109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483015,-99) , 
8, -1.44103, 1, 0, 0.516837,-99) , 
NN(
0, 
0, 
-1, -1.80271, 0, -1, 0.489404,-99) , 
10, -1.72583, 1, 0, 0.492618,-99) , 
8, 0.142861, 0, 0, 0.499211,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0255616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455051,-99) , 
7, -951.286, 0, 0, 0.533265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495579,-99) , 
2, 0.0200063, 0, 0, 0.500954,-99) , 
4, 0.999524, 1, 0, 0.503065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471044,-99) , 
3, 9.18112, 1, 0, 0.50167,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0210401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495349,-99) , 
10, -0.0189006, 1, 0, 0.50246,-99) , 
6, 0.0124712, 0, 0, 0.504625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469235,-99) , 
6, 0.0238087, 1, 0, 0.503307,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.028005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0346961, 1, 1, 0.526691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444874,-99) , 
5, -0.545819, 1, 0, 0.494192,-99) , 
10, 2.2124, 1, 0, 0.515312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498879,-99) , 
9, -4.36694, 1, 0, 0.52314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43781,-99) , 
8, -1.76189, 0, 0, 0.499845,-99) , 
10, -1.60318, 1, 0, 0.502313,-99) , 
8, 0.714287, 0, 0, 0.505769,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0221147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.77548, 0, 1, 0.512352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460112,-99) , 
8, 1.0952, 1, 0, 0.485035,-99) , 
5, 0.497575, 1, 0, 0.508163,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493956,-99) , 
5, 0.490266, 0, 0, 0.496828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454893,-99) , 
0, 0.504757, 1, 0, 0.494445,-99) , 
8, 0.142855, 0, 0, 0.500686,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0362026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999995, 0, 1, 0.517224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435109,-99) , 
4, 0.999905, 0, 0, 0.509602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497647,-99) , 
9, -3.42612, 0, 0, 0.510379,-99) , 
NN(
0, 
0, 
-1, -0.23066, 0, -1, 0.484692,-99) , 
10, -0.837978, 1, 0, 0.493818,-99) , 
5, -0.251473, 1, 0, 0.501417,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0192276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.872894, 1, 1, 0.518311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493544,-99) , 
7, -951.286, 1, 0, 0.50082,-99) , 
8, 0.999969, 0, 0, 0.504156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464435,-99) , 
0, 0.505709, 1, 0, 0.502882,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0193378);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499064,-99) , 
5, 0.599544, 0, 0, 0.506292,-99) , 
5, 0.273836, 1, 0, 0.524183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497164,-99) , 
5, -0.532008, 1, 0, 0.501771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414769,-99) , 
8, -1.85713, 0, 0, 0.49924,-99) , 
10, -1.43229, 1, 0, 0.501709,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0217136);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0640806, 1, 1, 0.528553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496403,-99) , 
8, -0.687299, 0, 0, 0.507856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484707,-99) , 
5, -0.534806, 1, 0, 0.495502,-99) , 
10, 0.360988, 1, 0, 0.501543,-99) , 
8, 1.85709, 0, 0, 0.50295,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0169831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18769, 0, 1, 0.503307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435777,-99) , 
7, -951.286, 0, 0, 0.481945,-99) , 
4, 0.999796, 0, 0, 0.501273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452994,-99) , 
4, 0.998572, 0, 0, 0.500055,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0223543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497167,-99) , 
5, 0.590252, 0, 0, 0.503762,-99) , 
5, 0.184475, 1, 0, 0.518519,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483907,-99) , 
10, 1.84792, 1, 0, 0.497974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433323,-99) , 
8, -1.85714, 0, 0, 0.496073,-99) , 
10, -1.3261, 1, 0, 0.498623,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.01265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496553,-99) , 
7, -951.286, 1, 0, 0.520605,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.495124,-99) , 
10, -1.61899, 1, 0, 0.497021,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0152063);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498805,-99) , 
9, 1.13625, 0, 0, 0.501155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442223,-99) , 
7, -951.286, 1, 0, 0.476423,-99) , 
10, 3.71091, 1, 0, 0.497974,-99) , 
8, 2.14281, 0, 0, 0.499283,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0321394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.237144, 1, 1, 0.514645,-99) , 
NN(
0, 
0, 
-1, -0.701571, 1, -1, 0.481776,-99) , 
10, 3.16158, 1, 0, 0.507977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495699,-99) , 
7, -951.286, 1, 0, 0.51044,-99) , 
NN(
0, 
0, 
-1, -0.0911779, 1, -1, 0.481975,-99) , 
10, -0.583659, 1, 0, 0.494303,-99) , 
8, 0.142834, 0, 0, 0.500552,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.015964);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.519832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476265,-99) , 
10, 6.35097, 1, 0, 0.501463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457421,-99) , 
8, -1.57139, 0, 0, 0.499325,-99) , 
10, -1.48659, 1, 0, 0.501185,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0268992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214198, 0, 1, 0.532264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453925,-99) , 
2, -0.207481, 0, 0, 0.485554,-99) , 
3, 4.62454, 1, 0, 0.513095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496935,-99) , 
9, -2.77256, 1, 0, 0.502827,-99) , 
NN(
0, 
0, 
-1, 0.766693, 1, -1, 0.484226,-99) , 
5, 0.123173, 1, 0, 0.497011,-99) , 
2, -0.0714407, 1, 0, 0.49971,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0203522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18789, 0, 1, 0.506905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451149,-99) , 
5, 0.211994, 0, 0, 0.482139,-99) , 
4, 0.999864, 0, 0, 0.504001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473157,-99) , 
4, 0.999048, 0, 0, 0.502814,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0149623);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.37329, 0, 1, 0.523113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496764,-99) , 
10, -1.11472, 1, 0, 0.499552,-99) , 
3, 0.555516, 1, 0, 0.501375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467764,-99) , 
3, 9.50853, 1, 0, 0.500053,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.00848249);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474017,-99) , 
2, 0.214293, 1, 0, 0.499701,-99) , 
8, 1.85709, 0, 0, 0.501343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46553,-99) , 
5, 0.76731, 1, 0, 0.500291,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0186519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497522,-99) , 
5, -0.0642635, 1, 0, 0.529464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494592,-99) , 
10, -0.0573925, 1, 0, 0.50054,-99) , 
8, 1.8571, 0, 0, 0.502079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465082,-99) , 
6, 0.023792, 1, 0, 0.500704,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0135313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497145,-99) , 
5, -0.722671, 0, 0, 0.526576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498367,-99) , 
5, -0.812917, 1, 0, 0.499977,-99) , 
6, 0.0102027, 0, 0, 0.503066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473164,-99) , 
6, 0.0238062, 1, 0, 0.501929,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0210178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.79326, 0, 1, 0.506923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440735,-99) , 
5, 0.118771, 0, 0, 0.480145,-99) , 
4, 0.999864, 0, 0, 0.503523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465294,-99) , 
4, 0.998572, 0, 0, 0.502551,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0366432);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479069,-99) , 
4, 0.999982, 0, 0, 0.508118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436477,-99) , 
4, 0.99981, 0, 0, 0.504133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491059,-99) , 
9, -1.66266, 0, 0, 0.494679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434095,-99) , 
10, 1.32711, 1, 0, 0.491012,-99) , 
5, -0.157607, 1, 0, 0.498009,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0274081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.404345, 1, 1, 0.512209,-99) , 
NN(
0, 
0, 
-1, -0.567518, 1, -1, 0.485872,-99) , 
10, 2.58846, 1, 0, 0.505986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530832,-99) , 
NN(
0, 
0, 
-1, -1.89796, 0, -1, 0.486338,-99) , 
10, -1.98663, 1, 0, 0.491698,-99) , 
8, -0.428584, 0, 0, 0.50115,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.027777);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497445,-99) , 
4, 0.999995, 0, 0, 0.516006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449133,-99) , 
4, 0.999905, 0, 0, 0.510254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495549,-99) , 
2, -0.0715932, 1, 0, 0.499452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438693,-99) , 
10, 2.029, 1, 0, 0.496393,-99) , 
5, -0.438411, 1, 0, 0.501406,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.013355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.457167, 1, 1, 0.504608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441202,-99) , 
2, -0.071264, 0, 0, 0.480829,-99) , 
3, 7.17697, 1, 0, 0.502585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465992,-99) , 
5, 0.778356, 1, 0, 0.501614,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0152013);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0640806, 1, 1, 0.527747,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497493,-99) , 
7, -951.286, 1, 0, 0.517854,-99) , 
NN(
0, 
0, 
-1, -1.84354, 0, -1, 0.495022,-99) , 
10, -1.48659, 1, 0, 0.497228,-99) , 
8, 1.85706, 0, 0, 0.498835,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0263636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.533298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458622,-99) , 
5, -0.162543, 0, 0, 0.483272,-99) , 
3, 4.73274, 1, 0, 0.513485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472682,-99) , 
8, -1.57174, 0, 0, 0.50794,-99) , 
NN(
0, 
0, 
-1, 2.029, 1, -1, 0.49168,-99) , 
5, -0.438609, 1, 0, 0.497581,-99) , 
2, 0.0713547, 0, 0, 0.500065,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0244193);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.29289, 1, 1, 0.522766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488816,-99) , 
10, 1.67532, 1, 0, 0.502072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441017,-99) , 
8, -1.85714, 0, 0, 0.500286,-99) , 
10, -1.43431, 1, 0, 0.502491,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0131089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485929,-99) , 
8, -1.61225, 0, 0, 0.502539,-99) , 
8, 1.85714, 0, 0, 0.503857,-99) , 
NN(
0, 
0, 
-1, -0.14299, 0, -1, 0.480033,-99) , 
0, 0.504757, 1, 0, 0.502521,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0172536);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472723,-99) , 
5, 0.489997, 1, 0, 0.513075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497267,-99) , 
10, -1.60318, 1, 0, 0.499498,-99) , 
8, 0.999913, 0, 0, 0.502074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468975,-99) , 
7, -951.286, 0, 0, 0.482719,-99) , 
0, 0.492376, 0, 0, 0.500382,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0150063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499811,-99) , 
5, -0.0640806, 1, 0, 0.530959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498353,-99) , 
2, -0.0676236, 1, 0, 0.502301,-99) , 
NN(
0, 
0, 
-1, 0.490078, 1, -1, 0.490017,-99) , 
3, 4.62186, 1, 0, 0.499726,-99) , 
8, 1.85714, 0, 0, 0.501386,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0194763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499024,-99) , 
8, -1.45342, 1, 0, 0.516197,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494238,-99) , 
5, -0.344813, 1, 0, 0.501144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444056,-99) , 
8, -1.85713, 0, 0, 0.499474,-99) , 
10, -1.43229, 1, 0, 0.501129,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.022719);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530091,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0710222, 0, 1, 0.507994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476525,-99) , 
5, -0.64232, 1, 0, 0.487027,-99) , 
10, 1.05285, 1, 0, 0.500272,-99) , 
5, -0.906596, 1, 0, 0.501732,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0209157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.13287, 0, 1, 0.506208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447443,-99) , 
7, -951.286, 1, 0, 0.488435,-99) , 
10, 3.65988, 1, 0, 0.503896,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484548,-99) , 
5, -0.515572, 0, 0, 0.492256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465859,-99) , 
5, 0.0173141, 1, 0, 0.483197,-99) , 
0, 0.492376, 0, 0, 0.502074,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0194405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428743, 1, 1, 0.524462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486628,-99) , 
9, -0.760814, 1, 0, 0.498954,-99) , 
6, 0.0113293, 0, 0, 0.501273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472273,-99) , 
6, 0.023792, 1, 0, 0.500182,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0246956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57138, 0, 1, 0.505542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429339,-99) , 
4, 0.999714, 0, 0, 0.501924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482419,-99) , 
8, 1.10205, 1, 0, 0.510429,-99) , 
NN(
0, 
0, 
-1, -0.579391, 1, -1, 0.480867,-99) , 
9, -2.57583, 0, 0, 0.48956,-99) , 
5, 0.216583, 1, 0, 0.498611,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0208349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485098,-99) , 
10, 2.3448, 1, 0, 0.50741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493167,-99) , 
9, -3.46318, 1, 0, 0.495815,-99) , 
8, 0.714285, 0, 0, 0.498842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466176,-99) , 
5, 0.778081, 1, 0, 0.497988,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0235444);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454619,-99) , 
7, -951.286, 0, 0, 0.535326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495396,-99) , 
3, 0.574942, 1, 0, 0.497645,-99) , 
4, 0.999524, 1, 0, 0.500072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468286,-99) , 
3, 9.50466, 1, 0, 0.49881,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0213049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.55137, 0, 1, 0.524088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460622,-99) , 
7, -951.286, 1, 0, 0.50366,-99) , 
10, 4.27896, 1, 0, 0.514346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499562,-99) , 
8, 1.85714, 0, 0, 0.501309,-99) , 
NN(
0, 
0, 
-1, 2.96848, 1, -1, 0.467462,-99) , 
10, 2.21335, 1, 0, 0.498363,-99) , 
5, -0.625605, 1, 0, 0.50199,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0179898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496057,-99) , 
4, 0.999955, 1, 0, 0.500947,-99) , 
3, 9.18505, 0, 0, 0.502604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471102,-99) , 
4, 0.999048, 0, 0, 0.501419,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0256906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48911,-99) , 
10, 0.98146, 1, 0, 0.503237,-99) , 
9, 1.40316, 0, 0, 0.505529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464112,-99) , 
7, -951.286, 1, 0, 0.489722,-99) , 
10, 3.90788, 1, 0, 0.503606,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0153956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25718, 0, 1, 0.505527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451198,-99) , 
5, -0.790632, 1, 0, 0.487388,-99) , 
10, 3.77212, 1, 0, 0.503162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463751,-99) , 
5, 0.778355, 1, 0, 0.502144,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0195128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46638,-99) , 
8, 2.02037, 1, 0, 0.497815,-99) , 
7, -951.286, 0, 0, 0.515424,-99) , 
NN(
NN(
0, 
0, 
-1, -2.37093, 0, 1, 0.505822,-99) , 
NN(
0, 
0, 
-1, -0.2528, 1, -1, 0.492142,-99) , 
10, 0.0148824, 1, 0, 0.498274,-99) , 
8, 1.28568, 0, 0, 0.50048,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0283635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.310027, 1, 1, 0.510631,-99) , 
NN(
0, 
0, 
-1, -0.689332, 1, -1, 0.48488,-99) , 
10, 3.01076, 1, 0, 0.505354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4733,-99) , 
10, -0.875587, 1, 0, 0.487676,-99) , 
10, 2.75691, 0, 0, 0.49226,-99) , 
8, -0.142858, 0, 0, 0.499608,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0289706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484169,-99) , 
10, 4.41728, 1, 0, 0.501608,-99) , 
8, -0.999951, 1, 0, 0.514562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466703,-99) , 
10, 1.99199, 1, 0, 0.501124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.410038,-99) , 
9, -2.37304, 1, 0, 0.467628,-99) , 
8, -1.28572, 0, 0, 0.496954,-99) , 
9, 0.874947, 0, 0, 0.500429,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0317957);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491355,-99) , 
4, 0.999995, 0, 0, 0.50837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460923,-99) , 
4, 0.999905, 0, 0, 0.504226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484013,-99) , 
8, 0.428493, 0, 0, 0.491849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457377,-99) , 
10, 2.00222, 1, 0, 0.490015,-99) , 
5, -0.439601, 1, 0, 0.495102,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0396082);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464787,-99) , 
10, 4.01505, 1, 0, 0.518162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423495,-99) , 
8, -1.57143, 0, 0, 0.494432,-99) , 
7, -951.286, 0, 0, 0.503416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49139,-99) , 
0, 0.499043, 0, 0, 0.510554,-99) , 
NN(
0, 
0, 
-1, -0.00325001, 1, -1, 0.481857,-99) , 
2, 0.0715678, 0, 0, 0.486345,-99) , 
5, -0.157619, 1, 0, 0.495459,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0220208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.595506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478477,-99) , 
3, 4.00733, 1, 0, 0.497287,-99) , 
8, -0.999935, 1, 0, 0.510777,-99) , 
NN(
NN(
0, 
0, 
-1, 2.41061, 1, -1, 0.496166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438113,-99) , 
10, -1.74095, 1, 0, 0.469065,-99) , 
8, -1.28573, 0, 0, 0.492775,-99) , 
9, 0.990198, 0, 0, 0.496194,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0303192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488657,-99) , 
7, -951.286, 0, 0, 0.502262,-99) , 
6, 0.023792, 0, 0, 0.506881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497108,-99) , 
9, -3.36674, 0, 0, 0.511341,-99) , 
NN(
0, 
0, 
-1, -0.40619, 0, -1, 0.489102,-99) , 
10, -0.929577, 1, 0, 0.495268,-99) , 
5, -0.43849, 1, 0, 0.499433,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0170624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472685,-99) , 
7, -951.286, 0, 0, 0.54129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498028,-99) , 
8, 1.85714, 0, 0, 0.499771,-99) , 
4, 0.999524, 1, 0, 0.502524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475438,-99) , 
3, 9.41001, 1, 0, 0.501417,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0140563);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0639358, 1, 1, 0.527462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498623,-99) , 
10, -0.112951, 1, 0, 0.503625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479223,-99) , 
6, 0.0237841, 1, 0, 0.502685,-99) , 
8, 1.8571, 0, 0, 0.503972,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0124354);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5421,-99) , 
NN(
NN(
0, 
0, 
-1, 9.04121, 0, 1, 0.504339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476472,-99) , 
4, 0.999048, 0, 0, 0.503301,-99) , 
8, 2.14285, 0, 0, 0.50452,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0273283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494268,-99) , 
4, 0.999982, 0, 0, 0.511319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457617,-99) , 
4, 0.99981, 0, 0, 0.508251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499942,-99) , 
9, -3.05727, 0, 0, 0.507781,-99) , 
NN(
0, 
0, 
-1, -2.3148, 0, -1, 0.484868,-99) , 
10, -0.301644, 1, 0, 0.497895,-99) , 
5, -0.157619, 1, 0, 0.503416,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0237405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473688,-99) , 
9, -4.06088, 1, 0, 0.50926,-99) , 
9, -3.65145, 0, 0, 0.518879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481453,-99) , 
7, -951.286, 1, 0, 0.517148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425,-99) , 
8, -1.57143, 0, 0, 0.496674,-99) , 
9, 2.07111, 0, 0, 0.49999,-99) , 
10, -1.20771, 1, 0, 0.502509,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0240455);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481355,-99) , 
10, 6.15051, 1, 0, 0.501808,-99) , 
8, -0.714244, 1, 0, 0.513973,-99) , 
NN(
NN(
0, 
0, 
-1, -1.96596, 0, 1, 0.505869,-99) , 
NN(
0, 
0, 
-1, -0.428553, 0, -1, 0.485653,-99) , 
10, 0.630282, 1, 0, 0.498619,-99) , 
9, 1.04356, 0, 0, 0.501469,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0172051);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540599,-99) , 
NN(
NN(
0, 
0, 
-1, -0.187878, 1, 1, 0.505315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491671,-99) , 
9, 1.51869, 0, 0, 0.495549,-99) , 
8, -0.0612777, 0, 0, 0.500568,-99) , 
8, 2.14281, 0, 0, 0.501819,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0136968);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528037,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497209,-99) , 
7, -951.286, 1, 0, 0.502402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476852,-99) , 
7, -951.286, 0, 0, 0.489392,-99) , 
0, 0.502852, 1, 0, 0.500708,-99) , 
8, 2.1428, 0, 0, 0.501547,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0217757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488532,-99) , 
10, 4.21903, 1, 0, 0.499042,-99) , 
8, -1.00043, 1, 0, 0.50965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494196,-99) , 
10, -0.661758, 1, 0, 0.498629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455765,-99) , 
10, 3.11606, 1, 0, 0.496458,-99) , 
5, -0.719242, 1, 0, 0.498552,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0330771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482696,-99) , 
10, 3.11248, 1, 0, 0.522497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426452,-99) , 
8, -1.28574, 0, 0, 0.492831,-99) , 
7, -951.286, 0, 0, 0.503925,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49417,-99) , 
8, 1.57056, 0, 0, 0.496463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454661,-99) , 
10, 1.65128, 1, 0, 0.49384,-99) , 
5, -0.34481, 1, 0, 0.498086,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.00964759);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532902,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502606,-99) , 
NN(
0, 
0, 
-1, 0.488613, 1, -1, 0.490875,-99) , 
3, 4.68521, 1, 0, 0.500203,-99) , 
8, 2.14277, 0, 0, 0.501199,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0134308);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495994,-99) , 
10, 2.54586, 1, 0, 0.519054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477145,-99) , 
8, -1.28572, 0, 0, 0.498496,-99) , 
6, 0.0101963, 0, 0, 0.500901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47199,-99) , 
6, 0.023792, 1, 0, 0.49981,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0169475);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.519359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495783,-99) , 
5, -0.532008, 1, 0, 0.500369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455922,-99) , 
8, -1.85713, 0, 0, 0.499089,-99) , 
10, -1.43229, 1, 0, 0.501106,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0249643);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497551,-99) , 
10, 2.36122, 1, 0, 0.518148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472122,-99) , 
5, 0.497056, 1, 0, 0.510902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49014,-99) , 
3, 4.53546, 1, 0, 0.512086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487115,-99) , 
2, -0.00421204, 1, 0, 0.495076,-99) , 
2, 0.070568, 0, 0, 0.497738,-99) , 
8, 0.714259, 0, 0, 0.501243,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0279108);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491474,-99) , 
10, 2.98475, 1, 0, 0.529393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451654,-99) , 
10, 0.861932, 1, 0, 0.491737,-99) , 
5, 0.123065, 1, 0, 0.516123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49831,-99) , 
9, -2.67714, 0, 0, 0.503848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488434,-99) , 
8, -0.904771, 1, 0, 0.492589,-99) , 
10, -0.0440882, 1, 0, 0.497779,-99) , 
8, 0.999968, 0, 0, 0.501281,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0211038);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496698,-99) , 
10, 0.398424, 1, 0, 0.503883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487525,-99) , 
10, 2.15825, 0, 0, 0.494386,-99) , 
8, -0.795908, 0, 0, 0.501639,-99) , 
8, 2.14285, 0, 0, 0.50282,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0230566);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497305,-99) , 
10, 0.633258, 1, 0, 0.506378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488304,-99) , 
5, -0.813531, 1, 0, 0.493523,-99) , 
8, -0.551032, 0, 0, 0.502388,-99) , 
8, 2.14281, 0, 0, 0.503352,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0307931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495069,-99) , 
9, -3.95964, 0, 0, 0.510431,-99) , 
5, 0.10284, 1, 0, 0.520537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44178,-99) , 
4, 0.99981, 0, 0, 0.507168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478913,-99) , 
9, -2.41367, 0, 0, 0.489969,-99) , 
5, -0.0641662, 1, 0, 0.501275,-99) , 
10, -1.1656, 1, 0, 0.503964,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0239717);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489549,-99) , 
10, -0.428778, 1, 0, 0.508606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492312,-99) , 
6, 0.0113293, 0, 0, 0.496159,-99) , 
10, 0.047316, 1, 0, 0.501227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476569,-99) , 
6, 0.023792, 1, 0, 0.500295,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.0202762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.535459,-99) , 
NN(
0, 
0, 
-1, 0.0770723, 1, -1, 0.485142,-99) , 
3, 4.73274, 1, 0, 0.515516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489382,-99) , 
2, -0.00338021, 1, 0, 0.496241,-99) , 
8, 1.8571, 0, 0, 0.497806,-99) , 
2, 0.0714447, 0, 0, 0.50057,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0306767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490204,-99) , 
4, 0.999973, 0, 0, 0.508586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442699,-99) , 
4, 0.999714, 0, 0, 0.505583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469823,-99) , 
4, 0.999977, 1, 0, 0.487263,-99) , 
4, 0.999524, 1, 0, 0.491838,-99) , 
5, 0.123176, 1, 0, 0.501256,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0286655);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471308,-99) , 
7, -0.714379, 0, 0, 0.526186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469589,-99) , 
10, 2.0276, 1, 0, 0.497122,-99) , 
7, -951.286, 0, 0, 0.508943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498981,-99) , 
9, -4.29411, 1, 0, 0.502922,-99) , 
NN(
0, 
0, 
-1, -0.174787, 1, -1, 0.48808,-99) , 
10, -0.196594, 1, 0, 0.494836,-99) , 
8, 0.714287, 0, 0, 0.498571,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.028142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.501525, 1, 1, 0.508741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469949,-99) , 
5, -0.63006, 1, 0, 0.489794,-99) , 
10, 1.76348, 1, 0, 0.502742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448857,-99) , 
9, -3.11565, 1, 0, 0.477071,-99) , 
10, 1.79458, 0, 0, 0.488951,-99) , 
8, -1.00002, 0, 0, 0.500305,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.014171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496487,-99) , 
2, 0.0714036, 0, 0, 0.498588,-99) , 
8, 1.85714, 0, 0, 0.50017,-99) , 
NN(
0, 
0, 
-1, -0.757935, 1, -1, 0.47244,-99) , 
5, 0.683664, 1, 0, 0.498555,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0128649);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499146,-99) , 
4, 0.999524, 1, 0, 0.502623,-99) , 
NN(
0, 
0, 
-1, 0.490274, 1, -1, 0.489852,-99) , 
3, 4.82263, 1, 0, 0.500139,-99) , 
8, 2.14278, 0, 0, 0.50137,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0276476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.69783, 0, 1, 0.513903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464077,-99) , 
4, 0.999905, 0, 0, 0.509656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492507,-99) , 
7, -951.286, 1, 0, 0.503097,-99) , 
NN(
0, 
0, 
-1, -0.307253, 1, -1, 0.466538,-99) , 
10, 1.50552, 1, 0, 0.49939,-99) , 
5, -0.438776, 1, 0, 0.503088,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0139674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0373927, 1, 1, 0.521986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496288,-99) , 
10, -1.3804, 1, 0, 0.4977,-99) , 
8, 1.57139, 0, 0, 0.499695,-99) , 
NN(
0, 
0, 
-1, -0.882675, 1, -1, 0.474192,-99) , 
5, 0.684497, 1, 0, 0.498215,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0316283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438207,-99) , 
7, -1.57159, 0, 0, 0.500986,-99) , 
4, 0.999524, 1, 0, 0.507611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487778,-99) , 
8, -0.428588, 0, 0, 0.502853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421157,-99) , 
4, 0.999524, 0, 0, 0.497918,-99) , 
7, -951.286, 0, 0, 0.502107,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0257219);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.44313, 1, 1, 0.508112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445479,-99) , 
4, 0.999619, 0, 0, 0.505781,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487668,-99) , 
9, -2.44186, 0, 0, 0.496676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456151,-99) , 
10, 0.530532, 1, 0, 0.491582,-99) , 
5, 0.216587, 1, 0, 0.501984,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.032704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464582,-99) , 
10, 4.69222, 1, 0, 0.52112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43911,-99) , 
8, -1.5716, 0, 0, 0.494705,-99) , 
7, -951.286, 0, 0, 0.504527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494656,-99) , 
9, -2.06179, 0, 0, 0.499717,-99) , 
NN(
0, 
0, 
-1, -1.01798, 0, -1, 0.473964,-99) , 
10, 0.688208, 1, 0, 0.49436,-99) , 
5, -0.344813, 1, 0, 0.498652,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0178647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526552,-99) , 
NN(
NN(
0, 
0, 
-1, -1.1629, 0, 1, 0.504328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486433,-99) , 
8, 1.61226, 0, 0, 0.491143,-99) , 
10, 1.10133, 1, 0, 0.499021,-99) , 
8, -1.85713, 1, 0, 0.500302,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0305513);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476668,-99) , 
7, -951.286, 0, 0, 0.545286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490724,-99) , 
5, -0.251703, 1, 0, 0.499904,-99) , 
4, 0.999524, 1, 0, 0.502978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475101,-99) , 
2, 0.153025, 1, 0, 0.50235,-99) , 
NN(
0, 
0, 
-1, -0.139466, 0, -1, 0.458957,-99) , 
2, -0.0714407, 0, 0, 0.488249,-99) , 
3, 4.6529, 1, 0, 0.499931,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0247121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.729823, 1, 1, 0.515351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456774,-99) , 
9, -3.08618, 1, 0, 0.49332,-99) , 
8, -0.965867, 0, 0, 0.508993,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493818,-99) , 
8, 1.57139, 0, 0, 0.49663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461306,-99) , 
5, 0.497331, 1, 0, 0.495031,-99) , 
10, 0.115479, 1, 0, 0.500784,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0268764);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475189,-99) , 
7, -951.286, 0, 0, 0.552334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495393,-99) , 
2, 0.0355003, 0, 0, 0.499873,-99) , 
4, 0.999524, 1, 0, 0.503493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48909,-99) , 
8, 0.428412, 0, 0, 0.498796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452813,-99) , 
5, 0.490068, 1, 0, 0.491651,-99) , 
3, 4.82088, 1, 0, 0.501196,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0175343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495665,-99) , 
8, -0.779013, 0, 0, 0.510604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498247,-99) , 
8, -1.28571, 1, 0, 0.501137,-99) , 
10, 0.0432039, 1, 0, 0.504898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472247,-99) , 
0, 0.505709, 1, 0, 0.503849,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0207902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.211983, 0, 1, 0.515521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491575,-99) , 
3, 2.61902, 0, 0, 0.500006,-99) , 
3, 0.998914, 1, 0, 0.503273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474011,-99) , 
3, 9.50466, 1, 0, 0.502116,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0264034);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.526533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46883,-99) , 
8, -1.31034, 0, 0, 0.507363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491648,-99) , 
8, -1.00001, 1, 0, 0.495938,-99) , 
10, 1.33526, 1, 0, 0.503019,-99) , 
10, -1.65099, 1, 0, 0.504719,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0211888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477771,-99) , 
8, -1.28574, 0, 0, 0.501218,-99) , 
9, 1.45248, 0, 0, 0.503315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515218,-99) , 
NN(
0, 
0, 
-1, 2.02456, 1, -1, 0.467894,-99) , 
5, -0.880973, 1, 0, 0.488867,-99) , 
10, 3.84667, 1, 0, 0.501503,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0308187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.613779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492419,-99) , 
7, -951.286, 0, 0, 0.552401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488091,-99) , 
5, -0.0660846, 1, 0, 0.500345,-99) , 
4, 0.999524, 1, 0, 0.503956,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487105,-99) , 
3, 9.26909, 0, 0, 0.496476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43998,-99) , 
5, 0.486703, 1, 0, 0.487725,-99) , 
3, 4.62894, 1, 0, 0.500557,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0213261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484247,-99) , 
10, 3.44597, 1, 0, 0.508495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491458,-99) , 
10, -0.356802, 1, 0, 0.498322,-99) , 
8, 0.428573, 0, 0, 0.501951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471805,-99) , 
0, 0.505709, 1, 0, 0.500988,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0197701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495472,-99) , 
7, -951.286, 1, 0, 0.512379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482222,-99) , 
7, -951.286, 1, 0, 0.510046,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.494146,-99) , 
9, 2.04574, 0, 0, 0.496641,-99) , 
10, -1.3596, 1, 0, 0.498357,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.013464);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.2381, 1, 1, 0.527873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480002,-99) , 
10, 6.70472, 1, 0, 0.502826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477162,-99) , 
6, 0.0238062, 1, 0, 0.501847,-99) , 
8, 1.85714, 0, 0, 0.50322,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0178928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -4.32635, 1, 1, 0.517846,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491913,-99) , 
5, -0.43849, 1, 0, 0.497332,-99) , 
10, -1.31081, 1, 0, 0.499688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471839,-99) , 
3, 9.42206, 1, 0, 0.498567,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0197768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494282, 1, 1, 0.513762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493399,-99) , 
2, 0.0228716, 0, 0, 0.499763,-99) , 
2, -0.0509831, 1, 0, 0.502097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476593,-99) , 
2, -0.214238, 0, 0, 0.500937,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0151089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49969,-99) , 
3, 9.18778, 0, 0, 0.501779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444359,-99) , 
4, 0.999728, 0, 0, 0.499934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420226,-99) , 
7, -951.286, 0, 0, 0.475868,-99) , 
4, 0.999524, 0, 0, 0.498381,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0168041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498589,-99) , 
3, 0.564086, 1, 0, 0.500662,-99) , 
4, 0.999048, 1, 0, 0.502412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475933,-99) , 
10, 0.871702, 1, 0, 0.494153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448294,-99) , 
5, 0.490274, 1, 0, 0.487116,-99) , 
3, 4.77162, 1, 0, 0.499396,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0119651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.04404, 0, 1, 0.504062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463211,-99) , 
0, 0.497138, 0, 0, 0.48468,-99) , 
4, 0.999773, 0, 0, 0.502632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468858,-99) , 
4, 0.999048, 0, 0, 0.501371,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0159037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496395,-99) , 
3, 1.44654, 1, 0, 0.501429,-99) , 
2, -0.216402, 1, 0, 0.502835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476088,-99) , 
3, 9.50466, 1, 0, 0.501777,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0219238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.206296, 0, 1, 0.511147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453236,-99) , 
5, -0.567433, 1, 0, 0.493394,-99) , 
10, 2.69827, 1, 0, 0.506935,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49535,-99) , 
5, -0.0438204, 1, 0, 0.502399,-99) , 
NN(
0, 
0, 
-1, -0.364253, 1, -1, 0.487697,-99) , 
10, -0.389068, 1, 0, 0.4953,-99) , 
8, -0.142852, 0, 0, 0.501822,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0213625);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478902,-99) , 
10, -1.12216, 1, 0, 0.50335,-99) , 
5, 0.132748, 1, 0, 0.514865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484667,-99) , 
10, 3.49228, 1, 0, 0.501056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447468,-99) , 
8, -1.85713, 0, 0, 0.499326,-99) , 
9, -3.24938, 1, 0, 0.502153,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0141052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467955,-99) , 
7, -951.286, 0, 0, 0.532553,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.498004,-99) , 
4, 0.999524, 1, 0, 0.500229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467436,-99) , 
3, 9.50853, 1, 0, 0.498952,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0229641);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.521651,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497855,-99) , 
10, -0.142773, 1, 0, 0.50377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468165,-99) , 
10, 1.96561, 0, 0, 0.487278,-99) , 
8, -1.00001, 0, 0, 0.501669,-99) , 
10, -1.64061, 1, 0, 0.503133,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0166481);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.14276, 0, 1, 0.507381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468526,-99) , 
3, 9.52058, 1, 0, 0.505862,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0127569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496746,-99) , 
5, -0.906407, 1, 0, 0.498103,-99) , 
3, 9.0526, 0, 0, 0.499483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46842,-99) , 
4, 0.999048, 0, 0, 0.498307,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0251172);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 5.92033, 1, 1, 0.513172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492152,-99) , 
8, 0.428523, 0, 0, 0.500297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45637,-99) , 
10, 2.56478, 1, 0, 0.497819,-99) , 
5, -0.626399, 1, 0, 0.501287,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.019745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.509039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492529,-99) , 
10, -0.910166, 1, 0, 0.499572,-99) , 
5, -0.251332, 1, 0, 0.504201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470897,-99) , 
4, 0.998572, 0, 0, 0.503356,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0123114);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.4289, 0, 1, 0.503215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470085,-99) , 
7, -951.286, 0, 0, 0.487626,-99) , 
4, 0.999864, 0, 0, 0.501396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466273,-99) , 
4, 0.999048, 0, 0, 0.500065,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.013089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470756,-99) , 
7, -951.286, 0, 0, 0.532513,-99) , 
NN(
0, 
0, 
-1, 6.82565, 1, -1, 0.498318,-99) , 
4, 0.999524, 1, 0, 0.500527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469062,-99) , 
3, 9.50466, 1, 0, 0.499294,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0212751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85709, 0, 1, 0.506228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450969,-99) , 
4, 0.999714, 0, 0, 0.503728,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495534,-99) , 
9, -3.54212, 0, 0, 0.506715,-99) , 
NN(
0, 
0, 
-1, -2.695, 0, -1, 0.480726,-99) , 
10, -0.70585, 1, 0, 0.493429,-99) , 
5, 0.123, 1, 0, 0.500484,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.020573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463696,-99) , 
5, 0.397214, 0, 0, 0.532978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494511,-99) , 
3, 2.73817, 0, 0, 0.499115,-99) , 
4, 0.999524, 1, 0, 0.501296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472969,-99) , 
3, 9.26255, 1, 0, 0.500093,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0267296);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477726,-99) , 
10, -1.61273, 1, 0, 0.504158,-99) , 
9, -3.51066, 0, 0, 0.516033,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460045,-99) , 
5, 0.681198, 1, 0, 0.505696,-99) , 
NN(
0, 
0, 
-1, -1.8027, 0, -1, 0.489661,-99) , 
8, 0.142862, 0, 0, 0.498236,-99) , 
10, -1.11472, 1, 0, 0.500884,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0212197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.37104, 0, 1, 0.513205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469189,-99) , 
9, -3.69992, 1, 0, 0.492826,-99) , 
8, -0.946863, 0, 0, 0.507467,-99) , 
NN(
NN(
0, 
0, 
-1, 2.23809, 1, 1, 0.515851,-99) , 
NN(
0, 
0, 
-1, 4.48062, 1, -1, 0.495171,-99) , 
8, 1.85714, 0, 0, 0.497117,-99) , 
10, 0.245909, 1, 0, 0.501689,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0271156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497385,-99) , 
7, -951.286, 0, 0, 0.545875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492954,-99) , 
4, 0.999977, 1, 0, 0.499178,-99) , 
4, 0.999524, 1, 0, 0.502389,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464524,-99) , 
2, 0.153074, 1, 0, 0.502309,-99) , 
NN(
0, 
0, 
-1, -0.207447, 0, -1, 0.468,-99) , 
2, -0.0713947, 0, 0, 0.491153,-99) , 
3, 4.75487, 1, 0, 0.500144,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0152403);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496463,-99) , 
3, 1.45307, 1, 0, 0.500992,-99) , 
3, 9.42498, 0, 0, 0.502198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468434,-99) , 
4, 0.999048, 0, 0, 0.500946,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.0191247);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.552647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465679,-99) , 
4, 0.999728, 0, 0, 0.502523,-99) , 
4, 0.999524, 1, 0, 0.505999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49169,-99) , 
3, 9.39975, 0, 0, 0.498288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465625,-99) , 
5, 0.497568, 1, 0, 0.493306,-99) , 
3, 4.77337, 1, 0, 0.503462,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0232338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.26002, 1, 1, 0.507922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455347,-99) , 
4, 0.999714, 0, 0, 0.505657,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493205,-99) , 
9, -2.164, 0, 0, 0.500258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446056,-99) , 
10, 0.955644, 1, 0, 0.495955,-99) , 
5, 0.0273994, 1, 0, 0.502121,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0223112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.524312, 1, 1, 0.507292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449625,-99) , 
9, -2.72487, 1, 0, 0.484363,-99) , 
8, -1.2859, 0, 0, 0.504127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494005,-99) , 
8, -0.714086, 1, 0, 0.499246,-99) , 
NN(
0, 
0, 
-1, 2.54236, 1, -1, 0.47527,-99) , 
5, -0.633004, 1, 0, 0.491157,-99) , 
10, 1.97841, 1, 0, 0.500704,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0172379);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0639358, 1, 1, 0.516834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49501,-99) , 
4, 0.999524, 1, 0, 0.497833,-99) , 
NN(
0, 
0, 
-1, 0.395583, 1, -1, 0.487861,-99) , 
3, 4.68114, 1, 0, 0.495789,-99) , 
8, 1.85714, 0, 0, 0.496878,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0224851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.796059, 1, 1, 0.51564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48595,-99) , 
10, 6.77013, 1, 0, 0.509707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499766,-99) , 
9, -1.52559, 0, 0, 0.503816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456874,-99) , 
7, -951.286, 0, 0, 0.474484,-99) , 
10, 1.16665, 1, 0, 0.498316,-99) , 
5, -0.532008, 1, 0, 0.501678,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0287222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499671,-99) , 
8, -0.712534, 0, 0, 0.514473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473108,-99) , 
9, -2.42947, 0, 0, 0.495439,-99) , 
10, -0.624117, 1, 0, 0.506999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488328,-99) , 
7, -951.286, 0, 0, 0.494756,-99) , 
6, 0.0238087, 0, 0, 0.496225,-99) , 
10, 0.0837447, 1, 0, 0.500586,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.0167793);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528209,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499221,-99) , 
9, -1.44952, 0, 0, 0.505134,-99) , 
NN(
0, 
0, 
-1, -0.438776, 1, -1, 0.491157,-99) , 
10, 1.12527, 1, 0, 0.499614,-99) , 
8, -1.85712, 1, 0, 0.500933,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0235729);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485441,-99) , 
7, 0.142548, 1, 0, 0.495372,-99) , 
7, -951.286, 1, 0, 0.518138,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444776,-99) , 
7, -1.57161, 0, 0, 0.507268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440457,-99) , 
8, -1.57143, 0, 0, 0.496922,-99) , 
7, -951.286, 0, 0, 0.501225,-99) , 
9, -3.56161, 1, 0, 0.503356,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0157126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488519,-99) , 
9, -4.0199, 1, 0, 0.499885,-99) , 
5, 0.231928, 1, 0, 0.515077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497787,-99) , 
8, 0.918368, 0, 0, 0.501227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454773,-99) , 
8, -1.85713, 0, 0, 0.499736,-99) , 
9, -3.57246, 1, 0, 0.501633,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0310693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.108007, 0, 1, 0.535176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474456,-99) , 
10, -0.118825, 1, 0, 0.503949,-99) , 
9, -2.02599, 0, 0, 0.509324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495424,-99) , 
8, -0.714248, 1, 0, 0.504806,-99) , 
NN(
0, 
0, 
-1, 2.49517, 1, -1, 0.486552,-99) , 
9, 1.15622, 0, 0, 0.493449,-99) , 
10, 0.628219, 1, 0, 0.501744,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0206579);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488272,-99) , 
10, 2.41049, 1, 0, 0.517249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496861,-99) , 
7, -951.286, 1, 0, 0.503624,-99) , 
8, 0.999962, 0, 0, 0.506198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474677,-99) , 
4, 0.998572, 0, 0, 0.505402,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0160476);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.507208,-99) , 
NN(
0, 
0, 
-1, 0.0710807, 1, -1, 0.487466,-99) , 
3, 7.14204, 1, 0, 0.505506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479055,-99) , 
5, 0.77836, 1, 0, 0.504798,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0229384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490863,-99) , 
7, -951.286, 0, 0, 0.540183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49271,-99) , 
5, -0.345041, 1, 0, 0.500051,-99) , 
4, 0.999524, 1, 0, 0.502684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472839,-99) , 
3, 9.42206, 1, 0, 0.501483,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.016015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.53282, 0, 1, 0.503518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469695,-99) , 
4, 0.999562, 0, 0, 0.502131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489422,-99) , 
3, 1.34092, 1, 0, 0.50516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430261,-99) , 
3, 4.91795, 1, 0, 0.489929,-99) , 
5, 0.497035, 1, 0, 0.500482,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0179677);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494759,-99) , 
10, 0.53323, 1, 0, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460369,-99) , 
6, 0.023792, 1, 0, 0.501207,-99) , 
5, -0.906398, 1, 0, 0.502132,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0202748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28592, 0, 1, 0.509645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419849,-99) , 
7, -1.57154, 0, 0, 0.502756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445258,-99) , 
4, 0.999796, 0, 0, 0.497695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440117,-99) , 
4, 0.999524, 0, 0, 0.494279,-99) , 
7, -951.286, 0, 0, 0.497953,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0242652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476947,-99) , 
10, -2.00163, 1, 0, 0.50114,-99) , 
8, -1.04554, 0, 0, 0.510322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482851,-99) , 
10, 3.44024, 1, 0, 0.499887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480669,-99) , 
9, 2.28242, 0, 0, 0.486295,-99) , 
8, -0.142874, 0, 0, 0.495044,-99) , 
10, -1.18943, 1, 0, 0.497103,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.017662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488694,-99) , 
0, 0.498091, 0, 0, 0.499608,-99) , 
7, -951.286, 0, 0, 0.518462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48709,-99) , 
0, 0.491968, 0, 0, 0.502113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489987,-99) , 
2, 0.0713547, 0, 0, 0.493207,-99) , 
0, 0.499043, 1, 0, 0.498414,-99) , 
8, 1.57142, 0, 0, 0.500103,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.018825);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49798,-99) , 
8, 0.999904, 0, 0, 0.500833,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482834,-99) , 
6, 0.0124699, 0, 0, 0.487819,-99) , 
10, 1.43854, 1, 0, 0.496604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472369,-99) , 
6, 0.0238087, 1, 0, 0.495684,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0182715);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443308,-99) , 
7, -1.57147, 0, 0, 0.50526,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.495575,-99) , 
7, -951.286, 0, 0, 0.499743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478368,-99) , 
6, 0.0238062, 1, 0, 0.498933,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0188086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477933,-99) , 
9, -3.9354, 0, 0, 0.500206,-99) , 
8, -1.57902, 1, 0, 0.510374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499003,-99) , 
3, 0.922, 1, 0, 0.504054,-99) , 
NN(
0, 
0, 
-1, 2.31071, 1, -1, 0.49282,-99) , 
5, -0.719203, 1, 0, 0.494798,-99) , 
10, -1.34183, 1, 0, 0.496558,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0127489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.5236, 0, 1, 0.50356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472703,-99) , 
8, 0.428355, 0, 0, 0.485786,-99) , 
4, 0.999864, 0, 0, 0.501519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468843,-99) , 
4, 0.999048, 0, 0, 0.50031,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0149879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.28746, 0, 1, 0.514981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479332,-99) , 
3, 4.68521, 1, 0, 0.507443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485833,-99) , 
10, 0.997932, 1, 0, 0.495201,-99) , 
5, -0.906398, 1, 0, 0.49602,-99) , 
0, 0.493329, 1, 0, 0.497498,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.030406);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486754,-99) , 
10, 2.94414, 1, 0, 0.516564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443357,-99) , 
8, -1.57175, 0, 0, 0.500635,-99) , 
7, -951.286, 0, 0, 0.506538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493386,-99) , 
4, 0.999524, 1, 0, 0.498364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459834,-99) , 
3, 9.52716, 1, 0, 0.49667,-99) , 
5, -0.438772, 1, 0, 0.500218,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.00715137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472938,-99) , 
3, 7.02792, 1, 0, 0.498849,-99) , 
3, 9.18505, 0, 0, 0.500226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475955,-99) , 
4, 0.999048, 0, 0, 0.499325,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0211526);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.48961, 0, 1, 0.517051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488541,-99) , 
5, 0.0296002, 1, 0, 0.499592,-99) , 
10, -0.638967, 1, 0, 0.501528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518447,-99) , 
NN(
0, 
0, 
-1, -1.29977, 1, -1, 0.484475,-99) , 
9, 1.94729, 0, 0, 0.488357,-99) , 
8, -0.428603, 0, 0, 0.49706,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0348347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494617,-99) , 
7, -951.286, 1, 0, 0.504991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460914,-99) , 
10, -2.02136, 1, 0, 0.48227,-99) , 
8, -1.28573, 0, 0, 0.501816,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476628,-99) , 
7, -951.286, 1, 0, 0.498196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459345,-99) , 
7, -951.286, 0, 0, 0.480569,-99) , 
9, 1.65154, 0, 0, 0.489988,-99) , 
10, 1.77865, 1, 0, 0.498425,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0281053);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490216,-99) , 
8, -0.300048, 0, 0, 0.533169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462673,-99) , 
10, -0.0732398, 1, 0, 0.500352,-99) , 
9, -2.14845, 0, 0, 0.505559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489797,-99) , 
6, 0.0136048, 0, 0, 0.492386,-99) , 
6, 0.0238087, 0, 0, 0.494834,-99) , 
10, 0.427962, 1, 0, 0.500005,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0242238);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445217,-99) , 
7, -1.57148, 0, 0, 0.506119,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.491779,-99) , 
7, -951.286, 0, 0, 0.497957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46095,-99) , 
6, 0.0238087, 1, 0, 0.496597,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.00945265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498675,-99) , 
2, 0.216711, 0, 0, 0.499858,-99) , 
3, 9.18505, 0, 0, 0.501226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468094,-99) , 
4, 0.999048, 0, 0, 0.500001,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0132828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497568,-99) , 
5, 0.583418, 0, 0, 0.500096,-99) , 
8, 1.85709, 0, 0, 0.501616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471913,-99) , 
3, 9.50466, 1, 0, 0.500466,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0096678);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523029,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.508547,-99) , 
NN(
0, 
0, 
-1, 2.48029, 1, -1, 0.498068,-99) , 
5, -0.532312, 1, 0, 0.50119,-99) , 
2, -0.214096, 1, 0, 0.502253,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0204684);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47401,-99) , 
10, 2.74974, 1, 0, 0.502704,-99) , 
7, -951.286, 0, 0, 0.519442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494676,-99) , 
7, -951.286, 1, 0, 0.500808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449514,-99) , 
7, -951.286, 0, 0, 0.48401,-99) , 
5, 0.587788, 1, 0, 0.499252,-99) , 
8, 1.28571, 0, 0, 0.501861,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0190811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.48811, 0, 1, 0.505698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464949,-99) , 
6, 0.00453499, 1, 0, 0.489969,-99) , 
10, 3.84667, 1, 0, 0.503912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475592,-99) , 
6, 0.0238062, 1, 0, 0.502857,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0173564);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477564,-99) , 
2, -0.275494, 0, 0, 0.506881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493833,-99) , 
5, -0.906412, 1, 0, 0.494945,-99) , 
2, -0.0714359, 1, 0, 0.496947,-99) , 
8, 2.14285, 0, 0, 0.497956,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0198603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498179,-99) , 
9, -2.26367, 0, 0, 0.504924,-99) , 
9, -4.3674, 1, 0, 0.507954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470492,-99) , 
4, 0.999905, 0, 0, 0.503217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462624,-99) , 
8, 0.772779, 0, 0, 0.489009,-99) , 
5, -0.345045, 1, 0, 0.498502,-99) , 
10, 0.245909, 1, 0, 0.502672,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.01335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00793526, 0, 1, 0.505008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480211,-99) , 
10, 6.39734, 1, 0, 0.503605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47181,-99) , 
6, 0.0238087, 1, 0, 0.502424,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0210559);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467441,-99) , 
8, -1.43973, 0, 0, 0.501509,-99) , 
9, -4.34015, 1, 0, 0.504358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492945,-99) , 
8, 1.85699, 0, 0, 0.495429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452499,-99) , 
5, 0.497563, 1, 0, 0.493472,-99) , 
10, 0.0837447, 1, 0, 0.497891,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0195548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484955,-99) , 
5, 0.587674, 1, 0, 0.512182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493894,-99) , 
5, -0.536544, 1, 0, 0.498221,-99) , 
8, 0.714287, 0, 0, 0.501927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464008,-99) , 
4, 0.999048, 0, 0, 0.500537,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0192986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.00488, 0, 1, 0.527734,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494845,-99) , 
8, -0.333391, 0, 0, 0.500476,-99) , 
8, 0.999903, 0, 0, 0.5043,-99) , 
NN(
NN(
0, 
0, 
-1, -1.00095, 1, 1, 0.505712,-99) , 
NN(
0, 
0, 
-1, 2.94461, 1, -1, 0.477382,-99) , 
5, -0.63302, 1, 0, 0.495154,-99) , 
10, 1.77865, 1, 0, 0.50166,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0225688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.583412, 0, 1, 0.509839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454479,-99) , 
7, -1.57154, 0, 0, 0.50544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49566,-99) , 
9, -3.2529, 1, 0, 0.49997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445877,-99) , 
4, 0.999524, 0, 0, 0.496787,-99) , 
7, -951.286, 0, 0, 0.500537,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0209479);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499758,-99) , 
7, -951.286, 1, 0, 0.519199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461412,-99) , 
4, 0.999768, 0, 0, 0.498374,-99) , 
9, -2.66321, 1, 0, 0.502353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461733,-99) , 
8, 1.33932, 1, 0, 0.50869,-99) , 
NN(
0, 
0, 
-1, -0.685345, 1, -1, 0.479424,-99) , 
9, -2.68783, 0, 0, 0.488735,-99) , 
5, 0.310169, 1, 0, 0.499337,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.00712229);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.46422, 0, 1, 0.501936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485239,-99) , 
10, 6.6005, 1, 0, 0.500913,-99) , 
NN(
0, 
0, 
-1, 0.142795, 0, -1, 0.482209,-99) , 
0, 0.504757, 1, 0, 0.499871,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0296294);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489483,-99) , 
8, -0.179766, 0, 0, 0.525651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475293,-99) , 
10, -0.323786, 1, 0, 0.499296,-99) , 
9, -2.19205, 0, 0, 0.503831,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487282,-99) , 
10, 1.93145, 1, 0, 0.506467,-99) , 
NN(
0, 
0, 
-1, -0.363406, 1, -1, 0.488001,-99) , 
8, 1.28568, 0, 0, 0.492373,-99) , 
10, 0.427962, 1, 0, 0.497875,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0233397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476641,-99) , 
3, 6.32058, 1, 0, 0.502761,-99) , 
3, 9.42966, 0, 0, 0.504834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489302,-99) , 
4, 0.999524, 1, 0, 0.4993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434656,-99) , 
5, 0.537704, 1, 0, 0.470918,-99) , 
3, 4.73231, 1, 0, 0.493417,-99) , 
5, 0.216771, 1, 0, 0.501786,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0239999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491345,-99) , 
5, -0.169057, 0, 0, 0.526153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459574,-99) , 
10, -0.175428, 1, 0, 0.495498,-99) , 
9, -2.27977, 0, 0, 0.500909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487867,-99) , 
8, 0.999942, 0, 0, 0.49281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455112,-99) , 
5, 0.403056, 1, 0, 0.490935,-99) , 
10, 0.327366, 1, 0, 0.495525,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0145826);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495237,-99) , 
4, 0.999524, 1, 0, 0.496452,-99) , 
3, 9.42599, 0, 0, 0.497837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465863,-99) , 
4, 0.998572, 0, 0, 0.497035,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0184925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499565,-99) , 
5, -0.338016, 1, 0, 0.504626,-99) , 
NN(
0, 
0, 
-1, -0.805819, 1, -1, 0.487502,-99) , 
8, -1.00001, 0, 0, 0.501179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479072,-99) , 
7, -951.286, 1, 0, 0.495199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463315,-99) , 
5, -0.541275, 1, 0, 0.489153,-99) , 
10, 2.15205, 1, 0, 0.498274,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0140039);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498649,-99) , 
6, 0.00680166, 0, 0, 0.503254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479227,-99) , 
10, 6.39212, 1, 0, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471887,-99) , 
6, 0.0238062, 1, 0, 0.500817,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0121534);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.444017, 0, 1, 0.515722,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49763,-99) , 
8, 0.823109, 0, 0, 0.500934,-99) , 
8, -1.57143, 1, 0, 0.502042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474327,-99) , 
4, 0.999048, 0, 0, 0.501009,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0124638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497505,-99) , 
7, -951.286, 1, 0, 0.502649,-99) , 
2, -0.214228, 1, 0, 0.503546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477175,-99) , 
4, 0.999048, 0, 0, 0.50257,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0134041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497763,-99) , 
4, 0.999955, 1, 0, 0.500295,-99) , 
3, 9.12647, 0, 0, 0.502084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454167,-99) , 
4, 0.999048, 0, 0, 0.500388,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.00999145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498767,-99) , 
3, 0.570603, 1, 0, 0.500567,-99) , 
2, -0.214584, 1, 0, 0.501949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472888,-99) , 
3, 9.52224, 1, 0, 0.500826,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0216426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.21143, 0, 1, 0.529898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498559,-99) , 
5, -0.253352, 1, 0, 0.502811,-99) , 
8, 0.496859, 0, 0, 0.507782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490584,-99) , 
3, 1.91678, 0, 0, 0.502971,-99) , 
NN(
0, 
0, 
-1, 2.45506, 1, -1, 0.487025,-99) , 
5, -0.532, 1, 0, 0.495912,-99) , 
10, 0.616348, 1, 0, 0.502088,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0311701);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491216,-99) , 
10, 3.26507, 1, 0, 0.52649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437277,-99) , 
7, -1.28591, 0, 0, 0.500644,-99) , 
9, -1.32778, 0, 0, 0.510186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451613,-99) , 
4, 0.999524, 0, 0, 0.50203,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438671,-99) , 
8, -1.85714, 0, 0, 0.498763,-99) , 
7, -951.286, 0, 0, 0.503716,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0234923);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499082,-99) , 
7, -0.265126, 1, 0, 0.51227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455243,-99) , 
7, -1.57131, 0, 0, 0.507851,-99) , 
NN(
NN(
0, 
0, 
-1, 0.307667, 1, 1, 0.523627,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.493827,-99) , 
9, -3.31735, 1, 0, 0.497871,-99) , 
7, -951.286, 0, 0, 0.502193,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0201315);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494949,-99) , 
10, 4.63813, 1, 0, 0.524322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485708,-99) , 
9, 2.26951, 0, 0, 0.506603,-99) , 
7, -951.286, 0, 0, 0.513423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471582,-99) , 
5, 0.738243, 1, 0, 0.501222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466706,-99) , 
10, 2.51363, 1, 0, 0.499122,-99) , 
5, -0.625605, 1, 0, 0.502379,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0248122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.06636, 1, 1, 0.530635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494769,-99) , 
7, -951.286, 0, 0, 0.501228,-99) , 
9, -2.6113, 1, 0, 0.504811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491337,-99) , 
9, -2.18604, 0, 0, 0.497406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465785,-99) , 
10, 0.648612, 1, 0, 0.493374,-99) , 
5, 0.0294217, 1, 0, 0.500671,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0176172);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495206,-99) , 
10, 5.43056, 1, 0, 0.512305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464239,-99) , 
10, 2.56478, 1, 0, 0.501925,-99) , 
5, -0.625845, 1, 0, 0.504337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479551,-99) , 
4, 0.999048, 0, 0, 0.503421,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0168936);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499657,-99) , 
7, -951.286, 0, 0, 0.509114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483879,-99) , 
10, 0.892587, 1, 0, 0.498908,-99) , 
5, -0.532173, 1, 0, 0.501889,-99) , 
NN(
0, 
0, 
-1, -0.142904, 0, -1, 0.481617,-99) , 
0, 0.492376, 0, 0, 0.500122,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0232376);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484568,-99) , 
7, -951.286, 0, 0, 0.530114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492037,-99) , 
5, -0.253663, 1, 0, 0.500562,-99) , 
4, 0.999524, 1, 0, 0.502428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466708,-99) , 
3, 9.50853, 1, 0, 0.501066,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0130079);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497389,-99) , 
9, 0.874947, 0, 0, 0.500067,-99) , 
4, 0.999048, 1, 0, 0.501542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470508,-99) , 
3, 9.40614, 1, 0, 0.500296,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0171935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498867,-99) , 
10, 0.0911112, 0, 0, 0.529877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465483,-99) , 
10, 0.145395, 1, 0, 0.503704,-99) , 
9, -2.06952, 0, 0, 0.50701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49645,-99) , 
8, 1.85715, 0, 0, 0.498823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476883,-99) , 
5, 0.310368, 1, 0, 0.497474,-99) , 
10, 0.396228, 1, 0, 0.502004,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0109323);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42498, 0, 1, 0.504654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472938,-99) , 
4, 0.999048, 0, 0, 0.503506,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0243278);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49405,-99) , 
10, 2.0795, 1, 0, 0.510739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479473,-99) , 
5, 0.590603, 1, 0, 0.507316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497649,-99) , 
7, -951.286, 0, 0, 0.507264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475367,-99) , 
10, -0.333878, 1, 0, 0.493078,-99) , 
5, -0.534357, 1, 0, 0.497656,-99) , 
8, 0.428574, 0, 0, 0.501092,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0122873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497217,-99) , 
5, -0.352234, 1, 0, 0.506945,-99) , 
10, 1.49024, 1, 0, 0.5173,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0237453, 0, 1, 0.504554,-99) , 
NN(
0, 
0, 
-1, 0.612379, 1, -1, 0.494817,-99) , 
5, -0.347403, 1, 0, 0.499009,-99) , 
8, 1.57142, 0, 0, 0.500563,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.00907049);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479849,-99) , 
3, 9.40614, 1, 0, 0.502921,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0110289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484067,-99) , 
5, 0.497403, 0, 0, 0.535874,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499496,-99) , 
8, 2.14285, 0, 0, 0.500582,-99) , 
4, 0.999524, 1, 0, 0.502857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476162,-99) , 
3, 9.50466, 1, 0, 0.501825,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0252466);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497049,-99) , 
10, 2.20963, 1, 0, 0.507842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466766,-99) , 
8, -1.85713, 0, 0, 0.505629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48499,-99) , 
10, -1.14227, 1, 0, 0.4923,-99) , 
9, -1.46085, 0, 0, 0.495697,-99) , 
5, -0.064166, 1, 0, 0.501535,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0248551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.44488, 0, 1, 0.514394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480629,-99) , 
5, -0.43839, 1, 0, 0.496003,-99) , 
10, 1.22121, 1, 0, 0.505864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48217,-99) , 
7, -951.286, 0, 0, 0.491633,-99) , 
9, 1.83811, 0, 0, 0.495207,-99) , 
8, -0.142849, 0, 0, 0.501177,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.020739);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491737,-99) , 
9, -2.78511, 0, 0, 0.527331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485648,-99) , 
10, 3.14774, 1, 0, 0.499458,-99) , 
10, 0.110544, 1, 0, 0.505365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49572,-99) , 
3, 1.95627, 0, 0, 0.50454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473841,-99) , 
10, -0.316413, 1, 0, 0.493463,-99) , 
5, -0.533541, 1, 0, 0.497127,-99) , 
8, 0.142835, 0, 0, 0.500872,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0164544);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487094,-99) , 
10, 4.07999, 1, 0, 0.503815,-99) , 
NN(
0, 
0, 
-1, 0.0011313, 0, -1, 0.491279,-99) , 
8, -0.714296, 0, 0, 0.500678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469036,-99) , 
6, 0.0237526, 1, 0, 0.499503,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0127063);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.718204, 1, 1, 0.517292,-99) , 
NN(
0, 
0, 
-1, -1.28571, 0, -1, 0.494851,-99) , 
5, -0.812825, 1, 0, 0.497075,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0174099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493289,-99) , 
7, -951.286, 1, 0, 0.506528,-99) , 
8, -1.28854, 1, 0, 0.510645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498153,-99) , 
9, -1.59563, 0, 0, 0.502177,-99) , 
NN(
0, 
0, 
-1, -0.707437, 0, -1, 0.485274,-99) , 
10, 1.35862, 1, 0, 0.498115,-99) , 
5, -0.719302, 1, 0, 0.50009,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0174033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483516,-99) , 
5, -0.598859, 1, 0, 0.507197,-99) , 
10, 0.64296, 1, 0, 0.510303,-99) , 
NN(
NN(
0, 
0, 
-1, -1.13686, 0, 1, 0.503266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462472,-99) , 
9, -0.0206474, 0, 0, 0.480931,-99) , 
10, 1.45071, 1, 0, 0.500136,-99) , 
5, -0.532004, 1, 0, 0.503129,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0169085);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.722252, 1, 1, 0.515076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497757,-99) , 
8, 0.594517, 0, 0, 0.502881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479577,-99) , 
5, -0.474245, 1, 0, 0.491,-99) , 
10, 0.763918, 1, 0, 0.498225,-99) , 
5, -0.812856, 1, 0, 0.499896,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.00960926);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492734,-99) , 
8, 1.758, 1, 0, 0.510896,-99) , 
NN(
0, 
0, 
-1, 9.1652, 1, -1, 0.496771,-99) , 
8, 1.40815, 0, 0, 0.497895,-99) , 
8, 2.14285, 0, 0, 0.498594,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0204153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237528, 0, 1, 0.508931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463296,-99) , 
4, 0.999905, 0, 0, 0.50497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495415,-99) , 
4, 0.999048, 1, 0, 0.499094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456297,-99) , 
3, 9.5314, 1, 0, 0.497159,-99) , 
5, -0.344911, 1, 0, 0.500463,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0221959);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46261,-99) , 
4, 0.999524, 0, 0, 0.505656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492428,-99) , 
4, 0.999524, 1, 0, 0.496658,-99) , 
7, -951.286, 1, 0, 0.501731,-99) , 
8, -1.85713, 1, 0, 0.502918,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.00905654);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467077,-99) , 
3, 7.41189, 1, 0, 0.500352,-99) , 
3, 9.12647, 0, 0, 0.501563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479778,-99) , 
4, 0.999048, 0, 0, 0.500757,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0128231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.25718, 0, 1, 0.503333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464954,-99) , 
5, -0.837035, 1, 0, 0.49156,-99) , 
10, 3.72109, 1, 0, 0.501775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469168,-99) , 
5, 0.77808, 1, 0, 0.500941,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0128681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485087,-99) , 
9, -2.43979, 0, 0, 0.528279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495711,-99) , 
7, -951.286, 0, 0, 0.504142,-99) , 
10, 0.646577, 1, 0, 0.510086,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499977,-99) , 
5, -0.720308, 1, 0, 0.501747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489376,-99) , 
10, 4.78307, 1, 0, 0.500677,-99) , 
8, 0.714286, 0, 0, 0.503155,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0103017);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497443,-99) , 
7, -951.286, 0, 0, 0.513797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497627,-99) , 
10, -1.68323, 1, 0, 0.49881,-99) , 
8, 1.57142, 0, 0, 0.500054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474719,-99) , 
0, 0.490472, 0, 0, 0.499084,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.00675486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499884,-99) , 
4, 0.999524, 1, 0, 0.501641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4725,-99) , 
2, -0.275501, 0, 0, 0.500776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479315,-99) , 
2, 0.214239, 1, 0, 0.499881,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0274049);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.61147, 0, 1, 0.508031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471859,-99) , 
9, -0.677899, 0, 0, 0.488606,-99) , 
10, 1.04239, 1, 0, 0.505353,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482796,-99) , 
5, -0.748752, 1, 0, 0.506145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467454,-99) , 
7, -951.286, 0, 0, 0.485078,-99) , 
9, 1.59573, 0, 0, 0.49607,-99) , 
10, 1.66489, 1, 0, 0.502524,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0161335);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.06322, 1, 1, 0.530296,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494129,-99) , 
0, 0.493329, 1, 0, 0.495894,-99) , 
5, 0.684758, 0, 0, 0.497873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479135,-99) , 
3, 9.50853, 1, 0, 0.497136,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0112894);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00680249, 0, 1, 0.503936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475441,-99) , 
10, 6.71252, 1, 0, 0.502468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477885,-99) , 
6, 0.0238087, 1, 0, 0.50154,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0210961);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482726,-99) , 
9, -2.26349, 0, 0, 0.523694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476551,-99) , 
5, 0.0292369, 1, 0, 0.500521,-99) , 
10, 0.681771, 1, 0, 0.506486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49631,-99) , 
9, -2.90189, 0, 0, 0.50312,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474487,-99) , 
5, -0.271746, 1, 0, 0.494291,-99) , 
10, -0.318695, 1, 0, 0.498018,-99) , 
8, 0.714285, 0, 0, 0.500264,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0100141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498578,-99) , 
8, 2.14285, 0, 0, 0.4995,-99) , 
4, 0.999048, 1, 0, 0.501509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473794,-99) , 
3, 9.52351, 1, 0, 0.500452,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.00884759);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47444,-99) , 
3, 6.98333, 1, 0, 0.499105,-99) , 
4, 0.999048, 1, 0, 0.500811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470479,-99) , 
3, 9.12647, 1, 0, 0.499485,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0138361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.59092, 0, 1, 0.505714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493018,-99) , 
2, -0.0729326, 1, 0, 0.495533,-99) , 
0, 0.498907, 1, 0, 0.50094,-99) , 
NN(
0, 
0, 
-1, -0.258537, 1, -1, 0.486913,-99) , 
0, 0.492376, 0, 0, 0.499725,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0138555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49323,-99) , 
10, 0.383054, 1, 0, 0.498176,-99) , 
8, 2.14277, 0, 0, 0.499269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472234,-99) , 
3, 9.40614, 1, 0, 0.498191,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0172885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.55602, 0, 1, 0.504679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469542,-99) , 
4, 0.999609, 0, 0, 0.503128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483061,-99) , 
3, 1.51521, 1, 0, 0.500279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452284,-99) , 
3, 4.7264, 1, 0, 0.489749,-99) , 
5, 0.497037, 1, 0, 0.501311,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0240722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.144429, 0, 1, 0.508266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461278,-99) , 
5, -0.660216, 1, 0, 0.492002,-99) , 
10, 2.94373, 1, 0, 0.504796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489969,-99) , 
7, -0.427759, 1, 0, 0.503394,-99) , 
NN(
0, 
0, 
-1, -1.91156, 0, -1, 0.485752,-99) , 
7, -951.286, 0, 0, 0.493449,-99) , 
8, -0.142886, 0, 0, 0.499802,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0124125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535573,-99) , 
NN(
0, 
0, 
-1, 2.56677, 1, -1, 0.497214,-99) , 
9, 1.49497, 0, 0, 0.498726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484336,-99) , 
5, -0.897409, 1, 0, 0.495441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455363,-99) , 
9, 4.54175, 0, 0, 0.483192,-99) , 
10, 3.80033, 1, 0, 0.496742,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0218488);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.524792, 1, 1, 0.50444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460788,-99) , 
10, -1.92531, 1, 0, 0.480542,-99) , 
8, -1.28588, 0, 0, 0.501155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549366,-99) , 
NN(
0, 
0, 
-1, 3.39376, 1, -1, 0.484702,-99) , 
8, -0.997946, 1, 0, 0.491047,-99) , 
10, 2.00262, 1, 0, 0.498528,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0143011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496004,-99) , 
3, 0.98723, 1, 0, 0.498337,-99) , 
3, 9.18404, 0, 0, 0.500523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478098,-99) , 
4, 0.999048, 0, 0, 0.499709,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0199176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0936544, 0, 1, 0.506125,-99) , 
NN(
0, 
0, 
-1, -0.710657, 1, -1, 0.484796,-99) , 
10, 3.27365, 1, 0, 0.501976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47702,-99) , 
2, 0.0691349, 1, 0, 0.502404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470787,-99) , 
10, -0.604048, 1, 0, 0.490637,-99) , 
5, -0.534966, 1, 0, 0.494533,-99) , 
8, 0.142835, 0, 0, 0.497915,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0127224);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496473,-99) , 
10, 1.28113, 1, 0, 0.508029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491443,-99) , 
10, 0.0625894, 1, 0, 0.495288,-99) , 
8, 1.28572, 0, 0, 0.496907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472319,-99) , 
5, 0.77808, 1, 0, 0.496268,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0161496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49378,-99) , 
0, 0.493329, 1, 0, 0.49561,-99) , 
3, 9.18505, 0, 0, 0.496905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472546,-99) , 
4, 0.999048, 0, 0, 0.496023,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0230222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.014596, 0, 1, 0.511948,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442764,-99) , 
4, 0.999905, 0, 0, 0.496779,-99) , 
3, 1.32762, 1, 0, 0.501522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488185,-99) , 
9, -2.39355, 0, 0, 0.493567,-99) , 
NN(
0, 
0, 
-1, -1.57477, 0, -1, 0.47128,-99) , 
10, 0.477752, 1, 0, 0.489146,-99) , 
5, -0.158163, 1, 0, 0.495788,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0162578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497454,-99) , 
10, 0.327366, 1, 0, 0.502352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480748,-99) , 
5, -0.532829, 1, 0, 0.488782,-99) , 
6, 0.00113362, 0, 0, 0.500129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476812,-99) , 
6, 0.0238062, 1, 0, 0.49926,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0159222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0639004, 1, 1, 0.518047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487052,-99) , 
5, 0.307608, 1, 0, 0.500067,-99) , 
NN(
0, 
0, 
-1, 8.8817, 1, -1, 0.49195,-99) , 
8, 0.238053, 0, 0, 0.495093,-99) , 
8, 1.8571, 0, 0, 0.496267,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.00873331);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495594,-99) , 
10, 1.61597, 1, 0, 0.51037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499151,-99) , 
9, 0.165487, 0, 0, 0.500998,-99) , 
0, 0.503805, 0, 0, 0.501862,-99) , 
NN(
0, 
0, 
-1, 0.170301, 1, -1, 0.477581,-99) , 
5, 0.684758, 1, 0, 0.500484,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0190583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487077,-99) , 
5, -0.0640452, 0, 0, 0.506554,-99) , 
7, -951.286, 0, 0, 0.517946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495599,-99) , 
9, -3.30033, 0, 0, 0.507159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489769,-99) , 
8, 0.265263, 0, 0, 0.495006,-99) , 
10, -0.984736, 1, 0, 0.497282,-99) , 
8, 1.57142, 0, 0, 0.499018,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0120808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497453,-99) , 
9, -4.01198, 1, 0, 0.499332,-99) , 
9, 2.25128, 0, 0, 0.500862,-99) , 
NN(
0, 
0, 
-1, 2.36053, 0, -1, 0.485386,-99) , 
10, 5.5393, 1, 0, 0.499623,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.00903051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49361,-99) , 
5, 0.494457, 0, 0, 0.528844,-99) , 
NN(
0, 
0, 
-1, -1.57142, 1, 1, 0.501674,-99) , 
4, 0.999524, 1, 0, 0.503418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479981,-99) , 
3, 9.18731, 1, 0, 0.502428,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0232412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493866,-99) , 
8, -0.535239, 0, 0, 0.525351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488766,-99) , 
10, -0.35627, 1, 0, 0.503028,-99) , 
9, -2.09992, 0, 0, 0.505984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491699,-99) , 
8, 1.97962, 0, 0, 0.494183,-99) , 
8, -1.28564, 1, 0, 0.496985,-99) , 
10, 0.396228, 1, 0, 0.501263,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0163545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498763,-99) , 
6, 0.0238087, 0, 0, 0.501112,-99) , 
9, -2.78435, 1, 0, 0.504454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494716,-99) , 
9, -2.11036, 0, 0, 0.499567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46425,-99) , 
10, 0.953177, 1, 0, 0.496741,-99) , 
5, 0.0295786, 1, 0, 0.501663,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.00964188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.516888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499264,-99) , 
5, -0.533542, 1, 0, 0.50215,-99) , 
8, 1.57139, 0, 0, 0.503377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479979,-99) , 
0, 0.505709, 1, 0, 0.502628,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0177366);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499144,-99) , 
7, -951.286, 1, 0, 0.50564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487678,-99) , 
5, -0.534357, 1, 0, 0.494949,-99) , 
8, -0.469336, 0, 0, 0.50249,-99) , 
8, -1.85714, 1, 0, 0.503731,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0218734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499451,-99) , 
5, 0.397325, 0, 0, 0.509038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456549,-99) , 
7, -1.57142, 0, 0, 0.504947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484914,-99) , 
4, 0.999977, 0, 0, 0.497657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460426,-99) , 
4, 0.999524, 0, 0, 0.495483,-99) , 
7, -951.286, 0, 0, 0.499585,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0129884);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489277,-99) , 
5, 0.583462, 0, 0, 0.519279,-99) , 
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.504234,-99) , 
4, 0.999524, 1, 0, 0.505157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464245,-99) , 
5, -0.167908, 1, 0, 0.485935,-99) , 
0, 0.491424, 0, 0, 0.504023,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0266501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492043,-99) , 
4, 0.999977, 1, 0, 0.503692,-99) , 
4, 0.999524, 1, 0, 0.507332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486001,-99) , 
4, 0.999977, 0, 0, 0.499665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459613,-99) , 
4, 0.999524, 0, 0, 0.497347,-99) , 
7, -951.286, 0, 0, 0.501673,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0227524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485742,-99) , 
7, -951.286, 0, 0, 0.507317,-99) , 
10, 1.11685, 1, 0, 0.516597,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492869,-99) , 
10, 1.35338, 1, 0, 0.502537,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480769,-99) , 
10, 0.488884, 0, 0, 0.492623,-99) , 
8, -1.36735, 0, 0, 0.501376,-99) , 
8, 1.28568, 0, 0, 0.503327,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0149339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499571,-99) , 
5, 0.397214, 0, 0, 0.532405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497032,-99) , 
2, 0.0167643, 0, 0, 0.500934,-99) , 
4, 0.999524, 1, 0, 0.502954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478792,-99) , 
3, 9.40614, 1, 0, 0.501994,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0241256);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44231, 1, 1, 0.526551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445708,-99) , 
7, -1.2857, 0, 0, 0.497435,-99) , 
5, -0.346189, 1, 0, 0.507995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485393,-99) , 
8, -0.931952, 0, 0, 0.501697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447514,-99) , 
8, -1.85714, 0, 0, 0.498914,-99) , 
7, -951.286, 0, 0, 0.502845,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0185867);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491937,-99) , 
2, -0.0980228, 0, 0, 0.5067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490925,-99) , 
2, 0.0224396, 0, 0, 0.496,-99) , 
2, -0.0513915, 1, 0, 0.497766,-99) , 
2, -0.214599, 1, 0, 0.498607,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.02194);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49958,-99) , 
7, -0.482976, 1, 0, 0.508029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466428,-99) , 
7, -1.57141, 0, 0, 0.50472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485473,-99) , 
5, 0.384429, 1, 0, 0.520941,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.492305,-99) , 
9, -3.35378, 1, 0, 0.49601,-99) , 
7, -951.286, 0, 0, 0.499764,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0182213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498859,-99) , 
7, -951.286, 0, 0, 0.505057,-99) , 
6, 0.0238062, 0, 0, 0.506841,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492113,-99) , 
9, -2.42496, 0, 0, 0.496758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471499,-99) , 
10, 0.998678, 1, 0, 0.494521,-99) , 
5, -0.0643462, 1, 0, 0.501787,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.00889491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498609,-99) , 
8, 1.8571, 0, 0, 0.499761,-99) , 
3, 9.12253, 0, 0, 0.501217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477069,-99) , 
4, 0.999048, 0, 0, 0.500331,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0254391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490337,-99) , 
4, 0.999977, 0, 0, 0.507605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442936,-99) , 
3, 1.70185, 1, 0, 0.491421,-99) , 
4, 0.999905, 0, 0, 0.505844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518292,-99) , 
NN(
0, 
0, 
-1, 0.0829988, 1, -1, 0.493847,-99) , 
9, -1.81547, 0, 0, 0.496667,-99) , 
5, 0.119499, 1, 0, 0.502928,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0124417);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214289, 0, 1, 0.505647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476886,-99) , 
5, -0.261611, 1, 0, 0.493131,-99) , 
0, 0.491424, 0, 0, 0.504895,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0140472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485382,-99) , 
3, 1.45081, 1, 0, 0.518548,-99) , 
NN(
0, 
0, 
-1, 0.999751, 0, -1, 0.49558,-99) , 
4, 0.999524, 1, 0, 0.497016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474147,-99) , 
3, 9.50853, 1, 0, 0.496127,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0122964);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492938,-99) , 
7, -951.286, 0, 0, 0.527389,-99) , 
NN(
0, 
0, 
-1, -0.625849, 1, 1, 0.50389,-99) , 
4, 0.999524, 1, 0, 0.50535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484926,-99) , 
3, 9.52224, 1, 0, 0.504555,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.00826015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498107,-99) , 
2, -0.00362079, 1, 0, 0.507885,-99) , 
2, 0.0711914, 0, 0, 0.51148,-99) , 
NN(
NN(
0, 
0, 
-1, 0.497139, 0, 1, 0.514393,-99) , 
NN(
0, 
0, 
-1, 0.50122, 1, -1, 0.498883,-99) , 
10, -1.5783, 1, 0, 0.500131,-99) , 
0, 0.5019, 0, 0, 0.502231,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.00839737);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480335,-99) , 
3, 9.50466, 1, 0, 0.502662,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0118208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461719,-99) , 
4, 0.999751, 0, 0, 0.500472,-99) , 
4, 0.999524, 1, 0, 0.501811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512975,-99) , 
NN(
0, 
0, 
-1, 0.0234475, 1, -1, 0.486254,-99) , 
2, -0.0709328, 1, 0, 0.491995,-99) , 
0, 0.494281, 0, 0, 0.500104,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0104696);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41572, 1, 1, 0.54025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499155,-99) , 
8, -1.85714, 1, 0, 0.5003,-99) , 
4, 0.999524, 1, 0, 0.502885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476163,-99) , 
3, 9.18438, 1, 0, 0.501728,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0205522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484657,-99) , 
2, 0.0760813, 1, 0, 0.510041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489165,-99) , 
10, 0.712685, 1, 0, 0.501177,-99) , 
5, -0.519659, 1, 0, 0.504053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468207,-99) , 
8, 0.164635, 1, 0, 0.487023,-99) , 
5, 0.681187, 1, 0, 0.503069,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.00729513);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.05918, 0, 1, 0.502987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478726,-99) , 
4, 0.999048, 0, 0, 0.50211,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0227322);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492342,-99) , 
7, -951.286, 0, 0, 0.501876,-99) , 
6, 0.0238087, 0, 0, 0.505321,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.525719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476946,-99) , 
10, 0.147515, 1, 0, 0.494404,-99) , 
9, -0.989288, 0, 0, 0.497325,-99) , 
5, -0.344807, 1, 0, 0.500715,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0197554);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494522,-99) , 
3, 2.37025, 0, 0, 0.504243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493179,-99) , 
9, -1.42074, 0, 0, 0.496134,-99) , 
5, -0.157619, 1, 0, 0.500465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473838,-99) , 
0, 0.505709, 1, 0, 0.499617,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.00948477);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525508,-99) , 
NN(
NN(
0, 
0, 
-1, 0.023792, 0, 1, 0.506441,-99) , 
NN(
0, 
0, 
-1, 1.39204, 1, -1, 0.497694,-99) , 
5, -0.344915, 1, 0, 0.501435,-99) , 
8, 2.14285, 0, 0, 0.502185,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.00902691);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0639007, 1, 1, 0.520231,-99) , 
NN(
NN(
0, 
0, 
-1, 9.12253, 0, 1, 0.501945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488558,-99) , 
9, -0.977972, 0, 0, 0.493214,-99) , 
0, 0.496186, 0, 0, 0.49926,-99) , 
8, 1.85707, 0, 0, 0.500356,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0201004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.40117, 0, 1, 0.533114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493734,-99) , 
2, -0.0094894, 1, 0, 0.499378,-99) , 
4, 0.999524, 1, 0, 0.501613,-99) , 
NN(
0, 
0, 
-1, 0.489995, 1, -1, 0.486735,-99) , 
3, 4.62761, 1, 0, 0.498517,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0168322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489217,-99) , 
9, -2.42212, 0, 0, 0.527168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482325,-99) , 
5, 0.0296188, 1, 0, 0.500911,-99) , 
10, 0.592228, 1, 0, 0.506972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490554,-99) , 
5, -0.162931, 1, 0, 0.496412,-99) , 
8, -2.11564, 1, 0, 0.497366,-99) , 
8, 0.714251, 0, 0, 0.499926,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.020798);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.40117, 0, 1, 0.537441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494335,-99) , 
4, 0.999977, 1, 0, 0.498922,-99) , 
4, 0.999524, 1, 0, 0.5015,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477987,-99) , 
2, 0.0784646, 1, 0, 0.498037,-99) , 
NN(
0, 
0, 
-1, 0.0221667, 0, -1, 0.476315,-99) , 
2, -0.0711507, 0, 0, 0.490905,-99) , 
3, 4.8082, 1, 0, 0.499426,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0217222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.46622, 0, 1, 0.522988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488772,-99) , 
10, -0.920028, 1, 0, 0.501626,-99) , 
8, 0.246035, 0, 0, 0.506444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495695,-99) , 
8, 1.57132, 0, 0, 0.498895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471375,-99) , 
5, 0.403966, 1, 0, 0.497529,-99) , 
10, 0.314772, 1, 0, 0.5016,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0179414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486226,-99) , 
8, -1.00001, 0, 0, 0.501759,-99) , 
9, 1.39256, 0, 0, 0.503456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473347,-99) , 
5, -0.841312, 1, 0, 0.490573,-99) , 
10, 3.84667, 1, 0, 0.501852,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0119564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476117,-99) , 
9, -3.8077, 0, 0, 0.500946,-99) , 
9, -4.29407, 1, 0, 0.511555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480302,-99) , 
10, 5.02195, 1, 0, 0.49796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474934,-99) , 
8, -1.57143, 0, 0, 0.496929,-99) , 
10, -1.3261, 1, 0, 0.498602,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0102614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498915,-99) , 
6, 0.0101805, 0, 0, 0.501692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472761,-99) , 
6, 0.0237559, 1, 0, 0.500835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482884,-99) , 
10, 6.6005, 1, 0, 0.499721,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0145197);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49714,-99) , 
9, -0.972387, 1, 0, 0.503368,-99) , 
NN(
0, 
0, 
-1, 0.881644, 1, -1, 0.494054,-99) , 
5, -0.438609, 1, 0, 0.497321,-99) , 
8, -1.85714, 1, 0, 0.498233,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.00737817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491929, 1, 1, 0.519448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498978,-99) , 
0, 0.49088, 0, 0, 0.511845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499698,-99) , 
3, 8.93275, 0, 0, 0.500741,-99) , 
NN(
0, 
0, 
-1, 4.62739, 1, -1, 0.489101,-99) , 
0, 0.503532, 1, 0, 0.499437,-99) , 
0, 0.493329, 1, 0, 0.501015,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.00899066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486323,-99) , 
5, 0.494461, 0, 0, 0.528817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475094,-99) , 
3, 7.27501, 1, 0, 0.498946,-99) , 
4, 0.999524, 1, 0, 0.500852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480482,-99) , 
3, 9.50853, 1, 0, 0.500054,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0191337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.731538, 0, 1, 0.506456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449275,-99) , 
9, -2.80662, 1, 0, 0.482991,-99) , 
8, -1.57144, 0, 0, 0.504368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475581,-99) , 
3, 4.13695, 1, 0, 0.498034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467431,-99) , 
5, -0.352609, 1, 0, 0.494395,-99) , 
10, 1.67037, 1, 0, 0.501348,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0103971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490048, 0, 1, 0.537389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481525,-99) , 
3, 7.28842, 1, 0, 0.500323,-99) , 
4, 0.999524, 1, 0, 0.502713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472702,-99) , 
3, 9.52607, 1, 0, 0.501589,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0105001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497457,-99) , 
9, 2.75587, 0, 0, 0.499039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469398,-99) , 
6, 0.0237449, 1, 0, 0.498141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483317,-99) , 
10, 7.22946, 1, 0, 0.497347,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0120544);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523739,-99) , 
NN(
NN(
0, 
0, 
-1, -0.106748, 0, 1, 0.504591,-99) , 
NN(
0, 
0, 
-1, -0.541276, 1, -1, 0.492733,-99) , 
10, 2.4691, 1, 0, 0.502029,-99) , 
8, -1.85714, 1, 0, 0.503032,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0151955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460992,-99) , 
7, -1.57141, 0, 0, 0.501355,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.493306,-99) , 
7, -951.286, 0, 0, 0.496789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479028,-99) , 
6, 0.0238087, 1, 0, 0.496125,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0172676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.21205, 0, 1, 0.509174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485456,-99) , 
5, 0.48646, 1, 0, 0.506178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487896,-99) , 
10, 0.85935, 1, 0, 0.496809,-99) , 
8, -1.85715, 1, 0, 0.498003,-99) , 
0, 0.499995, 0, 0, 0.5007,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0235535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497941,-99) , 
10, 3.60151, 1, 0, 0.517178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447843,-99) , 
8, -1.57162, 0, 0, 0.502111,-99) , 
7, -951.286, 0, 0, 0.507807,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496333,-99) , 
9, -1.48798, 0, 0, 0.499394,-99) , 
NN(
0, 
0, 
-1, 0.10947, 1, -1, 0.482,-99) , 
10, 0.845843, 1, 0, 0.495086,-99) , 
5, -0.532081, 1, 0, 0.498864,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0168612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484203,-99) , 
10, 7.21223, 1, 0, 0.500193,-99) , 
8, -0.999983, 1, 0, 0.506026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49712,-99) , 
8, 1.57082, 0, 0, 0.498668,-99) , 
NN(
0, 
0, 
-1, 2.45714, 1, -1, 0.475832,-99) , 
10, 1.59596, 1, 0, 0.49535,-99) , 
9, 0.874947, 0, 0, 0.497463,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0209695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.130368, 0, 1, 0.508393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460309,-99) , 
5, -0.552396, 1, 0, 0.493916,-99) , 
10, 2.61908, 1, 0, 0.504988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486795,-99) , 
9, -3.0586, 1, 0, 0.500341,-99) , 
NN(
0, 
0, 
-1, 1.67673, 0, -1, 0.475527,-99) , 
9, -0.893881, 1, 0, 0.493119,-99) , 
8, -0.428565, 0, 0, 0.500969,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0223923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43915, 1, 1, 0.53247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48438,-99) , 
10, 0.814278, 1, 0, 0.500685,-99) , 
8, 1.28567, 0, 0, 0.503832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490319,-99) , 
7, -951.286, 1, 0, 0.503521,-99) , 
NN(
0, 
0, 
-1, 2.63529, 1, -1, 0.475161,-99) , 
5, -0.634259, 1, 0, 0.495052,-99) , 
10, 2.15205, 1, 0, 0.501721,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0143892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482645,-99) , 
8, -1.2857, 0, 0, 0.49953,-99) , 
9, 1.42586, 0, 0, 0.501302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510706,-99) , 
NN(
0, 
0, 
-1, -0.766691, 1, -1, 0.473034,-99) , 
5, -0.874361, 1, 0, 0.490223,-99) , 
10, 3.77212, 1, 0, 0.499877,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0109518);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518127,-99) , 
NN(
NN(
0, 
0, 
-1, 3.76778, 1, -1, 0.497928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465869,-99) , 
5, -0.348002, 1, 0, 0.484591,-99) , 
8, -0.931943, 0, 0, 0.49588,-99) , 
8, -1.85712, 1, 0, 0.496893,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0218083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498062,-99) , 
9, -1.26653, 1, 0, 0.503307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464228,-99) , 
8, -1.85714, 0, 0, 0.501145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537958,-99) , 
NN(
0, 
0, 
-1, 0.482099, 1, -1, 0.486976,-99) , 
9, -1.03363, 0, 0, 0.489921,-99) , 
5, -0.157619, 1, 0, 0.495942,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0205084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497597,-99) , 
9, -3.68849, 0, 0, 0.521675,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479535,-99) , 
8, -0.360543, 0, 0, 0.500935,-99) , 
10, -0.876034, 1, 0, 0.503017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471473,-99) , 
7, -951.286, 0, 0, 0.486127,-99) , 
10, 2.15825, 0, 0, 0.490988,-99) , 
8, -0.714299, 0, 0, 0.50005,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0173399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496366,-99) , 
10, 2.6761, 1, 0, 0.513064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475457,-99) , 
9, -2.28105, 0, 0, 0.494979,-99) , 
5, 0.123038, 1, 0, 0.506731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474555,-99) , 
4, 0.999905, 0, 0, 0.498672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482322,-99) , 
10, -0.726276, 1, 0, 0.491634,-99) , 
5, -0.347396, 1, 0, 0.494756,-99) , 
8, 0.714254, 0, 0, 0.497941,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0143634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4886,-99) , 
9, -3.57059, 0, 0, 0.520304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467946,-99) , 
5, 0.683665, 1, 0, 0.499064,-99) , 
10, -0.880679, 1, 0, 0.501142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481249,-99) , 
8, -0.931983, 0, 0, 0.485799,-99) , 
5, -0.814205, 1, 0, 0.488978,-99) , 
8, -0.714295, 0, 0, 0.498124,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0147683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494325,-99) , 
7, -951.286, 1, 0, 0.509254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492832,-99) , 
7, -951.286, 0, 0, 0.497159,-99) , 
10, -1.43229, 1, 0, 0.498382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468772,-99) , 
6, 0.0238087, 1, 0, 0.497277,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0116332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496446,-99) , 
2, 0.212853, 0, 0, 0.497314,-99) , 
4, 0.999048, 1, 0, 0.49851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478388,-99) , 
3, 9.25868, 1, 0, 0.497685,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0188642);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.695701, 1, 1, 0.508408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475053,-99) , 
9, -2.26398, 0, 0, 0.489455,-99) , 
5, 0.309912, 1, 0, 0.503725,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485238,-99) , 
7, -951.286, 1, 0, 0.507357,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.494135,-99) , 
9, -3.6984, 1, 0, 0.496288,-99) , 
8, 0.428541, 0, 0, 0.498924,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0210586);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238613, 1, 1, 0.529007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474322,-99) , 
5, 0.403966, 1, 0, 0.501232,-99) , 
10, -1.08691, 1, 0, 0.504719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528239,-99) , 
NN(
0, 
0, 
-1, -1.57154, 0, -1, 0.489898,-99) , 
8, -1.28541, 1, 0, 0.493923,-99) , 
7, -951.286, 1, 0, 0.500063,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0145527);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498084,-99) , 
1, -0.000258292, 1, 0, 0.50673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497074,-99) , 
10, 4.53243, 1, 0, 0.504676,-99) , 
NN(
0, 
0, 
-1, 2.90952, 1, -1, 0.493265,-99) , 
9, 2.04574, 0, 0, 0.495056,-99) , 
10, -1.3596, 1, 0, 0.496338,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0140896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237526, 0, 1, 0.506843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492978,-99) , 
10, -0.221531, 1, 0, 0.498583,-99) , 
5, -0.438498, 1, 0, 0.501663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468936,-99) , 
4, 0.999048, 0, 0, 0.500489,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0170955);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0639358, 1, 1, 0.517123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499135,-99) , 
6, 0.0237559, 0, 0, 0.502736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488902,-99) , 
10, -0.810631, 1, 0, 0.495477,-99) , 
5, -0.441146, 1, 0, 0.49813,-99) , 
8, 1.85714, 0, 0, 0.499128,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.0157313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496593,-99) , 
10, 1.51059, 1, 0, 0.503661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481637,-99) , 
9, -3.90487, 1, 0, 0.493733,-99) , 
8, -1.2857, 0, 0, 0.502507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482447,-99) , 
6, 0.0238087, 1, 0, 0.501759,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0188734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483695,-99) , 
3, 6.19088, 1, 0, 0.502175,-99) , 
3, 8.08791, 0, 0, 0.503707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479074,-99) , 
10, 0.235238, 1, 0, 0.510693,-99) , 
NN(
0, 
0, 
-1, -0.57127, 1, -1, 0.487537,-99) , 
9, -2.64136, 0, 0, 0.494824,-99) , 
5, 0.216583, 1, 0, 0.501332,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0204727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486547,-99) , 
1, -0.00339683, 0, 0, 0.505894,-99) , 
6, 0.023792, 0, 0, 0.509077,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497755,-99) , 
4, 0.999524, 1, 0, 0.501135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471068,-99) , 
3, 9.42864, 1, 0, 0.499808,-99) , 
5, -0.43849, 1, 0, 0.503154,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0190641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498751,-99) , 
10, 2.20963, 1, 0, 0.50735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479124,-99) , 
8, -1.85713, 0, 0, 0.50581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494884,-99) , 
9, -1.76486, 0, 0, 0.498231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458508,-99) , 
10, 1.1115, 1, 0, 0.495335,-99) , 
5, -0.0641633, 1, 0, 0.501513,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.017993);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496485,-99) , 
5, 0.216376, 1, 0, 0.528691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481238,-99) , 
10, 2.46479, 1, 0, 0.505971,-99) , 
7, -951.286, 0, 0, 0.514834,-99) , 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.512429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4912,-99) , 
10, 0.655197, 1, 0, 0.499152,-99) , 
9, 2.83157, 0, 0, 0.500676,-99) , 
8, 0.999999, 0, 0, 0.503345,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0142008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487766,-99) , 
7, -951.286, 0, 0, 0.512113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496429,-99) , 
5, -0.39406, 1, 0, 0.500806,-99) , 
5, 0.590599, 0, 0, 0.501918,-99) , 
NN(
0, 
0, 
-1, 0.505845, 0, -1, 0.48508,-99) , 
0, 0.504757, 1, 0, 0.500985,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.00784154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498982,-99) , 
2, 0.216711, 0, 0, 0.499915,-99) , 
3, 9.42599, 0, 0, 0.501465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481163,-99) , 
4, 0.999048, 0, 0, 0.500729,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0168013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714161, 0, 1, 0.520694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47407,-99) , 
8, 1.28772, 1, 0, 0.497487,-99) , 
10, 3.00909, 1, 0, 0.507005,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498569,-99) , 
8, 0.926764, 0, 0, 0.501748,-99) , 
NN(
0, 
0, 
-1, -0.209045, 1, -1, 0.473136,-99) , 
10, 1.33714, 1, 0, 0.498741,-99) , 
9, -0.150129, 0, 0, 0.501108,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.015094);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.581122, 1, 1, 0.506866,-99) , 
NN(
0, 
0, 
-1, 0.0713185, 1, -1, 0.493347,-99) , 
8, -0.714299, 0, 0, 0.503482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473247,-99) , 
6, 0.0237868, 1, 0, 0.502369,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0118868);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498159,-99) , 
8, -1.57142, 1, 0, 0.499534,-99) , 
3, 8.83823, 0, 0, 0.50102,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455237,-99) , 
7, -951.286, 0, 0, 0.484996,-99) , 
4, 0.999524, 0, 0, 0.499983,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0105829);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531878,-99) , 
NN(
NN(
0, 
0, 
-1, 1.12409, 0, 1, 0.502617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483693,-99) , 
8, -0.304131, 1, 0, 0.491387,-99) , 
10, 3.2999, 1, 0, 0.500964,-99) , 
8, 2.14281, 0, 0, 0.501912,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0225885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473467,-99) , 
10, 3.92902, 1, 0, 0.508918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494746,-99) , 
9, 1.98962, 0, 0, 0.498306,-99) , 
6, 0.00678735, 0, 0, 0.500937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480865,-99) , 
6, 0.0237559, 1, 0, 0.500187,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0221509);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498559,-99) , 
10, 0.913871, 1, 0, 0.507203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468901,-99) , 
6, 0.0045348, 1, 0, 0.49223,-99) , 
10, 3.84667, 1, 0, 0.505472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485255,-99) , 
6, 0.0238087, 1, 0, 0.504715,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.0115285);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.7896, 0, 1, 0.505215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479769,-99) , 
4, 0.999048, 0, 0, 0.504285,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0094353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498745,-99) , 
7, -951.286, 0, 0, 0.511425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498231,-99) , 
8, -1.77551, 1, 0, 0.499195,-99) , 
8, 1.28565, 0, 0, 0.500766,-99) , 
NN(
0, 
0, 
-1, 0.142668, 0, -1, 0.486387,-99) , 
0, 0.492376, 0, 0, 0.499509,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.00988066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42883, 0, 1, 0.503596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480751,-99) , 
4, 0.999683, 0, 0, 0.502436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480498,-99) , 
4, 0.999048, 0, 0, 0.50164,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0122738);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49633,-99) , 
10, 2.33137, 1, 0, 0.501485,-99) , 
8, -1.2861, 1, 0, 0.508319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499373,-99) , 
9, -0.214331, 0, 0, 0.501596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475066,-99) , 
10, 2.54424, 1, 0, 0.500052,-99) , 
5, -0.625606, 1, 0, 0.501917,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.015661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.703017, 0, 1, 0.518266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491639,-99) , 
0, 0.496189, 0, 0, 0.504969,-99) , 
10, 2.18847, 1, 0, 0.5135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498861,-99) , 
9, -3.26939, 0, 0, 0.512193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497794,-99) , 
3, 8.82792, 0, 0, 0.499073,-99) , 
5, 0.393745, 0, 0, 0.501384,-99) , 
8, 0.714286, 0, 0, 0.504604,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0143129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.4299, 0, 1, 0.505282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473466,-99) , 
4, 0.999705, 0, 0, 0.504405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459853,-99) , 
5, 0.583153, 0, 0, 0.480489,-99) , 
4, 0.999524, 0, 0, 0.50288,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0124331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495777, 0, 1, 0.510952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480637,-99) , 
5, -0.25539, 1, 0, 0.492707,-99) , 
2, 0.0717312, 1, 0, 0.507885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499413,-99) , 
8, -1.26322, 0, 0, 0.509299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497285,-99) , 
2, -0.0723257, 1, 0, 0.498668,-99) , 
10, -1.3596, 1, 0, 0.499841,-99) , 
0, 0.496186, 1, 0, 0.502346,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0113322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499117,-99) , 
5, -0.532162, 0, 0, 0.510225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483124,-99) , 
0, 0.502852, 1, 0, 0.498502,-99) , 
1, 0.00340276, 0, 0, 0.501624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475763,-99) , 
6, 0.0238087, 1, 0, 0.500681,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0251191);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463434,-99) , 
4, 0.999955, 0, 0, 0.512196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493867,-99) , 
3, 1.18135, 1, 0, 0.499657,-99) , 
3, 4.56354, 0, 0, 0.502354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480239,-99) , 
4, 0.999048, 0, 0, 0.501558,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0093996);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.504097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479156,-99) , 
4, 0.999048, 0, 0, 0.5032,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0104683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.382939, 1, 1, 0.506849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485505,-99) , 
2, -0.0710439, 0, 0, 0.499005,-99) , 
8, 0.428549, 0, 0, 0.501795,-99) , 
NN(
0, 
0, 
-1, 0.895275, 0, -1, 0.485701,-99) , 
0, 0.504757, 1, 0, 0.500905,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.00923265);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520208,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492742,-99) , 
7, -951.286, 1, 0, 0.497061,-99) , 
8, 2.14281, 0, 0, 0.497705,-99) , 
2, -0.214281, 1, 0, 0.498777,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0144631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495101,-99) , 
10, 8.41781, 1, 0, 0.509875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496192,-99) , 
9, 1.32097, 0, 0, 0.497722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461569,-99) , 
10, 3.74811, 1, 0, 0.496031,-99) , 
9, 4.66423, 0, 0, 0.497247,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0138064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458821,-99) , 
10, 2.47175, 1, 0, 0.500201,-99) , 
9, 1.09338, 0, 0, 0.502081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491445,-99) , 
8, 0.135512, 1, 0, 0.502953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471392,-99) , 
5, -0.799318, 1, 0, 0.49226,-99) , 
10, 3.65023, 1, 0, 0.500761,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.011378);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.514987,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499585,-99) , 
2, -0.0714577, 1, 0, 0.502716,-99) , 
NN(
0, 
0, 
-1, 4.82503, 1, -1, 0.493933,-99) , 
0, 0.499995, 0, 0, 0.496827,-99) , 
8, 1.85715, 0, 0, 0.497762,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0113688);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527499,-99) , 
NN(
NN(
0, 
0, 
-1, 1.28564, 0, 1, 0.503359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467582,-99) , 
5, -0.752101, 1, 0, 0.493626,-99) , 
10, 3.37992, 1, 0, 0.501933,-99) , 
2, -0.213927, 1, 0, 0.503178,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.016241);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470878,-99) , 
10, 1.38489, 1, 0, 0.499947,-99) , 
9, 0.0264541, 0, 0, 0.501485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521923,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.489202,-99) , 
8, -0.713586, 1, 0, 0.494058,-99) , 
10, 2.04344, 1, 0, 0.49959,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0210461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.533627,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494121,-99) , 
4, 0.999977, 1, 0, 0.49932,-99) , 
4, 0.999524, 1, 0, 0.501595,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476503,-99) , 
2, 0.0778274, 1, 0, 0.494633,-99) , 
NN(
0, 
0, 
-1, -0.142917, 0, -1, 0.47358,-99) , 
2, -0.0717891, 0, 0, 0.487706,-99) , 
3, 4.82397, 1, 0, 0.498921,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0145385);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.512973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489257,-99) , 
7, -951.286, 1, 0, 0.507182,-99) , 
NN(
0, 
0, 
-1, -1.28572, 0, -1, 0.495133,-99) , 
9, 1.93758, 0, 0, 0.497039,-99) , 
10, -1.51913, 1, 0, 0.498436,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0157257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498462,-99) , 
7, -951.286, 0, 0, 0.527709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4958,-99) , 
8, 1.28571, 0, 0, 0.49824,-99) , 
4, 0.999524, 1, 0, 0.500122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472563,-99) , 
3, 9.52224, 1, 0, 0.499067,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0283732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.08837, 1, 1, 0.522353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45341,-99) , 
10, 0.412288, 1, 0, 0.49636,-99) , 
9, -1.10577, 0, 0, 0.505198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48323,-99) , 
4, 0.999977, 0, 0, 0.499497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458179,-99) , 
4, 0.999524, 0, 0, 0.497135,-99) , 
7, -951.286, 0, 0, 0.500645,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0179342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.442445, 1, 1, 0.506127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473185,-99) , 
5, 0.590601, 1, 0, 0.50345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487423,-99) , 
5, 0.21679, 1, 0, 0.505484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491452,-99) , 
5, 0.585948, 0, 0, 0.493604,-99) , 
8, 1.28562, 0, 0, 0.495133,-99) , 
0, 0.499995, 0, 0, 0.497876,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0159552);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490834,-99) , 
3, 3.34759, 1, 0, 0.517632,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.490733,-99) , 
3, 4.62302, 1, 0, 0.506704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477192,-99) , 
0, 0.504757, 1, 0, 0.50142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471426,-99) , 
2, 0.00326844, 0, 0, 0.493162,-99) , 
2, -0.00385552, 1, 0, 0.497583,-99) , 
2, 0.0709452, 0, 0, 0.499,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0132308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473168,-99) , 
10, 6.59623, 1, 0, 0.497735,-99) , 
6, 0.0237841, 0, 0, 0.499231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488268,-99) , 
7, -951.286, 1, 0, 0.496012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456758,-99) , 
10, 1.18232, 1, 0, 0.493442,-99) , 
5, -0.0643462, 1, 0, 0.496838,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0145066);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493969,-99) , 
4, 0.999955, 1, 0, 0.496967,-99) , 
3, 9.42206, 0, 0, 0.497858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472127,-99) , 
4, 0.999048, 0, 0, 0.496935,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0156164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428419, 0, 1, 0.520703,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492019,-99) , 
8, 0.4333, 1, 0, 0.502572,-99) , 
10, 2.93437, 1, 0, 0.508974,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4973,-99) , 
8, 1.8571, 0, 0, 0.498367,-99) , 
NN(
0, 
0, 
-1, 0.403943, 1, -1, 0.484549,-99) , 
0, 0.494281, 0, 0, 0.49603,-99) , 
9, 0.0114434, 0, 0, 0.499526,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0115966);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498686,-99) , 
3, 9.42883, 0, 0, 0.500593,-99) , 
NN(
0, 
0, 
-1, -0.251323, 1, -1, 0.481124,-99) , 
4, 0.999864, 0, 0, 0.498349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470686,-99) , 
4, 0.999048, 0, 0, 0.497371,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.00958434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498022,-99) , 
2, 0.0793393, 0, 0, 0.499525,-99) , 
4, 0.999048, 1, 0, 0.500886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480901,-99) , 
3, 9.50853, 1, 0, 0.500122,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.00837206);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484282,-99) , 
3, 9.50466, 1, 0, 0.502969,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.00894376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.2618, 0, 1, 0.521656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481739,-99) , 
3, 7.73628, 1, 0, 0.501337,-99) , 
5, 0.684497, 0, 0, 0.502492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475729,-99) , 
3, 9.52666, 1, 0, 0.501464,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.00942172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.0063, 0, 1, 0.502436,-99) , 
NN(
0, 
0, 
-1, -0.428617, 0, -1, 0.482409,-99) , 
4, 0.999819, 0, 0, 0.500612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470831,-99) , 
4, 0.999048, 0, 0, 0.49956,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.00978252);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498131,-99) , 
2, 0.152483, 0, 0, 0.499159,-99) , 
3, 8.79326, 0, 0, 0.500635,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.48201,-99) , 
4, 0.999524, 0, 0, 0.499452,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0221858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492055,-99) , 
8, -0.334596, 0, 0, 0.526254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462743,-99) , 
10, -0.206878, 1, 0, 0.49844,-99) , 
9, -2.27145, 0, 0, 0.502942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49572,-99) , 
10, 3.27286, 1, 0, 0.503199,-99) , 
NN(
0, 
0, 
-1, 1.54422, 1, -1, 0.491042,-99) , 
9, 0.322529, 0, 0, 0.496321,-99) , 
10, 0.284153, 1, 0, 0.499301,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0150953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.592228, 1, 1, 0.513692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4936,-99) , 
3, 4.58338, 1, 0, 0.502897,-99) , 
8, 0.714257, 0, 0, 0.505768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499105,-99) , 
2, 0.0711339, 0, 0, 0.501801,-99) , 
NN(
0, 
0, 
-1, 0.779026, 1, -1, 0.486573,-99) , 
0, 0.502535, 0, 0, 0.495663,-99) , 
0, 0.500947, 1, 0, 0.503264,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0187089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.20963, 1, 1, 0.508839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493039,-99) , 
9, -1.04731, 0, 0, 0.49504,-99) , 
5, -0.157743, 1, 0, 0.502342,-99) , 
NN(
0, 
0, 
-1, -2.04762, 0, -1, 0.479511,-99) , 
8, -1.57141, 0, 0, 0.500718,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0194042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481118,-99) , 
4, 0.999864, 0, 0, 0.502544,-99) , 
4, 0.999048, 1, 0, 0.505002,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493948,-99) , 
8, 0.71428, 0, 0, 0.498738,-99) , 
NN(
0, 
0, 
-1, -1.62521, 0, -1, 0.474762,-99) , 
5, 0.0289067, 1, 0, 0.495905,-99) , 
10, 0.442445, 1, 0, 0.500308,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0171145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496771,-99) , 
6, 0.00226747, 1, 0, 0.50203,-99) , 
6, 0.0238087, 0, 0, 0.505862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496783,-99) , 
9, -1.05236, 0, 0, 0.49979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470434,-99) , 
10, 1.75463, 1, 0, 0.497684,-99) , 
5, -0.43849, 1, 0, 0.500651,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0180335);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499578,-99) , 
10, 0.763409, 1, 0, 0.506892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47152,-99) , 
6, 0.0238087, 1, 0, 0.505576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50909,-99) , 
NN(
0, 
0, 
-1, -0.769988, 1, -1, 0.487799,-99) , 
9, 1.08433, 0, 0, 0.490796,-99) , 
8, -0.714271, 0, 0, 0.501891,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0124019);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475222,-99) , 
3, 9.50466, 1, 0, 0.50432,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0100988);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52599,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498053,-99) , 
0, 0.504757, 0, 0, 0.499216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465718,-99) , 
6, 0.0237526, 1, 0, 0.497978,-99) , 
8, -1.85714, 1, 0, 0.499262,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0140007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48539,-99) , 
5, -0.628277, 0, 0, 0.512698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486263,-99) , 
0, 0.494283, 0, 0, 0.506917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489236,-99) , 
10, 1.11821, 1, 0, 0.497392,-99) , 
9, 4.74026, 0, 0, 0.498534,-99) , 
2, 0.0713993, 0, 0, 0.499835,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0224108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.534468,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490408,-99) , 
5, -0.159476, 1, 0, 0.498989,-99) , 
4, 0.999524, 1, 0, 0.501334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486703,-99) , 
3, 9.44432, 0, 0, 0.493722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456412,-99) , 
5, 0.490274, 1, 0, 0.488219,-99) , 
3, 4.82263, 1, 0, 0.498798,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0151403);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496623,-99) , 
10, 1.40018, 1, 0, 0.504946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489765,-99) , 
0, 0.499043, 1, 0, 0.496967,-99) , 
8, -0.142874, 0, 0, 0.50143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47287,-99) , 
3, 9.42206, 1, 0, 0.500322,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.00596832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48127,-99) , 
4, 0.999683, 0, 0, 0.499242,-99) , 
8, -1.85714, 1, 0, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473722,-99) , 
4, 0.999048, 0, 0, 0.49934,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0106563);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503032,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480386,-99) , 
8, -0.142888, 0, 0, 0.495782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468347,-99) , 
5, 0.403775, 1, 0, 0.490882,-99) , 
0, 0.494281, 0, 0, 0.500952,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0094017);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499811,-99) , 
9, -3.99891, 1, 0, 0.501834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482144,-99) , 
5, -0.728687, 1, 0, 0.491018,-99) , 
10, 1.74461, 1, 0, 0.498834,-99) , 
8, 2.14281, 0, 0, 0.499623,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0102162);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499264,-99) , 
6, 0.0237842, 0, 0, 0.502108,-99) , 
NN(
0, 
0, 
-1, 1.40705, 1, -1, 0.494746,-99) , 
5, -0.440251, 1, 0, 0.497436,-99) , 
8, 2.14281, 0, 0, 0.498159,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0189405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.56038, 1, 1, 0.525265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445094,-99) , 
7, -1.28569, 0, 0, 0.495585,-99) , 
9, -0.704083, 0, 0, 0.504358,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497221,-99) , 
9, -3.06706, 1, 0, 0.500042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462944,-99) , 
4, 0.999524, 0, 0, 0.497943,-99) , 
7, -951.286, 0, 0, 0.500729,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00999809);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493794,-99) , 
8, -0.551009, 0, 0, 0.499548,-99) , 
8, 2.14285, 0, 0, 0.500382,-99) , 
NN(
0, 
0, 
-1, -0.5268, 1, -1, 0.485632,-99) , 
0, 0.492377, 0, 0, 0.499106,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0155375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491114,-99) , 
5, -0.441712, 0, 0, 0.504384,-99) , 
0, 0.502852, 0, 0, 0.508274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499746,-99) , 
6, 0.0238088, 0, 0, 0.502956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491959,-99) , 
9, -0.756949, 0, 0, 0.494178,-99) , 
5, -0.345239, 1, 0, 0.497894,-99) , 
2, 0.0714928, 0, 0, 0.499494,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.00700666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498502,-99) , 
0, 0.491424, 1, 0, 0.499447,-99) , 
3, 9.05918, 0, 0, 0.500323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483718,-99) , 
4, 0.999048, 0, 0, 0.499723,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0126414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47447,-99) , 
10, 2.5665, 1, 0, 0.500825,-99) , 
9, 1.25602, 0, 0, 0.502472,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492195,-99) , 
5, -0.916018, 1, 0, 0.503141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463376,-99) , 
9, 4.46148, 0, 0, 0.49127,-99) , 
10, 3.80033, 1, 0, 0.501057,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00960025);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0102035, 0, 1, 0.502936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484836,-99) , 
6, 0.0238087, 1, 0, 0.50223,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.472535,-99) , 
5, 0.681187, 1, 0, 0.500518,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0167039);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492671,-99) , 
10, 3.06182, 1, 0, 0.522591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484391,-99) , 
5, 0.395563, 1, 0, 0.514591,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0237559, 0, 1, 0.504724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484818,-99) , 
10, -0.294497, 1, 0, 0.494529,-99) , 
5, -0.346202, 1, 0, 0.498967,-99) , 
8, 1.28571, 0, 0, 0.500979,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0234125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499529,-99) , 
8, -0.143761, 0, 0, 0.528475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493078,-99) , 
0, 0.499995, 0, 0, 0.499742,-99) , 
10, 3.77819, 1, 0, 0.50892,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495899,-99) , 
9, -1.53322, 0, 0, 0.501837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474756,-99) , 
7, -951.286, 0, 0, 0.48471,-99) , 
10, 1.25755, 1, 0, 0.498122,-99) , 
9, 0.990198, 0, 0, 0.50018,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0158464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.36998, 0, 1, 0.510431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47193,-99) , 
2, -0.0642053, 0, 0, 0.495668,-99) , 
10, 1.35361, 1, 0, 0.50396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484359,-99) , 
4, 0.999977, 0, 0, 0.495349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467593,-99) , 
4, 0.999524, 0, 0, 0.493713,-99) , 
8, -0.142852, 0, 0, 0.499454,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0165084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475368,-99) , 
9, 3.37233, 1, 0, 0.506779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497415,-99) , 
9, 2.06566, 0, 0, 0.499747,-99) , 
6, 0.0068024, 0, 0, 0.501476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470366,-99) , 
6, 0.0238087, 1, 0, 0.500325,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0126053);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28595, 1, 1, 0.509465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487179,-99) , 
2, 0.0736913, 1, 0, 0.506266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526377,-99) , 
NN(
0, 
0, 
-1, -1.57125, 0, -1, 0.495928,-99) , 
9, -4.29807, 1, 0, 0.497508,-99) , 
5, -0.625606, 1, 0, 0.4995,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0251485);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455186,-99) , 
8, -1.85714, 0, 0, 0.508099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488301,-99) , 
9, -1.28908, 0, 0, 0.496432,-99) , 
7, -951.286, 1, 0, 0.503063,-99) , 
2, -0.214276, 1, 0, 0.503994,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0136073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.65922, 0, 1, 0.526541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497776,-99) , 
2, 0.214056, 0, 0, 0.499084,-99) , 
8, 1.28564, 0, 0, 0.501359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518627,-99) , 
NN(
0, 
0, 
-1, -0.0686982, 0, -1, 0.490379,-99) , 
8, -0.999424, 1, 0, 0.493168,-99) , 
10, 1.73541, 1, 0, 0.498937,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0116944);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498922,-99) , 
9, -1.7867, 0, 0, 0.503648,-99) , 
NN(
0, 
0, 
-1, -0.0640159, 1, -1, 0.494987,-99) , 
10, 0.73581, 1, 0, 0.499654,-99) , 
8, -2.14285, 1, 0, 0.500352,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0135631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.438473, 1, 1, 0.504826,-99) , 
NN(
0, 
0, 
-1, -1.97964, 0, -1, 0.481875,-99) , 
8, -1.57143, 0, 0, 0.503008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493463,-99) , 
5, -0.917297, 1, 0, 0.499595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473593,-99) , 
5, -0.807045, 1, 0, 0.491085,-99) , 
10, 3.84667, 1, 0, 0.501502,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0189075);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.75432, 1, 1, 0.520257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488586,-99) , 
10, 1.46689, 1, 0, 0.503461,-99) , 
9, 0.630865, 0, 0, 0.504885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486391,-99) , 
7, -951.286, 1, 0, 0.500572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463335,-99) , 
5, -0.733441, 1, 0, 0.492107,-99) , 
10, 3.46934, 1, 0, 0.503092,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0204947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453685,-99) , 
9, -3.82717, 1, 0, 0.499975,-99) , 
9, -3.54619, 0, 0, 0.513181,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495933,-99) , 
3, 9.18769, 0, 0, 0.497679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479166,-99) , 
4, 0.999524, 0, 0, 0.496709,-99) , 
10, -1.02787, 1, 0, 0.499418,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0129217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475018,-99) , 
10, 2.85911, 1, 0, 0.502223,-99) , 
9, 2.14958, 0, 0, 0.503201,-99) , 
NN(
0, 
0, 
-1, 0.427358, 1, -1, 0.482938,-99) , 
10, 5.50079, 1, 0, 0.501559,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00752442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529718,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498853,-99) , 
2, -0.209818, 1, 0, 0.499846,-99) , 
4, 0.999048, 1, 0, 0.500898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47802,-99) , 
3, 9.52058, 1, 0, 0.500012,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0123339);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498418,-99) , 
10, -0.30191, 1, 0, 0.520802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497174,-99) , 
2, -0.048103, 1, 0, 0.499663,-99) , 
4, 0.999524, 1, 0, 0.500989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474306,-99) , 
3, 9.50466, 1, 0, 0.499965,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.00618753);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.216012, 0, 1, 0.502685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488343,-99) , 
3, 9.02523, 1, 0, 0.502032,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.00711571);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.0526, 0, 1, 0.502797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475804,-99) , 
4, 0.999048, 0, 0, 0.501837,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0125266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499869,-99) , 
8, 0.142946, 1, 0, 0.510447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498913,-99) , 
5, 0.39403, 1, 0, 0.515107,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.495484,-99) , 
9, -3.81615, 1, 0, 0.497466,-99) , 
9, 3.0843, 0, 0, 0.498943,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0217626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489763,-99) , 
5, -0.0643251, 1, 0, 0.506994,-99) , 
10, 0.914432, 1, 0, 0.513292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488154,-99) , 
5, -0.152432, 0, 0, 0.507431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494459,-99) , 
6, 0.023792, 0, 0, 0.496604,-99) , 
10, -0.058394, 1, 0, 0.501568,-99) , 
8, 0.999966, 0, 0, 0.503774,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0154386);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525565,-99) , 
NN(
NN(
0, 
0, 
-1, 0.539398, 1, 1, 0.511732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495804,-99) , 
10, -0.888896, 1, 0, 0.49859,-99) , 
8, 0.687102, 0, 0, 0.502363,-99) , 
8, -1.85713, 1, 0, 0.503421,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0143336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428575, 0, 1, 0.520841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49353,-99) , 
5, -0.0641582, 1, 0, 0.510397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491736,-99) , 
10, 2.70568, 1, 0, 0.500965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491814,-99) , 
10, -1.88044, 1, 0, 0.494454,-99) , 
8, -0.428565, 0, 0, 0.498748,-99) , 
0, 0.493329, 1, 0, 0.500244,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0178612);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498948,-99) , 
2, 0.0785303, 1, 0, 0.514353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490382,-99) , 
2, -0.0709913, 0, 0, 0.510446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497651,-99) , 
8, 1.00298, 0, 0, 0.500927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479927,-99) , 
9, -0.449005, 0, 0, 0.487294,-99) , 
10, 1.0336, 1, 0, 0.498503,-99) , 
9, -0.0769123, 0, 0, 0.501826,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0146149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497225,-99) , 
3, 4.63529, 1, 0, 0.515795,-99) , 
NN(
0, 
0, 
-1, 6.27317, 0, 1, 0.504957,-99) , 
2, 0.0716194, 0, 0, 0.506556,-99) , 
NN(
NN(
0, 
0, 
-1, -0.786502, 0, 1, 0.512547,-99) , 
NN(
0, 
0, 
-1, 0.861377, 1, -1, 0.493076,-99) , 
5, -0.62639, 1, 0, 0.497602,-99) , 
0, 0.496186, 0, 0, 0.503808,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0149142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483223,-99) , 
5, 0.404176, 0, 0, 0.524546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475446,-99) , 
4, 0.999773, 0, 0, 0.502318,-99) , 
4, 0.999524, 1, 0, 0.503716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472497,-99) , 
3, 9.52058, 1, 0, 0.502544,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0132057);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5019, 0, 1, 0.507739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496036,-99) , 
2, 0.108765, 0, 0, 0.497306,-99) , 
3, 3.12409, 0, 0, 0.500727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475094,-99) , 
3, 9.1652, 1, 0, 0.499625,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0251899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476654,-99) , 
8, -1.85715, 0, 0, 0.504498,-99) , 
6, 0.0238088, 0, 0, 0.506459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493685,-99) , 
9, -2.88272, 0, 0, 0.504781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48139,-99) , 
9, -1.36753, 0, 0, 0.489364,-99) , 
10, -0.30028, 1, 0, 0.49814,-99) , 
5, -0.15816, 1, 0, 0.502604,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.00764976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467527,-99) , 
3, 7.71384, 1, 0, 0.500525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466857,-99) , 
3, 9.50466, 1, 0, 0.499262,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0062693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499965,-99) , 
4, 0.999048, 1, 0, 0.501053,-99) , 
2, 0.214489, 0, 0, 0.502496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483669,-99) , 
3, 9.26255, 1, 0, 0.501712,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0136285);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468177,-99) , 
8, -1.85714, 0, 0, 0.502239,-99) , 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.495678,-99) , 
7, -951.286, 1, 0, 0.499411,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47243,-99) , 
3, 2.37338, 0, 0, 0.490358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46864,-99) , 
3, 4.41496, 1, 0, 0.484073,-99) , 
0, 0.503805, 1, 0, 0.498068,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0225107);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.822435, 0, 1, 0.514108,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473196,-99) , 
7, -951.286, 0, 0, 0.487864,-99) , 
10, 1.94997, 1, 0, 0.50423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49561,-99) , 
3, 4.59243, 0, 0, 0.498206,-99) , 
NN(
0, 
0, 
-1, -0.714285, 0, -1, 0.478816,-99) , 
2, -0.0713465, 0, 0, 0.495073,-99) , 
8, 0.428573, 0, 0, 0.498326,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0153396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.624852, 1, 1, 0.50478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472922,-99) , 
8, -1.85715, 0, 0, 0.503133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493758,-99) , 
10, 6.45863, 1, 0, 0.503557,-99) , 
NN(
0, 
0, 
-1, 0.57405, 0, -1, 0.483309,-99) , 
9, 2.41925, 0, 0, 0.494014,-99) , 
10, 2.15205, 1, 0, 0.500912,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0181795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482152,-99) , 
10, 0.68922, 1, 0, 0.499012,-99) , 
8, 1.57131, 0, 0, 0.500572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495249,-99) , 
0, 0.497143, 1, 0, 0.500546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46441,-99) , 
7, -951.286, 0, 0, 0.475974,-99) , 
5, -0.63006, 1, 0, 0.491031,-99) , 
10, 1.62936, 1, 0, 0.497624,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.00955278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492581,-99) , 
3, 3.55722, 1, 0, 0.498823,-99) , 
3, 9.1292, 0, 0, 0.500195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476297,-99) , 
4, 0.999048, 0, 0, 0.499336,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0112391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490063, 1, 1, 0.512689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489515,-99) , 
5, 0.310171, 1, 0, 0.507705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496225,-99) , 
8, 2.14285, 0, 0, 0.496892,-99) , 
4, 0.999048, 1, 0, 0.497577,-99) , 
0, 0.493329, 1, 0, 0.498867,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0136616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499556,-99) , 
7, -951.286, 0, 0, 0.519766,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493511,-99) , 
5, -0.346258, 1, 0, 0.498226,-99) , 
4, 0.999524, 1, 0, 0.499586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481867,-99) , 
3, 9.40614, 1, 0, 0.498878,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.00979698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.41001, 0, 1, 0.503658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47962,-99) , 
2, 0.275036, 1, 0, 0.503015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478289,-99) , 
2, -0.214584, 0, 0, 0.501902,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0156023);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.807717, 0, 1, 0.504534,-99) , 
NN(
0, 
0, 
-1, -0.353081, 1, -1, 0.49113,-99) , 
10, 1.63041, 1, 0, 0.500146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486134,-99) , 
3, 2.10829, 0, 0, 0.503316,-99) , 
NN(
0, 
0, 
-1, -1.91749, 1, -1, 0.473494,-99) , 
10, -0.757296, 0, 0, 0.487392,-99) , 
8, -1.2857, 0, 0, 0.498663,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0182875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.543383, 0, 1, 0.50982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48219,-99) , 
2, -0.0727669, 0, 0, 0.505409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494964,-99) , 
10, -0.96263, 1, 0, 0.498396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474605,-99) , 
9, -3.67305, 1, 0, 0.485087,-99) , 
8, -1.00003, 0, 0, 0.495896,-99) , 
9, 0.0592861, 0, 0, 0.498408,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.016715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495816,-99) , 
1, -0.00340098, 0, 0, 0.503447,-99) , 
6, 0.0238088, 0, 0, 0.504549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493972,-99) , 
9, -1.55742, 0, 0, 0.496302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461452,-99) , 
10, 1.37595, 1, 0, 0.493862,-99) , 
5, -0.253669, 1, 0, 0.499,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0174305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491729,-99) , 
9, -2.65204, 0, 0, 0.519213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482951,-99) , 
10, -0.426159, 1, 0, 0.497667,-99) , 
8, 0.246036, 0, 0, 0.502554,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.495985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467205,-99) , 
9, -1.50847, 0, 0, 0.482264,-99) , 
5, -0.0640212, 1, 0, 0.493709,-99) , 
10, 0.314772, 1, 0, 0.497747,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0183605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495907,-99) , 
8, -0.142874, 0, 0, 0.501377,-99) , 
0, 0.505709, 0, 0, 0.502362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482422,-99) , 
9, -2.73304, 0, 0, 0.493772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463999,-99) , 
10, 0.295894, 1, 0, 0.489146,-99) , 
5, 0.403969, 1, 0, 0.500029,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0160471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4853,-99) , 
8, -1.28572, 0, 0, 0.501407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467822,-99) , 
6, 0.0045339, 1, 0, 0.487714,-99) , 
10, 3.94896, 1, 0, 0.499897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481993,-99) , 
6, 0.0238087, 1, 0, 0.49922,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.00902825);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498749,-99) , 
2, 0.2144, 0, 0, 0.499917,-99) , 
NN(
0, 
0, 
-1, -3.42657, 0, -1, 0.491017,-99) , 
0, 0.495234, 0, 0, 0.497853,-99) , 
8, 2.14281, 0, 0, 0.498686,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0122967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.530702,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463938,-99) , 
10, -1.89345, 1, 0, 0.495469,-99) , 
10, -0.734089, 0, 0, 0.511791,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488484,-99) , 
10, 3.59505, 1, 0, 0.498679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474826,-99) , 
8, -1.08162, 0, 0, 0.497612,-99) , 
8, -1.2857, 1, 0, 0.49929,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0139591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.77553, 0, 1, 0.528423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494129,-99) , 
0, 0.500812, 0, 0, 0.498054,-99) , 
0, 0.498091, 1, 0, 0.513177,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498429,-99) , 
9, -0.844209, 0, 0, 0.501137,-99) , 
NN(
0, 
0, 
-1, -0.260114, 1, -1, 0.490967,-99) , 
10, 1.53441, 1, 0, 0.497641,-99) , 
8, -1.28571, 1, 0, 0.499474,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0124066);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519783,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499198,-99) , 
8, -0.182992, 1, 0, 0.502423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475687,-99) , 
5, -0.441147, 1, 0, 0.488483,-99) , 
8, -0.931943, 0, 0, 0.500297,-99) , 
8, -1.85712, 1, 0, 0.501171,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0110924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497238,-99) , 
8, 1.85714, 0, 0, 0.498358,-99) , 
3, 9.18789, 0, 0, 0.499351,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.476842,-99) , 
4, 0.999524, 0, 0, 0.497952,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0137673);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51719,-99) , 
NN(
NN(
0, 
0, 
-1, -1.38606, 0, 1, 0.503981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485219,-99) , 
9, 1.11994, 0, 0, 0.495191,-99) , 
10, 1.20725, 1, 0, 0.500631,-99) , 
8, -1.85714, 1, 0, 0.501372,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0119235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49587,-99) , 
3, 0.571609, 1, 0, 0.497001,-99) , 
3, 9.4289, 0, 0, 0.497759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469813,-99) , 
4, 0.999048, 0, 0, 0.496764,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.012598);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498661,-99) , 
5, -0.43849, 1, 0, 0.502685,-99) , 
4, 0.999048, 1, 0, 0.503799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473622,-99) , 
3, 9.1652, 1, 0, 0.502521,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00800679);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497144,-99) , 
3, 4.64903, 1, 0, 0.509083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499159,-99) , 
4, 0.999524, 1, 0, 0.500125,-99) , 
2, 0.0714036, 0, 0, 0.50146,-99) , 
NN(
0, 
0, 
-1, 0.14277, 0, -1, 0.482853,-99) , 
0, 0.491424, 0, 0, 0.500357,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0144917);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498184,-99) , 
10, 0.787465, 1, 0, 0.504058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480739,-99) , 
6, 0.0238087, 1, 0, 0.503187,-99) , 
8, -1.85713, 1, 0, 0.504385,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0102428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499926,-99) , 
9, -0.0591339, 0, 0, 0.502418,-99) , 
3, 9.42899, 0, 0, 0.503692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455961,-99) , 
7, -951.286, 0, 0, 0.481124,-99) , 
4, 0.999524, 0, 0, 0.502279,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.00907524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214584, 1, 1, 0.504137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4848,-99) , 
4, 0.999048, 0, 0, 0.503436,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0293495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.91179, 1, 1, 0.50753,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439171,-99) , 
3, 1.6992, 1, 0, 0.491484,-99) , 
4, 0.999884, 0, 0, 0.505838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48687,-99) , 
10, -0.536504, 1, 0, 0.505157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455734,-99) , 
8, -0.683652, 1, 0, 0.482898,-99) , 
9, -3.37562, 0, 0, 0.495822,-99) , 
5, 0.310368, 1, 0, 0.503616,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.016846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491861,-99) , 
9, -3.0386, 0, 0, 0.518018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483318,-99) , 
8, 1.95234, 1, 0, 0.501436,-99) , 
10, -0.19436, 1, 0, 0.504325,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510213,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.491559,-99) , 
8, -0.278938, 0, 0, 0.493604,-99) , 
8, -0.142872, 0, 0, 0.499606,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.01878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.4878, 0, 1, 0.525089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486184,-99) , 
10, -0.697865, 1, 0, 0.500708,-99) , 
8, 0.218923, 0, 0, 0.506372,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0709913, 1, 1, 0.501835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450339,-99) , 
9, -1.5656, 0, 0, 0.471487,-99) , 
5, 0.0294193, 1, 0, 0.497832,-99) , 
10, 0.284153, 1, 0, 0.501681,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0098276);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499598,-99) , 
2, -0.0714407, 1, 0, 0.501769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477706,-99) , 
7, -951.286, 0, 0, 0.489418,-99) , 
6, 0.00113375, 0, 0, 0.499736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479701,-99) , 
6, 0.0238087, 1, 0, 0.498991,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0144978);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49691,-99) , 
5, 0.490392, 0, 0, 0.519883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494912,-99) , 
8, 1.57144, 0, 0, 0.496053,-99) , 
4, 0.999524, 1, 0, 0.497573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47476,-99) , 
3, 9.42372, 1, 0, 0.496687,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0106302);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.19092, 0, 1, 0.503728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47758,-99) , 
4, 0.999751, 0, 0, 0.502716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467362,-99) , 
7, -951.286, 0, 0, 0.485026,-99) , 
4, 0.999524, 0, 0, 0.501593,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0183525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495712,-99) , 
9, -2.66021, 0, 0, 0.518676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494303,-99) , 
9, -4.34769, 1, 0, 0.497543,-99) , 
8, 0.19368, 0, 0, 0.502493,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494781,-99) , 
7, -951.286, 0, 0, 0.504987,-99) , 
NN(
0, 
0, 
-1, -0.0816358, 1, -1, 0.493793,-99) , 
8, 1.28571, 0, 0, 0.496314,-99) , 
10, 0.245909, 1, 0, 0.499045,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0102988);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495812,-99) , 
5, -0.251693, 0, 0, 0.500161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483283,-99) , 
6, 0.0237559, 1, 0, 0.499511,-99) , 
2, -0.214244, 1, 0, 0.500311,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.00837187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498582,-99) , 
2, 0.207225, 0, 0, 0.499617,-99) , 
3, 9.12253, 0, 0, 0.50078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474656,-99) , 
4, 0.999048, 0, 0, 0.499847,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.00902096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491654,-99) , 
3, 1.87946, 1, 0, 0.528611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499271,-99) , 
3, 0.570638, 1, 0, 0.500401,-99) , 
4, 0.999524, 1, 0, 0.502186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480665,-99) , 
3, 9.41001, 1, 0, 0.501324,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0192034);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493756,-99) , 
10, 2.88574, 1, 0, 0.505644,-99) , 
8, -1.85713, 1, 0, 0.506405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463751,-99) , 
4, 0.999048, 0, 0, 0.50492,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0130905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39853, 1, 1, 0.5318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496947,-99) , 
5, -0.255867, 1, 0, 0.500811,-99) , 
4, 0.999524, 1, 0, 0.502793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472786,-99) , 
3, 9.16847, 1, 0, 0.501517,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0157796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.64468, 0, 1, 0.509418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490317,-99) , 
5, -0.251213, 1, 0, 0.500158,-99) , 
10, -0.087763, 1, 0, 0.503542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480663,-99) , 
3, 9.41001, 1, 0, 0.502627,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0145989);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.251663, 0, 1, 0.521809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478031,-99) , 
10, 0.0320212, 1, 0, 0.497986,-99) , 
9, -2.10744, 0, 0, 0.50199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490563,-99) , 
9, 1.16645, 0, 0, 0.502161,-99) , 
NN(
0, 
0, 
-1, 2.945, 1, -1, 0.490432,-99) , 
5, -0.625738, 1, 0, 0.495484,-99) , 
10, 0.51939, 1, 0, 0.498732,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0145663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.89419, 0, 1, 0.506775,-99) , 
NN(
0, 
0, 
-1, -0.15774, 1, -1, 0.496335,-99) , 
10, 0.705846, 1, 0, 0.50133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515262,-99) , 
NN(
0, 
0, 
-1, -0.892241, 1, -1, 0.486582,-99) , 
9, 1.35787, 0, 0, 0.490278,-99) , 
8, -0.714275, 0, 0, 0.498561,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0172404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495371,-99) , 
5, -0.345041, 1, 0, 0.500918,-99) , 
4, 0.999048, 1, 0, 0.502143,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487367,-99) , 
5, -0.14937, 0, 0, 0.496471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471615,-99) , 
5, 0.488589, 1, 0, 0.492727,-99) , 
3, 4.75487, 1, 0, 0.500285,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0158215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.154055, 0, 1, 0.506171,-99) , 
NN(
0, 
0, 
-1, -1.09862, 1, -1, 0.492092,-99) , 
8, -1.00002, 0, 0, 0.503346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496475,-99) , 
8, -0.428431, 1, 0, 0.503898,-99) , 
NN(
0, 
0, 
-1, 2.94991, 1, -1, 0.48296,-99) , 
9, 1.90671, 0, 0, 0.495539,-99) , 
10, 2.15205, 1, 0, 0.501441,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0118026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492728,-99) , 
8, -0.238057, 0, 0, 0.499005,-99) , 
8, -1.85713, 1, 0, 0.49994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475651,-99) , 
4, 0.999048, 0, 0, 0.499065,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0134573);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519453,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479259,-99) , 
4, 0.999714, 0, 0, 0.502986,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49116,-99) , 
9, -1.8048, 0, 0, 0.494853,-99) , 
5, 0.184796, 1, 0, 0.500846,-99) , 
5, 0.777199, 0, 0, 0.501363,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0185092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.36659, 0, 1, 0.521639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484271,-99) , 
10, -0.32379, 1, 0, 0.497371,-99) , 
8, 0.351126, 0, 0, 0.502375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495417,-99) , 
6, 0.0237921, 0, 0, 0.497298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479536,-99) , 
2, -0.0690386, 1, 0, 0.486429,-99) , 
5, -0.344813, 1, 0, 0.494034,-99) , 
10, 0.427962, 1, 0, 0.498053,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0147074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05607, 0, 1, 0.51281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48125,-99) , 
10, 3.73505, 1, 0, 0.507194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495462,-99) , 
10, 0.17545, 1, 0, 0.499422,-99) , 
NN(
0, 
0, 
-1, -1.10432, 1, -1, 0.489255,-99) , 
8, -0.904768, 0, 0, 0.496958,-99) , 
8, 0.999998, 0, 0, 0.498888,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0115193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48032,-99) , 
4, 0.999048, 0, 0, 0.501107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480442,-99) , 
6, 0.000863811, 0, 0, 0.487702,-99) , 
6, 0.00113375, 0, 0, 0.498896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472002,-99) , 
6, 0.0238087, 1, 0, 0.497891,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0110894);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498377,-99) , 
0, 0.49809, 1, 0, 0.511963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493989,-99) , 
5, -0.344801, 1, 0, 0.497275,-99) , 
8, -1.57141, 1, 0, 0.498369,-99) , 
2, -0.214034, 1, 0, 0.499233,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0122153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494438,-99) , 
3, 1.82404, 1, 0, 0.498248,-99) , 
4, 0.999048, 1, 0, 0.499519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482195,-99) , 
3, 9.06123, 1, 0, 0.498728,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00642312);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536341,-99) , 
NN(
0, 
0, 
-1, 0.774586, 1, -1, 0.497851,-99) , 
8, 2.1428, 0, 0, 0.499048,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0103413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.9796, 0, 1, 0.51982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498284,-99) , 
3, 9.04385, 0, 0, 0.499371,-99) , 
8, -1.57145, 1, 0, 0.500912,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.476513,-99) , 
4, 0.999524, 0, 0, 0.499384,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.0102311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497902,-99) , 
2, 0.0306828, 0, 0, 0.500293,-99) , 
2, -0.214186, 1, 0, 0.501385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476842,-99) , 
3, 9.52058, 1, 0, 0.500455,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0145581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527138,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491937,-99) , 
5, -0.0643515, 1, 0, 0.498919,-99) , 
3, 9.42872, 0, 0, 0.49998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453203,-99) , 
7, -951.286, 0, 0, 0.480871,-99) , 
4, 0.999524, 0, 0, 0.498777,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.00845951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42872, 0, 1, 0.502905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485065,-99) , 
4, 0.999683, 0, 0, 0.50201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476037,-99) , 
4, 0.999048, 0, 0, 0.501093,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0189999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48079,-99) , 
10, 1.54196, 1, 0, 0.502259,-99) , 
NN(
0, 
0, 
-1, -2.704, 1, -1, 0.474144,-99) , 
8, -1.57145, 0, 0, 0.499867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488897,-99) , 
8, 0.142946, 1, 0, 0.498337,-99) , 
NN(
0, 
0, 
-1, 3.78686, 1, -1, 0.482542,-99) , 
9, 4.82862, 0, 0, 0.487902,-99) , 
10, 2.08702, 1, 0, 0.496868,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.012267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495969,-99) , 
4, 0.999728, 1, 0, 0.497184,-99) , 
3, 9.42599, 0, 0, 0.498019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471308,-99) , 
4, 0.999048, 0, 0, 0.497059,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.019534);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478746,-99) , 
8, 1.65306, 1, 0, 0.505051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447851,-99) , 
7, -1.28578, 0, 0, 0.494396,-99) , 
7, -951.286, 1, 0, 0.500458,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489045,-99) , 
9, 0.495142, 1, 0, 0.500042,-99) , 
NN(
0, 
0, 
-1, -2.67293, 1, -1, 0.489448,-99) , 
10, 0.0241942, 0, 0, 0.493798,-99) , 
8, -0.14285, 0, 0, 0.497523,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.01234);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487138,-99) , 
8, 2.04764, 1, 0, 0.503787,-99) , 
10, 1.49899, 1, 0, 0.515952,-99) , 
NN(
NN(
0, 
0, 
-1, -3.80176, 1, 1, 0.503911,-99) , 
NN(
0, 
0, 
-1, -0.0729243, 1, -1, 0.494934,-99) , 
10, 0.314772, 1, 0, 0.499398,-99) , 
8, 1.57142, 0, 0, 0.500773,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0101819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497472,-99) , 
2, 0.216711, 0, 0, 0.498341,-99) , 
4, 0.999048, 1, 0, 0.499518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47635,-99) , 
3, 9.13447, 1, 0, 0.498504,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.00888156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.04638, 0, 1, 0.513512,-99) , 
NN(
NN(
0, 
0, 
-1, 6.49861, 1, 1, 0.509429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466879,-99) , 
10, 3.05545, 1, 0, 0.498268,-99) , 
9, 3.00531, 0, 0, 0.49971,-99) , 
10, -1.4139, 1, 0, 0.501122,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0187533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490169,-99) , 
3, 1.92357, 0, 0, 0.502499,-99) , 
5, -0.449518, 0, 0, 0.505584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494227,-99) , 
4, 0.999524, 1, 0, 0.496017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468904,-99) , 
3, 9.52742, 1, 0, 0.494881,-99) , 
9, -0.173715, 0, 0, 0.49796,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.00732388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.510695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466785,-99) , 
10, 3.50575, 1, 0, 0.499565,-99) , 
9, 3.12661, 0, 0, 0.500875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474319,-99) , 
4, 0.999048, 0, 0, 0.499912,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0101749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.212571, 1, 1, 0.503607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477032,-99) , 
3, 7.26618, 1, 0, 0.502379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480177,-99) , 
3, 9.50466, 1, 0, 0.50153,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0103708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497991,-99) , 
8, 1.28571, 0, 0, 0.499406,-99) , 
3, 9.4289, 0, 0, 0.500637,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.477573,-99) , 
4, 0.999524, 0, 0, 0.49917,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0085845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499062,-99) , 
8, -1.28572, 1, 0, 0.500805,-99) , 
2, 0.213979, 0, 0, 0.501841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473824,-99) , 
3, 9.50466, 1, 0, 0.50078,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.00918396);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478822,-99) , 
3, 7.28431, 1, 0, 0.502024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479545,-99) , 
3, 9.52224, 1, 0, 0.501177,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0133596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534773,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496899,-99) , 
8, -1.57142, 1, 0, 0.498502,-99) , 
3, 9.18778, 0, 0, 0.500026,-99) , 
NN(
0, 
0, 
-1, -0.142918, 1, -1, 0.476105,-99) , 
4, 0.999524, 0, 0, 0.498512,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0103617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57143, 1, 1, 0.502923,-99) , 
NN(
0, 
0, 
-1, -0.14257, 0, -1, 0.479179,-99) , 
4, 0.999841, 0, 0, 0.501184,-99) , 
NN(
0, 
0, 
-1, 0.143358, 0, -1, 0.480901,-99) , 
4, 0.999524, 0, 0, 0.499892,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.00857929);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49899,-99) , 
3, 2.39257, 1, 0, 0.51388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498657,-99) , 
2, -0.214683, 1, 0, 0.49964,-99) , 
10, -1.36512, 1, 0, 0.501166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47727,-99) , 
3, 9.52351, 1, 0, 0.500257,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00791264);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.215804, 1, 1, 0.503287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481204,-99) , 
3, 9.16847, 1, 0, 0.502334,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0106517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42864, 0, 1, 0.503522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48229,-99) , 
4, 0.999683, 0, 0, 0.502455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464677,-99) , 
4, 0.999048, 0, 0, 0.50113,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0131514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499377,-99) , 
9, -3.42612, 0, 0, 0.510201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494668,-99) , 
9, -0.827439, 0, 0, 0.498975,-99) , 
10, -1.04127, 1, 0, 0.500772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479269,-99) , 
3, 9.18731, 1, 0, 0.499854,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.00423426);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499384,-99) , 
0, 0.492377, 1, 0, 0.500329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486685,-99) , 
4, 0.999048, 0, 0, 0.499913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486723,-99) , 
5, 0.7772, 1, 0, 0.499568,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0151713);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495698,-99) , 
5, 0.295038, 1, 0, 0.526992,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486349,-99) , 
10, 2.53253, 1, 0, 0.513425,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0759471, 1, 1, 0.505178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496025,-99) , 
9, 3.12661, 0, 0, 0.497784,-99) , 
8, 0.0611422, 0, 0, 0.500814,-99) , 
8, 1.28562, 0, 0, 0.502433,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0143064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495805,-99) , 
7, -951.286, 1, 0, 0.501777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481525,-99) , 
7, -951.286, 0, 0, 0.491254,-99) , 
8, -1.2857, 0, 0, 0.500583,-99) , 
NN(
0, 
0, 
-1, 0.116519, 1, -1, 0.485277,-99) , 
0, 0.492376, 0, 0, 0.499241,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0146664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534376,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479694,-99) , 
0, 0.499996, 1, 0, 0.500441,-99) , 
10, 1.18305, 1, 0, 0.509811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492864,-99) , 
10, -0.0872194, 1, 0, 0.497225,-99) , 
9, 6.50648, 0, 0, 0.498208,-99) , 
8, 1.28567, 0, 0, 0.4997,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0111186);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488445,-99) , 
10, -0.862668, 0, 0, 0.505157,-99) , 
NN(
0, 
0, 
-1, 3.47367, 1, -1, 0.496581,-99) , 
8, -1.28572, 1, 0, 0.497588,-99) , 
0, 0.490471, 1, 0, 0.498432,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.00669956);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214584, 1, 1, 0.50286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484665,-99) , 
3, 9.42814, 1, 0, 0.502145,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.00726018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496668,-99) , 
7, -951.286, 1, 0, 0.514817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478965,-99) , 
5, -0.906454, 0, 0, 0.499575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468576,-99) , 
8, -1.85714, 0, 0, 0.498714,-99) , 
10, -1.66111, 1, 0, 0.499858,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0159634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477748,-99) , 
10, 1.21537, 1, 0, 0.497659,-99) , 
9, 0.0591424, 0, 0, 0.499401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486117,-99) , 
10, 5.07232, 1, 0, 0.495045,-99) , 
NN(
0, 
0, 
-1, 3.1254, 1, -1, 0.481011,-99) , 
9, 2.42719, 0, 0, 0.48863,-99) , 
10, 2.21654, 1, 0, 0.496873,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0104518);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489668,-99) , 
8, -0.795926, 0, 0, 0.497748,-99) , 
8, 2.14281, 0, 0, 0.498475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473401,-99) , 
5, 0.715733, 1, 0, 0.493652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468819,-99) , 
7, -951.286, 0, 0, 0.482564,-99) , 
5, 0.59116, 1, 0, 0.49698,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0191229);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498944,-99) , 
5, 0.155587, 1, 0, 0.520044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490736,-99) , 
10, 2.82908, 1, 0, 0.511074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483631,-99) , 
8, 0.700498, 1, 0, 0.505263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492182,-99) , 
9, -3.85922, 1, 0, 0.49447,-99) , 
5, -0.535255, 1, 0, 0.497751,-99) , 
8, 1.57139, 0, 0, 0.498857,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.00699333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498718,-99) , 
2, 0.214769, 0, 0, 0.499537,-99) , 
4, 0.999048, 1, 0, 0.500604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484523,-99) , 
3, 9.40614, 1, 0, 0.499961,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0126243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488955,-99) , 
10, 2.30838, 1, 0, 0.508643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498005,-99) , 
3, 9.0526, 0, 0, 0.498905,-99) , 
8, 0.999934, 0, 0, 0.500736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467882,-99) , 
4, 0.999048, 0, 0, 0.499576,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.011178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43149, 0, 1, 0.52649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479612,-99) , 
5, -0.748759, 1, 0, 0.499591,-99) , 
10, 3.64146, 1, 0, 0.508269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499375,-99) , 
9, 0.153166, 0, 0, 0.50064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455291,-99) , 
10, 2.4203, 1, 0, 0.499039,-99) , 
9, 0.874947, 0, 0, 0.500865,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.00706491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475659,-99) , 
4, 0.999751, 0, 0, 0.499593,-99) , 
8, 2.1428, 0, 0, 0.500572,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.47957,-99) , 
4, 0.999524, 0, 0, 0.499247,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0179316);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498402,-99) , 
6, 0.00340077, 0, 0, 0.505139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48967,-99) , 
7, -951.286, 0, 0, 0.497394,-99) , 
5, -0.439645, 0, 0, 0.502464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467578,-99) , 
6, 0.0238087, 1, 0, 0.501186,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0124137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.770638, 0, 1, 0.513577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492182,-99) , 
10, 3.05012, 1, 0, 0.501346,-99) , 
8, -1.28568, 1, 0, 0.502796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479557,-99) , 
8, -0.877643, 0, 0, 0.498086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475674,-99) , 
8, 0.714124, 1, 0, 0.492442,-99) , 
0, 0.502852, 1, 0, 0.501459,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00562195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486469,-99) , 
10, 6.67874, 1, 0, 0.499363,-99) , 
8, 1.85714, 0, 0, 0.500377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474207,-99) , 
4, 0.999048, 0, 0, 0.499456,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0077489);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0639358, 1, 1, 0.51962,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487993,-99) , 
10, 3.80033, 1, 0, 0.499259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481381,-99) , 
2, -0.214238, 0, 0, 0.498456,-99) , 
8, 1.85714, 0, 0, 0.499553,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0173955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483511,-99) , 
9, -3.84535, 0, 0, 0.503672,-99) , 
9, -4.34053, 1, 0, 0.511276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466593,-99) , 
7, -1.57147, 0, 0, 0.503176,-99) , 
NN(
0, 
0, 
-1, -1.2857, 0, -1, 0.494263,-99) , 
7, -951.286, 0, 0, 0.498015,-99) , 
10, -1.34183, 1, 0, 0.499499,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0137588);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497434,-99) , 
9, -3.39741, 0, 0, 0.510382,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48647,-99) , 
5, -0.0698268, 1, 0, 0.496109,-99) , 
10, -0.984659, 1, 0, 0.49849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474072,-99) , 
4, 0.999048, 0, 0, 0.497627,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0100951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496584,-99) , 
8, 2.14285, 0, 0, 0.497242,-99) , 
3, 9.12253, 0, 0, 0.498125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479456,-99) , 
4, 0.999048, 0, 0, 0.497456,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.00792169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546866,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499884,-99) , 
4, 0.999796, 1, 0, 0.501046,-99) , 
3, 9.42872, 0, 0, 0.502831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475851,-99) , 
5, 0.583465, 0, 0, 0.490188,-99) , 
4, 0.999524, 0, 0, 0.502026,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0104723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497803,-99) , 
10, -1.03261, 1, 0, 0.499274,-99) , 
3, 9.42864, 0, 0, 0.500533,-99) , 
NN(
0, 
0, 
-1, 0.587886, 0, -1, 0.478273,-99) , 
4, 0.999524, 0, 0, 0.499119,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0118941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459858,-99) , 
10, 2.69612, 1, 0, 0.499687,-99) , 
9, 1.43959, 0, 0, 0.501102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480406,-99) , 
10, 7.95779, 1, 0, 0.493313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462942,-99) , 
9, 4.63883, 0, 0, 0.48463,-99) , 
10, 3.94896, 1, 0, 0.499094,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.00998456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496741,-99) , 
10, -1.18601, 1, 0, 0.498027,-99) , 
4, 0.999048, 1, 0, 0.498872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478973,-99) , 
3, 9.50466, 1, 0, 0.498108,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0100026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496306,-99) , 
5, -0.0641662, 1, 0, 0.50069,-99) , 
4, 0.999048, 1, 0, 0.50141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47724,-99) , 
3, 9.16847, 1, 0, 0.500373,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0116966);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0714407, 1, 1, 0.503403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477772,-99) , 
8, -1.85713, 0, 0, 0.502586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517183,-99) , 
NN(
0, 
0, 
-1, -1.34842, 1, -1, 0.483633,-99) , 
5, 0.221696, 1, 0, 0.494073,-99) , 
9, -3.42687, 0, 0, 0.501341,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0113364);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493877,-99) , 
10, 1.66586, 1, 0, 0.500378,-99) , 
NN(
0, 
0, 
-1, 0.498092, 1, -1, 0.482065,-99) , 
8, -1.39453, 0, 0, 0.499349,-99) , 
8, -1.85714, 1, 0, 0.500193,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0133938);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0642661, 0, 1, 0.527171,-99) , 
NN(
NN(
0, 
0, 
-1, 1.16323, 0, 1, 0.508325,-99) , 
NN(
0, 
0, 
-1, 1.25582, 1, -1, 0.495375,-99) , 
9, 0.0522427, 0, 0, 0.49872,-99) , 
8, 1.85711, 0, 0, 0.50019,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0113515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0705888, 1, 1, 0.511603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499699,-99) , 
9, 0.0184867, 0, 0, 0.502188,-99) , 
1, 0.00340303, 0, 0, 0.504701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477699,-99) , 
6, 0.0238087, 1, 0, 0.503705,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0177348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.94085, 0, 1, 0.50635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480154,-99) , 
5, -0.251216, 1, 0, 0.496711,-99) , 
10, 0.709104, 1, 0, 0.501319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493335,-99) , 
7, -0.142833, 1, 0, 0.504257,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469236,-99) , 
10, -0.857132, 1, 0, 0.484606,-99) , 
7, -951.286, 0, 0, 0.492865,-99) , 
8, -0.714291, 0, 0, 0.499211,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0167744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484078,-99) , 
10, 0.797787, 1, 0, 0.498294,-99) , 
8, 1.57089, 0, 0, 0.499744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494326,-99) , 
10, 4.37752, 1, 0, 0.500423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464799,-99) , 
10, 2.08707, 1, 0, 0.477219,-99) , 
9, 1.59066, 0, 0, 0.4897,-99) , 
10, 1.72938, 1, 0, 0.496784,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00741004);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498271,-99) , 
4, 0.999524, 1, 0, 0.499401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475557,-99) , 
3, 10.4388, 1, 0, 0.498774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478393,-99) , 
5, 0.777728, 1, 0, 0.498255,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0229593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499642,-99) , 
9, -3.46187, 0, 0, 0.510557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488111,-99) , 
9, -2.30955, 0, 0, 0.501021,-99) , 
10, -0.929542, 1, 0, 0.503356,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491754,-99) , 
10, 4.94006, 1, 0, 0.503123,-99) , 
NN(
0, 
0, 
-1, 0.609885, 0, -1, 0.479427,-99) , 
9, 1.89492, 0, 0, 0.493269,-99) , 
10, 2.08702, 1, 0, 0.500855,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0142874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480616,-99) , 
4, 0.999955, 0, 0, 0.517326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497144,-99) , 
8, 1.97959, 0, 0, 0.498168,-99) , 
8, -1.2857, 1, 0, 0.50047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470702,-99) , 
4, 0.999048, 0, 0, 0.499419,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0097998);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505074, 1, 1, 0.511904,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496791,-99) , 
8, -0.714306, 1, 0, 0.498763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479905,-99) , 
2, 0.213832, 1, 0, 0.498032,-99) , 
0, 0.503805, 0, 0, 0.499301,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.00798259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498088, 0, 1, 0.522971,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489272,-99) , 
3, 6.21087, 1, 0, 0.500227,-99) , 
5, 0.6781, 0, 0, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478327,-99) , 
3, 9.26255, 1, 0, 0.500607,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0116319);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486522,-99) , 
8, -1.26292, 1, 0, 0.505181,-99) , 
9, -3.91083, 0, 0, 0.511857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493392,-99) , 
8, -0.306147, 0, 0, 0.499182,-99) , 
8, 2.14281, 0, 0, 0.499941,-99) , 
10, -1.3804, 1, 0, 0.501217,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0160677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491098,-99) , 
5, -0.672341, 1, 0, 0.50401,-99) , 
5, -0.541276, 0, 0, 0.507476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498043,-99) , 
9, -1.62839, 0, 0, 0.501623,-99) , 
NN(
0, 
0, 
-1, 1.66243, 1, -1, 0.484143,-99) , 
10, 1.03847, 1, 0, 0.498532,-99) , 
9, -0.0698689, 0, 0, 0.501021,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.012519);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495562,-99) , 
3, 1.89405, 1, 0, 0.522371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49541,-99) , 
7, -951.286, 1, 0, 0.500484,-99) , 
4, 0.999524, 1, 0, 0.501875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481774,-99) , 
3, 9.50466, 1, 0, 0.501106,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0087345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.42372, 0, 1, 0.501752,-99) , 
NN(
0, 
0, 
-1, 0.310368, 1, -1, 0.491835,-99) , 
0, 0.493419, 0, 0, 0.500293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51364,-99) , 
NN(
0, 
0, 
-1, 1.29766, 1, -1, 0.48398,-99) , 
2, 0.071504, 0, 0, 0.490448,-99) , 
0, 0.502852, 1, 0, 0.499009,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0119123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496823,-99) , 
10, 0.624552, 1, 0, 0.501106,-99) , 
3, 9.42864, 0, 0, 0.502097,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470775,-99) , 
7, -951.286, 0, 0, 0.489024,-99) , 
4, 0.999524, 0, 0, 0.501262,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0115307);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.873357, 1, 1, 0.513363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475246,-99) , 
3, 9.40614, 1, 0, 0.501546,-99) , 
NN(
0, 
0, 
-1, -0.536524, 0, -1, 0.480227,-99) , 
8, -1.57138, 0, 0, 0.49991,-99) , 
9, 3.16727, 0, 0, 0.501421,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0167401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491668,-99) , 
5, -0.574195, 0, 0, 0.509858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484102,-99) , 
5, 0.490274, 1, 0, 0.506074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494412,-99) , 
0, 0.491424, 1, 0, 0.495423,-99) , 
4, 0.999048, 1, 0, 0.496551,-99) , 
3, 4.7747, 0, 0, 0.498463,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0139533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490287,-99) , 
5, 0.0295264, 1, 0, 0.514128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496537,-99) , 
10, -0.802372, 0, 0, 0.510096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490604,-99) , 
8, -0.584713, 0, 0, 0.500401,-99) , 
8, -1.25851, 1, 0, 0.501722,-99) , 
8, 1.57138, 0, 0, 0.502752,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00872774);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42883, 0, 1, 0.502636,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.469382,-99) , 
4, 0.999524, 0, 0, 0.500582,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0104317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496922,-99) , 
9, -4.09103, 0, 0, 0.511932,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493422,-99) , 
0, 0.498091, 0, 0, 0.497168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472079,-99) , 
8, -1.85714, 0, 0, 0.496468,-99) , 
10, -1.5463, 1, 0, 0.49777,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0161374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490241,-99) , 
7, -951.286, 0, 0, 0.496944,-99) , 
8, 0.829856, 0, 0, 0.498881,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487573,-99) , 
5, -0.518634, 1, 0, 0.495921,-99) , 
NN(
0, 
0, 
-1, 1.47552, 0, -1, 0.474687,-99) , 
5, -0.157616, 1, 0, 0.491951,-99) , 
10, 0.427962, 1, 0, 0.495301,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0119904);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.523107, 1, 1, 0.502827,-99) , 
NN(
0, 
0, 
-1, -2.52954, 1, -1, 0.473106,-99) , 
8, -1.57146, 0, 0, 0.500331,-99) , 
NN(
0, 
0, 
-1, -0.449532, 1, -1, 0.490368,-99) , 
10, 2.18202, 1, 0, 0.497942,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.00832876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505981, 1, 1, 0.516261,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.497395,-99) , 
0, 0.504757, 0, 0, 0.498458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47427,-99) , 
4, 0.999048, 0, 0, 0.497604,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0135812);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -4.08862, 0, 1, 0.516021,-99) , 
NN(
NN(
0, 
0, 
-1, 1.47587, 1, 1, 0.514714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494355,-99) , 
0, 0.496186, 1, 0, 0.497221,-99) , 
8, 1.57139, 0, 0, 0.498802,-99) , 
10, -1.507, 1, 0, 0.500338,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.00669877);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.5027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480569,-99) , 
3, 9.41001, 1, 0, 0.501842,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.00633658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.4289, 0, 1, 0.501786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483528,-99) , 
4, 0.999683, 0, 0, 0.500874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479465,-99) , 
4, 0.999048, 0, 0, 0.500104,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0185499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494089,-99) , 
7, -951.286, 1, 0, 0.500351,-99) , 
NN(
0, 
0, 
-1, 0.428545, 1, -1, 0.484896,-99) , 
0, 0.502852, 1, 0, 0.498489,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478964,-99) , 
5, -0.344852, 1, 0, 0.496604,-99) , 
NN(
0, 
0, 
-1, 0.0296641, 0, -1, 0.467472,-99) , 
3, 4.68599, 1, 0, 0.485086,-99) , 
2, 0.0714447, 1, 0, 0.496477,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0157891);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482815,-99) , 
3, 1.87967, 1, 0, 0.519705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494967,-99) , 
10, -1.1656, 1, 0, 0.496462,-99) , 
4, 0.999524, 1, 0, 0.497934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470822,-99) , 
3, 9.41001, 1, 0, 0.496904,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0139607);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493728,-99) , 
9, -3.97047, 0, 0, 0.512863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473019,-99) , 
8, -2.0476, 0, 0, 0.498903,-99) , 
5, 0.39939, 0, 0, 0.501202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495292,-99) , 
8, 1.95238, 0, 0, 0.497256,-99) , 
NN(
0, 
0, 
-1, 0.715962, 1, -1, 0.473321,-99) , 
5, 0.591166, 1, 0, 0.494813,-99) , 
8, -0.142852, 1, 0, 0.497658,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0135796);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495575,-99) , 
8, 0.714259, 0, 0, 0.49846,-99) , 
3, 9.18404, 0, 0, 0.499728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470998,-99) , 
4, 0.999048, 0, 0, 0.498712,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0128919);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498193,-99) , 
10, 3.64146, 1, 0, 0.504687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494567,-99) , 
9, -4.09154, 1, 0, 0.495719,-99) , 
9, 0.955207, 0, 0, 0.497465,-99) , 
2, 0.214332, 0, 0, 0.498194,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0103102);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484674,-99) , 
3, 9.13602, 1, 0, 0.503815,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00763012);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49957,-99) , 
8, 1.28558, 0, 0, 0.501207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48502,-99) , 
5, 0.684497, 1, 0, 0.500467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46074,-99) , 
4, 0.999048, 0, 0, 0.499103,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.01101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498942,-99) , 
0, 0.493329, 1, 0, 0.503646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493659,-99) , 
2, 0.0160007, 0, 0, 0.497096,-99) , 
2, -0.0306409, 1, 0, 0.498888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48221,-99) , 
2, 0.214239, 1, 0, 0.4982,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0148827);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498402,-99) , 
5, -0.76517, 1, 0, 0.504631,-99) , 
5, -0.45206, 0, 0, 0.508208,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498039,-99) , 
9, -1.63364, 0, 0, 0.501965,-99) , 
NN(
0, 
0, 
-1, -0.930302, 0, -1, 0.487459,-99) , 
10, 1.03847, 1, 0, 0.499401,-99) , 
9, -0.0769123, 0, 0, 0.501857,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0146461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.4493, 0, 1, 0.507196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494994,-99) , 
6, 0.0124712, 0, 0, 0.497678,-99) , 
5, -0.0643516, 0, 0, 0.501717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481047,-99) , 
6, 0.0238087, 1, 0, 0.500957,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0125083);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489918,-99) , 
8, 0.142781, 0, 0, 0.497361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463121,-99) , 
5, 0.490078, 1, 0, 0.492404,-99) , 
3, 4.57421, 1, 0, 0.501995,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0129577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.77577, 0, 1, 0.504856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487329,-99) , 
5, 0.300385, 0, 0, 0.493733,-99) , 
2, 0.0718317, 1, 0, 0.503249,-99) , 
NN(
0, 
0, 
-1, -0.14211, 0, -1, 0.486169,-99) , 
0, 0.491424, 0, 0, 0.502237,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.00716499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999954, 1, 1, 0.507593,-99) , 
NN(
0, 
0, 
-1, 2.42577, 1, -1, 0.498268,-99) , 
9, 0.874947, 0, 0, 0.500144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480915,-99) , 
2, 0.213865, 1, 0, 0.499345,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.00731096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214454, 0, 1, 0.502364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483311,-99) , 
5, 0.684163, 1, 0, 0.50149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479167,-99) , 
4, 0.999048, 0, 0, 0.500696,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.00459036);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499973,-99) , 
2, 0.211859, 0, 0, 0.501029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479583,-99) , 
4, 0.999048, 0, 0, 0.500391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474093,-99) , 
5, 0.774435, 1, 0, 0.499698,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0114231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53251,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496792,-99) , 
4, 0.999955, 1, 0, 0.499097,-99) , 
3, 9.42864, 0, 0, 0.500352,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.484863,-99) , 
4, 0.999524, 0, 0, 0.499382,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0156026);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478156,-99) , 
10, 0.887104, 1, 0, 0.50492,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.49609,-99) , 
5, -0.159404, 0, 0, 0.50032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468203,-99) , 
6, 0.0238062, 1, 0, 0.499152,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0129228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485102,-99) , 
10, 6.40415, 1, 0, 0.500876,-99) , 
6, 0.023792, 0, 0, 0.502846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496482,-99) , 
4, 0.999048, 1, 0, 0.498313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473355,-99) , 
3, 9.43288, 1, 0, 0.497187,-99) , 
5, -0.438609, 1, 0, 0.499231,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0130907);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524804,-99) , 
NN(
NN(
0, 
0, 
-1, 7.92704, 0, 1, 0.505042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486236,-99) , 
10, -0.644208, 1, 0, 0.494431,-99) , 
5, 0.216341, 1, 0, 0.502289,-99) , 
2, -0.214238, 1, 0, 0.503351,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0166193);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491104,-99) , 
8, -0.633552, 0, 0, 0.520076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481697,-99) , 
5, 0.590128, 1, 0, 0.501509,-99) , 
10, -0.461157, 1, 0, 0.504142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495501,-99) , 
8, -1.06995, 1, 0, 0.508366,-99) , 
NN(
0, 
0, 
-1, -0.14337, 1, -1, 0.480975,-99) , 
7, -951.286, 1, 0, 0.493493,-99) , 
9, -3.34239, 0, 0, 0.502419,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.012895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483532,-99) , 
8, -1.19856, 1, 0, 0.501482,-99) , 
10, -1.49359, 0, 0, 0.509533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496273,-99) , 
8, 0.918379, 0, 0, 0.49839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47105,-99) , 
8, -1.85712, 0, 0, 0.497524,-99) , 
9, -3.647, 1, 0, 0.498879,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00478667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499974,-99) , 
2, -0.193692, 1, 0, 0.501009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483547,-99) , 
2, 0.2144, 1, 0, 0.500314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476083,-99) , 
0, 0.505709, 1, 0, 0.499526,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0102837);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497346,-99) , 
10, 0.162395, 1, 0, 0.500474,-99) , 
2, -0.215066, 1, 0, 0.501451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478449,-99) , 
3, 9.18112, 1, 0, 0.500483,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.00932508);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494588,-99) , 
3, 4.8685, 1, 0, 0.510134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498819,-99) , 
3, 9.17234, 0, 0, 0.49975,-99) , 
2, -0.0713868, 1, 0, 0.501431,-99) , 
NN(
0, 
0, 
-1, 0.1429, 0, -1, 0.484231,-99) , 
0, 0.504757, 1, 0, 0.500466,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0141757);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490672,-99) , 
5, 0.498196, 1, 0, 0.508335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470299,-99) , 
9, 2.07848, 0, 0, 0.492536,-99) , 
5, -0.628757, 0, 0, 0.504706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497086,-99) , 
5, 0.400993, 0, 0, 0.498999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475563,-99) , 
2, 0.214239, 1, 0, 0.498095,-99) , 
0, 0.499995, 0, 0, 0.500276,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.006617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.89267, 1, 1, 0.526968,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499574,-99) , 
0, 0.490472, 1, 0, 0.500211,-99) , 
4, 0.999524, 1, 0, 0.501904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480987,-99) , 
3, 9.42206, 1, 0, 0.501094,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0149257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476593,-99) , 
8, -1.85714, 0, 0, 0.504629,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483658,-99) , 
7, -951.286, 1, 0, 0.495024,-99) , 
9, -3.43867, 0, 0, 0.503236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482113,-99) , 
0, 0.505709, 1, 0, 0.502544,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0165122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.194656, 0, 1, 0.503233,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471175,-99) , 
7, -951.286, 0, 0, 0.486793,-99) , 
8, -1.28574, 0, 0, 0.500998,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495317,-99) , 
5, -0.877887, 1, 0, 0.503604,-99) , 
NN(
0, 
0, 
-1, 0.582215, 0, -1, 0.47675,-99) , 
9, 2.42719, 0, 0, 0.490734,-99) , 
10, 2.08702, 1, 0, 0.49844,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0193288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487164,-99) , 
4, 0.999959, 0, 0, 0.504794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477422,-99) , 
4, 0.999714, 0, 0, 0.503623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497245,-99) , 
9, -3.8907, 0, 0, 0.502576,-99) , 
NN(
0, 
0, 
-1, -2.85588, 0, -1, 0.487927,-99) , 
10, -1.03038, 1, 0, 0.493374,-99) , 
5, 0.122779, 1, 0, 0.500419,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.0122658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493378,-99) , 
4, 0.999955, 0, 0, 0.504912,-99) , 
NN(
0, 
0, 
-1, 1.08216, 1, -1, 0.497175,-99) , 
5, -0.0641662, 1, 0, 0.501862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474937,-99) , 
4, 0.999048, 0, 0, 0.500914,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.00558564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479814,-99) , 
3, 7.46185, 1, 0, 0.499677,-99) , 
2, -0.212804, 1, 0, 0.500878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483263,-99) , 
3, 9.18832, 1, 0, 0.500129,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.00973158);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498651,-99) , 
8, -0.714306, 1, 0, 0.501353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491553,-99) , 
7, -951.286, 0, 0, 0.495608,-99) , 
0, 0.49809, 1, 0, 0.498417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481566,-99) , 
2, 0.214293, 1, 0, 0.497727,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.00884342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49928,-99) , 
9, 0.404613, 0, 0, 0.501118,-99) , 
NN(
0, 
0, 
-1, 2.89555, 0, -1, 0.490322,-99) , 
10, 2.89491, 1, 0, 0.499162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480642,-99) , 
8, -1.85713, 0, 0, 0.498389,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0199234);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470822,-99) , 
10, 2.51054, 1, 0, 0.508976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475608,-99) , 
9, 3.22019, 0, 0, 0.491871,-99) , 
10, 3.17824, 1, 0, 0.505507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494998,-99) , 
8, -0.455653, 0, 0, 0.501407,-99) , 
NN(
0, 
0, 
-1, -0.203175, 1, -1, 0.493573,-99) , 
10, -0.435285, 1, 0, 0.497227,-99) , 
8, 0.142837, 0, 0, 0.501014,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0100473);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498705,-99) , 
9, 0.514015, 0, 0, 0.501039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479802,-99) , 
8, 0.429038, 1, 0, 0.491617,-99) , 
10, 3.7493, 1, 0, 0.499773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474185,-99) , 
4, 0.999048, 0, 0, 0.498878,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0127195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142948, 0, 1, 0.520224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487535,-99) , 
5, -0.828912, 1, 0, 0.50221,-99) , 
10, 3.52482, 1, 0, 0.507451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499211,-99) , 
8, 1.57136, 0, 0, 0.500903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448967,-99) , 
10, 2.40112, 1, 0, 0.498983,-99) , 
9, 0.874947, 0, 0, 0.500667,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0135855);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532482,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0713995, 1, 1, 0.504702,-99) , 
NN(
0, 
0, 
-1, 2.24024, 0, -1, 0.486161,-99) , 
5, -0.812791, 0, 0, 0.502935,-99) , 
8, -1.85714, 1, 0, 0.504274,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0209417);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.08252, 0, 1, 0.507989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464951,-99) , 
9, -0.449486, 0, 0, 0.488676,-99) , 
10, 1.38487, 1, 0, 0.505702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488648,-99) , 
7, -951.286, 1, 0, 0.501401,-99) , 
NN(
0, 
0, 
-1, 3.44294, 1, -1, 0.478202,-99) , 
8, 1.28592, 1, 0, 0.496179,-99) , 
10, 2.04344, 1, 0, 0.503278,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0159467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488573,-99) , 
7, -951.286, 1, 0, 0.500583,-99) , 
9, -3.7868, 0, 0, 0.508888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499606,-99) , 
10, 1.21581, 1, 0, 0.508201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493005,-99) , 
5, -0.627702, 1, 0, 0.496105,-99) , 
8, 1.28568, 0, 0, 0.497852,-99) , 
10, -1.28752, 1, 0, 0.499187,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0101794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494512, 0, 1, 0.520553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49526,-99) , 
5, 0.122777, 1, 0, 0.500701,-99) , 
4, 0.999524, 1, 0, 0.501944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4796,-99) , 
3, 9.42498, 1, 0, 0.501087,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.00608255);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.215326, 1, 1, 0.501959,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.480638,-99) , 
4, 0.999524, 0, 0, 0.500633,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0198341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.521285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495373,-99) , 
9, -2.11632, 0, 0, 0.499132,-99) , 
9, -3.82158, 1, 0, 0.503281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484753,-99) , 
3, 1.19249, 0, 0, 0.502759,-99) , 
NN(
0, 
0, 
-1, -0.15772, 1, -1, 0.490156,-99) , 
8, 0.142865, 1, 0, 0.495075,-99) , 
10, 0.396228, 1, 0, 0.49896,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.00733916);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498673,-99) , 
3, 9.40614, 0, 0, 0.499488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466709,-99) , 
2, -0.275796, 0, 0, 0.498557,-99) , 
2, 0.213822, 0, 0, 0.499471,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0193674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49828,-99) , 
9, -2.52663, 0, 0, 0.518826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49006,-99) , 
10, -1.07553, 1, 0, 0.499588,-99) , 
8, 0.346235, 0, 0, 0.503532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513813,-99) , 
NN(
0, 
0, 
-1, 0.492967, 0, -1, 0.494112,-99) , 
0, 0.491424, 1, 0, 0.495396,-99) , 
10, 0.427962, 1, 0, 0.499303,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0194914);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.122344, 1, 1, 0.507549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485699,-99) , 
10, 6.25302, 1, 0, 0.505746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49529,-99) , 
7, -0.42973, 1, 0, 0.503805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487836,-99) , 
10, -1.65314, 1, 0, 0.491941,-99) , 
7, -951.286, 0, 0, 0.497082,-99) , 
8, -0.142872, 0, 0, 0.501946,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0064418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496012,-99) , 
9, -3.08941, 0, 0, 0.514813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499871,-99) , 
10, 6.68523, 1, 0, 0.51042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499806,-99) , 
9, -4.18312, 1, 0, 0.500721,-99) , 
9, 3.28636, 0, 0, 0.501855,-99) , 
5, 0.684758, 0, 0, 0.502626,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0112204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481041,-99) , 
2, -0.214326, 0, 0, 0.503638,-99) , 
NN(
0, 
0, 
-1, -1.28564, 0, -1, 0.494665,-99) , 
0, 0.501084, 1, 0, 0.501427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482011,-99) , 
0, 0.490472, 0, 0, 0.500688,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00725171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499396,-99) , 
4, 0.999819, 1, 0, 0.501031,-99) , 
3, 9.42498, 0, 0, 0.501943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479384,-99) , 
4, 0.999048, 0, 0, 0.501139,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0159574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479045,-99) , 
3, 9.52607, 1, 0, 0.503011,-99) , 
8, 1.57131, 0, 0, 0.504416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498177,-99) , 
10, 5.76335, 1, 0, 0.508334,-99) , 
NN(
0, 
0, 
-1, 2.77208, 1, -1, 0.484566,-99) , 
9, 1.54523, 0, 0, 0.497468,-99) , 
10, 1.71362, 1, 0, 0.502348,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0203236);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.269297, 0, 1, 0.525287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469631,-99) , 
10, -0.0585095, 1, 0, 0.50369,-99) , 
9, -2.12104, 0, 0, 0.50699,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502852, 0, 1, 0.505954,-99) , 
NN(
0, 
0, 
-1, -1.6668, 0, -1, 0.493155,-99) , 
9, 0.532329, 0, 0, 0.498645,-99) , 
10, 0.442445, 1, 0, 0.502703,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0190214);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496954,-99) , 
7, -951.286, 1, 0, 0.504708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490286,-99) , 
9, -1.85693, 0, 0, 0.494862,-99) , 
5, 0.123173, 1, 0, 0.501513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460347,-99) , 
8, -1.47618, 0, 0, 0.48178,-99) , 
7, -951.286, 0, 0, 0.489779,-99) , 
8, -0.999984, 0, 0, 0.49947,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0176985);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499472,-99) , 
5, 0.212792, 0, 0, 0.509617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474202,-99) , 
7, -1.57141, 0, 0, 0.506888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4977,-99) , 
0, 0.493329, 1, 0, 0.500096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441909,-99) , 
8, -1.85714, 0, 0, 0.497195,-99) , 
7, -951.286, 0, 0, 0.501411,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0139763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48512,-99) , 
5, 0.684497, 1, 0, 0.50413,-99) , 
2, 0.21406, 0, 0, 0.505048,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487634,-99) , 
5, -0.720553, 0, 0, 0.501332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478132,-99) , 
0, 0.502852, 1, 0, 0.498325,-99) , 
8, -0.714295, 0, 0, 0.503371,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0180836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470071,-99) , 
4, 0.999909, 0, 0, 0.511188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496074,-99) , 
4, 0.999955, 1, 0, 0.500113,-99) , 
3, 4.77162, 0, 0, 0.502301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477543,-99) , 
4, 0.999048, 0, 0, 0.501422,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0110376);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0659636, 0, 1, 0.522564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491194,-99) , 
8, 0.700606, 1, 0, 0.508555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488308,-99) , 
9, -3.31735, 0, 0, 0.498609,-99) , 
0, 0.5019, 0, 0, 0.50046,-99) , 
8, 1.85706, 0, 0, 0.5016,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.00753916);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.1428, 0, 1, 0.502836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4725,-99) , 
0, 0.490472, 0, 0, 0.501688,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.00961666);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482294,-99) , 
7, -1.57149, 0, 0, 0.504053,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.497417,-99) , 
7, -951.286, 0, 0, 0.500272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485182,-99) , 
6, 0.0237841, 1, 0, 0.499714,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0107617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496221,-99) , 
7, -951.286, 0, 0, 0.499382,-99) , 
2, -0.21436, 1, 0, 0.500545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474917,-99) , 
4, 0.999048, 0, 0, 0.499651,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0130393);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496831,-99) , 
10, -0.0194309, 1, 0, 0.500637,-99) , 
NN(
0, 
0, 
-1, -1.59276, 1, -1, 0.472706,-99) , 
8, -1.3945, 0, 0, 0.499072,-99) , 
8, -1.85712, 1, 0, 0.499912,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0104599);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28586, 0, 1, 0.506378,-99) , 
NN(
0, 
0, 
-1, -1.85712, 0, -1, 0.497191,-99) , 
7, -951.286, 0, 0, 0.501118,-99) , 
NN(
0, 
0, 
-1, 0.156109, 1, -1, 0.479885,-99) , 
5, 0.684758, 1, 0, 0.499913,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.010104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488371,-99) , 
3, 5.88556, 1, 0, 0.500671,-99) , 
3, 9.42864, 0, 0, 0.501932,-99) , 
NN(
0, 
0, 
-1, -0.0717409, 1, -1, 0.481118,-99) , 
4, 0.999524, 0, 0, 0.500632,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0105007);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496806,-99) , 
4, 0.999048, 1, 0, 0.497789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478172,-99) , 
3, 9.50466, 1, 0, 0.497048,-99) , 
8, 2.14281, 0, 0, 0.497896,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0135923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494809,-99) , 
5, -0.200363, 1, 0, 0.500021,-99) , 
5, 0.679238, 0, 0, 0.501424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509958,-99) , 
NN(
0, 
0, 
-1, 0.302572, 1, -1, 0.488621,-99) , 
2, -0.071015, 1, 0, 0.493245,-99) , 
0, 0.494281, 0, 0, 0.500012,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0173944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.184191, 0, 1, 0.504822,-99) , 
NN(
0, 
0, 
-1, 1.76191, 1, -1, 0.494298,-99) , 
10, 2.29542, 1, 0, 0.502078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487227,-99) , 
10, -0.363127, 0, 0, 0.497662,-99) , 
NN(
0, 
0, 
-1, -0.744398, 1, -1, 0.478091,-99) , 
9, -1.10612, 1, 0, 0.491667,-99) , 
8, -0.714272, 0, 0, 0.499478,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0120161);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495038,-99) , 
5, -0.438498, 0, 0, 0.501476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481543,-99) , 
6, 0.0147372, 1, 0, 0.500566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477534,-99) , 
6, 0.0238062, 1, 0, 0.499721,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0174713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496355,-99) , 
6, 0.00226724, 1, 0, 0.502821,-99) , 
6, 0.0238087, 0, 0, 0.507079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495813,-99) , 
4, 0.999524, 1, 0, 0.498323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464581,-99) , 
3, 9.42814, 1, 0, 0.496887,-99) , 
5, -0.532008, 1, 0, 0.499905,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0239482);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467395,-99) , 
8, -1.85713, 0, 0, 0.50881,-99) , 
NN(
0, 
0, 
-1, 0.66545, 0, -1, 0.483376,-99) , 
5, 0.488264, 1, 0, 0.506008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497817,-99) , 
10, 2.2874, 1, 0, 0.510829,-99) , 
NN(
0, 
0, 
-1, -1.28575, 0, -1, 0.490431,-99) , 
9, -0.865772, 0, 0, 0.49682,-99) , 
7, -951.286, 1, 0, 0.502037,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0119981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.511705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497942,-99) , 
7, -951.286, 0, 0, 0.508354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496208,-99) , 
5, 0.676604, 0, 0, 0.497344,-99) , 
8, 1.28571, 0, 0, 0.498728,-99) , 
9, 2.97512, 0, 0, 0.500243,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0126017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18896, 0, 1, 0.504751,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.483899,-99) , 
4, 0.999841, 0, 0, 0.503209,-99) , 
NN(
0, 
0, 
-1, 0.142951, 0, -1, 0.483155,-99) , 
4, 0.999524, 0, 0, 0.501944,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0108184);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499641,-99) , 
3, 1.40693, 1, 0, 0.524938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497513,-99) , 
0, 0.5019, 0, 0, 0.499463,-99) , 
4, 0.999524, 1, 0, 0.501092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484192,-99) , 
3, 9.12253, 1, 0, 0.500355,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0118564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495349,-99) , 
8, -1.22295, 0, 0, 0.516965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49917,-99) , 
6, 0.0238088, 0, 0, 0.500624,-99) , 
9, -2.76537, 1, 0, 0.502652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515866,-99) , 
NN(
0, 
0, 
-1, 0.0983015, 1, -1, 0.491824,-99) , 
9, -1.89534, 0, 0, 0.494907,-99) , 
5, 0.123173, 1, 0, 0.500225,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0103246);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.12253, 0, 1, 0.504666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481109,-99) , 
4, 0.999048, 0, 0, 0.503846,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0204566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0238062, 0, 1, 0.507087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497446,-99) , 
9, -3.65996, 1, 0, 0.50069,-99) , 
5, -0.197736, 1, 0, 0.504692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440385,-99) , 
7, -0.714459, 0, 0, 0.501638,-99) , 
NN(
0, 
0, 
-1, 0.564432, 1, -1, 0.478126,-99) , 
7, -951.286, 0, 0, 0.491023,-99) , 
5, 0.403966, 1, 0, 0.502285,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0114485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49559,-99) , 
5, 0.122779, 1, 0, 0.501556,-99) , 
8, -1.85714, 1, 0, 0.502499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474964,-99) , 
4, 0.999048, 0, 0, 0.501545,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00994832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499235,-99) , 
4, 0.999955, 1, 0, 0.50143,-99) , 
3, 8.83797, 0, 0, 0.502219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456703,-99) , 
7, -951.286, 0, 0, 0.487059,-99) , 
4, 0.999524, 0, 0, 0.501262,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0109214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.501882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47975,-99) , 
3, 9.53351, 1, 0, 0.500973,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490356,-99) , 
8, -0.14267, 1, 0, 0.500402,-99) , 
NN(
0, 
0, 
-1, -1.28754, 0, -1, 0.481965,-99) , 
9, 3.12412, 0, 0, 0.491205,-99) , 
5, -0.625849, 0, 0, 0.498789,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0147001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.08455, 1, 1, 0.514064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474938,-99) , 
5, -0.719083, 0, 0, 0.502817,-99) , 
9, 2.72239, 0, 0, 0.50424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472961,-99) , 
4, 0.999048, 0, 0, 0.503162,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0109734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496531,-99) , 
3, 0.571611, 1, 0, 0.497414,-99) , 
3, 9.4289, 0, 0, 0.498601,-99) , 
NN(
0, 
0, 
-1, 0.143298, 0, -1, 0.483321,-99) , 
4, 0.999524, 0, 0, 0.49765,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0202106);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497225,-99) , 
9, -2.70886, 0, 0, 0.518301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471325,-99) , 
10, -0.576798, 1, 0, 0.496756,-99) , 
8, -0.0860578, 0, 0, 0.503844,-99) , 
NN(
NN(
0, 
0, 
-1, -1.40814, 1, 1, 0.50736,-99) , 
NN(
0, 
0, 
-1, 0.500948, 1, -1, 0.492346,-99) , 
8, -0.428544, 1, 0, 0.495661,-99) , 
10, 0.129962, 1, 0, 0.499066,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0050518);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524392,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0102015, 1, 1, 0.501115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481705,-99) , 
6, 0.0238062, 1, 0, 0.5004,-99) , 
0, 0.505709, 0, 0, 0.501225,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0122471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498094, 1, 1, 0.538525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492879,-99) , 
8, 2.14282, 0, 0, 0.498375,-99) , 
10, 0.920618, 1, 0, 0.509127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497339,-99) , 
5, -0.346202, 1, 0, 0.499957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481618,-99) , 
0, 0.490471, 0, 0, 0.499259,-99) , 
8, 0.999968, 0, 0, 0.501113,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0165082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.43164, 0, 1, 0.530397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483254,-99) , 
5, 0.0294409, 1, 0, 0.501891,-99) , 
10, 0.666084, 1, 0, 0.509172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497033,-99) , 
10, 0.166287, 1, 0, 0.501155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480555,-99) , 
7, -951.286, 0, 0, 0.489057,-99) , 
8, -1.05444, 0, 0, 0.498508,-99) , 
8, 0.714251, 0, 0, 0.501322,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0109145);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.895136, 1, 1, 0.508873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496773,-99) , 
3, 9.07715, 0, 0, 0.49762,-99) , 
8, 0.999969, 0, 0, 0.499728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479729,-99) , 
2, -0.214238, 0, 0, 0.49883,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0109941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.504305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483124,-99) , 
2, 0.213828, 1, 0, 0.503504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484465,-99) , 
0, 0.5019, 0, 0, 0.497675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476467,-99) , 
5, 0.490272, 1, 0, 0.495189,-99) , 
0, 0.500947, 1, 0, 0.501451,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0110971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497242,-99) , 
8, 2.14282, 0, 0, 0.498519,-99) , 
10, 0.136451, 1, 0, 0.501985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47826,-99) , 
0, 0.505709, 1, 0, 0.501229,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0189109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479182,-99) , 
3, 9.00521, 1, 0, 0.504544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487048,-99) , 
7, -951.286, 1, 0, 0.502992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466687,-99) , 
10, 2.63104, 1, 0, 0.485475,-99) , 
9, 2.45216, 0, 0, 0.494512,-99) , 
10, 2.08702, 1, 0, 0.502051,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0111789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499012,-99) , 
2, 0.213973, 0, 0, 0.500128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474571,-99) , 
6, 0.0238062, 1, 0, 0.499185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508985,-99) , 
NN(
0, 
0, 
-1, -1.91155, 0, -1, 0.485443,-99) , 
10, -2.0212, 1, 0, 0.489029,-99) , 
8, -0.714275, 0, 0, 0.496643,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0168932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142021, 0, 1, 0.516934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495161,-99) , 
0, 0.5019, 0, 0, 0.501011,-99) , 
7, -951.286, 0, 0, 0.507108,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4976,-99) , 
9, -1.32231, 0, 0, 0.500539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463481,-99) , 
9, -0.386494, 0, 0, 0.4798,-99) , 
10, 1.36864, 1, 0, 0.498325,-99) , 
9, -0.0769123, 0, 0, 0.500765,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0111984);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494698,-99) , 
7, -951.286, 1, 0, 0.499508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479816,-99) , 
10, 7.96597, 1, 0, 0.498584,-99) , 
NN(
0, 
0, 
-1, -1.97959, 0, -1, 0.485819,-99) , 
8, -1.57141, 0, 0, 0.497665,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.00872474);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517343,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480686,-99) , 
9, -1.10612, 1, 0, 0.495635,-99) , 
8, -0.551042, 0, 0, 0.500329,-99) , 
8, 2.1428, 0, 0, 0.50084,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0153727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.149714, 0, 1, 0.508596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488264,-99) , 
10, 3.78203, 1, 0, 0.505092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488833,-99) , 
10, -0.290131, 1, 0, 0.494403,-99) , 
9, 6.63947, 0, 0, 0.495837,-99) , 
8, 0.714257, 0, 0, 0.498262,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0116536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
5, 0.763837, 1, 1, 0.522802,-99) , 
NN(
0, 
0, 
-1, 7.71391, 1, -1, 0.495893,-99) , 
5, 0.683663, 0, 0, 0.4974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47685,-99) , 
3, 9.50466, 1, 0, 0.496631,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.0143815);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493064,-99) , 
10, 3.36186, 1, 0, 0.503006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480402,-99) , 
6, 0.023792, 1, 0, 0.502169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483439,-99) , 
0, 0.499043, 1, 0, 0.497172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463492,-99) , 
2, 0.0692557, 1, 0, 0.492172,-99) , 
8, -1, 0, 0, 0.500439,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0118264);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526771,-99) , 
NN(
NN(
0, 
0, 
-1, 3.82311, 1, 1, 0.5081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488839,-99) , 
10, 0.73604, 1, 0, 0.497734,-99) , 
9, 0.955207, 0, 0, 0.499715,-99) , 
8, 2.14281, 0, 0, 0.500547,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0136824);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491172,-99) , 
2, -0.0714577, 0, 0, 0.500321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476867,-99) , 
10, 1.19801, 1, 0, 0.485973,-99) , 
8, 1.28568, 1, 0, 0.498541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48737,-99) , 
0, 0.492059, 0, 0, 0.49686,-99) , 
NN(
0, 
0, 
-1, -1.04095, 1, -1, 0.469352,-99) , 
8, -0.428695, 0, 0, 0.487664,-99) , 
0, 0.494281, 0, 0, 0.496674,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.01621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488337,-99) , 
8, -0.714276, 0, 0, 0.522573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498443,-99) , 
3, 1.21417, 1, 0, 0.502651,-99) , 
10, 2.93437, 1, 0, 0.510115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514163,-99) , 
NN(
0, 
0, 
-1, -0.823186, 0, -1, 0.49476,-99) , 
8, 1.57136, 0, 0, 0.496074,-99) , 
9, -0.0698689, 0, 0, 0.499963,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0108705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496251,-99) , 
2, 0.0166917, 0, 0, 0.498561,-99) , 
3, 9.42864, 0, 0, 0.499644,-99) , 
NN(
0, 
0, 
-1, -0.297906, 1, -1, 0.484041,-99) , 
4, 0.999524, 0, 0, 0.498665,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0132094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491994,-99) , 
10, 2.82542, 1, 0, 0.50227,-99) , 
NN(
0, 
0, 
-1, -0.0448802, 1, -1, 0.495066,-99) , 
9, -2.1545, 0, 0, 0.499347,-99) , 
8, -1.85712, 1, 0, 0.499935,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0123949);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.67106, 0, 1, 0.507465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497521,-99) , 
8, -0.714304, 1, 0, 0.500465,-99) , 
10, -0.116633, 1, 0, 0.503044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499465,-99) , 
10, 0.364611, 1, 0, 0.504318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489449,-99) , 
0, 0.501719, 0, 0, 0.494588,-99) , 
8, 0.428503, 0, 0, 0.498025,-99) , 
0, 0.498091, 1, 0, 0.500489,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0092898);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.541275, 0, 1, 0.508341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482532,-99) , 
10, 1.45952, 1, 0, 0.498642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47113,-99) , 
3, 9.42754, 1, 0, 0.497478,-99) , 
9, 0.0184867, 0, 0, 0.500375,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0249569);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.318104, 1, 1, 0.507857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483244,-99) , 
9, -1.77901, 0, 0, 0.491122,-99) , 
5, 0.216775, 1, 0, 0.503095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489342,-99) , 
9, -3.43274, 0, 0, 0.502132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485843,-99) , 
9, -2.77256, 1, 0, 0.489914,-99) , 
5, 0.026203, 0, 0, 0.494099,-99) , 
8, -0.142852, 0, 0, 0.499128,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.00964941);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498215,-99) , 
5, -0.897389, 1, 0, 0.509334,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497943,-99) , 
9, 0.54202, 0, 0, 0.499859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481132,-99) , 
10, 3.79592, 1, 0, 0.498977,-99) , 
9, 4.86262, 0, 0, 0.499851,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.012778);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485771,-99) , 
4, 0.999909, 0, 0, 0.500843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473777,-99) , 
5, 0.684497, 1, 0, 0.499604,-99) , 
4, 0.999048, 1, 0, 0.50039,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0223524);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.3689, 1, 1, 0.512167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481867,-99) , 
7, -951.286, 0, 0, 0.497547,-99) , 
9, 1.69968, 0, 0, 0.50512,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491577,-99) , 
10, 1.90709, 1, 0, 0.514421,-99) , 
NN(
0, 
0, 
-1, 1.01177, 1, -1, 0.493775,-99) , 
9, -0.678075, 0, 0, 0.496435,-99) , 
5, -0.532173, 1, 0, 0.498995,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0103161);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.91157, 1, 1, 0.504483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482298,-99) , 
5, -0.256553, 1, 0, 0.492807,-99) , 
0, 0.491424, 0, 0, 0.503794,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.490302,-99) , 
8, 1.57136, 1, 0, 0.502709,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00895924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523732,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463052,-99) , 
10, 2.71666, 1, 0, 0.499208,-99) , 
9, 1.44562, 0, 0, 0.500445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48818,-99) , 
8, 0.142946, 1, 0, 0.498809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474366,-99) , 
9, 4.73689, 0, 0, 0.491499,-99) , 
10, 3.96857, 1, 0, 0.49936,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0156341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.0161, 1, 1, 0.515714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479012,-99) , 
9, 6.18832, 0, 0, 0.49665,-99) , 
5, -0.821716, 0, 0, 0.50787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496735,-99) , 
2, 0.21406, 0, 0, 0.497892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479644,-99) , 
8, -1.85713, 1, 0, 0.484393,-99) , 
8, -0.999987, 0, 0, 0.495784,-99) , 
5, -0.625605, 1, 0, 0.498527,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.00957669);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526471,-99) , 
NN(
NN(
0, 
0, 
-1, -0.211154, 1, 1, 0.505885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487638,-99) , 
2, 0.0714928, 1, 0, 0.498471,-99) , 
8, -0.0612211, 0, 0, 0.502288,-99) , 
8, 2.14285, 0, 0, 0.503021,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0127345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484939,-99) , 
8, -1.9796, 0, 0, 0.508259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495239,-99) , 
5, -0.441138, 1, 0, 0.497251,-99) , 
8, -1.57142, 1, 0, 0.49806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484258,-99) , 
9, -2.31899, 0, 0, 0.495642,-99) , 
NN(
0, 
0, 
-1, 0.492376, 1, -1, 0.48317,-99) , 
10, 1.67284, 1, 0, 0.491733,-99) , 
0, 0.494281, 0, 0, 0.496973,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.00587151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499651,-99) , 
4, 0.999048, 1, 0, 0.500353,-99) , 
2, -0.214418, 1, 0, 0.501483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475869,-99) , 
6, 0.0238062, 1, 0, 0.500542,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.0101555);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494594,-99) , 
10, 1.93758, 1, 0, 0.499978,-99) , 
2, -0.214584, 1, 0, 0.501526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476143,-99) , 
3, 9.50466, 1, 0, 0.500569,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00661674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481075,-99) , 
8, -2.0204, 0, 0, 0.500782,-99) , 
8, 2.1428, 0, 0, 0.501479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479905,-99) , 
0, 0.490471, 0, 0, 0.500659,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00838971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523785,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497837,-99) , 
8, 2.1428, 0, 0, 0.498416,-99) , 
3, 9.18769, 0, 0, 0.499477,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.485375,-99) , 
4, 0.999524, 0, 0, 0.498598,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0070258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498424,-99) , 
2, -0.214584, 1, 0, 0.499025,-99) , 
3, 9.18505, 0, 0, 0.499903,-99) , 
4, 0.999048, 1, 0, 0.500705,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00415869);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.42498, 0, 1, 0.501621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485251,-99) , 
4, 0.999048, 0, 0, 0.50105,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0134635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499535,-99) , 
8, 0.142889, 0, 0, 0.507599,-99) , 
0, 0.492512, 0, 0, 0.511819,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497516,-99) , 
10, -1.25283, 1, 0, 0.498838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482485,-99) , 
10, 1.71798, 0, 0, 0.488481,-99) , 
8, -1, 0, 0, 0.497056,-99) , 
0, 0.493329, 1, 0, 0.498945,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0183628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.159842, 0, 1, 0.506301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477477,-99) , 
7, -951.286, 0, 0, 0.493614,-99) , 
10, 3.58583, 1, 0, 0.504398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489386,-99) , 
10, -0.73523, 0, 0, 0.49983,-99) , 
NN(
0, 
0, 
-1, -0.539138, 1, -1, 0.481274,-99) , 
0, 0.497138, 0, 0, 0.492654,-99) , 
8, -0.999989, 0, 0, 0.502361,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.00965082);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525214,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498512,-99) , 
8, 0.428498, 0, 0, 0.5009,-99) , 
3, 9.42883, 0, 0, 0.501804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471927,-99) , 
5, 0.591184, 0, 0, 0.48959,-99) , 
4, 0.999524, 0, 0, 0.501035,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.00681888);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.502226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48539,-99) , 
8, 1.20397, 1, 0, 0.498057,-99) , 
NN(
0, 
0, 
-1, 0.492693, 1, -1, 0.486513,-99) , 
8, -0.428641, 0, 0, 0.494157,-99) , 
0, 0.495233, 0, 0, 0.500352,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.0208959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496229,-99) , 
5, 0.403476, 0, 0, 0.504837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473024,-99) , 
7, -1.57149, 0, 0, 0.502335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494257,-99) , 
9, -3.55082, 1, 0, 0.509083,-99) , 
NN(
0, 
0, 
-1, -1.57142, 0, -1, 0.492505,-99) , 
9, -2.82985, 1, 0, 0.496204,-99) , 
7, -951.286, 0, 0, 0.498864,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0122001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487882,-99) , 
4, 0.999905, 0, 0, 0.504581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485123,-99) , 
10, 0.753547, 1, 0, 0.498407,-99) , 
5, -0.438498, 1, 0, 0.500616,-99) , 
NN(
0, 
0, 
-1, 0.505981, 0, -1, 0.485312,-99) , 
0, 0.504757, 1, 0, 0.499755,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0109206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28567, 0, 1, 0.503516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477052,-99) , 
6, 0.00053987, 0, 0, 0.490152,-99) , 
6, 0.00113373, 0, 0, 0.501342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478516,-99) , 
6, 0.0238087, 1, 0, 0.500512,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0202621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483227,-99) , 
9, -2.83175, 0, 0, 0.519358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471125,-99) , 
10, -0.45812, 1, 0, 0.496675,-99) , 
8, 0.084092, 0, 0, 0.502033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489849,-99) , 
8, 0.999999, 0, 0, 0.493054,-99) , 
6, 0.0237559, 0, 0, 0.494371,-99) , 
10, 0.0148824, 1, 0, 0.497371,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.00956208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44644, 1, 1, 0.51738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494301,-99) , 
10, 2.37422, 1, 0, 0.500677,-99) , 
4, 0.999524, 1, 0, 0.50171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479863,-99) , 
3, 9.50466, 1, 0, 0.500887,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0162636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472589,-99) , 
4, 0.999964, 0, 0, 0.50183,-99) , 
4, 0.99981, 1, 0, 0.503263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517575,-99) , 
NN(
0, 
0, 
-1, 0.210337, 1, -1, 0.495458,-99) , 
9, -1.11994, 0, 0, 0.497271,-99) , 
5, -0.251326, 1, 0, 0.500157,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.019661);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485877,-99) , 
9, -2.77685, 0, 0, 0.513774,-99) , 
NN(
0, 
0, 
-1, 2.1836, 1, -1, 0.496013,-99) , 
10, 0.110544, 1, 0, 0.499676,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488171,-99) , 
3, 1.8443, 0, 0, 0.501507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487467,-99) , 
0, 0.500948, 0, 0, 0.491001,-99) , 
5, -0.626832, 1, 0, 0.493679,-99) , 
8, 0.142821, 0, 0, 0.496401,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00755465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0101963, 0, 1, 0.502559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484118,-99) , 
10, 6.71252, 1, 0, 0.501582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48271,-99) , 
6, 0.023792, 1, 0, 0.500892,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00702468);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49903,-99) , 
3, 9.06241, 0, 0, 0.500093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480812,-99) , 
4, 0.999637, 0, 0, 0.499276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473256,-99) , 
4, 0.999048, 0, 0, 0.498374,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0159391);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487869,-99) , 
10, 1.23305, 1, 0, 0.506617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486296,-99) , 
3, 2.00641, 0, 0, 0.493958,-99) , 
5, -0.345011, 0, 0, 0.501853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51325,-99) , 
NN(
0, 
0, 
-1, -1.95237, 0, -1, 0.494275,-99) , 
9, 5.17259, 0, 0, 0.495607,-99) , 
8, 0.142837, 0, 0, 0.498441,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00907095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49667,-99) , 
3, 4.63847, 1, 0, 0.501866,-99) , 
8, 2.1428, 0, 0, 0.502495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477072,-99) , 
6, 0.0238087, 1, 0, 0.501553,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0055973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499743,-99) , 
2, -0.210704, 1, 0, 0.500725,-99) , 
4, 0.999048, 1, 0, 0.501673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480941,-99) , 
3, 9.50466, 1, 0, 0.50088,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00932889);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49744,-99) , 
8, 1.57142, 0, 0, 0.49874,-99) , 
3, 9.42206, 0, 0, 0.499495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477124,-99) , 
4, 0.999048, 0, 0, 0.498722,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0141269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.610995, 1, 1, 0.51408,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477756,-99) , 
8, -1.85713, 0, 0, 0.500462,-99) , 
5, 0.216771, 0, 0, 0.502983,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48779,-99) , 
7, -951.286, 1, 0, 0.503518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471703,-99) , 
9, -3.62027, 1, 0, 0.493794,-99) , 
9, -3.30908, 0, 0, 0.50144,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.00664061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499285,-99) , 
0, 0.504757, 0, 0, 0.500292,-99) , 
4, 0.999048, 1, 0, 0.501391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482373,-99) , 
3, 9.18604, 1, 0, 0.500592,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.018869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.481703, 0, 1, 0.537091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495044,-99) , 
10, -0.601228, 1, 0, 0.499901,-99) , 
9, -0.853396, 0, 0, 0.503193,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49033,-99) , 
3, 3.5211, 1, 0, 0.49934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468719,-99) , 
9, 0.372689, 0, 0, 0.482507,-99) , 
5, -0.537577, 1, 0, 0.494637,-99) , 
10, 1.57401, 1, 0, 0.500491,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0116501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483906,-99) , 
0, 0.505709, 1, 0, 0.503624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48097,-99) , 
10, 7.73487, 0, 0, 0.492911,-99) , 
5, -0.848453, 0, 0, 0.502701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461094,-99) , 
9, -2.86661, 0, 0, 0.482742,-99) , 
8, -0.138443, 1, 0, 0.490996,-99) , 
5, 0.591161, 1, 0, 0.501604,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0140279);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49856,-99) , 
8, -0.605455, 0, 0, 0.50321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487604,-99) , 
9, -3.50414, 1, 0, 0.490944,-99) , 
0, 0.500947, 1, 0, 0.500191,-99) , 
NN(
0, 
0, 
-1, 0.123272, 1, -1, 0.482277,-99) , 
8, 1.57143, 1, 0, 0.49877,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.017412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.139467, 0, 1, 0.515687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492613,-99) , 
5, -0.628395, 0, 0, 0.510575,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494375,-99) , 
8, -0.142894, 0, 0, 0.502372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479118,-99) , 
2, 0.00731051, 0, 0, 0.492095,-99) , 
2, -0.00337889, 1, 0, 0.497664,-99) , 
2, 0.0714447, 0, 0, 0.499664,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00893342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498236,-99) , 
0, 0.492376, 1, 0, 0.499541,-99) , 
3, 9.42599, 0, 0, 0.50076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478892,-99) , 
4, 0.999048, 0, 0, 0.499993,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0130834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.816517, 1, 1, 0.515591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493076,-99) , 
10, 1.3532, 1, 0, 0.501924,-99) , 
9, 2.82449, 0, 0, 0.502995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488647,-99) , 
5, -0.906398, 0, 0, 0.502328,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00997086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0691349, 0, 1, 0.505416,-99) , 
NN(
0, 
0, 
-1, 1.03339, 1, -1, 0.496508,-99) , 
9, -0.173715, 0, 0, 0.499146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469261,-99) , 
4, 0.999048, 0, 0, 0.498111,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.00762286);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0237869, 0, 1, 0.503686,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.497052,-99) , 
5, -0.25148, 1, 0, 0.500338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482654,-99) , 
4, 0.999048, 0, 0, 0.499711,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00931828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.78192, 0, 1, 0.502604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489911,-99) , 
10, 6.93033, 1, 0, 0.501894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488241,-99) , 
5, 0.0882581, 1, 0, 0.498399,-99) , 
NN(
0, 
0, 
-1, -0.654871, 1, -1, 0.484686,-99) , 
5, -0.442545, 0, 0, 0.49314,-99) , 
0, 0.5019, 1, 0, 0.50029,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0132608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496432,-99) , 
5, 0.490334, 0, 0, 0.520445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495986,-99) , 
9, 3.2358, 0, 0, 0.497453,-99) , 
4, 0.999524, 1, 0, 0.498902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470546,-99) , 
3, 9.52058, 1, 0, 0.497847,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0117487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495236, 1, 1, 0.510824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468923,-99) , 
0, 0.503805, 1, 0, 0.499852,-99) , 
8, -0.551018, 0, 0, 0.503369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519351,-99) , 
NN(
0, 
0, 
-1, 0.497336, 1, -1, 0.495839,-99) , 
2, -0.214389, 1, 0, 0.496982,-99) , 
8, -0.142852, 1, 0, 0.499824,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0150227);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475488,-99) , 
3, 9.19077, 1, 0, 0.503109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48882,-99) , 
10, 3.28259, 1, 0, 0.501719,-99) , 
NN(
0, 
0, 
-1, 1.84481, 0, -1, 0.488501,-99) , 
7, -951.286, 0, 0, 0.493522,-99) , 
5, -0.532312, 0, 0, 0.500304,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0069367);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.99988, 0, 1, 0.512959,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527355,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499738,-99) , 
4, 0.999524, 1, 0, 0.501306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480939,-99) , 
3, 9.52224, 1, 0, 0.50058,-99) , 
10, -1.43229, 1, 0, 0.501817,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.010617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497119,-99) , 
0, 0.5019, 0, 0, 0.498856,-99) , 
3, 9.42883, 0, 0, 0.499727,-99) , 
NN(
0, 
0, 
-1, -0.160761, 1, -1, 0.479068,-99) , 
4, 0.999524, 0, 0, 0.498446,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0135269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.14295, 1, 1, 0.517605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492993,-99) , 
5, 0.30748, 1, 0, 0.500747,-99) , 
0, 0.495551, 1, 0, 0.502533,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492308,-99) , 
5, -0.534694, 1, 0, 0.497989,-99) , 
NN(
0, 
0, 
-1, -0.142997, 1, -1, 0.47858,-99) , 
0, 0.492694, 1, 0, 0.489883,-99) , 
0, 0.494281, 0, 0, 0.500354,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0067926);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.85715, 1, 1, 0.502579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473744,-99) , 
4, 0.999048, 0, 0, 0.501585,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.010409);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515514,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49665,-99) , 
4, 0.999524, 1, 0, 0.497861,-99) , 
3, 9.50466, 0, 0, 0.498465,-99) , 
2, 0.214214, 0, 0, 0.499349,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0150509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48564,-99) , 
10, 1.19384, 1, 0, 0.500886,-99) , 
8, 1.57135, 0, 0, 0.502568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488901,-99) , 
3, 1.93277, 0, 0, 0.49763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469077,-99) , 
5, -0.451391, 1, 0, 0.494499,-99) , 
10, 2.1957, 1, 0, 0.500644,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0185438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497081,-99) , 
10, 2.74602, 1, 0, 0.513306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48383,-99) , 
7, -951.286, 1, 0, 0.499411,-99) , 
9, -0.977349, 0, 0, 0.505917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487894,-99) , 
4, 0.999932, 0, 0, 0.498563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47093,-99) , 
4, 0.999524, 0, 0, 0.496948,-99) , 
8, 0.142837, 0, 0, 0.501046,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0102381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -3.27592, 0, 1, 0.51414,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0237842, 0, 1, 0.504491,-99) , 
NN(
0, 
0, 
-1, 0.617713, 1, -1, 0.495427,-99) , 
5, -0.279486, 1, 0, 0.499915,-99) , 
5, 0.681188, 0, 0, 0.500783,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.013222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.21598, 0, 1, 0.505055,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494288,-99) , 
0, 0.493329, 1, 0, 0.496315,-99) , 
3, 1.44658, 1, 0, 0.49929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47432,-99) , 
3, 9.50466, 1, 0, 0.49835,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00820858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499346,-99) , 
3, 9.031, 0, 0, 0.500512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479191,-99) , 
4, 0.999524, 0, 0, 0.499636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475872,-99) , 
7, -951.286, 0, 0, 0.490172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461479,-99) , 
8, 0.717234, 1, 0, 0.481576,-99) , 
5, 0.59116, 1, 0, 0.497948,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.014954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499151,-99) , 
0, 0.497138, 1, 0, 0.501996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480005,-99) , 
2, 0.211745, 1, 0, 0.501182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481995,-99) , 
10, -0.382989, 1, 0, 0.499661,-99) , 
NN(
0, 
0, 
-1, -0.704525, 1, -1, 0.480514,-99) , 
9, -3.37281, 0, 0, 0.491593,-99) , 
5, 0.309518, 1, 0, 0.499072,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0141318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0814744, 1, 1, 0.507661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482941,-99) , 
8, 0.278919, 0, 0, 0.50506,-99) , 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.494266,-99) , 
8, 0.142863, 0, 0, 0.499195,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0174659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494528,-99) , 
8, -0.714164, 0, 0, 0.518371,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486728,-99) , 
8, 0.430425, 1, 0, 0.496656,-99) , 
10, 3.13734, 1, 0, 0.506296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497314,-99) , 
9, -1.10663, 0, 0, 0.499769,-99) , 
NN(
0, 
0, 
-1, 1.63716, 1, -1, 0.47802,-99) , 
10, 1.35453, 1, 0, 0.497611,-99) , 
9, -0.173715, 0, 0, 0.500111,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.013267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484505,-99) , 
10, 5.60632, 1, 0, 0.502697,-99) , 
6, 0.0238087, 0, 0, 0.503422,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511253,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.4839,-99) , 
0, 0.490064, 1, 0, 0.490993,-99) , 
0, 0.493329, 0, 0, 0.501885,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00951471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.401071, 0, 1, 0.518554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497984,-99) , 
8, -1.85715, 1, 0, 0.499179,-99) , 
4, 0.999524, 1, 0, 0.500396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478123,-99) , 
3, 9.17234, 1, 0, 0.499455,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00832345);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.4289, 0, 1, 0.503259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465571,-99) , 
7, -951.286, 0, 0, 0.483474,-99) , 
4, 0.999524, 0, 0, 0.502013,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.01434);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.61204, 0, 1, 0.505354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479112,-99) , 
8, -1.85718, 0, 0, 0.504008,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496816,-99) , 
8, 0.714153, 0, 0, 0.503459,-99) , 
NN(
0, 
0, 
-1, 3.21125, 1, -1, 0.487813,-99) , 
9, 2.36849, 0, 0, 0.495582,-99) , 
10, 1.97841, 1, 0, 0.501797,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0128439);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496522,-99) , 
0, 0.5019, 1, 0, 0.503617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488422,-99) , 
5, -0.348057, 1, 0, 0.495393,-99) , 
8, -0.469356, 0, 0, 0.501197,-99) , 
8, -1.85714, 1, 0, 0.502073,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0084605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.39675, 1, 1, 0.516685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498102,-99) , 
8, -1.57143, 1, 0, 0.499163,-99) , 
4, 0.999524, 1, 0, 0.50027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481491,-99) , 
3, 9.0526, 1, 0, 0.49943,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00635776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49958,-99) , 
2, 0.192246, 0, 0, 0.500647,-99) , 
2, -0.215363, 1, 0, 0.501512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473679,-99) , 
3, 9.50466, 1, 0, 0.50047,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0105048);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.684758, 0, 1, 0.504836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484133,-99) , 
3, 9.52452, 1, 0, 0.504055,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0124326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142739, 0, 1, 0.510671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480877,-99) , 
2, -0.275463, 0, 0, 0.505589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499229,-99) , 
10, 3.82311, 1, 0, 0.50513,-99) , 
NN(
0, 
0, 
-1, 1.73283, 1, -1, 0.495218,-99) , 
9, 1.04356, 0, 0, 0.497055,-99) , 
2, -0.0713995, 1, 0, 0.498473,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0116339);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498051,-99) , 
7, -951.286, 1, 0, 0.502774,-99) , 
8, -1.85709, 1, 0, 0.503551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464767,-99) , 
5, -0.255705, 1, 0, 0.483959,-99) , 
0, 0.491424, 0, 0, 0.502415,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0145802);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485146,-99) , 
10, 1.17597, 1, 0, 0.500298,-99) , 
8, 1.57135, 0, 0, 0.50165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48824,-99) , 
7, -951.286, 1, 0, 0.499512,-99) , 
NN(
0, 
0, 
-1, 2.85912, 1, -1, 0.481667,-99) , 
9, 1.6794, 0, 0, 0.491425,-99) , 
10, 1.80862, 1, 0, 0.498736,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.00665866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499575,-99) , 
3, 9.05927, 0, 0, 0.500532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478296,-99) , 
4, 0.999683, 0, 0, 0.499436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469355,-99) , 
4, 0.999048, 0, 0, 0.498393,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.00675044);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522373,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48198,-99) , 
3, 9.11461, 1, 0, 0.501235,-99) , 
8, 2.14285, 0, 0, 0.501865,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0073004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4995,-99) , 
0, 0.491424, 1, 0, 0.500614,-99) , 
3, 9.12546, 0, 0, 0.501854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471474,-99) , 
4, 0.999048, 0, 0, 0.500799,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0135344);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496238,-99) , 
9, -3.37562, 0, 0, 0.507617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495509,-99) , 
9, 0.459472, 0, 0, 0.498616,-99) , 
5, 0.310368, 0, 0, 0.500605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480422,-99) , 
3, 9.40614, 1, 0, 0.49982,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0079592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499553,-99) , 
3, 9.42872, 0, 0, 0.500906,-99) , 
NN(
0, 
0, 
-1, 4.62186, 1, -1, 0.490272,-99) , 
4, 0.999909, 0, 0, 0.499246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468734,-99) , 
4, 0.999048, 0, 0, 0.498196,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0185162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.265284, 0, 1, 0.508307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481295,-99) , 
7, -951.286, 0, 0, 0.497107,-99) , 
8, 1.28571, 1, 0, 0.506922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494274,-99) , 
7, -0.142836, 1, 0, 0.504992,-99) , 
NN(
0, 
0, 
-1, 0.496231, 1, -1, 0.493947,-99) , 
7, -951.286, 0, 0, 0.498752,-99) , 
0, 0.497138, 0, 0, 0.503706,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.00854995);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483262,-99) , 
3, 9.42372, 1, 0, 0.502976,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.0110047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494525,-99) , 
0, 0.503532, 0, 0, 0.511198,-99) , 
NN(
0, 
0, 
-1, 0.0238088, 1, -1, 0.496622,-99) , 
0, 0.502852, 0, 0, 0.498566,-99) , 
8, -1.8571, 1, 0, 0.499589,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0156733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481762,-99) , 
8, -1.85714, 0, 0, 0.505276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483214,-99) , 
9, -2.95714, 0, 0, 0.492265,-99) , 
5, 0.519848, 1, 0, 0.50358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489459,-99) , 
5, -0.906398, 0, 0, 0.50291,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.00802704);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499483,-99) , 
3, 4.48342, 0, 0, 0.501869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485127,-99) , 
4, 0.999683, 0, 0, 0.501036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475529,-99) , 
4, 0.999048, 0, 0, 0.500152,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0134303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00004, 1, 1, 0.508248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496368,-99) , 
8, 0.428559, 0, 0, 0.500418,-99) , 
0, 0.496186, 1, 0, 0.502813,-99) , 
NN(
0, 
0, 
-1, -0.441905, 1, -1, 0.483709,-99) , 
4, 0.999524, 0, 0, 0.501617,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00611828);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522982,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499923,-99) , 
4, 0.999524, 1, 0, 0.501121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478677,-99) , 
3, 9.11848, 1, 0, 0.500158,-99) , 
8, -1.85713, 1, 0, 0.50118,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0161396);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478283,-99) , 
7, -1.57154, 0, 0, 0.509555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463196,-99) , 
8, -1.85706, 0, 0, 0.499613,-99) , 
7, -951.286, 0, 0, 0.503907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476711,-99) , 
6, 0.023792, 1, 0, 0.502917,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.00927675);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498614,-99) , 
5, -0.478598, 1, 0, 0.501675,-99) , 
NN(
0, 
0, 
-1, 0.19425, 1, -1, 0.493521,-99) , 
5, 0.216587, 1, 0, 0.499481,-99) , 
8, -1.85714, 1, 0, 0.500233,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0118446);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527084,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498072,-99) , 
9, -2.36315, 0, 0, 0.502473,-99) , 
10, -2.11209, 1, 0, 0.504181,-99) , 
NN(
0, 
0, 
-1, -0.0717891, 0, -1, 0.49495,-99) , 
10, 0.396228, 1, 0, 0.499334,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0108173);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490274,-99) , 
2, 0.214239, 1, 0, 0.503919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485609,-99) , 
0, 0.505981, 1, 0, 0.503413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481764,-99) , 
0, 0.490471, 0, 0, 0.502597,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.00975754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48496,-99) , 
3, 5.54412, 1, 0, 0.507001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474702,-99) , 
5, 0.737113, 1, 0, 0.499946,-99) , 
5, -0.625845, 1, 0, 0.501593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473385,-99) , 
4, 0.999048, 0, 0, 0.500617,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_4_6_noP::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_4_6_noP::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_4_6_noP *ReadBDT_maker_LHC19c2b_4_6_noP(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_4_6_noP(theInpVar);
  }
}
