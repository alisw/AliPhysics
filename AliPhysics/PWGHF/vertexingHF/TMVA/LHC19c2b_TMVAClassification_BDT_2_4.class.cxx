#include "LHC19c2b_TMVAClassification_BDT_2_4.class.h"

double ReadBDT_LHC19c2b_2_4::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2b_2_4::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.492642708534505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.761508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427897,-99) , 
5, 0.999524, 0, 0, 0.724525,-99) , 
NN(
NN(
0, 
0, 
-1, -0.60677, 1, 1, 0.729083,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.28103,-99) , 
11, 3.38191, 0, 0, 0.373539,-99) , 
9, -951.286, 0, 0, 0.501598,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.384781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.707208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406331,-99) , 
5, 0.999048, 0, 0, 0.685338,-99) , 
NN(
NN(
0, 
0, 
-1, -0.419994, 1, 1, 0.655915,-99) , 
NN(
0, 
0, 
-1, -1.57146, 0, -1, 0.319416,-99) , 
12, 3.71406, 0, 0, 0.401561,-99) , 
9, -951.286, 0, 0, 0.504681,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.26823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00566571, 0, 1, 0.67301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356818,-99) , 
7, 0.0237962, 1, 0, 0.65001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201457,-99) , 
5, 0.999524, 0, 0, 0.476916,-99) , 
NN(
0, 
0, 
-1, -2.11567, 0, -1, 0.167107,-99) , 
10, -1.57144, 0, 0, 0.42855,-99) , 
9, -951.286, 0, 0, 0.508641,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.286799);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.63947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433609,-99) , 
5, 0.999048, 0, 0, 0.6238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430959,-99) , 
6, -0.401388, 1, 0, 0.564861,-99) , 
NN(
0, 
0, 
-1, 1.54369, 0, -1, 0.340596,-99) , 
11, 1.2855, 0, 0, 0.410215,-99) , 
9, -951.286, 0, 0, 0.487105,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.206266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.636751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462233,-99) , 
7, 0.00680085, 0, 0, 0.526049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.109136,-99) , 
7, 0.047611, 1, 0, 0.512317,-99) , 
NN(
0, 
0, 
-1, 1.40635, 0, -1, 0.200804,-99) , 
10, -1.85715, 0, 0, 0.487235,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.190528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.252441,-99) , 
5, 0.998571, 0, 0, 0.53557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.114001,-99) , 
7, 0.0475559, 1, 0, 0.522084,-99) , 
NN(
0, 
0, 
-1, 1.48682, 0, -1, 0.219484,-99) , 
10, -1.85714, 0, 0, 0.498316,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.178087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00340065, 0, 1, 0.60307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.344645,-99) , 
7, 0.0238056, 1, 0, 0.584078,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.422553,-99) , 
9, -951.286, 0, 0, 0.481028,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.163131);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341981,-99) , 
5, 0.999524, 0, 0, 0.516991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.123943,-99) , 
7, 0.0475952, 1, 0, 0.50525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.180226,-99) , 
10, -2.14285, 0, 0, 0.489161,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.161856);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.607307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462856,-99) , 
6, -0.368474, 1, 0, 0.50394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.134137,-99) , 
7, 0.0475646, 1, 0, 0.493059,-99) , 
NN(
0, 
0, 
-1, -2.29254, 0, -1, 0.246643,-99) , 
10, -1.85715, 0, 0, 0.474569,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.16584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442284,-99) , 
7, 0.0045339, 0, 0, 0.508581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.146344,-99) , 
7, 0.047611, 1, 0, 0.498271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.20615,-99) , 
10, -2.14285, 0, 0, 0.484152,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.1535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278522,-99) , 
5, 0.997619, 0, 0, 0.527554,-99) , 
NN(
0, 
0, 
-1, 0.168557, 1, -1, 0.294775,-99) , 
10, 1.77545, 1, 0, 0.512129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58137,-99) , 
NN(
0, 
0, 
-1, -0.519172, 1, -1, 0.274031,-99) , 
3, 1.73502, 0, 0, 0.348056,-99) , 
10, -1.28572, 0, 0, 0.486404,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.133826);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459369,-99) , 
9, -951.286, 0, 0, 0.49662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.156405,-99) , 
7, 0.0475953, 1, 0, 0.486926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.218172,-99) , 
10, -2.14287, 0, 0, 0.474426,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.0827235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277755,-99) , 
5, 0.998095, 0, 0, 0.501446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.233099,-99) , 
10, -2.14286, 0, 0, 0.489414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.15545,-99) , 
7, 0.047611, 1, 0, 0.480378,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.0586044);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14289, 0, -1, 0.470731,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0763152);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305061,-99) , 
4, 9.47906, 1, 0, 0.497893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256174,-99) , 
10, -2.14285, 0, 0, 0.486884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.163387,-99) , 
7, 0.047611, 1, 0, 0.478305,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0733683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372248,-99) , 
5, 0.999524, 0, 0, 0.488057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196616,-99) , 
10, -2.42857, 0, 0, 0.480292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.171432,-99) , 
7, 0.0475835, 1, 0, 0.472166,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.174918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.389473, 1, 1, 0.603503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.343121,-99) , 
10, 1.2855, 1, 0, 0.562135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381171,-99) , 
6, -0.15214, 1, 0, 0.514604,-99) , 
NN(
0, 
0, 
-1, 1.42677, 0, -1, 0.387602,-99) , 
11, 1.13894, 0, 0, 0.443643,-99) , 
3, 2.07866, 0, 0, 0.46654,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.0704132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.12914, 1, -1, 0.49073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.264863,-99) , 
3, 1.58713, 0, 0, 0.346489,-99) , 
10, -1.57146, 0, 0, 0.47541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.179547,-99) , 
7, 0.0475922, 1, 0, 0.467523,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0643999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267575,-99) , 
10, 2.07479, 1, 0, 0.495616,-99) , 
NN(
0, 
0, 
-1, 1.39656, 0, -1, 0.313076,-99) , 
10, -1.85714, 0, 0, 0.482903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.167669,-99) , 
7, 0.047611, 1, 0, 0.474771,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0789992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245477,-99) , 
10, 2.18362, 1, 0, 0.494235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317547,-99) , 
3, 1.74844, 0, 0, 0.375776,-99) , 
10, -1.28572, 0, 0, 0.475965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.180625,-99) , 
7, 0.0475953, 1, 0, 0.468276,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.123755);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469591,-99) , 
3, 1.9208, 0, 0, 0.492805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375263,-99) , 
3, 2.25661, 0, 0, 0.398233,-99) , 
7, 0.00226682, 0, 0, 0.468883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.187043,-99) , 
7, 0.047611, 1, 0, 0.461704,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0946166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398568,-99) , 
5, 0.999864, 0, 0, 0.485703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.240774,-99) , 
5, 0.997143, 0, 0, 0.478091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.195609,-99) , 
7, 0.0475952, 1, 0, 0.470893,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0673611);
  fForest.push_back( 
NN(
0, 
0, 
-1, 9.32317, 1, -1, 0.46637,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0559611);
  fForest.push_back( 
NN(
0, 
0, 
-1, 9.50217, 1, -1, 0.472049,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.083626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421308,-99) , 
5, 0.999841, 0, 0, 0.494674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301381,-99) , 
10, -2.14285, 0, 0, 0.486491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241825,-99) , 
5, 0.996667, 0, 0, 0.480029,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0832867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.436536, 1, 1, 0.60131,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.473611,-99) , 
3, 2.39439, 0, 0, 0.48524,-99) , 
NN(
0, 
0, 
-1, 13.4146, 1, -1, 0.321707,-99) , 
4, 9.27699, 1, 0, 0.475843,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0440636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295789,-99) , 
10, -2.26532, 0, 0, 0.495867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281933,-99) , 
10, 2.14279, 1, 0, 0.490189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.263229,-99) , 
5, 0.997143, 0, 0, 0.483522,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.138873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312382,-99) , 
10, 1.57159, 1, 0, 0.538163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406874,-99) , 
12, 2.94327, 0, 0, 0.463538,-99) , 
3, 1.7775, 0, 0, 0.489106,-99) , 
NN(
0, 
0, 
-1, 0.0841684, 1, -1, 0.325625,-99) , 
4, 9.32317, 1, 0, 0.479849,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0509121);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.996667, 0, -1, 0.474566,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0361437);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301563,-99) , 
10, -2.2653, 0, 0, 0.49349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.283811,-99) , 
10, 2.14279, 1, 0, 0.487984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258593,-99) , 
5, 0.996667, 0, 0, 0.482139,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.111491);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462408,-99) , 
5, 0.999981, 0, 0, 0.50509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394576,-99) , 
3, 2.25661, 0, 0, 0.423432,-99) , 
5, 0.999864, 0, 0, 0.48619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.27728,-99) , 
5, 0.997143, 0, 0, 0.480097,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0891836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4871,-99) , 
6, 0.173034, 1, 0, 0.528332,-99) , 
NN(
0, 
0, 
-1, -1.57141, 0, -1, 0.461724,-99) , 
9, -951.286, 0, 0, 0.486597,-99) , 
NN(
0, 
0, 
-1, 0.0746597, 1, -1, 0.330935,-99) , 
4, 9.48998, 1, 0, 0.478375,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0543584);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.375606,-99) , 
7, 0.0238056, 1, 0, 0.499097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297993,-99) , 
10, -2.30612, 0, 0, 0.49289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.335936,-99) , 
10, 1.85708, 1, 0, 0.485662,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.108846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.34121,-99) , 
10, 1.57171, 1, 0, 0.525325,-99) , 
NN(
0, 
0, 
-1, 0.526088, 0, -1, 0.45814,-99) , 
3, 1.61781, 0, 0, 0.487765,-99) , 
NN(
0, 
0, 
-1, 0.0764361, 1, -1, 0.346748,-99) , 
4, 9.48356, 1, 0, 0.480218,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.113524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499996, 1, 1, 0.570281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458332,-99) , 
7, 0.00906488, 0, 0, 0.480218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.286336,-99) , 
7, 0.0237961, 1, 0, 0.472335,-99) , 
6, -0.638938, 1, 0, 0.485015,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0483114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388506,-99) , 
7, 0.0238055, 1, 0, 0.499649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349141,-99) , 
10, -2.14284, 0, 0, 0.493774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.304448,-99) , 
5, 0.997143, 0, 0, 0.488288,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0764591);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449506,-99) , 
10, -1.00003, 0, 0, 0.504136,-99) , 
NN(
0, 
0, 
-1, 1.73118, 0, -1, 0.427961,-99) , 
0, 0.5019, 1, 0, 0.491247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31585,-99) , 
5, 0.997619, 0, 0, 0.485378,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0655222);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484121,-99) , 
3, 2.41624, 0, 0, 0.493132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364278,-99) , 
4, 9.49987, 1, 0, 0.486389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29869,-99) , 
10, 2.14281, 1, 0, 0.481444,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0489218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322314,-99) , 
10, -2.30612, 0, 0, 0.5029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374391,-99) , 
10, 1.85708, 1, 0, 0.497149,-99) , 
NN(
0, 
0, 
-1, 1.80781, 1, -1, 0.36222,-99) , 
4, 9.48998, 1, 0, 0.490058,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0793413);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463569,-99) , 
5, 0.999968, 0, 0, 0.505155,-99) , 
NN(
0, 
0, 
-1, 4.69368, 1, -1, 0.437402,-99) , 
5, 0.999864, 0, 0, 0.489632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317145,-99) , 
5, 0.997143, 0, 0, 0.484783,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0689352);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404045,-99) , 
7, 0.0237823, 1, 0, 0.507066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440223,-99) , 
3, 2.07824, 0, 0, 0.453397,-99) , 
0, 0.499995, 1, 0, 0.490379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.36308,-99) , 
4, 9.50668, 1, 0, 0.483887,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.033803);
  fForest.push_back( 
NN(
0, 
0, 
-1, 2.1428, 1, -1, 0.483105,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.087418);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462547,-99) , 
6, -0.00911663, 1, 0, 0.498295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.345903,-99) , 
8, 1.68734, 0, 0, 0.414816,-99) , 
10, -1.53063, 0, 0, 0.489368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.31842,-99) , 
10, 2.1428, 1, 0, 0.484886,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.116715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.105179, 1, 1, 0.542921,-99) , 
NN(
0, 
0, 
-1, 1.77561, 1, -1, 0.38857,-99) , 
10, 1.28586, 1, 0, 0.51923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493793,-99) , 
6, -0.769571, 1, 0, 0.507908,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.364699,-99) , 
9, -951.286, 0, 0, 0.418963,-99) , 
11, 1.35936, 0, 0, 0.466002,-99) , 
3, 1.76258, 0, 0, 0.484984,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0880167);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44876,-99) , 
7, 0.00339963, 0, 0, 0.497016,-99) , 
NN(
0, 
0, 
-1, 1.11806, 1, -1, 0.397464,-99) , 
7, 0.0237976, 1, 0, 0.490878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.317502,-99) , 
5, 0.997143, 0, 0, 0.486092,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0283235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.392056,-99) , 
4, 9.47676, 1, 0, 0.494818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.347414,-99) , 
10, -2.26529, 0, 0, 0.490382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.328874,-99) , 
10, 2.1428, 1, 0, 0.486287,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0642283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486244,-99) , 
6, -0.548901, 1, 0, 0.498791,-99) , 
NN(
0, 
0, 
-1, 4.63574, 1, -1, 0.446048,-99) , 
5, 0.999864, 0, 0, 0.486758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327385,-99) , 
5, 0.997143, 0, 0, 0.482356,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0453891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.596118,-99) , 
NN(
0, 
0, 
-1, 0.249478, 1, -1, 0.487198,-99) , 
3, 2.57593, 0, 0, 0.493477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382328,-99) , 
4, 9.47659, 1, 0, 0.487842,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0763736);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481871,-99) , 
6, 0.0789013, 1, 0, 0.516687,-99) , 
NN(
0, 
0, 
-1, 1.69121, 0, -1, 0.469442,-99) , 
3, 1.45266, 0, 0, 0.495409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.351552,-99) , 
5, 0.997143, 0, 0, 0.491434,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0710965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.394027, 1, 1, 0.560885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465684,-99) , 
6, -0.196134, 1, 0, 0.493453,-99) , 
3, 2.25656, 0, 0, 0.501985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396369,-99) , 
4, 9.46687, 1, 0, 0.496584,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0802022);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495507,-99) , 
6, 0.124873, 1, 0, 0.528935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406258,-99) , 
11, 0.930755, 0, 0, 0.477666,-99) , 
3, 1.61781, 0, 0, 0.499958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360369,-99) , 
5, 0.997143, 0, 0, 0.496145,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.081683);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495098,-99) , 
6, 0.264704, 1, 0, 0.533138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341835,-99) , 
10, 1.85712, 1, 0, 0.521292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380105,-99) , 
10, -1.85723, 0, 0, 0.49741,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.414793,-99) , 
6, -0.215716, 1, 0, 0.473635,-99) , 
3, 1.61144, 0, 0, 0.495083,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0871011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.149024, 1, 1, 0.539198,-99) , 
NN(
0, 
0, 
-1, 1.95236, 1, -1, 0.443511,-99) , 
10, 1, 1, 0, 0.520525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446485,-99) , 
6, -0.428309, 1, 0, 0.483359,-99) , 
NN(
0, 
0, 
-1, 1.29261, 0, -1, 0.329553,-99) , 
12, 1.73537, 0, 0, 0.460669,-99) , 
3, 1.45812, 0, 0, 0.493948,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0914259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.35399, 1, 1, 0.552217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411616,-99) , 
12, 1.84738, 1, 0, 0.536879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446367,-99) , 
6, -0.0587966, 1, 0, 0.490577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378312,-99) , 
9, -951.286, 0, 0, 0.429197,-99) , 
10, -1.00004, 0, 0, 0.476886,-99) , 
3, 1.93718, 0, 0, 0.492354,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0754864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403878,-99) , 
4, 9.48431, 1, 0, 0.518124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.367666,-99) , 
10, 1.85709, 1, 0, 0.509742,-99) , 
NN(
0, 
0, 
-1, 1.74879, 0, -1, 0.459097,-99) , 
3, 1.45813, 0, 0, 0.48726,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0908558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479436,-99) , 
3, 1.27305, 0, 0, 0.527294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462246,-99) , 
3, 2.54101, 0, 0, 0.47102,-99) , 
7, 0.0056679, 0, 0, 0.49445,-99) , 
NN(
0, 
0, 
-1, -0.553375, 1, -1, 0.395818,-99) , 
7, 0.0238055, 1, 0, 0.488405,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.069528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498237,-99) , 
3, 1.27429, 0, 0, 0.539494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467516,-99) , 
3, 1.92901, 0, 0, 0.483308,-99) , 
7, 0.00792826, 0, 0, 0.498718,-99) , 
NN(
0, 
0, 
-1, -0.55345, 1, -1, 0.411625,-99) , 
7, 0.0237849, 1, 0, 0.493323,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0620135);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460909,-99) , 
7, 0.00226651, 0, 0, 0.504196,-99) , 
NN(
0, 
0, 
-1, -0.557342, 1, -1, 0.417116,-99) , 
7, 0.0237977, 1, 0, 0.498801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360438,-99) , 
5, 0.997143, 0, 0, 0.495081,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.045918);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490555,-99) , 
7, 0.0102022, 0, 0, 0.500196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.329366,-99) , 
6, -0.557342, 1, 0, 0.423245,-99) , 
7, 0.0238055, 1, 0, 0.495503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363452,-99) , 
5, 0.997143, 0, 0, 0.491965,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0479276);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437986,-99) , 
7, 0.0237976, 1, 0, 0.508373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423565,-99) , 
2, -0.214155, 0, 0, 0.503942,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.439908,-99) , 
0, 0.502852, 1, 0, 0.496269,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0488269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476814,-99) , 
5, 0.999864, 0, 0, 0.510159,-99) , 
NN(
0, 
0, 
-1, 1.57688, 0, -1, 0.476535,-99) , 
0, 0.499043, 1, 0, 0.496477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384814,-99) , 
5, 0.997143, 0, 0, 0.49342,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0459166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484585,-99) , 
3, 1.61781, 0, 0, 0.499957,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.425514,-99) , 
7, 0.0237976, 1, 0, 0.49545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382368,-99) , 
5, 0.997143, 0, 0, 0.492396,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0402251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.03233, 1, 1, 0.525375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425624,-99) , 
3, 1.27598, 0, 0, 0.489026,-99) , 
6, -0.549039, 1, 0, 0.495934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383825,-99) , 
5, 0.997143, 0, 0, 0.492945,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0555829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714421, 1, 1, 0.567689,-99) , 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.490898,-99) , 
3, 1.89267, 0, 0, 0.500373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459883,-99) , 
3, 2.73873, 0, 0, 0.480555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354087,-99) , 
12, 1.54748, 1, 0, 0.457058,-99) , 
6, 0.260901, 1, 0, 0.490179,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0811751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.64227, 0, 1, 0.549985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468322,-99) , 
6, -0.706242, 1, 0, 0.500988,-99) , 
3, 1.08926, 0, 0, 0.522238,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478822,-99) , 
6, -0.0967945, 1, 0, 0.4948,-99) , 
NN(
0, 
0, 
-1, -1.41562, 0, -1, 0.348358,-99) , 
8, 1.52283, 0, 0, 0.480996,-99) , 
11, 1.17592, 0, 0, 0.496068,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0330506);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496331,-99) , 
7, 0.00906864, 0, 0, 0.505212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371946,-99) , 
6, -0.558999, 1, 0, 0.43999,-99) , 
7, 0.0238055, 1, 0, 0.501218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.388449,-99) , 
5, 0.997143, 0, 0, 0.498315,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0319261);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438194,-99) , 
7, 0.0238055, 1, 0, 0.501917,-99) , 
3, 2.71012, 0, 0, 0.505547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427319,-99) , 
4, 9.48998, 1, 0, 0.50168,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0327948);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498038,-99) , 
3, 2.14575, 0, 0, 0.504693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424776,-99) , 
3, 2.5522, 0, 0, 0.459791,-99) , 
6, 0.441008, 1, 0, 0.499288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401331,-99) , 
5, 0.997143, 0, 0, 0.4967,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0396116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464668,-99) , 
6, 0.44304, 1, 0, 0.506392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419858,-99) , 
10, -2.26531, 0, 0, 0.50388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.389041,-99) , 
10, 2.14279, 1, 0, 0.500989,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0518792);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488681,-99) , 
8, 1.96472, 0, 0, 0.500811,-99) , 
NN(
0, 
0, 
-1, 1.28476, 1, -1, 0.447704,-99) , 
6, 0.347106, 1, 0, 0.492636,-99) , 
3, 2.72286, 0, 0, 0.495914,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0466553);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469756,-99) , 
10, -1.04085, 0, 0, 0.506518,-99) , 
NN(
0, 
0, 
-1, 1.11214, 1, -1, 0.438319,-99) , 
7, 0.0237918, 1, 0, 0.502412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39228,-99) , 
10, 2.14275, 1, 0, 0.499628,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0531097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.65941, 1, 1, 0.532236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401862,-99) , 
3, 1.40884, 0, 0, 0.495537,-99) , 
11, 1.37565, 0, 0, 0.508136,-99) , 
NN(
0, 
0, 
-1, 0.503487, 1, -1, 0.473269,-99) , 
0, 0.500947, 1, 0, 0.499925,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0239104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455428,-99) , 
10, 1.28566, 1, 0, 0.4965,-99) , 
3, 2.69799, 0, 0, 0.49948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429122,-99) , 
4, 9.48998, 1, 0, 0.49601,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0458825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.61337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435407,-99) , 
5, 0.999861, 0, 0, 0.504505,-99) , 
8, 1.62158, 0, 0, 0.514013,-99) , 
NN(
0, 
0, 
-1, 1.29145, 0, -1, 0.481159,-99) , 
6, -0.280389, 1, 0, 0.493262,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0498249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486336,-99) , 
9, -951.286, 1, 0, 0.531213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477871,-99) , 
9, -951.286, 0, 0, 0.492254,-99) , 
12, -0.131994, 1, 0, 0.49739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406475,-99) , 
5, 0.997143, 0, 0, 0.495031,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0492524);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568686,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477514,-99) , 
3, 1.34678, 0, 0, 0.499076,-99) , 
NN(
0, 
0, 
-1, 0.999524, 1, -1, 0.438866,-99) , 
6, 0.436911, 1, 0, 0.492681,-99) , 
3, 2.72286, 0, 0, 0.495625,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.048342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486719,-99) , 
3, 1.17385, 0, 0, 0.509716,-99) , 
10, -0.999567, 1, 0, 0.521101,-99) , 
NN(
0, 
0, 
-1, 1.52283, 0, -1, 0.482324,-99) , 
11, 1.47943, 0, 0, 0.495475,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0397306);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492067,-99) , 
9, -951.286, 1, 0, 0.547731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472046,-99) , 
6, 0.0753966, 1, 0, 0.498603,-99) , 
3, 2.39439, 0, 0, 0.502969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408769,-99) , 
5, 0.997143, 0, 0, 0.500579,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0603556);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486357,-99) , 
3, 1.28934, 0, 0, 0.5157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470281,-99) , 
11, 1.98991, 0, 0, 0.483477,-99) , 
7, 0.00340075, 0, 0, 0.503476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374837,-99) , 
6, -0.55345, 1, 0, 0.448437,-99) , 
7, 0.0238055, 1, 0, 0.500126,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0509089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489006,-99) , 
6, 0.511946, 1, 0, 0.531848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47617,-99) , 
6, -0.213698, 1, 0, 0.495267,-99) , 
3, 2.09687, 0, 0, 0.502389,-99) , 
NN(
0, 
0, 
-1, 5.83352, 0, -1, 0.444637,-99) , 
7, 0.0238055, 1, 0, 0.498967,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.026596);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498561,-99) , 
8, 2.11937, 0, 0, 0.50607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444275,-99) , 
10, 1.85704, 1, 0, 0.50342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384253,-99) , 
4, 5.29267, 1, 0, 0.443222,-99) , 
2, -0.214108, 0, 0, 0.500033,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0276596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435274,-99) , 
7, 0.0238055, 1, 0, 0.502292,-99) , 
6, -0.818603, 1, 0, 0.504831,-99) , 
NN(
0, 
0, 
-1, 5.19089, 1, -1, 0.442915,-99) , 
2, -0.214175, 0, 0, 0.501279,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0418528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469011,-99) , 
8, 2.15239, 0, 0, 0.554112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496683,-99) , 
9, -951.286, 1, 0, 0.529383,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28562, 1, 1, 0.510752,-99) , 
NN(
0, 
0, 
-1, -1.28578, 0, -1, 0.478496,-99) , 
11, 1.00906, 0, 0, 0.493093,-99) , 
12, -0.0103555, 1, 0, 0.498738,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0511139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.200504, 1, 1, 0.528092,-99) , 
NN(
0, 
0, 
-1, 1.85709, 1, -1, 0.454493,-99) , 
10, 0.999955, 1, 0, 0.513317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457417,-99) , 
6, -0.223676, 1, 0, 0.49129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.3911,-99) , 
10, -2.14293, 0, 0, 0.486483,-99) , 
3, 1.61143, 0, 0, 0.498577,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0395677);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561806,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487379,-99) , 
3, 1.67103, 0, 0, 0.4989,-99) , 
NN(
0, 
0, 
-1, 0.428257, 1, -1, 0.446548,-99) , 
6, 0.519848, 1, 0, 0.495206,-99) , 
3, 2.73561, 0, 0, 0.497676,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0463401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481468,-99) , 
3, 1.29388, 0, 0, 0.50246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421069,-99) , 
9, -951.286, 0, 0, 0.467232,-99) , 
10, 1.28563, 1, 0, 0.498555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415627,-99) , 
5, 0.997143, 0, 0, 0.496414,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0310635);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498181,-99) , 
8, 1.77594, 0, 0, 0.508125,-99) , 
NN(
0, 
0, 
-1, 2.03125, 1, -1, 0.48134,-99) , 
6, 0.173374, 1, 0, 0.500484,-99) , 
NN(
0, 
0, 
-1, 5.20723, 1, -1, 0.443198,-99) , 
2, -0.214229, 0, 0, 0.497291,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0510676);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490761,-99) , 
12, 5.06195, 1, 0, 0.510285,-99) , 
10, -1.28542, 1, 0, 0.518584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49323,-99) , 
6, -0.168458, 1, 0, 0.502517,-99) , 
NN(
0, 
0, 
-1, -1.52587, 0, -1, 0.402461,-99) , 
8, 1.54756, 0, 0, 0.49099,-99) , 
11, 1.29567, 0, 0, 0.500807,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0369598);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.540632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49464,-99) , 
3, 1.498, 0, 0, 0.505861,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.465672,-99) , 
6, 0.257343, 1, 0, 0.498938,-99) , 
3, 2.40531, 0, 0, 0.502661,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0457216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498293,-99) , 
11, 8.18485, 1, 0, 0.51643,-99) , 
10, -0.999733, 1, 0, 0.530556,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406201,-99) , 
10, 1.85706, 1, 0, 0.506008,-99) , 
NN(
0, 
0, 
-1, -1.57164, 0, -1, 0.467452,-99) , 
3, 1.40866, 0, 0, 0.495311,-99) , 
6, -0.548901, 1, 0, 0.501858,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0446399);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999995, 0, 1, 0.539888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457603,-99) , 
5, 0.999905, 0, 0, 0.526839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491355,-99) , 
5, 0.999524, 1, 0, 0.498438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429175,-99) , 
4, 9.1881, 1, 0, 0.494513,-99) , 
6, -0.460254, 1, 0, 0.502331,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.027984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451193,-99) , 
7, 0.0237961, 1, 0, 0.505291,-99) , 
6, -0.819478, 1, 0, 0.507664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430928,-99) , 
5, 0.997143, 0, 0, 0.505687,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0422391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.593429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484989,-99) , 
9, -951.286, 1, 0, 0.512162,-99) , 
10, -1.28532, 1, 0, 0.51923,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411447,-99) , 
4, 9.20989, 1, 0, 0.49868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363189,-99) , 
13, 1.43152, 0, 0, 0.491462,-99) , 
11, 1.2855, 0, 0, 0.50136,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0351761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490349,-99) , 
8, 1.17087, 0, 0, 0.510927,-99) , 
10, -1.28533, 1, 0, 0.517838,-99) , 
NN(
0, 
0, 
-1, 1.26005, 0, -1, 0.487691,-99) , 
11, 1.34995, 0, 0, 0.498245,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0177692);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560515,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445925,-99) , 
7, 0.0237961, 1, 0, 0.49837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440573,-99) , 
4, 9.47659, 1, 0, 0.495553,-99) , 
6, -0.819488, 1, 0, 0.49827,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0276717);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459496,-99) , 
7, 0.00113314, 0, 0, 0.499094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446662,-99) , 
7, 0.0237961, 1, 0, 0.496441,-99) , 
6, -0.819478, 1, 0, 0.498903,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0424686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493363,-99) , 
8, 1.02412, 0, 0, 0.509133,-99) , 
10, -1.00058, 1, 0, 0.51887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486137,-99) , 
7, 0.0102016, 0, 0, 0.493446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401524,-99) , 
7, 0.0238055, 1, 0, 0.490354,-99) , 
6, -0.548648, 1, 0, 0.495615,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0347092);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483306,-99) , 
9, -951.286, 0, 0, 0.493589,-99) , 
3, 2.57593, 0, 0, 0.496402,-99) , 
6, -0.819852, 1, 0, 0.498751,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0326923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.724695, 1, 1, 0.548135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496607,-99) , 
12, 13.6278, 1, 0, 0.530337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492477,-99) , 
7, 0.0113358, 0, 0, 0.49792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419829,-99) , 
7, 0.0238055, 1, 0, 0.494946,-99) , 
6, -0.638973, 1, 0, 0.499664,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0306753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28549, 1, 1, 0.521854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387896,-99) , 
3, 1.25253, 0, 0, 0.49808,-99) , 
11, 1.2855, 0, 0, 0.506564,-99) , 
NN(
0, 
0, 
-1, 0.505256, 1, -1, 0.462204,-99) , 
0, 0.503804, 1, 0, 0.503013,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0324379);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472787,-99) , 
10, 1.57123, 1, 0, 0.513588,-99) , 
NN(
0, 
0, 
-1, 0.505476, 1, -1, 0.488325,-99) , 
0, 0.498635, 1, 0, 0.501892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443779,-99) , 
0, 0.490472, 0, 0, 0.499894,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0194221);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 13.8009, 1, 1, 0.53168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428965,-99) , 
7, 0.0238055, 1, 0, 0.497746,-99) , 
6, -0.64004, 1, 0, 0.502354,-99) , 
NN(
0, 
0, 
-1, -0.336671, 0, -1, 0.445825,-99) , 
2, -0.214229, 0, 0, 0.499192,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0302129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.527438,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490256,-99) , 
4, 1.0057, 1, 0, 0.495951,-99) , 
2, 0.0702367, 0, 0, 0.500574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455758,-99) , 
4, 9.21944, 1, 0, 0.498271,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0322948);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496852,-99) , 
5, 0.999993, 0, 0, 0.520168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446681,-99) , 
5, 0.999851, 0, 0, 0.510953,-99) , 
NN(
0, 
0, 
-1, 9.41063, 1, -1, 0.490579,-99) , 
6, -0.277866, 1, 0, 0.498145,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0242916);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471758,-99) , 
10, -1.00001, 0, 0, 0.49762,-99) , 
11, -3.17775, 1, 0, 0.500342,-99) , 
6, -0.819598, 1, 0, 0.502658,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0193603);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476627,-99) , 
6, 0.317208, 1, 0, 0.4974,-99) , 
6, -0.820251, 1, 0, 0.499722,-99) , 
3, 2.73561, 0, 0, 0.50187,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0255774);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548574,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478597,-99) , 
3, 1.28912, 0, 0, 0.497113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447605,-99) , 
7, 0.0238055, 1, 0, 0.49461,-99) , 
6, -0.820303, 1, 0, 0.496822,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0527745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473478,-99) , 
5, 0.999944, 0, 0, 0.514409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446054,-99) , 
5, 0.999607, 0, 0, 0.509785,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494044,-99) , 
3, 2.63175, 0, 0, 0.500931,-99) , 
NN(
0, 
0, 
-1, 1.46202, 1, -1, 0.426668,-99) , 
12, 1.84859, 1, 0, 0.485519,-99) , 
6, -0.00726373, 1, 0, 0.499617,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0273949);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47477,-99) , 
9, -951.286, 1, 0, 0.523303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477436,-99) , 
6, 0.0648777, 1, 0, 0.494866,-99) , 
3, 2.24654, 0, 0, 0.498532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452454,-99) , 
10, 1.8571, 1, 0, 0.496549,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0688616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494222,-99) , 
9, -951.286, 1, 0, 0.517399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439578,-99) , 
12, 2.16581, 1, 0, 0.509722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480996,-99) , 
9, -951.286, 1, 0, 0.507994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437522,-99) , 
9, -951.286, 0, 0, 0.468826,-99) , 
11, 1.46781, 0, 0, 0.48918,-99) , 
3, 1.7775, 0, 0, 0.496293,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0382035);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483801,-99) , 
5, 0.999524, 1, 0, 0.501172,-99) , 
6, 0.373796, 1, 0, 0.518056,-99) , 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.510439,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.480525,-99) , 
9, -951.286, 0, 0, 0.491543,-99) , 
8, 2.35615, 0, 0, 0.496186,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0321647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482382,-99) , 
10, 0.7142, 1, 0, 0.507206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.383931,-99) , 
12, 2.08649, 0, 0, 0.489596,-99) , 
3, 1.29844, 0, 0, 0.501157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44863,-99) , 
5, 0.997619, 0, 0, 0.499554,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0444057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537923,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489015,-99) , 
9, -951.286, 1, 0, 0.516605,-99) , 
NN(
0, 
0, 
-1, 2.12466, 1, -1, 0.466434,-99) , 
12, 1.70247, 1, 0, 0.507954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48829,-99) , 
3, 1.10833, 0, 0, 0.500458,-99) , 
NN(
0, 
0, 
-1, 1.59329, 0, -1, 0.466676,-99) , 
11, 0.486536, 0, 0, 0.489062,-99) , 
3, 1.7775, 0, 0, 0.495595,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0266846);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.627762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469469,-99) , 
9, -951.286, 0, 0, 0.53319,-99) , 
NN(
0, 
0, 
-1, 0.623879, 1, -1, 0.495974,-99) , 
5, 0.999524, 1, 0, 0.500324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454086,-99) , 
4, 9.48998, 1, 0, 0.498107,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0108343);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543218,-99) , 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.496037,-99) , 
3, 2.73561, 0, 0, 0.497784,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0300593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.517433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477491,-99) , 
6, -0.257416, 1, 0, 0.493712,-99) , 
3, 1.76294, 0, 0, 0.502022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461703,-99) , 
4, 9.47906, 1, 0, 0.500065,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0243087);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4714,-99) , 
7, 0.00113321, 0, 0, 0.50163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456109,-99) , 
7, 0.0237976, 1, 0, 0.499298,-99) , 
6, -0.820094, 1, 0, 0.500947,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0230811);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448764,-99) , 
5, 0.999524, 0, 0, 0.504496,-99) , 
9, -951.286, 0, 0, 0.52269,-99) , 
NN(
0, 
0, 
-1, -0.302583, 0, -1, 0.494006,-99) , 
2, 0.0715316, 0, 0, 0.498503,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0376692);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455461,-99) , 
4, 9.33986, 1, 0, 0.509579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445553,-99) , 
10, 1.85704, 1, 0, 0.50643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489575,-99) , 
10, -1.2852, 1, 0, 0.496997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405429,-99) , 
12, 2.08649, 0, 0, 0.487627,-99) , 
3, 1.29844, 0, 0, 0.500142,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0155775);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.73824, 0, 1, 0.527167,-99) , 
NN(
0, 
0, 
-1, 0.0237976, 1, -1, 0.495661,-99) , 
6, -0.72888, 1, 0, 0.498371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441342,-99) , 
0, 0.505709, 1, 0, 0.496753,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0150127);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999864, 0, 1, 0.522907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455811,-99) , 
6, 0.623401, 1, 0, 0.499578,-99) , 
2, 0.0716753, 0, 0, 0.503054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453313,-99) , 
5, 0.997143, 0, 0, 0.501776,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0327683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.267316, 1, 1, 0.549127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471667,-99) , 
3, 2.68697, 0, 0, 0.4924,-99) , 
6, 0.488133, 1, 0, 0.52036,-99) , 
NN(
NN(
0, 
0, 
-1, -0.999653, 1, 1, 0.515004,-99) , 
NN(
0, 
0, 
-1, 1.37032, 0, -1, 0.48757,-99) , 
11, 1.91454, 0, 0, 0.497391,-99) , 
3, 2.23605, 0, 0, 0.500496,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0208635);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498153,-99) , 
11, 2.07231, 0, 0, 0.502466,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452098,-99) , 
6, -0.596235, 1, 0, 0.479495,-99) , 
3, 1.13511, 0, 0, 0.49777,-99) , 
6, -0.819478, 1, 0, 0.499339,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0423979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.247054, 1, 1, 0.516597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448375,-99) , 
10, 1.57141, 1, 0, 0.510981,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481508,-99) , 
9, -951.286, 1, 0, 0.500867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.406565,-99) , 
12, 1.75545, 0, 0, 0.491263,-99) , 
8, 1.53909, 0, 0, 0.503226,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0124848);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499401,-99) , 
3, 2.17839, 0, 0, 0.502657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472196,-99) , 
6, 0.621129, 1, 0, 0.50103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451997,-99) , 
0, 0.505709, 1, 0, 0.499612,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0266923);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495998,-99) , 
9, -951.286, 1, 0, 0.523555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476351,-99) , 
10, -0.714302, 0, 0, 0.499752,-99) , 
12, -0.0509712, 1, 0, 0.5033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452588,-99) , 
0, 0.505709, 1, 0, 0.501828,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0227413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.21525, 1, 1, 0.515475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489216,-99) , 
9, -951.286, 0, 0, 0.496,-99) , 
12, -0.0509712, 1, 0, 0.498871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455773,-99) , 
0, 0.505709, 1, 0, 0.497625,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0132383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46908,-99) , 
6, 0.62449, 1, 0, 0.50126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455575,-99) , 
1, 0.0253539, 1, 0, 0.499994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442407,-99) , 
5, 0.997143, 0, 0, 0.498543,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0178438);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498592,-99) , 
8, 2.6283, 0, 0, 0.500962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444871,-99) , 
5, 0.999524, 1, 0, 0.475332,-99) , 
6, 0.534236, 1, 0, 0.49873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454047,-99) , 
0, 0.490471, 0, 0, 0.497163,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0147647);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4975,-99) , 
6, -0.655991, 1, 0, 0.499655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465287,-99) , 
11, 11.9666, 1, 0, 0.497632,-99) , 
6, -0.81928, 1, 0, 0.499135,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.024222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.14415, 1, 1, 0.509263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441697,-99) , 
11, 1.67524, 0, 0, 0.490499,-99) , 
3, 1.33797, 0, 0, 0.502127,-99) , 
NN(
0, 
0, 
-1, 0.143892, 1, -1, 0.465859,-99) , 
6, 0.616521, 1, 0, 0.500158,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0306583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499023,-99) , 
5, 0.999524, 1, 0, 0.505758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441876,-99) , 
4, 9.50668, 1, 0, 0.502465,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491114,-99) , 
10, -1.28621, 1, 0, 0.501226,-99) , 
NN(
0, 
0, 
-1, -1.28607, 0, -1, 0.458231,-99) , 
6, -0.487539, 1, 0, 0.485401,-99) , 
3, 1.29844, 0, 0, 0.496771,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0169975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.26407, 0, 1, 0.505035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451141,-99) , 
5, 0.999773, 1, 0, 0.47545,-99) , 
6, 0.534213, 1, 0, 0.502736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458292,-99) , 
5, 0.997619, 0, 0, 0.501395,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0270365);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439683,-99) , 
12, 2.50008, 1, 0, 0.505719,-99) , 
NN(
0, 
0, 
-1, 1.00036, 0, -1, 0.491877,-99) , 
8, 1.72135, 0, 0, 0.4985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449719,-99) , 
5, 0.997143, 0, 0, 0.49726,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0342789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.131411, 1, 1, 0.52167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446585,-99) , 
12, 1.66777, 0, 0, 0.498484,-99) , 
8, 1.69447, 0, 0, 0.505587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464903,-99) , 
4, 4.79747, 1, 0, 0.49634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427265,-99) , 
12, 2.01347, 1, 0, 0.487527,-99) , 
6, 0.172856, 1, 0, 0.500306,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0207885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499406,-99) , 
8, 2.34365, 0, 0, 0.502504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467554,-99) , 
5, 0.999524, 1, 0, 0.484459,-99) , 
6, 0.353237, 1, 0, 0.499229,-99) , 
NN(
0, 
0, 
-1, 0.16556, 0, -1, 0.469548,-99) , 
0, 0.503804, 1, 0, 0.496852,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0202429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487541,-99) , 
6, 0.0728948, 1, 0, 0.499257,-99) , 
3, 2.73561, 0, 0, 0.500745,-99) , 
NN(
0, 
0, 
-1, -0.103892, 1, -1, 0.466633,-99) , 
0, 0.491424, 0, 0, 0.498867,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0248838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495906,-99) , 
6, -0.120099, 1, 0, 0.503345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438912,-99) , 
11, 1.90282, 0, 0, 0.490572,-99) , 
3, 1.29844, 0, 0, 0.499023,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418549,-99) , 
4, 5.19089, 1, 0, 0.461224,-99) , 
2, -0.214175, 0, 0, 0.496918,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0212097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495246,-99) , 
3, 1.60476, 0, 0, 0.502866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452822,-99) , 
0, 0.490063, 0, 0, 0.50139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462784,-99) , 
0, 0.504757, 1, 0, 0.499437,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0340367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.63409, 1, 1, 0.520867,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404764,-99) , 
8, 1.54888, 0, 0, 0.496299,-99) , 
11, 0.444973, 0, 0, 0.50477,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472559,-99) , 
12, 14.0078, 1, 0, 0.506431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45538,-99) , 
6, -0.685939, 1, 0, 0.485577,-99) , 
12, 6.30337, 1, 0, 0.501558,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0218789);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498971,-99) , 
4, 8.41691, 0, 0, 0.504561,-99) , 
NN(
0, 
0, 
-1, 1.29847, 0, -1, 0.483829,-99) , 
5, 0.999932, 0, 0, 0.498087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462688,-99) , 
5, 0.998571, 0, 0, 0.496271,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0118833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.834, 0, 1, 0.502425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418152,-99) , 
4, 11.5537, 1, 0, 0.500185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468061,-99) , 
6, 0.624476, 1, 0, 0.498539,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0178454);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497745,-99) , 
3, 2.11338, 0, 0, 0.500503,-99) , 
NN(
0, 
0, 
-1, 2.58732, 0, -1, 0.470448,-99) , 
6, 0.533665, 1, 0, 0.497984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41243,-99) , 
4, 5.28158, 1, 0, 0.458827,-99) , 
2, -0.213937, 0, 0, 0.49581,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0111475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.51828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457885,-99) , 
2, -0.302661, 0, 0, 0.498703,-99) , 
2, 0.0714698, 0, 0, 0.501641,-99) , 
NN(
0, 
0, 
-1, -0.104407, 1, -1, 0.470635,-99) , 
0, 0.491424, 0, 0, 0.499959,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.017888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26659, 0, 1, 0.50534,-99) , 
NN(
0, 
0, 
-1, 1.28522, 0, -1, 0.486649,-99) , 
5, 0.999909, 0, 0, 0.500169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45491,-99) , 
5, 0.998095, 0, 0, 0.498497,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0214246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496476,-99) , 
2, 0.071499, 0, 0, 0.500164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448658,-99) , 
5, 0.998572, 0, 0, 0.498263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517064,-99) , 
NN(
0, 
0, 
-1, 0.630831, 1, -1, 0.44908,-99) , 
5, 0.999524, 1, 0, 0.472128,-99) , 
6, 0.528109, 1, 0, 0.495914,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0374592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444497,-99) , 
12, 2.90401, 1, 0, 0.515724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429878,-99) , 
12, 1.50731, 0, 0, 0.496136,-99) , 
8, 1.63416, 0, 0, 0.503169,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484242,-99) , 
5, 0.999524, 1, 0, 0.493776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420479,-99) , 
12, 2.31097, 1, 0, 0.487416,-99) , 
6, 0.173347, 1, 0, 0.498576,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0132891);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544268,-99) , 
NN(
0, 
0, 
-1, 0.0237961, 1, -1, 0.496635,-99) , 
6, -0.729128, 1, 0, 0.499116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465156,-99) , 
12, 14.5391, 1, 0, 0.497786,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0144574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.00611, 0, 1, 0.503633,-99) , 
NN(
0, 
0, 
-1, -0.52067, 1, -1, 0.485862,-99) , 
3, 1.13511, 0, 0, 0.499305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452811,-99) , 
5, 0.997143, 0, 0, 0.49813,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0131306);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529938,-99) , 
NN(
0, 
0, 
-1, -0.21414, 0, -1, 0.496392,-99) , 
3, 2.68205, 0, 0, 0.497848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459137,-99) , 
0, 0.504757, 1, 0, 0.495902,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0213758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48748,-99) , 
5, 0.999728, 0, 0, 0.506111,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491468,-99) , 
4, 9.2711, 0, 0, 0.493693,-99) , 
0, 0.498091, 1, 0, 0.499834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459212,-99) , 
5, 0.997143, 0, 0, 0.498805,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0100256);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499346,-99) , 
6, -0.729712, 1, 0, 0.501464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465161,-99) , 
12, 14.5238, 1, 0, 0.500011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455591,-99) , 
5, 0.997143, 0, 0, 0.498888,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0204175);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496877,-99) , 
8, 1.70374, 0, 0, 0.504554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468382,-99) , 
5, 0.999728, 1, 0, 0.483127,-99) , 
6, 0.531062, 1, 0, 0.502829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455674,-99) , 
5, 0.997143, 0, 0, 0.501646,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0336218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.716557, 0, 1, 0.546956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457681,-99) , 
5, 0.999862, 0, 0, 0.500333,-99) , 
8, 1.41543, 0, 0, 0.510796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492265,-99) , 
5, 0.999524, 1, 0, 0.499126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432726,-99) , 
4, 9.34658, 1, 0, 0.495525,-99) , 
6, -0.278344, 1, 0, 0.501218,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0238907);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495017,-99) , 
3, 1.13147, 0, 0, 0.507314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477594,-99) , 
2, 0.0716258, 0, 0, 0.486178,-99) , 
0, 0.502716, 1, 0, 0.504607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463363,-99) , 
0, 0.490471, 0, 0, 0.503178,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0157302);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498341,-99) , 
6, -0.492854, 1, 0, 0.50235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471116,-99) , 
3, 0.815651, 0, 0, 0.500337,-99) , 
6, -0.819478, 1, 0, 0.501718,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0337909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27614, 0, 1, 0.508741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474884,-99) , 
3, 1.43633, 0, 0, 0.492777,-99) , 
5, 0.999955, 0, 0, 0.502855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382606,-99) , 
9, -951.286, 0, 0, 0.472108,-99) , 
5, 0.999048, 0, 0, 0.500628,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0159715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.69748, 1, 1, 0.51895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490871,-99) , 
6, -0.101856, 1, 0, 0.497741,-99) , 
12, -0.205938, 1, 0, 0.500302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458324,-99) , 
5, 0.997619, 0, 0, 0.499064,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0123921);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497763,-99) , 
2, 0.0715065, 0, 0, 0.50024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464779,-99) , 
0, 0.490063, 0, 0, 0.499179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471136,-99) , 
0, 0.504757, 1, 0, 0.497763,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0312747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492645,-99) , 
12, 4.24281, 1, 0, 0.526143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487545,-99) , 
8, 1.74789, 0, 0, 0.499001,-99) , 
7, 0.0124624, 0, 0, 0.502123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414118,-99) , 
6, -0.55345, 1, 0, 0.47101,-99) , 
7, 0.0237918, 1, 0, 0.500269,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0188812);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481674,-99) , 
2, -0.0711318, 0, 0, 0.50911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488251,-99) , 
8, 1.31488, 0, 0, 0.498292,-99) , 
0, 0.497591, 1, 0, 0.502745,-99) , 
NN(
0, 
0, 
-1, -0.143293, 0, -1, 0.477173,-99) , 
0, 0.491424, 0, 0, 0.501339,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0258579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.36077, 1, 1, 0.518973,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480451,-99) , 
6, -0.605747, 1, 0, 0.494657,-99) , 
3, 1.19542, 0, 0, 0.50586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440716,-99) , 
4, 9.29069, 1, 0, 0.497985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424243,-99) , 
8, 1.61192, 0, 0, 0.491829,-99) , 
11, 0.178998, 0, 0, 0.498711,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0301302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48873,-99) , 
5, 0.99998, 0, 0, 0.504795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461866,-99) , 
5, 0.999582, 0, 0, 0.502053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483328,-99) , 
3, 1.98227, 0, 0, 0.493881,-99) , 
NN(
0, 
0, 
-1, 1.57397, 1, -1, 0.451901,-99) , 
12, 2.14084, 1, 0, 0.487406,-99) , 
6, -0.00756051, 1, 0, 0.4959,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0280667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499389,-99) , 
10, -0.999604, 1, 0, 0.507953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426631,-99) , 
8, 1.42296, 0, 0, 0.494585,-99) , 
11, 2.05619, 0, 0, 0.500264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484454,-99) , 
12, -1.13491, 1, 0, 0.489082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426518,-99) , 
3, 1.68138, 0, 0, 0.483143,-99) , 
6, 0.169275, 1, 0, 0.495233,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0203519);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.04118, 1, 1, 0.505915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465545,-99) , 
12, 14.1252, 1, 0, 0.502784,-99) , 
NN(
0, 
0, 
-1, 1.61156, 0, -1, 0.487365,-99) , 
11, -0.174817, 0, 0, 0.495784,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.030816);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496497,-99) , 
11, 1.81433, 0, 0, 0.510686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484025,-99) , 
10, -1.0005, 1, 0, 0.49294,-99) , 
3, 1.0528, 0, 0, 0.503391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454573,-99) , 
12, 1.85655, 1, 0, 0.496639,-99) , 
NN(
0, 
0, 
-1, 1.5877, 0, -1, 0.445026,-99) , 
8, 1.6913, 0, 0, 0.489373,-99) , 
11, 0.288579, 0, 0, 0.496041,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0239278);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492729,-99) , 
6, -0.492763, 1, 0, 0.496842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465361,-99) , 
3, 0.817558, 0, 0, 0.494815,-99) , 
6, -0.819369, 1, 0, 0.496384,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0138439);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493284,-99) , 
5, 0.999864, 0, 0, 0.512838,-99) , 
NN(
0, 
0, 
-1, 0.346479, 1, -1, 0.496316,-99) , 
2, 0.0714505, 0, 0, 0.498786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458571,-99) , 
5, 0.997143, 0, 0, 0.497777,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0248687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.4262, 0, 1, 0.517784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478452,-99) , 
6, -0.671789, 1, 0, 0.494423,-99) , 
12, 5.80903, 1, 0, 0.508795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440311,-99) , 
4, 9.5134, 1, 0, 0.49818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425395,-99) , 
13, 1.56515, 0, 0, 0.493093,-99) , 
11, 0.288579, 0, 0, 0.500582,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0109473);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486082,-99) , 
8, 1.48961, 0, 0, 0.530165,-99) , 
NN(
0, 
0, 
-1, 0.0241607, 1, -1, 0.498308,-99) , 
10, -1.85714, 1, 0, 0.500184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471637,-99) , 
5, 0.998572, 0, 0, 0.498731,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0178719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.2857, 1, 1, 0.510401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493984,-99) , 
12, -0.947955, 1, 0, 0.496139,-99) , 
6, -0.459528, 1, 0, 0.499591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462839,-99) , 
0, 0.505709, 1, 0, 0.498544,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0425825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48528,-99) , 
5, 0.999524, 1, 0, 0.497064,-99) , 
10, -1.2847, 1, 0, 0.507051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440462,-99) , 
10, 1.57132, 1, 0, 0.501106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411373,-99) , 
5, 0.999048, 0, 0, 0.494584,-99) , 
9, -951.286, 0, 0, 0.499387,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0296608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407145,-99) , 
5, 0.999728, 0, 0, 0.510911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493646,-99) , 
4, 0.565435, 1, 0, 0.496611,-99) , 
4, 4.69428, 0, 0, 0.499531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463959,-99) , 
5, 0.998095, 0, 0, 0.498225,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0354823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.614176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491223,-99) , 
10, -0.999857, 1, 0, 0.501223,-99) , 
5, 0.999048, 1, 0, 0.509795,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444845,-99) , 
10, -1.85714, 0, 0, 0.501451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418612,-99) , 
5, 0.999048, 0, 0, 0.495459,-99) , 
9, -951.286, 0, 0, 0.500976,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.031562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493227,-99) , 
10, -0.999857, 1, 0, 0.502171,-99) , 
5, 0.999048, 1, 0, 0.510909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46293,-99) , 
10, 1.28567, 1, 0, 0.498651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423372,-99) , 
5, 0.999048, 0, 0, 0.493203,-99) , 
9, -951.286, 0, 0, 0.499999,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0283891);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.28529, 0, 1, 0.513522,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427061,-99) , 
10, 1.77545, 1, 0, 0.496383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418977,-99) , 
3, 1.58699, 0, 0, 0.452982,-99) , 
10, -1.28572, 0, 0, 0.489641,-99) , 
9, -951.286, 0, 0, 0.498803,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.029505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602572,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494025,-99) , 
10, 0.996195, 0, 0, 0.50227,-99) , 
5, 0.999048, 1, 0, 0.509928,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.48804,-99) , 
9, -951.286, 0, 0, 0.496449,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0390295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450185,-99) , 
6, 0.435356, 1, 0, 0.503444,-99) , 
5, 0.999524, 1, 0, 0.512566,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488588,-99) , 
12, -0.205938, 1, 0, 0.493665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41978,-99) , 
5, 0.998571, 0, 0, 0.489953,-99) , 
9, -951.286, 0, 0, 0.498676,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0217786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494853,-99) , 
12, 3.33211, 1, 0, 0.502359,-99) , 
10, -1.28561, 1, 0, 0.506265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432302,-99) , 
4, 9.49028, 1, 0, 0.49722,-99) , 
NN(
0, 
0, 
-1, -0.313514, 1, -1, 0.439045,-99) , 
8, 1.51093, 0, 0, 0.492421,-99) , 
11, 1.17592, 0, 0, 0.497548,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0296578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576804,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457973,-99) , 
3, 2.0787, 1, 0, 0.498314,-99) , 
5, 0.999524, 1, 0, 0.508044,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460686,-99) , 
10, 1.28562, 1, 0, 0.497096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437855,-99) , 
5, 0.999048, 0, 0, 0.492785,-99) , 
9, -951.286, 0, 0, 0.498644,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0272663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.85192, 1, 1, 0.513419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481851,-99) , 
6, -0.60373, 1, 0, 0.497972,-99) , 
3, 1.19892, 0, 0, 0.505655,-99) , 
NN(
0, 
0, 
-1, 1.62136, 0, -1, 0.486579,-99) , 
11, -0.119757, 0, 0, 0.496856,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0324756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476417,-99) , 
3, 0.966747, 0, 0, 0.505577,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468103,-99) , 
9, -951.286, 0, 0, 0.483316,-99) , 
7, 0.00226628, 0, 0, 0.49985,-99) , 
NN(
0, 
0, 
-1, 0.024057, 1, -1, 0.471338,-99) , 
7, 0.0237961, 1, 0, 0.498151,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0298576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.589557,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490261,-99) , 
10, 1.00012, 0, 0, 0.498185,-99) , 
5, 0.999048, 1, 0, 0.50507,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470001,-99) , 
10, -1.00002, 0, 0, 0.493467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42289,-99) , 
5, 0.999048, 0, 0, 0.488489,-99) , 
9, -951.286, 0, 0, 0.494873,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0263332);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496378,-99) , 
12, 4.65372, 1, 0, 0.508172,-99) , 
NN(
0, 
0, 
-1, 1.47548, 0, -1, 0.487733,-99) , 
11, 1.49931, 0, 0, 0.494921,-99) , 
3, 2.73561, 0, 0, 0.496192,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0351947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493145,-99) , 
10, -0.998179, 1, 0, 0.501511,-99) , 
5, 0.999524, 1, 0, 0.509954,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487815,-99) , 
11, 3.59848, 0, 0, 0.494124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440548,-99) , 
5, 0.999048, 0, 0, 0.49025,-99) , 
9, -951.286, 0, 0, 0.497836,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0344254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494852,-99) , 
5, 0.999524, 1, 0, 0.501932,-99) , 
10, 1.28624, 0, 0, 0.509422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485857,-99) , 
11, 1.17592, 0, 0, 0.496144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425324,-99) , 
5, 0.998571, 0, 0, 0.492654,-99) , 
9, -951.286, 0, 0, 0.499135,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0289632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497974,-99) , 
10, -1.16111, 1, 0, 0.50477,-99) , 
10, 1.28657, 0, 0, 0.512133,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491745,-99) , 
12, 1.02485, 1, 0, 0.499013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439424,-99) , 
10, -1.85715, 0, 0, 0.495059,-99) , 
9, -951.286, 0, 0, 0.501603,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0245814);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499684,-99) , 
10, -1.16297, 1, 0, 0.506433,-99) , 
10, 1.28581, 0, 0, 0.512329,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492822,-99) , 
11, 1.17592, 0, 0, 0.500223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437408,-99) , 
5, 0.998571, 0, 0, 0.497099,-99) , 
9, -951.286, 0, 0, 0.502938,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0326743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473971,-99) , 
6, 0.444041, 1, 0, 0.509278,-99) , 
5, 0.999048, 1, 0, 0.514875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479803,-99) , 
10, 0.714245, 1, 0, 0.500726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446551,-99) , 
5, 0.999048, 0, 0, 0.496872,-99) , 
9, -951.286, 0, 0, 0.503779,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0328658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485058,-99) , 
13, 2.01677, 1, 0, 0.505481,-99) , 
5, 0.999524, 1, 0, 0.511873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49214,-99) , 
3, 2.06157, 0, 0, 0.498546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43538,-99) , 
5, 0.998572, 0, 0, 0.495453,-99) , 
9, -951.286, 0, 0, 0.501765,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0333681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.301504, 1, 1, 0.509689,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478695,-99) , 
10, 0.520214, 0, 0, 0.489123,-99) , 
3, 0.969121, 0, 0, 0.506323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448163,-99) , 
8, 1.88147, 0, 0, 0.470238,-99) , 
9, -951.286, 0, 0, 0.488886,-99) , 
10, -1.00002, 0, 0, 0.502887,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0205173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568431,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497613,-99) , 
4, 4.70374, 0, 0, 0.503939,-99) , 
5, 0.999048, 1, 0, 0.508799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427592,-99) , 
10, -2.07483, 0, 0, 0.499509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440463,-99) , 
10, 1.85709, 1, 0, 0.496732,-99) , 
9, -951.286, 0, 0, 0.501365,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0191094);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541454,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486007,-99) , 
11, -1.96028, 0, 0, 0.502774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477628,-99) , 
12, 13.1375, 1, 0, 0.501479,-99) , 
10, -2.14286, 1, 0, 0.502858,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0170638);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.25157, 1, 1, 0.531059,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469023,-99) , 
7, 0.0237823, 1, 0, 0.501521,-99) , 
NN(
0, 
0, 
-1, 0.494281, 0, -1, 0.483876,-99) , 
10, -0.931984, 0, 0, 0.498536,-99) , 
10, -1.85715, 1, 0, 0.500407,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0148341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28525, 1, 1, 0.507925,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.495239,-99) , 
9, -951.286, 0, 0, 0.500116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465488,-99) , 
0, 0.504757, 1, 0, 0.49837,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0244594);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491337,-99) , 
3, 1.28933, 0, 0, 0.502861,-99) , 
NN(
0, 
0, 
-1, 0.000647799, 0, -1, 0.475405,-99) , 
7, 0.00113361, 0, 0, 0.499291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434346,-99) , 
6, -0.556096, 1, 0, 0.478048,-99) , 
7, 0.0238056, 1, 0, 0.497999,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0109144);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462246,-99) , 
3, 0.819379, 0, 0, 0.498883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464269,-99) , 
7, 0.0237918, 1, 0, 0.497132,-99) , 
6, -0.819543, 1, 0, 0.498255,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0162673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499576,-99) , 
10, 1.0007, 0, 0, 0.506403,-99) , 
NN(
0, 
0, 
-1, 0.998572, 0, -1, 0.492894,-99) , 
9, -951.286, 0, 0, 0.498071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456126,-99) , 
1, 0.0247997, 1, 0, 0.496904,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0295779);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484511,-99) , 
12, 2.97217, 1, 0, 0.504806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486184,-99) , 
11, 1.29567, 0, 0, 0.494506,-99) , 
9, -951.286, 0, 0, 0.498437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467721,-99) , 
1, 0.0243999, 1, 0, 0.497562,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0106336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462241,-99) , 
7, 0.0237961, 1, 0, 0.499365,-99) , 
6, -0.729225, 1, 0, 0.501299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472891,-99) , 
12, 14.4518, 1, 0, 0.500173,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.00808503);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52198,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45691,-99) , 
7, 0.0238055, 1, 0, 0.498395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476204,-99) , 
3, 0.819381, 0, 0, 0.496952,-99) , 
6, -0.819369, 1, 0, 0.497994,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0139561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498468,-99) , 
3, 2.13656, 0, 0, 0.500913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450453,-99) , 
4, 11.0971, 1, 0, 0.499491,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51209,-99) , 
NN(
0, 
0, 
-1, 0.636811, 1, -1, 0.463151,-99) , 
5, 0.999524, 1, 0, 0.479916,-99) , 
6, 0.533724, 1, 0, 0.497778,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0201485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49647,-99) , 
10, -1.2852, 1, 0, 0.499397,-99) , 
12, 2.13835, 1, 0, 0.502837,-99) , 
NN(
0, 
0, 
-1, 1.54888, 0, -1, 0.488738,-99) , 
11, 0.178998, 0, 0, 0.495688,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0164385);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497265,-99) , 
9, -951.286, 0, 0, 0.524935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497839,-99) , 
10, -1.57146, 1, 0, 0.50086,-99) , 
5, 0.999524, 1, 0, 0.503612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476539,-99) , 
4, 9.46687, 1, 0, 0.502335,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0134708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468596,-99) , 
11, 9.33821, 1, 0, 0.501593,-99) , 
6, -0.7285, 1, 0, 0.50332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477543,-99) , 
12, 14.0282, 1, 0, 0.502217,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.015421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49976,-99) , 
6, 0.0826475, 1, 0, 0.508165,-99) , 
NN(
0, 
0, 
-1, 0.504349, 1, -1, 0.494475,-99) , 
0, 0.497818, 1, 0, 0.500623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466623,-99) , 
0, 0.490471, 0, 0, 0.499446,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0161979);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496117,-99) , 
7, 0.0135896, 0, 0, 0.499041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474839,-99) , 
7, 0.0237823, 1, 0, 0.497807,-99) , 
6, -0.819369, 1, 0, 0.499183,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0165849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.53065, 0, 1, 0.506301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469217,-99) , 
5, 0.998572, 0, 0, 0.504954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507604,-99) , 
NN(
0, 
0, 
-1, 0.633663, 1, -1, 0.474014,-99) , 
5, 0.999524, 1, 0, 0.485413,-99) , 
6, 0.533197, 1, 0, 0.50324,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0150129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471069,-99) , 
2, 0.275612, 1, 0, 0.503468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482605,-99) , 
2, -0.213939, 0, 0, 0.502398,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506841,-99) , 
NN(
0, 
0, 
-1, 0.00312449, 0, -1, 0.477176,-99) , 
2, -0.0716886, 1, 0, 0.484656,-99) , 
0, 0.502852, 1, 0, 0.500304,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.00692122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499463,-99) , 
5, 0.998572, 1, 0, 0.500606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471888,-99) , 
0, 0.490199, 0, 0, 0.499708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462001,-99) , 
0, 0.505709, 1, 0, 0.498642,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0114492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0750245, 1, 1, 0.52366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465138,-99) , 
1, 0.0241607, 1, 0, 0.501725,-99) , 
10, -1.85715, 1, 0, 0.502982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467046,-99) , 
5, 0.997619, 0, 0, 0.501947,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.00830516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49894,-99) , 
3, 2.3335, 0, 0, 0.500379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476692,-99) , 
6, 0.624476, 1, 0, 0.499322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466153,-99) , 
5, 0.997619, 0, 0, 0.49837,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0126496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483103,-99) , 
8, 1.43675, 0, 0, 0.523016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48606,-99) , 
10, -1.16326, 0, 0, 0.500161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464928,-99) , 
0, 0.490471, 0, 0, 0.498956,-99) , 
10, -1.85714, 1, 0, 0.500326,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0167732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493355,-99) , 
4, 4.77432, 1, 0, 0.511171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49351,-99) , 
6, -0.27826, 1, 0, 0.497825,-99) , 
2, 0.0715926, 0, 0, 0.499902,-99) , 
10, -2.14286, 1, 0, 0.500874,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0208662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475186,-99) , 
8, 1.44926, 0, 0, 0.518572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496567,-99) , 
11, 0.654585, 0, 0, 0.502625,-99) , 
NN(
0, 
0, 
-1, 1.56994, 1, -1, 0.491329,-99) , 
12, 3.23017, 1, 0, 0.498796,-99) , 
10, -1.85715, 1, 0, 0.499905,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0156135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478325,-99) , 
3, 1.3515, 0, 0, 0.521125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493883,-99) , 
12, 2.75866, 1, 0, 0.499639,-99) , 
10, -1.85716, 1, 0, 0.500881,-99) , 
3, 2.73561, 0, 0, 0.502073,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0189417);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.91164, 0, 1, 0.504705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48767,-99) , 
5, 0.999048, 1, 0, 0.50167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462739,-99) , 
4, 4.86932, 1, 0, 0.493604,-99) , 
6, 0.263474, 1, 0, 0.502129,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.00939387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468515,-99) , 
11, 9.77728, 1, 0, 0.499281,-99) , 
6, -0.729128, 1, 0, 0.501489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477793,-99) , 
12, 14.5391, 1, 0, 0.500561,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0198074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499215,-99) , 
6, 0.441331, 0, 0, 0.524378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494104,-99) , 
10, -1.8571, 1, 0, 0.495748,-99) , 
5, 0.999524, 1, 0, 0.499021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471579,-99) , 
4, 9.47969, 1, 0, 0.497738,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0208679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496702,-99) , 
10, -0.999703, 1, 0, 0.501505,-99) , 
5, 0.999524, 1, 0, 0.507743,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496689,-99) , 
12, 0.0182157, 1, 0, 0.500613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45481,-99) , 
5, 0.999048, 0, 0, 0.497357,-99) , 
9, -951.286, 0, 0, 0.501354,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0143958);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471327,-99) , 
7, 0.0238055, 1, 0, 0.503272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483218,-99) , 
3, 0.81939, 0, 0, 0.501968,-99) , 
6, -0.819005, 1, 0, 0.503051,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0100125);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.1244, 0, 1, 0.50416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478806,-99) , 
5, 0.998571, 0, 0, 0.502902,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0216167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.708739, 0, 1, 0.512544,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486635,-99) , 
6, -0.10192, 1, 0, 0.499052,-99) , 
12, 1.57144, 1, 0, 0.503727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52216,-99) , 
NN(
0, 
0, 
-1, 1.32323, 0, -1, 0.486326,-99) , 
12, 3.23687, 0, 0, 0.493026,-99) , 
10, -0.714311, 0, 0, 0.50074,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0196661);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491602,-99) , 
12, 12.9953, 1, 0, 0.513823,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494353,-99) , 
11, 2.23023, 0, 0, 0.497601,-99) , 
NN(
0, 
0, 
-1, 0.498091, 1, -1, 0.476527,-99) , 
3, 0.976883, 0, 0, 0.495763,-99) , 
6, -0.729308, 1, 0, 0.497337,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0158331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.19645, 0, 1, 0.504408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469801,-99) , 
2, 0.275514, 1, 0, 0.503177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431867,-99) , 
4, 5.27431, 1, 0, 0.481131,-99) , 
2, -0.214249, 0, 0, 0.501946,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.00966135);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463881,-99) , 
4, 11.1063, 1, 0, 0.500554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464836,-99) , 
11, -1.73471, 0, 0, 0.483526,-99) , 
6, 0.526739, 1, 0, 0.499413,-99) , 
3, 2.72286, 0, 0, 0.500315,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0105892);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85702, 1, 1, 0.502165,-99) , 
NN(
0, 
0, 
-1, 2.08649, 0, -1, 0.491706,-99) , 
3, 1.29844, 0, 0, 0.498564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459912,-99) , 
5, 0.997619, 0, 0, 0.497464,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0139486);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523532,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498353,-99) , 
10, -1.84355, 1, 0, 0.500765,-99) , 
NN(
0, 
0, 
-1, 1.71013, 0, -1, 0.490237,-99) , 
8, 1.53146, 0, 0, 0.496624,-99) , 
10, 1.85704, 0, 0, 0.497808,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0123471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493471,-99) , 
12, 14.125, 1, 0, 0.513145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481167,-99) , 
3, 1.19855, 0, 0, 0.497011,-99) , 
6, -0.638888, 1, 0, 0.499274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462887,-99) , 
5, 0.997619, 0, 0, 0.498229,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0206371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496717,-99) , 
5, 0.999995, 0, 0, 0.511964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474741,-99) , 
5, 0.999905, 0, 0, 0.506025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471386,-99) , 
12, 2.81189, 1, 0, 0.499051,-99) , 
NN(
0, 
0, 
-1, -1.57163, 0, -1, 0.481916,-99) , 
3, 1.47192, 0, 0, 0.494214,-99) , 
6, -0.458766, 1, 0, 0.497082,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.00832711);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519378,-99) , 
NN(
0, 
0, 
-1, 0.39896, 1, -1, 0.497298,-99) , 
3, 2.71012, 0, 0, 0.498217,-99) , 
6, -0.818661, 1, 0, 0.499197,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.013464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531319,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498686,-99) , 
10, -1.28503, 1, 0, 0.501645,-99) , 
12, 2.13835, 1, 0, 0.503961,-99) , 
NN(
0, 
0, 
-1, 1.54888, 0, -1, 0.492788,-99) , 
11, 0.234058, 0, 0, 0.498188,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0236096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493975,-99) , 
10, 0.143084, 0, 0, 0.504209,-99) , 
10, -1.28541, 1, 0, 0.507409,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494062,-99) , 
11, 0.601787, 0, 0, 0.498227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44119,-99) , 
12, 2.82584, 1, 0, 0.495468,-99) , 
11, 1.29567, 0, 0, 0.499724,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.013522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499339,-99) , 
8, 1.43559, 0, 0, 0.524571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496488,-99) , 
6, -0.0977173, 1, 0, 0.50151,-99) , 
10, -1.85716, 1, 0, 0.502813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471972,-99) , 
0, 0.505709, 1, 0, 0.50193,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0201449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.4989, 0, 1, 0.511117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468496,-99) , 
8, 1.53566, 0, 0, 0.507777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497253,-99) , 
10, 1.28481, 0, 0, 0.499639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458794,-99) , 
3, 1.8602, 0, 0, 0.477312,-99) , 
13, 1.77647, 1, 0, 0.495647,-99) , 
12, 1.69411, 1, 0, 0.501158,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0141718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494657, 0, 1, 0.509332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495999,-99) , 
2, 0.0715316, 0, 0, 0.498178,-99) , 
0, 0.49673, 1, 0, 0.50155,-99) , 
NN(
0, 
0, 
-1, 1.83417, 1, -1, 0.483913,-99) , 
0, 0.492376, 0, 0, 0.500125,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0143784);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.531442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49829,-99) , 
10, -1.85714, 1, 0, 0.499912,-99) , 
5, 0.999524, 1, 0, 0.503549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476605,-99) , 
4, 9.48998, 1, 0, 0.5023,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0216896);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.28645, 1, 1, 0.511647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490314,-99) , 
11, -1.92667, 0, 0, 0.503237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429422,-99) , 
10, -1.00042, 0, 0, 0.482478,-99) , 
3, 1.31716, 0, 0, 0.499946,-99) , 
6, -0.459391, 1, 0, 0.502795,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.023068);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494667,-99) , 
12, 2.64296, 1, 0, 0.502442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463373,-99) , 
9, -951.286, 0, 0, 0.487427,-99) , 
10, -1.28572, 0, 0, 0.500404,-99) , 
6, -0.819543, 1, 0, 0.501351,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.00877595);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519095,-99) , 
NN(
0, 
0, 
-1, -0.214175, 0, -1, 0.497169,-99) , 
3, 2.69799, 0, 0, 0.498048,-99) , 
10, 1.85708, 0, 0, 0.499191,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0158324);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497849,-99) , 
8, 1.08912, 0, 0, 0.505825,-99) , 
10, -1.2862, 1, 0, 0.512584,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498886,-99) , 
5, 0.999048, 1, 0, 0.501083,-99) , 
NN(
0, 
0, 
-1, 1.31337, 0, -1, 0.484089,-99) , 
10, -1.00001, 0, 0, 0.497752,-99) , 
6, -0.460849, 1, 0, 0.501344,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.018761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.13835, 1, 1, 0.509742,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497823,-99) , 
11, -0.420507, 0, 0, 0.501783,-99) , 
NN(
0, 
0, 
-1, 2.04306, 1, -1, 0.463911,-99) , 
12, 1.79828, 1, 0, 0.497597,-99) , 
11, 0.178998, 0, 0, 0.503558,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0145986);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.27699, 0, 1, 0.506814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47959,-99) , 
5, 0.998095, 0, 0, 0.505842,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0142175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80688, 0, 1, 0.504187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423037,-99) , 
4, 4.61738, 1, 0, 0.488027,-99) , 
5, 0.999728, 0, 0, 0.502002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475661,-99) , 
5, 0.998095, 0, 0, 0.501065,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.00876732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497873,-99) , 
8, 2.51309, 0, 0, 0.499239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482257,-99) , 
6, 0.624459, 1, 0, 0.498397,-99) , 
10, 1.85709, 0, 0, 0.499191,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0373841);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495361,-99) , 
9, -951.286, 1, 0, 0.510861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485507,-99) , 
9, -951.286, 0, 0, 0.49799,-99) , 
10, 0.550994, 1, 0, 0.505012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485658,-99) , 
9, -951.286, 1, 0, 0.50777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47008,-99) , 
9, -951.286, 0, 0, 0.487163,-99) , 
8, 1.73657, 0, 0, 0.495817,-99) , 
10, -0.428587, 0, 0, 0.501621,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0201073);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487237,-99) , 
9, -951.286, 1, 0, 0.507396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492182,-99) , 
9, -951.286, 0, 0, 0.496495,-99) , 
3, 1.93718, 0, 0, 0.499235,-99) , 
10, 1.85709, 0, 0, 0.500351,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.00981962);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.11468, 0, 1, 0.504175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480839,-99) , 
5, 0.998571, 0, 0, 0.50303,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0278963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.373546, 0, 1, 0.504252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490023,-99) , 
7, 0.0237851, 0, 0, 0.494378,-99) , 
13, 1.50304, 0, 0, 0.500378,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476313,-99) , 
8, 1.70968, 0, 0, 0.508623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449857,-99) , 
8, 1.72321, 1, 0, 0.477155,-99) , 
9, -951.286, 0, 0, 0.489034,-99) , 
10, 0.714259, 1, 0, 0.497659,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0183506);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46977,-99) , 
13, 1.6675, 1, 0, 0.503345,-99) , 
3, 1.66986, 0, 0, 0.506379,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471744,-99) , 
8, 1.7084, 0, 0, 0.496743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446108,-99) , 
12, 2.13502, 1, 0, 0.493944,-99) , 
11, 0.288579, 0, 0, 0.499869,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0232711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496948,-99) , 
2, 0.0711638, 0, 0, 0.500139,-99) , 
12, 2.07841, 1, 0, 0.50332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490861,-99) , 
5, 0.998571, 1, 0, 0.495249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434826,-99) , 
4, 9.48544, 1, 0, 0.492138,-99) , 
11, 0.234058, 0, 0, 0.497533,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.00851272);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473316,-99) , 
5, 0.998095, 0, 0, 0.500908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479979,-99) , 
6, 0.623879, 1, 0, 0.499827,-99) , 
10, -2.14286, 1, 0, 0.500873,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0130919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4971,-99) , 
4, 0.583524, 1, 0, 0.498811,-99) , 
5, 0.998572, 1, 0, 0.500631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477899,-99) , 
4, 9.48356, 1, 0, 0.499571,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0173625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497904,-99) , 
6, 0.254807, 0, 0, 0.526975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495857,-99) , 
10, -1.85714, 1, 0, 0.497442,-99) , 
5, 0.999524, 1, 0, 0.500852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477106,-99) , 
4, 9.4997, 1, 0, 0.499768,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0148559);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490898,-99) , 
12, 14.125, 1, 0, 0.513123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487315,-99) , 
8, 1.34674, 0, 0, 0.500801,-99) , 
6, -0.639225, 1, 0, 0.502447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476338,-99) , 
0, 0.505709, 1, 0, 0.501694,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0279829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999985, 0, 1, 0.512702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469822,-99) , 
5, 0.999685, 0, 0, 0.509436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49155,-99) , 
5, 0.999048, 1, 0, 0.49684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451138,-99) , 
4, 9.29049, 1, 0, 0.49417,-99) , 
6, -0.0980438, 1, 0, 0.501999,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.014074);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497028,-99) , 
5, 0.999524, 1, 0, 0.498608,-99) , 
4, 9.26727, 0, 0, 0.500721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472743,-99) , 
5, 0.998571, 0, 0, 0.499334,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0211545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464747,-99) , 
13, 1.80492, 1, 0, 0.506014,-99) , 
3, 1.81793, 0, 0, 0.507318,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495892,-99) , 
10, -1.57172, 1, 0, 0.498944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434703,-99) , 
8, 1.61475, 0, 0, 0.494917,-99) , 
11, -0.119757, 0, 0, 0.501582,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0122018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494479,-99) , 
8, 1.34015, 0, 0, 0.502108,-99) , 
6, -0.8194, 1, 0, 0.502857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471675,-99) , 
0, 0.505709, 1, 0, 0.501965,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0189524);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490656,-99) , 
9, -951.286, 1, 0, 0.515617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470969,-99) , 
2, -0.214255, 0, 0, 0.500198,-99) , 
8, 2.16283, 0, 0, 0.503691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48912,-99) , 
12, 3.03194, 1, 0, 0.497552,-99) , 
NN(
0, 
0, 
-1, 2.71903, 0, -1, 0.479819,-99) , 
6, 0.348407, 1, 0, 0.493837,-99) , 
10, 0.428542, 1, 0, 0.500458,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0104578);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495451,-99) , 
4, 2.36658, 1, 0, 0.539857,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499994,-99) , 
4, 0.579667, 1, 0, 0.501737,-99) , 
5, 0.999048, 1, 0, 0.504416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483312,-99) , 
4, 9.50217, 1, 0, 0.503441,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0181981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47301,-99) , 
10, 2.09032, 1, 0, 0.506155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492426,-99) , 
8, 1.94262, 0, 0, 0.497703,-99) , 
10, -0.183701, 0, 0, 0.502477,-99) , 
10, -2.14286, 1, 0, 0.503359,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0133899);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49878,-99) , 
11, 2.22202, 0, 0, 0.502139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483393,-99) , 
10, -0.455523, 1, 0, 0.490282,-99) , 
12, 6.30337, 1, 0, 0.500175,-99) , 
10, 1.8571, 0, 0, 0.501109,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0186338);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.853379, 1, 1, 0.521536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472732,-99) , 
9, -951.286, 1, 0, 0.500081,-99) , 
11, -1.64536, 0, 0, 0.507794,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499089,-99) , 
4, 8.35698, 0, 0, 0.501189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4735,-99) , 
5, 0.999048, 0, 0, 0.499864,-99) , 
8, 2.13057, 0, 0, 0.501946,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0123745);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533644,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499089,-99) , 
0, 0.496185, 1, 0, 0.502622,-99) , 
4, 9.27716, 0, 0, 0.504091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4767,-99) , 
5, 0.998572, 0, 0, 0.502738,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0147613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496153,-99) , 
6, -0.28454, 1, 0, 0.519834,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455657,-99) , 
1, -0.0255584, 0, 0, 0.503536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479217,-99) , 
1, 0.0242713, 1, 0, 0.502834,-99) , 
10, -1.85714, 1, 0, 0.503796,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.00976753);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.504022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47734,-99) , 
4, 9.50281, 1, 0, 0.502789,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.016311);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498545,-99) , 
4, 0.544003, 1, 0, 0.500241,-99) , 
4, 8.80394, 0, 0, 0.501925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438284,-99) , 
9, -951.286, 0, 0, 0.481398,-99) , 
5, 0.999048, 0, 0, 0.500471,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0221184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496993,-99) , 
4, 3.18259, 0, 0, 0.501225,-99) , 
4, 9.26659, 0, 0, 0.503796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530471,-99) , 
NN(
0, 
0, 
-1, 1.76287, 0, -1, 0.459468,-99) , 
9, -951.286, 0, 0, 0.487851,-99) , 
5, 0.999524, 0, 0, 0.501931,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0174169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80688, 0, 1, 0.506779,-99) , 
NN(
0, 
0, 
-1, 4.5364, 1, -1, 0.487451,-99) , 
5, 0.999796, 0, 0, 0.50381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471117,-99) , 
5, 0.998571, 0, 0, 0.502205,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0131705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497751,-99) , 
4, 1.45532, 1, 0, 0.501204,-99) , 
5, 0.998095, 1, 0, 0.502778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475555,-99) , 
4, 9.46687, 1, 0, 0.501492,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.00924681);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.26338, 0, 1, 0.503681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477265,-99) , 
5, 0.998572, 0, 0, 0.502376,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0127552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.88117, 1, 1, 0.52561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49814,-99) , 
10, -1.85714, 1, 0, 0.499564,-99) , 
5, 0.999524, 1, 0, 0.502578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479862,-99) , 
4, 9.36646, 1, 0, 0.501486,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0142925);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.506319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475782,-99) , 
4, 9.48998, 1, 0, 0.50491,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.01307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499443,-99) , 
4, 9.26648, 0, 0, 0.502721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434542,-99) , 
4, 4.71204, 1, 0, 0.488297,-99) , 
5, 0.999773, 0, 0, 0.500396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465612,-99) , 
5, 0.997619, 0, 0, 0.499406,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0121481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27236, 0, 1, 0.503675,-99) , 
NN(
0, 
0, 
-1, 0.259759, 0, -1, 0.48351,-99) , 
5, 0.99966, 0, 0, 0.501663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472241,-99) , 
5, 0.998572, 0, 0, 0.500217,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.00681223);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499267,-99) , 
6, -0.730052, 1, 0, 0.50049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479205,-99) , 
0, 0.505165, 1, 0, 0.499594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474837,-99) , 
0, 0.490471, 0, 0, 0.498738,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0153565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.5802, 0, 1, 0.504261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458842,-99) , 
4, 4.65503, 1, 0, 0.494797,-99) , 
5, 0.999909, 0, 0, 0.501646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467893,-99) , 
5, 0.998095, 0, 0, 0.500448,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0111185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497693,-99) , 
10, -1.57142, 1, 0, 0.499484,-99) , 
5, 0.998095, 1, 0, 0.50054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474563,-99) , 
4, 9.47659, 1, 0, 0.499338,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.0166246);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497459,-99) , 
11, 0.562944, 0, 0, 0.501985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451797,-99) , 
13, 1.58362, 1, 0, 0.493632,-99) , 
12, 2.64774, 1, 0, 0.498613,-99) , 
10, -2.14286, 1, 0, 0.499679,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.00854371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473747,-99) , 
4, 9.47659, 1, 0, 0.499888,-99) , 
6, -0.728206, 1, 0, 0.501198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47849,-99) , 
12, 14.3928, 1, 0, 0.500276,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0116691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491377,-99) , 
6, 0.347005, 0, 0, 0.525082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498048,-99) , 
10, -2.14287, 1, 0, 0.498974,-99) , 
5, 0.999048, 1, 0, 0.500783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475353,-99) , 
4, 9.32317, 1, 0, 0.499559,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.00811182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499387,-99) , 
10, 1.5714, 0, 0, 0.500982,-99) , 
4, 9.27699, 0, 0, 0.502258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482343,-99) , 
5, 0.998571, 0, 0, 0.501269,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0300627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491496,-99) , 
12, 3.8151, 1, 0, 0.513764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488239,-99) , 
9, -951.286, 0, 0, 0.496466,-99) , 
7, 0.00793045, 0, 0, 0.501204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438094,-99) , 
6, -0.55345, 1, 0, 0.481212,-99) , 
7, 0.0237918, 1, 0, 0.500027,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0191336);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471754,-99) , 
12, 3.1627, 1, 0, 0.508099,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472134,-99) , 
12, 2.09014, 0, 0, 0.497478,-99) , 
8, 1.52824, 0, 0, 0.503857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472302,-99) , 
5, 0.998095, 0, 0, 0.502753,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.006689);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499307,-99) , 
8, 2.4012, 0, 0, 0.500618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477166,-99) , 
13, 2.77861, 1, 0, 0.499758,-99) , 
3, 2.73561, 0, 0, 0.500567,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0101878);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483054,-99) , 
2, -0.275476, 0, 0, 0.512368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499803,-99) , 
8, 2.99051, 0, 0, 0.500762,-99) , 
2, -0.071409, 1, 0, 0.502699,-99) , 
6, -0.819433, 1, 0, 0.503571,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0145593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.506458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464576,-99) , 
4, 4.8189, 1, 0, 0.494771,-99) , 
0, 0.494961, 0, 0, 0.503888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485231,-99) , 
0, 0.504757, 1, 0, 0.502943,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0080778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499713,-99) , 
5, 0.999547, 1, 0, 0.501025,-99) , 
5, 0.998095, 1, 0, 0.50266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478772,-99) , 
4, 9.32317, 1, 0, 0.501504,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0137816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434413,-99) , 
4, 11.194, 1, 0, 0.488008,-99) , 
4, 7.7491, 1, 0, 0.502751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468782,-99) , 
6, 0.701852, 1, 0, 0.4855,-99) , 
6, 0.624513, 1, 0, 0.501882,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0133988);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495843,-99) , 
9, -951.286, 1, 0, 0.509239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493326,-99) , 
10, -0.42859, 0, 0, 0.499257,-99) , 
8, 2.14713, 0, 0, 0.501422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48497,-99) , 
6, 0.62391, 1, 0, 0.500585,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0156845);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497624,-99) , 
6, 0.353351, 0, 0, 0.531098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490925,-99) , 
9, -951.286, 1, 0, 0.498418,-99) , 
5, 0.999048, 1, 0, 0.500671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480729,-99) , 
4, 9.48998, 1, 0, 0.49976,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.00885672);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49896,-99) , 
8, 1.74701, 0, 0, 0.502253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486364,-99) , 
0, 0.505165, 1, 0, 0.501597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477053,-99) , 
0, 0.490471, 0, 0, 0.500754,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0127352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49562,-99) , 
5, 0.999093, 1, 0, 0.496833,-99) , 
4, 9.25366, 0, 0, 0.497927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477095,-99) , 
5, 0.997619, 0, 0, 0.49733,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.00644986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499876,-99) , 
4, 0.567578, 1, 0, 0.500851,-99) , 
5, 0.998095, 1, 0, 0.502245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482552,-99) , 
4, 9.13212, 1, 0, 0.501251,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0153435);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.48961, 0, 1, 0.522444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494921,-99) , 
9, -951.286, 1, 0, 0.502003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467439,-99) , 
10, 2.07472, 1, 0, 0.501021,-99) , 
10, -1.85716, 1, 0, 0.502266,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0158005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499041, 0, 1, 0.53066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490189,-99) , 
6, 0.350955, 1, 0, 0.500571,-99) , 
4, 8.68992, 0, 0, 0.502271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451692,-99) , 
9, -951.286, 0, 0, 0.486257,-99) , 
5, 0.999048, 0, 0, 0.501133,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0113937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497078,-99) , 
10, 1.85704, 0, 0, 0.498206,-99) , 
5, 0.998095, 1, 0, 0.499681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482601,-99) , 
4, 9.27716, 1, 0, 0.498832,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0154245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499485,-99) , 
10, -1.85716, 1, 0, 0.500757,-99) , 
4, 9.27223, 0, 0, 0.503177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525842,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.458391,-99) , 
9, -951.286, 0, 0, 0.48547,-99) , 
5, 0.999524, 0, 0, 0.501129,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0132893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.26727, 0, 1, 0.504218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455555,-99) , 
9, -951.286, 0, 0, 0.484632,-99) , 
5, 0.999048, 0, 0, 0.502833,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0167302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46416,-99) , 
1, 0.0257751, 1, 0, 0.509905,-99) , 
NN(
0, 
0, 
-1, -1.57145, 0, -1, 0.496997,-99) , 
1, 0.00207795, 0, 0, 0.502126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471049,-99) , 
1, -0.0228062, 0, 0, 0.501155,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.010201);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49858,-99) , 
9, -951.286, 0, 0, 0.519838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498982,-99) , 
10, 1.8571, 0, 0, 0.499815,-99) , 
5, 0.999524, 1, 0, 0.502093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473029,-99) , 
4, 9.36646, 1, 0, 0.500721,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0192066);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47893,-99) , 
6, -0.0948113, 0, 0, 0.524889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496816,-99) , 
0, 0.497138, 1, 0, 0.50186,-99) , 
5, 0.999524, 1, 0, 0.504491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479183,-99) , 
4, 9.36646, 1, 0, 0.503298,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0137643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499269,-99) , 
10, -2.14286, 1, 0, 0.500329,-99) , 
4, 8.70274, 0, 0, 0.502752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516028,-99) , 
NN(
0, 
0, 
-1, 0.99907, 0, -1, 0.463925,-99) , 
9, -951.286, 0, 0, 0.484483,-99) , 
5, 0.999524, 0, 0, 0.500631,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0134481);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.2579, 0, 1, 0.504351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454889,-99) , 
9, -951.286, 0, 0, 0.483798,-99) , 
5, 0.999048, 0, 0, 0.502911,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0113266);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.25773, 0, 1, 0.504792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477317,-99) , 
5, 0.998571, 0, 0, 0.503453,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0224415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.711399, 0, 1, 0.540124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483427,-99) , 
8, 2.02689, 0, 0, 0.501893,-99) , 
11, -0.83031, 0, 0, 0.508687,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494181,-99) , 
9, -951.286, 1, 0, 0.50177,-99) , 
NN(
0, 
0, 
-1, 2.43513, 1, -1, 0.483136,-99) , 
13, 1.89521, 1, 0, 0.499105,-99) , 
12, 1.47358, 1, 0, 0.503059,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.0220721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487486,-99) , 
3, 1.59921, 1, 0, 0.501542,-99) , 
10, 1.28734, 0, 0, 0.506109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445503,-99) , 
10, 1.84342, 1, 0, 0.497955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437851,-99) , 
10, -1.85717, 0, 0, 0.493983,-99) , 
9, -951.286, 0, 0, 0.498673,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0125421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482558,-99) , 
8, 1.49111, 0, 0, 0.51692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495219,-99) , 
12, 3.0323, 1, 0, 0.50062,-99) , 
10, -1.85715, 1, 0, 0.501541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485682,-99) , 
2, 0.214319, 1, 0, 0.500741,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0167604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.99065, 1, 1, 0.510937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465228,-99) , 
12, -0.60238, 0, 0, 0.506704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465299,-99) , 
5, 0.999048, 0, 0, 0.498295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443638,-99) , 
10, -2.14286, 0, 0, 0.496036,-99) , 
9, -951.286, 0, 0, 0.50014,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0200608);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484473,-99) , 
11, -2.59778, 0, 0, 0.499658,-99) , 
6, 0.472469, 1, 0, 0.513442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497355,-99) , 
10, -0.71353, 1, 0, 0.504142,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.491448,-99) , 
9, -951.286, 0, 0, 0.496207,-99) , 
8, 2.57785, 0, 0, 0.498137,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0124562);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.77575, 1, 1, 0.508636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448145,-99) , 
13, 1.41514, 0, 0, 0.498322,-99) , 
11, 1.69878, 0, 0, 0.501384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477893,-99) , 
12, 14.4518, 1, 0, 0.500451,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0244902);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497712,-99) , 
10, -1.28458, 1, 0, 0.502195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482081,-99) , 
11, 1.50786, 0, 0, 0.491835,-99) , 
9, -951.286, 0, 0, 0.495757,-99) , 
3, 2.5641, 0, 0, 0.496928,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0286853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28914, 0, 1, 0.511082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459004,-99) , 
12, -0.566968, 0, 0, 0.506022,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483638,-99) , 
13, 1.62033, 0, 0, 0.497014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448881,-99) , 
8, 1.84806, 1, 0, 0.470455,-99) , 
10, 1.28567, 1, 0, 0.493881,-99) , 
9, -951.286, 0, 0, 0.498551,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0140252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497631,-99) , 
11, 0.149087, 0, 0, 0.503107,-99) , 
NN(
0, 
0, 
-1, 1.39932, 1, -1, 0.494778,-99) , 
12, 3.71406, 1, 0, 0.50073,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486774,-99) , 
3, 1.59915, 0, 0, 0.493351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462428,-99) , 
4, 4.6711, 1, 0, 0.486539,-99) , 
0, 0.493328, 0, 0, 0.499059,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0216429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486095,-99) , 
12, 13.3181, 1, 0, 0.502824,-99) , 
10, -0.999733, 1, 0, 0.508479,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491746,-99) , 
7, 0.00793178, 0, 0, 0.496142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462076,-99) , 
7, 0.0237961, 1, 0, 0.494969,-99) , 
6, -0.548573, 1, 0, 0.497496,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0113014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497918,-99) , 
10, 1.57133, 0, 0, 0.499481,-99) , 
5, 0.998095, 1, 0, 0.501169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478746,-99) , 
4, 9.4997, 1, 0, 0.500145,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.0114967);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.97287, 0, 1, 0.504053,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496105,-99) , 
5, 0.999524, 1, 0, 0.500034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467045,-99) , 
4, 4.80631, 1, 0, 0.493829,-99) , 
0, 0.495233, 0, 0, 0.501725,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0100269);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49022,-99) , 
10, -0.99971, 0, 0, 0.509868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488622,-99) , 
2, -0.15303, 0, 0, 0.499513,-99) , 
2, 0.0714448, 0, 0, 0.501031,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488729,-99) , 
3, 1.51976, 0, 0, 0.496361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463601,-99) , 
6, 0.25924, 1, 0, 0.487967,-99) , 
0, 0.493328, 0, 0, 0.499494,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.0135754);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520246,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469763,-99) , 
4, 9.38316, 1, 0, 0.501666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483529,-99) , 
6, -0.490495, 1, 0, 0.493629,-99) , 
8, 1.53904, 0, 0, 0.498447,-99) , 
10, 1.85702, 0, 0, 0.499393,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0107979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498855,-99) , 
12, 2.13942, 1, 0, 0.502081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461014,-99) , 
12, 1.82482, 1, 0, 0.495482,-99) , 
11, 0.288579, 0, 0, 0.498636,-99) , 
NN(
0, 
0, 
-1, -0.109096, 1, -1, 0.480489,-99) , 
0, 0.491424, 0, 0, 0.497666,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0142371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533225,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495824,-99) , 
4, 0.555645, 1, 0, 0.496998,-99) , 
4, 9.26727, 0, 0, 0.498737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475123,-99) , 
5, 0.998571, 0, 0, 0.497588,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0128481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495553,-99) , 
0, 0.496186, 1, 0, 0.498353,-99) , 
4, 9.28598, 0, 0, 0.499845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480077,-99) , 
5, 0.998571, 0, 0, 0.498876,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0117971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.50856, 0, 1, 0.504529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486521,-99) , 
2, -0.0702003, 1, 0, 0.49325,-99) , 
0, 0.50326, 1, 0, 0.5029,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.493843,-99) , 
0, 0.496186, 0, 0, 0.500117,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.017346);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.725005, 1, 1, 0.519136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499216,-99) , 
12, 13.9328, 1, 0, 0.51265,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494766,-99) , 
1, 0.00566766, 0, 0, 0.498719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471442,-99) , 
7, 0.0238055, 1, 0, 0.49768,-99) , 
6, -0.639115, 1, 0, 0.49969,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0111706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55429,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499729,-99) , 
4, 0.559273, 1, 0, 0.501025,-99) , 
5, 0.998095, 1, 0, 0.502886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438169,-99) , 
6, -0.0119326, 1, 0, 0.484641,-99) , 
4, 9.12457, 1, 0, 0.501946,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0142218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.2602, 0, 1, 0.504872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516807,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.470813,-99) , 
9, -951.286, 0, 0, 0.489194,-99) , 
5, 0.999524, 0, 0, 0.503061,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0123834);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.44926, 0, 1, 0.519977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45704,-99) , 
7, 0.0237976, 1, 0, 0.501622,-99) , 
NN(
0, 
0, 
-1, -0.711855, 1, -1, 0.49037,-99) , 
3, 0.973606, 0, 0, 0.499784,-99) , 
10, -1.85715, 1, 0, 0.500914,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.00620823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0139435, 1, 1, 0.501694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469199,-99) , 
1, -0.0258036, 0, 0, 0.500799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476389,-99) , 
1, 0.0240083, 1, 0, 0.500096,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0183935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.129699, 0, 1, 0.516726,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489788,-99) , 
2, 0.275423, 1, 0, 0.510746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496287,-99) , 
12, 4.64386, 1, 0, 0.505009,-99) , 
NN(
0, 
0, 
-1, 3.02221, 1, -1, 0.493084,-99) , 
11, 2.00487, 0, 0, 0.49678,-99) , 
2, 0.071409, 0, 0, 0.498962,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0137914);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.02505, 1, 1, 0.504799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496061,-99) , 
5, 0.999048, 1, 0, 0.499805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453101,-99) , 
4, 9.51286, 1, 0, 0.497425,-99) , 
11, 0.178998, 0, 0, 0.501044,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.013881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0208599, 0, 1, 0.51028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474603,-99) , 
6, 0.151309, 1, 0, 0.498171,-99) , 
3, 1.74751, 0, 0, 0.50255,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482164,-99) , 
0, 0.493011, 1, 0, 0.496378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452401,-99) , 
5, 0.999524, 0, 0, 0.488328,-99) , 
0, 0.494281, 0, 0, 0.500194,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.013971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475943,-99) , 
4, 9.47969, 1, 0, 0.502587,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49553,-99) , 
10, -0.714366, 1, 0, 0.500249,-99) , 
NN(
0, 
0, 
-1, -0.448664, 1, -1, 0.471068,-99) , 
11, 4.39071, 0, 0, 0.493542,-99) , 
8, 1.33128, 0, 0, 0.500126,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.00918674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543699,-99) , 
NN(
0, 
0, 
-1, 7.26882, 1, -1, 0.497754,-99) , 
5, 0.998095, 1, 0, 0.499333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476164,-99) , 
4, 9.4997, 1, 0, 0.498272,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0184063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496222,-99) , 
10, -1.57144, 1, 0, 0.498166,-99) , 
4, 9.27375, 0, 0, 0.50053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515538,-99) , 
NN(
0, 
0, 
-1, 0.499042, 0, -1, 0.467919,-99) , 
9, -951.286, 0, 0, 0.486958,-99) , 
5, 0.999524, 0, 0, 0.498961,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0114328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49857,-99) , 
4, 8.79781, 0, 0, 0.500982,-99) , 
NN(
0, 
0, 
-1, -0.100352, 0, -1, 0.484205,-99) , 
5, 0.99966, 0, 0, 0.499313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478425,-99) , 
5, 0.998571, 0, 0, 0.498284,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0122884);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45168, 1, 1, 0.522993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483942,-99) , 
6, 0.533688, 1, 0, 0.501464,-99) , 
5, 0.999524, 1, 0, 0.503941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486583,-99) , 
4, 9.37635, 1, 0, 0.503096,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0266962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497574,-99) , 
12, 2.64427, 1, 0, 0.517174,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476038,-99) , 
13, 1.9504, 1, 0, 0.497059,-99) , 
9, -951.286, 0, 0, 0.504435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465744,-99) , 
8, 1.88682, 0, 0, 0.508443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471414,-99) , 
9, -0.428476, 1, 0, 0.482599,-99) , 
9, -951.286, 1, 0, 0.497608,-99) , 
11, -1.02427, 0, 0, 0.502286,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0114776);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525628,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28577, 1, 1, 0.506746,-99) , 
NN(
0, 
0, 
-1, 0.998571, 0, -1, 0.496425,-99) , 
9, -951.286, 0, 0, 0.500338,-99) , 
8, 2.97475, 0, 0, 0.501504,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.0142692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.434273, 0, 1, 0.53204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496618,-99) , 
10, -2.14286, 1, 0, 0.497398,-99) , 
5, 0.999048, 1, 0, 0.499787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466171,-99) , 
4, 9.47969, 1, 0, 0.498271,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0139783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.504877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451645,-99) , 
4, 4.63495, 1, 0, 0.492146,-99) , 
5, 0.999773, 0, 0, 0.502819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466638,-99) , 
5, 0.997619, 0, 0, 0.501812,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0196065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479854,-99) , 
12, 2.96619, 1, 0, 0.508282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45084,-99) , 
12, 1.74819, 0, 0, 0.496089,-99) , 
8, 1.53146, 0, 0, 0.503525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478002,-99) , 
10, 0.999664, 1, 0, 0.500133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461715,-99) , 
5, 0.999524, 0, 0, 0.4939,-99) , 
0, 0.495233, 0, 0, 0.501331,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0178853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496101,-99) , 
10, -1.85714, 1, 0, 0.497448,-99) , 
4, 9.1881, 0, 0, 0.500017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508428,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.468087,-99) , 
6, 0.444384, 0, 0, 0.4825,-99) , 
5, 0.999524, 0, 0, 0.497976,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0133721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481174,-99) , 
4, 1.92112, 1, 0, 0.517289,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497145,-99) , 
2, 0.145565, 0, 0, 0.498233,-99) , 
5, 0.999048, 1, 0, 0.499532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473666,-99) , 
4, 9.46687, 1, 0, 0.498344,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.00861963);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27601, 0, 1, 0.502466,-99) , 
NN(
0, 
0, 
-1, -0.0161962, 0, -1, 0.488152,-99) , 
5, 0.999637, 0, 0, 0.500937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472608,-99) , 
5, 0.998095, 0, 0, 0.49994,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.00961436);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499193,-99) , 
7, 0.0118923, 0, 0, 0.502187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474612,-99) , 
1, -0.0249803, 0, 0, 0.501399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473978,-99) , 
1, 0.0247997, 1, 0, 0.500651,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0140881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27614, 0, 1, 0.505335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473092,-99) , 
4, 4.70409, 1, 0, 0.496957,-99) , 
5, 0.999932, 0, 0, 0.502728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482858,-99) , 
5, 0.998571, 0, 0, 0.501754,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.016178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.510034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495281,-99) , 
7, 0.023785, 0, 0, 0.496999,-99) , 
6, 0.0772411, 0, 0, 0.501625,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474142,-99) , 
4, 9.37635, 1, 0, 0.500331,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.00757746);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478966,-99) , 
4, 9.25366, 1, 0, 0.501741,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.016444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540916,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496223,-99) , 
6, -0.461637, 1, 0, 0.498962,-99) , 
4, 9.26648, 0, 0, 0.500881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51019,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.467144,-99) , 
9, -951.286, 0, 0, 0.484078,-99) , 
5, 0.999524, 0, 0, 0.498958,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.00564228);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.25773, 0, 1, 0.501919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479632,-99) , 
5, 0.998571, 0, 0, 0.500829,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0110936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53901,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496993,-99) , 
4, 1.00067, 1, 0, 0.498893,-99) , 
5, 0.997619, 1, 0, 0.499987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477378,-99) , 
4, 9.36646, 1, 0, 0.498918,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0139436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521584,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494764,-99) , 
8, 1.32578, 0, 0, 0.502286,-99) , 
10, 1.85708, 0, 0, 0.50312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488992,-99) , 
13, 1.72155, 1, 0, 0.498607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462292,-99) , 
4, 4.67796, 1, 0, 0.490686,-99) , 
0, 0.493328, 0, 0, 0.501663,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.00836806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499017,-99) , 
0, 0.502852, 0, 0, 0.500364,-99) , 
5, 0.997619, 1, 0, 0.501617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477587,-99) , 
4, 9.46687, 1, 0, 0.500517,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.01235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215253, 1, 1, 0.504427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481025,-99) , 
4, 7.26882, 1, 0, 0.503376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470484,-99) , 
4, 9.4997, 1, 0, 0.501903,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.010779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471008,-99) , 
5, 0.99966, 0, 0, 0.500094,-99) , 
4, 9.18823, 0, 0, 0.501787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50168,-99) , 
NN(
0, 
0, 
-1, 1.09779, 0, -1, 0.468207,-99) , 
9, -951.286, 0, 0, 0.481495,-99) , 
5, 0.999524, 0, 0, 0.499452,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0215157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487323,-99) , 
3, 1.60511, 1, 0, 0.501103,-99) , 
10, 1.28529, 0, 0, 0.505289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483236,-99) , 
10, 0.795879, 1, 0, 0.497826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446849,-99) , 
10, -2.14284, 0, 0, 0.49571,-99) , 
9, -951.286, 0, 0, 0.499389,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0190552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494337,-99) , 
10, -1.85715, 1, 0, 0.495347,-99) , 
4, 9.26084, 0, 0, 0.497547,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493364,-99) , 
3, 2.25727, 1, 0, 0.507022,-99) , 
NN(
0, 
0, 
-1, 2.21808, 0, -1, 0.46883,-99) , 
6, 0.353325, 0, 0, 0.486045,-99) , 
5, 0.999524, 0, 0, 0.496213,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0218718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.80266, 0, 1, 0.505755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477395,-99) , 
9, -951.286, 0, 0, 0.489026,-99) , 
6, 0.353237, 1, 0, 0.502478,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489666,-99) , 
9, -951.286, 1, 0, 0.508071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480779,-99) , 
9, -951.286, 0, 0, 0.487949,-99) , 
13, 2.00744, 0, 0, 0.493524,-99) , 
10, -0.142887, 0, 0, 0.498279,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.011504);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45692, 1, 1, 0.522405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497473,-99) , 
10, -2.14287, 1, 0, 0.498517,-99) , 
5, 0.999048, 1, 0, 0.500149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473173,-99) , 
4, 9.32317, 1, 0, 0.498863,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0166785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458569,-99) , 
5, 0.999796, 0, 0, 0.509633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490723,-99) , 
0, 0.499995, 1, 0, 0.497873,-99) , 
4, 4.69368, 0, 0, 0.500279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471263,-99) , 
5, 0.998571, 0, 0, 0.498884,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0120162);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496788,-99) , 
4, 4.6971, 0, 0, 0.499609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478193,-99) , 
5, 0.998753, 0, 0, 0.499009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465824,-99) , 
5, 0.997619, 0, 0, 0.498079,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0125721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499749,-99) , 
6, -0.00880498, 1, 0, 0.517915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499107,-99) , 
6, -0.132341, 1, 0, 0.502727,-99) , 
NN(
0, 
0, 
-1, -1.69387, 0, -1, 0.493384,-99) , 
13, 1.63741, 0, 0, 0.498306,-99) , 
10, 1.57138, 0, 0, 0.499708,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.008959);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498619,-99) , 
10, -1.57146, 1, 0, 0.500088,-99) , 
5, 0.998095, 1, 0, 0.501304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479729,-99) , 
4, 9.49987, 1, 0, 0.500326,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.00887658);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493449,-99) , 
6, 0.353246, 0, 0, 0.521769,-99) , 
NN(
0, 
0, 
-1, -0.21354, 1, 1, 0.501893,-99) , 
5, 0.999048, 1, 0, 0.503244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479707,-99) , 
4, 9.4997, 1, 0, 0.502178,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.0139377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.673975, 0, 1, 0.505372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469223,-99) , 
13, 1.55344, 1, 0, 0.496665,-99) , 
12, 2.88019, 1, 0, 0.502002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463438,-99) , 
8, 1.47836, 0, 0, 0.488463,-99) , 
10, -1.57138, 0, 0, 0.500807,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0122605);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49538,-99) , 
11, 1.86941, 0, 0, 0.498665,-99) , 
8, 2.94572, 0, 0, 0.499568,-99) , 
10, 1.85703, 0, 0, 0.50047,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0118101);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497992,-99) , 
11, 2.69701, 0, 0, 0.500216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472517,-99) , 
6, -0.809914, 1, 0, 0.489152,-99) , 
3, 0.815737, 0, 0, 0.49909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471368,-99) , 
5, 0.997619, 0, 0, 0.498313,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0200069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.472458, 0, 1, 0.507803,-99) , 
NN(
0, 
0, 
-1, 1.47943, 0, -1, 0.478698,-99) , 
12, 2.94706, 1, 0, 0.504663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487266,-99) , 
9, -951.286, 1, 0, 0.499093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468806,-99) , 
12, 2.01321, 0, 0, 0.496518,-99) , 
13, 1.44431, 0, 0, 0.501889,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0112133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497647,-99) , 
2, -0.214094, 1, 0, 0.498649,-99) , 
5, 0.998572, 1, 0, 0.500275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47392,-99) , 
4, 9.27716, 1, 0, 0.499021,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0161003);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495489,-99) , 
5, 0.999955, 0, 0, 0.516414,-99) , 
NN(
0, 
0, 
-1, 0.621163, 1, -1, 0.497214,-99) , 
4, 4.6448, 0, 0, 0.501247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464453,-99) , 
9, -951.286, 0, 0, 0.486455,-99) , 
5, 0.999048, 0, 0, 0.500208,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.00741664);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.50307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483821,-99) , 
4, 9.27716, 1, 0, 0.502134,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0145688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494404,-99) , 
8, 1.53129, 0, 0, 0.500704,-99) , 
10, 1.85704, 0, 0, 0.501976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474621,-99) , 
5, 0.998571, 0, 0, 0.50066,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0140086);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544698,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498693,-99) , 
0, 0.500947, 0, 0, 0.50234,-99) , 
12, 2.15878, 1, 0, 0.505531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474136,-99) , 
12, 2.15207, 1, 0, 0.50018,-99) , 
NN(
0, 
0, 
-1, 1.52407, 0, -1, 0.477677,-99) , 
8, 1.733, 0, 0, 0.496351,-99) , 
11, 0.298751, 0, 0, 0.500715,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0106294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.04714, 0, 1, 0.50337,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478823,-99) , 
11, -2.14983, 0, 0, 0.489936,-99) , 
6, 0.533688, 1, 0, 0.502362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471216,-99) , 
5, 0.998572, 0, 0, 0.500856,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.00792343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499903,-99) , 
4, 8.79642, 0, 0, 0.501552,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.486625,-99) , 
5, 0.99966, 0, 0, 0.499783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466025,-99) , 
5, 0.997619, 0, 0, 0.498858,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0172113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492942,-99) , 
4, 1.86975, 1, 0, 0.52036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493137,-99) , 
11, -0.0652356, 0, 0, 0.499928,-99) , 
5, 0.999048, 1, 0, 0.501322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470648,-99) , 
4, 9.19645, 1, 0, 0.499813,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.00892099);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535397,-99) , 
NN(
0, 
0, 
-1, 6.64002, 1, -1, 0.49857,-99) , 
4, 9.24801, 0, 0, 0.500334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467159,-99) , 
9, -951.286, 0, 0, 0.483886,-99) , 
5, 0.999048, 0, 0, 0.499193,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0119602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490916,-99) , 
4, 2.36499, 1, 0, 0.530342,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498712,-99) , 
2, 0.187965, 0, 0, 0.499638,-99) , 
5, 0.999048, 1, 0, 0.501773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463591,-99) , 
4, 9.48998, 1, 0, 0.500068,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0257336);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490662,-99) , 
9, -951.286, 1, 0, 0.522353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472544,-99) , 
12, 3.06803, 1, 0, 0.504678,-99) , 
11, 2.09584, 0, 0, 0.507329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47544,-99) , 
7, 0.00679127, 1, 0, 0.490128,-99) , 
7, 0.0237693, 0, 0, 0.494716,-99) , 
12, 6.10082, 1, 0, 0.505135,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0102783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.81654, 0, 1, 0.502721,-99) , 
NN(
0, 
0, 
-1, 4.61738, 1, -1, 0.486957,-99) , 
5, 0.999773, 0, 0, 0.500205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468279,-99) , 
5, 0.997619, 0, 0, 0.499306,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.007505);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531743,-99) , 
NN(
0, 
0, 
-1, 7.16481, 1, -1, 0.498358,-99) , 
5, 0.998571, 1, 0, 0.499947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482685,-99) , 
4, 9.36646, 1, 0, 0.499126,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0145693);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497665,-99) , 
11, 2.41435, 0, 0, 0.518451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496519,-99) , 
10, -0.714217, 1, 0, 0.500397,-99) , 
12, 4.60977, 1, 0, 0.506568,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471817,-99) , 
12, 2.5867, 1, 0, 0.497748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451253,-99) , 
13, 1.4134, 0, 0, 0.495665,-99) , 
11, 1.34995, 0, 0, 0.499526,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0109582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494262,-99) , 
5, 0.999909, 0, 0, 0.500711,-99) , 
10, 1.8571, 0, 0, 0.501712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473694,-99) , 
5, 0.998095, 0, 0, 0.500731,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0134294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483948,-99) , 
13, 1.69725, 1, 0, 0.501675,-99) , 
3, 1.7613, 0, 0, 0.50317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480289,-99) , 
13, 1.72206, 0, 0, 0.498147,-99) , 
NN(
0, 
0, 
-1, -0.271741, 1, -1, 0.466116,-99) , 
12, 1.69219, 1, 0, 0.494415,-99) , 
11, 0.0542058, 0, 0, 0.498872,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0124232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492568,-99) , 
3, 1.61781, 1, 0, 0.497954,-99) , 
4, 9.24801, 0, 0, 0.499213,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448686,-99) , 
6, 0.257835, 0, 0, 0.480282,-99) , 
5, 0.999048, 0, 0, 0.497888,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0163825);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.11691, 1, 1, 0.51543,-99) , 
NN(
0, 
0, 
-1, 2.55916, 1, -1, 0.496587,-99) , 
11, 0.918864, 0, 0, 0.50013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489137,-99) , 
10, -0.999691, 1, 0, 0.495049,-99) , 
NN(
0, 
0, 
-1, 1.24427, 1, -1, 0.476814,-99) , 
13, 1.17171, 1, 0, 0.490952,-99) , 
8, 1.30975, 0, 0, 0.497735,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0103997);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498669,-99) , 
6, 0.347005, 0, 0, 0.526959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498218,-99) , 
10, 1.85708, 0, 0, 0.499178,-99) , 
5, 0.999048, 1, 0, 0.501114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477822,-99) , 
4, 9.46687, 1, 0, 0.500044,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0119289);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.353332, 0, 1, 0.521998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498335,-99) , 
10, 1.8571, 0, 0, 0.499444,-99) , 
5, 0.999524, 1, 0, 0.502047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472724,-99) , 
4, 9.26338, 1, 0, 0.500613,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0100155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27716, 0, 1, 0.502935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461489,-99) , 
6, 0.167515, 0, 0, 0.484918,-99) , 
5, 0.99932, 0, 0, 0.501778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462875,-99) , 
5, 0.997619, 0, 0, 0.500706,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.013711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52794,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496734,-99) , 
5, 0.999864, 1, 0, 0.499821,-99) , 
5, 0.998572, 1, 0, 0.501153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47799,-99) , 
4, 9.33599, 1, 0, 0.500046,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.00870881);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.25366, 0, 1, 0.503547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479976,-99) , 
5, 0.998572, 0, 0, 0.502392,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.00808577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.502142,-99) , 
NN(
0, 
0, 
-1, -0.0970031, 0, -1, 0.488115,-99) , 
5, 0.999637, 0, 0, 0.500659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472041,-99) , 
5, 0.998095, 0, 0, 0.499654,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0112914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497436,-99) , 
4, 2.36732, 1, 0, 0.52606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481718,-99) , 
4, 7.26905, 1, 0, 0.501582,-99) , 
5, 0.999048, 1, 0, 0.503274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479529,-99) , 
4, 9.49987, 1, 0, 0.502198,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0166459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.45131, 1, 1, 0.526435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493635,-99) , 
5, 0.999864, 1, 0, 0.495835,-99) , 
5, 0.999048, 1, 0, 0.497963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476806,-99) , 
4, 9.32317, 1, 0, 0.496951,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0101367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499827,-99) , 
4, 8.80624, 0, 0, 0.502106,-99) , 
NN(
0, 
0, 
-1, 4.43445, 1, -1, 0.487566,-99) , 
5, 0.999773, 0, 0, 0.499786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458055,-99) , 
5, 0.997619, 0, 0, 0.498642,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.00940286);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.2602, 0, 1, 0.50308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505415,-99) , 
NN(
0, 
0, 
-1, -0.545518, 0, -1, 0.474833,-99) , 
9, -951.286, 0, 0, 0.487061,-99) , 
5, 0.999524, 0, 0, 0.50125,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.010239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492181,-99) , 
5, 0.999773, 0, 0, 0.500914,-99) , 
NN(
0, 
0, 
-1, 0.497135, 0, -1, 0.483052,-99) , 
6, 0.534213, 1, 0, 0.499528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463485,-99) , 
5, 0.997619, 0, 0, 0.498523,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0139318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496829,-99) , 
7, 0.0109931, 0, 0, 0.500174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46375,-99) , 
1, -0.0256528, 0, 0, 0.499174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472779,-99) , 
1, 0.0241676, 1, 0, 0.498421,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.00757111);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481493,-99) , 
4, 9.49987, 1, 0, 0.502105,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.00868543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4774, 1, 1, 0.519514,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.498479,-99) , 
5, 0.999524, 1, 0, 0.500866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479344,-99) , 
4, 9.50743, 1, 0, 0.499885,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.00790237);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46582, 1, 1, 0.516949,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481782,-99) , 
5, 0.999705, 0, 0, 0.499611,-99) , 
5, 0.999524, 1, 0, 0.5016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478524,-99) , 
4, 9.47659, 1, 0, 0.500537,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0127877);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498717,-99) , 
2, -0.0717953, 1, 0, 0.500338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484845,-99) , 
11, 1.92454, 0, 0, 0.491065,-99) , 
10, -0.714298, 0, 0, 0.497767,-99) , 
8, 2.94204, 0, 0, 0.498752,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0111674);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496556,-99) , 
8, 1.95455, 0, 0, 0.499488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475565,-99) , 
0, 0.490471, 0, 0, 0.49867,-99) , 
10, 1.85709, 0, 0, 0.499798,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.00935652);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498334,-99) , 
11, 3.42594, 0, 0, 0.500526,-99) , 
2, -0.214134, 1, 0, 0.501481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478258,-99) , 
4, 9.47659, 1, 0, 0.500439,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.012285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523966,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496474,-99) , 
12, 2.26174, 1, 0, 0.500055,-99) , 
4, 8.89665, 0, 0, 0.501276,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510612,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.477088,-99) , 
8, 1.739, 1, 0, 0.487425,-99) , 
5, 0.999524, 0, 0, 0.499687,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.00917999);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470917,-99) , 
1, -0.0254678, 0, 0, 0.501404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480021,-99) , 
1, 0.0243539, 1, 0, 0.500768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457879,-99) , 
5, 0.997619, 0, 0, 0.499604,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0134269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542594,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498749,-99) , 
10, -1.85716, 1, 0, 0.499885,-99) , 
5, 0.998572, 1, 0, 0.501943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476389,-99) , 
2, 0.11241, 1, 0, 0.497092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456484,-99) , 
2, -0.214081, 0, 0, 0.490567,-99) , 
4, 4.8226, 1, 0, 0.499717,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0177631);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.880707, 1, 1, 0.504557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47233,-99) , 
8, 2.05571, 0, 0, 0.502967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469269,-99) , 
9, -0.428483, 1, 0, 0.479558,-99) , 
9, -951.286, 1, 0, 0.492969,-99) , 
11, -1.22107, 0, 0, 0.50128,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0153982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497702,-99) , 
4, 0.807677, 1, 0, 0.499742,-99) , 
5, 0.998096, 1, 0, 0.501359,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474459,-99) , 
0, 0.497138, 0, 0, 0.503244,-99) , 
NN(
0, 
0, 
-1, -0.305959, 1, -1, 0.483282,-99) , 
8, 1.92678, 0, 0, 0.490829,-99) , 
4, 4.8226, 1, 0, 0.499299,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.00940804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468818,-99) , 
1, -0.0256806, 0, 0, 0.501735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481966,-99) , 
1, 0.0241607, 1, 0, 0.501157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467642,-99) , 
5, 0.997619, 0, 0, 0.500224,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.00718139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213366, 1, 1, 0.501624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472308,-99) , 
4, 7.25148, 1, 0, 0.500283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480211,-99) , 
4, 9.47676, 1, 0, 0.499368,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.00934093);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499815,-99) , 
4, 8.79781, 0, 0, 0.502286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472228,-99) , 
4, 4.51236, 1, 0, 0.49504,-99) , 
5, 0.999887, 0, 0, 0.500492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471797,-99) , 
5, 0.997619, 0, 0, 0.499695,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0119859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.504012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476343,-99) , 
12, 1.27816, 0, 0, 0.489628,-99) , 
5, 0.99966, 0, 0, 0.502591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470481,-99) , 
5, 0.998571, 0, 0, 0.501073,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0168644);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49905,-99) , 
6, 0.353351, 0, 0, 0.521837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49008,-99) , 
11, 1.49508, 0, 0, 0.493734,-99) , 
5, 0.999048, 1, 0, 0.49566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472185,-99) , 
4, 9.48998, 1, 0, 0.494613,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0159018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493203,-99) , 
11, -2.00305, 0, 0, 0.503311,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489386,-99) , 
11, 2.32742, 0, 0, 0.497093,-99) , 
8, 1.74685, 0, 0, 0.50002,-99) , 
NN(
0, 
0, 
-1, 1.72465, 1, -1, 0.481795,-99) , 
0, 0.491424, 0, 0, 0.499041,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0218878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492397,-99) , 
12, 3.29022, 1, 0, 0.51375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441984,-99) , 
12, 2.33986, 1, 0, 0.498531,-99) , 
11, 0.529417, 0, 0, 0.502699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475101,-99) , 
7, 0.00453179, 1, 0, 0.485187,-99) , 
7, 0.0237919, 0, 0, 0.489034,-99) , 
3, 1.13511, 0, 0, 0.499438,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.010188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52831,-99) , 
NN(
0, 
0, 
-1, 3.86195, 1, -1, 0.49649,-99) , 
5, 0.997619, 1, 0, 0.497361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477022,-99) , 
4, 9.26727, 1, 0, 0.49638,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.00709425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49923,-99) , 
4, 9.26338, 0, 0, 0.50016,-99) , 
10, -2.14289, 1, 0, 0.500962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473151,-99) , 
5, 0.998571, 0, 0, 0.499636,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0120014);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51175, 0, 1, 0.50482,-99) , 
NN(
0, 
0, 
-1, 1.33989, 1, -1, 0.49468,-99) , 
12, 3.86195, 1, 0, 0.501925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473368,-99) , 
5, 0.998571, 0, 0, 0.500557,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0119414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.52195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497587,-99) , 
10, -1.57144, 1, 0, 0.499009,-99) , 
5, 0.999048, 1, 0, 0.50059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467993,-99) , 
4, 9.25366, 1, 0, 0.499044,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.00883716);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.25366, 0, 1, 0.50336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462348,-99) , 
6, 0.35138, 0, 0, 0.482187,-99) , 
5, 0.999048, 0, 0, 0.501893,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0070639);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.217009, 1, 1, 0.501808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477289,-99) , 
4, 7.24141, 1, 0, 0.500688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480197,-99) , 
4, 9.46687, 1, 0, 0.499764,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.00832278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0142754, 0, 1, 0.502335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457056,-99) , 
1, 0.0261521, 1, 0, 0.501145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471287,-99) , 
1, -0.0237187, 0, 0, 0.50025,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0131163);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533191,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496575,-99) , 
0, 0.495233, 1, 0, 0.498534,-99) , 
4, 9.18172, 0, 0, 0.500196,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464954,-99) , 
9, -951.286, 0, 0, 0.481637,-99) , 
5, 0.999048, 0, 0, 0.498895,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0170479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.999853, 1, 1, 0.509045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45176,-99) , 
12, 1.94569, 0, 0, 0.497595,-99) , 
8, 1.45187, 0, 0, 0.502348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485764,-99) , 
11, -1.6489, 0, 0, 0.494966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453607,-99) , 
0, 0.492376, 0, 0, 0.491589,-99) , 
6, -0.00761816, 1, 0, 0.497856,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.00838997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533736,-99) , 
NN(
0, 
0, 
-1, 7.25344, 1, -1, 0.49788,-99) , 
5, 0.998095, 1, 0, 0.499117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4751,-99) , 
4, 9.47906, 1, 0, 0.498028,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.00851108);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.213928, 1, 1, 0.502444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45786,-99) , 
9, -951.286, 0, 0, 0.478448,-99) , 
5, 0.999048, 0, 0, 0.500775,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0187356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494293,-99) , 
10, 1.1628, 0, 0, 0.498731,-99) , 
10, -1.28564, 1, 0, 0.50281,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.492055,-99) , 
9, -951.286, 0, 0, 0.496202,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0103141);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518611,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.496412,-99) , 
2, 0.214865, 0, 0, 0.497331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476087,-99) , 
5, 0.998571, 0, 0, 0.49631,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0109736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.49263, 0, 1, 0.502694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484008,-99) , 
3, 1.2941, 1, 0, 0.488369,-99) , 
5, 0.999773, 0, 0, 0.500962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508802,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462051,-99) , 
9, -951.286, 0, 0, 0.480976,-99) , 
5, 0.999048, 0, 0, 0.49957,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.00500932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485236,-99) , 
2, 0.214615, 1, 0, 0.499889,-99) , 
8, 2.94227, 0, 0, 0.500569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471986,-99) , 
5, 0.997619, 0, 0, 0.499773,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.0161528);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 0, 1, 0.531335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494906,-99) , 
10, -2.1429, 1, 0, 0.495776,-99) , 
5, 0.999048, 1, 0, 0.498289,-99) , 
NN(
0, 
0, 
-1, 0.214405, 1, -1, 0.489388,-99) , 
4, 4.73512, 1, 0, 0.4965,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0155295);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498253,-99) , 
11, 0.516795, 0, 0, 0.503871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471222,-99) , 
6, -0.526455, 1, 0, 0.494048,-99) , 
3, 1.13511, 0, 0, 0.501497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465519,-99) , 
5, 0.997619, 0, 0, 0.500509,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0160819);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482021,-99) , 
12, 3.78452, 1, 0, 0.504802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487769,-99) , 
6, -0.686752, 1, 0, 0.49405,-99) , 
8, 1.32252, 0, 0, 0.502028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473947,-99) , 
1, 0.0249097, 1, 0, 0.501259,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.00820915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.740628, 0, 1, 0.508035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499081,-99) , 
7, 0.0238055, 0, 0, 0.500324,-99) , 
8, 2.1499, 0, 0, 0.502194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474067,-99) , 
5, 0.997619, 0, 0, 0.501411,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.00772705);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.215252, 1, 1, 0.501875,-99) , 
NN(
0, 
0, 
-1, 1.58234, 0, -1, 0.47946,-99) , 
4, 6.67175, 1, 0, 0.50051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479414,-99) , 
4, 9.28472, 1, 0, 0.499488,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.00926452);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530842,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483943,-99) , 
4, 7.09803, 1, 0, 0.499989,-99) , 
4, 9.27236, 0, 0, 0.501405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507743,-99) , 
NN(
0, 
0, 
-1, 0.347678, 0, -1, 0.475008,-99) , 
9, -951.286, 0, 0, 0.488193,-99) , 
5, 0.999524, 0, 0, 0.499878,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0125543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526659,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498011,-99) , 
10, -2.14285, 1, 0, 0.498971,-99) , 
4, 9.26084, 0, 0, 0.500247,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481727,-99) , 
13, 2.34512, 1, 0, 0.499177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465577,-99) , 
6, 0.17393, 0, 0, 0.486065,-99) , 
5, 0.999524, 0, 0, 0.498621,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0078603);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499571,-99) , 
5, 0.999524, 1, 0, 0.501463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474501,-99) , 
4, 7.61766, 1, 0, 0.50057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47671,-99) , 
4, 9.37865, 1, 0, 0.499469,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0102337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.59689, 0, 1, 0.503099,-99) , 
NN(
0, 
0, 
-1, 0.65395, 1, -1, 0.487107,-99) , 
6, 0.533665, 1, 0, 0.501966,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.476942,-99) , 
5, 0.999048, 0, 0, 0.500247,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0128915);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496627,-99) , 
5, 0.998571, 1, 0, 0.498928,-99) , 
NN(
0, 
0, 
-1, 0.169932, 1, -1, 0.491685,-99) , 
4, 4.82472, 1, 0, 0.497525,-99) , 
10, 1.85707, 0, 0, 0.498405,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0123368);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.2436, 1, 1, 0.52085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486084,-99) , 
5, 0.999751, 0, 0, 0.50011,-99) , 
5, 0.999524, 1, 0, 0.502504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476116,-99) , 
2, 0.193966, 1, 0, 0.498747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450605,-99) , 
2, -0.21414, 0, 0, 0.491092,-99) , 
4, 4.80388, 1, 0, 0.500267,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0132946);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498294,-99) , 
11, 1.95007, 0, 0, 0.511555,-99) , 
NN(
0, 
0, 
-1, 1.20802, 1, -1, 0.495585,-99) , 
12, 4.05126, 1, 0, 0.50228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457358,-99) , 
12, 2.23868, 1, 0, 0.497575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453758,-99) , 
8, 1.51818, 0, 0, 0.49531,-99) , 
11, 0.464701, 0, 0, 0.498467,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.00793835);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48586,-99) , 
3, 0.812318, 0, 0, 0.499496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476868,-99) , 
10, 2.02037, 1, 0, 0.498789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465022,-99) , 
10, -2.14285, 0, 0, 0.497765,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.0123938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498058,-99) , 
7, 0.0238055, 0, 0, 0.499218,-99) , 
4, 9.18854, 0, 0, 0.501029,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506644,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.472088,-99) , 
9, -951.286, 0, 0, 0.485917,-99) , 
5, 0.999524, 0, 0, 0.499299,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0101097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477526,-99) , 
5, 0.99966, 0, 0, 0.500397,-99) , 
4, 9.26084, 0, 0, 0.501969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48678,-99) , 
13, 2.15147, 1, 0, 0.498769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459036,-99) , 
10, -0.714558, 0, 0, 0.488404,-99) , 
5, 0.999524, 0, 0, 0.500407,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0129888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496101,-99) , 
10, 1.57137, 0, 0, 0.497282,-99) , 
2, 0.213712, 0, 0, 0.498503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471941,-99) , 
4, 9.2711, 1, 0, 0.497242,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.00564223);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.502065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481889,-99) , 
4, 9.36646, 1, 0, 0.501114,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0133703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488672,-99) , 
3, 0.963835, 0, 0, 0.510338,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.496492,-99) , 
1, 0.00566885, 0, 0, 0.499343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45975,-99) , 
6, -0.553375, 1, 0, 0.482366,-99) , 
7, 0.0238055, 1, 0, 0.498334,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.00644642);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485079,-99) , 
4, 9.26084, 1, 0, 0.501769,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0134632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.59847, 0, 1, 0.506148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495732,-99) , 
11, 1.62315, 0, 0, 0.497707,-99) , 
6, -0.277927, 1, 0, 0.500989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466876,-99) , 
5, 0.998095, 0, 0, 0.499823,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.011401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80624, 0, 1, 0.503299,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474318,-99) , 
6, 0.0794237, 0, 0, 0.490494,-99) , 
5, 0.999773, 0, 0, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469345,-99) , 
5, 0.997619, 0, 0, 0.500368,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0172582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.675863, 0, 1, 0.50944,-99) , 
NN(
0, 
0, 
-1, -0.33315, 1, -1, 0.493916,-99) , 
8, 1.37371, 0, 0, 0.502341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495106,-99) , 
11, 0.0823871, 0, 0, 0.498569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470616,-99) , 
3, 1.63522, 0, 0, 0.495495,-99) , 
6, 0.0822655, 1, 0, 0.499929,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.00913418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520355,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497716,-99) , 
5, 0.999524, 1, 0, 0.498723,-99) , 
4, 9.26727, 0, 0, 0.499735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479711,-99) , 
5, 0.998571, 0, 0, 0.49878,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0216402);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488772,-99) , 
12, 2.92197, 1, 0, 0.522039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477134,-99) , 
5, 0.999779, 0, 0, 0.500401,-99) , 
6, -0.193415, 0, 0, 0.505258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498062,-99) , 
11, -0.599682, 0, 0, 0.502226,-99) , 
NN(
0, 
0, 
-1, 0.175829, 0, -1, 0.472056,-99) , 
12, 1.49619, 1, 0, 0.49571,-99) , 
11, 0.298751, 0, 0, 0.50026,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0151865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495188,-99) , 
12, 1.98651, 1, 0, 0.498964,-99) , 
4, 9.26585, 0, 0, 0.501023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486527,-99) , 
0, 0.50063, 1, 0, 0.49958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469864,-99) , 
0, 0.497138, 0, 0, 0.486382,-99) , 
5, 0.999524, 0, 0, 0.499352,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.00551046);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499605,-99) , 
0, 0.490471, 1, 0, 0.500372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479375,-99) , 
5, 0.998571, 0, 0, 0.499447,-99) , 
8, 2.99345, 0, 0, 0.500318,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0129884);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499682,-99) , 
4, 1.92585, 1, 0, 0.527622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510361,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497495,-99) , 
12, 0.384148, 1, 0, 0.500115,-99) , 
5, 0.999048, 1, 0, 0.502002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477367,-99) , 
4, 9.49987, 1, 0, 0.5009,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0187377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469442,-99) , 
7, 0.0237204, 1, 0, 0.504649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48669,-99) , 
13, 0.820864, 0, 0, 0.503198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462256,-99) , 
13, 1.51414, 0, 0, 0.488079,-99) , 
10, -1.57144, 0, 0, 0.501878,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0122093);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488571,-99) , 
8, 1.92626, 0, 0, 0.499458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477277,-99) , 
0, 0.495233, 0, 0, 0.494645,-99) , 
4, 4.80371, 1, 0, 0.501969,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0137848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.87633, 1, 1, 0.508926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451598,-99) , 
3, 1.20451, 0, 0, 0.50026,-99) , 
11, 2.41438, 0, 0, 0.502717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483535,-99) , 
8, 2.13116, 1, 0, 0.497304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472799,-99) , 
10, -1.00003, 0, 0, 0.492497,-99) , 
0, 0.494281, 0, 0, 0.501017,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0134498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494128,-99) , 
4, 1.47193, 1, 0, 0.497395,-99) , 
5, 0.998095, 1, 0, 0.498832,-99) , 
NN(
0, 
0, 
-1, -0.214114, 0, -1, 0.488992,-99) , 
4, 4.81786, 1, 0, 0.49692,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0106322);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497804,-99) , 
0, 0.5019, 0, 0, 0.507303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493631,-99) , 
11, -0.174817, 0, 0, 0.498092,-99) , 
2, 0.071499, 0, 0, 0.499447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47527,-99) , 
5, 0.997619, 0, 0, 0.498769,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0126548);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496686,-99) , 
0, 0.492377, 1, 0, 0.497838,-99) , 
4, 9.26727, 0, 0, 0.499032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453462,-99) , 
6, 0.353845, 0, 0, 0.481956,-99) , 
5, 0.999048, 0, 0, 0.497857,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0151149);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497395,-99) , 
5, 0.999977, 0, 0, 0.511144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493317,-99) , 
12, 1.86498, 1, 0, 0.496526,-99) , 
4, 4.66663, 0, 0, 0.499553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483389,-99) , 
8, 1.9741, 1, 0, 0.491972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463484,-99) , 
6, -0.0967369, 0, 0, 0.485503,-99) , 
5, 0.999524, 0, 0, 0.497943,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0110394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498092,-99) , 
5, 0.999864, 1, 0, 0.500521,-99) , 
5, 0.998571, 1, 0, 0.502009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481185,-99) , 
4, 9.50217, 1, 0, 0.501078,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0133935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.40335, 1, 1, 0.513748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498377,-99) , 
7, 0.0237962, 0, 0, 0.501109,-99) , 
6, -0.203836, 0, 0, 0.504573,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468647,-99) , 
12, 1.63412, 1, 0, 0.496443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453191,-99) , 
8, 1.59187, 0, 0, 0.493875,-99) , 
11, -0.0212058, 0, 0, 0.49946,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0156461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499226,-99) , 
13, 0.959362, 0, 0, 0.506828,-99) , 
10, 0.998816, 0, 0, 0.50968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496231,-99) , 
11, 0.645807, 0, 0, 0.499806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460032,-99) , 
8, 1.29617, 0, 0, 0.49829,-99) , 
11, 3.32739, 0, 0, 0.501082,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.00868869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490628,-99) , 
4, 1.47855, 1, 0, 0.52119,-99) , 
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.50167,-99) , 
5, 0.999048, 1, 0, 0.503008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483001,-99) , 
4, 9.47659, 1, 0, 0.502103,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.00843384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499471,-99) , 
2, 0.275007, 0, 0, 0.500355,-99) , 
2, -0.21456, 1, 0, 0.501894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468454,-99) , 
4, 9.27699, 1, 0, 0.500328,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0136668);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521129,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481597,-99) , 
5, 0.999048, 0, 0, 0.504183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473277,-99) , 
11, -2.31089, 0, 0, 0.490843,-99) , 
6, 0.347151, 1, 0, 0.502163,-99) , 
3, 2.72286, 0, 0, 0.502882,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0124465);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530921,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497551,-99) , 
0, 0.504757, 0, 0, 0.498479,-99) , 
4, 9.26648, 0, 0, 0.499971,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480399,-99) , 
12, 0.111245, 0, 0, 0.497263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458656,-99) , 
6, -0.00656108, 0, 0, 0.486606,-99) , 
5, 0.999524, 0, 0, 0.498433,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0128644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496842,-99) , 
11, 0.675059, 0, 0, 0.50105,-99) , 
3, 2.57593, 0, 0, 0.501931,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484054,-99) , 
6, -0.00727692, 1, 0, 0.497353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470717,-99) , 
10, -0.714179, 0, 0, 0.489993,-99) , 
0, 0.502852, 1, 0, 0.500528,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0152198);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.607587, 0, 1, 0.509732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479477,-99) , 
12, 2.27752, 1, 0, 0.507406,-99) , 
NN(
NN(
0, 
0, 
-1, 9.91497, 0, 1, 0.50315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482666,-99) , 
9, -951.286, 0, 0, 0.491447,-99) , 
11, -0.0568025, 0, 0, 0.500511,-99) , 
8, 1.9437, 0, 0, 0.502966,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0161355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450171,-99) , 
13, 1.42403, 0, 0, 0.497978,-99) , 
11, 1.70098, 0, 0, 0.500721,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493286,-99) , 
6, -0.782505, 1, 0, 0.497319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457263,-99) , 
13, 1.42124, 1, 0, 0.492653,-99) , 
12, 3.5971, 1, 0, 0.498336,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.00769094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47886,-99) , 
7, 0.0237976, 1, 0, 0.499198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466234,-99) , 
13, 1.47452, 0, 0, 0.488933,-99) , 
10, -1.57143, 0, 0, 0.498302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482536,-99) , 
0, 0.490471, 0, 0, 0.497757,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.013493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.20882, 0, 1, 0.504013,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490774,-99) , 
6, -0.794882, 1, 0, 0.495232,-99) , 
12, 5.28837, 1, 0, 0.50196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490897,-99) , 
10, -0.898346, 1, 0, 0.500823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47491,-99) , 
13, 2.29985, 0, 0, 0.491187,-99) , 
12, -0.131994, 0, 0, 0.500513,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.00818274);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499233,-99) , 
4, 9.12457, 0, 0, 0.500482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472569,-99) , 
5, 0.99941, 0, 0, 0.499592,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.477837,-99) , 
5, 0.999048, 0, 0, 0.498095,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0138395);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495811,-99) , 
6, -0.792548, 1, 0, 0.5008,-99) , 
12, 5.89386, 1, 0, 0.506508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52885,-99) , 
NN(
0, 
0, 
-1, 1.33707, 0, -1, 0.495537,-99) , 
11, 2.48832, 0, 0, 0.49713,-99) , 
11, 3.38191, 0, 0, 0.499396,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0082248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213815, 1, 1, 0.50239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476712,-99) , 
4, 7.70506, 1, 0, 0.501526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474088,-99) , 
4, 9.48998, 1, 0, 0.500301,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0139666);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499129,-99) , 
11, -0.359696, 0, 0, 0.50505,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.494349,-99) , 
12, 1.86498, 1, 0, 0.499381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474694,-99) , 
5, 0.998571, 0, 0, 0.498205,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.00658195);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485922,-99) , 
0, 0.49088, 0, 0, 0.501402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484303,-99) , 
0, 0.504757, 1, 0, 0.50055,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0130063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.946061, 0, 1, 0.508004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493179,-99) , 
12, 1.40219, 1, 0, 0.497877,-99) , 
6, -0.548573, 1, 0, 0.499843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467208,-99) , 
5, 0.998095, 0, 0, 0.498745,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0160796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489453,-99) , 
5, 0.999909, 0, 0, 0.510329,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503611,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495728,-99) , 
4, 2.5322, 0, 0, 0.498169,-99) , 
4, 4.70642, 0, 0, 0.500654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459702,-99) , 
9, -951.286, 0, 0, 0.480327,-99) , 
5, 0.999048, 0, 0, 0.499251,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0105493);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497836,-99) , 
4, 2.36661, 1, 0, 0.521876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496587,-99) , 
11, 1.32953, 0, 0, 0.498969,-99) , 
5, 0.999048, 1, 0, 0.500539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481089,-99) , 
4, 9.4997, 1, 0, 0.49966,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0117501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497561,-99) , 
10, -1.28573, 1, 0, 0.499969,-99) , 
4, 9.26648, 0, 0, 0.501071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478061,-99) , 
5, 0.998571, 0, 0, 0.499978,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.00721096);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214134, 1, 1, 0.502486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472345,-99) , 
4, 9.47969, 1, 0, 0.501145,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0110813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.869632, 0, 1, 0.51375,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487503,-99) , 
0, 0.49809, 0, 0, 0.497592,-99) , 
2, 0.207731, 1, 0, 0.508176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494677,-99) , 
8, 1.53927, 0, 0, 0.499376,-99) , 
NN(
0, 
0, 
-1, 0.324572, 0, -1, 0.486642,-99) , 
0, 0.503804, 1, 0, 0.498463,-99) , 
2, 0.0717057, 0, 0, 0.499972,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0162928);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496149,-99) , 
10, -0.428579, 1, 0, 0.499937,-99) , 
12, 5.19019, 1, 0, 0.506094,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483165,-99) , 
12, 2.49206, 1, 0, 0.498775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43683,-99) , 
8, 1.32851, 0, 0, 0.496525,-99) , 
11, 2.63681, 0, 0, 0.499129,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0176274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.05109, 1, 1, 0.506058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463857,-99) , 
11, -2.54346, 0, 0, 0.490881,-99) , 
13, 2.57359, 1, 0, 0.50428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482243,-99) , 
3, 1.28027, 0, 0, 0.495578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457729,-99) , 
5, 0.999524, 0, 0, 0.491458,-99) , 
10, -0.714298, 0, 0, 0.500758,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0124305);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496346,-99) , 
2, -0.113586, 1, 0, 0.497874,-99) , 
2, 0.212553, 0, 0, 0.49914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476721,-99) , 
4, 9.25773, 1, 0, 0.49806,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.00599129);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499964,-99) , 
4, 8.89372, 0, 0, 0.501132,-99) , 
NN(
0, 
0, 
-1, -0.00638652, 0, -1, 0.486415,-99) , 
5, 0.999456, 0, 0, 0.500061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471478,-99) , 
5, 0.998095, 0, 0, 0.499093,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.00991239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496103,-99) , 
4, 1.44236, 1, 0, 0.525707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498584,-99) , 
10, 1.8571, 0, 0, 0.499419,-99) , 
5, 0.999048, 1, 0, 0.501244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477852,-99) , 
4, 9.26585, 1, 0, 0.500118,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.00955786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497026,-99) , 
11, 3.49477, 0, 0, 0.499019,-99) , 
5, 0.998572, 1, 0, 0.49982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480079,-99) , 
4, 9.48356, 1, 0, 0.498933,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0168852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494181,-99) , 
11, 0.332609, 0, 0, 0.499804,-99) , 
4, 9.26659, 0, 0, 0.501047,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510392,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.472685,-99) , 
6, 0.533531, 0, 0, 0.482733,-99) , 
5, 0.999524, 0, 0, 0.49897,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0110431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.06444, 0, 1, 0.504021,-99) , 
NN(
0, 
0, 
-1, -0.793536, 1, -1, 0.49156,-99) , 
11, 12.7861, 1, 0, 0.502868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471633,-99) , 
6, 0.443861, 0, 0, 0.487055,-99) , 
5, 0.999048, 0, 0, 0.501771,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.00968404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.34423, 0, 1, 0.526153,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498837,-99) , 
2, -0.216491, 1, 0, 0.499699,-99) , 
5, 0.999048, 1, 0, 0.501537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468926,-99) , 
4, 9.51008, 1, 0, 0.500095,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0111264);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496453,-99) , 
12, 3.46557, 1, 0, 0.513972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497223,-99) , 
5, 0.999932, 0, 0, 0.501803,-99) , 
10, 1.28566, 0, 0, 0.503173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484972,-99) , 
5, 0.998571, 0, 0, 0.502291,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.00924675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499224,-99) , 
2, 0.0304954, 0, 0, 0.501366,-99) , 
2, -0.21433, 1, 0, 0.502553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476035,-99) , 
4, 9.26727, 1, 0, 0.501304,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.01647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495213,-99) , 
5, 0.999977, 0, 0, 0.506454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491805,-99) , 
5, 0.999977, 1, 0, 0.497593,-99) , 
6, -0.280819, 1, 0, 0.50115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493101,-99) , 
11, 0.0735758, 0, 0, 0.49977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457161,-99) , 
0, 0.494281, 0, 0, 0.488752,-99) , 
5, 0.999524, 0, 0, 0.499725,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.00920352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498942,-99) , 
5, 0.999819, 1, 0, 0.500593,-99) , 
5, 0.998095, 1, 0, 0.501696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470437,-99) , 
4, 9.27946, 1, 0, 0.500227,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.00878123);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.18172, 0, 1, 0.502996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466033,-99) , 
6, 0.441348, 0, 0, 0.484206,-99) , 
5, 0.999048, 0, 0, 0.501704,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0107606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498781,-99) , 
3, 0.694624, 0, 0, 0.51372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499982,-99) , 
11, 1.8419, 0, 0, 0.502738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440249,-99) , 
11, 2.91431, 0, 0, 0.491603,-99) , 
12, 3.714, 1, 0, 0.500369,-99) , 
12, 9.59407, 0, 0, 0.501625,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0188619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.90721, 0, 1, 0.506356,-99) , 
NN(
0, 
0, 
-1, 1.60666, 1, -1, 0.495519,-99) , 
12, 3.07182, 1, 0, 0.502328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451932,-99) , 
3, 1.54381, 0, 0, 0.478343,-99) , 
9, -951.286, 0, 0, 0.490927,-99) , 
10, -1.28573, 0, 0, 0.500805,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00836775);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49377,-99) , 
0, 0.494507, 0, 0, 0.500525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476135,-99) , 
1, -0.0233399, 0, 0, 0.499788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470076,-99) , 
0, 0.505709, 1, 0, 0.498973,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.00975973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472738,-99) , 
4, 7.71497, 1, 0, 0.50202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472558,-99) , 
4, 9.4997, 1, 0, 0.500716,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.00996918);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498954,-99) , 
4, 9.26585, 0, 0, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0.260965, 0, -1, 0.487885,-99) , 
5, 0.999796, 0, 0, 0.498823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479764,-99) , 
5, 0.998571, 0, 0, 0.497907,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.00834575);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.503414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479517,-99) , 
4, 9.47659, 1, 0, 0.502351,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.00653428);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.28584, 0, 1, 0.502304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477559,-99) , 
5, 0.998571, 0, 0, 0.501121,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.00856112);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0134992, 0, 1, 0.50282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464545,-99) , 
1, -0.0257744, 0, 0, 0.501786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476272,-99) , 
1, 0.024057, 1, 0, 0.50105,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0118611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.709477, 0, 1, 0.507464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491774,-99) , 
12, 2.03841, 1, 0, 0.497899,-99) , 
12, 8.81921, 0, 0, 0.498935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479923,-99) , 
4, 9.20864, 1, 0, 0.498002,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0144345);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495827,-99) , 
8, 1.49077, 0, 0, 0.516919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495244,-99) , 
3, 1.28933, 1, 0, 0.498977,-99) , 
10, -1.85715, 1, 0, 0.499994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464435,-99) , 
5, 0.998095, 0, 0, 0.498774,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0100253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49981,-99) , 
12, 2.13372, 1, 0, 0.502618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480699,-99) , 
13, 1.84132, 0, 0, 0.495202,-99) , 
11, 0.234058, 0, 0, 0.498796,-99) , 
NN(
0, 
0, 
-1, -0.103892, 1, -1, 0.47981,-99) , 
0, 0.491424, 0, 0, 0.497786,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0115177);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545168,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498035,-99) , 
4, 8.81654, 0, 0, 0.500603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467994,-99) , 
4, 4.64175, 1, 0, 0.494179,-99) , 
5, 0.999887, 0, 0, 0.499017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479151,-99) , 
5, 0.997619, 0, 0, 0.498465,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0177918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.91971, 0, 1, 0.505795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487645,-99) , 
12, 14.5184, 1, 0, 0.502907,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49165,-99) , 
11, 0.142979, 0, 0, 0.496459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460622,-99) , 
8, 1.32227, 0, 0, 0.494765,-99) , 
11, 3.27233, 0, 0, 0.496785,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.017732);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490722,-99) , 
3, 1.45271, 1, 0, 0.500108,-99) , 
10, 1.28568, 0, 0, 0.504232,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.494088,-99) , 
9, -951.286, 0, 0, 0.498003,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0169478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.22727, 1, 1, 0.523573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490265,-99) , 
9, -951.286, 1, 0, 0.502039,-99) , 
11, -0.576068, 0, 0, 0.505887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491322,-99) , 
5, 0.999955, 0, 0, 0.499115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45713,-99) , 
5, 0.999048, 0, 0, 0.497469,-99) , 
3, 1.7775, 0, 0, 0.500386,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.00997177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 14.3931, 1, 1, 0.511186,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491759,-99) , 
12, 3.60675, 1, 0, 0.499907,-99) , 
12, 10.3481, 0, 0, 0.500868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476409,-99) , 
5, 0.997619, 0, 0, 0.500194,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0105804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498339,-99) , 
4, 3.62003, 0, 0, 0.501248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477638,-99) , 
6, 0.624459, 1, 0, 0.500306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459783,-99) , 
0, 0.497138, 0, 0, 0.4827,-99) , 
5, 0.999048, 0, 0, 0.499101,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0104631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498015,-99) , 
0, 0.491424, 1, 0, 0.499234,-99) , 
4, 9.26727, 0, 0, 0.500148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464698,-99) , 
6, 0.443362, 0, 0, 0.484409,-99) , 
5, 0.999048, 0, 0, 0.499061,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0114182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.80624, 0, 1, 0.503327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475753,-99) , 
5, 0.999683, 0, 0, 0.502266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492059,-99) , 
6, 0.567785, 0, 0, 0.500607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471675,-99) , 
3, 1.76287, 0, 0, 0.48864,-99) , 
5, 0.999524, 0, 0, 0.500694,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00859709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499808,-99) , 
5, 0.999524, 1, 0, 0.502229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474901,-99) , 
4, 7.1749, 1, 0, 0.50096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48164,-99) , 
4, 9.37618, 1, 0, 0.500065,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0190169);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482683,-99) , 
9, -951.286, 1, 0, 0.50128,-99) , 
11, -1.58709, 0, 0, 0.507851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494221,-99) , 
12, 3.88596, 1, 0, 0.500379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476449,-99) , 
12, 2.20129, 0, 0, 0.488494,-99) , 
10, -1.28573, 0, 0, 0.498696,-99) , 
8, 2.37006, 0, 0, 0.500239,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.00995032);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48349,-99) , 
2, 0.112273, 1, 0, 0.495183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471508,-99) , 
2, -0.214255, 0, 0, 0.491384,-99) , 
4, 4.79347, 1, 0, 0.501453,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.00841925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499937,-99) , 
5, 0.999048, 1, 0, 0.501287,-99) , 
NN(
0, 
0, 
-1, 2.10017, 1, -1, 0.480801,-99) , 
4, 6.38391, 1, 0, 0.499755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463284,-99) , 
4, 9.50668, 1, 0, 0.498172,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.00762921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27716, 0, 1, 0.502313,-99) , 
NN(
0, 
0, 
-1, 0.0765308, 0, -1, 0.485588,-99) , 
5, 0.99932, 0, 0, 0.501249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469569,-99) , 
5, 0.997619, 0, 0, 0.500401,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.00634597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499202,-99) , 
12, 10.3792, 0, 0, 0.500341,-99) , 
0, 0.50394, 0, 0, 0.501001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482643,-99) , 
0, 0.504757, 1, 0, 0.500085,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.00857935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502911,-99) , 
NN(
0, 
0, 
-1, 0.259271, 1, -1, 0.494764,-99) , 
4, 4.79347, 1, 0, 0.501374,-99) , 
NN(
0, 
0, 
-1, -0.277572, 1, -1, 0.484746,-99) , 
0, 0.503804, 1, 0, 0.500061,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.00656667);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499944,-99) , 
3, 2.17839, 0, 0, 0.50178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486266,-99) , 
6, 0.623896, 1, 0, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464635,-99) , 
5, 0.997619, 0, 0, 0.500119,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.00975271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497617,-99) , 
3, 1.40789, 0, 0, 0.509362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48774,-99) , 
0, 0.5019, 1, 0, 0.498323,-99) , 
4, 4.70409, 0, 0, 0.500558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471593,-99) , 
6, 0.438576, 0, 0, 0.485898,-99) , 
5, 0.999048, 0, 0, 0.499544,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0100196);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0185616, 1, 1, 0.515014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493442,-99) , 
5, 0.999819, 0, 0, 0.500792,-99) , 
0, 0.503804, 0, 0, 0.501915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465921,-99) , 
5, 0.998095, 0, 0, 0.500702,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0120752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49197,-99) , 
6, -0.0973343, 0, 0, 0.514437,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497387,-99) , 
5, 0.999841, 1, 0, 0.498733,-99) , 
5, 0.999524, 1, 0, 0.500532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472897,-99) , 
4, 9.33289, 1, 0, 0.499249,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.00784738);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531942,-99) , 
NN(
0, 
0, 
-1, -0.023901, 0, -1, 0.497051,-99) , 
10, -2.14286, 1, 0, 0.498225,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0109646);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498931,-99) , 
4, 3.15907, 1, 0, 0.521728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498803,-99) , 
0, 0.491424, 1, 0, 0.499937,-99) , 
5, 0.999524, 1, 0, 0.502442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475874,-99) , 
4, 9.19867, 1, 0, 0.501159,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0119588);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488512,-99) , 
3, 1.28034, 0, 0, 0.512222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49329,-99) , 
13, 0.947446, 0, 0, 0.502192,-99) , 
10, -1.57144, 1, 0, 0.503095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475893,-99) , 
5, 0.997619, 0, 0, 0.502356,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.00627858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49961,-99) , 
2, 0.275308, 0, 0, 0.500444,-99) , 
2, -0.21433, 1, 0, 0.501727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482471,-99) , 
4, 9.37618, 1, 0, 0.500845,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.00965641);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518341,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499694,-99) , 
3, 1.53222, 0, 0, 0.503277,-99) , 
NN(
0, 
0, 
-1, 1.55157, 1, -1, 0.495408,-99) , 
11, 0.178998, 0, 0, 0.499201,-99) , 
10, 1.8571, 0, 0, 0.500029,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0179574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.62325, 1, 1, 0.51473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497196,-99) , 
12, 0.971393, 1, 0, 0.501445,-99) , 
10, 0.428547, 0, 0, 0.505484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496161,-99) , 
11, -0.732134, 0, 0, 0.500808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464105,-99) , 
3, 1.62679, 0, 0, 0.497038,-99) , 
6, 0.0829823, 1, 0, 0.502518,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0123802);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.505791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48519,-99) , 
4, 9.47659, 1, 0, 0.50488,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0111952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498169,-99) , 
12, 6.67167, 1, 0, 0.502699,-99) , 
10, -0.713888, 1, 0, 0.505568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526276,-99) , 
NN(
0, 
0, 
-1, 1.2477, 0, -1, 0.496174,-99) , 
11, 2.37822, 0, 0, 0.497701,-99) , 
11, 3.27233, 0, 0, 0.499654,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0108539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4537, 1, 1, 0.504413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472156,-99) , 
8, 1.64734, 0, 0, 0.488358,-99) , 
4, 6.71272, 1, 0, 0.503436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487006,-99) , 
4, 9.34187, 1, 0, 0.502667,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0164728);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.97414, 0, 1, 0.514321,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475337,-99) , 
8, 1.48248, 0, 0, 0.498922,-99) , 
11, 2.37821, 0, 0, 0.500814,-99) , 
11, 3.27233, 0, 0, 0.504132,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0104039);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497253,-99) , 
6, -0.78175, 1, 0, 0.506542,-99) , 
8, 0.979957, 0, 0, 0.51082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519576,-99) , 
NN(
0, 
0, 
-1, 3.65943, 1, -1, 0.497151,-99) , 
11, 4.72822, 0, 0, 0.498205,-99) , 
11, 6.526, 0, 0, 0.500286,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0127659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496971,-99) , 
4, 3.44458, 0, 0, 0.499428,-99) , 
4, 8.81307, 0, 0, 0.500965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477576,-99) , 
0, 0.501265, 1, 0, 0.496457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471786,-99) , 
0, 0.494281, 0, 0, 0.490004,-99) , 
5, 0.999524, 0, 0, 0.49972,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0133977);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497436,-99) , 
2, -0.00676275, 1, 0, 0.50126,-99) , 
4, 9.18823, 0, 0, 0.50269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486105,-99) , 
5, 0.998617, 1, 0, 0.494111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470769,-99) , 
0, 0.494281, 0, 0, 0.488029,-99) , 
5, 0.999524, 0, 0, 0.501017,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0211489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 1, 1, 0.521284,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482122,-99) , 
4, 9.11468, 1, 0, 0.503524,-99) , 
8, 2.35476, 0, 0, 0.506372,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492636,-99) , 
12, 6.40337, 1, 0, 0.504621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471909,-99) , 
9, -951.286, 0, 0, 0.486777,-99) , 
13, 1.84823, 1, 0, 0.496244,-99) , 
10, 0.428525, 1, 0, 0.503061,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0109117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497081,-99) , 
2, -0.204519, 1, 0, 0.497753,-99) , 
4, 9.27716, 0, 0, 0.499118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470689,-99) , 
9, -951.286, 0, 0, 0.483532,-99) , 
5, 0.999048, 0, 0, 0.49805,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0108703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487654,-99) , 
5, 0.999048, 0, 0, 0.502425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47998,-99) , 
0, 0.497138, 0, 0, 0.493337,-99) , 
2, -0.0509272, 0, 0, 0.501032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464515,-99) , 
4, 5.23328, 1, 0, 0.487169,-99) , 
2, -0.214175, 0, 0, 0.500275,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0120627);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492476,-99) , 
4, 1.82946, 1, 0, 0.496288,-99) , 
2, 0.21058, 0, 0, 0.497212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477259,-99) , 
4, 9.09435, 1, 0, 0.496219,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0175126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531764,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496269,-99) , 
7, 0.0135913, 0, 0, 0.500911,-99) , 
7, 0.023785, 0, 0, 0.504634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4952,-99) , 
2, -0.214263, 1, 0, 0.497484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46595,-99) , 
4, 9.38391, 1, 0, 0.495905,-99) , 
6, -0.280389, 1, 0, 0.499177,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0140616);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.384561, 0, 1, 0.506473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487643,-99) , 
8, 1.49801, 1, 0, 0.498489,-99) , 
12, 1.98651, 1, 0, 0.502521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484137,-99) , 
0, 0.504757, 1, 0, 0.501617,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.00944175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.10519, 0, 1, 0.52192,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489093,-99) , 
6, -0.0969607, 1, 0, 0.500677,-99) , 
0, 0.50326, 1, 0, 0.509501,-99) , 
NN(
NN(
0, 
0, 
-1, 2.92694, 0, 1, 0.501087,-99) , 
NN(
0, 
0, 
-1, -0.191847, 1, -1, 0.486108,-99) , 
0, 0.500539, 1, 0, 0.499367,-99) , 
0, 0.5019, 0, 0, 0.501098,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.0113405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497976,-99) , 
7, 0.0122272, 0, 0, 0.500429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460919,-99) , 
1, -0.0256806, 0, 0, 0.499342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468764,-99) , 
1, 0.0241607, 1, 0, 0.498492,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.00969754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498191,-99) , 
0, 0.500947, 0, 0, 0.49997,-99) , 
4, 9.25773, 0, 0, 0.501428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479774,-99) , 
5, 0.998571, 0, 0, 0.500405,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.00931276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49384,-99) , 
3, 1.76293, 1, 0, 0.498713,-99) , 
4, 9.18172, 0, 0, 0.499873,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.482786,-99) , 
5, 0.999048, 0, 0, 0.498703,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0109474);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.72797, 0, 1, 0.508873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475325,-99) , 
6, 0.226279, 1, 0, 0.500428,-99) , 
3, 1.76293, 0, 0, 0.503407,-99) , 
NN(
0, 
0, 
-1, -0.428464, 0, -1, 0.487741,-99) , 
0, 0.492376, 0, 0, 0.502157,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0109047);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498236,-99) , 
7, 0.00855103, 0, 0, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466276,-99) , 
1, -0.0256538, 0, 0, 0.500545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478028,-99) , 
1, 0.0241676, 1, 0, 0.499908,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.010938);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26659, 0, 1, 0.504058,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481717,-99) , 
6, 0.261445, 0, 0, 0.491125,-99) , 
5, 0.99966, 0, 0, 0.502778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483693,-99) , 
5, 0.998571, 0, 0, 0.501878,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0159401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.3216, 0, 1, 0.505936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488934,-99) , 
2, -0.00727212, 1, 0, 0.497873,-99) , 
2, 0.00341724, 0, 0, 0.50216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490132,-99) , 
5, 0.999521, 1, 0, 0.501757,-99) , 
NN(
0, 
0, 
-1, -0.207454, 0, -1, 0.477936,-99) , 
4, 4.86085, 1, 0, 0.491808,-99) , 
2, -0.071409, 0, 0, 0.500472,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0059355);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.14285, 0, -1, 0.497032,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0116018);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494787,-99) , 
4, 1.4586, 1, 0, 0.513991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497878,-99) , 
7, 0.0237918, 0, 0, 0.499101,-99) , 
5, 0.999524, 1, 0, 0.500782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476472,-99) , 
4, 9.48998, 1, 0, 0.499734,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0125487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.02706, 0, 1, 0.517114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489147,-99) , 
5, 0.999909, 0, 0, 0.49911,-99) , 
0, 0.503804, 0, 0, 0.500501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464463,-99) , 
6, 0.347632, 0, 0, 0.485581,-99) , 
5, 0.999048, 0, 0, 0.499482,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0143986);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.93442, 1, 1, 0.5167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483812,-99) , 
2, 0.207573, 1, 0, 0.495886,-99) , 
4, 4.74128, 1, 0, 0.50779,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496939,-99) , 
8, 1.94415, 0, 0, 0.50114,-99) , 
NN(
0, 
0, 
-1, 1.7017, 1, -1, 0.492819,-99) , 
10, 0.428543, 1, 0, 0.498409,-99) , 
2, 0.0715316, 0, 0, 0.499865,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0108763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48904,-99) , 
11, -2.48071, 0, 0, 0.502557,-99) , 
6, 0.373409, 1, 0, 0.509388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498226,-99) , 
0, 0.491424, 1, 0, 0.499142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482409,-99) , 
4, 9.25773, 1, 0, 0.49838,-99) , 
8, 2.37018, 0, 0, 0.50025,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.00690878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214362, 1, 1, 0.501905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478134,-99) , 
4, 7.70516, 1, 0, 0.501113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47693,-99) , 
4, 9.48998, 1, 0, 0.500069,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0112263);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.51023, 0, 1, 0.510463,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496902,-99) , 
13, 0.9248, 0, 0, 0.504211,-99) , 
NN(
0, 
0, 
-1, 3.88618, 1, -1, 0.495409,-99) , 
11, 4.16766, 0, 0, 0.497469,-99) , 
8, 2.78584, 0, 0, 0.498396,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0198522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473552,-99) , 
8, 1.50863, 0, 0, 0.502104,-99) , 
11, 1.76304, 0, 0, 0.504685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496755,-99) , 
10, 0.999885, 0, 0, 0.501144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465184,-99) , 
13, 1.40888, 1, 0, 0.497225,-99) , 
12, 3.71406, 1, 0, 0.502563,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.00493995);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.132736, 0, 1, 0.501885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486279,-99) , 
2, 0.214378, 1, 0, 0.501115,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.00842284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498361,-99) , 
2, 0.275085, 0, 0, 0.499278,-99) , 
2, -0.214461, 1, 0, 0.50019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474792,-99) , 
4, 9.37618, 1, 0, 0.499048,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0116042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.878222, 1, 1, 0.502505,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476099,-99) , 
9, -951.286, 1, 0, 0.492599,-99) , 
11, -1.44473, 0, 0, 0.500063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481407,-99) , 
2, 0.214319, 1, 0, 0.49913,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.011656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.55226, 0, 1, 0.503007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468329,-99) , 
9, -951.286, 0, 0, 0.480716,-99) , 
7, 0.00113352, 0, 0, 0.500153,-99) , 
NN(
0, 
0, 
-1, -0.143163, 1, -1, 0.482549,-99) , 
7, 0.0238055, 1, 0, 0.499119,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0125079);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496647,-99) , 
11, -0.456175, 0, 0, 0.501529,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.494863,-99) , 
3, 1.88395, 0, 0, 0.496596,-99) , 
3, 2.73561, 0, 0, 0.497471,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.0122883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.752319, 0, 1, 0.514005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491849,-99) , 
12, 3.71388, 1, 0, 0.500519,-99) , 
12, 9.59407, 0, 0, 0.501832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472266,-99) , 
5, 0.998571, 0, 0, 0.50046,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.00783834);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 14.4199, 1, 1, 0.509625,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484957,-99) , 
7, 0.00113322, 0, 0, 0.498476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477093,-99) , 
7, 0.0237976, 1, 0, 0.497546,-99) , 
12, 10.3792, 0, 0, 0.498548,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0124876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999521, 1, 1, 0.516828,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474678,-99) , 
6, -0.190923, 0, 0, 0.492465,-99) , 
4, 4.81476, 1, 0, 0.506497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497696,-99) , 
7, 0.0237977, 0, 0, 0.49867,-99) , 
NN(
0, 
0, 
-1, 0.716931, 1, -1, 0.488826,-99) , 
6, 0.350955, 1, 0, 0.496939,-99) , 
2, -0.0713115, 1, 0, 0.49854,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.00873073);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487732,-99) , 
7, 0.00122361, 0, 0, 0.499527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465104,-99) , 
1, -0.0256963, 0, 0, 0.49858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477231,-99) , 
1, 0.0241304, 1, 0, 0.497973,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.01364);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490534,-99) , 
8, 1.77456, 0, 0, 0.518043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476591,-99) , 
2, -0.213934, 0, 0, 0.500045,-99) , 
12, 0.878222, 1, 0, 0.501492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493984,-99) , 
12, -0.0101275, 0, 0, 0.499874,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.476288,-99) , 
10, -0.207647, 1, 0, 0.49166,-99) , 
11, -1.44473, 0, 0, 0.499048,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.00755056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496694,-99) , 
12, 14.3931, 1, 0, 0.509631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484131,-99) , 
7, 0.00113319, 0, 0, 0.497899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478152,-99) , 
7, 0.0237961, 1, 0, 0.497058,-99) , 
12, 10.3481, 0, 0, 0.498091,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.00788823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.4906, 0, 1, 0.523315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49191,-99) , 
0, 0.499042, 1, 0, 0.510625,-99) , 
NN(
0, 
0, 
-1, 0.0236104, 1, -1, 0.497362,-99) , 
10, -1.57143, 1, 0, 0.498555,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0123122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497439,-99) , 
12, 0.303126, 1, 0, 0.499179,-99) , 
4, 9.27699, 0, 0, 0.500522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456589,-99) , 
9, -951.286, 0, 0, 0.478237,-99) , 
5, 0.999048, 0, 0, 0.499014,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.010086);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521095,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498453,-99) , 
12, 3.76415, 1, 0, 0.50518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455831,-99) , 
12, 2.72101, 1, 0, 0.498459,-99) , 
11, 1.11723, 0, 0, 0.500807,-99) , 
6, -0.819488, 1, 0, 0.501635,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0169042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.422002, 0, 1, 0.514229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479225,-99) , 
11, 3.98961, 0, 0, 0.494408,-99) , 
9, -951.286, 1, 0, 0.50596,-99) , 
NN(
0, 
0, 
-1, 9.48431, 1, -1, 0.494,-99) , 
11, 1.2855, 0, 0, 0.498307,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.0141661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513556,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496293,-99) , 
11, 1.97199, 0, 0, 0.498766,-99) , 
NN(
0, 
0, 
-1, 1.17603, 1, -1, 0.489337,-99) , 
12, 4.3645, 1, 0, 0.496481,-99) , 
10, 1.85708, 0, 0, 0.497213,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00613044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.27716, 0, 1, 0.501686,-99) , 
NN(
0, 
0, 
-1, 1.95639, 1, -1, 0.485651,-99) , 
5, 0.999206, 0, 0, 0.500831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470998,-99) , 
5, 0.997619, 0, 0, 0.500043,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0116602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517758,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498691,-99) , 
11, -0.153064, 0, 0, 0.503551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49574,-99) , 
7, 0.0237824, 0, 0, 0.497496,-99) , 
12, 2.22394, 1, 0, 0.500798,-99) , 
0, 0.505709, 0, 0, 0.501302,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0071191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49934,-99) , 
0, 0.494281, 1, 0, 0.500911,-99) , 
5, 0.997619, 1, 0, 0.501678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478945,-99) , 
4, 9.47659, 1, 0, 0.500678,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0107461);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.90253, 0, 1, 0.503439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481828,-99) , 
0, 0.499043, 1, 0, 0.500907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460908,-99) , 
6, -0.0971422, 0, 0, 0.491961,-99) , 
5, 0.999524, 0, 0, 0.50213,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0173432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.401388, 0, 1, 0.51286,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471653,-99) , 
9, -0.42847, 0, 0, 0.495612,-99) , 
9, -951.286, 1, 0, 0.505673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497608,-99) , 
11, 0.635753, 0, 0, 0.500176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453381,-99) , 
12, 2.85592, 1, 0, 0.497994,-99) , 
11, 1.32953, 0, 0, 0.500734,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.00943872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510945,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498628,-99) , 
5, 0.999864, 1, 0, 0.501169,-99) , 
4, 9.26727, 0, 0, 0.502122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484767,-99) , 
5, 0.998572, 0, 0, 0.501305,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.00978377);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.504368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484299,-99) , 
4, 9.37635, 1, 0, 0.503441,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.00750096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482522,-99) , 
10, -1.65307, 0, 0, 0.501071,-99) , 
10, -2.14286, 1, 0, 0.501687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478465,-99) , 
5, 0.997619, 0, 0, 0.50106,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0241919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497934,-99) , 
10, -0.480973, 0, 0, 0.524464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486771,-99) , 
12, 1.2336, 1, 0, 0.502067,-99) , 
11, -0.184933, 0, 0, 0.505183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487895,-99) , 
9, -951.286, 1, 0, 0.500928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459498,-99) , 
3, 1.81915, 0, 0, 0.48381,-99) , 
13, 1.70732, 1, 0, 0.49805,-99) , 
12, 2.0662, 1, 0, 0.501734,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0101683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498135,-99) , 
0, 0.504757, 0, 0, 0.498885,-99) , 
4, 9.26585, 0, 0, 0.49999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485424,-99) , 
10, -0.00704708, 1, 0, 0.495526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47241,-99) , 
10, -0.714509, 0, 0, 0.489508,-99) , 
5, 0.999524, 0, 0, 0.498795,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.00709619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214122, 0, 1, 0.501961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470621,-99) , 
4, 7.62225, 1, 0, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482217,-99) , 
4, 9.38316, 1, 0, 0.500071,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.00914614);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499879,-99) , 
1, 0.00339901, 0, 0, 0.502217,-99) , 
NN(
0, 
0, 
-1, -0.0234716, 1, -1, 0.489177,-99) , 
7, 0.0237918, 1, 0, 0.501457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507326,-99) , 
NN(
0, 
0, 
-1, 1.70214, 0, -1, 0.478069,-99) , 
11, 2.21619, 0, 0, 0.487296,-99) , 
0, 0.502852, 1, 0, 0.499795,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00918245);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494364,-99) , 
12, 4.70408, 1, 0, 0.500582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476447,-99) , 
10, 2.02037, 1, 0, 0.499832,-99) , 
10, -2.14285, 1, 0, 0.500714,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0152835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0612711, 1, 1, 0.508231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471444,-99) , 
9, -1.28575, 0, 0, 0.504536,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453471,-99) , 
10, -2.07484, 0, 0, 0.499926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46205,-99) , 
10, 1.85709, 1, 0, 0.498112,-99) , 
9, -951.286, 0, 0, 0.500581,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0186258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493728,-99) , 
5, 0.999995, 0, 0, 0.498637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487441,-99) , 
0, 0.503804, 0, 0, 0.4907,-99) , 
5, 0.999887, 0, 0, 0.49669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473201,-99) , 
5, 0.997619, 0, 0, 0.496054,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0222651);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49637,-99) , 
12, 1.76215, 1, 0, 0.507051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492404,-99) , 
3, 2.76495, 0, 0, 0.494596,-99) , 
11, -0.360147, 0, 0, 0.499818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493399,-99) , 
3, 0.930178, 0, 0, 0.498858,-99) , 
NN(
0, 
0, 
-1, 2.74982, 0, -1, 0.477779,-99) , 
11, 5.44649, 0, 0, 0.492412,-99) , 
8, 1.32453, 0, 0, 0.497811,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.00988714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.0387, 1, 1, 0.514436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491655,-99) , 
3, 1.58617, 0, 0, 0.50091,-99) , 
10, -0.142723, 0, 0, 0.508124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516607,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496221,-99) , 
3, 1.61144, 1, 0, 0.499738,-99) , 
10, -2.14286, 1, 0, 0.500276,-99) , 
2, 0.0713277, 0, 0, 0.50149,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0113691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498972,-99) , 
3, 1.73649, 0, 0, 0.50262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481844,-99) , 
9, -951.286, 1, 0, 0.492459,-99) , 
11, -1.71617, 0, 0, 0.500426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479262,-99) , 
12, 14.5391, 1, 0, 0.499588,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0075081);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49925,-99) , 
6, 0.34423, 0, 0, 0.522161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499011,-99) , 
2, 0.198104, 0, 0, 0.499844,-99) , 
5, 0.999048, 1, 0, 0.501364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484606,-99) , 
4, 9.27654, 1, 0, 0.500588,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0191366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.0518, 0, 1, 0.53784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497028,-99) , 
11, 3.0007, 0, 0, 0.501723,-99) , 
12, 0.85174, 1, 0, 0.504289,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495015,-99) , 
3, 2.3617, 0, 0, 0.504729,-99) , 
NN(
0, 
0, 
-1, -0.142185, 1, -1, 0.481057,-99) , 
9, -951.286, 1, 0, 0.494555,-99) , 
11, -1.39021, 0, 0, 0.501784,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0188491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.43663, 1, 1, 0.508433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4805,-99) , 
10, -0.149843, 1, 0, 0.498666,-99) , 
11, -0.947275, 0, 0, 0.504207,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479821,-99) , 
5, 0.999893, 0, 0, 0.49787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480101,-99) , 
6, -0.415216, 1, 0, 0.495611,-99) , 
3, 1.13875, 0, 0, 0.502146,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0111327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49954,-99) , 
11, -1.9014, 0, 0, 0.508475,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497803,-99) , 
4, 9.35166, 0, 0, 0.498916,-99) , 
6, 0.173312, 0, 0, 0.501498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468519,-99) , 
5, 0.998095, 0, 0, 0.500417,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.00490655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499705,-99) , 
0, 0.490471, 1, 0, 0.500434,-99) , 
5, 0.997619, 1, 0, 0.501214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483409,-99) , 
4, 9.37865, 1, 0, 0.500391,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.0225919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482938,-99) , 
12, 2.5513, 1, 0, 0.519495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4938,-99) , 
9, -951.286, 1, 0, 0.50287,-99) , 
11, -0.719538, 0, 0, 0.507256,-99) , 
NN(
NN(
0, 
0, 
-1, 2.24893, 1, 1, 0.525374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493998,-99) , 
7, 0.0124645, 0, 0, 0.498289,-99) , 
7, 0.0237961, 0, 0, 0.500568,-99) , 
6, 0.0807419, 0, 0, 0.502938,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0163391);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.49421, 0, 1, 0.517408,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493268,-99) , 
11, -1.13734, 0, 0, 0.502752,-99) , 
NN(
0, 
0, 
-1, -0.572047, 1, -1, 0.492614,-99) , 
12, 5.12523, 1, 0, 0.50054,-99) , 
10, -1.85714, 1, 0, 0.501465,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.016072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498362,-99) , 
6, 0.173347, 0, 0, 0.505604,-99) , 
10, -1.28289, 1, 0, 0.508673,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470391,-99) , 
10, -2.07483, 0, 0, 0.502239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469069,-99) , 
10, 1.85708, 1, 0, 0.500663,-99) , 
9, -951.286, 0, 0, 0.50374,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0242209);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490455,-99) , 
9, -1.20411, 0, 0, 0.517691,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486066,-99) , 
3, 1.12693, 1, 0, 0.498066,-99) , 
9, 0.142769, 1, 0, 0.508105,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497762,-99) , 
11, 0.777773, 0, 0, 0.502321,-99) , 
NN(
0, 
0, 
-1, -1.57172, 0, -1, 0.491097,-99) , 
3, 1.2766, 0, 0, 0.498805,-99) , 
9, -951.286, 0, 0, 0.502372,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0142725);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.756798, 0, 1, 0.506965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485339,-99) , 
13, 1.48272, 1, 0, 0.500964,-99) , 
12, 2.75664, 1, 0, 0.504612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486924,-99) , 
10, -2.14285, 0, 0, 0.504078,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0120211);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499593,-99) , 
10, 0.143334, 1, 0, 0.5088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496378,-99) , 
9, -951.286, 0, 0, 0.499684,-99) , 
8, 2.12809, 0, 0, 0.501998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475773,-99) , 
5, 0.997619, 0, 0, 0.501298,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0131971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494779,-99) , 
0, 0.498091, 1, 0, 0.499339,-99) , 
5, 0.998571, 1, 0, 0.501031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480261,-99) , 
4, 9.48998, 1, 0, 0.500132,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.00934694);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531788,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499334,-99) , 
12, 2.42584, 1, 0, 0.502793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483342,-99) , 
5, 0.997619, 0, 0, 0.502257,-99) , 
10, -2.14284, 1, 0, 0.503227,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.00984151);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.89093, 0, 1, 0.519666,-99) , 
NN(
NN(
0, 
0, 
-1, 1.02321, 1, 1, 0.503026,-99) , 
NN(
0, 
0, 
-1, 0.0472918, 1, -1, 0.494443,-99) , 
11, -1.22107, 0, 0, 0.500447,-99) , 
10, 1.57138, 0, 0, 0.501819,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.011655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.728454, 0, 1, 0.510143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478533,-99) , 
4, 8.61519, 1, 0, 0.499712,-99) , 
3, 1.77751, 0, 0, 0.503473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463451,-99) , 
6, -0.55345, 1, 0, 0.486619,-99) , 
7, 0.0238055, 1, 0, 0.502467,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0129748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.86774, 0, 1, 0.504548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514403,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490291,-99) , 
10, -0.713918, 1, 0, 0.494281,-99) , 
12, 4.06518, 1, 0, 0.501863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485148,-99) , 
4, 9.48998, 1, 0, 0.501126,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.013442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499952,-99) , 
3, 1.48409, 1, 0, 0.510273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474675,-99) , 
10, -0.13689, 0, 0, 0.492495,-99) , 
12, 2.92646, 1, 0, 0.503451,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.49529,-99) , 
9, -951.286, 0, 0, 0.49844,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0106325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498201,-99) , 
13, 1.40791, 0, 0, 0.502974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478601,-99) , 
0, 0.490063, 0, 0, 0.502271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481177,-99) , 
0, 0.504757, 1, 0, 0.501239,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0137822);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.504667,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494695,-99) , 
8, 1.52901, 1, 0, 0.49998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4871,-99) , 
10, -1.65308, 1, 0, 0.49044,-99) , 
10, 0.142797, 0, 0, 0.494539,-99) , 
0, 0.497138, 0, 0, 0.500643,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.00758063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0145337, 0, 1, 0.502544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471248,-99) , 
1, 0.0263968, 1, 0, 0.501725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478669,-99) , 
1, -0.0234283, 0, 0, 0.501012,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.0187436);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489737,-99) , 
11, 2.6909, 1, 0, 0.513602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48554,-99) , 
3, 1.45297, 1, 0, 0.496922,-99) , 
9, -0.14295, 1, 0, 0.503635,-99) , 
NN(
0, 
0, 
-1, -1.85716, 0, -1, 0.494517,-99) , 
9, -951.286, 0, 0, 0.498037,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.00878603);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49672,-99) , 
8, 1.48682, 0, 0, 0.518612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479892,-99) , 
1, -0.0234283, 0, 0, 0.501431,-99) , 
10, -1.85715, 1, 0, 0.502379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473003,-99) , 
0, 0.505709, 1, 0, 0.501563,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0145645);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492255,-99) , 
9, -951.286, 1, 0, 0.504993,-99) , 
NN(
0, 
0, 
-1, 3.08986, 1, -1, 0.49555,-99) , 
11, 1.86044, 0, 0, 0.498587,-99) , 
10, -2.14286, 1, 0, 0.499395,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00720522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498518,-99) , 
5, 0.999524, 1, 0, 0.499655,-99) , 
4, 9.24801, 0, 0, 0.500452,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485828,-99) , 
5, 0.998571, 0, 0, 0.499764,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.00711106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.18235, 0, 1, 0.50218,-99) , 
NN(
0, 
0, 
-1, -2.19341, 0, -1, 0.491045,-99) , 
5, 0.999524, 0, 0, 0.500902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47589,-99) , 
1, 0.0242341, 1, 0, 0.500195,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0124944);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.60115, 0, 1, 0.530612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480259,-99) , 
10, 0.319966, 1, 0, 0.498202,-99) , 
11, -0.788021, 0, 0, 0.503415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521858,-99) , 
NN(
0, 
0, 
-1, -1.13603, 0, -1, 0.497276,-99) , 
10, -1.57141, 1, 0, 0.498376,-99) , 
12, 1.47358, 1, 0, 0.50045,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.00949318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.38252, 0, 1, 0.503444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483224,-99) , 
6, -0.186998, 0, 0, 0.497258,-99) , 
5, 0.999909, 0, 0, 0.501745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488861,-99) , 
5, 0.998095, 0, 0, 0.501306,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0142092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49581,-99) , 
9, -951.286, 1, 0, 0.50585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475803,-99) , 
8, 1.51657, 0, 0, 0.499475,-99) , 
11, 1.30832, 0, 0, 0.501776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492532,-99) , 
3, 1.77022, 0, 0, 0.500033,-99) , 
NN(
0, 
0, 
-1, 0.493328, 1, -1, 0.478378,-99) , 
0, 0.496185, 0, 0, 0.493001,-99) , 
2, -0.0713489, 0, 0, 0.50035,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0139959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497508,-99) , 
3, 1.22584, 0, 0, 0.50245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47719,-99) , 
6, -0.0598805, 1, 0, 0.500676,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513826,-99) , 
NN(
0, 
0, 
-1, 2.57105, 1, -1, 0.493698,-99) , 
11, 0.896285, 0, 0, 0.495326,-99) , 
3, 1.45266, 1, 0, 0.497686,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.00755456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499781,-99) , 
10, -2.14286, 1, 0, 0.500665,-99) , 
4, 9.26659, 0, 0, 0.501699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480338,-99) , 
11, -1.54476, 0, 0, 0.493907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470959,-99) , 
6, -0.0971422, 0, 0, 0.488646,-99) , 
5, 0.999524, 0, 0, 0.500234,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0107418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498191,-99) , 
10, -2.14287, 1, 0, 0.498823,-99) , 
4, 9.26875, 0, 0, 0.500084,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475612,-99) , 
5, 0.99907, 1, 0, 0.498455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467255,-99) , 
10, -0.714417, 0, 0, 0.490445,-99) , 
5, 0.999524, 0, 0, 0.498994,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0150208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497917,-99) , 
3, 1.44743, 1, 0, 0.504149,-99) , 
10, 1.28392, 0, 0, 0.50637,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474783,-99) , 
10, 1.61215, 1, 0, 0.501223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467357,-99) , 
10, -1.85716, 0, 0, 0.498974,-99) , 
9, -951.286, 0, 0, 0.50183,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.00698337);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.502873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483059,-99) , 
4, 9.48431, 1, 0, 0.502003,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.00897224);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49846,-99) , 
10, -0.714304, 0, 0, 0.502844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491594,-99) , 
3, 2.38477, 1, 0, 0.502248,-99) , 
8, 2.97482, 0, 0, 0.502852,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00828662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49995,-99) , 
10, -2.14286, 1, 0, 0.500969,-99) , 
4, 9.26585, 0, 0, 0.502504,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480412,-99) , 
3, 1.59462, 0, 0, 0.496159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459384,-99) , 
0, 0.494281, 0, 0, 0.486767,-99) , 
5, 0.999524, 0, 0, 0.500735,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0119761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.773131, 0, 1, 0.512266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494953,-99) , 
11, -2.11867, 0, 0, 0.504901,-99) , 
NN(
0, 
0, 
-1, -0.214082, 0, -1, 0.49688,-99) , 
8, 2.03181, 0, 0, 0.499654,-99) , 
12, 9.0224, 0, 0, 0.500965,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0135179);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493059,-99) , 
10, 0.714244, 1, 0, 0.506388,-99) , 
6, 0.311045, 1, 0, 0.513093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481733,-99) , 
4, 8.61289, 1, 0, 0.502065,-99) , 
10, 1.8571, 0, 0, 0.50289,-99) , 
8, 2.35611, 0, 0, 0.50466,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0120926);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494504,-99) , 
3, 1.44223, 1, 0, 0.500377,-99) , 
10, 1.28581, 0, 0, 0.502989,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449993,-99) , 
10, -2.07485, 0, 0, 0.497936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459337,-99) , 
10, 1.85704, 1, 0, 0.496144,-99) , 
9, -951.286, 0, 0, 0.498787,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.015984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.47818, 1, 1, 0.510526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479255,-99) , 
11, 5.69052, 0, 0, 0.494634,-99) , 
12, 2.92646, 1, 0, 0.504479,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.495027,-99) , 
9, -951.286, 0, 0, 0.498663,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00642901);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.24801, 0, 1, 0.502349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478012,-99) , 
6, 0.443362, 0, 0, 0.48941,-99) , 
5, 0.999048, 0, 0, 0.501466,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00868835);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497611,-99) , 
10, -1.85715, 1, 0, 0.498462,-99) , 
5, 0.998572, 1, 0, 0.499488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484349,-99) , 
4, 9.32317, 1, 0, 0.498785,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.00767394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499036,-99) , 
4, 9.26355, 0, 0, 0.500128,-99) , 
10, 1.85708, 0, 0, 0.501138,-99) , 
NN(
0, 
0, 
-1, 2.08324, 0, -1, 0.483317,-99) , 
5, 0.999048, 0, 0, 0.499928,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.00479077);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.501649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481327,-99) , 
4, 9.50217, 1, 0, 0.500757,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0079152);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.14103, 0, 1, 0.511214,-99) , 
NN(
NN(
0, 
0, 
-1, 6.48716, 1, 1, 0.507542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478481,-99) , 
12, 3.909, 1, 0, 0.498537,-99) , 
11, 4.19209, 0, 0, 0.500684,-99) , 
13, 2.6886, 0, 0, 0.501602,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0155812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527356,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49028,-99) , 
0, 0.497139, 0, 0, 0.501251,-99) , 
12, 5.62673, 1, 0, 0.506917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497174,-99) , 
11, 0.645717, 0, 0, 0.500572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460144,-99) , 
8, 1.28797, 0, 0, 0.499209,-99) , 
11, 3.32739, 0, 0, 0.501102,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.00742605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499811,-99) , 
10, 1.8571, 0, 0, 0.500717,-99) , 
4, 9.26727, 0, 0, 0.501806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467436,-99) , 
6, 0.437311, 0, 0, 0.488573,-99) , 
5, 0.999048, 0, 0, 0.500909,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.0179989);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498587,-99) , 
12, 2.58311, 1, 0, 0.512736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483614,-99) , 
12, 1.64437, 1, 0, 0.499136,-99) , 
11, 0.494704, 0, 0, 0.501905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488535,-99) , 
9, -951.286, 1, 0, 0.498449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452894,-99) , 
12, 2.32458, 0, 0, 0.494572,-99) , 
13, 1.40791, 0, 0, 0.499554,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.00941748);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498774,-99) , 
10, -1.57143, 1, 0, 0.499863,-99) , 
4, 9.26084, 0, 0, 0.500869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505265,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.472776,-99) , 
9, -951.286, 0, 0, 0.486132,-99) , 
5, 0.999524, 0, 0, 0.499213,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0119488);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214426, 0, 1, 0.504901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471975,-99) , 
4, 9.24801, 1, 0, 0.503374,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.00808422);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497935,-99) , 
4, 9.27946, 0, 0, 0.498738,-99) , 
10, 1.85709, 0, 0, 0.499621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477419,-99) , 
5, 0.998095, 0, 0, 0.498875,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0228453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493064,-99) , 
12, 3.31233, 1, 0, 0.507237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491512,-99) , 
11, 2.32681, 0, 0, 0.496559,-99) , 
9, -951.286, 0, 0, 0.500543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481723,-99) , 
10, -1.26057, 0, 0, 0.497011,-99) , 
NN(
0, 
0, 
-1, 2.27674, 0, -1, 0.482318,-99) , 
10, -0.717031, 1, 0, 0.489404,-99) , 
11, -1.79149, 0, 0, 0.498364,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00910042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478333,-99) , 
4, 9.50668, 1, 0, 0.501063,-99) , 
6, -0.728206, 1, 0, 0.502088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48108,-99) , 
12, 14.415, 1, 0, 0.501221,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.00723898);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.14285, 1, 1, 0.50199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488163,-99) , 
2, -0.0711837, 1, 0, 0.498334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470855,-99) , 
12, -0.0949291, 0, 0, 0.491884,-99) , 
5, 0.999524, 0, 0, 0.50084,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.0131086);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521371,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497971,-99) , 
9, -0.0611522, 1, 0, 0.506626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478443,-99) , 
9, -1.28554, 0, 0, 0.503814,-99) , 
NN(
0, 
0, 
-1, 1.85708, 1, -1, 0.495873,-99) , 
9, -951.286, 0, 0, 0.498936,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.00577342);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479517,-99) , 
7, 0.0237977, 1, 0, 0.499888,-99) , 
12, 10.1878, 0, 0, 0.500705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4844,-99) , 
12, 14.53, 1, 0, 0.500058,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0124749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498024,-99) , 
5, 0.999841, 1, 0, 0.500216,-99) , 
4, 9.26585, 0, 0, 0.501366,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481722,-99) , 
10, 0.34658, 1, 0, 0.496915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47101,-99) , 
10, -0.714535, 0, 0, 0.490182,-99) , 
5, 0.999524, 0, 0, 0.500106,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.00561334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499572,-99) , 
10, 1.85704, 0, 0, 0.500349,-99) , 
5, 0.998095, 1, 0, 0.501387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483598,-99) , 
4, 9.48998, 1, 0, 0.500602,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0151516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.41329, 0, 1, 0.522448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463074,-99) , 
12, 2.28968, 0, 0, 0.491718,-99) , 
8, 1.48677, 0, 0, 0.509573,-99) , 
NN(
NN(
0, 
0, 
-1, 0.496186, 1, 1, 0.502817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478548,-99) , 
9, -951.286, 0, 0, 0.489102,-99) , 
6, 0.534285, 1, 0, 0.501566,-99) , 
10, -1.00001, 1, 0, 0.503157,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0167832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498574,-99) , 
3, 1.66986, 0, 0, 0.501231,-99) , 
12, 2.17522, 1, 0, 0.504582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495309,-99) , 
11, -0.300191, 0, 0, 0.498908,-99) , 
NN(
0, 
0, 
-1, 1.96173, 0, -1, 0.474184,-99) , 
12, 1.84201, 1, 0, 0.495959,-99) , 
11, 0.298751, 0, 0, 0.500062,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0162501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.31558, 0, 1, 0.509447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488362,-99) , 
12, 2.45752, 1, 0, 0.507402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498082,-99) , 
12, 5.62555, 1, 0, 0.5053,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461876,-99) , 
8, 1.35034, 0, 0, 0.494864,-99) , 
11, 2.68124, 0, 0, 0.500251,-99) , 
8, 1.73749, 0, 0, 0.503677,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.00762375);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484481,-99) , 
4, 9.4997, 1, 0, 0.502468,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.00991674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.18365, 0, 1, 0.514046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496085,-99) , 
12, 2.83383, 1, 0, 0.500413,-99) , 
10, -1.85712, 1, 0, 0.501159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469379,-99) , 
5, 0.998095, 0, 0, 0.500115,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0114347);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488635,-99) , 
12, 14.5214, 1, 0, 0.506397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481321,-99) , 
8, 1.40612, 0, 0, 0.49957,-99) , 
11, 3.59572, 0, 0, 0.501259,-99) , 
8, 2.9729, 0, 0, 0.501781,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.0114445);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.139434, 0, 1, 0.523017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496355,-99) , 
2, -0.13943, 0, 0, 0.503556,-99) , 
0, 0.499995, 0, 0, 0.510829,-99) , 
NN(
NN(
0, 
0, 
-1, 2.13942, 1, 1, 0.503713,-99) , 
NN(
0, 
0, 
-1, 1.6029, 0, -1, 0.495345,-99) , 
11, 0.298751, 0, 0, 0.499348,-99) , 
2, -0.071409, 1, 0, 0.501241,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0163105);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483682,-99) , 
3, 1.2129, 1, 0, 0.499708,-99) , 
6, -0.236798, 0, 0, 0.503092,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499402,-99) , 
11, 0.254635, 0, 0, 0.501956,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482455,-99) , 
6, -0.326253, 1, 0, 0.489174,-99) , 
3, 1.6894, 0, 0, 0.497081,-99) , 
11, 1.29567, 0, 0, 0.499241,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.00812955);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49807,-99) , 
2, 0.275617, 0, 0, 0.498846,-99) , 
2, -0.214102, 1, 0, 0.500148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48824,-99) , 
4, 9.50668, 1, 0, 0.499629,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.0146956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494281,-99) , 
10, -0.14294, 1, 0, 0.503178,-99) , 
11, -0.180588, 0, 0, 0.505797,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0723874, 0, 1, 0.502275,-99) , 
NN(
0, 
0, 
-1, 1.77937, 1, -1, 0.489697,-99) , 
11, 0.66615, 0, 0, 0.497813,-99) , 
8, 1.95455, 0, 0, 0.500629,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0150185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489779,-99) , 
11, -2.39449, 0, 0, 0.501677,-99) , 
6, 0.144932, 1, 0, 0.506176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498165,-99) , 
12, 1.9119, 1, 0, 0.504194,-99) , 
NN(
0, 
0, 
-1, -1.85713, 0, -1, 0.495094,-99) , 
9, -951.286, 0, 0, 0.49846,-99) , 
8, 2.1623, 0, 0, 0.500369,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.00678639);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473774,-99) , 
1, 0.0260919, 1, 0, 0.501153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485366,-99) , 
1, -0.0237057, 0, 0, 0.500678,-99) , 
10, -2.14285, 1, 0, 0.501217,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.00878007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.48449, 0, 1, 0.510995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485084,-99) , 
2, -0.213934, 0, 0, 0.500992,-99) , 
8, 2.35611, 0, 0, 0.50264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477601,-99) , 
5, 0.998095, 0, 0, 0.501803,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0175435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.20109, 0, 1, 0.530891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479521,-99) , 
10, 0.420185, 1, 0, 0.498636,-99) , 
11, -0.383665, 0, 0, 0.504234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525186,-99) , 
NN(
0, 
0, 
-1, 1.80665, 1, -1, 0.494901,-99) , 
3, 1.89788, 0, 0, 0.49651,-99) , 
12, 1.98651, 1, 0, 0.5004,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.00727586);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499477,-99) , 
10, -2.14286, 1, 0, 0.500107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48277,-99) , 
2, -0.0716923, 1, 0, 0.489411,-99) , 
0, 0.502988, 1, 0, 0.498845,-99) , 
NN(
0, 
0, 
-1, -0.107561, 1, -1, 0.481025,-99) , 
0, 0.491424, 0, 0, 0.497893,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.00888402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497953,-99) , 
8, 1.49258, 0, 0, 0.515106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49821,-99) , 
8, 2.37006, 0, 0, 0.499581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474142,-99) , 
12, -0.813138, 0, 0, 0.498427,-99) , 
10, -1.85714, 1, 0, 0.499339,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.01036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.18108, 1, 1, 0.512983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488777,-99) , 
0, 0.5019, 1, 0, 0.509088,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487231,-99) , 
11, 13.3247, 1, 0, 0.500541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475471,-99) , 
10, -2.04763, 0, 0, 0.499444,-99) , 
10, 0.999917, 0, 0, 0.501076,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0163542);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.07841, 1, 1, 0.505944,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489815,-99) , 
11, -2.51874, 0, 0, 0.499564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475545,-99) , 
9, -951.286, 0, 0, 0.48481,-99) , 
8, 1.98144, 0, 0, 0.494109,-99) , 
11, 0.178998, 0, 0, 0.499961,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.00903035);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515196,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497613,-99) , 
1, 0.0142769, 0, 0, 0.49886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467878,-99) , 
1, 0.0261521, 1, 0, 0.498055,-99) , 
1, -0.0237187, 1, 0, 0.498599,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0177446);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484355,-99) , 
5, 0.999864, 0, 0, 0.512412,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493917,-99) , 
11, 1.82356, 0, 0, 0.497526,-99) , 
4, 4.6971, 0, 0, 0.500587,-99) , 
NN(
0, 
0, 
-1, 2.05846, 1, -1, 0.483259,-99) , 
5, 0.999048, 0, 0, 0.499413,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0211246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.56756, 1, 1, 0.523421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486671,-99) , 
9, -951.286, 1, 0, 0.504056,-99) , 
11, -0.893665, 0, 0, 0.507639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476564,-99) , 
12, 2.93381, 1, 0, 0.504913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490756,-99) , 
11, 4.14158, 0, 0, 0.496489,-99) , 
8, 1.6473, 0, 0, 0.499383,-99) , 
13, 2.05291, 0, 0, 0.501828,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.00787206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.39021, 0, 1, 0.510604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484335,-99) , 
6, 0.347195, 1, 0, 0.499131,-99) , 
8, 2.37018, 0, 0, 0.501118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471479,-99) , 
1, -0.0234307, 0, 0, 0.500229,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0118688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49166,-99) , 
4, 4.54681, 1, 0, 0.498742,-99) , 
12, 1.16807, 1, 0, 0.501343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516078,-99) , 
NN(
0, 
0, 
-1, 0.407425, 1, -1, 0.492467,-99) , 
3, 2.73865, 0, 0, 0.494899,-99) , 
11, -0.87066, 0, 0, 0.49915,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.0102756);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.502695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476568,-99) , 
4, 9.2801, 1, 0, 0.501435,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492573,-99) , 
13, 0.888702, 0, 0, 0.496805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471533,-99) , 
13, 1.02733, 1, 0, 0.491469,-99) , 
12, 6.06148, 1, 0, 0.499673,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0127505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477256,-99) , 
13, 1.69762, 0, 0, 0.51886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468856,-99) , 
5, 0.999048, 0, 0, 0.499269,-99) , 
12, 1.06867, 1, 0, 0.500931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515361,-99) , 
NN(
0, 
0, 
-1, -951.286, 1, -1, 0.491321,-99) , 
5, 0.998571, 1, 0, 0.49358,-99) , 
11, -1.22107, 0, 0, 0.498851,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0263488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496496,-99) , 
3, 1.75592, 1, 0, 0.516761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456469,-99) , 
6, -0.466384, 1, 0, 0.487351,-99) , 
3, 1.28036, 0, 0, 0.506386,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492602,-99) , 
12, 2.51661, 1, 0, 0.499651,-99) , 
NN(
0, 
0, 
-1, 1.84778, 1, -1, 0.490025,-99) , 
11, 0.218568, 0, 0, 0.495053,-99) , 
10, -1.00002, 1, 0, 0.497307,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.0178604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497563,-99) , 
12, 1.69649, 1, 0, 0.525425,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487874,-99) , 
12, 0.822189, 1, 0, 0.499415,-99) , 
11, -0.310155, 0, 0, 0.503375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494341,-99) , 
10, 0.714462, 0, 0, 0.49818,-99) , 
NN(
0, 
0, 
-1, 2.5895, 1, -1, 0.481448,-99) , 
6, 0.0665132, 1, 0, 0.496286,-99) , 
12, 1.98651, 1, 0, 0.499847,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0133644);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486436,-99) , 
12, 0.833647, 1, 0, 0.502931,-99) , 
6, 0.318472, 1, 0, 0.50934,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497254,-99) , 
10, -0.143639, 1, 0, 0.515346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49446,-99) , 
10, -0.142887, 0, 0, 0.498834,-99) , 
7, 0.0237976, 0, 0, 0.500007,-99) , 
8, 2.33436, 0, 0, 0.501693,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.014449);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499608,-99) , 
9, -951.286, 1, 0, 0.510148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484535,-99) , 
8, 2.54188, 0, 0, 0.49712,-99) , 
10, 0.428985, 1, 0, 0.505137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4948,-99) , 
7, 0.0238056, 0, 0, 0.495814,-99) , 
10, 1.85708, 0, 0, 0.496509,-99) , 
8, 2.16272, 0, 0, 0.498659,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0122971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53032,-99) , 
NN(
0, 
0, 
-1, 1.39095, 0, -1, 0.497059,-99) , 
11, 1.88128, 0, 0, 0.500082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490815,-99) , 
6, -0.705031, 1, 0, 0.495784,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476396,-99) , 
3, 1.15121, 1, 0, 0.492844,-99) , 
12, 4.37512, 1, 0, 0.498306,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.0121674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495681,-99) , 
8, 1.4427, 0, 0, 0.516517,-99) , 
NN(
NN(
0, 
0, 
-1, 1.12628, 1, 1, 0.504669,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489376,-99) , 
9, -951.286, 0, 0, 0.495051,-99) , 
8, 1.11717, 0, 0, 0.502927,-99) , 
10, -1.85715, 1, 0, 0.503666,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.00856768);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513492,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499498,-99) , 
11, 1.81984, 0, 0, 0.50212,-99) , 
NN(
0, 
0, 
-1, 4.51422, 0, -1, 0.493153,-99) , 
12, 4.17818, 1, 0, 0.500097,-99) , 
11, 22.0484, 0, 0, 0.500635,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0186266);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.65839, 0, 1, 0.522009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491555,-99) , 
12, 0.813971, 1, 0, 0.501574,-99) , 
11, -0.180505, 0, 0, 0.50521,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492133,-99) , 
9, -951.286, 1, 0, 0.500623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471537,-99) , 
6, 0.148551, 1, 0, 0.49877,-99) , 
12, 2.25864, 1, 0, 0.502299,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.010436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.99652, 0, 1, 0.503369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488901,-99) , 
6, -0.690642, 1, 0, 0.496441,-99) , 
12, 4.37512, 1, 0, 0.501676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486697,-99) , 
0, 0.504757, 1, 0, 0.500932,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0133182);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.593764, 1, 1, 0.515315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488664,-99) , 
10, -0.547208, 1, 0, 0.49893,-99) , 
11, -1.95074, 0, 0, 0.506294,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499042,-99) , 
6, -0.191723, 0, 0, 0.501469,-99) , 
NN(
0, 
0, 
-1, 1.42428, 0, -1, 0.494269,-99) , 
11, 1.52809, 0, 0, 0.497532,-99) , 
8, 2.15004, 0, 0, 0.49976,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.00709063);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502097,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.486277,-99) , 
4, 6.35117, 1, 0, 0.500905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483925,-99) , 
4, 9.46687, 1, 0, 0.500164,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0108692);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518649,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496066,-99) , 
11, 0.14706, 0, 0, 0.500314,-99) , 
10, -2.14285, 1, 0, 0.500922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481038,-99) , 
12, 14.4507, 1, 0, 0.500116,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.00935111);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498669,-99) , 
11, 1.88945, 0, 0, 0.501373,-99) , 
NN(
0, 
0, 
-1, 1.30565, 1, -1, 0.494562,-99) , 
12, 4.024, 1, 0, 0.499571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481581,-99) , 
0, 0.505709, 1, 0, 0.499061,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0173349);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.46856, 1, 1, 0.530244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495838,-99) , 
8, 2.51833, 0, 0, 0.499494,-99) , 
11, -0.460812, 0, 0, 0.504513,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485276,-99) , 
3, 1.28049, 1, 0, 0.496044,-99) , 
3, 1.86585, 0, 0, 0.497624,-99) , 
12, 1.86498, 1, 0, 0.500947,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0105878);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.644082, 0, 1, 0.508414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499865,-99) , 
3, 2.07707, 1, 0, 0.513247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479058,-99) , 
13, 1.91118, 1, 0, 0.499552,-99) , 
3, 1.89934, 0, 0, 0.500886,-99) , 
12, 1.25274, 1, 0, 0.503676,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0126505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495218,-99) , 
10, -1.00965, 0, 0, 0.525767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480928,-99) , 
8, 1.61881, 0, 0, 0.500182,-99) , 
11, -0.113025, 0, 0, 0.504311,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496184,-99) , 
0, 0.501899, 0, 0, 0.498152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476565,-99) , 
6, 0.167496, 1, 0, 0.496874,-99) , 
12, 2.25864, 1, 0, 0.500952,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.0123062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495383,-99) , 
0, 0.494281, 1, 0, 0.496964,-99) , 
4, 9.26585, 0, 0, 0.498025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474145,-99) , 
9, -951.286, 0, 0, 0.485191,-99) , 
5, 0.999048, 0, 0, 0.497157,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.00654151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498788,-99) , 
2, -0.214086, 1, 0, 0.49954,-99) , 
5, 0.998095, 1, 0, 0.50059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4876,-99) , 
4, 9.38656, 1, 0, 0.5,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.00791797);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214378, 0, 1, 0.503541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486982,-99) , 
4, 9.4997, 1, 0, 0.502811,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0132853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497655, 0, 1, 0.507139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495499,-99) , 
7, 0.0237961, 0, 0, 0.497178,-99) , 
6, -0.0127865, 0, 0, 0.500883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503218,-99) , 
NN(
0, 
0, 
-1, -3.22977, 1, -1, 0.483923,-99) , 
11, -2.74872, 0, 0, 0.489838,-99) , 
12, -0.393077, 0, 0, 0.49976,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.0112754);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486794,-99) , 
3, 0.811879, 0, 0, 0.502312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477863,-99) , 
1, -0.0249959, 0, 0, 0.50162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471102,-99) , 
1, 0.0247002, 1, 0, 0.500767,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.00715837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499448,-99) , 
1, -0.00878949, 1, 0, 0.500834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456071,-99) , 
1, -0.0253858, 0, 0, 0.499602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475161,-99) , 
1, 0.0243999, 1, 0, 0.498917,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0127312);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23807, 0, 1, 0.5205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49387,-99) , 
8, 1.0038, 0, 0, 0.502731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481626,-99) , 
9, -951.286, 0, 0, 0.490779,-99) , 
6, 0.444019, 1, 0, 0.501159,-99) , 
10, -1.85712, 1, 0, 0.502225,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0143658);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.66561, 0, 1, 0.521198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49645,-99) , 
10, 0.142831, 0, 0, 0.500323,-99) , 
12, 1.06676, 1, 0, 0.502083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490043,-99) , 
12, 0.149777, 0, 0, 0.497644,-99) , 
NN(
0, 
0, 
-1, -0.428483, 1, -1, 0.483691,-99) , 
9, -951.286, 1, 0, 0.49169,-99) , 
11, -1.22107, 0, 0, 0.499143,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.00928111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.214249, 0, 1, 0.503624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480215,-99) , 
6, 0.624459, 1, 0, 0.502649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488477,-99) , 
5, 0.998572, 0, 0, 0.501977,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0176291);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.62281, 0, 1, 0.508139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471872,-99) , 
10, -0.472267, 1, 0, 0.490963,-99) , 
11, -2.31504, 0, 0, 0.503621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488566,-99) , 
11, 5.33735, 0, 0, 0.494076,-99) , 
3, 1.54034, 0, 0, 0.495827,-99) , 
3, 1.59236, 0, 0, 0.49945,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0169189);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499164,-99) , 
11, 2.02532, 0, 0, 0.501863,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481609,-99) , 
12, 7.97247, 0, 0, 0.491987,-99) , 
6, -0.550186, 0, 0, 0.499996,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484126,-99) , 
9, 0.144203, 1, 0, 0.504813,-99) , 
NN(
0, 
0, 
-1, 1.8979, 1, -1, 0.485263,-99) , 
9, -951.286, 0, 0, 0.492826,-99) , 
10, 0.428543, 1, 0, 0.49766,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.010307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492095,-99) , 
5, 0.999796, 0, 0, 0.511286,-99) , 
NN(
0, 
0, 
-1, 3.99836, 1, -1, 0.497504,-99) , 
4, 4.6448, 0, 0, 0.500374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488832,-99) , 
5, 0.998572, 0, 0, 0.49983,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0139155);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.2381, 0, 1, 0.522345,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498386,-99) , 
11, -0.683538, 0, 0, 0.503288,-99) , 
NN(
0, 
0, 
-1, 0.499995, 0, -1, 0.489463,-99) , 
12, 5.04378, 1, 0, 0.500212,-99) , 
10, -1.85715, 1, 0, 0.50142,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0115416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.26585, 0, 1, 0.503951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486312,-99) , 
0, 0.5019, 0, 0, 0.490801,-99) , 
5, 0.999819, 0, 0, 0.502019,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.486104,-99) , 
5, 0.999048, 0, 0, 0.500944,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.00749127);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.491424, 0, -1, 0.496254,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.00653401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51363,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499393,-99) , 
10, -1.85716, 1, 0, 0.500172,-99) , 
5, 0.997619, 1, 0, 0.501445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481387,-99) , 
4, 9.46687, 1, 0, 0.500562,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.0151899);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.17522, 1, 1, 0.506873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498276,-99) , 
11, -0.565549, 0, 0, 0.502535,-99) , 
NN(
0, 
0, 
-1, 1.81694, 0, -1, 0.480955,-99) , 
12, 1.58193, 1, 0, 0.498279,-99) , 
11, 0.332609, 0, 0, 0.502338,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.018077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476894,-99) , 
8, 1.6029, 0, 0, 0.503911,-99) , 
11, 0.170519, 0, 0, 0.506235,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516246,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494255,-99) , 
8, 1.00282, 0, 0, 0.50178,-99) , 
NN(
0, 
0, 
-1, 3.57228, 1, -1, 0.492196,-99) , 
11, 4.69959, 0, 0, 0.496253,-99) , 
12, 2.0662, 1, 0, 0.50142,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0172496);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458005,-99) , 
12, 3.02549, 1, 0, 0.500678,-99) , 
11, 1.80197, 0, 0, 0.503379,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486211,-99) , 
12, 10.567, 0, 0, 0.492667,-99) , 
10, -0.712126, 1, 0, 0.495362,-99) , 
12, 4.15675, 1, 0, 0.50132,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0114764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499707,-99) , 
3, 1.66986, 0, 0, 0.501196,-99) , 
12, 2.13942, 1, 0, 0.503848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496867,-99) , 
10, -1.0001, 1, 0, 0.499989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468614,-99) , 
8, 1.59383, 0, 0, 0.497601,-99) , 
11, 0.288579, 0, 0, 0.500587,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00863093);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.2381, 0, 1, 0.520297,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489096,-99) , 
7, 0.0237823, 1, 0, 0.501352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472836,-99) , 
10, 2.07479, 1, 0, 0.500558,-99) , 
10, -1.85715, 1, 0, 0.501655,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.0145486);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467387,-99) , 
4, 9.50668, 1, 0, 0.502542,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495847,-99) , 
10, 0.712566, 0, 0, 0.499665,-99) , 
NN(
0, 
0, 
-1, -1.28607, 0, -1, 0.485256,-99) , 
6, -0.49343, 1, 0, 0.493349,-99) , 
8, 1.53052, 0, 0, 0.498976,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0152765);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517741,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496197,-99) , 
9, -951.286, 0, 0, 0.502962,-99) , 
12, 5.84608, 1, 0, 0.506645,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496973,-99) , 
11, 1.53915, 0, 0, 0.499535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463673,-99) , 
12, 3.75078, 1, 0, 0.4976,-99) , 
11, 3.32739, 0, 0, 0.499827,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.012975);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479151,-99) , 
10, 1.57149, 1, 0, 0.503548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483945,-99) , 
5, 0.999909, 0, 0, 0.498302,-99) , 
6, 0.0825957, 0, 0, 0.500062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471942,-99) , 
5, 0.998095, 0, 0, 0.49914,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0144407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.713323, 0, 1, 0.50509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511274,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494467,-99) , 
13, 2.01549, 0, 0, 0.499031,-99) , 
10, -0.428651, 0, 0, 0.502864,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475512,-99) , 
2, 0.00361189, 0, 0, 0.49162,-99) , 
2, -0.0712133, 1, 0, 0.495321,-99) , 
0, 0.500947, 1, 0, 0.501096,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0143854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491166,-99) , 
11, -2.08222, 0, 0, 0.502619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484307,-99) , 
10, -0.755119, 0, 0, 0.493013,-99) , 
13, 1.34938, 0, 0, 0.499803,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494038,-99) , 
10, 0.142837, 1, 0, 0.497348,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.0132552);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494436,-99) , 
11, 0.288579, 0, 0, 0.498816,-99) , 
5, 0.998572, 1, 0, 0.500401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475289,-99) , 
4, 9.26727, 1, 0, 0.499231,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0164713);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.53347, 1, 1, 0.513313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495492,-99) , 
7, 0.023785, 0, 0, 0.498,-99) , 
6, -0.197516, 0, 0, 0.501474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496427,-99) , 
11, -0.300182, 0, 0, 0.499017,-99) , 
NN(
0, 
0, 
-1, 2.06879, 0, -1, 0.470186,-99) , 
12, 1.77539, 1, 0, 0.495156,-99) , 
11, 0.298751, 0, 0, 0.498177,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0173667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552502,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481965,-99) , 
8, 1.77143, 0, 0, 0.504227,-99) , 
11, -0.33069, 0, 0, 0.5073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523995,-99) , 
NN(
0, 
0, 
-1, 1.52359, 1, -1, 0.494589,-99) , 
3, 2.0532, 0, 0, 0.495982,-99) , 
12, 1.47358, 1, 0, 0.500645,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0129592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544984,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495598,-99) , 
3, 1.60506, 1, 0, 0.500217,-99) , 
5, 0.998095, 1, 0, 0.501714,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488549,-99) , 
2, -0.0713411, 0, 0, 0.500482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474377,-99) , 
8, 2.40195, 0, 0, 0.486034,-99) , 
6, 0.0814806, 1, 0, 0.495286,-99) , 
4, 4.7535, 1, 0, 0.500443,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.00820955);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498523,-99) , 
11, -1.80129, 0, 0, 0.506763,-99) , 
NN(
0, 
0, 
-1, 4.62779, 1, -1, 0.49764,-99) , 
8, 2.3701, 0, 0, 0.49915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480349,-99) , 
10, 1.85711, 1, 0, 0.498394,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0137442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.44552, 1, 1, 0.515374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494563,-99) , 
5, 0.999977, 1, 0, 0.499705,-99) , 
5, 0.999524, 1, 0, 0.501467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484097,-99) , 
4, 9.33306, 1, 0, 0.500675,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.013698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472297,-99) , 
3, 1.24492, 0, 0, 0.504713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500666,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476521,-99) , 
13, 1.64136, 1, 0, 0.498541,-99) , 
12, 2.98457, 1, 0, 0.502283,-99) , 
NN(
0, 
0, 
-1, 2.49145, 0, -1, 0.488609,-99) , 
12, -0.392925, 0, 0, 0.500903,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0110451);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496047,-99) , 
8, 1.56739, 0, 0, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482507,-99) , 
7, 0.0237961, 1, 0, 0.500473,-99) , 
6, -0.819742, 1, 0, 0.501178,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0114541);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.13094, 0, 1, 0.514845,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499158,-99) , 
11, 0.632053, 0, 0, 0.503444,-99) , 
NN(
0, 
0, 
-1, 1.76344, 1, -1, 0.494442,-99) , 
12, 2.75866, 1, 0, 0.499885,-99) , 
10, -1.85715, 1, 0, 0.500687,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0121034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499704,-99) , 
13, 1.47111, 0, 0, 0.508353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488484,-99) , 
10, -0.265325, 0, 0, 0.501608,-99) , 
10, -0.428592, 1, 0, 0.503643,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489543,-99) , 
9, -951.286, 0, 0, 0.49638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471942,-99) , 
0, 0.495233, 0, 0, 0.490633,-99) , 
12, -0.131994, 0, 0, 0.501898,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0111762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493784,-99) , 
3, 1.10666, 0, 0, 0.509713,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499105,-99) , 
10, 1.23113, 0, 0, 0.500618,-99) , 
10, -0.714371, 1, 0, 0.503141,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503677,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.487786,-99) , 
9, -951.286, 0, 0, 0.494019,-99) , 
2, -0.0712065, 0, 0, 0.50166,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00588606);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499832,-99) , 
6, 0.621019, 0, 0, 0.500793,-99) , 
NN(
0, 
0, 
-1, 0.0729368, 1, -1, 0.49106,-99) , 
0, 0.494281, 0, 0, 0.499188,-99) , 
10, -2.14281, 1, 0, 0.49983,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0106407);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.643391, 0, 1, 0.512885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49857,-99) , 
13, 1.65588, 0, 0, 0.502975,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494917,-99) , 
10, 0.142832, 1, 0, 0.499632,-99) , 
12, 10.4256, 0, 0, 0.500713,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.00538331);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533459,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499893,-99) , 
2, 0.214122, 0, 0, 0.500679,-99) , 
5, 0.998095, 1, 0, 0.501793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482569,-99) , 
4, 9.36646, 1, 0, 0.500924,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0139743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.2602, 0, 1, 0.50504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475083,-99) , 
4, 4.63495, 1, 0, 0.498694,-99) , 
5, 0.999909, 0, 0, 0.503298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473681,-99) , 
5, 0.998095, 0, 0, 0.50232,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00546685);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519791,-99) , 
NN(
NN(
0, 
0, 
-1, 9.28584, 0, 1, 0.5014,-99) , 
NN(
0, 
0, 
-1, 1.93989, 1, -1, 0.485383,-99) , 
5, 0.99932, 0, 0, 0.50039,-99) , 
5, 0.997619, 1, 0, 0.500943,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0111701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497792,-99) , 
6, -0.281455, 1, 0, 0.500972,-99) , 
8, 2.97501, 0, 0, 0.501806,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504619,-99) , 
NN(
0, 
0, 
-1, 0.500947, 0, -1, 0.482697,-99) , 
9, -951.286, 0, 0, 0.491263,-99) , 
2, 0.0714698, 1, 0, 0.500203,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0056172);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499721,-99) , 
12, 0.34248, 1, 0, 0.500767,-99) , 
NN(
0, 
0, 
-1, 0.999819, 0, -1, 0.493672,-99) , 
11, -1.79149, 0, 0, 0.499431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481007,-99) , 
5, 0.998095, 0, 0, 0.498814,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00883357);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518298,-99) , 
NN(
NN(
0, 
0, 
-1, 1.79776, 0, 1, 0.504825,-99) , 
NN(
0, 
0, 
-1, 1.56869, 0, -1, 0.497472,-99) , 
6, -0.0104998, 1, 0, 0.50188,-99) , 
5, 0.998095, 1, 0, 0.502464,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0158048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.697864, 0, 1, 0.534595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499162,-99) , 
11, 3.60623, 0, 0, 0.50139,-99) , 
12, 1.19639, 1, 0, 0.504254,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469289,-99) , 
8, 1.87299, 0, 0, 0.503973,-99) , 
NN(
0, 
0, 
-1, 0.366296, 1, -1, 0.485786,-99) , 
9, -951.286, 1, 0, 0.496315,-99) , 
11, -1.04704, 0, 0, 0.501777,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.00950139);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.3276, 0, 1, 0.50363,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494229,-99) , 
11, -1.2495, 0, 0, 0.498009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478122,-99) , 
0, 0.5019, 1, 0, 0.494909,-99) , 
3, 2.06668, 1, 0, 0.501936,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.00870321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49099,-99) , 
11, -2.01345, 0, 0, 0.514449,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49908,-99) , 
10, -1.85714, 1, 0, 0.500072,-99) , 
5, 0.999524, 1, 0, 0.501691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483039,-99) , 
4, 9.48998, 1, 0, 0.500893,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0125662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.75107, 0, 1, 0.504634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47427,-99) , 
11, 4.33732, 0, 0, 0.496521,-99) , 
12, 3.87295, 1, 0, 0.502655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484997,-99) , 
12, 14.5391, 1, 0, 0.501943,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00979682);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499062,-99) , 
11, 0.595166, 0, 0, 0.502948,-99) , 
NN(
0, 
0, 
-1, -1.2857, 0, -1, 0.496115,-99) , 
3, 1.13875, 0, 0, 0.501241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480918,-99) , 
5, 0.998571, 0, 0, 0.500298,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0151212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526387,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483543,-99) , 
3, 1.03733, 1, 0, 0.499711,-99) , 
12, 5.17292, 1, 0, 0.505825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497638,-99) , 
11, 0.602424, 0, 0, 0.500749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470052,-99) , 
12, 3.30995, 1, 0, 0.498613,-99) , 
11, 2.6585, 0, 0, 0.500571,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0121254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49897,-99) , 
11, 0.0174658, 0, 0, 0.500168,-99) , 
11, 0.316066, 0, 0, 0.5026,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495804,-99) , 
0, 0.496185, 1, 0, 0.49899,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468571,-99) , 
3, 1.7725, 0, 0, 0.484403,-99) , 
13, 1.65968, 1, 0, 0.496391,-99) , 
12, 2.17711, 1, 0, 0.49971,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0157645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542726,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460559,-99) , 
13, 1.39095, 0, 0, 0.500609,-99) , 
11, 1.7318, 0, 0, 0.502913,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491671,-99) , 
6, -0.399691, 0, 0, 0.494995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469046,-99) , 
13, 1.40888, 1, 0, 0.492111,-99) , 
12, 3.68059, 1, 0, 0.499781,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.00816686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.2602, 0, 1, 0.502386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483551,-99) , 
12, 1.46755, 0, 0, 0.492572,-99) , 
5, 0.999524, 0, 0, 0.501268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474383,-99) , 
1, 0.024696, 1, 0, 0.500516,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0111404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.42485, 1, 1, 0.520551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495246,-99) , 
8, 1.30131, 0, 0, 0.500361,-99) , 
5, 0.999524, 1, 0, 0.502661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482845,-99) , 
4, 9.25366, 1, 0, 0.501742,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00545355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.89939, 0, 1, 0.513176,-99) , 
NN(
0, 
0, 
-1, 1.35362, 1, -1, 0.498832,-99) , 
10, 1.57131, 0, 0, 0.499854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473355,-99) , 
0, 0.505709, 1, 0, 0.499097,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00805778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485088,-99) , 
10, -1.57144, 0, 0, 0.500491,-99) , 
7, 0.023785, 0, 0, 0.50106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480587,-99) , 
1, -0.0239239, 0, 0, 0.50046,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0098232);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.48998, 0, 1, 0.503624,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492925,-99) , 
8, 1.94508, 0, 0, 0.496712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472927,-99) , 
6, 0.349168, 1, 0, 0.492068,-99) , 
0, 0.494281, 0, 0, 0.501727,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0158327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498193,-99) , 
3, 1.59668, 0, 0, 0.510881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49344,-99) , 
10, 2.04758, 1, 0, 0.507887,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495015,-99) , 
9, -951.286, 1, 0, 0.502615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490235,-99) , 
11, 5.69149, 0, 0, 0.493685,-99) , 
13, 1.80405, 0, 0, 0.497362,-99) , 
10, 0.999966, 0, 0, 0.499143,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0125456);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23812, 0, 1, 0.515128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498417,-99) , 
11, 0.846157, 0, 0, 0.502632,-99) , 
NN(
0, 
0, 
-1, -0.470649, 0, -1, 0.489637,-99) , 
3, 0.973603, 0, 0, 0.500486,-99) , 
10, -1.85716, 1, 0, 0.501287,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0125106);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480362,-99) , 
3, 1.52993, 0, 0, 0.500244,-99) , 
6, -0.374402, 1, 0, 0.512362,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49933,-99) , 
11, 0.43694, 0, 0, 0.503054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467469,-99) , 
13, 1.60395, 1, 0, 0.49535,-99) , 
12, 2.64774, 1, 0, 0.499832,-99) , 
10, -1.57143, 1, 0, 0.500937,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0134165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481647,-99) , 
8, 1.81755, 0, 0, 0.501872,-99) , 
11, -0.390955, 0, 0, 0.505892,-99) , 
NN(
0, 
0, 
-1, -0.999946, 0, -1, 0.496661,-99) , 
12, 1.47358, 1, 0, 0.500465,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.016032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498585,-99) , 
3, 1.58558, 1, 0, 0.503516,-99) , 
6, 0.531138, 0, 0, 0.504909,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493646,-99) , 
11, -0.210956, 0, 0, 0.504972,-99) , 
NN(
0, 
0, 
-1, 1.5072, 1, -1, 0.492235,-99) , 
12, 2.41989, 1, 0, 0.497712,-99) , 
10, 0.142824, 1, 0, 0.501844,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0118603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490323,-99) , 
9, -951.286, 1, 0, 0.50085,-99) , 
11, -1.5332, 0, 0, 0.505375,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49955,-99) , 
12, 1.34905, 1, 0, 0.501764,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.493873,-99) , 
6, -0.285948, 1, 0, 0.497404,-99) , 
8, 2.35615, 0, 0, 0.498791,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0138656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142841, 0, 1, 0.522442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456302,-99) , 
12, 2.48779, 1, 0, 0.498642,-99) , 
11, 0.737891, 0, 0, 0.502984,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494734,-99) , 
10, 0.42883, 0, 0, 0.49884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47024,-99) , 
13, 1.39932, 1, 0, 0.495497,-99) , 
12, 3.67911, 1, 0, 0.50082,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.0173358);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.468641, 1, 1, 0.509541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474445,-99) , 
9, -1.28473, 0, 0, 0.505994,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459222,-99) , 
10, 1.84349, 1, 0, 0.501071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465832,-99) , 
10, -1.85714, 0, 0, 0.498763,-99) , 
9, -951.286, 0, 0, 0.50154,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0122398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.552007, 0, 1, 0.529242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496856,-99) , 
7, 0.0238055, 0, 0, 0.498391,-99) , 
12, 1.27083, 1, 0, 0.500911,-99) , 
NN(
0, 
0, 
-1, 0.706763, 1, -1, 0.494029,-99) , 
11, -0.914689, 0, 0, 0.498616,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0101672);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488866,-99) , 
4, 3.6993, 1, 0, 0.499734,-99) , 
5, 0.998571, 1, 0, 0.501634,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484163,-99) , 
2, 0.112246, 1, 0, 0.496514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474895,-99) , 
2, -0.214249, 0, 0, 0.493124,-99) , 
4, 4.81184, 1, 0, 0.499996,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0104219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491023,-99) , 
5, 0.999887, 0, 0, 0.509167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485247,-99) , 
6, 0.525516, 1, 0, 0.500106,-99) , 
4, 4.70391, 0, 0, 0.50194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478834,-99) , 
5, 0.997619, 0, 0, 0.501327,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0133961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.232546, 0, 1, 0.512609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488452,-99) , 
6, -0.458689, 0, 0, 0.506871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495484,-99) , 
2, 0.226718, 0, 0, 0.496647,-99) , 
4, 9.19645, 0, 0, 0.497279,-99) , 
2, -0.0713037, 1, 0, 0.498857,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0129878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527432,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494438,-99) , 
10, -0.428208, 1, 0, 0.49815,-99) , 
12, 4.96057, 1, 0, 0.504683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472697,-99) , 
12, 3.28128, 1, 0, 0.498729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453361,-99) , 
13, 1.37417, 0, 0, 0.496142,-99) , 
11, 2.46669, 0, 0, 0.498551,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0111018);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524986,-99) , 
NN(
0, 
0, 
-1, 3.44382, 1, -1, 0.496853,-99) , 
11, 2.78373, 0, 0, 0.499248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487963,-99) , 
12, 8.30197, 0, 0, 0.497272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478505,-99) , 
6, -0.556913, 1, 0, 0.492974,-99) , 
12, 5.48405, 1, 0, 0.498023,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0097549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.929701, 1, 1, 0.503654,-99) , 
NN(
0, 
0, 
-1, 0.493328, 0, -1, 0.494453,-99) , 
11, -1.11295, 0, 0, 0.500565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482103,-99) , 
10, 0.138563, 0, 0, 0.4902,-99) , 
3, 0.813344, 0, 0, 0.499538,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00670598);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49951,-99) , 
4, 9.26648, 0, 0, 0.50071,-99) , 
NN(
0, 
0, 
-1, 0.142578, 1, -1, 0.486193,-99) , 
5, 0.999433, 0, 0, 0.499622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466955,-99) , 
5, 0.997619, 0, 0, 0.498769,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.00715349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483707,-99) , 
7, 0.0124416, 1, 0, 0.498744,-99) , 
NN(
0, 
0, 
-1, -0.184036, 1, -1, 0.486733,-99) , 
7, 0.0237554, 1, 0, 0.498013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481611,-99) , 
10, -2.14286, 0, 0, 0.497521,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.00834961);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523231,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498138,-99) , 
5, 0.999524, 1, 0, 0.499167,-99) , 
4, 9.26585, 0, 0, 0.500276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483508,-99) , 
5, 0.998571, 0, 0, 0.499499,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.015841);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499046,-99) , 
3, 1.59272, 0, 0, 0.514671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492505,-99) , 
6, -0.459509, 1, 0, 0.499294,-99) , 
9, -0.142932, 1, 0, 0.505496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487056,-99) , 
12, 6.85587, 1, 0, 0.499599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479493,-99) , 
10, -1.85717, 0, 0, 0.498266,-99) , 
9, -951.286, 0, 0, 0.501055,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.015328);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498714,-99) , 
11, -2.01448, 0, 0, 0.518519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488081,-99) , 
3, 1.30656, 1, 0, 0.499441,-99) , 
6, 0.254522, 0, 0, 0.504471,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479507,-99) , 
10, -1.6939, 0, 0, 0.498279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47683,-99) , 
10, 1.57138, 1, 0, 0.496667,-99) , 
9, -951.286, 0, 0, 0.499681,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0197405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.469277, 1, 1, 0.507984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479269,-99) , 
9, -1.28561, 0, 0, 0.505147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494608,-99) , 
6, -0.401124, 0, 0, 0.503369,-99) , 
NN(
0, 
0, 
-1, 1.54736, 0, -1, 0.490137,-99) , 
11, 1.2855, 0, 0, 0.494688,-99) , 
9, -951.286, 0, 0, 0.498703,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.00994588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.47114, 1, 1, 0.525221,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497891,-99) , 
0, 0.493328, 1, 0, 0.499208,-99) , 
5, 0.999048, 1, 0, 0.500997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484349,-99) , 
4, 9.46687, 1, 0, 0.500279,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0131292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493955,-99) , 
8, 1.53099, 0, 0, 0.506389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495499,-99) , 
10, 0.346928, 0, 0, 0.499491,-99) , 
10, -0.714297, 1, 0, 0.501391,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483799,-99) , 
8, 1.49544, 0, 0, 0.494115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479292,-99) , 
10, 0.713725, 1, 0, 0.490586,-99) , 
0, 0.493328, 0, 0, 0.500122,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0182729);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471548,-99) , 
10, -1.57145, 0, 0, 0.510112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47777,-99) , 
5, 0.999524, 0, 0, 0.496242,-99) , 
11, -0.871971, 0, 0, 0.503217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49267,-99) , 
9, -951.286, 1, 0, 0.499052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468316,-99) , 
13, 1.49878, 1, 0, 0.495782,-99) , 
12, 3.33979, 1, 0, 0.500865,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00544876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.014338, 0, 1, 0.501124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460233,-99) , 
1, 0.0262004, 1, 0, 0.500064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478115,-99) , 
1, -0.02362, 0, 0, 0.4994,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.00708479);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525961,-99) , 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.497195,-99) , 
10, -2.14286, 1, 0, 0.49811,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.00781651);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516618,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498967,-99) , 
12, 5.1531, 1, 0, 0.504022,-99) , 
NN(
0, 
0, 
-1, 2.83997, 1, -1, 0.497457,-99) , 
11, 1.57953, 0, 0, 0.499702,-99) , 
10, -2.14285, 1, 0, 0.500236,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00771842);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527733,-99) , 
NN(
NN(
0, 
0, 
-1, -1.16326, 1, 1, 0.502343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474805,-99) , 
12, -1.09618, 0, 0, 0.501468,-99) , 
10, -2.14286, 1, 0, 0.502309,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0121773);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515516,-99) , 
NN(
NN(
0, 
0, 
-1, 0.187037, 0, 1, 0.503046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486757,-99) , 
11, 2.25055, 0, 0, 0.497039,-99) , 
12, 2.02571, 1, 0, 0.500225,-99) , 
11, 22.0979, 0, 0, 0.500835,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0050545);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516101,-99) , 
NN(
0, 
0, 
-1, 0.0240987, 1, -1, 0.497916,-99) , 
10, -2.14285, 1, 0, 0.49849,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0147019);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512121,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496582,-99) , 
10, -0.136261, 1, 0, 0.501863,-99) , 
12, 6.05921, 1, 0, 0.503867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495232,-99) , 
11, 2.18027, 0, 0, 0.497327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471337,-99) , 
12, 4.22496, 1, 0, 0.49616,-99) , 
11, 4.11946, 0, 0, 0.497857,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00981054);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496882,-99) , 
10, -2.23813, 0, 0, 0.514769,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496049,-99) , 
12, 2.72128, 1, 0, 0.500122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477735,-99) , 
12, -0.890622, 0, 0, 0.499235,-99) , 
10, -1.85716, 1, 0, 0.500077,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0121927);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497139, 0, 1, 0.51064,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498298,-99) , 
3, 1.6087, 1, 0, 0.501787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482631,-99) , 
11, 1.50867, 0, 0, 0.493694,-99) , 
8, 1.65894, 0, 0, 0.498475,-99) , 
8, 0.912674, 1, 0, 0.499759,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0143755);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52001,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498423,-99) , 
10, -1.28539, 1, 0, 0.500955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487793,-99) , 
11, 0.573805, 0, 0, 0.494873,-99) , 
9, -951.286, 0, 0, 0.49719,-99) , 
8, 2.99341, 0, 0, 0.498179,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.0154522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.5768, 0, 1, 0.512206,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497709,-99) , 
11, 0.288931, 0, 0, 0.502384,-99) , 
12, 0.813369, 1, 0, 0.507655,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496471,-99) , 
0, 0.495279, 1, 0, 0.498961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484692,-99) , 
0, 0.492376, 0, 0, 0.497837,-99) , 
12, 2.22551, 1, 0, 0.503167,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0109695);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491643,-99) , 
11, -1.70541, 0, 0, 0.50149,-99) , 
11, 0.499736, 0, 0, 0.511562,-99) , 
NN(
NN(
0, 
0, 
-1, 1.78243, 0, 1, 0.502815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487405,-99) , 
9, -951.286, 0, 0, 0.49392,-99) , 
12, 4.60683, 1, 0, 0.500614,-99) , 
10, -1.57144, 1, 0, 0.501578,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0134053);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518373,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467411,-99) , 
5, 0.999728, 0, 0, 0.506439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491644,-99) , 
11, -1.11149, 0, 0, 0.499053,-99) , 
4, 4.54663, 0, 0, 0.500633,-99) , 
5, 0.998095, 1, 0, 0.501269,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0122438);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519885,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499376,-99) , 
11, 0.31815, 0, 0, 0.502699,-99) , 
NN(
0, 
0, 
-1, -0.314727, 1, -1, 0.493118,-99) , 
3, 1.55588, 0, 0, 0.497562,-99) , 
8, 2.96686, 0, 0, 0.498603,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0113121);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504621, 0, 1, 0.504126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496349,-99) , 
11, 0.469075, 0, 0, 0.500568,-99) , 
NN(
0, 
0, 
-1, -0.345577, 1, -1, 0.490295,-99) , 
6, -0.191628, 0, 0, 0.496173,-99) , 
0, 0.497138, 0, 0, 0.500979,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.00983222);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521522,-99) , 
NN(
NN(
0, 
0, 
-1, 1.49072, 0, 1, 0.518082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494552,-99) , 
8, 1.74685, 0, 0, 0.497574,-99) , 
10, -1.84354, 1, 0, 0.498778,-99) , 
10, 1.8571, 0, 0, 0.49976,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.00700433);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.82209, 0, 1, 0.502925,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471452,-99) , 
0, 0.499043, 1, 0, 0.488706,-99) , 
5, 0.999048, 0, 0, 0.501959,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.0104706);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499792,-99) , 
6, -0.145839, 1, 0, 0.502554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488128,-99) , 
11, 2.76756, 0, 0, 0.496535,-99) , 
13, 1.63566, 0, 0, 0.499707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472838,-99) , 
5, 0.997619, 0, 0, 0.498998,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.00532024);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521486,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477352,-99) , 
1, -0.0234148, 0, 0, 0.499748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475844,-99) , 
12, -1.01841, 0, 0, 0.498862,-99) , 
10, -2.14283, 1, 0, 0.49959,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0161102);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495884,-99) , 
3, 1.7444, 0, 0, 0.517609,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494504,-99) , 
10, -0.823175, 1, 0, 0.497834,-99) , 
10, 1.57132, 0, 0, 0.499256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489298,-99) , 
2, -0.0740374, 1, 0, 0.493001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469548,-99) , 
10, 0.999959, 1, 0, 0.489211,-99) , 
0, 0.5019, 1, 0, 0.497574,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0139424);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497907,-99) , 
9, -951.286, 0, 0, 0.51272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492862,-99) , 
9, -951.286, 1, 0, 0.500532,-99) , 
11, -0.729168, 0, 0, 0.50411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511471,-99) , 
NN(
0, 
0, 
-1, 0.911378, 0, -1, 0.495768,-99) , 
7, 0.0237849, 0, 0, 0.497264,-99) , 
8, 1.74685, 0, 0, 0.500502,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0132454);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496087,-99) , 
1, 0.00566624, 1, 0, 0.503369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473655,-99) , 
3, 1.28027, 0, 0, 0.493489,-99) , 
10, -1.00001, 0, 0, 0.501439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475753,-99) , 
10, -0.143348, 1, 0, 0.488016,-99) , 
7, 0.0237976, 1, 0, 0.500636,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0158352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.6101, 1, 1, 0.519003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490256,-99) , 
11, -2.42569, 0, 0, 0.501282,-99) , 
11, -0.225715, 0, 0, 0.504588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492596,-99) , 
9, -951.286, 1, 0, 0.499487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470781,-99) , 
13, 1.89065, 1, 0, 0.497425,-99) , 
12, 2.25864, 1, 0, 0.501363,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.00989374);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.368912, 1, 1, 0.505251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486347,-99) , 
9, -1.28574, 0, 0, 0.503361,-99) , 
NN(
0, 
0, 
-1, 1.85709, 1, -1, 0.495765,-99) , 
9, -951.286, 0, 0, 0.498676,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.00597892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498865,-99) , 
8, 2.08786, 0, 0, 0.500064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484372,-99) , 
13, 2.9738, 1, 0, 0.499431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478777,-99) , 
5, 0.998095, 0, 0, 0.498734,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00575865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0145331, 0, 1, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468362,-99) , 
1, 0.0263922, 1, 0, 0.500651,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478177,-99) , 
1, -0.0234075, 0, 0, 0.499969,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0139126);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 6.12711, 1, 1, 0.508407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538491,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496497,-99) , 
11, 2.17878, 0, 0, 0.498722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46997,-99) , 
12, 4.17207, 1, 0, 0.497337,-99) , 
11, 4.11946, 0, 0, 0.49978,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0129138);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498546,-99) , 
11, -1.71019, 0, 0, 0.512854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492053,-99) , 
3, 1.4243, 1, 0, 0.499919,-99) , 
6, 0.260799, 0, 0, 0.503221,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445767,-99) , 
10, -2.07484, 0, 0, 0.498472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462282,-99) , 
10, 1.85709, 1, 0, 0.496804,-99) , 
9, -951.286, 0, 0, 0.49928,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0108348);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4973,-99) , 
13, 1.53945, 0, 0, 0.501897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472246,-99) , 
1, 0.0248352, 1, 0, 0.501079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473999,-99) , 
5, 0.998095, 0, 0, 0.500188,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.015921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496072,-99) , 
3, 1.77025, 0, 0, 0.501998,-99) , 
10, -1.28445, 1, 0, 0.504185,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491844,-99) , 
6, -0.40117, 0, 0, 0.499941,-99) , 
NN(
0, 
0, 
-1, 1.87175, 0, -1, 0.486203,-99) , 
6, 0.257383, 1, 0, 0.496931,-99) , 
9, -951.286, 0, 0, 0.49972,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00558801);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524969,-99) , 
NN(
NN(
0, 
0, 
-1, -1.40816, 1, 1, 0.501378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478386,-99) , 
12, -1.05567, 0, 0, 0.5006,-99) , 
10, -2.14286, 1, 0, 0.501377,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0150184);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485953,-99) , 
11, 6.35276, 0, 0, 0.500346,-99) , 
12, 4.9361, 1, 0, 0.505238,-99) , 
NN(
0, 
0, 
-1, 1.19892, 0, -1, 0.493594,-99) , 
11, 2.41438, 0, 0, 0.49691,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.00622245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.50173,-99) , 
NN(
0, 
0, 
-1, 7.95086, 1, -1, 0.48538,-99) , 
4, 6.80647, 1, 0, 0.500744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483585,-99) , 
4, 9.47676, 1, 0, 0.499998,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.00918744);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515915,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49952,-99) , 
11, -0.751596, 0, 0, 0.504129,-99) , 
NN(
0, 
0, 
-1, 1.79233, 1, -1, 0.496157,-99) , 
6, 0.263515, 0, 0, 0.497971,-99) , 
10, 1.85709, 0, 0, 0.49873,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.00858343);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497019,-99) , 
4, 4.88387, 1, 0, 0.505608,-99) , 
0, 0.5019, 0, 0, 0.510095,-99) , 
NN(
NN(
0, 
0, 
-1, 0.94419, 1, 1, 0.502419,-99) , 
NN(
0, 
0, 
-1, 0.372122, 1, -1, 0.495859,-99) , 
11, -1.22107, 0, 0, 0.500574,-99) , 
2, 0.0715316, 0, 0, 0.50204,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0136123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142054, 0, 1, 0.515501,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49228,-99) , 
6, -0.458919, 1, 0, 0.498324,-99) , 
9, -0.142821, 1, 0, 0.505236,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484838,-99) , 
10, 1.38092, 1, 0, 0.498368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470538,-99) , 
10, -1.85714, 0, 0, 0.496583,-99) , 
9, -951.286, 0, 0, 0.499923,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00692354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498001,-99) , 
13, 2.83071, 1, 0, 0.513124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499328,-99) , 
4, 9.59983, 0, 0, 0.500308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483485,-99) , 
5, 0.999048, 0, 0, 0.499436,-99) , 
6, 0.534213, 0, 0, 0.500634,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0173503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.265215, 1, 1, 0.508242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48322,-99) , 
9, -1.28555, 0, 0, 0.505705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493382,-99) , 
3, 1.43824, 0, 0, 0.501508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478793,-99) , 
10, 1.57137, 1, 0, 0.499774,-99) , 
9, -951.286, 0, 0, 0.502048,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0129327);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.438183, 0, 1, 0.507138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484785,-99) , 
12, -0.417662, 0, 0, 0.504578,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496292,-99) , 
2, 0.21428, 0, 0, 0.49742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480021,-99) , 
10, -1.85709, 0, 0, 0.496283,-99) , 
9, -951.286, 0, 0, 0.49948,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.00737042);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.70122, 1, 1, 0.515773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480533,-99) , 
5, 0.999388, 0, 0, 0.50014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469414,-99) , 
5, 0.998571, 0, 0, 0.498983,-99) , 
6, 0.623896, 0, 0, 0.499863,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0111717);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493909,-99) , 
6, -0.28454, 1, 0, 0.514267,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496086,-99) , 
9, -951.286, 0, 0, 0.507487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49762,-99) , 
10, 1.8435, 0, 0, 0.498677,-99) , 
8, 2.3701, 0, 0, 0.500209,-99) , 
10, -1.85714, 1, 0, 0.500969,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.00649199);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516346,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494768,-99) , 
13, 1.12647, 0, 0, 0.500257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480226,-99) , 
12, -1.09548, 0, 0, 0.49962,-99) , 
10, -2.14286, 1, 0, 0.500138,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0164596);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.63137, 1, 1, 0.523398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491892,-99) , 
3, 1.27645, 0, 0, 0.511459,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49774,-99) , 
12, 2.03712, 1, 0, 0.502395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484302,-99) , 
8, 2.22897, 0, 0, 0.493752,-99) , 
11, -0.340857, 0, 0, 0.498847,-99) , 
10, -1.57144, 1, 0, 0.499953,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0161947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493549,-99) , 
9, -951.286, 1, 0, 0.503382,-99) , 
6, -0.144967, 0, 0, 0.506012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49797,-99) , 
11, 0.48144, 0, 0, 0.500307,-99) , 
NN(
0, 
0, 
-1, 0.75939, 0, -1, 0.47111,-99) , 
12, 2.45743, 1, 0, 0.497544,-99) , 
11, 1.17592, 0, 0, 0.5007,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0115935);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528648,-99) , 
NN(
NN(
0, 
0, 
-1, 2.29492, 1, 1, 0.50575,-99) , 
NN(
0, 
0, 
-1, 1.66045, 0, -1, 0.495562,-99) , 
11, 0.399404, 0, 0, 0.500304,-99) , 
10, -2.14286, 1, 0, 0.501202,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00829396);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.703084, 0, 1, 0.512918,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474917,-99) , 
1, -0.0250571, 0, 0, 0.501587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481547,-99) , 
1, 0.024684, 1, 0, 0.501014,-99) , 
10, 1.57131, 0, 0, 0.501859,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0108529);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525838,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49647,-99) , 
8, 1.73362, 0, 0, 0.500376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480451,-99) , 
12, -0.981437, 0, 0, 0.499598,-99) , 
10, -2.14285, 1, 0, 0.500446,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0104712);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520585,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496741,-99) , 
6, 0.263474, 0, 0, 0.501588,-99) , 
10, -1.28539, 1, 0, 0.503573,-99) , 
NN(
0, 
0, 
-1, 1.85707, 1, -1, 0.496452,-99) , 
9, -951.286, 0, 0, 0.4992,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0161995);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477543,-99) , 
10, 0.420185, 1, 0, 0.501162,-99) , 
11, -1.08412, 0, 0, 0.505527,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496461,-99) , 
5, 0.999524, 1, 0, 0.498536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480598,-99) , 
4, 8.12949, 1, 0, 0.497401,-99) , 
8, 2.15032, 0, 0, 0.499462,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0135168);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143009, 1, 1, 0.517235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497042,-99) , 
3, 1.55851, 0, 0, 0.501104,-99) , 
7, 0.0238055, 0, 0, 0.502258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493625,-99) , 
11, -2.57516, 0, 0, 0.501609,-99) , 
NN(
0, 
0, 
-1, 0.143628, 1, -1, 0.483075,-99) , 
3, 2.33727, 0, 0, 0.493569,-99) , 
3, 2.08776, 1, 0, 0.500634,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0119795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477838,-99) , 
6, 0.282532, 1, 0, 0.501098,-99) , 
3, 1.86874, 0, 0, 0.502205,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480144,-99) , 
8, 2.4884, 0, 0, 0.493804,-99) , 
11, -0.843981, 0, 0, 0.49679,-99) , 
3, 1.93718, 1, 0, 0.500813,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.00794397);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 20.7972, 0, 1, 0.510847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490104,-99) , 
7, 0.0011329, 0, 0, 0.49998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48124,-99) , 
7, 0.0237918, 1, 0, 0.499174,-99) , 
12, 10.1365, 0, 0, 0.500181,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0121846);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.714352, 1, 1, 0.512553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496243,-99) , 
12, 3.78574, 1, 0, 0.510397,-99) , 
NN(
0, 
0, 
-1, 2.78239, 1, -1, 0.497822,-99) , 
11, 1.6777, 0, 0, 0.500276,-99) , 
11, 6.47369, 0, 0, 0.502317,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0163753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.263838, 1, 1, 0.506295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488261,-99) , 
10, -0.70072, 0, 0, 0.498016,-99) , 
8, 1.51138, 0, 0, 0.503046,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488841,-99) , 
12, 7.13286, 1, 0, 0.504158,-99) , 
NN(
0, 
0, 
-1, 1.47612, 1, -1, 0.481902,-99) , 
8, 2.13116, 1, 0, 0.4972,-99) , 
10, 0.714235, 1, 0, 0.501648,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0131572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492116,-99) , 
6, 0.0711914, 1, 0, 0.503419,-99) , 
3, 1.56457, 0, 0, 0.505137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497131,-99) , 
11, -0.588055, 0, 0, 0.500691,-99) , 
NN(
0, 
0, 
-1, 1.67864, 0, -1, 0.488003,-99) , 
3, 1.83072, 0, 0, 0.496971,-99) , 
3, 1.61781, 1, 0, 0.501514,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.00665157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523524,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499868,-99) , 
10, -1.57144, 1, 0, 0.501213,-99) , 
5, 0.998572, 1, 0, 0.502244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479443,-99) , 
4, 9.19645, 1, 0, 0.501169,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0169393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479988,-99) , 
3, 1.70114, 0, 0, 0.501458,-99) , 
8, 1.75234, 1, 0, 0.503494,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0235393, 0, 1, 0.518426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483694,-99) , 
11, 2.06527, 0, 0, 0.493723,-99) , 
7, 0.023785, 0, 0, 0.496076,-99) , 
3, 1.59667, 0, 0, 0.499505,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.0109909);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486181,-99) , 
13, 1.66561, 0, 0, 0.519117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499553,-99) , 
10, 1.85705, 0, 0, 0.500485,-99) , 
12, 1.08646, 1, 0, 0.502115,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497267,-99) , 
11, -1.68731, 0, 0, 0.501337,-99) , 
NN(
0, 
0, 
-1, 2.68626, 0, -1, 0.483074,-99) , 
10, -0.148946, 1, 0, 0.495027,-99) , 
11, -1.22107, 0, 0, 0.50011,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.00745254);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485581,-99) , 
11, 14.1857, 1, 0, 0.500822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480272,-99) , 
1, -0.0257629, 0, 0, 0.500244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475611,-99) , 
1, 0.0240456, 1, 0, 0.499538,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0121664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532247,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46066,-99) , 
13, 1.4134, 0, 0, 0.499665,-99) , 
11, 1.4934, 0, 0, 0.502017,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496061,-99) , 
3, 0.681224, 1, 0, 0.498459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464979,-99) , 
8, 1.45201, 1, 0, 0.495162,-99) , 
12, 3.63488, 1, 0, 0.500014,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0097715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495964,-99) , 
0, 0.497138, 1, 0, 0.498366,-99) , 
4, 9.27699, 0, 0, 0.499632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469757,-99) , 
12, 1.16194, 1, 0, 0.487755,-99) , 
5, 0.999048, 0, 0, 0.49882,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.00845307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489056,-99) , 
6, 0.315134, 1, 0, 0.499876,-99) , 
6, 0.624503, 0, 0, 0.500584,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.494099,-99) , 
0, 0.495233, 0, 0, 0.499106,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0138538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498884,-99) , 
10, 1.85724, 0, 0, 0.500435,-99) , 
12, 2.07841, 1, 0, 0.50266,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49743,-99) , 
11, -0.664812, 0, 0, 0.502782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489893,-99) , 
11, 0.00319485, 0, 0, 0.491603,-99) , 
10, -0.714506, 1, 0, 0.49541,-99) , 
11, 0.234058, 0, 0, 0.498929,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0146217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485904,-99) , 
8, 1.12865, 0, 0, 0.509187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479265,-99) , 
10, 0.147855, 1, 0, 0.495082,-99) , 
9, 0.428547, 1, 0, 0.503698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47267,-99) , 
10, -2.07484, 0, 0, 0.498847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461392,-99) , 
10, 1.85709, 1, 0, 0.497114,-99) , 
9, -951.286, 0, 0, 0.499658,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0128859);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495697,-99) , 
5, 0.999524, 1, 0, 0.497514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476447,-99) , 
4, 9.46687, 1, 0, 0.496599,-99) , 
10, -2.14284, 1, 0, 0.497395,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.00873805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.57138, 0, 1, 0.50228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480987,-99) , 
10, 0.773568, 1, 0, 0.490602,-99) , 
6, 0.441018, 1, 0, 0.501441,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478576,-99) , 
5, 0.999524, 0, 0, 0.496817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462452,-99) , 
8, 1.91713, 0, 0, 0.491547,-99) , 
12, 0.248562, 0, 0, 0.499569,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0157056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.35486, 1, 1, 0.513114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485523,-99) , 
5, 0.999905, 0, 0, 0.500309,-99) , 
6, -0.401468, 0, 0, 0.504302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524749,-99) , 
NN(
0, 
0, 
-1, 2.20683, 1, -1, 0.492998,-99) , 
11, 0.828672, 0, 0, 0.494847,-99) , 
11, 1.17592, 0, 0, 0.498368,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0103575);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532588,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498211,-99) , 
10, -1.57144, 1, 0, 0.499265,-99) , 
4, 9.26084, 0, 0, 0.500793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484196,-99) , 
3, 1.58362, 0, 0, 0.494054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479123,-99) , 
13, 2.16578, 1, 0, 0.487679,-99) , 
5, 0.999524, 0, 0, 0.499312,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2b_2_4::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2b_2_4::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2b_2_4 *ReadBDT_maker_LHC19c2b_2_4(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2b_2_4(theInpVar);
  }
}
