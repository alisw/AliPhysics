#include "LHC19c2a_TMVAClassification_BDT_2_4_noPCts.class.h"

double ReadBDT_LHC19c2a_2_4_noPCts::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_2_4_noPCts::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.545427558316838);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999864, 0, 1, 0.792499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.330184,-99) , 
4, 0.999048, 0, 0, 0.745576,-99) , 
NN(
NN(
0, 
0, 
-1, 4.99291, 0, 1, 0.727394,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.266275,-99) , 
9, 3.57611, 0, 0, 0.372636,-99) , 
6, -948.705, 0, 0, 0.499686,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.400698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 0, 1, 0.75182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439379,-99) , 
4, 0.999524, 0, 0, 0.702984,-99) , 
NN(
NN(
0, 
0, 
-1, 5.02704, 0, 1, 0.67155,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.325013,-99) , 
9, 3.57208, 0, 0, 0.404834,-99) , 
6, -948.705, 0, 0, 0.505244,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.30628);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.81147, 0, 1, 0.61008,-99) , 
NN(
0, 
0, 
-1, -2.1837, 0, -1, 0.1921,-99) , 
7, -1.85715, 0, 0, 0.571497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484948,-99) , 
9, 0.817372, 1, 0, 0.492735,-99) , 
NN(
0, 
0, 
-1, 0.998617, 0, -1, 0.171529,-99) , 
6, -951.223, 0, 0, 0.264362,-99) , 
4, 0.999524, 0, 0, 0.51385,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.322461);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999932, 0, 1, 0.673529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.374107,-99) , 
4, 0.998572, 0, 0, 0.649289,-99) , 
NN(
NN(
0, 
0, 
-1, 9.12321, 0, 1, 0.654468,-99) , 
NN(
0, 
0, 
-1, -1.57145, 0, -1, 0.352456,-99) , 
8, 2.91762, 0, 0, 0.412271,-99) , 
6, -949.13, 0, 0, 0.491628,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.246968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472756,-99) , 
4, 0.999909, 0, 0, 0.569606,-99) , 
NN(
0, 
0, 
-1, -2.18361, 0, -1, 0.275044,-99) , 
7, -1.57137, 0, 0, 0.532838,-99) , 
NN(
0, 
0, 
-1, -949.113, 0, -1, 0.251945,-99) , 
4, 0.999048, 0, 0, 0.497162,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.208607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.14108, 0, 1, 0.629144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450851,-99) , 
4, 0.998571, 0, 0, 0.614397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.205812,-99) , 
4, 0.999048, 0, 0, 0.476106,-99) , 
NN(
0, 
0, 
-1, -2.18366, 0, -1, 0.196919,-99) , 
7, -1.5714, 0, 0, 0.43306,-99) , 
6, -949.024, 0, 0, 0.493847,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.166553);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 2.16071, 0, 1, 0.590592,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.421538,-99) , 
6, -949.024, 0, 0, 0.47802,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.195275);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457214,-99) , 
5, 0.00680043, 0, 0, 0.517819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.107242,-99) , 
5, 0.0476053, 1, 0, 0.503086,-99) , 
NN(
0, 
0, 
-1, -2.5102, 0, -1, 0.176185,-99) , 
7, -2.14285, 0, 0, 0.485583,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.207958);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.88345, 0, 1, 0.673002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.665764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439986,-99) , 
8, -2.14859, 1, 0, 0.472554,-99) , 
8, 3.88413, 0, 0, 0.507889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.115041,-99) , 
5, 0.0476053, 1, 0, 0.494444,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.178202);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.136053,-99) , 
5, 0.0475946, 1, 0, 0.540051,-99) , 
NN(
0, 
0, 
-1, 0.99508, 0, -1, 0.225916,-99) , 
4, 0.997619, 0, 0, 0.52198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.201684,-99) , 
7, -2.14287, 0, 0, 0.505632,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.148994);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26821,-99) , 
4, 0.998095, 0, 0, 0.519171,-99) , 
NN(
0, 
0, 
-1, -2.45579, 0, -1, 0.27441,-99) , 
7, -1.85714, 0, 0, 0.500007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.132004,-99) , 
5, 0.0475829, 1, 0, 0.488132,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.145178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00453306, 0, 1, 0.573697,-99) , 
NN(
0, 
0, 
-1, -1.28569, 0, -1, 0.442245,-99) , 
6, -948.526, 0, 0, 0.486014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.146628,-99) , 
5, 0.0476053, 1, 0, 0.475469,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.196438);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.68551, 0, 1, 0.602482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414334,-99) , 
8, -1.57357, 1, 0, 0.459244,-99) , 
8, 2.32414, 0, 0, 0.492752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.153368,-99) , 
5, 0.0475984, 1, 0, 0.482273,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.152258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38114,-99) , 
7, -1.28573, 0, 0, 0.516717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.179161,-99) , 
5, 0.0475804, 1, 0, 0.506465,-99) , 
NN(
0, 
0, 
-1, -949.113, 0, -1, 0.329865,-99) , 
4, 0.999048, 0, 0, 0.485814,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.154951);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415504,-99) , 
4, 0.999524, 0, 0, 0.539211,-99) , 
NN(
0, 
0, 
-1, 1.85698, 1, -1, 0.426015,-99) , 
5, 0.00453167, 0, 0, 0.485873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.172906,-99) , 
5, 0.0475829, 1, 0, 0.476669,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0886662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.198867,-99) , 
5, 0.0476029, 1, 0, 0.504231,-99) , 
NN(
0, 
0, 
-1, 2.18367, 1, -1, 0.277924,-99) , 
7, 1.77549, 1, 0, 0.490641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.249519,-99) , 
7, -2.14285, 0, 0, 0.479471,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.0581544);
  fForest.push_back( 
NN(
0, 
0, 
-1, -2.42855, 0, -1, 0.470956,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.062165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.209995,-99) , 
5, 0.0476053, 1, 0, 0.496904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.197075,-99) , 
7, -2.42858, 0, 0, 0.488519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.243714,-99) , 
4, 0.996667, 0, 0, 0.478858,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0574873);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.212218,-99) , 
5, 0.0476028, 1, 0, 0.492019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.227807,-99) , 
7, -2.30613, 0, 0, 0.48238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267631,-99) , 
7, 1.85709, 1, 0, 0.471693,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0682623);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.996667, 0, -1, 0.465922,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0505389);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.996191, 0, -1, 0.474752,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0664795);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508071,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29051,-99) , 
7, -2.14286, 0, 0, 0.497849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.222448,-99) , 
5, 0.0475804, 1, 0, 0.490255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258393,-99) , 
4, 0.996667, 0, 0, 0.481183,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.122084);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346114,-99) , 
5, 0.0238014, 1, 0, 0.50716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332381,-99) , 
6, -949.657, 0, 0, 0.392616,-99) , 
7, -1.14968, 0, 0, 0.48485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.278224,-99) , 
7, 1.85712, 1, 0, 0.474803,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.112442);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.86097, 1, 1, 0.580028,-99) , 
NN(
0, 
0, 
-1, -2.14286, 0, -1, 0.457138,-99) , 
8, -1.85294, 1, 0, 0.47558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.258514,-99) , 
4, 0.996667, 0, 0, 0.467096,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.109817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466407,-99) , 
5, 0.00906753, 0, 0, 0.490957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244805,-99) , 
5, 0.0476053, 1, 0, 0.484319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274686,-99) , 
4, 0.997143, 0, 0, 0.475122,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0615501);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289045,-99) , 
7, 2.02039, 1, 0, 0.500025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.300643,-99) , 
7, -2.14285, 0, 0, 0.49121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.256008,-99) , 
4, 0.99619, 0, 0, 0.483444,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0434047);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.312969,-99) , 
7, -2.14284, 0, 0, 0.491849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247744,-99) , 
5, 0.0476053, 1, 0, 0.485359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247678,-99) , 
4, 0.995714, 0, 0, 0.478472,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.102753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480023,-99) , 
8, 2.10924, 0, 0, 0.503549,-99) , 
NN(
0, 
0, 
-1, -949.024, 0, -1, 0.420069,-99) , 
4, 0.999841, 0, 0, 0.481577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273507,-99) , 
4, 0.996667, 0, 0, 0.473763,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0417064);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.294497,-99) , 
4, 0.996191, 0, 0, 0.494022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293397,-99) , 
7, -2.26531, 0, 0, 0.486877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.255225,-99) , 
7, 2.1428, 1, 0, 0.480393,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.0758383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412737,-99) , 
7, -1.04084, 0, 0, 0.488763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.261475,-99) , 
7, 2.1428, 1, 0, 0.482373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.244794,-99) , 
5, 0.0476053, 1, 0, 0.476091,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.118404);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.719589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.640842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413894,-99) , 
9, -0.414321, 0, 0, 0.516411,-99) , 
8, -2.92672, 1, 0, 0.578718,-99) , 
NN(
0, 
0, 
-1, -2.14286, 0, -1, 0.454606,-99) , 
8, -1.99927, 1, 0, 0.471607,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.0975003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.88145, 0, 1, 0.520809,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428179,-99) , 
8, -1.9674, 1, 0, 0.45099,-99) , 
4, 0.999932, 0, 0, 0.495532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5321,-99) , 
NN(
0, 
0, 
-1, 0.996939, 0, -1, 0.272881,-99) , 
6, -949.113, 0, 0, 0.363218,-99) , 
4, 0.998572, 0, 0, 0.484799,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.0733902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495461,-99) , 
8, -1.99046, 1, 0, 0.50806,-99) , 
NN(
0, 
0, 
-1, 1.28564, 1, -1, 0.42278,-99) , 
5, 0.00226634, 0, 0, 0.48674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.266463,-99) , 
5, 0.0475946, 1, 0, 0.480931,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0590015);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.290982,-99) , 
7, -2.34694, 0, 0, 0.502467,-99) , 
NN(
0, 
0, 
-1, 2.11563, 1, -1, 0.369602,-99) , 
7, 1.57141, 1, 0, 0.492344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.273309,-99) , 
5, 0.0476028, 1, 0, 0.486606,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0986616);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445621,-99) , 
5, 0.0034003, 0, 0, 0.49656,-99) , 
NN(
0, 
0, 
-1, 2.59873, 0, -1, 0.370302,-99) , 
5, 0.0238027, 1, 0, 0.488482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.277416,-99) , 
4, 0.996191, 0, 0, 0.481755,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.115824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.86004, 1, 1, 0.54403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43627,-99) , 
6, -951.216, 0, 0, 0.468984,-99) , 
8, -1.24672, 1, 0, 0.487539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322282,-99) , 
4, 0.997143, 0, 0, 0.480545,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0659118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.601896,-99) , 
NN(
0, 
0, 
-1, 0.0237915, 1, -1, 0.48305,-99) , 
9, 9.39179, 0, 0, 0.491961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522688,-99) , 
NN(
0, 
0, 
-1, 0.996939, 0, -1, 0.291912,-99) , 
6, -949.113, 0, 0, 0.372689,-99) , 
4, 0.998572, 0, 0, 0.482421,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0527392);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393572,-99) , 
4, 0.998572, 0, 0, 0.49892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322285,-99) , 
7, -2.26529, 0, 0, 0.492909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.293154,-99) , 
7, 2.14283, 1, 0, 0.487532,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0638025);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432106,-99) , 
7, -1.00002, 0, 0, 0.492825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.29893,-99) , 
4, 0.995715, 0, 0, 0.487486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280847,-99) , 
5, 0.0475603, 1, 0, 0.482231,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0659783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.147847, 1, 1, 0.584182,-99) , 
NN(
0, 
0, 
-1, 0.0237973, 1, -1, 0.475994,-99) , 
9, 9.39179, 0, 0, 0.483725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.301446,-99) , 
4, 0.995715, 0, 0, 0.478762,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0414706);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381963,-99) , 
5, 0.0237903, 1, 0, 0.495848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.337239,-99) , 
7, -2.26532, 0, 0, 0.490605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.314639,-99) , 
7, 2.14272, 1, 0, 0.485874,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.0622313);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435724,-99) , 
0, 0.501899, 1, 0, 0.495572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325006,-99) , 
7, -2.34694, 0, 0, 0.490494,-99) , 
NN(
0, 
0, 
-1, 2.11563, 1, -1, 0.376821,-99) , 
7, 1.57141, 1, 0, 0.482043,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0496632);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437976,-99) , 
4, 0.999796, 0, 0, 0.486129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319495,-99) , 
4, 0.995714, 0, 0, 0.481512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.297622,-99) , 
5, 0.0475984, 1, 0, 0.476842,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0821796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460926,-99) , 
5, 0.00566648, 0, 0, 0.486816,-99) , 
NN(
0, 
0, 
-1, 5.03488, 0, -1, 0.388524,-99) , 
5, 0.0238014, 1, 0, 0.480555,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.322375,-99) , 
4, 0.995714, 0, 0, 0.476236,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0724113);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39237,-99) , 
5, 0.0237992, 1, 0, 0.497748,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399949,-99) , 
6, -949.657, 0, 0, 0.440187,-99) , 
7, -0.795941, 0, 0, 0.482111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319285,-99) , 
7, 2.1428, 1, 0, 0.477836,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0843617);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.686964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484756,-99) , 
8, -2.87151, 1, 0, 0.5147,-99) , 
NN(
0, 
0, 
-1, 2.28556, 0, -1, 0.462786,-99) , 
8, -1.03182, 1, 0, 0.477829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320166,-99) , 
4, 0.995714, 0, 0, 0.473526,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.0870538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477111,-99) , 
4, 0.999987, 0, 0, 0.502954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432773,-99) , 
8, -2.25758, 1, 0, 0.451019,-99) , 
4, 0.999864, 0, 0, 0.488453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.361329,-99) , 
4, 0.997143, 0, 0, 0.483244,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0779102);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.148714, 1, 1, 0.577455,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474842,-99) , 
8, -2.00949, 1, 0, 0.486749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.336717,-99) , 
5, 0.0237801, 1, 0, 0.479592,-99) , 
9, 9.39179, 0, 0, 0.486337,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0515968);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.95782, 1, 1, 0.533321,-99) , 
NN(
0, 
0, 
-1, 0.638494, 0, -1, 0.482455,-99) , 
8, -1.0324, 1, 0, 0.497235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341117,-99) , 
4, 0.995715, 0, 0, 0.493072,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0978096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440005,-99) , 
7, 1.40809, 1, 0, 0.514812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.624229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427124,-99) , 
8, 1.89568, 0, 0, 0.463934,-99) , 
7, -0.71432, 0, 0, 0.500106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338338,-99) , 
4, 0.995715, 0, 0, 0.495872,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0395902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.571076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.360596,-99) , 
5, 0.0237723, 1, 0, 0.495187,-99) , 
9, 9.39179, 0, 0, 0.500495,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.4351,-99) , 
0, 0.502852, 1, 0, 0.491978,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0482447);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414573,-99) , 
7, 1.85698, 1, 0, 0.504789,-99) , 
NN(
0, 
0, 
-1, -1.57136, 0, -1, 0.46295,-99) , 
0, 0.499995, 1, 0, 0.491504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378359,-99) , 
3, 9.79252, 1, 0, 0.487098,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.0270607);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.995715, 0, -1, 0.486473,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0307505);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420022,-99) , 
5, 0.0237992, 1, 0, 0.497525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.398448,-99) , 
7, -2.14284, 0, 0, 0.493565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.356441,-99) , 
4, 0.996191, 0, 0, 0.489502,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0475303);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56587,-99) , 
NN(
0, 
0, 
-1, 0.0237973, 1, -1, 0.488802,-99) , 
9, 9.97149, 0, 0, 0.493834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327834,-99) , 
6, -949.113, 0, 0, 0.412427,-99) , 
4, 0.998572, 0, 0, 0.48748,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0590858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491828,-99) , 
4, 0.99999, 0, 0, 0.50683,-99) , 
NN(
0, 
0, 
-1, -0.999979, 0, -1, 0.460137,-99) , 
4, 0.999796, 0, 0, 0.497934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.332306,-99) , 
6, -951.286, 0, 0, 0.411181,-99) , 
4, 0.998572, 0, 0, 0.491224,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0427843);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409609,-99) , 
7, 2.02039, 1, 0, 0.505574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416656,-99) , 
7, -2.14286, 0, 0, 0.502003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.354961,-99) , 
6, -951.286, 0, 0, 0.419754,-99) , 
4, 0.998572, 0, 0, 0.495586,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.0379407);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.433429, 1, 1, 0.555776,-99) , 
NN(
0, 
0, 
-1, 0.0238027, 1, -1, 0.492122,-99) , 
9, 9.0539, 0, 0, 0.497095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.350262,-99) , 
6, -949.113, 0, 0, 0.417199,-99) , 
4, 0.998571, 0, 0, 0.490934,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0461029);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492725,-99) , 
5, 0.0102008, 0, 0, 0.503396,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.33124,-99) , 
8, 3.03207, 0, 0, 0.42707,-99) , 
5, 0.0238027, 1, 0, 0.498649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399966,-99) , 
3, 9.13506, 1, 0, 0.494014,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0725357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.89087, 1, 1, 0.532381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466945,-99) , 
6, -949.469, 0, 0, 0.489361,-99) , 
8, -1.04251, 1, 0, 0.501848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363236,-99) , 
4, 0.995715, 0, 0, 0.498258,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0585756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476154,-99) , 
5, 0.00226688, 0, 0, 0.508903,-99) , 
NN(
0, 
0, 
-1, -0.143552, 1, -1, 0.432791,-99) , 
5, 0.0238027, 1, 0, 0.50411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.371324,-99) , 
6, -951.286, 0, 0, 0.429208,-99) , 
4, 0.998572, 0, 0, 0.498247,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.0501057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492627,-99) , 
9, 2.09027, 0, 0, 0.508437,-99) , 
NN(
0, 
0, 
-1, -1, 0, -1, 0.466429,-99) , 
4, 0.999796, 0, 0, 0.500413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370047,-99) , 
6, -951.286, 0, 0, 0.427815,-99) , 
4, 0.998572, 0, 0, 0.494828,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0437854);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49426,-99) , 
8, -0.976194, 1, 0, 0.50735,-99) , 
NN(
0, 
0, 
-1, 0.141803, 1, -1, 0.432307,-99) , 
5, 0.0237915, 1, 0, 0.502659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402149,-99) , 
3, 9.3665, 1, 0, 0.4983,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0373185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0113335, 0, 1, 0.509693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.366345,-99) , 
9, 4.6418, 0, 0, 0.445452,-99) , 
5, 0.0238014, 1, 0, 0.505595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.381176,-99) , 
6, -951.286, 0, 0, 0.430023,-99) , 
4, 0.998571, 0, 0, 0.499816,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0402653);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492872,-99) , 
5, 0.00793314, 0, 0, 0.503229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.362852,-99) , 
8, 4.89854, 0, 0, 0.436131,-99) , 
5, 0.0238014, 1, 0, 0.499061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378692,-99) , 
4, 0.995715, 0, 0, 0.495963,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0508516);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482286,-99) , 
7, -0.714295, 0, 0, 0.50786,-99) , 
NN(
0, 
0, 
-1, 4.40988, 0, -1, 0.43975,-99) , 
5, 0.0238027, 1, 0, 0.503575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.378662,-99) , 
6, -951.286, 0, 0, 0.429891,-99) , 
4, 0.998572, 0, 0, 0.497919,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0371681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.700423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496319,-99) , 
8, -2.95782, 1, 0, 0.522971,-99) , 
NN(
0, 
0, 
-1, -1.85716, 0, -1, 0.490902,-99) , 
8, -1.0324, 1, 0, 0.500512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397529,-99) , 
3, 9.78684, 1, 0, 0.4965,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0366696);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401631,-99) , 
7, -2.30609, 0, 0, 0.50712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43077,-99) , 
7, 1.85709, 1, 0, 0.503821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396249,-99) , 
4, 0.996667, 0, 0, 0.500255,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0341666);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426375,-99) , 
7, -2.14287, 0, 0, 0.505099,-99) , 
NN(
0, 
0, 
-1, 3.24796, 0, -1, 0.441513,-99) , 
5, 0.0238014, 1, 0, 0.501196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.401208,-99) , 
3, 9.79006, 1, 0, 0.497317,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0346429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458396,-99) , 
7, -1.47622, 0, 0, 0.500851,-99) , 
NN(
0, 
0, 
-1, 2.11558, 1, -1, 0.448937,-99) , 
7, 1.57137, 1, 0, 0.497023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415965,-99) , 
3, 9.10265, 1, 0, 0.49319,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0496371);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484693,-99) , 
4, 0.999932, 0, 0, 0.508259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476969,-99) , 
9, 8.78829, 0, 0, 0.481217,-99) , 
0, 0.499043, 1, 0, 0.497327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384362,-99) , 
6, -949.113, 0, 0, 0.428573,-99) , 
4, 0.998571, 0, 0, 0.492131,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0384204);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487851,-99) , 
8, -0.849371, 1, 0, 0.498447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42524,-99) , 
3, 9.42577, 1, 0, 0.495338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396809,-99) , 
7, 2.14276, 1, 0, 0.492852,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0615006);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.00001, 1, 1, 0.515086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.653707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471261,-99) , 
8, -2.80028, 1, 0, 0.487086,-99) , 
9, 1.94712, 0, 0, 0.500436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.396894,-99) , 
6, -951.286, 0, 0, 0.435754,-99) , 
4, 0.998572, 0, 0, 0.495472,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0356054);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494104,-99) , 
8, -1.02031, 1, 0, 0.503047,-99) , 
NN(
0, 
0, 
-1, -0.143595, 1, -1, 0.445437,-99) , 
5, 0.0238027, 1, 0, 0.499425,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.437131,-99) , 
4, 0.998571, 0, 0, 0.49469,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0390564);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474702,-99) , 
7, 0.999961, 1, 0, 0.506311,-99) , 
NN(
0, 
0, 
-1, -1.28567, 0, -1, 0.474067,-99) , 
4, 0.999796, 0, 0, 0.498799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.395445,-99) , 
4, 0.995715, 0, 0, 0.496163,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0389248);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48301,-99) , 
7, -0.4286, 0, 0, 0.501656,-99) , 
NN(
0, 
0, 
-1, 3.10525, 0, -1, 0.446271,-99) , 
5, 0.0238027, 1, 0, 0.498253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.414672,-99) , 
3, 9.80004, 1, 0, 0.495028,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0394709);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489401,-99) , 
9, 1.79305, 0, 0, 0.501268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.432677,-99) , 
6, -951.286, 0, 0, 0.462466,-99) , 
7, 1.2857, 1, 0, 0.496839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.424684,-99) , 
3, 9.42577, 1, 0, 0.493793,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0302116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465112,-99) , 
5, 0.00113332, 0, 0, 0.501139,-99) , 
NN(
0, 
0, 
-1, -0.143449, 1, -1, 0.450283,-99) , 
5, 0.0238014, 1, 0, 0.497967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.41098,-99) , 
4, 0.996667, 0, 0, 0.495089,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0591255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.65241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491532,-99) , 
8, -2.78586, 1, 0, 0.517451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470601,-99) , 
6, -1.58995, 0, 0, 0.484746,-99) , 
8, -0.930745, 1, 0, 0.495182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415699,-99) , 
3, 9.80004, 1, 0, 0.492185,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0274353);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439456,-99) , 
7, -2.26529, 0, 0, 0.505105,-99) , 
NN(
0, 
0, 
-1, 1.44777, 0, -1, 0.458924,-99) , 
0, 0.503804, 1, 0, 0.500976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.407995,-99) , 
7, 2.1428, 1, 0, 0.498629,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0341781);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482472,-99) , 
9, 0.400445, 0, 0, 0.501998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441644,-99) , 
6, -951.286, 0, 0, 0.464455,-99) , 
7, 1.28569, 1, 0, 0.497753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418861,-99) , 
3, 9.79756, 1, 0, 0.494774,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0191953);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455878,-99) , 
5, 0.0237858, 1, 0, 0.498941,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.459159,-99) , 
0, 0.503804, 1, 0, 0.495465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413921,-99) , 
4, 0.995714, 0, 0, 0.493394,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.032855);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486111,-99) , 
4, 0.999974, 0, 0, 0.499515,-99) , 
NN(
0, 
0, 
-1, -1.28567, 0, -1, 0.475076,-99) , 
4, 0.999819, 0, 0, 0.493534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.417791,-99) , 
4, 0.996191, 0, 0, 0.491354,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0435874);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.669627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490438,-99) , 
8, -2.91794, 1, 0, 0.506954,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.483642,-99) , 
8, -0.212002, 1, 0, 0.494402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411081,-99) , 
7, 2.1428, 1, 0, 0.492287,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.0183607);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436302,-99) , 
7, -2.30611, 0, 0, 0.501782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451298,-99) , 
7, 1.85712, 1, 0, 0.499635,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427827,-99) , 
4, 0.996191, 0, 0, 0.497556,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0966362);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.643344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.400312,-99) , 
9, -0.130659, 0, 0, 0.492227,-99) , 
8, -2.83429, 1, 0, 0.509194,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.645037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482979,-99) , 
7, -1.00002, 1, 0, 0.498547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427129,-99) , 
6, -949.024, 0, 0, 0.458516,-99) , 
9, 2.68438, 0, 0, 0.48224,-99) , 
8, -0.395026, 1, 0, 0.49352,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0372785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489515,-99) , 
8, -1.63024, 1, 0, 0.498441,-99) , 
9, 10.7611, 0, 0, 0.500958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433509,-99) , 
3, 9.79252, 1, 0, 0.498411,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0502148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0712155, 0, 1, 0.507261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579967,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418842,-99) , 
8, -2.38454, 1, 0, 0.479219,-99) , 
9, 0.379125, 0, 0, 0.500987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421452,-99) , 
4, 0.995715, 0, 0, 0.498967,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0357341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490704,-99) , 
8, -1.04251, 1, 0, 0.500307,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385695,-99) , 
8, 3.3551, 0, 0, 0.456383,-99) , 
5, 0.0238027, 1, 0, 0.497618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441976,-99) , 
3, 9.42256, 1, 0, 0.495267,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0576693);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48529,-99) , 
7, 0.99998, 1, 0, 0.506313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423677,-99) , 
8, -2.48721, 1, 0, 0.479039,-99) , 
9, 0.361928, 0, 0, 0.500475,-99) , 
NN(
0, 
0, 
-1, -949.113, 0, -1, 0.451918,-99) , 
4, 0.998572, 0, 0, 0.496844,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0419382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455926,-99) , 
6, -948.705, 1, 0, 0.516491,-99) , 
NN(
0, 
0, 
-1, 0.532978, 0, -1, 0.492614,-99) , 
8, -1.22553, 1, 0, 0.498864,-99) , 
NN(
0, 
0, 
-1, 0.506117, 1, -1, 0.452286,-99) , 
0, 0.504757, 1, 0, 0.496139,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0368075);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.544331,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.62563,-99) , 
NN(
0, 
0, 
-1, -0.174488, 0, -1, 0.488476,-99) , 
8, -2.8809, 1, 0, 0.494642,-99) , 
9, 9.97149, 0, 0, 0.497767,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.0493523);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0721755, 0, 1, 0.510566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459843,-99) , 
4, 0.998571, 0, 0, 0.50755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586828,-99) , 
NN(
0, 
0, 
-1, -0.511792, 0, -1, 0.441756,-99) , 
8, -2.65437, 1, 0, 0.479284,-99) , 
9, 0.400445, 0, 0, 0.501013,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.0204892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4983,-99) , 
5, 0.0101997, 0, 0, 0.503147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.402074,-99) , 
9, 4.11746, 0, 0, 0.459356,-99) , 
5, 0.0237992, 1, 0, 0.500449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442528,-99) , 
3, 9.80052, 1, 0, 0.498275,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0355451);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.395026, 1, 1, 0.511177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469371,-99) , 
8, 0.98951, 0, 0, 0.482375,-99) , 
5, 0.00226573, 0, 0, 0.503765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.387094,-99) , 
8, 3.57526, 0, 0, 0.450066,-99) , 
5, 0.0237903, 1, 0, 0.500481,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0302321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460363,-99) , 
5, 0.0237903, 1, 0, 0.505528,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473003,-99) , 
2, 0.0710788, 0, 0, 0.480388,-99) , 
0, 0.500721, 1, 0, 0.498818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430266,-99) , 
0, 0.489519, 0, 0, 0.49699,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0300077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143245, 0, 1, 0.536555,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489228,-99) , 
2, -0.111562, 1, 0, 0.493068,-99) , 
2, 0.214713, 0, 0, 0.495677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445555,-99) , 
3, 9.42577, 1, 0, 0.493584,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0158405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.011333, 0, 1, 0.503665,-99) , 
NN(
0, 
0, 
-1, 4.0021, 0, -1, 0.460675,-99) , 
5, 0.0237992, 1, 0, 0.501024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438595,-99) , 
3, 9.78684, 1, 0, 0.498705,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.071602);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469362,-99) , 
8, -2.68004, 1, 0, 0.494243,-99) , 
9, 0.835054, 0, 0, 0.512239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493578,-99) , 
7, -0.999992, 1, 0, 0.506826,-99) , 
NN(
0, 
0, 
-1, -1.57164, 0, -1, 0.462024,-99) , 
9, 2.39611, 0, 0, 0.488685,-99) , 
8, -0.759808, 1, 0, 0.496902,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0454609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495632,-99) , 
6, -43.3991, 1, 0, 0.510845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445437,-99) , 
9, 1.85207, 0, 0, 0.478233,-99) , 
7, -1.28571, 0, 0, 0.506107,-99) , 
NN(
0, 
0, 
-1, -0.144472, 1, -1, 0.459561,-99) , 
5, 0.0237992, 1, 0, 0.503285,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0264378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487867,-99) , 
7, -0.714338, 0, 0, 0.522073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48417,-99) , 
0, 0.499995, 1, 0, 0.498583,-99) , 
2, 0.0716936, 0, 0, 0.502598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452183,-99) , 
4, 0.997143, 0, 0, 0.500673,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0230561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488632,-99) , 
9, 0.239737, 0, 0, 0.504096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452575,-99) , 
0, 0.505981, 1, 0, 0.502624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451086,-99) , 
0, 0.490471, 0, 0, 0.500339,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0226636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489622,-99) , 
7, -1.0001, 0, 0, 0.523129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495532,-99) , 
3, 0.567985, 1, 0, 0.498133,-99) , 
2, 0.0707357, 0, 0, 0.50248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45924,-99) , 
3, 9.42823, 1, 0, 0.500654,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0230698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454226,-99) , 
7, 2.02035, 1, 0, 0.506149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463499,-99) , 
7, -2.14286, 0, 0, 0.504601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452621,-99) , 
3, 9.78684, 1, 0, 0.50264,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0163013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.041803, 0, 1, 0.504835,-99) , 
NN(
0, 
0, 
-1, -1.28565, 0, -1, 0.48702,-99) , 
4, 0.999819, 0, 0, 0.500489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445654,-99) , 
4, 0.996191, 0, 0, 0.498957,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0208232);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498135,-99) , 
8, -2.91794, 1, 0, 0.5087,-99) , 
NN(
0, 
0, 
-1, 1.35611, 0, -1, 0.493051,-99) , 
8, -0.212002, 1, 0, 0.499953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448975,-99) , 
4, 0.996191, 0, 0, 0.498506,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0326959);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492504,-99) , 
8, -0.708267, 1, 0, 0.504273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423661,-99) , 
8, 3.03207, 0, 0, 0.472575,-99) , 
5, 0.0238014, 1, 0, 0.50233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460867,-99) , 
0, 0.490471, 0, 0, 0.500473,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.050588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.630159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48505,-99) , 
9, 3.55114, 1, 0, 0.504354,-99) , 
7, -1.28562, 1, 0, 0.512315,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615613,-99) , 
NN(
0, 
0, 
-1, -1.57567, 0, -1, 0.483946,-99) , 
8, -2.96636, 1, 0, 0.493179,-99) , 
9, 1.95822, 0, 0, 0.502002,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0258953);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486059,-99) , 
7, -0.999979, 0, 0, 0.525504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496291,-99) , 
2, 0.0776697, 0, 0, 0.501979,-99) , 
2, -0.0719, 1, 0, 0.506006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460081,-99) , 
3, 9.79252, 1, 0, 0.504291,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0350549);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495055,-99) , 
9, 3.70392, 1, 0, 0.534791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490405,-99) , 
7, -0.428599, 0, 0, 0.50493,-99) , 
5, 0.0113343, 0, 0, 0.509198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416925,-99) , 
8, 2.59873, 0, 0, 0.472883,-99) , 
5, 0.0238027, 1, 0, 0.506958,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0272065);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498929,-99) , 
7, -0.714301, 1, 0, 0.522009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.621754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497337,-99) , 
8, -2.96441, 1, 0, 0.503583,-99) , 
8, 2.10924, 0, 0, 0.508453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450787,-99) , 
0, 0.489519, 0, 0, 0.506931,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.030367);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 11.2502, 0, 1, 0.512274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.438957,-99) , 
6, -951.286, 0, 0, 0.476181,-99) , 
4, 0.998572, 0, 0, 0.509619,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0151052);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499793,-99) , 
8, -2.74315, 1, 0, 0.504016,-99) , 
9, 11.3455, 0, 0, 0.505852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446238,-99) , 
4, 0.99619, 0, 0, 0.504189,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0564463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465098,-99) , 
7, -1.77549, 0, 0, 0.511738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458813,-99) , 
7, 2.1428, 1, 0, 0.510058,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.633542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455028,-99) , 
6, -12.1436, 1, 0, 0.552457,-99) , 
NN(
0, 
0, 
-1, -0.308476, 0, -1, 0.435716,-99) , 
8, -2.32385, 1, 0, 0.489442,-99) , 
9, 0.239737, 0, 0, 0.505923,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0429744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.66121, 1, 1, 0.596582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423229,-99) , 
9, -0.621968, 0, 0, 0.466708,-99) , 
6, -951.276, 1, 0, 0.539641,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28574, 1, 1, 0.506266,-99) , 
NN(
0, 
0, 
-1, -1.40331, 0, -1, 0.47603,-99) , 
9, 1.46483, 0, 0, 0.495781,-99) , 
8, -1.91133, 1, 0, 0.50221,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.0478117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.615451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453678,-99) , 
9, 0.000781161, 0, 0, 0.506787,-99) , 
8, -2.95782, 1, 0, 0.52057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462607,-99) , 
4, 0.999524, 0, 0, 0.495319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382151,-99) , 
9, 0.670905, 0, 0, 0.490802,-99) , 
8, -1.0324, 1, 0, 0.499617,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.0610626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.47647, 1, 1, 0.549293,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.433918,-99) , 
9, -0.427118, 0, 0, 0.480459,-99) , 
6, -949.113, 1, 0, 0.521187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.606263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486911,-99) , 
7, -0.713616, 1, 0, 0.505612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444627,-99) , 
9, 2.28556, 0, 0, 0.476386,-99) , 
6, -948.526, 0, 0, 0.486097,-99) , 
8, -1.0324, 1, 0, 0.496443,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0624675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13407, 0, 1, 0.570452,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4282,-99) , 
9, -0.0165264, 0, 0, 0.498918,-99) , 
8, -2.56327, 1, 0, 0.510555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493152,-99) , 
7, -0.426259, 1, 0, 0.509089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442825,-99) , 
9, 2.69861, 0, 0, 0.475441,-99) , 
6, -951.227, 0, 0, 0.486537,-99) , 
8, -0.395026, 1, 0, 0.496549,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0635841);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470815,-99) , 
9, 0.831394, 0, 0, 0.495725,-99) , 
8, -2.60229, 1, 0, 0.506131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479075,-99) , 
9, 4.1117, 1, 0, 0.50943,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.473802,-99) , 
6, -948.526, 0, 0, 0.48574,-99) , 
8, -0.167888, 1, 0, 0.495088,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0442808);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.42878, 1, 1, 0.54636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446664,-99) , 
7, -0.863447, 1, 0, 0.474218,-99) , 
6, -949.113, 1, 0, 0.516898,-99) , 
NN(
0, 
0, 
-1, 0.670905, 0, -1, 0.48811,-99) , 
8, -1.04251, 1, 0, 0.49656,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.039398);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.277485, 0, 1, 0.534985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486793,-99) , 
6, -948.526, 0, 0, 0.498026,-99) , 
8, -1.92356, 1, 0, 0.503544,-99) , 
NN(
0, 
0, 
-1, 3.10525, 0, -1, 0.461715,-99) , 
5, 0.0237902, 1, 0, 0.500957,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0282096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469781,-99) , 
6, -12.1436, 1, 0, 0.51799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44231,-99) , 
7, -1.85712, 0, 0, 0.497586,-99) , 
8, -1.24672, 1, 0, 0.502661,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446652,-99) , 
4, 0.996191, 0, 0, 0.501091,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0246905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.139453, 0, 1, 0.520318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493146,-99) , 
2, -0.0780229, 1, 0, 0.49786,-99) , 
2, 0.071491, 0, 0, 0.501777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449299,-99) , 
3, 9.79006, 1, 0, 0.499832,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0156146);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499483,-99) , 
5, 0.011329, 0, 0, 0.503271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428474,-99) , 
8, 4.53942, 0, 0, 0.473254,-99) , 
5, 0.0237915, 1, 0, 0.501398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450175,-99) , 
4, 0.996191, 0, 0, 0.499964,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0349097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459782,-99) , 
6, -951.276, 1, 0, 0.500239,-99) , 
9, 0.400969, 0, 0, 0.5202,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451009,-99) , 
4, 0.998572, 0, 0, 0.498196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4162,-99) , 
9, 0.557198, 0, 0, 0.494564,-99) , 
8, -1.22553, 1, 0, 0.501267,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0307105);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486902,-99) , 
9, 3.92594, 1, 0, 0.507351,-99) , 
NN(
0, 
0, 
-1, 1.28564, 1, -1, 0.485235,-99) , 
5, 0.00226686, 0, 0, 0.501671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420299,-99) , 
8, 4.4699, 0, 0, 0.461071,-99) , 
5, 0.0238027, 1, 0, 0.499167,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0465323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449369,-99) , 
8, -1.70938, 1, 0, 0.501587,-99) , 
9, 0.639049, 0, 0, 0.513151,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.592565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496401,-99) , 
7, -0.714277, 1, 0, 0.511538,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.48356,-99) , 
6, -949.024, 0, 0, 0.492813,-99) , 
8, -1.01958, 1, 0, 0.498863,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0371432);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.61442, 1, 1, 0.546522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.427757,-99) , 
9, -0.55285, 0, 0, 0.476905,-99) , 
6, -12.1436, 1, 0, 0.517592,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494157,-99) , 
6, -1.58995, 0, 0, 0.500523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426726,-99) , 
9, 0.581337, 0, 0, 0.497002,-99) , 
8, -1.22553, 1, 0, 0.502406,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.042608);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498758,-99) , 
9, 4.51386, 1, 0, 0.510942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483409,-99) , 
8, 4.79361, 0, 0, 0.492095,-99) , 
7, 0.99994, 1, 0, 0.506979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.604349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469888,-99) , 
6, -12.1436, 1, 0, 0.542164,-99) , 
NN(
0, 
0, 
-1, -0.419176, 0, -1, 0.449687,-99) , 
8, -2.51862, 1, 0, 0.485029,-99) , 
9, 0.15943, 0, 0, 0.502914,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0237916);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.151133, 1, 1, 0.52775,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496178,-99) , 
8, -2.49143, 1, 0, 0.500541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431582,-99) , 
5, 0.0237915, 1, 0, 0.497453,-99) , 
9, 8.04958, 0, 0, 0.500261,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0225785);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475138,-99) , 
5, 0.0238027, 1, 0, 0.505865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463675,-99) , 
0, 0.490063, 0, 0, 0.504235,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.466337,-99) , 
0, 0.504757, 1, 0, 0.502056,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0279491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0711901, 0, 1, 0.506595,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436003,-99) , 
8, -2.29908, 1, 0, 0.482453,-99) , 
9, 0.0998317, 0, 0, 0.502485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444868,-99) , 
4, 0.996191, 0, 0, 0.500891,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0213041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142791, 0, 1, 0.52959,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49352,-99) , 
2, 0.0717315, 0, 0, 0.497313,-99) , 
3, 0.575721, 1, 0, 0.499475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458881,-99) , 
3, 9.43526, 1, 0, 0.497814,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0220937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466892,-99) , 
0, 0.5019, 1, 0, 0.51388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494783,-99) , 
2, 0.214217, 0, 0, 0.496844,-99) , 
3, 1.05339, 1, 0, 0.500518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463887,-99) , 
3, 9.79955, 1, 0, 0.499161,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0222532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498366,-99) , 
4, 0.999995, 0, 0, 0.507901,-99) , 
NN(
0, 
0, 
-1, -1.57138, 0, -1, 0.490103,-99) , 
4, 0.999887, 0, 0, 0.502652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468099,-99) , 
4, 0.997619, 0, 0, 0.501128,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.049816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28571, 1, 1, 0.51439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.632257,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488322,-99) , 
8, -1.73538, 1, 0, 0.498703,-99) , 
8, 1.18036, 0, 0, 0.505089,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47208,-99) , 
6, -949.96, 1, 0, 0.533328,-99) , 
NN(
0, 
0, 
-1, -0.443569, 0, -1, 0.434584,-99) , 
8, -2.49364, 1, 0, 0.481063,-99) , 
9, -0.0224326, 0, 0, 0.501338,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0267198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486588,-99) , 
5, 0.00113332, 0, 0, 0.508139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448286,-99) , 
8, 3.10525, 0, 0, 0.479688,-99) , 
5, 0.0238027, 1, 0, 0.506384,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464658,-99) , 
3, 9.3665, 1, 0, 0.504646,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0436736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.13483, 1, 1, 0.564248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463749,-99) , 
8, -1.26222, 1, 0, 0.498477,-99) , 
9, 1.25273, 0, 0, 0.509351,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47823,-99) , 
4, 0.999955, 0, 0, 0.49721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453453,-99) , 
4, 0.999048, 0, 0, 0.494414,-99) , 
8, -0.180127, 1, 0, 0.50123,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0208027);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.27299, 0, 1, 0.510643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482677,-99) , 
9, 2.73363, 0, 0, 0.494009,-99) , 
8, -0.122439, 1, 0, 0.502037,-99) , 
NN(
0, 
0, 
-1, 3.10525, 0, -1, 0.465972,-99) , 
5, 0.0237992, 1, 0, 0.499816,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0237674);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48674,-99) , 
9, 3.5843, 1, 0, 0.517895,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49385,-99) , 
2, 0.153125, 0, 0, 0.496948,-99) , 
2, -0.0713187, 1, 0, 0.500551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458096,-99) , 
3, 9.78684, 1, 0, 0.498986,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0428869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.49753, 0, 1, 0.51131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57192,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477895,-99) , 
7, -0.714383, 1, 0, 0.492164,-99) , 
9, 3.72913, 1, 0, 0.505496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564691,-99) , 
NN(
0, 
0, 
-1, -0.660857, 0, -1, 0.466345,-99) , 
8, -2.93034, 1, 0, 0.485215,-99) , 
9, 0.239737, 0, 0, 0.501438,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0149006);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486047,-99) , 
6, 0.525285, 1, 0, 0.501431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473851,-99) , 
0, 0.505029, 1, 0, 0.499998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446634,-99) , 
0, 0.489519, 0, 0, 0.49861,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.018377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505642,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484834,-99) , 
9, -0.118587, 0, 0, 0.502714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466232,-99) , 
0, 0.490063, 0, 0, 0.501309,-99) , 
NN(
0, 
0, 
-1, 1.99225, 0, -1, 0.47165,-99) , 
0, 0.504757, 1, 0, 0.499597,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0360008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.671355, 1, 1, 0.557476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457849,-99) , 
8, -1.47914, 1, 0, 0.491835,-99) , 
9, 1.10934, 0, 0, 0.502403,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.490273,-99) , 
8, -0.395026, 1, 0, 0.495311,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0306256);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454536,-99) , 
7, 2.07476, 1, 0, 0.502749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468926,-99) , 
7, -1.85715, 0, 0, 0.501451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.599501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471906,-99) , 
9, -0.811385, 0, 0, 0.519637,-99) , 
NN(
0, 
0, 
-1, -0.406086, 0, -1, 0.437861,-99) , 
8, -2.36575, 1, 0, 0.480976,-99) , 
9, 0.0238724, 0, 0, 0.49811,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.014624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499381,-99) , 
7, -1.57145, 1, 0, 0.502842,-99) , 
NN(
0, 
0, 
-1, -1.28565, 0, -1, 0.487531,-99) , 
4, 0.999819, 0, 0, 0.499131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447172,-99) , 
4, 0.996191, 0, 0, 0.4977,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0159748);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495711,-99) , 
8, 2.29227, 0, 0, 0.499415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464541,-99) , 
1, 0.0237438, 1, 0, 0.498309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449924,-99) , 
4, 0.996191, 0, 0, 0.496967,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0132345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.457647, 1, 1, 0.532708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497803,-99) , 
2, 0.214466, 0, 0, 0.499407,-99) , 
3, 0.562457, 1, 0, 0.501549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465936,-99) , 
3, 9.3665, 1, 0, 0.500036,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.0269125);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482989,-99) , 
5, 0.0238027, 1, 0, 0.503775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461601,-99) , 
8, -2.96087, 1, 0, 0.483846,-99) , 
9, 0.04107, 0, 0, 0.5005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460851,-99) , 
0, 0.490471, 0, 0, 0.498755,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0221);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494807,-99) , 
7, -0.428758, 0, 0, 0.515564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489156,-99) , 
0, 0.49809, 1, 0, 0.497357,-99) , 
2, -0.0726507, 1, 0, 0.500443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460512,-99) , 
3, 9.79006, 1, 0, 0.498957,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.026756);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491025,-99) , 
6, -40.0028, 1, 0, 0.504859,-99) , 
NN(
0, 
0, 
-1, -0.999979, 0, -1, 0.48303,-99) , 
4, 0.999728, 0, 0, 0.50084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456537,-99) , 
4, 0.997143, 0, 0, 0.499179,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0142388);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492778,-99) , 
3, 4.60553, 1, 0, 0.511308,-99) , 
NN(
0, 
0, 
-1, 0.503306, 1, -1, 0.496058,-99) , 
2, -0.0714296, 1, 0, 0.498744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462285,-99) , 
0, 0.489519, 0, 0, 0.497769,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0171701);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497253,-99) , 
3, 4.39026, 1, 0, 0.514145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494685,-99) , 
2, 0.0599191, 0, 0, 0.498468,-99) , 
2, -0.0916479, 1, 0, 0.500495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464898,-99) , 
2, -0.356911, 0, 0, 0.499545,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.011074);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49985,-99) , 
8, -2.13846, 1, 0, 0.503265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459565,-99) , 
1, -0.0258333, 0, 0, 0.502038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462765,-99) , 
1, 0.0240141, 1, 0, 0.50087,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.0156485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.5715, 1, 1, 0.505533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43325,-99) , 
7, -1.28569, 0, 0, 0.491887,-99) , 
4, 0.999841, 0, 0, 0.502037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456076,-99) , 
4, 0.996667, 0, 0, 0.500574,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0461869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480901,-99) , 
7, -0.428571, 0, 0, 0.497404,-99) , 
8, 1.68354, 0, 0, 0.504125,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463724,-99) , 
9, 10.8467, 0, 0, 0.472883,-99) , 
7, -0.713246, 1, 0, 0.486557,-99) , 
9, 3.57208, 1, 0, 0.499628,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0442736);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584805,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422694,-99) , 
9, -0.620855, 0, 0, 0.502929,-99) , 
8, -2.979, 1, 0, 0.511337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.585612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491611,-99) , 
7, -0.999979, 1, 0, 0.500447,-99) , 
NN(
0, 
0, 
-1, -1.57164, 0, -1, 0.480147,-99) , 
9, 2.39611, 0, 0, 0.492089,-99) , 
8, -0.817496, 1, 0, 0.498526,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0189735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85716, 1, 1, 0.508365,-99) , 
NN(
0, 
0, 
-1, -1.28573, 0, -1, 0.490431,-99) , 
4, 0.999819, 0, 0, 0.504007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461877,-99) , 
4, 0.996191, 0, 0, 0.502823,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0191869);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492212,-99) , 
4, 0.999819, 0, 0, 0.504335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437348,-99) , 
9, 1.34899, 0, 0, 0.491833,-99) , 
7, 0.714272, 1, 0, 0.501309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452684,-99) , 
4, 0.996191, 0, 0, 0.49999,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.0180667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.52066, 1, 1, 0.534301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49493,-99) , 
2, 0.112337, 0, 0, 0.497462,-99) , 
2, -0.214038, 1, 0, 0.499581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46932,-99) , 
3, 8.83997, 1, 0, 0.498086,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0256858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498646,-99) , 
8, 1.66437, 0, 0, 0.50582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482749,-99) , 
7, -0.714191, 1, 0, 0.49343,-99) , 
9, 3.5641, 1, 0, 0.502552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465918,-99) , 
4, 0.996667, 0, 0, 0.501367,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.025264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.024, 0, 1, 0.52994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474591,-99) , 
2, -0.275521, 0, 0, 0.494331,-99) , 
3, 4.62499, 1, 0, 0.51549,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499789,-99) , 
7, -0.713507, 1, 0, 0.511417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492752,-99) , 
8, -2.38591, 1, 0, 0.497067,-99) , 
8, 2.29227, 0, 0, 0.500757,-99) , 
2, -0.0714607, 1, 0, 0.503394,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0128353);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.582602, 1, 1, 0.505584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471731,-99) , 
3, 9.79006, 1, 0, 0.504339,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0293687);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28569, 1, 1, 0.509262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479776,-99) , 
8, -1.23629, 1, 0, 0.498039,-99) , 
9, 1.79305, 0, 0, 0.503686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448493,-99) , 
4, 0.996191, 0, 0, 0.5022,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.011491);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.247692, 0, 1, 0.523178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498329,-99) , 
2, -0.0596637, 1, 0, 0.501346,-99) , 
2, 0.180326, 0, 0, 0.502562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469087,-99) , 
2, 0.357165, 1, 0, 0.501641,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0153871);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46781,-99) , 
1, -0.0259375, 0, 0, 0.504589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476444,-99) , 
1, 0.023912, 1, 0, 0.503722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469108,-99) , 
4, 0.996667, 0, 0, 0.50261,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.010539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142989, 0, 1, 0.529133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484649,-99) , 
0, 0.492376, 0, 0, 0.500123,-99) , 
2, 0.180226, 0, 0, 0.501776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46508,-99) , 
2, 0.357085, 1, 0, 0.50079,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0265305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496925,-99) , 
8, 1.39008, 0, 0, 0.503473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480836,-99) , 
7, -0.714395, 1, 0, 0.489971,-99) , 
9, 3.57208, 1, 0, 0.500013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458321,-99) , 
0, 0.489519, 0, 0, 0.498932,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0145024);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486802,-99) , 
6, -951.286, 0, 0, 0.522484,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499228,-99) , 
7, -1.85715, 1, 0, 0.50117,-99) , 
4, 0.999048, 1, 0, 0.503407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473819,-99) , 
3, 9.42256, 1, 0, 0.502185,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0174411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.24161, 0, 1, 0.510199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495871,-99) , 
9, 7.8474, 0, 0, 0.499718,-99) , 
8, -0.180127, 1, 0, 0.50436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473462,-99) , 
4, 0.996667, 0, 0, 0.50338,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0170517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472328,-99) , 
0, 0.492376, 0, 0, 0.512954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498968,-99) , 
2, 0.214537, 0, 0, 0.500879,-99) , 
3, 1.44778, 1, 0, 0.504867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476719,-99) , 
3, 9.42256, 1, 0, 0.503712,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0251686);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492406,-99) , 
9, -0.217457, 0, 0, 0.509583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449548,-99) , 
9, 1.31906, 0, 0, 0.496591,-99) , 
7, 0.714272, 1, 0, 0.506422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462911,-99) , 
0, 0.489519, 0, 0, 0.505296,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0161337);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499221,-99) , 
9, 1.23147, 0, 0, 0.507654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496053,-99) , 
9, 8.12447, 0, 0, 0.499358,-99) , 
8, -0.180127, 1, 0, 0.503134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463355,-99) , 
0, 0.489519, 0, 0, 0.5021,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0128951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.63804, 1, 1, 0.509583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498345,-99) , 
4, 0.999524, 1, 0, 0.500679,-99) , 
0, 0.497274, 1, 0, 0.504309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475892,-99) , 
0, 0.489519, 0, 0, 0.503574,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0180394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494154,-99) , 
3, 5.10028, 1, 0, 0.519946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490592,-99) , 
7, 0.714221, 1, 0, 0.501635,-99) , 
2, 0.0918501, 0, 0, 0.504012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472831,-99) , 
2, 0.357115, 1, 0, 0.50315,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0285502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492112,-99) , 
4, 0.99966, 0, 0, 0.508417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473233,-99) , 
4, 0.997619, 0, 0, 0.506902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533792,-99) , 
NN(
0, 
0, 
-1, 1.15615, 0, -1, 0.468425,-99) , 
7, -0.428585, 1, 0, 0.489446,-99) , 
6, 0.525285, 1, 0, 0.504608,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0131206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504851,-99) , 
NN(
0, 
0, 
-1, 0.0710089, 1, -1, 0.492052,-99) , 
3, 4.56203, 1, 0, 0.502415,-99) , 
NN(
0, 
0, 
-1, -0.275034, 0, -1, 0.489949,-99) , 
0, 0.500947, 1, 0, 0.499389,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0173808);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494826,-99) , 
9, 3.66408, 1, 0, 0.512802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495055,-99) , 
2, 0.0778648, 0, 0, 0.498309,-99) , 
2, -0.0717296, 1, 0, 0.500759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468563,-99) , 
4, 0.997143, 0, 0, 0.499589,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0265417);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472728,-99) , 
9, 4.67605, 1, 0, 0.521882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493649,-99) , 
6, -948.526, 0, 0, 0.500411,-99) , 
5, 0.0124678, 0, 0, 0.502922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450545,-99) , 
8, 2.80383, 0, 0, 0.48161,-99) , 
5, 0.0238027, 1, 0, 0.501633,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0172565);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0102008, 0, 1, 0.506408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473121,-99) , 
8, 13.6022, 1, 0, 0.504759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450908,-99) , 
9, 4.51229, 0, 0, 0.481969,-99) , 
5, 0.0238027, 1, 0, 0.50339,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.0291873);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.762336, 0, 1, 0.51587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476492,-99) , 
7, -0.714319, 0, 0, 0.499921,-99) , 
8, -0.849371, 1, 0, 0.505039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526511,-99) , 
NN(
0, 
0, 
-1, 1.49602, 0, -1, 0.469197,-99) , 
7, -0.427432, 1, 0, 0.487477,-99) , 
6, 0.525285, 1, 0, 0.502711,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0139761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.14316, 0, 1, 0.525177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495772,-99) , 
2, 0.112535, 0, 0, 0.497833,-99) , 
2, -0.21388, 1, 0, 0.499443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476571,-99) , 
3, 9.78684, 1, 0, 0.498584,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.0216349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497669,-99) , 
8, 1.8485, 0, 0, 0.501876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481935,-99) , 
7, -0.711396, 1, 0, 0.490494,-99) , 
9, 3.68141, 1, 0, 0.498963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4695,-99) , 
4, 0.997143, 0, 0, 0.497879,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0274931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.122, 0, 1, 0.56012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497936,-99) , 
8, -2.76345, 1, 0, 0.501284,-99) , 
8, 1.6675, 0, 0, 0.505982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474392,-99) , 
7, 1.53024, 0, 0, 0.484176,-99) , 
7, -0.428783, 1, 0, 0.494306,-99) , 
9, 3.81661, 1, 0, 0.503209,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0287443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.84971, 0, 1, 0.568533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53773,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498794,-99) , 
8, -2.38545, 1, 0, 0.503631,-99) , 
8, 1.42352, 0, 0, 0.5094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479612,-99) , 
7, 1.58532, 0, 0, 0.486447,-99) , 
7, -0.713372, 1, 0, 0.493542,-99) , 
9, 3.58303, 1, 0, 0.505344,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.0331833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.82829, 0, 1, 0.56854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494114,-99) , 
7, -0.142898, 0, 0, 0.505144,-99) , 
8, 1.39008, 0, 0, 0.510972,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47242,-99) , 
8, 5.64628, 0, 0, 0.489548,-99) , 
7, -0.42762, 1, 0, 0.497577,-99) , 
9, 3.57208, 1, 0, 0.507539,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.0286138);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567637,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496048,-99) , 
8, -3.01159, 1, 0, 0.504678,-99) , 
9, 0.757811, 0, 0, 0.515046,-99) , 
NN(
NN(
0, 
0, 
-1, 2.27647, 1, 1, 0.516419,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442954,-99) , 
7, -1.28567, 0, 0, 0.494283,-99) , 
6, -1.58995, 0, 0, 0.501183,-99) , 
8, -0.849371, 1, 0, 0.505752,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0238199);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.611962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493557,-99) , 
9, -0.237119, 0, 0, 0.52575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495336,-99) , 
6, -948.705, 0, 0, 0.500679,-99) , 
8, -1.86588, 1, 0, 0.504649,-99) , 
NN(
0, 
0, 
-1, 3.24796, 0, -1, 0.479247,-99) , 
5, 0.0237973, 1, 0, 0.503082,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0330228);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578181,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470831,-99) , 
8, -1.76581, 1, 0, 0.503402,-99) , 
9, 0.843375, 0, 0, 0.514445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503654,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485119,-99) , 
7, -0.999992, 0, 0, 0.500771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4599,-99) , 
4, 0.998571, 0, 0, 0.498856,-99) , 
8, -0.805258, 1, 0, 0.504091,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0373671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485782,-99) , 
8, 0.0622404, 1, 0, 0.505574,-99) , 
8, 1.4417, 0, 0, 0.509436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47137,-99) , 
7, 1.53063, 0, 0, 0.47824,-99) , 
7, -0.428367, 1, 0, 0.488007,-99) , 
9, 3.46656, 1, 0, 0.503779,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.013911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499948,-99) , 
5, 0.0113329, 0, 0, 0.504516,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467957,-99) , 
8, 13.6022, 1, 0, 0.502679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451761,-99) , 
8, 3.10525, 0, 0, 0.480801,-99) , 
5, 0.0237992, 1, 0, 0.501343,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0565265);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458143,-99) , 
7, 1.53061, 1, 0, 0.511478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435048,-99) , 
7, -2.14284, 0, 0, 0.508157,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.619876,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548085,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469407,-99) , 
4, 0.999524, 1, 0, 0.482949,-99) , 
7, -1.28554, 1, 0, 0.496577,-99) , 
6, -949.113, 1, 0, 0.50404,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0182079);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470926,-99) , 
9, -0.492053, 0, 0, 0.502391,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.483302,-99) , 
8, 13.5895, 1, 0, 0.50114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468964,-99) , 
4, 0.996191, 0, 0, 0.500255,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.0261538);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495446,-99) , 
8, -2.99419, 1, 0, 0.499086,-99) , 
8, 1.66437, 0, 0, 0.503434,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478439,-99) , 
6, -951.253, 1, 0, 0.49435,-99) , 
NN(
0, 
0, 
-1, 2.89936, 0, -1, 0.470117,-99) , 
8, 5.49847, 0, 0, 0.484709,-99) , 
9, 3.57611, 1, 0, 0.498624,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0132849);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.751702, 0, 1, 0.510882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430641,-99) , 
9, 0.816781, 0, 0, 0.497673,-99) , 
8, -0.85695, 1, 0, 0.501938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46412,-99) , 
2, -0.357145, 0, 0, 0.500921,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0257011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.17655, 1, 1, 0.506923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421953,-99) , 
7, -1.48523, 1, 0, 0.464786,-99) , 
9, -0.785117, 0, 0, 0.503492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473498,-99) , 
7, 1.53046, 0, 0, 0.480919,-99) , 
7, -0.427994, 1, 0, 0.487015,-99) , 
9, 3.81661, 1, 0, 0.499553,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0138243);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496898,-99) , 
8, -1.92356, 1, 0, 0.500048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464619,-99) , 
1, -0.0258346, 0, 0, 0.499064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468964,-99) , 
1, 0.0240141, 1, 0, 0.498154,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0289549);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47634,-99) , 
8, -2.38294, 1, 0, 0.496579,-99) , 
9, 0.413082, 0, 0, 0.510191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493749,-99) , 
6, -1.58995, 0, 0, 0.497531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449921,-99) , 
9, 0.556138, 0, 0, 0.495485,-99) , 
8, -1.22553, 1, 0, 0.499306,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.022909);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.1787, 1, 1, 0.507011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.40047,-99) , 
8, -2.85449, 1, 0, 0.463785,-99) , 
9, -0.753018, 0, 0, 0.503253,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496041,-99) , 
8, 16.733, 1, 0, 0.506525,-99) , 
NN(
0, 
0, 
-1, 3.33177, 0, -1, 0.48117,-99) , 
9, 8.03057, 0, 0, 0.490706,-99) , 
9, 3.68141, 1, 0, 0.500139,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.00756871);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499026,-99) , 
3, 9.10265, 0, 0, 0.500077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47091,-99) , 
2, 0.350165, 1, 0, 0.499224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457622,-99) , 
2, -0.357183, 0, 0, 0.498136,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0103508);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.350128, 1, 1, 0.529139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498514,-99) , 
3, 0.567981, 1, 0, 0.50013,-99) , 
2, -0.214305, 1, 0, 0.501793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47684,-99) , 
3, 9.42823, 1, 0, 0.500766,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0233458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76262, 1, 1, 0.508569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49463,-99) , 
7, -0.713459, 1, 0, 0.498838,-99) , 
9, 3.08521, 1, 0, 0.505176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530021,-99) , 
NN(
0, 
0, 
-1, -0.661261, 0, -1, 0.467984,-99) , 
8, -2.82139, 1, 0, 0.487446,-99) , 
9, -0.0983186, 0, 0, 0.502628,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0131304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542697,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498523,-99) , 
3, 0.456251, 1, 0, 0.523391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496818,-99) , 
2, 0.0707357, 0, 0, 0.499087,-99) , 
3, 0.561739, 1, 0, 0.500639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470439,-99) , 
3, 9.42256, 1, 0, 0.499399,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0174301);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.13846, 1, 1, 0.50478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471764,-99) , 
7, -0.420283, 1, 0, 0.489466,-99) , 
6, 0.525285, 1, 0, 0.502755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467651,-99) , 
4, 0.997143, 0, 0, 0.501455,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.014414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.144098, 0, 1, 0.526719,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496375,-99) , 
4, 0.999048, 1, 0, 0.498705,-99) , 
3, 0.548034, 1, 0, 0.500404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478335,-99) , 
3, 9.13506, 1, 0, 0.499404,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.00785411);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492237,-99) , 
3, 0.4625, 1, 0, 0.519584,-99) , 
NN(
0, 
0, 
-1, 0.0237992, 1, -1, 0.4987,-99) , 
3, 0.567978, 1, 0, 0.500051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472126,-99) , 
3, 9.42823, 1, 0, 0.498909,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0249967);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495051,-99) , 
4, 0.999992, 0, 0, 0.504126,-99) , 
NN(
0, 
0, 
-1, -1.28569, 0, -1, 0.485461,-99) , 
4, 0.999841, 0, 0, 0.499343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466483,-99) , 
4, 0.996667, 0, 0, 0.498307,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0225812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499063,-99) , 
7, -0.959195, 1, 0, 0.506228,-99) , 
7, 1.28564, 0, 0, 0.512335,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497644,-99) , 
8, -2.2513, 1, 0, 0.503704,-99) , 
NN(
0, 
0, 
-1, -1.24299, 1, -1, 0.461652,-99) , 
9, -0.847325, 0, 0, 0.500452,-99) , 
8, 2.10924, 0, 0, 0.503611,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0293823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.28583, 1, 1, 0.513016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496098,-99) , 
8, -1.73586, 1, 0, 0.504153,-99) , 
8, 1.1799, 0, 0, 0.507784,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404697,-99) , 
9, -0.737414, 0, 0, 0.47582,-99) , 
8, -2.94195, 1, 0, 0.491154,-99) , 
9, -0.00766644, 0, 0, 0.505163,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.0282759);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495336,-99) , 
8, -0.91746, 1, 0, 0.528444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429702,-99) , 
9, -0.822162, 0, 0, 0.506406,-99) , 
7, -1.85715, 1, 0, 0.50775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474162,-99) , 
4, 0.99619, 0, 0, 0.50684,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0310325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49324,-99) , 
9, 3.88669, 1, 0, 0.508066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487299,-99) , 
6, -951.244, 0, 0, 0.498175,-99) , 
7, -0.142893, 0, 0, 0.504426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545676,-99) , 
NN(
0, 
0, 
-1, -0.771587, 0, -1, 0.483161,-99) , 
8, -2.99624, 1, 0, 0.492341,-99) , 
9, 0.413866, 0, 0, 0.501651,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.010216);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.456243, 1, 1, 0.523511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5146,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499533,-99) , 
2, -0.0713187, 1, 0, 0.502237,-99) , 
3, 0.561725, 1, 0, 0.503579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475917,-99) , 
3, 9.42256, 1, 0, 0.502447,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0452412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575873,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475185,-99) , 
7, -1.64086, 1, 0, 0.493397,-99) , 
9, -0.0417883, 0, 0, 0.515226,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469168,-99) , 
9, 0.944745, 0, 0, 0.504351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469083,-99) , 
6, -951.286, 0, 0, 0.487023,-99) , 
7, -0.428603, 0, 0, 0.499005,-99) , 
8, -1.63804, 1, 0, 0.502048,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0294789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463208,-99) , 
7, -0.429166, 1, 0, 0.500911,-99) , 
9, 0.418274, 0, 0, 0.514146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497903,-99) , 
9, 5.31351, 1, 0, 0.504571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464436,-99) , 
9, 1.12455, 0, 0, 0.493245,-99) , 
8, 3.44747, 0, 0, 0.496406,-99) , 
8, -1.20333, 1, 0, 0.501079,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.0272424);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.23439, 1, 1, 0.508245,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462654,-99) , 
8, -2.78337, 1, 0, 0.485792,-99) , 
9, -0.234654, 0, 0, 0.5041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491145,-99) , 
9, 2.52926, 1, 0, 0.499542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446947,-99) , 
9, 1.0137, 0, 0, 0.492963,-99) , 
7, 0.428539, 1, 0, 0.5004,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0390081);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.43642,-99) , 
7, -2.18364, 0, 0, 0.504926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476464,-99) , 
7, -1.16285, 1, 0, 0.491603,-99) , 
6, -40.0028, 1, 0, 0.500156,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511137,-99) , 
NN(
0, 
0, 
-1, 1.7755, 1, -1, 0.456295,-99) , 
8, 1.1708, 0, 0, 0.482515,-99) , 
7, 1.2857, 1, 0, 0.498135,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.0214986);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.743586, 1, 1, 0.522182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488686,-99) , 
9, 2.79749, 1, 0, 0.498929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434131,-99) , 
9, -0.789969, 0, 0, 0.495837,-99) , 
7, -1.85714, 1, 0, 0.497416,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0195977);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499643,-99) , 
9, 11.0197, 0, 0, 0.50083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47603,-99) , 
0, 0.504757, 1, 0, 0.499398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45039,-99) , 
6, -12.1436, 1, 0, 0.510437,-99) , 
NN(
0, 
0, 
-1, -0.740796, 1, -1, 0.463168,-99) , 
8, -2.47841, 1, 0, 0.484501,-99) , 
9, 0.0308507, 0, 0, 0.496975,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0265486);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480475,-99) , 
8, 4.31089, 1, 0, 0.520574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490288,-99) , 
6, -949.469, 0, 0, 0.496012,-99) , 
5, 0.0113343, 0, 0, 0.49954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452475,-99) , 
8, 4.89854, 0, 0, 0.480828,-99) , 
5, 0.0238027, 1, 0, 0.498388,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0311715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449691,-99) , 
7, 0.225709, 1, 0, 0.50004,-99) , 
9, 0.791817, 0, 0, 0.510393,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493943,-99) , 
6, -43.6462, 1, 0, 0.509766,-99) , 
NN(
0, 
0, 
-1, 1.1492, 0, -1, 0.48919,-99) , 
8, 3.95549, 0, 0, 0.495015,-99) , 
8, -0.849371, 1, 0, 0.500055,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0282634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.07803, 1, 1, 0.529282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495493,-99) , 
9, 10.975, 0, 0, 0.50162,-99) , 
9, 4.88002, 1, 0, 0.509128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493572,-99) , 
8, -2.10332, 1, 0, 0.499778,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437604,-99) , 
7, -1.58786, 1, 0, 0.461513,-99) , 
9, -0.685507, 0, 0, 0.496144,-99) , 
8, 2.33638, 0, 0, 0.49944,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.0348743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.46223, 1, 1, 0.509788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49301,-99) , 
9, 8.16859, 0, 0, 0.499557,-99) , 
9, 3.62847, 1, 0, 0.506543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472195,-99) , 
8, -2.0851, 1, 0, 0.510107,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419269,-99) , 
8, -2.97835, 1, 0, 0.461759,-99) , 
9, -0.597245, 0, 0, 0.49121,-99) , 
9, 0.283116, 0, 0, 0.503405,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0322856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.16517, 1, 1, 0.519746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436805,-99) , 
8, -2.98299, 1, 0, 0.471229,-99) , 
9, -0.525347, 0, 0, 0.50707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49292,-99) , 
9, 2.45573, 1, 0, 0.50704,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.491944,-99) , 
6, -949.024, 0, 0, 0.496978,-99) , 
8, -0.817496, 1, 0, 0.500328,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0298693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486195,-99) , 
8, 9.91488, 1, 0, 0.507237,-99) , 
7, -1.00021, 1, 0, 0.512103,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494545,-99) , 
8, -2.25949, 1, 0, 0.500296,-99) , 
NN(
0, 
0, 
-1, -1.24299, 0, -1, 0.457404,-99) , 
9, -0.847325, 0, 0, 0.496953,-99) , 
8, 2.10924, 0, 0, 0.500996,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0200845);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.28561, 0, 1, 0.516009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430765,-99) , 
9, 3.50142, 1, 0, 0.502261,-99) , 
8, 2.57113, 0, 0, 0.505422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469538,-99) , 
1, 0.0237438, 1, 0, 0.504315,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.0246579);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57099, 1, 1, 0.505318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470192,-99) , 
9, 12.2417, 0, 0, 0.487408,-99) , 
8, 11.2748, 1, 0, 0.503642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454953,-99) , 
9, -1.10391, 0, 0, 0.509345,-99) , 
NN(
0, 
0, 
-1, -0.820545, 1, -1, 0.458606,-99) , 
8, -2.51892, 1, 0, 0.483099,-99) , 
9, -0.0983186, 0, 0, 0.500716,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0162604);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481844,-99) , 
8, 12.3114, 1, 0, 0.502218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425661,-99) , 
9, -1.07662, 0, 0, 0.499711,-99) , 
7, -2.14285, 1, 0, 0.500846,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0168708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499942,-99) , 
8, -0.643345, 1, 0, 0.516724,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491448,-99) , 
6, -8.38897, 1, 0, 0.498912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430621,-99) , 
9, -0.822162, 0, 0, 0.495885,-99) , 
7, -1.85714, 1, 0, 0.497107,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0106429);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.565779, 1, 1, 0.519747,-99) , 
NN(
0, 
0, 
-1, -0.811599, 0, -1, 0.495594,-99) , 
7, -1.85716, 1, 0, 0.497035,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0156106);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499778,-99) , 
3, 0.484564, 1, 0, 0.522647,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496149,-99) , 
2, -0.0714665, 1, 0, 0.499547,-99) , 
3, 0.594166, 1, 0, 0.50122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472636,-99) , 
3, 9.80055, 1, 0, 0.500174,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0161281);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.28555, 0, 1, 0.51307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469115,-99) , 
9, -0.894777, 0, 0, 0.499704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447619,-99) , 
9, 3.30934, 1, 0, 0.497498,-99) , 
8, 2.29227, 0, 0, 0.50147,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.00838192);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499696,-99) , 
2, -0.21361, 1, 0, 0.501151,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.478751,-99) , 
3, 6.76744, 1, 0, 0.499824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464924,-99) , 
3, 9.42577, 1, 0, 0.498408,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0119363);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.704233, 1, 1, 0.522179,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481875,-99) , 
5, 0.0238014, 1, 0, 0.499798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442773,-99) , 
9, -0.73836, 0, 0, 0.496907,-99) , 
7, -1.85712, 1, 0, 0.498417,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.0107413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497954, 0, 1, 0.514266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453463,-99) , 
9, -0.501513, 0, 0, 0.497455,-99) , 
7, -1.57145, 1, 0, 0.499027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471079,-99) , 
0, 0.505709, 1, 0, 0.498085,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0280159);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544704,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495364,-99) , 
7, 1.28555, 0, 0, 0.502927,-99) , 
7, -0.999962, 1, 0, 0.508082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47056,-99) , 
9, -1.13407, 0, 0, 0.526062,-99) , 
NN(
0, 
0, 
-1, -0.324145, 0, -1, 0.490372,-99) , 
8, -2.57412, 1, 0, 0.493531,-99) , 
8, 2.10924, 0, 0, 0.497422,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0296254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488932,-99) , 
6, -43.6462, 1, 0, 0.504449,-99) , 
7, 1.28555, 0, 0, 0.508867,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493499,-99) , 
9, 0.259514, 0, 0, 0.509654,-99) , 
NN(
0, 
0, 
-1, 0.993605, 0, -1, 0.488203,-99) , 
8, -1.40328, 1, 0, 0.494861,-99) , 
8, 2.10924, 0, 0, 0.49861,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0209558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469826,-99) , 
0, 0.493328, 0, 0, 0.515759,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495903,-99) , 
8, -1.66992, 1, 0, 0.499403,-99) , 
3, 0.9836, 1, 0, 0.502599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470408,-99) , 
3, 9.14073, 1, 0, 0.501168,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0332009);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489682,-99) , 
8, 16.8409, 1, 0, 0.508533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46054,-99) , 
9, 1.72008, 0, 0, 0.499472,-99) , 
7, 0.714272, 1, 0, 0.505842,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461322,-99) , 
9, -0.923576, 0, 0, 0.504394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453673,-99) , 
7, -0.466823, 1, 0, 0.490961,-99) , 
9, 0.0997583, 0, 0, 0.503254,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.00887871);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.789343, 1, 1, 0.522228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484124,-99) , 
8, 13.0158, 1, 0, 0.499021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449167,-99) , 
9, -0.892114, 0, 0, 0.497024,-99) , 
7, -1.85713, 1, 0, 0.49851,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0354547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.59857, 1, 1, 0.523552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447694,-99) , 
7, -0.910685, 1, 0, 0.479578,-99) , 
6, -948.705, 1, 0, 0.505145,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497773,-99) , 
4, 0.999524, 1, 0, 0.506506,-99) , 
NN(
0, 
0, 
-1, -1.00002, 0, -1, 0.487835,-99) , 
6, -948.526, 0, 0, 0.494074,-99) , 
8, -1.20333, 1, 0, 0.496951,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0185045);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.855646, 1, 1, 0.525926,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495262,-99) , 
9, 0.867203, 0, 0, 0.503811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448404,-99) , 
9, -0.859921, 0, 0, 0.501516,-99) , 
7, -1.85715, 1, 0, 0.502975,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0172699);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475013,-99) , 
9, -0.853187, 0, 0, 0.522687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465183,-99) , 
9, 0.0369301, 0, 0, 0.497295,-99) , 
8, -2.37881, 1, 0, 0.499536,-99) , 
9, 12.6356, 0, 0, 0.500507,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.00881763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.878107, 1, 1, 0.521663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451419,-99) , 
9, -0.921053, 0, 0, 0.498697,-99) , 
7, -1.85718, 1, 0, 0.500055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469959,-99) , 
0, 0.505709, 1, 0, 0.499042,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.021311);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498158,-99) , 
9, 0.854628, 0, 0, 0.506651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488597,-99) , 
6, -949.024, 0, 0, 0.49513,-99) , 
8, -0.759808, 1, 0, 0.499086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477297,-99) , 
3, 9.42256, 1, 0, 0.498192,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.0119051);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.50463, 1, 1, 0.520298,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497005,-99) , 
2, -0.112401, 1, 0, 0.499096,-99) , 
2, 0.213896, 0, 0, 0.500368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47589,-99) , 
3, 9.78684, 1, 0, 0.499471,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.0110896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.743586, 1, 1, 0.522841,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461603,-99) , 
9, -0.741647, 0, 0, 0.499767,-99) , 
7, -1.85714, 1, 0, 0.501148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4692,-99) , 
2, 0.357122, 1, 0, 0.500288,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.0268123);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44493,-99) , 
7, -0.0199292, 1, 0, 0.498173,-99) , 
9, 0.418274, 0, 0, 0.509446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4954,-99) , 
4, 0.999524, 1, 0, 0.503196,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.491378,-99) , 
6, -949.024, 0, 0, 0.495315,-99) , 
8, -1.22553, 1, 0, 0.498945,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0338764);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.62508, 0, 1, 0.515776,-99) , 
NN(
0, 
0, 
-1, 0.999653, 0, -1, 0.490417,-99) , 
4, 0.999977, 0, 0, 0.50269,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477039,-99) , 
6, -949.113, 0, 0, 0.500013,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399907,-99) , 
3, 4.76006, 1, 0, 0.484096,-99) , 
4, 0.999524, 0, 0, 0.499754,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0205361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497046,-99) , 
8, -2.43662, 1, 0, 0.50054,-99) , 
8, 1.57841, 0, 0, 0.503633,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494494,-99) , 
7, -0.136935, 1, 0, 0.506206,-99) , 
NN(
0, 
0, 
-1, 3.45994, 0, -1, 0.483584,-99) , 
9, 7.93689, 0, 0, 0.491985,-99) , 
9, 3.57208, 1, 0, 0.500642,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0163295);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447186,-99) , 
9, -0.974829, 0, 0, 0.502988,-99) , 
7, -2.14285, 1, 0, 0.503848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476939,-99) , 
2, -0.357189, 0, 0, 0.503136,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0124761);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497498,-99) , 
7, -0.673492, 1, 0, 0.500063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455787,-99) , 
9, -0.960835, 0, 0, 0.498288,-99) , 
7, -2.14286, 1, 0, 0.499281,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0139382);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499769,-99) , 
5, 0.00566648, 0, 0, 0.505136,-99) , 
NN(
0, 
0, 
-1, 4.40988, 0, -1, 0.482856,-99) , 
5, 0.0237992, 1, 0, 0.503789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465379,-99) , 
9, 1.82263, 0, 0, 0.483507,-99) , 
0, 0.491423, 0, 0, 0.502427,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0158675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499042, 1, 1, 0.51707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452481,-99) , 
9, -0.585646, 0, 0, 0.501063,-99) , 
7, -1.57144, 1, 0, 0.502561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472858,-99) , 
2, -0.357162, 0, 0, 0.501778,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0185621);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483627,-99) , 
4, 0.999728, 0, 0, 0.502819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447749,-99) , 
7, -0.428697, 0, 0, 0.482211,-99) , 
4, 0.999048, 0, 0, 0.500709,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48805,-99) , 
8, 3.24757, 0, 0, 0.496508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47194,-99) , 
9, 1.11133, 0, 0, 0.487006,-99) , 
6, 0.525285, 1, 0, 0.498898,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.012055);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.658502, 1, 1, 0.519152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481354,-99) , 
8, 13.0158, 1, 0, 0.501135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462067,-99) , 
9, -0.892114, 0, 0, 0.499632,-99) , 
7, -1.85715, 1, 0, 0.500797,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0146838);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493398,-99) , 
3, 4.9676, 1, 0, 0.514009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493558,-99) , 
2, 0.0307863, 0, 0, 0.496674,-99) , 
2, -0.214057, 1, 0, 0.497764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472162,-99) , 
0, 0.489519, 0, 0, 0.497111,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.00816156);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498976,-99) , 
2, 0.213881, 0, 0, 0.500308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480388,-99) , 
3, 6.99921, 1, 0, 0.499369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474028,-99) , 
3, 9.14577, 1, 0, 0.498249,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0182577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495773,-99) , 
9, 1.22356, 0, 0, 0.504725,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475754,-99) , 
9, 12.7371, 0, 0, 0.487071,-99) , 
8, 11.1529, 1, 0, 0.503309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477924,-99) , 
7, 2.14279, 1, 0, 0.502673,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0129026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.8571, 1, 1, 0.503949,-99) , 
NN(
0, 
0, 
-1, -1.00004, 0, -1, 0.487006,-99) , 
4, 0.999728, 0, 0, 0.500827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471404,-99) , 
4, 0.997143, 0, 0, 0.499757,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0299181);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56103,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430889,-99) , 
9, -0.632492, 0, 0, 0.501313,-99) , 
8, -3.01156, 1, 0, 0.507328,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496271,-99) , 
7, -0.714277, 1, 0, 0.503796,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.490384,-99) , 
6, -1.69972, 0, 0, 0.494573,-99) , 
8, -0.849371, 1, 0, 0.498723,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.00795098);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499096,-99) , 
2, -0.114556, 1, 0, 0.501014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47392,-99) , 
2, -0.35039, 0, 0, 0.50026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471139,-99) , 
2, 0.357041, 1, 0, 0.499473,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0293611);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.06404, 1, 1, 0.520908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468936,-99) , 
7, 1.61223, 1, 0, 0.505648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482133,-99) , 
4, 0.999048, 1, 0, 0.489233,-99) , 
6, -40.0028, 1, 0, 0.499656,-99) , 
7, -1.85714, 1, 0, 0.500917,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.00618139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.501428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46983,-99) , 
9, 1.82263, 0, 0, 0.48695,-99) , 
0, 0.491424, 0, 0, 0.500486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47535,-99) , 
2, 0.357041, 1, 0, 0.499798,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.014023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49635,-99) , 
2, 0.0469845, 0, 0, 0.500045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474598,-99) , 
2, 0.350139, 1, 0, 0.499305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470087,-99) , 
2, -0.357227, 0, 0, 0.498533,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0132638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.11636, 0, 1, 0.504246,-99) , 
NN(
0, 
0, 
-1, -1.28574, 0, -1, 0.490502,-99) , 
4, 0.999887, 0, 0, 0.500198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474686,-99) , 
4, 0.997619, 0, 0, 0.499101,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0115097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.73454, 1, 1, 0.524378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444092,-99) , 
9, -0.859921, 0, 0, 0.498598,-99) , 
7, -1.85713, 1, 0, 0.500161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509523,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441887,-99) , 
0, 0.495233, 0, 0, 0.486087,-99) , 
4, 0.998572, 0, 0, 0.499131,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0185149);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497937,-99) , 
9, 0.200822, 0, 0, 0.51178,-99) , 
NN(
0, 
0, 
-1, 0.810367, 0, -1, 0.493103,-99) , 
8, -1.57375, 1, 0, 0.496994,-99) , 
9, 10.7611, 0, 0, 0.498244,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0136803);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142912, 0, 1, 0.519993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494626,-99) , 
3, 1.50336, 1, 0, 0.498268,-99) , 
2, -0.21388, 1, 0, 0.499541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471158,-99) , 
3, 9.79006, 1, 0, 0.498501,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.00777128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -3.00429, 1, 1, 0.502358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480336,-99) , 
8, 13.6895, 1, 0, 0.501106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478154,-99) , 
1, 0.0239572, 1, 0, 0.500433,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.018185);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.605132, 1, 1, 0.527035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490433,-99) , 
6, -948.705, 1, 0, 0.498829,-99) , 
7, -1.85715, 1, 0, 0.500546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456885,-99) , 
6, -951.286, 0, 0, 0.48242,-99) , 
4, 0.998571, 0, 0, 0.499231,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.0292557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600872,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463933,-99) , 
9, 0.709758, 0, 0, 0.494517,-99) , 
7, -1.28565, 1, 0, 0.504951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45504,-99) , 
7, 1.91144, 1, 0, 0.501261,-99) , 
NN(
0, 
0, 
-1, -2.1837, 0, -1, 0.455212,-99) , 
7, -1.57145, 0, 0, 0.496176,-99) , 
6, -949.024, 0, 0, 0.499286,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0171879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499041,-99) , 
6, -949.552, 0, 0, 0.508339,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493217,-99) , 
2, 0.227821, 0, 0, 0.49482,-99) , 
2, -0.0714665, 1, 0, 0.497109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47638,-99) , 
3, 8.98668, 1, 0, 0.496134,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0247082);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497026,-99) , 
4, 0.999998, 0, 0, 0.503555,-99) , 
NN(
0, 
0, 
-1, 0.999911, 1, -1, 0.488054,-99) , 
4, 0.999955, 0, 0, 0.497176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524682,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.460265,-99) , 
6, -949.113, 0, 0, 0.484785,-99) , 
4, 0.999048, 0, 0, 0.495917,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0182323);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471764,-99) , 
4, 0.99932, 0, 0, 0.508,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495313,-99) , 
8, -0.91756, 1, 0, 0.499251,-99) , 
0, 0.496185, 1, 0, 0.502054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479903,-99) , 
4, 0.997143, 0, 0, 0.501236,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0139385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49987,-99) , 
7, -2.23809, 0, 0, 0.520992,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485307,-99) , 
8, 12.5414, 1, 0, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46488,-99) , 
9, -0.822162, 0, 0, 0.50083,-99) , 
7, -1.85714, 1, 0, 0.50203,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0119282);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498682,-99) , 
7, -1.85715, 1, 0, 0.501333,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440588,-99) , 
7, -0.999979, 0, 0, 0.489878,-99) , 
4, 0.999683, 0, 0, 0.499352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472711,-99) , 
4, 0.996667, 0, 0, 0.498523,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.031005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46843,-99) , 
7, -0.91029, 1, 0, 0.49963,-99) , 
9, -0.0446836, 0, 0, 0.51768,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497906,-99) , 
7, -0.714274, 1, 0, 0.508004,-99) , 
NN(
0, 
0, 
-1, -1.00002, 0, -1, 0.490366,-99) , 
6, -948.705, 0, 0, 0.496367,-99) , 
8, -1.66992, 1, 0, 0.500222,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0159582);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57135, 1, 1, 0.506716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446006,-99) , 
7, -1.28567, 0, 0, 0.496109,-99) , 
4, 0.999841, 0, 0, 0.504012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479998,-99) , 
4, 0.996667, 0, 0, 0.503265,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0272853);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.499043, 1, 1, 0.521748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.594884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488406,-99) , 
9, -0.389742, 0, 0, 0.517478,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47494,-99) , 
9, 0.773588, 0, 0, 0.498718,-99) , 
8, -2.05253, 1, 0, 0.501247,-99) , 
9, 8.96386, 0, 0, 0.502827,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.00958142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499239,-99) , 
5, 0.0111962, 0, 0, 0.502134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466667,-99) , 
1, -0.0261251, 0, 0, 0.501149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477995,-99) , 
1, 0.0237438, 1, 0, 0.50045,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0225427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568357,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490956,-99) , 
4, 0.999048, 1, 0, 0.496754,-99) , 
7, -0.999732, 1, 0, 0.507825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480852,-99) , 
7, 1.3809, 1, 0, 0.499911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467264,-99) , 
7, -1.85715, 0, 0, 0.497592,-99) , 
6, -1.69972, 0, 0, 0.501036,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.00646753);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.91746, 1, 1, 0.519663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499947,-99) , 
9, 12.9569, 0, 0, 0.500823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468416,-99) , 
9, -0.859921, 0, 0, 0.499477,-99) , 
7, -1.85714, 1, 0, 0.500672,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.011032);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526939,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486122,-99) , 
5, 0.0237903, 1, 0, 0.501429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454235,-99) , 
9, -1.0097, 0, 0, 0.499694,-99) , 
7, -2.14287, 1, 0, 0.500635,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.0282115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564415,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465839,-99) , 
9, 1.02704, 0, 0, 0.496359,-99) , 
7, -0.99962, 1, 0, 0.506735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495493,-99) , 
5, 0.0238027, 0, 0, 0.497899,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.469378,-99) , 
4, 0.999048, 0, 0, 0.495059,-99) , 
6, -1.26137, 0, 0, 0.498772,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.018021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466308,-99) , 
4, 0.999932, 0, 0, 0.522793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463825,-99) , 
9, -0.518331, 0, 0, 0.50001,-99) , 
7, -1.57143, 1, 0, 0.502137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448559,-99) , 
0, 0.496186, 0, 0, 0.4808,-99) , 
4, 0.998572, 0, 0, 0.500599,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0263875);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493491,-99) , 
9, -0.423714, 0, 0, 0.518225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474814,-99) , 
7, 0.193404, 1, 0, 0.509128,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483042,-99) , 
9, 1.32576, 0, 0, 0.503533,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.488295,-99) , 
7, -0.142878, 0, 0, 0.497524,-99) , 
8, -1.20333, 1, 0, 0.50055,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0271541);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487629,-99) , 
9, -0.903866, 0, 0, 0.533982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453892,-99) , 
9, -0.252569, 0, 0, 0.496878,-99) , 
8, -2.42727, 1, 0, 0.501947,-99) , 
NN(
NN(
0, 
0, 
-1, 2.84676, 0, 1, 0.515265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484761,-99) , 
7, -1.16326, 1, 0, 0.489242,-99) , 
7, 1.28568, 0, 0, 0.494407,-99) , 
9, 2.16808, 1, 0, 0.49871,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.0092581);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.704233, 1, 1, 0.520707,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465724,-99) , 
8, 13.9547, 1, 0, 0.499109,-99) , 
NN(
0, 
0, 
-1, 4.30171, 0, -1, 0.480793,-99) , 
5, 0.0238027, 1, 0, 0.497971,-99) , 
7, -1.85715, 1, 0, 0.499304,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0314176);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493527,-99) , 
9, -0.80227, 0, 0, 0.536346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478329,-99) , 
9, 0.601789, 0, 0, 0.49617,-99) , 
8, -2.37675, 1, 0, 0.503807,-99) , 
NN(
NN(
0, 
0, 
-1, 18.1769, 1, 1, 0.513576,-99) , 
NN(
0, 
0, 
-1, 1.3688, 0, -1, 0.490466,-99) , 
9, 9.13356, 0, 0, 0.493562,-99) , 
8, -0.212002, 1, 0, 0.498147,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0201516);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487942,-99) , 
8, -0.91746, 1, 0, 0.517419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494724,-99) , 
8, -2.30238, 1, 0, 0.498149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473912,-99) , 
8, 14.8762, 1, 0, 0.496705,-99) , 
7, -1.85711, 1, 0, 0.497908,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0106541);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.494252, 1, 1, 0.519176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501674,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482592,-99) , 
8, 13.2869, 1, 0, 0.500269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476343,-99) , 
9, -0.632598, 0, 0, 0.499031,-99) , 
7, -1.57143, 1, 0, 0.5009,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.00820327);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.29253, 0, 1, 0.519563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499232,-99) , 
2, -0.0714753, 1, 0, 0.50107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478395,-99) , 
9, -0.859921, 0, 0, 0.500126,-99) , 
7, -1.85714, 1, 0, 0.501271,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.00771316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487197,-99) , 
8, 12.927, 1, 0, 0.500075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46702,-99) , 
9, -1.03079, 0, 0, 0.498891,-99) , 
7, -2.1428, 1, 0, 0.499843,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0315382);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465666,-99) , 
9, 1.62862, 0, 0, 0.484199,-99) , 
6, -949.657, 0, 0, 0.510085,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485218,-99) , 
9, 3.44934, 1, 0, 0.502316,-99) , 
NN(
0, 
0, 
-1, 0.627057, 0, -1, 0.49018,-99) , 
6, -40.0028, 1, 0, 0.497805,-99) , 
7, -1.28571, 1, 0, 0.499519,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0117874);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534433,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497768,-99) , 
8, 1.12181, 0, 0, 0.501254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474814,-99) , 
9, -0.98288, 0, 0, 0.500249,-99) , 
7, -2.14285, 1, 0, 0.501443,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0282539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464443,-99) , 
9, -0.510667, 0, 0, 0.504083,-99) , 
8, -3.01156, 1, 0, 0.510227,-99) , 
NN(
NN(
0, 
0, 
-1, 1.00031, 0, 1, 0.512578,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.491296,-99) , 
6, -951.206, 0, 0, 0.498349,-99) , 
8, -0.849371, 1, 0, 0.502222,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0172264);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23805, 0, 1, 0.520481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494571,-99) , 
8, -2.29335, 1, 0, 0.497498,-99) , 
9, 11.0731, 0, 0, 0.498504,-99) , 
7, -1.85711, 1, 0, 0.499782,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0322467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.565922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473285,-99) , 
9, 0.876331, 0, 0, 0.497648,-99) , 
7, -0.999962, 1, 0, 0.50813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487769,-99) , 
9, 3.66734, 1, 0, 0.502569,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471766,-99) , 
9, -0.67756, 1, 0, 0.482488,-99) , 
7, -1.00001, 0, 0, 0.498067,-99) , 
6, -2.17862, 0, 0, 0.50155,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0295862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428848, 1, 1, 0.52334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482581,-99) , 
7, 0.434665, 0, 0, 0.497032,-99) , 
6, -40.0028, 1, 0, 0.5135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498405,-99) , 
9, -0.898023, 0, 0, 0.535035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487413,-99) , 
6, -948.705, 0, 0, 0.493832,-99) , 
8, -2.38294, 1, 0, 0.498143,-99) , 
8, 3.63558, 0, 0, 0.501184,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0251831);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.258577, 0, 1, 0.522493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442867,-99) , 
9, 0.496775, 0, 0, 0.483366,-99) , 
7, -0.108816, 1, 0, 0.510083,-99) , 
NN(
NN(
0, 
0, 
-1, 5.23643, 1, 1, 0.506155,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472673,-99) , 
9, 1.13933, 0, 0, 0.494441,-99) , 
8, 3.44745, 0, 0, 0.497725,-99) , 
8, -1.20333, 1, 0, 0.500928,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0176428);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.04761, 0, 1, 0.514199,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499097,-99) , 
5, 0.0237742, 0, 0, 0.500915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483953,-99) , 
4, 0.999048, 1, 0, 0.489512,-99) , 
6, -949.13, 1, 0, 0.49672,-99) , 
7, -1.57142, 1, 0, 0.498321,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0128935);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498365,-99) , 
8, 14.8361, 1, 0, 0.51492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462657,-99) , 
9, -0.558726, 0, 0, 0.499094,-99) , 
8, -2.95011, 1, 0, 0.501282,-99) , 
9, 7.53339, 0, 0, 0.5027,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0175345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.4312, 0, 1, 0.517938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485324,-99) , 
7, 0.150469, 1, 0, 0.493314,-99) , 
8, 12.7012, 1, 0, 0.509022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532521,-99) , 
NN(
0, 
0, 
-1, -0.288619, 0, -1, 0.494608,-99) , 
8, -2.61263, 1, 0, 0.497424,-99) , 
8, 3.88413, 0, 0, 0.499653,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0301703);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483027,-99) , 
9, -1.05377, 0, 0, 0.528014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470284,-99) , 
9, 0.412687, 0, 0, 0.493121,-99) , 
7, -0.63435, 1, 0, 0.510012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495824,-99) , 
9, 8.87423, 0, 0, 0.498721,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.469868,-99) , 
4, 0.999048, 0, 0, 0.496418,-99) , 
8, -1.24672, 1, 0, 0.499869,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0100011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.472996, 1, 1, 0.503717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482279,-99) , 
3, 7.48776, 1, 0, 0.50282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476793,-99) , 
3, 9.79006, 1, 0, 0.501859,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0134967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57139, 1, 1, 0.505235,-99) , 
NN(
0, 
0, 
-1, 4.49885, 1, -1, 0.489137,-99) , 
4, 0.999637, 0, 0, 0.502643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471144,-99) , 
4, 0.99619, 0, 0, 0.501801,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0318675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.58738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443125,-99) , 
7, -2.18364, 0, 0, 0.489155,-99) , 
6, -949.657, 0, 0, 0.513401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488048,-99) , 
9, 3.44934, 1, 0, 0.503436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483115,-99) , 
4, 0.999048, 1, 0, 0.487468,-99) , 
6, -948.705, 1, 0, 0.497492,-99) , 
7, -1.28569, 1, 0, 0.499696,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.00658884);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.11493, 1, 1, 0.518509,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499748,-99) , 
9, 9.94939, 0, 0, 0.500629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471124,-99) , 
9, -0.822162, 0, 0, 0.499304,-99) , 
7, -1.85714, 1, 0, 0.500429,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0161272);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497248,-99) , 
7, -1.85714, 1, 0, 0.498861,-99) , 
3, 8.84574, 0, 0, 0.5006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486486,-99) , 
6, -949.113, 0, 0, 0.503607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445652,-99) , 
0, 0.494281, 0, 0, 0.486682,-99) , 
4, 0.999048, 0, 0, 0.499174,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0177135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490582,-99) , 
6, -43.5495, 1, 0, 0.505017,-99) , 
9, 5.46109, 1, 0, 0.510916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486296,-99) , 
9, -0.903866, 0, 0, 0.52543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457271,-99) , 
9, -0.181901, 0, 0, 0.497123,-99) , 
8, -2.38295, 1, 0, 0.500051,-99) , 
8, 3.63558, 0, 0, 0.502212,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0146523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493732,-99) , 
7, -0.143711, 0, 0, 0.51847,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496394,-99) , 
2, -0.030838, 1, 0, 0.500439,-99) , 
2, 0.214006, 0, 0, 0.501504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479318,-99) , 
3, 9.36329, 1, 0, 0.500571,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0215821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.227, 0, 1, 0.521082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492283,-99) , 
2, -0.00390047, 1, 0, 0.500974,-99) , 
2, 0.0695525, 0, 0, 0.503871,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490048,-99) , 
8, 1.06665, 0, 0, 0.497032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469746,-99) , 
2, 0.214088, 1, 0, 0.492167,-99) , 
3, 4.95277, 1, 0, 0.50175,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0264137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.49325, 0, 1, 0.513827,-99) , 
NN(
0, 
0, 
-1, 0.999653, 0, -1, 0.49344,-99) , 
4, 0.999977, 0, 0, 0.503322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48251,-99) , 
6, -949.113, 0, 0, 0.500507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434736,-99) , 
0, 0.492376, 0, 0, 0.488765,-99) , 
4, 0.999524, 0, 0, 0.501023,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0194622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.532695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460158,-99) , 
9, -0.72173, 0, 0, 0.502061,-99) , 
7, -1.85715, 1, 0, 0.503872,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468848,-99) , 
0, 0.501265, 1, 0, 0.501793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457393,-99) , 
0, 0.494281, 0, 0, 0.488686,-99) , 
4, 0.999048, 0, 0, 0.502319,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.00958036);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.502918,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444966,-99) , 
7, -0.999979, 0, 0, 0.490353,-99) , 
4, 0.99966, 0, 0, 0.500971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481627,-99) , 
4, 0.997619, 0, 0, 0.500139,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.00832699);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46507,-99) , 
8, 17.1551, 1, 0, 0.499823,-99) , 
NN(
0, 
0, 
-1, 4.2051, 0, -1, 0.480386,-99) , 
5, 0.0237973, 1, 0, 0.498628,-99) , 
7, -2.14286, 1, 0, 0.499528,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0219637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.24922, 0, 1, 0.513216,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476915,-99) , 
9, 12.9866, 0, 0, 0.492166,-99) , 
8, 12.5165, 1, 0, 0.505701,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491141,-99) , 
9, -0.844199, 0, 0, 0.52643,-99) , 
NN(
0, 
0, 
-1, -0.178133, 0, -1, 0.492919,-99) , 
8, -2.36604, 1, 0, 0.496471,-99) , 
8, 3.67998, 0, 0, 0.498315,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.00701805);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521131,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499382,-99) , 
2, 0.0712418, 0, 0, 0.501098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473402,-99) , 
9, -1.07965, 0, 0, 0.500213,-99) , 
7, -2.14285, 1, 0, 0.500919,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.0109539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521631,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497182,-99) , 
3, 0.561022, 1, 0, 0.498613,-99) , 
3, 9.11584, 0, 0, 0.499661,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462386,-99) , 
0, 0.496185, 0, 0, 0.485026,-99) , 
4, 0.998572, 0, 0, 0.498611,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.00928671);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474914,-99) , 
1, -0.0261818, 0, 0, 0.502298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483682,-99) , 
1, 0.0236794, 1, 0, 0.501723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474182,-99) , 
2, 0.357058, 1, 0, 0.500987,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0311606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490162,-99) , 
8, -0.481909, 1, 0, 0.503312,-99) , 
9, 8.04958, 0, 0, 0.504295,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488414,-99) , 
9, 6.06592, 1, 0, 0.50811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442987,-99) , 
9, 1.17535, 0, 0, 0.497866,-99) , 
7, 0.428555, 1, 0, 0.502152,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.00818741);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499159,-99) , 
9, 7.84639, 0, 0, 0.500652,-99) , 
NN(
0, 
0, 
-1, 0.498081, 1, -1, 0.481524,-99) , 
8, 13.6783, 1, 0, 0.499375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468955,-99) , 
4, 0.996191, 0, 0, 0.498562,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0215512);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.939316, 0, 1, 0.558708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482232,-99) , 
6, -949.96, 1, 0, 0.524432,-99) , 
NN(
NN(
0, 
0, 
-1, -1.57142, 1, 1, 0.50404,-99) , 
NN(
0, 
0, 
-1, 0.512499, 1, -1, 0.485823,-99) , 
9, 1.21703, 0, 0, 0.498332,-99) , 
8, -2.17348, 1, 0, 0.501133,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0165373);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.20409, 1, 1, 0.504671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487185,-99) , 
4, 0.998572, 0, 0, 0.503469,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484337,-99) , 
9, 5.99848, 1, 0, 0.501163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448393,-99) , 
9, 1.09667, 0, 0, 0.493759,-99) , 
7, 0.428542, 1, 0, 0.500235,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0090432);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496723,-99) , 
9, 0.316986, 0, 0, 0.513193,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491576,-99) , 
9, 4.33593, 1, 0, 0.499232,-99) , 
7, -1.85713, 1, 0, 0.500044,-99) , 
NN(
0, 
0, 
-1, 1.90998, 0, -1, 0.481639,-99) , 
0, 0.504757, 1, 0, 0.498999,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.0160315);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475259,-99) , 
4, 0.999909, 0, 0, 0.510974,-99) , 
NN(
0, 
0, 
-1, -0.411339, 0, -1, 0.496001,-99) , 
7, -1.28573, 1, 0, 0.498108,-99) , 
NN(
0, 
0, 
-1, 0.996168, 0, -1, 0.475874,-99) , 
4, 0.998095, 0, 0, 0.496955,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.0172302);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499423,-99) , 
2, 0.138299, 0, 0, 0.523723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480447,-99) , 
2, 0.207614, 1, 0, 0.490102,-99) , 
3, 4.87847, 1, 0, 0.511381,-99) , 
NN(
NN(
0, 
0, 
-1, -0.47923, 1, 1, 0.513483,-99) , 
NN(
0, 
0, 
-1, -0.518331, 0, -1, 0.494446,-99) , 
7, -1.57144, 1, 0, 0.496194,-99) , 
2, 0.0715906, 0, 0, 0.49896,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0214716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496541,-99) , 
8, -0.47923, 1, 0, 0.518709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488316,-99) , 
6, -949.024, 1, 0, 0.499269,-99) , 
7, -1.28572, 1, 0, 0.502031,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.479035,-99) , 
4, 0.998571, 0, 0, 0.500392,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0194833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494949,-99) , 
4, 0.999524, 1, 0, 0.500233,-99) , 
7, -1.28503, 1, 0, 0.507704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468373,-99) , 
7, 1.91153, 1, 0, 0.500651,-99) , 
NN(
0, 
0, 
-1, -2.18367, 0, -1, 0.468996,-99) , 
7, -1.57143, 0, 0, 0.497172,-99) , 
6, -948.526, 0, 0, 0.500912,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0164266);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497919,-99) , 
7, -0.99927, 1, 0, 0.505878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494885,-99) , 
5, 0.0237973, 0, 0, 0.497143,-99) , 
6, -948.526, 0, 0, 0.500234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47255,-99) , 
2, -0.357162, 0, 0, 0.499515,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0158936);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.564328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497767,-99) , 
4, 0.999524, 1, 0, 0.503025,-99) , 
7, -1.28522, 1, 0, 0.509045,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498315,-99) , 
5, 0.0238027, 0, 0, 0.499665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459442,-99) , 
7, -1.85709, 0, 0, 0.496824,-99) , 
6, -948.526, 0, 0, 0.501171,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.035284);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.5444, 1, 1, 0.533859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498967,-99) , 
7, 1.28549, 0, 0, 0.504137,-99) , 
9, 4.10165, 1, 0, 0.511398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494615,-99) , 
9, -0.088701, 0, 0, 0.516483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481651,-99) , 
6, -948.705, 0, 0, 0.493031,-99) , 
8, -1.62468, 1, 0, 0.499283,-99) , 
8, 1.7218, 0, 0, 0.502877,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0111062);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0201687, 1, 1, 0.504634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481173,-99) , 
2, 0.350351, 1, 0, 0.503961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475285,-99) , 
2, -0.357016, 0, 0, 0.503215,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.015462);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.10265, 0, 1, 0.506824,-99) , 
NN(
0, 
0, 
-1, 0.999556, 1, -1, 0.492383,-99) , 
4, 0.99966, 0, 0, 0.50498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461688,-99) , 
0, 0.495233, 0, 0, 0.491293,-99) , 
4, 0.998571, 0, 0, 0.503992,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0220606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.20378, 1, 1, 0.51123,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464755,-99) , 
7, -1.69381, 0, 0, 0.500749,-99) , 
6, -1.26137, 0, 0, 0.503975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497624,-99) , 
6, -948.526, 0, 0, 0.503272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446944,-99) , 
9, 1.03554, 0, 0, 0.496002,-99) , 
7, 0.428593, 1, 0, 0.501324,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.0145059);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.143238, 0, 1, 0.522733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497477,-99) , 
2, 0.0307516, 0, 0, 0.502209,-99) , 
2, -0.213888, 1, 0, 0.503392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480846,-99) , 
3, 9.78684, 1, 0, 0.502578,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.0277667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.591593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455907,-99) , 
8, -2.67355, 1, 0, 0.494117,-99) , 
9, -0.237119, 0, 0, 0.517887,-99) , 
NN(
NN(
0, 
0, 
-1, -0.711232, 1, 1, 0.509514,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.492775,-99) , 
6, -1.58995, 0, 0, 0.498086,-99) , 
8, -1.92356, 1, 0, 0.500884,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0143306);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524317,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485385,-99) , 
7, 1.2857, 1, 0, 0.504135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475222,-99) , 
9, -0.0467872, 0, 0, 0.496118,-99) , 
6, -12.1436, 1, 0, 0.501233,-99) , 
7, -2.14286, 1, 0, 0.502018,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0184716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496177,-99) , 
8, -0.710033, 1, 0, 0.512715,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492776,-99) , 
6, -949.159, 1, 0, 0.501431,-99) , 
7, -1.57143, 1, 0, 0.502466,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493799,-99) , 
4, 0.999955, 0, 0, 0.506577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449173,-99) , 
4, 0.999524, 0, 0, 0.48967,-99) , 
0, 0.492376, 0, 0, 0.501228,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.00989233);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.520462,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498735,-99) , 
8, 2.54474, 0, 0, 0.501435,-99) , 
2, -0.21398, 1, 0, 0.502477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479555,-99) , 
4, 0.997619, 0, 0, 0.501509,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0133347);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.863, 1, 1, 0.523005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496603,-99) , 
7, -2.25172, 0, 0, 0.515446,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473194,-99) , 
8, 11.8576, 1, 0, 0.50123,-99) , 
NN(
0, 
0, 
-1, 3.65499, 0, -1, 0.481047,-99) , 
5, 0.0238027, 1, 0, 0.499962,-99) , 
7, -1.57144, 1, 0, 0.50138,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0165766);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497947,-99) , 
6, -1.26137, 0, 0, 0.505095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458291,-99) , 
9, 0.504059, 0, 0, 0.49746,-99) , 
7, -0.142859, 1, 0, 0.501012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498914,-99) , 
4, 0.999955, 0, 0, 0.506694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444496,-99) , 
4, 0.999524, 0, 0, 0.488545,-99) , 
0, 0.492376, 0, 0, 0.499804,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0118324);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.25172, 0, 1, 0.517752,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468006,-99) , 
5, 0.0238027, 1, 0, 0.500104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472582,-99) , 
8, 14.9514, 1, 0, 0.49843,-99) , 
7, -1.57143, 1, 0, 0.500204,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0107554);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495683,-99) , 
3, 1.51371, 1, 0, 0.498456,-99) , 
4, 0.996667, 1, 0, 0.499283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477722,-99) , 
3, 9.79955, 1, 0, 0.498503,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0243536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.2851, 0, 1, 0.51535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481078,-99) , 
8, 20.5118, 0, 0, 0.493645,-99) , 
8, 12.5167, 1, 0, 0.50756,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.581503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488877,-99) , 
9, -0.324264, 0, 0, 0.517178,-99) , 
NN(
0, 
0, 
-1, 0.857493, 0, -1, 0.493067,-99) , 
8, -1.90096, 1, 0, 0.497412,-99) , 
8, 3.67998, 0, 0, 0.499433,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0132047);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.704233, 1, 1, 0.52383,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0238014, 0, 1, 0.502441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489668,-99) , 
7, -0.932014, 1, 0, 0.493202,-99) , 
6, -12.1436, 1, 0, 0.499077,-99) , 
7, -1.85715, 1, 0, 0.500517,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0164588);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480682,-99) , 
0, 0.501899, 1, 0, 0.511262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495634,-99) , 
2, -0.215408, 1, 0, 0.497453,-99) , 
3, 1.04295, 1, 0, 0.500393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483551,-99) , 
3, 9.79006, 1, 0, 0.499784,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0155472);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553946,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49296,-99) , 
9, 0.617069, 0, 0, 0.501637,-99) , 
8, -2.95782, 1, 0, 0.507963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472538,-99) , 
4, 0.999252, 0, 0, 0.499418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465355,-99) , 
4, 0.998572, 0, 0, 0.497731,-99) , 
8, -1.0324, 1, 0, 0.500704,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.012818);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531124,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493246,-99) , 
9, 4.40287, 1, 0, 0.501775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472596,-99) , 
9, -1.0097, 0, 0, 0.500717,-99) , 
7, -2.14286, 1, 0, 0.501751,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0242254);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460261,-99) , 
7, -0.380164, 1, 0, 0.496335,-99) , 
9, 0.464875, 0, 0, 0.505875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499003,-99) , 
4, 0.999524, 1, 0, 0.503079,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.491986,-99) , 
6, -949.024, 0, 0, 0.495697,-99) , 
8, -1.20333, 1, 0, 0.498332,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0104566);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23811, 0, 1, 0.522082,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475126,-99) , 
4, 0.996667, 0, 0, 0.501805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47837,-99) , 
9, -0.741647, 0, 0, 0.500629,-99) , 
7, -1.85713, 1, 0, 0.501891,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0120499);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.336767, 0, 1, 0.518985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49598,-99) , 
2, -0.0305194, 1, 0, 0.498958,-99) , 
2, 0.214337, 0, 0, 0.500142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484108,-99) , 
3, 9.42577, 1, 0, 0.49949,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0118175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.505281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486965,-99) , 
0, 0.505301, 1, 0, 0.504423,-99) , 
NN(
0, 
0, 
-1, 1.35919, 0, -1, 0.490408,-99) , 
0, 0.491424, 0, 0, 0.503484,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.0197314);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494129,-99) , 
8, 13.9607, 1, 0, 0.512312,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475937,-99) , 
9, -1.0475, 0, 0, 0.526785,-99) , 
NN(
0, 
0, 
-1, 0.0237973, 1, -1, 0.495166,-99) , 
8, -2.41188, 1, 0, 0.497947,-99) , 
9, 8.06315, 0, 0, 0.499286,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0184755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497301,-99) , 
8, -2.43664, 1, 0, 0.500844,-99) , 
8, 1.57841, 0, 0, 0.503634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48438,-99) , 
9, 7.93694, 0, 0, 0.492152,-99) , 
7, 1.57256, 0, 0, 0.495526,-99) , 
9, 3.57208, 1, 0, 0.501533,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0130691);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.57423, 1, 1, 0.505736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482095,-99) , 
8, 18.501, 1, 0, 0.504885,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481426,-99) , 
1, 0.0242548, 1, 0, 0.504203,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.0136844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485214,-99) , 
4, 0.999932, 0, 0, 0.526118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46573,-99) , 
9, -0.697638, 0, 0, 0.500319,-99) , 
7, -1.57142, 1, 0, 0.502727,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.485669,-99) , 
4, 0.998572, 0, 0, 0.501499,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.010411);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497827,-99) , 
3, 1.87956, 1, 0, 0.501722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484048,-99) , 
3, 9.36329, 1, 0, 0.50098,-99) , 
7, -2.14286, 1, 0, 0.501676,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.0160363);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499876,-99) , 
2, 0.138552, 0, 0, 0.518507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484598,-99) , 
2, 0.207243, 1, 0, 0.492126,-99) , 
3, 5.04221, 1, 0, 0.509285,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496399,-99) , 
7, -1.57143, 1, 0, 0.498715,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.477354,-99) , 
4, 0.999048, 0, 0, 0.497187,-99) , 
2, 0.0712133, 0, 0, 0.499379,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.0107211);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.503335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45938,-99) , 
7, -0.714269, 0, 0, 0.490569,-99) , 
4, 0.999728, 0, 0, 0.500991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48267,-99) , 
4, 0.997143, 0, 0, 0.500336,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0105943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499921,-99) , 
5, 0.0113343, 0, 0, 0.503158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475614,-99) , 
8, 11.1926, 1, 0, 0.501368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473982,-99) , 
7, -0.143505, 1, 0, 0.48637,-99) , 
5, 0.0238027, 1, 0, 0.500439,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.00816531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.422967, 1, 1, 0.519927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498888,-99) , 
4, 0.998572, 1, 0, 0.500171,-99) , 
3, 0.543252, 1, 0, 0.501335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479424,-99) , 
3, 8.96333, 1, 0, 0.500315,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0144285);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495481,-99) , 
5, 0.00368107, 0, 0, 0.502728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473448,-99) , 
1, -0.0257701, 0, 0, 0.501912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483317,-99) , 
1, 0.0240735, 1, 0, 0.501359,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0193634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.47938, 0, 1, 0.508969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476617,-99) , 
3, 4.53941, 1, 0, 0.496009,-99) , 
4, 0.999955, 0, 0, 0.50365,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51894,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.476165,-99) , 
6, -949.113, 0, 0, 0.492516,-99) , 
4, 0.999048, 0, 0, 0.502518,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0234899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49004,-99) , 
9, -0.89775, 0, 0, 0.526166,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493089,-99) , 
6, -948.526, 0, 0, 0.498812,-99) , 
8, -2.39512, 1, 0, 0.50113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514048,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447906,-99) , 
8, 4.89854, 0, 0, 0.481521,-99) , 
5, 0.0237915, 1, 0, 0.499942,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.022257);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475935,-99) , 
9, -1.13407, 0, 0, 0.526989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461235,-99) , 
9, -0.323103, 0, 0, 0.502182,-99) , 
8, -2.54892, 1, 0, 0.504389,-99) , 
NN(
NN(
0, 
0, 
-1, 12.9253, 0, 1, 0.508651,-99) , 
NN(
0, 
0, 
-1, 2.91894, 0, -1, 0.489194,-99) , 
9, 9.39181, 0, 0, 0.494574,-99) , 
9, 3.57208, 1, 0, 0.501872,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0100709);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537611,-99) , 
NN(
0, 
0, 
-1, -0.580807, 0, -1, 0.498039,-99) , 
8, -2.74288, 1, 0, 0.500254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468533,-99) , 
9, 11.5999, 0, 0, 0.487845,-99) , 
8, 10.5093, 1, 0, 0.499189,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0126258);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524087,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489332,-99) , 
3, 4.48772, 1, 0, 0.510099,-99) , 
NN(
0, 
0, 
-1, -0.934252, 0, -1, 0.497202,-99) , 
2, -0.0714607, 1, 0, 0.49951,-99) , 
7, -2.14286, 1, 0, 0.500341,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0141659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.83429, 1, 1, 0.50914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461035,-99) , 
4, 0.999048, 0, 0, 0.498747,-99) , 
8, -0.395026, 1, 0, 0.502996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504357,-99) , 
NN(
0, 
0, 
-1, 2.92599, 0, -1, 0.478742,-99) , 
7, -0.143796, 1, 0, 0.48961,-99) , 
6, 0.525285, 1, 0, 0.501224,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0188846);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496327,-99) , 
8, -1.66992, 1, 0, 0.501096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426295,-99) , 
9, 1.32856, 0, 0, 0.490924,-99) , 
7, 0.70064, 1, 0, 0.498905,-99) , 
7, 1.85709, 0, 0, 0.499768,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0172718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.13011, 0, 1, 0.508304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442604,-99) , 
9, 1.33864, 0, 0, 0.470824,-99) , 
7, 0.713632, 1, 0, 0.502748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498258,-99) , 
9, 9.50455, 0, 0, 0.499987,-99) , 
NN(
0, 
0, 
-1, 2.0425, 0, -1, 0.484225,-99) , 
7, -0.714295, 0, 0, 0.496652,-99) , 
8, -0.395026, 1, 0, 0.49917,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0160273);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498469,-99) , 
0, 0.498093, 0, 0, 0.502408,-99) , 
9, 0.520902, 0, 0, 0.514621,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478872,-99) , 
9, -0.43053, 0, 0, 0.502812,-99) , 
NN(
0, 
0, 
-1, 12.4289, 0, -1, 0.480481,-99) , 
8, 11.3354, 1, 0, 0.500934,-99) , 
7, -1.57143, 1, 0, 0.502186,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.00937494);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487922,-99) , 
4, 0.999909, 0, 0, 0.510837,-99) , 
NN(
0, 
0, 
-1, -0.513832, 0, -1, 0.498305,-99) , 
7, -1.2857, 1, 0, 0.500076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483615,-99) , 
4, 0.998095, 0, 0, 0.499226,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.0179352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428595, 1, 1, 0.513591,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469417,-99) , 
7, -0.142897, 0, 0, 0.493908,-99) , 
6, -43.22, 1, 0, 0.506016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496986,-99) , 
8, 1.15481, 0, 0, 0.500128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457668,-99) , 
9, 3.30011, 1, 0, 0.498251,-99) , 
8, 2.32414, 0, 0, 0.500227,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0140118);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.02141, 1, 1, 0.505406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474225,-99) , 
5, 0.0238027, 1, 0, 0.504003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480312,-99) , 
9, 13.0161, 0, 0, 0.492088,-99) , 
8, 10.9882, 1, 0, 0.50302,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0130716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444013,-99) , 
9, -0.663798, 0, 0, 0.499727,-99) , 
8, -2.96441, 1, 0, 0.50154,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477289,-99) , 
9, 11.3371, 0, 0, 0.490476,-99) , 
8, 10.3051, 1, 0, 0.500569,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0194859);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498386,-99) , 
8, -1.20736, 1, 0, 0.50091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487869,-99) , 
8, 13.815, 1, 0, 0.499908,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.567088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487842,-99) , 
9, -0.785184, 0, 0, 0.518412,-99) , 
NN(
0, 
0, 
-1, -0.669021, 1, -1, 0.462014,-99) , 
8, -2.29908, 1, 0, 0.492093,-99) , 
9, 0.0998317, 0, 0, 0.498564,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0160232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.503704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480344,-99) , 
4, 0.997619, 0, 0, 0.502942,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454966,-99) , 
6, -951.273, 0, 0, 0.472648,-99) , 
8, -2.59221, 1, 0, 0.490755,-99) , 
9, 0.0997583, 0, 0, 0.500851,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0111829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521346,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497321,-99) , 
3, 0.540379, 1, 0, 0.498706,-99) , 
3, 8.97397, 0, 0, 0.499772,-99) , 
NN(
0, 
0, 
-1, 0.142843, 0, -1, 0.481191,-99) , 
4, 0.998571, 0, 0, 0.498456,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0156614);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495729,-99) , 
3, 5.1762, 1, 0, 0.515321,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495092,-99) , 
3, 4.56785, 1, 0, 0.50723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495588,-99) , 
7, -1.85715, 1, 0, 0.497284,-99) , 
2, -0.0306714, 1, 0, 0.500168,-99) , 
2, 0.214205, 0, 0, 0.501175,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0180116);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486054,-99) , 
8, 13.8663, 1, 0, 0.505119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443266,-99) , 
7, 0.252769, 1, 0, 0.493063,-99) , 
9, 0.821127, 0, 0, 0.501587,-99) , 
7, -2.14281, 1, 0, 0.502385,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.0194406);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.28233, 1, 1, 0.519363,-99) , 
NN(
0, 
0, 
-1, 0.207388, 1, -1, 0.483425,-99) , 
3, 5.04221, 1, 0, 0.506706,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489364,-99) , 
8, 14.6677, 1, 0, 0.510009,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495042,-99) , 
8, -2.612, 1, 0, 0.496886,-99) , 
9, 7.67809, 0, 0, 0.498227,-99) , 
2, 0.0713448, 0, 0, 0.499772,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0233383);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.04069, 1, 1, 0.524634,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491605,-99) , 
8, -2.57805, 1, 0, 0.499117,-99) , 
6, -1.26137, 0, 0, 0.506229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495067,-99) , 
6, -948.705, 1, 0, 0.502035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454034,-99) , 
9, 0.136328, 0, 0, 0.498547,-99) , 
7, -0.428544, 1, 0, 0.501359,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.0125529);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57139, 1, 1, 0.504336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434471,-99) , 
7, -1, 0, 0, 0.489335,-99) , 
4, 0.999637, 0, 0, 0.501925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474251,-99) , 
4, 0.996191, 0, 0, 0.501195,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0111391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.206006, 0, 1, 0.518095,-99) , 
NN(
0, 
0, 
-1, 1.97047, 1, -1, 0.488822,-99) , 
3, 5.03307, 1, 0, 0.507762,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00343329, 0, 1, 0.514582,-99) , 
NN(
0, 
0, 
-1, -0.580026, 0, -1, 0.497798,-99) , 
7, -1.57136, 1, 0, 0.499335,-99) , 
2, 0.0713631, 0, 0, 0.500863,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0161545);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57144, 1, 1, 0.504198,-99) , 
NN(
0, 
0, 
-1, 0.999531, 1, -1, 0.483068,-99) , 
4, 0.999683, 0, 0, 0.501952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480208,-99) , 
7, -0.428865, 0, 0, 0.507867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449746,-99) , 
8, 0.146163, 1, 0, 0.491905,-99) , 
4, 0.999048, 0, 0, 0.50093,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0274944);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.575198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48035,-99) , 
9, -0.672377, 0, 0, 0.514993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488707,-99) , 
6, -951.236, 0, 0, 0.497128,-99) , 
8, -1.96752, 1, 0, 0.50122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488981,-99) , 
9, 5.58896, 1, 0, 0.50003,-99) , 
NN(
0, 
0, 
-1, -1.82983, 1, -1, 0.462342,-99) , 
9, 0.618904, 0, 0, 0.495453,-99) , 
7, -0.14286, 1, 0, 0.498144,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0154998);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.518602,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495994,-99) , 
8, -1.80291, 1, 0, 0.499026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46564,-99) , 
5, 0.0237915, 1, 0, 0.49744,-99) , 
9, 9.98416, 0, 0, 0.498775,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0205521);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490249,-99) , 
4, 0.999524, 0, 0, 0.503194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462779,-99) , 
9, 1.44812, 0, 0, 0.494824,-99) , 
7, 0.428573, 1, 0, 0.499944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52428,-99) , 
NN(
0, 
0, 
-1, -0.602084, 1, -1, 0.471472,-99) , 
8, -2.85503, 1, 0, 0.487791,-99) , 
9, -0.129857, 0, 0, 0.498302,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0222609);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477037,-99) , 
9, -0.993801, 0, 0, 0.514394,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490455,-99) , 
9, 5.38871, 0, 0, 0.494569,-99) , 
8, -1.20333, 1, 0, 0.502397,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491724,-99) , 
7, 0.714281, 1, 0, 0.497833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458023,-99) , 
9, 0.130838, 0, 0, 0.494949,-99) , 
7, -0.428577, 1, 0, 0.497674,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.0144548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496788,-99) , 
8, -2.32831, 1, 0, 0.499471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467897,-99) , 
9, -1.25067, 0, 0, 0.498483,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.479614,-99) , 
8, 13.5134, 1, 0, 0.497247,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.017597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.53058, 1, 1, 0.512168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459398,-99) , 
7, -1.04084, 0, 0, 0.48434,-99) , 
4, 0.999524, 0, 0, 0.508057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488379,-99) , 
8, 11.5831, 1, 0, 0.500769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446362,-99) , 
6, -949.159, 1, 0, 0.475584,-99) , 
9, 0.400268, 0, 0, 0.497931,-99) , 
7, -0.428593, 1, 0, 0.50164,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0206493);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492592,-99) , 
8, -1.35182, 1, 0, 0.50067,-99) , 
9, 7.03541, 0, 0, 0.502582,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494929,-99) , 
9, 10.559, 0, 0, 0.497332,-99) , 
NN(
0, 
0, 
-1, 0.197022, 1, -1, 0.468507,-99) , 
9, 0.618904, 0, 0, 0.493844,-99) , 
7, -0.142878, 1, 0, 0.497903,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0208745);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.574606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49885,-99) , 
8, -1.66633, 1, 0, 0.504469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493189,-99) , 
7, 1.57135, 0, 0, 0.497164,-99) , 
9, 3.15661, 1, 0, 0.501915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45248,-99) , 
9, -0.36313, 0, 0, 0.477634,-99) , 
8, -2.78041, 1, 0, 0.491237,-99) , 
9, 0.00331226, 0, 0, 0.500243,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0178984);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13406, 1, 1, 0.506324,-99) , 
NN(
0, 
0, 
-1, 20.6697, 0, -1, 0.490183,-99) , 
8, 13.4018, 1, 0, 0.505016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517442,-99) , 
NN(
0, 
0, 
-1, -0.372069, 1, -1, 0.480992,-99) , 
8, -2.61471, 1, 0, 0.49236,-99) , 
9, 0.239737, 0, 0, 0.502528,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.00757309);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517701,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525841,-99) , 
NN(
0, 
0, 
-1, -0.624997, 0, -1, 0.497894,-99) , 
8, -2.91855, 1, 0, 0.49901,-99) , 
9, 11.2502, 0, 0, 0.499945,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0156464);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471564,-99) , 
9, -1.16009, 0, 0, 0.50241,-99) , 
9, 6.13364, 0, 0, 0.504882,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487736,-99) , 
9, 6.46804, 1, 0, 0.499446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468616,-99) , 
9, 0.485763, 0, 0, 0.496408,-99) , 
7, -0.142887, 1, 0, 0.500363,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0151717);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.51554,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497829,-99) , 
8, -1.8051, 1, 0, 0.501892,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500633,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451731,-99) , 
7, -0.666832, 1, 0, 0.486992,-99) , 
9, -0.218027, 0, 0, 0.499912,-99) , 
9, 10.0155, 0, 0, 0.500897,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0245259);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.10081, 1, 1, 0.506014,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480408,-99) , 
9, 2.03089, 0, 0, 0.497953,-99) , 
7, 0.714275, 1, 0, 0.503502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479917,-99) , 
8, -1.92846, 1, 0, 0.508019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510691,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461024,-99) , 
8, -2.84345, 1, 0, 0.481203,-99) , 
9, -0.370235, 0, 0, 0.495215,-99) , 
9, 0.361928, 0, 0, 0.501704,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0144914);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498262,-99) , 
7, -0.428552, 1, 0, 0.509903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462954,-99) , 
7, -0.142901, 0, 0, 0.492606,-99) , 
6, -951.244, 1, 0, 0.503279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461535,-99) , 
9, -1.0502, 0, 0, 0.497986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457652,-99) , 
9, 3.12079, 1, 0, 0.495861,-99) , 
8, 2.10924, 0, 0, 0.497837,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0117096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498623,-99) , 
9, 7.76076, 0, 0, 0.500409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482636,-99) , 
8, 14.313, 1, 0, 0.499364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442164,-99) , 
9, 2.19856, 0, 0, 0.468417,-99) , 
8, 1.04642, 0, 0, 0.488304,-99) , 
7, 1.28569, 1, 0, 0.498092,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0201685);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 0, 1, 0.509568,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45824,-99) , 
7, -1.04085, 0, 0, 0.488361,-99) , 
4, 0.999524, 0, 0, 0.506414,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48146,-99) , 
0, 0.494281, 0, 0, 0.513975,-99) , 
NN(
0, 
0, 
-1, 0.368702, 0, -1, 0.494506,-99) , 
4, 0.999524, 1, 0, 0.497748,-99) , 
7, -0.428588, 1, 0, 0.500933,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0182713);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499652,-99) , 
8, -1.56497, 1, 0, 0.504775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484614,-99) , 
8, 5.29533, 0, 0, 0.495612,-99) , 
9, 3.46266, 1, 0, 0.501818,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533751,-99) , 
NN(
0, 
0, 
-1, -0.699531, 0, -1, 0.479514,-99) , 
8, -2.99331, 1, 0, 0.490194,-99) , 
9, 0.0998317, 0, 0, 0.499824,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.00725347);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499603,-99) , 
5, 0.0124173, 0, 0, 0.50179,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47703,-99) , 
1, -0.0260821, 0, 0, 0.501109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477825,-99) , 
1, 0.023789, 1, 0, 0.500407,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0128279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0102008, 0, 1, 0.504656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473458,-99) , 
8, 13.3578, 1, 0, 0.50305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464486,-99) , 
8, 3.03207, 0, 0, 0.486361,-99) , 
5, 0.0238027, 1, 0, 0.502042,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.00948204);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.996168, 0, 1, 0.518825,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497279,-99) , 
7, -1.85715, 1, 0, 0.498344,-99) , 
4, 0.998095, 1, 0, 0.499426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482855,-99) , 
3, 9.80004, 1, 0, 0.498826,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.0211157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.74382, 1, 1, 0.50798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467155,-99) , 
4, 0.999524, 0, 0, 0.501646,-99) , 
9, 3.1357, 1, 0, 0.50576,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470774,-99) , 
9, -1.16575, 0, 0, 0.501498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452385,-99) , 
7, -0.47602, 1, 0, 0.489582,-99) , 
9, -0.00766644, 0, 0, 0.503262,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0217625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467353,-99) , 
7, -1.97955, 0, 0, 0.503699,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475166,-99) , 
6, -43.22, 1, 0, 0.493043,-99) , 
9, 2.16808, 1, 0, 0.499531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511794,-99) , 
NN(
0, 
0, 
-1, 2.02238, 0, -1, 0.465381,-99) , 
8, 0.965524, 0, 0, 0.488923,-99) , 
7, 1.28566, 1, 0, 0.49831,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0104823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499579,-99) , 
9, 0.254518, 0, 0, 0.509279,-99) , 
NN(
0, 
0, 
-1, -0.518331, 0, -1, 0.495208,-99) , 
7, -1.5714, 1, 0, 0.496496,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0183011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.56886, 0, 1, 0.50309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481617,-99) , 
8, 16.0234, 1, 0, 0.501746,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471364,-99) , 
9, -0.962265, 0, 0, 0.509969,-99) , 
NN(
0, 
0, 
-1, -0.698434, 1, -1, 0.472839,-99) , 
8, -2.41315, 1, 0, 0.48975,-99) , 
9, 0.0998317, 0, 0, 0.499684,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0160769);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480031,-99) , 
8, 17.7205, 1, 0, 0.499373,-99) , 
7, 1.28569, 0, 0, 0.50298,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495211,-99) , 
8, 1.32861, 0, 0, 0.496915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459676,-99) , 
9, 3.12079, 1, 0, 0.494972,-99) , 
8, 2.10924, 0, 0, 0.497123,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0188416);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.513583,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.579422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487535,-99) , 
9, -0.21701, 0, 0, 0.513025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479092,-99) , 
9, 0.940322, 0, 0, 0.495326,-99) , 
8, -1.81608, 1, 0, 0.498296,-99) , 
9, 9.5102, 0, 0, 0.499349,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0149255);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467414,-99) , 
4, 0.999048, 0, 0, 0.500436,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492874,-99) , 
9, 10.0991, 0, 0, 0.494207,-99) , 
7, -0.428558, 1, 0, 0.49649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471957,-99) , 
0, 0.489519, 0, 0, 0.495872,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.0253164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447453,-99) , 
8, -2.91888, 1, 0, 0.480586,-99) , 
9, -0.706019, 0, 0, 0.514061,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494301,-99) , 
7, -0.99955, 1, 0, 0.502603,-99) , 
NN(
0, 
0, 
-1, -1.57144, 0, -1, 0.492386,-99) , 
6, -948.526, 0, 0, 0.495887,-99) , 
8, -2.17348, 1, 0, 0.497827,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0108491);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492045,-99) , 
9, 4.34551, 1, 0, 0.50042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465884,-99) , 
9, -1.07662, 0, 0, 0.499299,-99) , 
7, -2.14285, 1, 0, 0.499983,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.00967178);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488666,-99) , 
3, 4.86888, 1, 0, 0.510957,-99) , 
NN(
NN(
0, 
0, 
-1, -0.986091, 1, 1, 0.515608,-99) , 
NN(
0, 
0, 
-1, -0.741647, 0, -1, 0.49711,-99) , 
7, -1.85711, 1, 0, 0.498177,-99) , 
2, -0.214339, 1, 0, 0.498995,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0131452);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.515884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481019,-99) , 
9, -0.595271, 0, 0, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473673,-99) , 
8, 8.01986, 1, 0, 0.500002,-99) , 
9, 9.88145, 0, 0, 0.501024,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0213964);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475613,-99) , 
7, -0.816733, 1, 0, 0.494401,-99) , 
9, 0.464875, 0, 0, 0.503497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486372,-99) , 
8, 12.6824, 1, 0, 0.500534,-99) , 
NN(
0, 
0, 
-1, 2.07864, 0, -1, 0.479041,-99) , 
7, -1.00002, 0, 0, 0.497259,-99) , 
8, -1.20333, 1, 0, 0.498877,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0165581);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513464,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.577852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495321,-99) , 
9, 0.200822, 0, 0, 0.509929,-99) , 
NN(
0, 
0, 
-1, 0.752533, 0, -1, 0.494635,-99) , 
8, -1.53883, 1, 0, 0.497868,-99) , 
9, 10.4576, 0, 0, 0.498774,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.02155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557165,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462977,-99) , 
7, -0.720328, 1, 0, 0.492556,-99) , 
9, -0.0446836, 0, 0, 0.508572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47121,-99) , 
9, 0.992968, 0, 0, 0.500238,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49272,-99) , 
7, -0.14287, 0, 0, 0.497195,-99) , 
8, -1.66992, 1, 0, 0.499213,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0232587);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.573284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498933,-99) , 
8, -1.89385, 1, 0, 0.50592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46352,-99) , 
8, -2.9337, 1, 0, 0.481474,-99) , 
9, -0.31122, 0, 0, 0.501173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490453,-99) , 
7, -1.14937, 1, 0, 0.492932,-99) , 
7, 1.8572, 0, 0, 0.49488,-99) , 
9, 2.16808, 1, 0, 0.498461,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.0255342);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487484,-99) , 
9, -0.586697, 0, 0, 0.508197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482838,-99) , 
6, -40.0028, 1, 0, 0.498736,-99) , 
9, 2.16808, 1, 0, 0.504498,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492934,-99) , 
7, 1.85702, 0, 0, 0.507594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46983,-99) , 
8, 0.461808, 0, 0, 0.492468,-99) , 
7, 1.28567, 1, 0, 0.503095,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0229431);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486595,-99) , 
9, -0.850076, 0, 0, 0.515113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491734,-99) , 
6, -949.113, 0, 0, 0.500309,-99) , 
8, -2.18242, 1, 0, 0.503141,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496568,-99) , 
9, 11.0532, 0, 0, 0.498453,-99) , 
NN(
0, 
0, 
-1, -948.705, 1, -1, 0.47299,-99) , 
9, 0.723177, 0, 0, 0.494895,-99) , 
7, -0.14287, 1, 0, 0.498746,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0176788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542674,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497864,-99) , 
8, -1.4111, 1, 0, 0.502596,-99) , 
8, 1.75261, 0, 0, 0.504635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496359,-99) , 
8, 18.2086, 1, 0, 0.507232,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443606,-99) , 
8, 2.85775, 0, 0, 0.491325,-99) , 
9, 9.15914, 0, 0, 0.49589,-99) , 
9, 3.52298, 1, 0, 0.502342,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0106395);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515204,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471545,-99) , 
5, 0.0237915, 1, 0, 0.501041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470131,-99) , 
8, 9.0067, 1, 0, 0.499588,-99) , 
9, 10.5443, 0, 0, 0.500467,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0165571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.58505, 1, 1, 0.511077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485319,-99) , 
4, 0.999524, 0, 0, 0.507276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504797,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493966,-99) , 
9, 3.59522, 1, 0, 0.501195,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453372,-99) , 
6, -950.041, 1, 0, 0.480083,-99) , 
9, 0.0917112, 0, 0, 0.499316,-99) , 
7, -0.714295, 1, 0, 0.50152,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.0124967);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -1.97962, 0, 1, 0.511276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493387,-99) , 
9, 4.55424, 1, 0, 0.501638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474785,-99) , 
9, -0.588283, 0, 0, 0.500156,-99) , 
7, -1.57144, 1, 0, 0.501172,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0154232);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525093,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490908,-99) , 
7, -0.700684, 0, 0, 0.500424,-99) , 
7, -1.85715, 1, 0, 0.501301,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463253,-99) , 
9, -1.04583, 0, 0, 0.49865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459125,-99) , 
7, -0.153048, 1, 0, 0.491743,-99) , 
9, 0.239737, 0, 0, 0.499445,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0197431);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.582344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45934,-99) , 
8, -2.91889, 1, 0, 0.49035,-99) , 
9, -0.527372, 0, 0, 0.516626,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478149,-99) , 
4, 0.998571, 0, 0, 0.500732,-99) , 
NN(
0, 
0, 
-1, 0.505442, 1, -1, 0.488284,-99) , 
9, 1.21703, 0, 0, 0.496848,-99) , 
8, -2.17348, 1, 0, 0.49896,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.00708131);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49714, 0, 1, 0.510902,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484344,-99) , 
8, 11.6322, 1, 0, 0.498685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466063,-99) , 
9, -0.71111, 0, 0, 0.49723,-99) , 
7, -1.57142, 1, 0, 0.498493,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.0279813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450842,-99) , 
7, 0.72551, 1, 0, 0.499069,-99) , 
9, 1.51201, 0, 0, 0.502986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496674,-99) , 
6, -948.526, 0, 0, 0.510477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483265,-99) , 
9, 8.15306, 0, 0, 0.487351,-99) , 
7, 0.999948, 0, 0, 0.492666,-99) , 
8, -0.167888, 1, 0, 0.497348,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0148442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541159,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496273,-99) , 
3, 9.11633, 0, 0, 0.498503,-99) , 
NN(
0, 
0, 
-1, 4.5428, 1, -1, 0.489971,-99) , 
4, 0.999864, 0, 0, 0.496178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475686,-99) , 
4, 0.997143, 0, 0, 0.495448,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.00885992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.32831, 1, 1, 0.502623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46312,-99) , 
9, -1.2467, 0, 0, 0.501387,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.485029,-99) , 
8, 13.5134, 1, 0, 0.50032,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0191107);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.563665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496197,-99) , 
9, 0.671284, 0, 0, 0.505781,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49463,-99) , 
9, 7.16105, 0, 0, 0.497134,-99) , 
8, -0.817496, 1, 0, 0.500499,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477505,-99) , 
7, 2.12923, 1, 0, 0.500856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449319,-99) , 
9, 1.31906, 0, 0, 0.493454,-99) , 
7, 0.714278, 1, 0, 0.49876,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0154656);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497081,-99) , 
8, -2.18459, 1, 0, 0.500096,-99) , 
NN(
0, 
0, 
-1, -1.12739, 0, -1, 0.479214,-99) , 
9, -0.734962, 0, 0, 0.49861,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468621,-99) , 
9, 12.4314, 0, 0, 0.486741,-99) , 
8, 11.1529, 1, 0, 0.497637,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0266081);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.568842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495131,-99) , 
8, -0.671353, 1, 0, 0.533359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46264,-99) , 
7, 0.392209, 1, 0, 0.50159,-99) , 
9, 1.0675, 0, 0, 0.507227,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510264,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489977,-99) , 
4, 0.999977, 0, 0, 0.500671,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.482551,-99) , 
4, 0.999524, 0, 0, 0.498608,-99) , 
8, -0.395026, 1, 0, 0.502153,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0122479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.138327, 0, 1, 0.514435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484101,-99) , 
0, 0.49809, 0, 0, 0.494228,-99) , 
3, 4.85092, 1, 0, 0.506863,-99) , 
NN(
NN(
0, 
0, 
-1, -0.405615, 1, 1, 0.511425,-99) , 
NN(
0, 
0, 
-1, -0.501513, 0, -1, 0.495901,-99) , 
7, -1.57144, 1, 0, 0.497319,-99) , 
2, 0.0712588, 0, 0, 0.499048,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.0226334);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487934,-99) , 
8, 13.8677, 1, 0, 0.505795,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481712,-99) , 
9, 1.6037, 0, 0, 0.496988,-99) , 
7, 0.428555, 1, 0, 0.502348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47004,-99) , 
9, -1.04947, 0, 0, 0.510132,-99) , 
NN(
0, 
0, 
-1, -0.683215, 1, -1, 0.470169,-99) , 
8, -2.49292, 1, 0, 0.488754,-99) , 
9, -0.0224326, 0, 0, 0.50029,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.00959522);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499999,-99) , 
2, -0.137549, 1, 0, 0.513447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490105,-99) , 
0, 0.499995, 0, 0, 0.495792,-99) , 
3, 4.65339, 1, 0, 0.506381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49203,-99) , 
6, -13.1156, 1, 0, 0.497174,-99) , 
7, -2.14285, 1, 0, 0.49786,-99) , 
2, -0.0715232, 1, 0, 0.499391,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0162982);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.721713, 0, 1, 0.518004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487337,-99) , 
3, 4.20761, 1, 0, 0.498629,-99) , 
9, 1.96628, 1, 0, 0.509268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494377,-99) , 
4, 0.999048, 1, 0, 0.495828,-99) , 
7, -2.14286, 1, 0, 0.496725,-99) , 
2, -0.0717246, 1, 0, 0.49897,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.0109362);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498088, 1, 1, 0.512943,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498228,-99) , 
8, -2.05266, 1, 0, 0.500861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474575,-99) , 
5, 0.0237915, 1, 0, 0.499616,-99) , 
9, 9.88145, 0, 0, 0.500485,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0156747);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474123,-99) , 
7, -1.00022, 0, 0, 0.513414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497649,-99) , 
7, -1.57144, 1, 0, 0.500153,-99) , 
4, 0.999524, 1, 0, 0.502268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479706,-99) , 
3, 9.42256, 1, 0, 0.501354,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0105823);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.217434, 1, 1, 0.523962,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490351,-99) , 
3, 4.63192, 1, 0, 0.499936,-99) , 
0, 0.500947, 0, 0, 0.507276,-99) , 
NN(
NN(
0, 
0, 
-1, -1.28558, 1, 1, 0.50182,-99) , 
NN(
0, 
0, 
-1, 0.861858, 1, -1, 0.4943,-99) , 
9, 1.72945, 0, 0, 0.498169,-99) , 
2, -0.0714997, 1, 0, 0.499804,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0126679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.32382, 1, 1, 0.515241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46075,-99) , 
9, 3.61808, 1, 0, 0.499218,-99) , 
8, 3.50556, 0, 0, 0.501314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472281,-99) , 
9, 11.5999, 0, 0, 0.487683,-99) , 
8, 10.5209, 1, 0, 0.500133,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.00740312);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.99217, 0, 1, 0.501975,-99) , 
NN(
0, 
0, 
-1, 4.54538, 1, -1, 0.493029,-99) , 
4, 0.999728, 0, 0, 0.500327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474621,-99) , 
4, 0.997143, 0, 0, 0.499405,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.00911776);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481421,-99) , 
7, -1.85714, 0, 0, 0.500889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478077,-99) , 
5, 0.0238027, 1, 0, 0.499719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48251,-99) , 
8, 18.6657, 1, 0, 0.499025,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0124515);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549279,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452214,-99) , 
7, -2.18369, 0, 0, 0.492072,-99) , 
6, -951.273, 0, 0, 0.505857,-99) , 
NN(
0, 
0, 
-1, -0.362, 0, -1, 0.49649,-99) , 
7, -1.28574, 1, 0, 0.497779,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0103731);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.502341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514529,-99) , 
NN(
0, 
0, 
-1, -0.258998, 0, -1, 0.485119,-99) , 
8, -2.62229, 1, 0, 0.492868,-99) , 
9, 0.423021, 0, 0, 0.500176,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0088655);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490471, 1, 1, 0.501931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465765,-99) , 
7, -0.625078, 1, 0, 0.491459,-99) , 
9, 0.0997583, 0, 0, 0.500191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477446,-99) , 
4, 0.996191, 0, 0, 0.499587,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0055621);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515919,-99) , 
NN(
0, 
0, 
-1, -1.09192, 0, -1, 0.497672,-99) , 
7, -2.14286, 1, 0, 0.498279,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0177878);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497384,-99) , 
9, 1.98444, 1, 0, 0.502749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479632,-99) , 
8, 1.12696, 0, 0, 0.492156,-99) , 
7, 1.28567, 1, 0, 0.501228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516008,-99) , 
NN(
0, 
0, 
-1, -0.362919, 0, -1, 0.481215,-99) , 
8, -2.63741, 1, 0, 0.491597,-99) , 
9, 0.239737, 0, 0, 0.499351,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0184693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466867,-99) , 
7, -0.758516, 1, 0, 0.492569,-99) , 
9, -0.0142362, 0, 0, 0.506563,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498992,-99) , 
7, -0.713696, 1, 0, 0.503035,-99) , 
NN(
0, 
0, 
-1, -1.57142, 0, -1, 0.494263,-99) , 
6, -949.024, 0, 0, 0.497216,-99) , 
8, -1.58036, 1, 0, 0.49902,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0164615);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499427,-99) , 
8, -1.38827, 1, 0, 0.503528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492963,-99) , 
8, 13.6579, 1, 0, 0.50274,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481579,-99) , 
8, -2.56245, 1, 0, 0.502622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468107,-99) , 
9, -1.10364, 0, 0, 0.493426,-99) , 
9, -0.0983186, 0, 0, 0.501433,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0145097);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478946,-99) , 
0, 0.493328, 0, 0, 0.50999,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497384,-99) , 
0, 0.494282, 1, 0, 0.500285,-99) , 
4, 0.999524, 1, 0, 0.501833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486738,-99) , 
3, 9.43327, 1, 0, 0.501223,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0139932);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.11584, 0, 1, 0.505909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466034,-99) , 
9, 3.53499, 1, 0, 0.497338,-99) , 
4, 0.999683, 0, 0, 0.504437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47616,-99) , 
4, 0.996667, 0, 0, 0.503573,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0103882);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496316,-99) , 
0, 0.499632, 1, 0, 0.515148,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499112,-99) , 
3, 4.24922, 0, 0, 0.50129,-99) , 
4, 0.998572, 1, 0, 0.502195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490119,-99) , 
8, 0.652007, 0, 0, 0.502561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465629,-99) , 
4, 0.999524, 0, 0, 0.491705,-99) , 
0, 0.492376, 0, 0, 0.501186,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0197365);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495495,-99) , 
7, 0.142895, 1, 0, 0.506059,-99) , 
9, 5.6877, 1, 0, 0.510126,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497942,-99) , 
8, -1.83857, 1, 0, 0.502366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46636,-99) , 
8, -2.84219, 1, 0, 0.48343,-99) , 
9, -0.302542, 0, 0, 0.499725,-99) , 
8, 3.80945, 0, 0, 0.501749,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.021215);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.00091, 0, 1, 0.508541,-99) , 
NN(
0, 
0, 
-1, 0.428199, 1, -1, 0.491631,-99) , 
4, 0.998572, 0, 0, 0.50751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471428,-99) , 
9, -1.22061, 0, 0, 0.505305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473846,-99) , 
7, -0.490137, 1, 0, 0.497562,-99) , 
9, -0.0224326, 0, 0, 0.505992,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0153371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.98115, 1, 1, 0.503383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483929,-99) , 
8, 20.8026, 0, 0, 0.492734,-99) , 
8, 13.5414, 1, 0, 0.502496,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486137,-99) , 
9, -0.370251, 0, 0, 0.50214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457784,-99) , 
7, -0.067917, 1, 0, 0.494729,-99) , 
9, 0.361928, 0, 0, 0.500816,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0195413);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459222,-99) , 
6, -12.1436, 1, 0, 0.487789,-99) , 
9, -0.310579, 0, 0, 0.511338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478893,-99) , 
3, 8.69982, 1, 0, 0.50198,-99) , 
NN(
0, 
0, 
-1, 0.991698, 1, -1, 0.492477,-99) , 
9, 1.58819, 0, 0, 0.498438,-99) , 
8, -1.92356, 1, 0, 0.500236,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0100191);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.514322,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482418,-99) , 
9, -0.934759, 0, 0, 0.501448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471307,-99) , 
8, 9.07331, 1, 0, 0.500255,-99) , 
9, 9.97149, 0, 0, 0.501158,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.010267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496186, 0, 1, 0.514291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508205,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496957,-99) , 
0, 0.494281, 1, 0, 0.498963,-99) , 
4, 0.998571, 1, 0, 0.500069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483579,-99) , 
3, 9.78684, 1, 0, 0.499472,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0142529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498217,-99) , 
9, 0.929504, 0, 0, 0.505328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483613,-99) , 
7, -0.714233, 0, 0, 0.49904,-99) , 
8, -0.167888, 1, 0, 0.501902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483128,-99) , 
0, 0.505709, 1, 0, 0.501264,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0118345);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.3285, 0, 1, 0.50253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477388,-99) , 
8, 18.3299, 1, 0, 0.501484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488079,-99) , 
7, 1.69385, 0, 0, 0.507065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463226,-99) , 
8, 0.445317, 0, 0, 0.489937,-99) , 
7, 1.2857, 1, 0, 0.500148,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0137602);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499969,-99) , 
9, 0.943811, 0, 0, 0.505927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465472,-99) , 
7, 0.997013, 1, 0, 0.502218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48549,-99) , 
7, -0.714246, 0, 0, 0.497724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469901,-99) , 
4, 0.999048, 0, 0, 0.495907,-99) , 
8, -0.395026, 1, 0, 0.498501,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0182016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458609,-99) , 
7, 0.125858, 1, 0, 0.4954,-99) , 
9, 0.800959, 0, 0, 0.503241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514803,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494299,-99) , 
0, 0.501899, 0, 0, 0.496053,-99) , 
0, 0.490471, 1, 0, 0.496873,-99) , 
8, -0.805258, 1, 0, 0.498974,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0124007);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478735,-99) , 
7, -1.57145, 0, 0, 0.499847,-99) , 
NN(
0, 
0, 
-1, 12.6986, 0, -1, 0.48479,-99) , 
8, 10.3051, 1, 0, 0.498492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506746,-99) , 
NN(
0, 
0, 
-1, -0.426213, 1, -1, 0.484205,-99) , 
9, 4.07141, 0, 0, 0.489839,-99) , 
6, 0.525285, 1, 0, 0.497348,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0127755);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504559,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.496498,-99) , 
6, -948.705, 0, 0, 0.499261,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514894,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508467,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467541,-99) , 
9, -0.323498, 0, 0, 0.480428,-99) , 
8, -2.82831, 1, 0, 0.491086,-99) , 
9, -0.0983186, 0, 0, 0.498112,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.00930985);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497124,-99) , 
2, 0.209948, 0, 0, 0.497898,-99) , 
4, 0.996667, 1, 0, 0.498873,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4834,-99) , 
3, 9.36896, 1, 0, 0.498242,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0135749);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498658,-99) , 
8, -0.619149, 1, 0, 0.516744,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491137,-99) , 
0, 0.494281, 0, 0, 0.512799,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501874,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490235,-99) , 
6, -40.0028, 1, 0, 0.497676,-99) , 
4, 0.999048, 1, 0, 0.499265,-99) , 
7, -1.85714, 1, 0, 0.500263,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.00958734);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.5307, 1, 1, 0.517421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497264,-99) , 
4, 0.999048, 1, 0, 0.498466,-99) , 
2, 0.213696, 0, 0, 0.499605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482327,-99) , 
3, 9.78684, 1, 0, 0.498984,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0215847);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494886,-99) , 
9, 0.79069, 0, 0, 0.504039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465834,-99) , 
7, 1.2807, 1, 0, 0.501883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488356,-99) , 
4, 0.999977, 0, 0, 0.498426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478468,-99) , 
4, 0.999524, 0, 0, 0.496338,-99) , 
9, 2.16808, 1, 0, 0.499493,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.00577317);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999681, 0, 1, 0.514797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499053,-99) , 
3, 9.10265, 0, 0, 0.499936,-99) , 
2, -0.214426, 1, 0, 0.500788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485005,-99) , 
4, 0.996667, 0, 0, 0.500306,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0101707);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478138,-99) , 
9, -0.934282, 0, 0, 0.502075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489077,-99) , 
8, 18.501, 1, 0, 0.50154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48141,-99) , 
0, 0.505709, 1, 0, 0.500873,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.0181093);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534104,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502072,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467308,-99) , 
9, 2.75004, 1, 0, 0.500075,-99) , 
8, 1.57841, 0, 0, 0.502075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493646,-99) , 
8, 14.6424, 1, 0, 0.508946,-99) , 
NN(
0, 
0, 
-1, 3.10583, 0, -1, 0.480548,-99) , 
9, 7.69295, 0, 0, 0.491125,-99) , 
9, 3.42031, 1, 0, 0.499102,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0108357);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526016,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495685,-99) , 
7, -0.183702, 1, 0, 0.49848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467375,-99) , 
9, -0.974829, 0, 0, 0.497274,-99) , 
7, -2.14286, 1, 0, 0.498241,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0205156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.50963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.56396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488633,-99) , 
9, -0.20011, 0, 0, 0.509644,-99) , 
NN(
0, 
0, 
-1, 0.632646, 0, -1, 0.492901,-99) , 
8, -1.79019, 1, 0, 0.495731,-99) , 
9, 9.97149, 0, 0, 0.496626,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.0129247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499267,-99) , 
8, -2.10775, 1, 0, 0.502554,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506461,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461096,-99) , 
8, -2.96161, 1, 0, 0.482865,-99) , 
9, -0.672589, 0, 0, 0.501018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470115,-99) , 
9, 11.6191, 0, 0, 0.490368,-99) , 
8, 10.7188, 1, 0, 0.500118,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0215588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470415,-99) , 
7, 0.679623, 1, 0, 0.501533,-99) , 
9, 1.51844, 0, 0, 0.504292,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493151,-99) , 
6, -948.526, 0, 0, 0.50827,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491456,-99) , 
9, 7.64849, 0, 0, 0.495041,-99) , 
7, 0.999984, 0, 0, 0.498072,-99) , 
8, -0.180127, 1, 0, 0.500878,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0208635);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0647039, 1, 1, 0.506242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487029,-99) , 
2, -0.0713651, 0, 0, 0.499324,-99) , 
3, 4.74438, 1, 0, 0.5049,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472033,-99) , 
9, -1.04947, 0, 0, 0.508226,-99) , 
NN(
0, 
0, 
-1, -1.85115, 0, -1, 0.474314,-99) , 
8, -2.49292, 1, 0, 0.489931,-99) , 
9, -0.0224326, 0, 0, 0.502635,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0102133);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477388,-99) , 
5, 0.0238027, 1, 0, 0.502189,-99) , 
NN(
0, 
0, 
-1, 11.6797, 0, -1, 0.489833,-99) , 
8, 10.6175, 1, 0, 0.501134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478948,-99) , 
0, 0.489519, 0, 0, 0.500573,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0108525);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533928,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497876,-99) , 
7, -1.16323, 1, 0, 0.499535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464884,-99) , 
9, -1.03079, 0, 0, 0.49832,-99) , 
7, -2.14282, 1, 0, 0.499545,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0186983);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457882,-99) , 
8, -2.92598, 1, 0, 0.485771,-99) , 
9, -0.67197, 0, 0, 0.512629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47952,-99) , 
4, 0.999526, 0, 0, 0.506378,-99) , 
NN(
0, 
0, 
-1, 2.74108, 1, -1, 0.495784,-99) , 
8, 1.53613, 0, 0, 0.49946,-99) , 
8, -2.1823, 1, 0, 0.500845,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0156043);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498642,-99) , 
3, 4.57668, 1, 0, 0.511289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493349,-99) , 
7, -0.999979, 0, 0, 0.507792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498429,-99) , 
0, 0.495233, 1, 0, 0.501042,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475499,-99) , 
2, -0.00744088, 1, 0, 0.494026,-99) , 
2, 0.00324617, 0, 0, 0.497948,-99) , 
2, -0.0715639, 1, 0, 0.499706,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.00549548);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495444,-99) , 
8, 0.169923, 1, 0, 0.516368,-99) , 
NN(
0, 
0, 
-1, 8.8279, 0, 1, 0.501227,-99) , 
2, -0.214421, 1, 0, 0.502069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485475,-99) , 
4, 0.997143, 0, 0, 0.501474,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0116611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53571,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46417,-99) , 
9, -0.493065, 0, 0, 0.499454,-99) , 
8, -3.01158, 1, 0, 0.500729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483381,-99) , 
8, 14.2859, 1, 0, 0.499674,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0101744);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.10563, 1, 1, 0.51536,-99) , 
NN(
0, 
0, 
-1, 3.8408, 1, -1, 0.497267,-99) , 
8, 3.29943, 0, 0, 0.499488,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47468,-99) , 
9, 10.7793, 0, 0, 0.489403,-99) , 
8, 9.0761, 1, 0, 0.498471,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.00688804);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499695,-99) , 
2, -0.192958, 1, 0, 0.501079,-99) , 
NN(
0, 
0, 
-1, 0.999504, 1, -1, 0.490097,-99) , 
4, 0.99966, 0, 0, 0.499686,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.48697,-99) , 
4, 0.998571, 0, 0, 0.498781,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0202601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.05854, 1, 1, 0.506635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480383,-99) , 
8, -1.99511, 1, 0, 0.496792,-99) , 
9, 0.608504, 0, 0, 0.503808,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464731,-99) , 
9, 11.1874, 0, 0, 0.486991,-99) , 
8, 10.479, 1, 0, 0.50235,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0161437);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472837,-99) , 
0, 0.502852, 1, 0, 0.507843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496644,-99) , 
3, 9.10265, 0, 0, 0.498221,-99) , 
4, 0.999524, 1, 0, 0.499589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479858,-99) , 
4, 0.999887, 0, 0, 0.499021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470043,-99) , 
4, 0.999524, 0, 0, 0.49131,-99) , 
0, 0.493328, 0, 0, 0.498463,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.01436);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540108,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498405,-99) , 
8, 18.4848, 1, 0, 0.516029,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498055,-99) , 
9, 0.705879, 0, 0, 0.506935,-99) , 
NN(
0, 
0, 
-1, 1.51241, 0, -1, 0.495626,-99) , 
8, -0.869254, 1, 0, 0.499542,-99) , 
9, 9.39179, 0, 0, 0.500712,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0158563);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.246646, 0, 1, 0.514934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484024,-99) , 
9, 0.89459, 0, 0, 0.500674,-99) , 
8, -1.47444, 1, 0, 0.503813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484859,-99) , 
8, 16.9115, 1, 0, 0.502895,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0120604);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23809, 0, 1, 0.51813,-99) , 
NN(
NN(
0, 
0, 
-1, 1.23528, 0, 1, 0.506543,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.495495,-99) , 
8, -0.501103, 1, 0, 0.4997,-99) , 
7, -1.85714, 1, 0, 0.500774,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.0106419);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51988,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492408,-99) , 
9, 4.4328, 1, 0, 0.500795,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478046,-99) , 
9, -0.974829, 0, 0, 0.499909,-99) , 
7, -2.14285, 1, 0, 0.500574,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0172188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.138426, 0, 1, 0.516869,-99) , 
NN(
0, 
0, 
-1, 0.499994, 0, -1, 0.492534,-99) , 
3, 4.85092, 1, 0, 0.507825,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494406,-99) , 
4, 0.999523, 0, 0, 0.505574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49455,-99) , 
2, 0.0428579, 0, 0, 0.497091,-99) , 
2, -0.0782833, 1, 0, 0.498832,-99) , 
2, 0.0713617, 0, 0, 0.500459,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0083016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531897,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498918,-99) , 
7, -1.00003, 1, 0, 0.500862,-99) , 
4, 0.996667, 1, 0, 0.501855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482418,-99) , 
3, 9.10586, 1, 0, 0.500996,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.00598502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.98286, 0, 1, 0.501782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489245,-99) , 
8, 14.2859, 1, 0, 0.500994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472897,-99) , 
4, 0.99619, 0, 0, 0.500261,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0075603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499957,-99) , 
0, 0.498089, 1, 0, 0.510803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499342,-99) , 
8, -1.81545, 1, 0, 0.501333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474448,-99) , 
8, 8.86292, 1, 0, 0.500358,-99) , 
9, 9.58027, 0, 0, 0.501072,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0160017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213076, 1, 1, 0.503906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483013,-99) , 
4, 0.998095, 0, 0, 0.503051,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470119,-99) , 
9, -1.09417, 0, 0, 0.504018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472173,-99) , 
7, -0.625119, 1, 0, 0.493225,-99) , 
9, 0.0997583, 0, 0, 0.501368,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0199624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.9378, 1, 1, 0.507667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494644,-99) , 
8, -1.40921, 1, 0, 0.49957,-99) , 
8, 2.80535, 0, 0, 0.501814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511809,-99) , 
NN(
0, 
0, 
-1, -0.472361, 1, -1, 0.48198,-99) , 
8, -2.61471, 1, 0, 0.492318,-99) , 
9, 0.0998317, 0, 0, 0.500182,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0189697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428888, 0, 1, 0.52951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473419,-99) , 
9, -1.12695, 0, 0, 0.502552,-99) , 
8, 1.07116, 0, 0, 0.506155,-99) , 
NN(
NN(
0, 
0, 
-1, 0.14904, 0, 1, 0.507513,-99) , 
NN(
0, 
0, 
-1, 2.93162, 0, -1, 0.486882,-99) , 
9, 9.21813, 0, 0, 0.492706,-99) , 
9, 3.54503, 1, 0, 0.502668,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0127878);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.21384, 0, 1, 0.502957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487735,-99) , 
3, 8.97719, 1, 0, 0.502253,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524403,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459974,-99) , 
9, -0.444173, 0, 0, 0.479769,-99) , 
8, -3.00294, 1, 0, 0.489985,-99) , 
9, -0.0685417, 0, 0, 0.500494,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0152429);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536462,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486263,-99) , 
3, 5.14657, 1, 0, 0.513558,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499813,-99) , 
7, 0.714315, 0, 0, 0.503083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492193,-99) , 
2, -0.00743532, 1, 0, 0.495208,-99) , 
2, -0.0307559, 1, 0, 0.497484,-99) , 
2, 0.214104, 0, 0, 0.498553,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0179089);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487729,-99) , 
9, 5.90975, 1, 0, 0.511411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497503,-99) , 
7, -1.47622, 1, 0, 0.499664,-99) , 
7, 0.999924, 0, 0, 0.502853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504497,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482203,-99) , 
8, -0.701204, 1, 0, 0.498849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45345,-99) , 
7, 1.02942, 1, 0, 0.496185,-99) , 
9, 1.61929, 0, 0, 0.499751,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0116008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.212924, 1, 1, 0.502073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488813,-99) , 
3, 8.96333, 1, 0, 0.501456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467713,-99) , 
9, -1.10365, 0, 0, 0.499585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465602,-99) , 
7, -0.587619, 1, 0, 0.490394,-99) , 
9, -0.0983186, 0, 0, 0.499903,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.00949041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517763,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499287,-99) , 
3, 9.37697, 0, 0, 0.500125,-99) , 
2, -0.214324, 1, 0, 0.501152,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491763,-99) , 
3, 4.20112, 0, 0, 0.497545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459551,-99) , 
4, 0.999048, 0, 0, 0.491553,-99) , 
0, 0.494281, 0, 0, 0.499372,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0151712);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.433378, 0, 1, 0.511159,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496433,-99) , 
8, -1.99686, 1, 0, 0.499406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45784,-99) , 
7, -0.880249, 1, 0, 0.486855,-99) , 
9, -0.356117, 0, 0, 0.497976,-99) , 
9, 9.5102, 0, 0, 0.498901,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0103108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142891, 0, 1, 0.515309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488368,-99) , 
4, 0.99932, 0, 0, 0.501834,-99) , 
4, 0.998572, 1, 0, 0.502705,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493533,-99) , 
2, -0.0332397, 1, 0, 0.499777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475119,-99) , 
4, 0.999524, 0, 0, 0.493301,-99) , 
0, 0.493328, 0, 0, 0.501422,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0142735);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499524,-99) , 
8, -1.43832, 1, 0, 0.502989,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474552,-99) , 
9, 12.4495, 0, 0, 0.489043,-99) , 
8, 11.3901, 1, 0, 0.501658,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.508624,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464383,-99) , 
6, -951.203, 0, 0, 0.479277,-99) , 
8, -2.58609, 1, 0, 0.489898,-99) , 
9, 0.0997583, 0, 0, 0.499646,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0191804);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.57697, 0, 1, 0.50583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484481,-99) , 
8, 15.5527, 1, 0, 0.503205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491413,-99) , 
9, 1.06648, 0, 0, 0.498435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455986,-99) , 
7, 1.27763, 1, 0, 0.49612,-99) , 
9, 2.12319, 0, 0, 0.499247,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0181859);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.07376, 1, 1, 0.504428,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.485293,-99) , 
8, 13.4568, 1, 0, 0.50287,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462424,-99) , 
9, -1.22948, 0, 0, 0.504624,-99) , 
NN(
0, 
0, 
-1, -0.233452, 0, -1, 0.473594,-99) , 
7, -0.698461, 1, 0, 0.492174,-99) , 
9, 0.239737, 0, 0, 0.500795,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0137174);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.510172,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495589,-99) , 
5, 0.0101977, 0, 0, 0.498531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478703,-99) , 
5, 0.0237973, 1, 0, 0.497586,-99) , 
9, 9.88145, 0, 0, 0.498413,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.0112167);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.22428, 1, 1, 0.503905,-99) , 
NN(
0, 
0, 
-1, -1.49748, 1, -1, 0.48388,-99) , 
9, -0.828219, 0, 0, 0.502651,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47106,-99) , 
9, 12.2417, 0, 0, 0.486714,-99) , 
8, 10.9882, 1, 0, 0.501343,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.00792403);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498088, 1, 1, 0.508428,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497808,-99) , 
8, -2.4907, 1, 0, 0.498981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480416,-99) , 
8, 9.01638, 1, 0, 0.498268,-99) , 
9, 9.88145, 0, 0, 0.498923,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0129492);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518593,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495496,-99) , 
9, 2.15736, 1, 0, 0.499757,-99) , 
NN(
0, 
0, 
-1, 0.142611, 1, -1, 0.490699,-99) , 
9, 0.558958, 0, 0, 0.497569,-99) , 
7, -2.14287, 1, 0, 0.498268,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0219631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.657, 0, 1, 0.514451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46921,-99) , 
4, 0.999524, 0, 0, 0.508025,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468618,-99) , 
7, 1.85712, 1, 0, 0.503086,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485091,-99) , 
9, 3.60016, 0, 0, 0.493009,-99) , 
6, -40.0028, 1, 0, 0.499297,-99) , 
7, -1, 1, 0, 0.501044,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.017122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491233,-99) , 
9, -0.843655, 0, 0, 0.51862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49927,-99) , 
7, -0.996944, 1, 0, 0.504091,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.492818,-99) , 
6, -949.113, 0, 0, 0.496703,-99) , 
8, -2.29409, 1, 0, 0.498692,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0110472);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 20.3299, 1, 1, 0.514337,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498176,-99) , 
8, -1.50194, 1, 0, 0.500947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473933,-99) , 
9, -1.12693, 0, 0, 0.49989,-99) , 
9, 8.80097, 0, 0, 0.501028,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0118716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530384,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476811,-99) , 
8, 7.00827, 1, 0, 0.502566,-99) , 
9, 8.31703, 0, 0, 0.503745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489115,-99) , 
8, 16.8625, 1, 0, 0.503036,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.00934544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503244,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495911,-99) , 
8, -0.122439, 1, 0, 0.499399,-99) , 
7, 1.85708, 0, 0, 0.500097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481634,-99) , 
0, 0.505709, 1, 0, 0.499474,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0107681);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496961,-99) , 
9, 1.48837, 0, 0, 0.501347,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480732,-99) , 
9, 12.3882, 0, 0, 0.490938,-99) , 
8, 11.1816, 1, 0, 0.500469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479375,-99) , 
4, 0.997619, 0, 0, 0.499589,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.00666872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519993,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500712,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473323,-99) , 
9, -1.10297, 0, 0, 0.499591,-99) , 
9, 8.82662, 0, 0, 0.500429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47764,-99) , 
8, 18.7054, 1, 0, 0.499497,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00710061);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499538,-99) , 
7, -1.85713, 1, 0, 0.501136,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466753,-99) , 
7, -0.143227, 0, 0, 0.486077,-99) , 
4, 0.999184, 0, 0, 0.499937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483141,-99) , 
4, 0.997143, 0, 0, 0.499336,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.00709061);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85714, 1, 1, 0.501976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474997,-99) , 
8, -0.049085, 1, 0, 0.490049,-99) , 
4, 0.99932, 0, 0, 0.500905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478545,-99) , 
4, 0.997619, 0, 0, 0.499973,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.00817783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518655,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497904,-99) , 
7, -2.14287, 1, 0, 0.498626,-99) , 
4, 0.998095, 1, 0, 0.499683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48358,-99) , 
3, 9.13827, 1, 0, 0.49897,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.00864004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.503495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481385,-99) , 
0, 0.506072, 1, 0, 0.50289,-99) , 
NN(
0, 
0, 
-1, 1.82263, 0, -1, 0.489955,-99) , 
0, 0.491424, 0, 0, 0.502024,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0141708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487544,-99) , 
7, 0.14398, 1, 0, 0.499089,-99) , 
9, 5.52188, 1, 0, 0.50601,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49867,-99) , 
8, 1.81779, 0, 0, 0.500347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472794,-99) , 
9, 3.6336, 1, 0, 0.498461,-99) , 
8, 3.67998, 0, 0, 0.499962,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0169539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494853,-99) , 
7, 0.550652, 0, 0, 0.50024,-99) , 
7, -1.28579, 1, 0, 0.505036,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477334,-99) , 
7, 1.61223, 1, 0, 0.500743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455847,-99) , 
7, -1.85713, 0, 0, 0.49762,-99) , 
6, -948.526, 0, 0, 0.500262,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.00671292);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515451,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48743,-99) , 
8, 12.4239, 1, 0, 0.500308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479446,-99) , 
9, -0.960835, 0, 0, 0.499474,-99) , 
7, -2.14285, 1, 0, 0.500002,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0189096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489158,-99) , 
8, -3.01947, 1, 0, 0.515646,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491679,-99) , 
6, -1.58995, 0, 0, 0.496536,-99) , 
8, -2.55596, 1, 0, 0.497887,-99) , 
NN(
0, 
0, 
-1, 12.4314, 0, -1, 0.485594,-99) , 
8, 11.2335, 1, 0, 0.49689,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0114447);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.722014, 1, 1, 0.521812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492159,-99) , 
6, -43.3991, 1, 0, 0.498202,-99) , 
7, -1.85714, 1, 0, 0.499575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503805,-99) , 
NN(
0, 
0, 
-1, -0.0714238, 1, -1, 0.481725,-99) , 
6, -951.286, 0, 0, 0.490204,-99) , 
4, 0.999048, 0, 0, 0.498631,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0131334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494979,-99) , 
4, 0.999524, 1, 0, 0.500083,-99) , 
8, -1.88771, 1, 0, 0.503403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489876,-99) , 
7, 1.28566, 1, 0, 0.500576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480825,-99) , 
2, -0.0108905, 1, 0, 0.492514,-99) , 
2, 0.00336139, 0, 0, 0.497,-99) , 
2, -0.0714607, 1, 0, 0.498147,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.00976276);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496898,-99) , 
3, 0.560487, 1, 0, 0.497891,-99) , 
3, 9.11535, 0, 0, 0.498707,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467763,-99) , 
0, 0.496186, 0, 0, 0.487172,-99) , 
4, 0.998572, 0, 0, 0.497887,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.00513788);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521629,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499778,-99) , 
9, 7.26458, 0, 0, 0.500711,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479058,-99) , 
9, 12.7557, 0, 0, 0.489325,-99) , 
8, 11.6202, 1, 0, 0.499818,-99) , 
7, -2.14286, 1, 0, 0.500557,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0239884);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48728,-99) , 
9, -0.47438, 0, 0, 0.506855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470909,-99) , 
7, 0.999274, 1, 0, 0.503078,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499367,-99) , 
6, -951.286, 0, 0, 0.510853,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490763,-99) , 
5, 0.0237409, 0, 0, 0.492883,-99) , 
7, 0.999955, 0, 0, 0.497021,-99) , 
8, -0.167888, 1, 0, 0.499765,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.0116935);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471121,-99) , 
5, 0.0237915, 1, 0, 0.502322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479356,-99) , 
9, 11.1874, 0, 0, 0.492064,-99) , 
8, 10.3051, 1, 0, 0.501426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503718,-99) , 
NN(
0, 
0, 
-1, 0.998739, 0, -1, 0.483667,-99) , 
9, 2.79102, 0, 0, 0.490794,-99) , 
0, 0.503805, 1, 0, 0.500489,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0185052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498885,-99) , 
8, 0.841767, 0, 0, 0.510088,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495347,-99) , 
9, 8.97435, 0, 0, 0.499138,-99) , 
9, 3.2947, 1, 0, 0.503878,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494399,-99) , 
8, -2.7088, 1, 0, 0.497671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461933,-99) , 
7, 0.914849, 1, 0, 0.494536,-99) , 
9, 1.80379, 0, 0, 0.499204,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.0129271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522161,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497043,-99) , 
8, -2.18402, 1, 0, 0.503586,-99) , 
9, 0.525526, 0, 0, 0.511836,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479634,-99) , 
5, 0.023737, 1, 0, 0.502685,-99) , 
NN(
0, 
0, 
-1, 12.1818, 0, -1, 0.480926,-99) , 
8, 11.8576, 1, 0, 0.500934,-99) , 
7, -1.57141, 1, 0, 0.50193,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0110544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4996,-99) , 
8, 21.0378, 1, 0, 0.508968,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495962,-99) , 
8, -1.36963, 1, 0, 0.498039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476009,-99) , 
9, -1.09416, 0, 0, 0.49712,-99) , 
9, 9.0539, 0, 0, 0.49803,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0111416);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.84868, 0, 1, 0.504265,-99) , 
NN(
0, 
0, 
-1, 0.070305, 1, -1, 0.492763,-99) , 
9, 0.564808, 0, 0, 0.501185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484678,-99) , 
8, 16.6798, 1, 0, 0.500365,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0163305);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496947,-99) , 
9, 3.28385, 1, 0, 0.509185,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495799,-99) , 
2, 0.00333119, 0, 0, 0.500615,-99) , 
2, -0.071482, 1, 0, 0.502121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491583,-99) , 
9, -0.351841, 0, 0, 0.5023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449714,-99) , 
7, -0.229311, 1, 0, 0.492754,-99) , 
9, 0.14394, 0, 0, 0.500456,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0162517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48975,-99) , 
8, 3.03484, 0, 0, 0.511801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494192,-99) , 
8, 17.8861, 1, 0, 0.508837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49718,-99) , 
4, 0.999524, 1, 0, 0.500561,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464902,-99) , 
3, 9.79252, 1, 0, 0.499285,-99) , 
8, 2.29227, 0, 0, 0.501741,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.00949224);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.673952, 1, 1, 0.516844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495277,-99) , 
9, 1.13935, 0, 0, 0.500307,-99) , 
7, -1.85714, 1, 0, 0.501269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479903,-99) , 
2, -0.357184, 0, 0, 0.50072,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0110922);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48023,-99) , 
7, 1.2851, 1, 0, 0.502322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494784,-99) , 
7, 1.85709, 0, 0, 0.496087,-99) , 
9, 2.34037, 1, 0, 0.49979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479181,-99) , 
2, 0.357041, 1, 0, 0.499241,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0144419);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497562,-99) , 
8, 13.9607, 1, 0, 0.513789,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483119,-99) , 
9, -1.08262, 0, 0, 0.516036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487339,-99) , 
9, 0.704505, 0, 0, 0.497557,-99) , 
8, -2.55402, 1, 0, 0.498891,-99) , 
9, 8.04958, 0, 0, 0.500269,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.00922167);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497759,-99) , 
8, 3.22563, 0, 0, 0.499525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480884,-99) , 
8, 8.95633, 1, 0, 0.498664,-99) , 
9, 10.4576, 0, 0, 0.499426,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0157394);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484418,-99) , 
0, 0.500947, 1, 0, 0.514848,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498061,-99) , 
2, 0.0898334, 0, 0, 0.500064,-99) , 
3, 0.786792, 1, 0, 0.502398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484463,-99) , 
2, -0.153107, 0, 0, 0.500648,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.47987,-99) , 
2, 0.0713617, 1, 0, 0.493247,-99) , 
3, 4.77402, 1, 0, 0.50064,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0110573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999509, 1, 1, 0.50418,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.488947,-99) , 
4, 0.999206, 0, 0, 0.503019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475553,-99) , 
4, 0.997619, 0, 0, 0.501873,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0132457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482138,-99) , 
7, -1.00011, 0, 0, 0.510728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497156,-99) , 
7, -1.85713, 1, 0, 0.498642,-99) , 
4, 0.999524, 1, 0, 0.500574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479042,-99) , 
3, 9.79756, 1, 0, 0.499813,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.00949757);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537461,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480251,-99) , 
5, 0.0237973, 1, 0, 0.501283,-99) , 
9, 7.76026, 0, 0, 0.50263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488421,-99) , 
8, 13.6397, 1, 0, 0.501718,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.00861872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.502572,-99) , 
NN(
0, 
0, 
-1, 4.55278, 1, -1, 0.490715,-99) , 
4, 0.99966, 0, 0, 0.500733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479745,-99) , 
4, 0.997619, 0, 0, 0.499855,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0109679);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.36335, 0, 1, 0.504241,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480028,-99) , 
7, -0.714295, 0, 0, 0.497311,-99) , 
8, -0.395026, 1, 0, 0.500148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482943,-99) , 
3, 9.79756, 1, 0, 0.499535,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.0136754);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.9795, 0, 1, 0.519987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495248,-99) , 
8, -0.454786, 1, 0, 0.509217,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496025,-99) , 
4, 0.999048, 1, 0, 0.498028,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.487833,-99) , 
0, 0.493328, 0, 0, 0.49665,-99) , 
7, -1.57138, 1, 0, 0.4978,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.00903316);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5165,-99) , 
NN(
NN(
0, 
0, 
-1, 5.28353, 0, 1, 0.50234,-99) , 
NN(
0, 
0, 
-1, 6.81408, 1, -1, 0.494838,-99) , 
7, -0.142856, 1, 0, 0.498385,-99) , 
9, 10.7611, 0, 0, 0.49937,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0152293);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497376,-99) , 
3, 0.546507, 1, 0, 0.498417,-99) , 
3, 9.10265, 0, 0, 0.500162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476363,-99) , 
0, 0.49487, 0, 0, 0.499831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458626,-99) , 
0, 0.502852, 1, 0, 0.492424,-99) , 
4, 0.999524, 0, 0, 0.498941,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0156369);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494661,-99) , 
4, 0.999955, 0, 0, 0.520278,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494207,-99) , 
6, -19.8222, 1, 0, 0.5012,-99) , 
7, -1.57144, 1, 0, 0.502964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505046,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.481403,-99) , 
6, -949.113, 0, 0, 0.490338,-99) , 
4, 0.999048, 0, 0, 0.50169,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0138663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498461,-99) , 
8, 2.94288, 0, 0, 0.502319,-99) , 
7, -1.28522, 1, 0, 0.50597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533229,-99) , 
NN(
0, 
0, 
-1, -1.57143, 0, -1, 0.495385,-99) , 
5, 0.0237801, 0, 0, 0.497632,-99) , 
6, -949.113, 0, 0, 0.500603,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.00961439);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529129,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483493,-99) , 
3, 7.94509, 1, 0, 0.502612,-99) , 
4, 0.996667, 1, 0, 0.50345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485176,-99) , 
3, 9.78684, 1, 0, 0.502797,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0094636);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480165,-99) , 
0, 0.501898, 1, 0, 0.508576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499273,-99) , 
0, 0.505709, 0, 0, 0.500199,-99) , 
3, 1.03947, 1, 0, 0.501968,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482421,-99) , 
3, 9.78684, 1, 0, 0.501274,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.00922381);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.93576, 1, 1, 0.514338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499589,-99) , 
8, 14.2028, 1, 0, 0.511898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498048,-99) , 
8, -2.58271, 1, 0, 0.499423,-99) , 
9, 8.06315, 0, 0, 0.500608,-99) , 
2, -0.214307, 1, 0, 0.501479,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.0103636);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518922,-99) , 
NN(
NN(
0, 
0, 
-1, -1.75546, 1, 1, 0.503679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481728,-99) , 
8, 9.07272, 1, 0, 0.502683,-99) , 
9, 10.4576, 0, 0, 0.503619,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.0110219);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.142642, 0, 1, 0.513357,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0513615, 1, 1, 0.502914,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481351,-99) , 
8, -0.729321, 1, 0, 0.496479,-99) , 
9, 1.70683, 0, 0, 0.499837,-99) , 
2, -0.214466, 1, 0, 0.500709,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0147021);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496036,-99) , 
4, 0.999965, 0, 0, 0.502574,-99) , 
NN(
0, 
0, 
-1, -0.428702, 0, -1, 0.48584,-99) , 
4, 0.999274, 0, 0, 0.500933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477228,-99) , 
4, 0.996191, 0, 0, 0.500309,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.00609371);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.071281, 0, 1, 0.507395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499309,-99) , 
7, 1.85708, 0, 0, 0.500043,-99) , 
0, 0.5019, 0, 0, 0.501365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477755,-99) , 
4, 0.996667, 0, 0, 0.500651,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.00653543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.996168, 0, 1, 0.513581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511162,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498714,-99) , 
0, 0.491424, 1, 0, 0.499499,-99) , 
4, 0.998095, 1, 0, 0.500243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482012,-99) , 
3, 8.84574, 1, 0, 0.499367,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0103592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.84252, 0, 1, 0.504318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471536,-99) , 
8, 0.542653, 1, 0, 0.491407,-99) , 
4, 0.99932, 0, 0, 0.503167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48631,-99) , 
4, 0.997619, 0, 0, 0.502448,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.00509002);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.996667, 1, 1, 0.501535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475466,-99) , 
3, 9.13827, 1, 0, 0.50039,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0119822);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496497,-99) , 
9, 3.81661, 1, 0, 0.503559,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493157,-99) , 
2, -0.072081, 1, 0, 0.496093,-99) , 
0, 0.495369, 0, 0, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485775,-99) , 
0, 0.505709, 1, 0, 0.501041,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.00887281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53463,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486705,-99) , 
9, 11.5157, 0, 0, 0.500948,-99) , 
7, -0.140267, 1, 0, 0.511856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469555,-99) , 
9, -0.638892, 0, 0, 0.498673,-99) , 
8, -2.95011, 1, 0, 0.499754,-99) , 
9, 7.53339, 0, 0, 0.501004,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0153245);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524007,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497337,-99) , 
8, -3.00535, 1, 0, 0.498835,-99) , 
8, 2.00177, 0, 0, 0.500091,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487121,-99) , 
8, 15.3659, 1, 0, 0.503324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482443,-99) , 
7, 1.00014, 0, 0, 0.488607,-99) , 
9, 8.32985, 0, 0, 0.49403,-99) , 
9, 3.81661, 1, 0, 0.498631,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.00851176);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513256,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49913,-99) , 
9, 7.10643, 0, 0, 0.500832,-99) , 
NN(
0, 
0, 
-1, 1.23684, 0, -1, 0.492417,-99) , 
7, 0.714268, 1, 0, 0.498819,-99) , 
9, 10.4576, 0, 0, 0.499655,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0213384);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493383,-99) , 
9, 6.30306, 1, 0, 0.515614,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490819,-99) , 
6, -949.13, 1, 0, 0.501462,-99) , 
7, 0.999955, 0, 0, 0.505368,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476432,-99) , 
7, -1.69504, 0, 0, 0.502279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467795,-99) , 
7, 0.914855, 1, 0, 0.499173,-99) , 
9, 1.83464, 0, 0, 0.50222,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0164122);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498047,-99) , 
7, -0.42994, 0, 0, 0.528336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498441,-99) , 
8, -2.04171, 1, 0, 0.500998,-99) , 
8, 1.43038, 0, 0, 0.503354,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49391,-99) , 
8, 14.8096, 1, 0, 0.508956,-99) , 
NN(
0, 
0, 
-1, 3.27613, 0, -1, 0.485745,-99) , 
9, 7.81619, 0, 0, 0.494494,-99) , 
9, 3.5641, 1, 0, 0.50106,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.00911507);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.85716, 1, 1, 0.502919,-99) , 
NN(
0, 
0, 
-1, 0.999539, 1, -1, 0.492941,-99) , 
4, 0.999683, 0, 0, 0.501213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465172,-99) , 
4, 0.996667, 0, 0, 0.500139,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.00930893);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51884,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498096,-99) , 
8, -2.04714, 1, 0, 0.499687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473646,-99) , 
9, -1.03753, 0, 0, 0.498565,-99) , 
9, 13.2243, 0, 0, 0.499244,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.00786188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213298, 1, 1, 0.503092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480588,-99) , 
4, 0.998821, 0, 0, 0.502309,-99) , 
NN(
0, 
0, 
-1, 0.582912, 1, -1, 0.491156,-99) , 
4, 0.998095, 0, 0, 0.501726,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0140444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535445,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496519,-99) , 
0, 0.497138, 1, 0, 0.501461,-99) , 
7, -1.28565, 1, 0, 0.504702,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497914,-99) , 
5, 0.0238027, 0, 0, 0.499822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459851,-99) , 
7, -1.85715, 0, 0, 0.497062,-99) , 
6, -948.705, 0, 0, 0.499773,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.00992795);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.98765, 0, 1, 0.503576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467434,-99) , 
3, 4.48061, 1, 0, 0.495652,-99) , 
4, 0.999773, 0, 0, 0.501994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483258,-99) , 
4, 0.997619, 0, 0, 0.501211,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.00940242);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515155,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493307,-99) , 
9, 4.78561, 1, 0, 0.510375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486521,-99) , 
9, 0.0644058, 0, 0, 0.506208,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.508677,-99) , 
NN(
0, 
0, 
-1, -1.08347, 0, -1, 0.497711,-99) , 
9, 8.73648, 0, 0, 0.498602,-99) , 
2, -0.0711628, 1, 0, 0.49997,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0119146);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518075,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476356,-99) , 
9, -0.617333, 0, 0, 0.501323,-99) , 
NN(
0, 
0, 
-1, -0.673262, 0, -1, 0.494429,-99) , 
9, 3.95626, 1, 0, 0.499687,-99) , 
7, -2.14283, 1, 0, 0.500291,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0160952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498536,-99) , 
6, 0.19516, 1, 0, 0.507855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496509,-99) , 
5, 0.0238027, 0, 0, 0.498478,-99) , 
6, -2.17862, 0, 0, 0.501618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518088,-99) , 
NN(
0, 
0, 
-1, -0.419139, 1, -1, 0.484798,-99) , 
8, -2.93034, 1, 0, 0.492018,-99) , 
9, 0.0998317, 0, 0, 0.499981,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0112939);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539034,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499968,-99) , 
4, 0.999048, 1, 0, 0.502088,-99) , 
7, -1.28503, 1, 0, 0.505556,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52978,-99) , 
NN(
0, 
0, 
-1, -1.85715, 0, -1, 0.495859,-99) , 
5, 0.0238027, 0, 0, 0.497881,-99) , 
6, -948.705, 0, 0, 0.500607,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0147626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.58687, 1, 1, 0.508143,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494544,-99) , 
8, -0.622723, 1, 0, 0.500776,-99) , 
8, 2.10924, 0, 0, 0.502865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468027,-99) , 
7, -0.142901, 0, 0, 0.487159,-99) , 
4, 0.998572, 0, 0, 0.501761,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.00847275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488611,-99) , 
8, 0.804446, 0, 0, 0.512271,-99) , 
NN(
NN(
0, 
0, 
-1, 7.75652, 0, 1, 0.502194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488372,-99) , 
8, 14.3234, 1, 0, 0.50136,-99) , 
7, 1.57141, 0, 0, 0.502168,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.00869168);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516178,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488443,-99) , 
8, 12.268, 1, 0, 0.501451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474326,-99) , 
9, -1.07662, 0, 0, 0.500582,-99) , 
7, -2.14284, 1, 0, 0.501102,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0179979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478714,-99) , 
9, -1.07404, 0, 0, 0.514334,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488661,-99) , 
0, 0.497139, 1, 0, 0.497771,-99) , 
8, -0.930745, 1, 0, 0.505392,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489913,-99) , 
8, 11.9685, 1, 0, 0.501549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449818,-99) , 
9, -0.287566, 0, 0, 0.477717,-99) , 
9, 0.132425, 0, 0, 0.499286,-99) , 
7, -0.714326, 1, 0, 0.500971,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0174731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497269,-99) , 
8, -1.2632, 1, 0, 0.49963,-99) , 
9, 10.7079, 0, 0, 0.500402,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483678,-99) , 
8, -2.48108, 1, 0, 0.49595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455664,-99) , 
9, -1.22948, 0, 0, 0.489661,-99) , 
9, 0.239737, 0, 0, 0.498309,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.00962778);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428185, 0, 1, 0.511859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499981,-99) , 
8, 2.10924, 0, 0, 0.501901,-99) , 
0, 0.495551, 1, 0, 0.502953,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486974,-99) , 
9, 1.60678, 0, 0, 0.499756,-99) , 
NN(
0, 
0, 
-1, -1.16327, 0, -1, 0.480408,-99) , 
7, -0.428571, 0, 0, 0.492791,-99) , 
0, 0.494281, 0, 0, 0.501067,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0117583);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499331,-99) , 
7, -2.23811, 0, 0, 0.517642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494786,-99) , 
9, 0.953538, 0, 0, 0.501569,-99) , 
7, -1.85715, 1, 0, 0.50251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484562,-99) , 
4, 0.997619, 0, 0, 0.501767,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.00898814);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516165,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486397,-99) , 
8, 12.3516, 1, 0, 0.501308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478127,-99) , 
9, -1.0097, 0, 0, 0.500454,-99) , 
7, -2.14286, 1, 0, 0.500973,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.00922968);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489206,-99) , 
4, 0.999524, 0, 0, 0.508052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498234,-99) , 
4, 0.998095, 1, 0, 0.499295,-99) , 
0, 0.502852, 0, 0, 0.500431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474343,-99) , 
1, 0.0241452, 1, 0, 0.499663,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0192762);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472918,-99) , 
9, -0.305939, 0, 0, 0.501449,-99) , 
8, -3.01047, 1, 0, 0.503047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490823,-99) , 
8, 18.1769, 1, 0, 0.507969,-99) , 
NN(
0, 
0, 
-1, 2.87545, 0, -1, 0.490638,-99) , 
9, 9.24327, 0, 0, 0.495604,-99) , 
9, 3.57611, 1, 0, 0.50112,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0146466);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499828,-99) , 
8, -1.87072, 1, 0, 0.503622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49461,-99) , 
7, 1.85713, 0, 0, 0.497279,-99) , 
9, 2.99641, 1, 0, 0.50133,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522326,-99) , 
NN(
0, 
0, 
-1, -0.68158, 1, -1, 0.478651,-99) , 
8, -2.83737, 1, 0, 0.492783,-99) , 
9, -0.14494, 0, 0, 0.500192,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0116493);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519765,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478856,-99) , 
4, 0.998095, 0, 0, 0.502262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445413,-99) , 
7, 0.16462, 1, 0, 0.495015,-99) , 
9, 0.558958, 0, 0, 0.500514,-99) , 
7, -2.14283, 1, 0, 0.501165,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.00901901);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498175,-99) , 
8, 16.3873, 1, 0, 0.516632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480266,-99) , 
5, 0.0237802, 1, 0, 0.500188,-99) , 
9, 8.34839, 0, 0, 0.501543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501439,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450875,-99) , 
9, 2.03259, 0, 0, 0.480776,-99) , 
8, 1.04642, 0, 0, 0.491045,-99) , 
7, 1.2857, 1, 0, 0.500338,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0122643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473439,-99) , 
7, -1.77552, 0, 0, 0.497419,-99) , 
6, -949.657, 0, 0, 0.50736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479454,-99) , 
3, 8.92132, 1, 0, 0.499671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477824,-99) , 
9, -0.472592, 0, 0, 0.498445,-99) , 
7, -1.28573, 1, 0, 0.499669,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.00842646);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491646,-99) , 
8, -0.710033, 1, 0, 0.510497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476858,-99) , 
5, 0.0238027, 1, 0, 0.499124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466753,-99) , 
9, 12.4289, 0, 0, 0.486731,-99) , 
8, 11.3354, 1, 0, 0.498081,-99) , 
7, -1.57142, 1, 0, 0.499209,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0157017);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526352,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462911,-99) , 
7, -2.04758, 0, 0, 0.49583,-99) , 
6, -949.657, 0, 0, 0.504023,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494521,-99) , 
7, -0.0476345, 1, 0, 0.497036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465263,-99) , 
9, -0.37299, 0, 0, 0.495392,-99) , 
7, -0.999988, 1, 0, 0.497107,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0087991);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513202,-99) , 
NN(
0, 
0, 
-1, 8.95633, 1, -1, 0.496161,-99) , 
9, 10.3314, 0, 0, 0.49718,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0108662);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498257,-99) , 
5, 0.0113343, 0, 0, 0.500737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475911,-99) , 
5, 0.0238027, 1, 0, 0.499697,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494025,-99) , 
0, 0.498088, 1, 0, 0.500105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474243,-99) , 
6, -951.246, 1, 0, 0.492215,-99) , 
8, 8.70111, 1, 0, 0.498907,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0154384);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536883,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494767,-99) , 
8, 3.13964, 0, 0, 0.498082,-99) , 
7, -1.28559, 1, 0, 0.501776,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495278,-99) , 
9, -0.664924, 1, 0, 0.496657,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474639,-99) , 
7, -1.85713, 0, 0, 0.495115,-99) , 
6, -949.024, 0, 0, 0.497481,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.00962517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497637, 1, 1, 0.515545,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497816,-99) , 
4, 0.999524, 1, 0, 0.499668,-99) , 
7, -1.85714, 1, 0, 0.500572,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487553,-99) , 
9, 1.84005, 0, 0, 0.495994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480689,-99) , 
0, 0.504893, 0, 0, 0.490056,-99) , 
0, 0.503804, 1, 0, 0.499644,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0107713);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.511249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497388,-99) , 
1, 0.00340143, 0, 0, 0.50073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482181,-99) , 
5, 0.0238027, 1, 0, 0.499848,-99) , 
9, 10.0098, 0, 0, 0.500566,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0188634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492447,-99) , 
9, 6.82548, 1, 0, 0.50535,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494008,-99) , 
9, 7.23465, 0, 0, 0.496961,-99) , 
7, -0.142871, 0, 0, 0.502135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473626,-99) , 
6, -951.273, 0, 0, 0.485403,-99) , 
8, -2.99331, 1, 0, 0.492391,-99) , 
9, 0.0998317, 0, 0, 0.500469,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.00729517);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.214209, 0, 1, 0.503305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488204,-99) , 
3, 9.42256, 1, 0, 0.502695,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.012863);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.82605, 1, 1, 0.511847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491719,-99) , 
7, -0.714383, 0, 0, 0.508102,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497997,-99) , 
8, 1.15465, 0, 0, 0.499686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46191,-99) , 
9, 3.33264, 1, 0, 0.498084,-99) , 
8, 2.32414, 0, 0, 0.500642,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0162888);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999998, 0, 1, 0.507147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481467,-99) , 
4, 0.999911, 1, 0, 0.495799,-99) , 
4, 0.999955, 0, 0, 0.50249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477391,-99) , 
0, 0.501265, 1, 0, 0.496918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471534,-99) , 
0, 0.494281, 0, 0, 0.489556,-99) , 
4, 0.999048, 0, 0, 0.501196,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.00997492);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513307,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497891,-99) , 
8, 2.74066, 0, 0, 0.500132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471342,-99) , 
8, 10.5487, 1, 0, 0.49915,-99) , 
9, 10.8711, 0, 0, 0.499907,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0193129);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.87678, 1, 1, 0.504935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467004,-99) , 
8, -3.01814, 1, 0, 0.485086,-99) , 
9, -0.43116, 0, 0, 0.502416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490377,-99) , 
8, 17.0946, 1, 0, 0.504947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483758,-99) , 
9, 4.4614, 1, 0, 0.489949,-99) , 
9, 8.32992, 0, 0, 0.49543,-99) , 
9, 3.81661, 1, 0, 0.500742,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.00476872);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.21447, 0, 1, 0.501918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482692,-99) , 
4, 0.996667, 0, 0, 0.501336,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0076122);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.23811, 0, 1, 0.513253,-99) , 
NN(
NN(
0, 
0, 
-1, 2.07481, 1, -1, 0.498317,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456421,-99) , 
9, 10.1072, 0, 0, 0.485566,-99) , 
8, 9.27785, 1, 0, 0.497027,-99) , 
7, -1.85714, 1, 0, 0.497965,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0125742);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.80274, 1, 1, 0.50743,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486408,-99) , 
4, 0.999524, 0, 0, 0.504388,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497531,-99) , 
8, 2.85547, 0, 0, 0.499543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457427,-99) , 
8, -2.32078, 1, 0, 0.476943,-99) , 
9, 0.194718, 0, 0, 0.497218,-99) , 
7, -0.714326, 1, 0, 0.499203,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.0138443);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537378,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497445,-99) , 
3, 8.34207, 0, 0, 0.499107,-99) , 
7, -2.14286, 1, 0, 0.500436,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464716,-99) , 
7, -1.00026, 0, 0, 0.498236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467215,-99) , 
9, 2.71626, 1, 0, 0.491775,-99) , 
4, 0.999524, 0, 0, 0.499081,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0103444);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.11584, 0, 1, 0.502776,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479166,-99) , 
4, 0.99905, 1, 0, 0.489063,-99) , 
4, 0.999637, 0, 0, 0.500882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480908,-99) , 
4, 0.998095, 0, 0, 0.499867,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0109937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499016,-99) , 
4, 0.999524, 1, 0, 0.501907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480191,-99) , 
7, -1.85714, 0, 0, 0.50038,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499775,-99) , 
8, 20.3618, 1, 0, 0.505266,-99) , 
NN(
0, 
0, 
-1, 2.37385, 0, -1, 0.491392,-99) , 
9, 9.00305, 0, 0, 0.495263,-99) , 
9, 3.35723, 1, 0, 0.498971,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.0127209);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.797115, 0, 1, 0.52522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485443,-99) , 
8, -0.284301, 1, 0, 0.509652,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480334,-99) , 
5, 0.0238027, 1, 0, 0.501835,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467899,-99) , 
9, 12.491, 0, 0, 0.486347,-99) , 
8, 11.2228, 1, 0, 0.500523,-99) , 
7, -1.57144, 1, 0, 0.501357,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0154075);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499399,-99) , 
8, 1.0141, 0, 0, 0.502078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473522,-99) , 
7, -2.1428, 0, 0, 0.500942,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48477,-99) , 
7, 0.150469, 0, 0, 0.500603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478958,-99) , 
7, -0.427846, 1, 0, 0.48904,-99) , 
6, -948.526, 0, 0, 0.493413,-99) , 
9, 3.52964, 1, 0, 0.498966,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0080536);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.25172, 0, 1, 0.513731,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499958,-99) , 
8, -2.29122, 1, 0, 0.501308,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473247,-99) , 
9, 12.1875, 0, 0, 0.487453,-99) , 
8, 9.34051, 1, 0, 0.49989,-99) , 
7, -1.57144, 1, 0, 0.501158,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0134005);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.51497, 1, 1, 0.505924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480375,-99) , 
9, -1.13594, 0, 0, 0.504692,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509301,-99) , 
NN(
0, 
0, 
-1, 3.52921, 0, -1, 0.493434,-99) , 
9, 11.8618, 0, 0, 0.496047,-99) , 
9, 3.47086, 1, 0, 0.502393,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.00853338);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 17.861, 1, 1, 0.514585,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498271,-99) , 
8, -1.46942, 1, 0, 0.499906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475623,-99) , 
9, -1.22067, 0, 0, 0.499093,-99) , 
9, 8.96386, 0, 0, 0.500295,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0127722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.68168, 1, 1, 0.504903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467276,-99) , 
7, -0.55406, 1, 0, 0.493121,-99) , 
9, -0.0786853, 0, 0, 0.503065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47979,-99) , 
9, 11.6797, 0, 0, 0.493874,-99) , 
8, 10.5766, 1, 0, 0.502282,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.00516664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5222,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479407,-99) , 
8, 8.09823, 1, 0, 0.499586,-99) , 
9, 9.27956, 0, 0, 0.500349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483961,-99) , 
8, 18.6944, 1, 0, 0.499691,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.00681539);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46905,-99) , 
9, -1.2047, 0, 0, 0.499622,-99) , 
9, 8.47346, 0, 0, 0.500592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481866,-99) , 
8, 16.9227, 1, 0, 0.49971,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.00990796);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498053,-99) , 
3, 9.10586, 0, 0, 0.499387,-99) , 
NN(
0, 
0, 
-1, 0.766169, 1, -1, 0.483853,-99) , 
4, 0.999365, 0, 0, 0.498063,-99) , 
NN(
0, 
0, 
-1, 0.996168, 0, -1, 0.481248,-99) , 
4, 0.998095, 0, 0, 0.497204,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0086155);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.81622, 1, 1, 0.502322,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462599,-99) , 
6, -12.1436, 1, 0, 0.484922,-99) , 
9, -0.6014, 0, 0, 0.500879,-99) , 
NN(
0, 
0, 
-1, 0.143337, 0, -1, 0.485574,-99) , 
8, 13.3578, 1, 0, 0.499856,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.00486142);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529503,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499412,-99) , 
8, -3.0116, 1, 0, 0.500468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491055,-99) , 
8, 14.2859, 1, 0, 0.499898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48634,-99) , 
0, 0.505709, 1, 0, 0.49945,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0138401);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498474,-99) , 
7, 1.69384, 0, 0, 0.522843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489214,-99) , 
8, 0.52579, 0, 0, 0.509242,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498601,-99) , 
9, 1.47684, 0, 0, 0.502903,-99) , 
NN(
0, 
0, 
-1, -951.246, 1, -1, 0.494144,-99) , 
9, 2.30013, 1, 0, 0.499644,-99) , 
7, 1.28569, 0, 0, 0.500764,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.00892546);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496959,-99) , 
9, 7.66224, 0, 0, 0.50282,-99) , 
9, 4.58687, 1, 0, 0.506663,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476749,-99) , 
9, -1.15538, 0, 0, 0.499351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468498,-99) , 
9, 3.31871, 1, 0, 0.497998,-99) , 
8, 2.33638, 0, 0, 0.5002,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0112606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.51779,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494794,-99) , 
7, 0.143783, 1, 0, 0.500506,-99) , 
9, 4.96883, 1, 0, 0.505171,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498168,-99) , 
8, -3.01503, 1, 0, 0.499338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463452,-99) , 
9, 3.35028, 1, 0, 0.497699,-99) , 
8, 2.43801, 0, 0, 0.499554,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0117173);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492804,-99) , 
3, 5.1762, 1, 0, 0.511516,-99) , 
NN(
NN(
0, 
0, 
-1, 0.074275, 1, 1, 0.507458,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495869,-99) , 
2, -0.0228979, 1, 0, 0.499437,-99) , 
2, 0.0509533, 0, 0, 0.500743,-99) , 
2, 0.214205, 0, 0, 0.501443,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0131214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497975,-99) , 
7, -1.85715, 1, 0, 0.49927,-99) , 
3, 9.11814, 0, 0, 0.500713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478457,-99) , 
0, 0.5019, 1, 0, 0.500597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441294,-99) , 
3, 4.52969, 1, 0, 0.490487,-99) , 
4, 0.999524, 0, 0, 0.49911,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.014527);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498025,-99) , 
9, 5.77395, 1, 0, 0.51053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489252,-99) , 
7, -0.714469, 0, 0, 0.506544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502982,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471048,-99) , 
7, -2.14285, 0, 0, 0.501699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470299,-99) , 
9, 3.12079, 1, 0, 0.500056,-99) , 
8, 2.10924, 0, 0, 0.50179,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0156888);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485525,-99) , 
3, 5.02632, 1, 0, 0.51525,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497987,-99) , 
2, 0.0304516, 0, 0, 0.500281,-99) , 
2, -0.214408, 1, 0, 0.50124,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537295,-99) , 
NN(
0, 
0, 
-1, -2.10203, 0, -1, 0.475896,-99) , 
6, -949.657, 0, 0, 0.491066,-99) , 
7, -1.28571, 0, 0, 0.499868,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0103612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.57145, 1, 1, 0.504473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47058,-99) , 
3, 4.49885, 1, 0, 0.494277,-99) , 
4, 0.999819, 0, 0, 0.502021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4805,-99) , 
4, 0.996191, 0, 0, 0.501463,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.00956797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.23763, 0, 1, 0.503693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483189,-99) , 
3, 7.4848, 1, 0, 0.502827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48067,-99) , 
3, 9.78684, 1, 0, 0.502038,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.0118763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492678,-99) , 
8, 0.913169, 0, 0, 0.512562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491466,-99) , 
8, 16.471, 1, 0, 0.507687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488027,-99) , 
9, 2.71457, 1, 0, 0.497692,-99) , 
9, 7.3113, 0, 0, 0.498748,-99) , 
7, 1.57139, 0, 0, 0.499777,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.00548577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499534,-99) , 
2, 0.214849, 0, 0, 0.500354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478816,-99) , 
3, 7.21062, 1, 0, 0.499388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482606,-99) , 
3, 9.42577, 1, 0, 0.498714,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0159394);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.428595, 1, 1, 0.512187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467462,-99) , 
7, -0.142897, 0, 0, 0.497159,-99) , 
6, -43.873, 1, 0, 0.506403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496925,-99) , 
8, 1.16694, 0, 0, 0.498602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464184,-99) , 
9, 3.3219, 1, 0, 0.497096,-99) , 
8, 2.33638, 0, 0, 0.499467,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0132951);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486988,-99) , 
9, -0.582618, 0, 0, 0.511494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493778,-99) , 
9, 1.31835, 0, 0, 0.499298,-99) , 
8, -2.11107, 1, 0, 0.50069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481106,-99) , 
1, 0.0244069, 1, 0, 0.50012,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0135081);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520298,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495647,-99) , 
9, -0.644011, 0, 0, 0.509358,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492641,-99) , 
9, 5.49255, 0, 0, 0.496428,-99) , 
8, -1.02031, 1, 0, 0.501937,-99) , 
NN(
NN(
0, 
0, 
-1, -0.265317, 0, -1, 0.497587,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455983,-99) , 
7, -0.00121439, 1, 0, 0.478605,-99) , 
9, 0.414904, 0, 0, 0.49542,-99) , 
7, -0.428582, 1, 0, 0.497799,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.0113529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489431,-99) , 
8, 10.5209, 1, 0, 0.503377,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483264,-99) , 
7, 0.428278, 1, 0, 0.495189,-99) , 
6, 0.525285, 1, 0, 0.502304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485275,-99) , 
7, 2.14283, 1, 0, 0.501876,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.00958402);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.511555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497766,-99) , 
8, 3.22247, 0, 0, 0.499479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472015,-99) , 
8, 8.81257, 1, 0, 0.498476,-99) , 
9, 9.5102, 0, 0, 0.499385,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.00496313);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480857,-99) , 
4, 0.998821, 0, 0, 0.499804,-99) , 
4, 0.998095, 1, 0, 0.500677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486304,-99) , 
3, 9.10265, 1, 0, 0.50004,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.014502);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.340789, 1, 1, 0.50831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496757,-99) , 
7, 1.85709, 0, 0, 0.499301,-99) , 
9, 2.77917, 1, 0, 0.503127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471664,-99) , 
7, -1.9568, 0, 0, 0.499975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465851,-99) , 
7, 0.651049, 1, 0, 0.496422,-99) , 
9, 1.3578, 0, 0, 0.500352,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0171698);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538353,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476609,-99) , 
7, 0.459481, 1, 0, 0.500578,-99) , 
9, 1.4671, 0, 0, 0.504168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496762,-99) , 
6, -948.526, 0, 0, 0.500697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482857,-99) , 
7, -1.58505, 1, 0, 0.488402,-99) , 
7, -0.714319, 0, 0, 0.498109,-99) , 
8, -0.212002, 1, 0, 0.500798,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0101828);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499303,-99) , 
0, 0.490471, 1, 0, 0.500247,-99) , 
3, 9.11584, 0, 0, 0.501749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473101,-99) , 
8, -0.506167, 1, 0, 0.499638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472418,-99) , 
8, 0.386346, 1, 0, 0.491934,-99) , 
4, 0.999524, 0, 0, 0.500205,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0118242);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499085,-99) , 
4, 0.999991, 0, 0, 0.50414,-99) , 
NN(
0, 
0, 
-1, 4.48659, 1, -1, 0.494168,-99) , 
4, 0.999819, 0, 0, 0.501742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477465,-99) , 
4, 0.996191, 0, 0, 0.501111,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.0160016);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493674,-99) , 
9, 6.92436, 1, 0, 0.506854,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496536,-99) , 
9, 7.18242, 0, 0, 0.499212,-99) , 
7, 0.14276, 0, 0, 0.503154,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479063,-99) , 
9, -1.18902, 0, 0, 0.497544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462272,-99) , 
7, -0.153032, 1, 0, 0.491454,-99) , 
9, 0.222023, 0, 0, 0.500912,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.018537);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.517118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488561,-99) , 
8, 13.7178, 1, 0, 0.502221,-99) , 
7, -1.57142, 1, 0, 0.503127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471801,-99) , 
9, -0.978376, 0, 0, 0.505391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460741,-99) , 
6, -951.203, 0, 0, 0.480303,-99) , 
8, -2.47841, 1, 0, 0.491625,-99) , 
9, 0.0238724, 0, 0, 0.501306,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0160771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 17.8879, 1, 1, 0.513248,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472714,-99) , 
9, -1.18158, 0, 0, 0.511331,-99) , 
NN(
0, 
0, 
-1, 0.89224, 0, -1, 0.494625,-99) , 
8, -2.5766, 1, 0, 0.495767,-99) , 
9, 8.96386, 0, 0, 0.497126,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0105243);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 17.742, 1, 1, 0.512886,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499008,-99) , 
8, -1.02525, 1, 0, 0.501198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471004,-99) , 
8, -2.98433, 1, 0, 0.488174,-99) , 
9, -0.538365, 0, 0, 0.499997,-99) , 
9, 8.74472, 0, 0, 0.501042,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0173615);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.7542, 1, 1, 0.509414,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445127,-99) , 
9, 3.50333, 1, 0, 0.500501,-99) , 
8, 2.74094, 0, 0, 0.50303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509836,-99) , 
NN(
0, 
0, 
-1, -951.286, 0, -1, 0.482969,-99) , 
8, -2.60616, 1, 0, 0.492499,-99) , 
9, 0.0997583, 0, 0, 0.501243,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0156275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522903,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490773,-99) , 
9, 0.678183, 0, 0, 0.500435,-99) , 
7, -1.85716, 1, 0, 0.501736,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47988,-99) , 
0, 0.502716, 1, 0, 0.503338,-99) , 
NN(
0, 
0, 
-1, -0.142901, 0, -1, 0.476461,-99) , 
0, 0.496185, 0, 0, 0.492767,-99) , 
4, 0.999524, 0, 0, 0.500316,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.00842279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528255,-99) , 
NN(
0, 
0, 
-1, 0.99966, 0, -1, 0.498113,-99) , 
3, 9.10265, 0, 0, 0.499528,-99) , 
NN(
0, 
0, 
-1, -0.999979, 0, -1, 0.489972,-99) , 
4, 0.999524, 0, 0, 0.498024,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0168198);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494822,-99) , 
4, 0.999983, 0, 0, 0.500701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461667,-99) , 
4, 0.999637, 0, 0, 0.499543,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516144,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492465,-99) , 
8, -1.81559, 1, 0, 0.497058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464855,-99) , 
7, -1.00015, 0, 0, 0.491376,-99) , 
4, 0.999524, 0, 0, 0.498263,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.00720012);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.214466, 1, 1, 0.502988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482072,-99) , 
3, 9.36896, 1, 0, 0.502132,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.0096902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.76304, 1, 1, 0.519493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498279,-99) , 
8, -0.110428, 1, 0, 0.511623,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48714,-99) , 
6, 0.525285, 1, 0, 0.499207,-99) , 
NN(
0, 
0, 
-1, 12.4616, 0, -1, 0.482673,-99) , 
8, 11.2629, 1, 0, 0.497808,-99) , 
7, -1.57143, 1, 0, 0.499063,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0136975);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467841,-99) , 
7, -0.758523, 1, 0, 0.496751,-99) , 
9, -0.0663277, 0, 0, 0.508206,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524827,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499117,-99) , 
0, 0.505709, 0, 0, 0.499986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472277,-99) , 
4, 0.998096, 0, 0, 0.498933,-99) , 
8, -1.66992, 1, 0, 0.50057,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.00648049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518224,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499836,-99) , 
0, 0.503804, 0, 0, 0.501279,-99) , 
NN(
0, 
0, 
-1, 4.48659, 1, -1, 0.49222,-99) , 
4, 0.999728, 0, 0, 0.499623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482539,-99) , 
4, 0.997143, 0, 0, 0.499015,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0060514);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497588,-99) , 
7, -0.14261, 0, 0, 0.51838,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521505,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499391,-99) , 
2, 0.275443, 0, 0, 0.50033,-99) , 
2, -0.214308, 1, 0, 0.501377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485645,-99) , 
3, 9.79006, 1, 0, 0.500811,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.00649987);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481944,-99) , 
8, 7.95354, 1, 0, 0.500859,-99) , 
9, 8.74619, 0, 0, 0.501551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486387,-99) , 
8, 18.501, 1, 0, 0.500919,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.00991952);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493163,-99) , 
9, 0.222023, 0, 0, 0.501056,-99) , 
4, 0.996667, 1, 0, 0.501881,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48138,-99) , 
3, 9.13827, 1, 0, 0.500977,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0119246);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489499,-99) , 
9, 6.22116, 1, 0, 0.508074,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496747,-99) , 
8, -0.759808, 1, 0, 0.500195,-99) , 
7, 0.99993, 0, 0, 0.501565,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479633,-99) , 
0, 0.489519, 0, 0, 0.501009,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0111997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.25848, 1, 1, 0.517266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466493,-99) , 
7, -2.02041, 0, 0, 0.499447,-99) , 
6, -949.96, 0, 0, 0.504644,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476126,-99) , 
4, 0.997619, 0, 0, 0.499238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476072,-99) , 
9, 0.00656612, 0, 0, 0.497443,-99) , 
7, -0.714303, 1, 0, 0.499419,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.012708);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520412,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471007,-99) , 
7, 1.5303, 1, 0, 0.500301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490743,-99) , 
7, 1.77546, 0, 0, 0.494119,-99) , 
9, 2.71887, 1, 0, 0.498102,-99) , 
7, -2.14286, 1, 0, 0.498844,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.00879947);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14285, 1, 1, 0.501372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457398,-99) , 
4, 0.999637, 0, 0, 0.500043,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469748,-99) , 
0, 0.501809, 1, 0, 0.492454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465879,-99) , 
0, 0.492376, 0, 0, 0.487691,-99) , 
4, 0.999524, 0, 0, 0.498115,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.013577);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497227,-99) , 
8, -1.96752, 1, 0, 0.500972,-99) , 
NN(
0, 
0, 
-1, 0.315635, 0, -1, 0.49309,-99) , 
7, -0.428593, 1, 0, 0.495969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47347,-99) , 
2, -0.357021, 0, 0, 0.495392,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.0145852);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.522383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495157,-99) , 
9, 7.91477, 0, 0, 0.503609,-99) , 
9, 4.86591, 1, 0, 0.508535,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496388,-99) , 
8, 0.823035, 0, 0, 0.498487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471178,-99) , 
9, 3.34316, 1, 0, 0.497294,-99) , 
8, 2.38183, 0, 0, 0.500132,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.013003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.82137, 1, 1, 0.509284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49237,-99) , 
7, -0.71438, 0, 0, 0.50619,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536616,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497423,-99) , 
8, -2.43175, 1, 0, 0.499655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473625,-99) , 
9, -1.08484, 0, 0, 0.498295,-99) , 
8, 2.32414, 0, 0, 0.5003,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.00968771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.53418, 0, 1, 0.518151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496591,-99) , 
8, 15.5957, 1, 0, 0.510854,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499948,-99) , 
8, 2.58409, 0, 0, 0.50189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467929,-99) , 
9, 4.69543, 1, 0, 0.50044,-99) , 
8, 5.29659, 0, 0, 0.502094,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0124807);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.496185, 0, 1, 0.513773,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485487,-99) , 
8, 11.281, 1, 0, 0.501972,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47477,-99) , 
9, -0.71111, 0, 0, 0.50075,-99) , 
7, -1.57143, 1, 0, 0.501942,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0107418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527888,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499256,-99) , 
9, 12.6356, 0, 0, 0.500334,-99) , 
3, 9.11814, 0, 0, 0.501609,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472001,-99) , 
0, 0.5019, 1, 0, 0.498949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445752,-99) , 
3, 4.63285, 1, 0, 0.490339,-99) , 
4, 0.999524, 0, 0, 0.499842,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.0113735);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.96333, 0, 1, 0.503639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475419,-99) , 
4, 0.99932, 0, 0, 0.502799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493061,-99) , 
7, -0.143196, 0, 0, 0.50433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461737,-99) , 
8, 0.157789, 1, 0, 0.492851,-99) , 
4, 0.999048, 0, 0, 0.501791,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.0155085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.77645, 0, 1, 0.508212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480995,-99) , 
4, 0.999048, 0, 0, 0.505754,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475658,-99) , 
7, 1.93876, 1, 0, 0.50209,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483428,-99) , 
9, 2.56809, 0, 0, 0.492027,-99) , 
6, -949.024, 1, 0, 0.498273,-99) , 
7, -0.714269, 1, 0, 0.500341,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.00729008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520476,-99) , 
NN(
0, 
0, 
-1, -0.0260821, 0, -1, 0.497651,-99) , 
1, 0.023789, 0, 0, 0.498365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479292,-99) , 
4, 0.997619, 0, 0, 0.497583,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.00934704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493135,-99) , 
4, 0.999521, 0, 0, 0.50966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498702,-99) , 
0, 0.499995, 0, 0, 0.505012,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497101,-99) , 
7, -1.57143, 1, 0, 0.498066,-99) , 
2, -0.0510712, 1, 0, 0.499196,-99) , 
2, -0.214324, 1, 0, 0.499856,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0144603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473676,-99) , 
9, 2.87218, 1, 0, 0.501505,-99) , 
8, 1.72126, 0, 0, 0.502883,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487826,-99) , 
9, 6.10191, 0, 0, 0.500059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479887,-99) , 
6, -951.247, 0, 0, 0.489488,-99) , 
7, 0.428417, 1, 0, 0.495091,-99) , 
9, 3.53499, 1, 0, 0.500853,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.0168142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.142679, 1, 1, 0.51215,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504065,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47057,-99) , 
7, -0.135126, 0, 0, 0.492562,-99) , 
6, -44.0978, 1, 0, 0.504613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493952,-99) , 
9, 1.05461, 0, 0, 0.500016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469054,-99) , 
9, 3.3134, 1, 0, 0.498711,-99) , 
8, 2.29227, 0, 0, 0.500232,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0135083);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487706,-99) , 
7, -1, 0, 0, 0.508844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495995,-99) , 
7, -1.85714, 1, 0, 0.497438,-99) , 
4, 0.999524, 1, 0, 0.499256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483407,-99) , 
3, 9.10265, 1, 0, 0.498549,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0154864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497752,-99) , 
9, 0.630799, 0, 0, 0.504163,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492965,-99) , 
9, 8.32985, 0, 0, 0.496569,-99) , 
9, 1.95822, 1, 0, 0.500931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451427,-99) , 
7, 1.69384, 1, 0, 0.47648,-99) , 
8, 1.04642, 0, 0, 0.488541,-99) , 
7, 1.28564, 1, 0, 0.499509,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0106448);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -2.14286, 1, 1, 0.503429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509575,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479645,-99) , 
8, 0.340507, 1, 0, 0.500924,-99) , 
NN(
0, 
0, 
-1, 0.492512, 0, -1, 0.480256,-99) , 
0, 0.496185, 0, 0, 0.492882,-99) , 
4, 0.999524, 0, 0, 0.501766,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0122517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497029,-99) , 
0, 0.496185, 1, 0, 0.499831,-99) , 
7, -2.14285, 1, 0, 0.500674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49029,-99) , 
8, -1.69613, 1, 0, 0.4986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476576,-99) , 
8, 0.386346, 1, 0, 0.49236,-99) , 
4, 0.999524, 0, 0, 0.499371,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.00740226);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.96429, 1, 1, 0.507845,-99) , 
NN(
0, 
0, 
-1, 3.08346, 1, -1, 0.498169,-99) , 
8, 1.94663, 0, 0, 0.500225,-99) , 
NN(
0, 
0, 
-1, 11.1874, 0, -1, 0.489969,-99) , 
8, 10.5209, 1, 0, 0.499346,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0107128);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.28114, 1, 1, 0.503525,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474411,-99) , 
9, -1.20304, 0, 0, 0.502544,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.478932,-99) , 
8, 13.6293, 1, 0, 0.501015,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.00944706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.336766, 0, 1, 0.514844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497345,-99) , 
2, -0.112132, 1, 0, 0.498978,-99) , 
2, 0.214337, 0, 0, 0.499922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482912,-99) , 
3, 9.79006, 1, 0, 0.49932,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00602426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.72995, 0, 1, 0.501574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488567,-99) , 
8, 13.5405, 1, 0, 0.500724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477847,-99) , 
3, 9.42256, 1, 0, 0.499813,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.00808135);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499081,-99) , 
8, -1.20333, 1, 0, 0.501456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468019,-99) , 
1, -0.0269246, 0, 0, 0.500581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481751,-99) , 
1, 0.0228582, 1, 0, 0.499978,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0112911);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498627,-99) , 
9, 0.80792, 0, 0, 0.504481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485723,-99) , 
7, -0.687129, 0, 0, 0.497474,-99) , 
8, -0.952944, 1, 0, 0.499696,-99) , 
7, 1.85706, 0, 0, 0.500524,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0112538);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515647,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496869,-99) , 
8, -1.36942, 1, 0, 0.499755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478872,-99) , 
8, 10.4238, 1, 0, 0.49894,-99) , 
9, 11.2502, 0, 0, 0.49977,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00676279);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.214361, 1, 1, 0.502169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47563,-99) , 
3, 7.60556, 1, 0, 0.501291,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485377,-99) , 
3, 9.3665, 1, 0, 0.500641,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.013411);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427401, 1, 1, 0.51603,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485969,-99) , 
9, 10.3419, 0, 0, 0.497908,-99) , 
8, 8.7892, 1, 0, 0.505891,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497065,-99) , 
8, 1.82178, 0, 0, 0.498833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477223,-99) , 
9, 3.9443, 1, 0, 0.497542,-99) , 
8, 4.22601, 0, 0, 0.499092,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.00851481);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.98765, 0, 1, 0.502529,-99) , 
NN(
0, 
0, 
-1, 4.16438, 1, -1, 0.492344,-99) , 
4, 0.999773, 0, 0, 0.500498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47944,-99) , 
4, 0.997619, 0, 0, 0.499624,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00718718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517576,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477117,-99) , 
9, -0.656906, 0, 0, 0.500506,-99) , 
8, -2.74297, 1, 0, 0.501437,-99) , 
NN(
0, 
0, 
-1, 11.1874, 0, -1, 0.487983,-99) , 
8, 10.5093, 1, 0, 0.500269,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.00681919);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499486,-99) , 
8, -2.301, 1, 0, 0.501209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476806,-99) , 
9, -1.20238, 0, 0, 0.500382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488782,-99) , 
8, 13.8007, 1, 0, 0.499649,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0120139);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491705,-99) , 
9, -0.43116, 0, 0, 0.504745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492648,-99) , 
9, 8.32993, 0, 0, 0.497953,-99) , 
9, 3.81661, 1, 0, 0.503107,-99) , 
NN(
0, 
0, 
-1, -1.28572, 0, -1, 0.495918,-99) , 
0, 0.496185, 0, 0, 0.500794,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.00764812);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499756,-99) , 
2, 0.0718969, 0, 0, 0.501085,-99) , 
4, 0.997619, 1, 0, 0.502147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495347,-99) , 
2, 0.0724844, 1, 0, 0.503527,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48389,-99) , 
8, 1.41471, 0, 0, 0.489285,-99) , 
0, 0.499043, 0, 0, 0.496003,-99) , 
3, 4.741, 1, 0, 0.500951,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0124174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.410623, 0, 1, 0.516898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477181,-99) , 
7, -1.66669, 0, 0, 0.493046,-99) , 
8, -0.0801467, 1, 0, 0.507732,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494657,-99) , 
9, 4.46563, 1, 0, 0.500587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478984,-99) , 
9, -0.28971, 0, 0, 0.49927,-99) , 
7, -1.00003, 1, 0, 0.500957,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.00990451);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492457,-99) , 
9, 1.31067, 1, 0, 0.505192,-99) , 
NN(
0, 
0, 
-1, 0.191968, 0, -1, 0.497927,-99) , 
7, -0.714321, 1, 0, 0.49995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484747,-99) , 
4, 0.997619, 0, 0, 0.499319,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0162119);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497247,-99) , 
6, -949.96, 0, 0, 0.510336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465168,-99) , 
6, -951.286, 1, 0, 0.493066,-99) , 
8, 0.480477, 1, 0, 0.504561,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517389,-99) , 
NN(
0, 
0, 
-1, 8.37964, 1, -1, 0.496161,-99) , 
9, 10.7948, 0, 0, 0.497586,-99) , 
7, -0.428544, 1, 0, 0.50013,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.00880703);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.97397, 0, 1, 0.502919,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514963,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491474,-99) , 
8, -1.43247, 1, 0, 0.498324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478562,-99) , 
7, -0.999979, 0, 0, 0.494787,-99) , 
4, 0.999524, 0, 0, 0.501644,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.00845647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.10265, 0, 1, 0.503094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483492,-99) , 
4, 0.999252, 0, 0, 0.502073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474326,-99) , 
8, -0.559662, 1, 0, 0.490899,-99) , 
4, 0.998572, 0, 0, 0.501286,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.0128397);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.41086, 1, 1, 0.504182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481647,-99) , 
9, -1.07633, 0, 0, 0.502995,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49204,-99) , 
8, 14.9389, 1, 0, 0.504668,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473012,-99) , 
8, 3.53942, 0, 0, 0.493109,-99) , 
9, 8.04379, 0, 0, 0.497441,-99) , 
9, 3.6968, 1, 0, 0.501615,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0152636);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.33938, 1, 1, 0.512004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472213,-99) , 
7, -0.13605, 0, 0, 0.494825,-99) , 
6, -44.0537, 1, 0, 0.505422,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494408,-99) , 
9, 1.2308, 0, 0, 0.498232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471182,-99) , 
9, 3.10831, 1, 0, 0.496956,-99) , 
8, 1.98359, 0, 0, 0.499303,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0126663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42848, 1, 1, 0.513046,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483001,-99) , 
6, -951.286, 1, 0, 0.50106,-99) , 
8, 8.76045, 1, 0, 0.506301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535945,-99) , 
NN(
0, 
0, 
-1, -0.504052, 0, -1, 0.496252,-99) , 
8, -3.01156, 1, 0, 0.497835,-99) , 
8, 4.19572, 0, 0, 0.499393,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.00608651);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499382,-99) , 
0, 0.506117, 1, 0, 0.51135,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499694,-99) , 
8, 5.64674, 0, 0, 0.500992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47578,-99) , 
9, 3.41895, 1, 0, 0.494549,-99) , 
2, 0.0709919, 1, 0, 0.499866,-99) , 
0, 0.504756, 0, 0, 0.500547,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0145669);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462873,-99) , 
6, -12.1436, 1, 0, 0.490986,-99) , 
9, -0.316972, 0, 0, 0.51023,-99) , 
NN(
NN(
0, 
0, 
-1, -0.143297, 1, 1, 0.512671,-99) , 
NN(
0, 
0, 
-1, 12.2905, 1, -1, 0.497542,-99) , 
5, 0.0238014, 0, 0, 0.498569,-99) , 
8, -1.95516, 1, 0, 0.50012,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.0170762);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499981,-99) , 
9, 0.303892, 0, 0, 0.50901,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471634,-99) , 
7, 0.999594, 1, 0, 0.505229,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497257,-99) , 
6, -951.232, 0, 0, 0.500805,-99) , 
NN(
0, 
0, 
-1, 2.04103, 0, -1, 0.480017,-99) , 
7, -1.00001, 0, 0, 0.497813,-99) , 
8, -0.212002, 1, 0, 0.501102,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0137571);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0164598, 1, 1, 0.508586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496515,-99) , 
0, 0.491425, 1, 0, 0.498902,-99) , 
3, 1.84983, 1, 0, 0.503145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491233,-99) , 
3, 9.14776, 1, 0, 0.502622,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0168965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544268,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455325,-99) , 
7, 0.120035, 1, 0, 0.501331,-99) , 
9, 0.622266, 0, 0, 0.50818,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498361,-99) , 
5, 0.0238027, 0, 0, 0.499684,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.482812,-99) , 
4, 0.999048, 0, 0, 0.498435,-99) , 
8, -1.04251, 1, 0, 0.501215,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0157154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485743,-99) , 
5, 0.00113342, 0, 0, 0.503739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483206,-99) , 
5, 0.0238027, 1, 0, 0.502808,-99) , 
NN(
0, 
0, 
-1, -0.142812, 1, -1, 0.492841,-99) , 
8, 10.5209, 1, 0, 0.501948,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.0119771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.0418, 1, 1, 0.508641,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481654,-99) , 
9, 3.27594, 1, 0, 0.500319,-99) , 
8, 2.38075, 0, 0, 0.502439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48977,-99) , 
3, 2.30834, 1, 0, 0.504044,-99) , 
NN(
0, 
0, 
-1, 1.44242, 1, -1, 0.483551,-99) , 
3, 4.61081, 1, 0, 0.495842,-99) , 
2, 0.0713814, 1, 0, 0.50125,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.0118437);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 16.2894, 1, 1, 0.512187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498252,-99) , 
9, 0.911131, 0, 0, 0.504175,-99) , 
NN(
0, 
0, 
-1, -1.00002, 0, -1, 0.495738,-99) , 
8, -0.68734, 1, 0, 0.498976,-99) , 
9, 8.69058, 0, 0, 0.500062,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.013349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487149,-99) , 
7, -0.430714, 0, 0, 0.52011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499999,-99) , 
8, -3.01975, 1, 0, 0.501425,-99) , 
8, 1.65166, 0, 0, 0.503476,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494607,-99) , 
7, -0.686238, 0, 0, 0.507203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480666,-99) , 
9, 10.4416, 0, 0, 0.486859,-99) , 
7, -0.142147, 1, 0, 0.493443,-99) , 
9, 4.22114, 1, 0, 0.501285,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0110769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49905,-99) , 
0, 0.49809, 1, 0, 0.503633,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470242,-99) , 
0, 0.495234, 0, 0, 0.491887,-99) , 
4, 0.999274, 0, 0, 0.502482,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484279,-99) , 
4, 0.996191, 0, 0, 0.502014,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0130156);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520637,-99) , 
NN(
NN(
0, 
0, 
-1, -949.96, 0, 1, 0.510821,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492392,-99) , 
9, 5.32971, 1, 0, 0.502039,-99) , 
7, -1.14967, 1, 0, 0.503551,-99) , 
7, 1.85712, 0, 0, 0.504314,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0163977);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547699,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49798,-99) , 
9, 3.60587, 1, 0, 0.520775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494104,-99) , 
6, -951.216, 1, 0, 0.503153,-99) , 
7, 1.28582, 0, 0, 0.506586,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473859,-99) , 
7, 1.14253, 1, 0, 0.500892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477236,-99) , 
7, -1.85911, 0, 0, 0.498913,-99) , 
9, 2.13051, 0, 0, 0.502279,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.00917154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532831,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478065,-99) , 
5, 0.0237973, 1, 0, 0.501418,-99) , 
9, 7.99642, 0, 0, 0.502517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49184,-99) , 
8, 14.1303, 1, 0, 0.501862,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.00850108);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509576,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498555,-99) , 
8, 2.57579, 0, 0, 0.500292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477515,-99) , 
8, 9.07272, 1, 0, 0.499294,-99) , 
9, 10.3753, 0, 0, 0.500204,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.00926267);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 4.71296, 1, 1, 0.516573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522824,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498981,-99) , 
2, 0.03078, 0, 0, 0.501708,-99) , 
7, -2.14285, 1, 0, 0.502404,-99) , 
2, -0.214057, 1, 0, 0.503323,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0125001);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524003,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485819,-99) , 
7, 0.714249, 1, 0, 0.503486,-99) , 
9, 5.65416, 1, 0, 0.50717,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498165,-99) , 
2, -0.0722342, 1, 0, 0.50043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479094,-99) , 
3, 9.3814, 1, 0, 0.499568,-99) , 
8, 4.02185, 0, 0, 0.501005,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.00856857);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.30123, 0, 1, 0.50366,-99) , 
NN(
0, 
0, 
-1, 4.49885, 1, -1, 0.49532,-99) , 
4, 0.999819, 0, 0, 0.501829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488287,-99) , 
4, 0.998095, 0, 0, 0.501137,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.00807299);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.76413, 0, 1, 0.503069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484231,-99) , 
5, 0.0237785, 1, 0, 0.502145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489164,-99) , 
8, 16.8354, 1, 0, 0.501518,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0217407);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494197,-99) , 
9, 6.23376, 1, 0, 0.516029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466487,-99) , 
9, 1.58512, 0, 0, 0.507905,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485567,-99) , 
8, 14.8098, 1, 0, 0.507708,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491233,-99) , 
8, -0.539038, 1, 0, 0.497848,-99) , 
9, 6.93894, 0, 0, 0.498907,-99) , 
7, 0.999964, 0, 0, 0.500476,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.00911544);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.84356, 1, 1, 0.512495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498249,-99) , 
7, -2.14284, 1, 0, 0.499234,-99) , 
4, 0.999524, 1, 0, 0.50135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487544,-99) , 
3, 9.11535, 1, 0, 0.500741,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0161014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499801,-99) , 
8, -1.39774, 1, 0, 0.504033,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490273,-99) , 
8, 5.65096, 0, 0, 0.497566,-99) , 
9, 3.58875, 1, 0, 0.501966,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483633,-99) , 
8, -2.21692, 1, 0, 0.50014,-99) , 
NN(
0, 
0, 
-1, -1.49744, 1, -1, 0.479233,-99) , 
9, -0.818529, 0, 0, 0.493911,-99) , 
9, 0.23922, 0, 0, 0.500399,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0143041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492156,-99) , 
9, 6.03228, 1, 0, 0.511757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478796,-99) , 
9, 1.13608, 0, 0, 0.506863,-99) , 
NN(
NN(
0, 
0, 
-1, 7.85391, 0, 1, 0.50172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484897,-99) , 
0, 0.491424, 0, 0, 0.500603,-99) , 
7, 0.42856, 0, 0, 0.502696,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.00816674);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.504757, 0, 1, 0.503328,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477144,-99) , 
9, 0.992693, 0, 0, 0.489718,-99) , 
4, 0.998572, 0, 0, 0.502366,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.00496885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497299,-99) , 
4, 0.999521, 0, 0, 0.510457,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.512496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482242,-99) , 
9, -0.99484, 0, 0, 0.499254,-99) , 
9, 9.49449, 0, 0, 0.500193,-99) , 
2, 0.214212, 0, 0, 0.500863,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0112632);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.38823, 1, 1, 0.502387,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.489072,-99) , 
8, 13.6579, 1, 0, 0.501391,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464037,-99) , 
8, -2.75716, 1, 0, 0.483208,-99) , 
8, -1.97368, 0, 0, 0.489075,-99) , 
9, -0.118879, 0, 0, 0.499704,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0057292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499727,-99) , 
3, 9.10586, 0, 0, 0.501152,-99) , 
NN(
0, 
0, 
-1, 0.267558, 1, -1, 0.490202,-99) , 
4, 0.999365, 0, 0, 0.500003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486186,-99) , 
4, 0.996667, 0, 0, 0.499587,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0118426);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518752,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488874,-99) , 
3, 8.69661, 1, 0, 0.501078,-99) , 
0, 0.505709, 0, 0, 0.501693,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467377,-99) , 
9, -1.24517, 0, 0, 0.502754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467,-99) , 
7, -0.0890963, 1, 0, 0.49624,-99) , 
9, 0.400445, 0, 0, 0.500471,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0109769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498498,-99) , 
8, -1.76305, 1, 0, 0.511729,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498313,-99) , 
8, -0.110428, 1, 0, 0.50685,-99) , 
NN(
0, 
0, 
-1, -0.70049, 0, -1, 0.494856,-99) , 
7, -1.57144, 1, 0, 0.495948,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.00744796);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475833,-99) , 
9, -1.08752, 0, 0, 0.500497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472117,-99) , 
9, 10.6773, 0, 0, 0.490156,-99) , 
8, 9.55885, 1, 0, 0.499497,-99) , 
7, -2.14286, 1, 0, 0.500126,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.00995465);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4971,-99) , 
7, -0.99989, 1, 0, 0.500813,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.495986,-99) , 
6, -948.526, 0, 0, 0.497699,-99) , 
2, 0.356922, 0, 0, 0.498249,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.00658017);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.436338, 0, 1, 0.512894,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500793,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480817,-99) , 
9, -1.01465, 0, 0, 0.499816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475597,-99) , 
8, 8.59019, 1, 0, 0.49887,-99) , 
9, 9.48182, 0, 0, 0.499837,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.00604967);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 1.46379, 0, 1, 0.509557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490532,-99) , 
8, 10.3051, 1, 0, 0.500039,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.492326,-99) , 
0, 0.493328, 0, 0, 0.498989,-99) , 
7, 1.57138, 0, 0, 0.499779,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0122819);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.01509, 1, 1, 0.513404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464461,-99) , 
9, 1.52386, 0, 0, 0.506216,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497519,-99) , 
9, 8.07998, 0, 0, 0.498756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485914,-99) , 
7, 0.809475, 1, 0, 0.49803,-99) , 
7, 0.999955, 0, 0, 0.499458,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.0114515);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.496187, 0, 1, 0.51132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499183,-99) , 
8, 1.00965, 0, 0, 0.502302,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506766,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487142,-99) , 
9, 10.1546, 0, 0, 0.493133,-99) , 
9, 4.51438, 1, 0, 0.500345,-99) , 
7, -1.57144, 1, 0, 0.501341,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0160862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520073,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496861,-99) , 
8, -1.70668, 1, 0, 0.500027,-99) , 
8, 1.57841, 0, 0, 0.501438,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483726,-99) , 
8, 12.4619, 1, 0, 0.502202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506598,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481135,-99) , 
9, 9.39181, 0, 0, 0.487926,-99) , 
7, 0.14272, 1, 0, 0.493918,-99) , 
9, 3.57208, 1, 0, 0.499502,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0100091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498953,-99) , 
8, -1.75374, 1, 0, 0.501201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466825,-99) , 
6, -12.1436, 1, 0, 0.488559,-99) , 
9, -0.534431, 0, 0, 0.500046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485394,-99) , 
8, 14.1303, 1, 0, 0.49914,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0147172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.13404, 1, 1, 0.504552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48348,-99) , 
7, 0.158793, 0, 0, 0.492415,-99) , 
8, 13.4018, 1, 0, 0.503561,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532942,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486026,-99) , 
8, -1.90498, 1, 0, 0.505797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501247,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473022,-99) , 
8, -2.6607, 1, 0, 0.487035,-99) , 
9, -0.311223, 0, 0, 0.49508,-99) , 
9, 0.239737, 0, 0, 0.501914,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.00953611);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.02682, 1, 1, 0.512952,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49782,-99) , 
0, 0.502852, 0, 0, 0.499467,-99) , 
4, 0.999048, 1, 0, 0.500843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48339,-99) , 
3, 9.42577, 1, 0, 0.500156,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0153953);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -1.55212, 1, 1, 0.504765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495871,-99) , 
9, 8.02645, 0, 0, 0.49941,-99) , 
9, 3.46264, 1, 0, 0.503052,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48542,-99) , 
8, -2.15571, 1, 0, 0.506954,-99) , 
NN(
0, 
0, 
-1, -12.1436, 1, -1, 0.482353,-99) , 
9, -0.608132, 0, 0, 0.495806,-99) , 
9, 0.0998317, 0, 0, 0.501811,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.00493401);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499871,-99) , 
2, 0.209566, 0, 0, 0.500577,-99) , 
3, 9.11636, 0, 0, 0.501451,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470512,-99) , 
7, -0.143112, 0, 0, 0.488348,-99) , 
4, 0.998572, 0, 0, 0.500522,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.00848606);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.10265, 0, 1, 0.503038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483328,-99) , 
4, 0.999252, 0, 0, 0.502023,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.489153,-99) , 
4, 0.998572, 0, 0, 0.501113,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.00495174);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518183,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499364,-99) , 
3, 9.10586, 0, 0, 0.500218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484936,-99) , 
4, 0.998821, 0, 0, 0.499683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486986,-99) , 
4, 0.998095, 0, 0, 0.499034,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.010308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.85899, 0, 1, 0.503438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476477,-99) , 
4, 0.999365, 0, 0, 0.502485,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482202,-99) , 
0, 0.499995, 1, 0, 0.496335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469737,-99) , 
8, 0.255932, 1, 0, 0.489389,-99) , 
4, 0.999048, 0, 0, 0.501176,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.00703139);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.512506,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498094,-99) , 
2, 0.27555, 0, 0, 0.498849,-99) , 
2, -0.214147, 1, 0, 0.499631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484413,-99) , 
3, 9.80004, 1, 0, 0.499094,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0120448);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496504,-99) , 
2, -0.0202862, 1, 0, 0.505716,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496887,-99) , 
0, 0.495233, 1, 0, 0.499273,-99) , 
2, -0.00344278, 1, 0, 0.50212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483867,-99) , 
2, -0.357149, 0, 0, 0.501652,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.00923613);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.23788, 1, 1, 0.512096,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462677,-99) , 
9, 3.82803, 1, 0, 0.499866,-99) , 
8, 3.27994, 0, 0, 0.501547,-99) , 
NN(
0, 
0, 
-1, 17.7206, 1, -1, 0.48958,-99) , 
8, 10.3051, 1, 0, 0.50049,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0157606);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488551,-99) , 
9, 6.15413, 1, 0, 0.507983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494123,-99) , 
9, 7.69295, 0, 0, 0.497891,-99) , 
7, 0.714238, 0, 0, 0.501575,-99) , 
NN(
0, 
0, 
-1, 0.784493, 1, -1, 0.494089,-99) , 
9, 1.661, 0, 0, 0.49803,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0115962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49358,-99) , 
3, 5.22614, 1, 0, 0.510497,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511606,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491238,-99) , 
6, -43.6462, 1, 0, 0.50383,-99) , 
NN(
0, 
0, 
-1, -1.85714, 0, -1, 0.49699,-99) , 
8, 2.10924, 0, 0, 0.49886,-99) , 
2, 0.214092, 0, 0, 0.499623,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.00722166);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499528, 1, 1, 0.502801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503432,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496339,-99) , 
8, -0.805258, 1, 0, 0.498755,-99) , 
0, 0.497002, 0, 0, 0.501307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48461,-99) , 
0, 0.490471, 0, 0, 0.5006,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.0129834);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489638,-99) , 
6, 0.525285, 1, 0, 0.502474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480108,-99) , 
7, -2.14284, 0, 0, 0.501621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484461,-99) , 
6, -951.253, 0, 0, 0.491128,-99) , 
7, -0.714274, 1, 0, 0.493175,-99) , 
9, 4.22114, 1, 0, 0.499777,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.0125121);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.55427, 0, 1, 0.502077,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460744,-99) , 
8, -0.383014, 1, 0, 0.487122,-99) , 
7, -1.28572, 0, 0, 0.499837,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495083,-99) , 
0, 0.498089, 1, 0, 0.503426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467367,-99) , 
7, 0.143984, 1, 0, 0.486016,-99) , 
9, 10.011, 0, 0, 0.493242,-99) , 
9, 5.7779, 1, 0, 0.498834,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00699998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523249,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499055,-99) , 
8, -2.23831, 1, 0, 0.500548,-99) , 
9, 8.05079, 0, 0, 0.501308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488025,-99) , 
8, 14.1303, 1, 0, 0.500483,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.00953117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.46529, 1, 1, 0.510687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470164,-99) , 
9, 3.59099, 1, 0, 0.499233,-99) , 
8, 3.46157, 0, 0, 0.501219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486528,-99) , 
8, 18.6657, 1, 0, 0.500621,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.013292);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499259,-99) , 
7, -0.999732, 1, 0, 0.503611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494804,-99) , 
5, 0.0238027, 0, 0, 0.496649,-99) , 
6, -948.705, 0, 0, 0.499106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478701,-99) , 
4, 0.998095, 0, 0, 0.498075,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.00627637);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499122,-99) , 
3, 4.68458, 0, 0, 0.500545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484698,-99) , 
3, 7.49068, 1, 0, 0.499886,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482666,-99) , 
3, 9.79252, 1, 0, 0.499278,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0113954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49994,-99) , 
8, 1.91044, 0, 0, 0.503087,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.496747,-99) , 
7, -0.428571, 0, 0, 0.501277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486283,-99) , 
9, -0.608152, 0, 0, 0.499545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464791,-99) , 
7, -0.229311, 1, 0, 0.493537,-99) , 
9, 0.0998317, 0, 0, 0.499951,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0076628);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522041,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486813,-99) , 
8, 12.268, 1, 0, 0.500563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478802,-99) , 
9, -1.07662, 0, 0, 0.499854,-99) , 
7, -2.14286, 1, 0, 0.500589,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.00581848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.996667, 1, 1, 0.501708,-99) , 
NN(
0, 
0, 
-1, 8.07673, 1, -1, 0.484007,-99) , 
3, 7.02442, 1, 0, 0.500739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485915,-99) , 
3, 9.78684, 1, 0, 0.500202,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0170471);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999998, 0, 1, 0.506909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481781,-99) , 
3, 4.54634, 1, 0, 0.498277,-99) , 
4, 0.999955, 0, 0, 0.50371,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486133,-99) , 
9, 0.999736, 0, 0, 0.502777,-99) , 
NN(
0, 
0, 
-1, 0.0713617, 1, -1, 0.484063,-99) , 
6, -951.236, 0, 0, 0.491229,-99) , 
4, 0.999524, 0, 0, 0.501759,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0105211);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498448,-99) , 
8, -2.27275, 1, 0, 0.500886,-99) , 
NN(
0, 
0, 
-1, -2.93229, 1, -1, 0.485444,-99) , 
9, -0.751439, 0, 0, 0.499812,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473593,-99) , 
9, 11.3371, 0, 0, 0.489533,-99) , 
8, 10.479, 1, 0, 0.498922,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0118994);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525177,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490062,-99) , 
9, -0.46425, 0, 0, 0.501134,-99) , 
8, 1.74725, 0, 0, 0.502288,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495365,-99) , 
8, 9.63421, 1, 0, 0.501714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456842,-99) , 
8, 2.54585, 0, 0, 0.489225,-99) , 
8, 5.33824, 0, 0, 0.496665,-99) , 
9, 3.48287, 1, 0, 0.5008,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.00948487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496614,-99) , 
8, -1.44585, 1, 0, 0.498605,-99) , 
9, 7.56131, 0, 0, 0.499441,-99) , 
NN(
0, 
0, 
-1, 0.148751, 0, -1, 0.490327,-99) , 
8, 13.4466, 1, 0, 0.498839,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.00549648);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 9.10586, 0, 1, 0.502186,-99) , 
NN(
0, 
0, 
-1, 0.996168, 0, -1, 0.486797,-99) , 
4, 0.998095, 0, 0, 0.5014,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0149021);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4927,-99) , 
9, 4.45932, 1, 0, 0.500618,-99) , 
7, -1.85712, 1, 0, 0.501171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509295,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469179,-99) , 
8, -1.95956, 0, 0, 0.478788,-99) , 
8, -3.00633, 1, 0, 0.489745,-99) , 
9, -0.112901, 0, 0, 0.49959,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.00954669);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.606623, 1, 1, 0.515104,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486328,-99) , 
9, -0.353729, 0, 0, 0.499614,-99) , 
NN(
0, 
0, 
-1, 0.0725002, 1, -1, 0.491143,-99) , 
9, 4.18411, 1, 0, 0.497688,-99) , 
7, -1.85714, 1, 0, 0.498683,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0124519);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511183,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49551,-99) , 
8, -3.00447, 1, 0, 0.496524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478255,-99) , 
8, 9.08126, 1, 0, 0.495708,-99) , 
9, 10.3902, 0, 0, 0.496621,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.0120282);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498705,-99) , 
9, 7.91043, 0, 0, 0.500039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486428,-99) , 
8, 13.9654, 1, 0, 0.498969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486624,-99) , 
8, -2.25845, 1, 0, 0.498682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463032,-99) , 
7, -0.279989, 1, 0, 0.490869,-99) , 
9, 0.222023, 0, 0, 0.49743,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0104708);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.88113, 1, 1, 0.515228,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491227,-99) , 
6, -951.232, 1, 0, 0.504059,-99) , 
8, 8.59479, 1, 0, 0.508977,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498162,-99) , 
2, -0.213464, 1, 0, 0.499288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477444,-99) , 
3, 8.97397, 1, 0, 0.498284,-99) , 
8, 4.02185, 0, 0, 0.500315,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0128288);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491259,-99) , 
8, 12.0734, 1, 0, 0.50219,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486756,-99) , 
8, -1.60376, 0, 0, 0.493235,-99) , 
9, 0.23922, 0, 0, 0.500526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483108,-99) , 
4, 0.997619, 0, 0, 0.499806,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.00908992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51493,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471498,-99) , 
8, 9.15454, 1, 0, 0.500794,-99) , 
9, 9.99409, 0, 0, 0.501719,-99) , 
NN(
0, 
0, 
-1, 0.996168, 0, -1, 0.483057,-99) , 
4, 0.998095, 0, 0, 0.500776,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0094428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497454,-99) , 
7, 0.187646, 0, 0, 0.51168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498105,-99) , 
8, 1.68053, 0, 0, 0.500333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479625,-99) , 
5, 0.0237973, 1, 0, 0.499378,-99) , 
9, 9.52684, 0, 0, 0.500237,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0097667);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.4817, 1, 1, 0.509679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470996,-99) , 
9, 3.5966, 1, 0, 0.499421,-99) , 
8, 3.50556, 0, 0, 0.500756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47503,-99) , 
9, 11.1874, 0, 0, 0.492935,-99) , 
8, 10.5209, 1, 0, 0.500076,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0177457);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498088, 1, 1, 0.509357,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495704,-99) , 
9, 0.161415, 0, 0, 0.506454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505067,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49104,-99) , 
6, -948.705, 0, 0, 0.495871,-99) , 
8, -1.53883, 1, 0, 0.498103,-99) , 
9, 9.88145, 0, 0, 0.498834,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.00750609);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0138146, 0, 1, 0.502648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480598,-99) , 
5, 0.0181328, 1, 0, 0.501862,-99) , 
NN(
0, 
0, 
-1, 0.142502, 1, -1, 0.488322,-99) , 
5, 0.0238014, 1, 0, 0.501048,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0101047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489302,-99) , 
8, -0.945835, 1, 0, 0.501646,-99) , 
7, -1.7755, 0, 0, 0.508711,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478781,-99) , 
5, 0.0238027, 1, 0, 0.500617,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473382,-99) , 
7, 0.387181, 0, 0, 0.485492,-99) , 
8, 9.43263, 1, 0, 0.499068,-99) , 
7, -1.57142, 1, 0, 0.499938,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0186678);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485317,-99) , 
9, 6.39646, 1, 0, 0.507505,-99) , 
NN(
0, 
0, 
-1, 0.999525, 0, -1, 0.496392,-99) , 
7, 0.714458, 0, 0, 0.500483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492754,-99) , 
9, 1.00456, 0, 0, 0.497838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459792,-99) , 
7, 0.914849, 1, 0, 0.494584,-99) , 
9, 1.77483, 0, 0, 0.497566,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.00766722);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515205,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498311,-99) , 
8, -2.17348, 1, 0, 0.499909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476806,-99) , 
1, 0.0260561, 1, 0, 0.499289,-99) , 
1, -0.0238151, 1, 0, 0.499793,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0148783);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508063,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493096,-99) , 
9, 8.95013, 0, 0, 0.499186,-99) , 
9, 4.7542, 1, 0, 0.50429,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493482,-99) , 
8, -0.5756, 1, 0, 0.498844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464678,-99) , 
9, 3.51241, 1, 0, 0.497483,-99) , 
8, 2.63971, 0, 0, 0.499115,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.01379);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478705,-99) , 
9, 2.34039, 1, 0, 0.501382,-99) , 
9, 6.00677, 0, 0, 0.503293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497236,-99) , 
9, 10.7621, 0, 0, 0.498569,-99) , 
NN(
0, 
0, 
-1, -0.005981, 1, -1, 0.479991,-99) , 
9, 0.315635, 0, 0, 0.496719,-99) , 
7, -0.428609, 1, 0, 0.499128,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0110321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427728, 1, 1, 0.519721,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483581,-99) , 
6, -43.9206, 1, 0, 0.498921,-99) , 
8, 8.7892, 1, 0, 0.50803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498517,-99) , 
8, 1.82282, 0, 0, 0.500127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482238,-99) , 
9, 3.9949, 1, 0, 0.499115,-99) , 
8, 4.22601, 0, 0, 0.50074,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.00613661);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522499,-99) , 
NN(
NN(
0, 
0, 
-1, 8.31364, 0, 1, 0.501526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483617,-99) , 
8, 14.7397, 1, 0, 0.50047,-99) , 
7, -2.1428, 1, 0, 0.5012,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.00835547);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.366393, 1, 1, 0.503223,-99) , 
NN(
0, 
0, 
-1, 0.24935, 1, -1, 0.494469,-99) , 
9, 0.706119, 0, 0, 0.500643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490413,-99) , 
8, 16.8354, 1, 0, 0.50015,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.00506247);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499874,-99) , 
1, -0.0119988, 1, 0, 0.500983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472815,-99) , 
1, -0.0262353, 0, 0, 0.500215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477766,-99) , 
1, 0.0235931, 1, 0, 0.499547,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0127697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.286, 0, 1, 0.508354,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471543,-99) , 
9, -1.2384, 0, 0, 0.488427,-99) , 
9, -0.678671, 0, 0, 0.504753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487256,-99) , 
7, -0.265315, 0, 0, 0.501013,-99) , 
NN(
0, 
0, 
-1, -0.0135578, 1, -1, 0.480147,-99) , 
9, 0.339136, 0, 0, 0.498875,-99) , 
7, -0.428582, 1, 0, 0.501031,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.00914032);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525119,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496999,-99) , 
2, 0.209409, 0, 0, 0.497674,-99) , 
4, 0.997143, 1, 0, 0.49868,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485281,-99) , 
3, 9.43526, 1, 0, 0.498156,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00648359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -949.657, 0, 1, 0.504714,-99) , 
NN(
0, 
0, 
-1, 11.916, 1, -1, 0.497961,-99) , 
7, -0.714289, 1, 0, 0.499824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478614,-99) , 
0, 0.489519, 0, 0, 0.499294,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.00883488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484291,-99) , 
3, 2.89353, 1, 0, 0.515917,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498619,-99) , 
0, 0.504757, 0, 0, 0.499307,-99) , 
4, 0.999048, 1, 0, 0.500995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490244,-99) , 
3, 9.78684, 1, 0, 0.500616,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.021612);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0478875, 1, 1, 0.509628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493327,-99) , 
0, 0.491425, 1, 0, 0.494798,-99) , 
3, 1.60893, 1, 0, 0.501517,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485904,-99) , 
4, 0.999977, 0, 0, 0.500603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459309,-99) , 
4, 0.999524, 0, 0, 0.495309,-99) , 
3, 4.56023, 1, 0, 0.500228,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00913475);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -2.14287, 1, 1, 0.503521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485149,-99) , 
0, 0.505165, 1, 0, 0.502618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484719,-99) , 
0, 0.490471, 0, 0, 0.501837,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0118168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.558402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486177,-99) , 
9, -0.844199, 0, 0, 0.514152,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488738,-99) , 
9, 0.518632, 0, 0, 0.498857,-99) , 
8, -2.36612, 1, 0, 0.500216,-99) , 
NN(
0, 
0, 
-1, 0.142915, 0, -1, 0.489923,-99) , 
8, 13.4466, 1, 0, 0.499534,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.00879026);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515879,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493519,-99) , 
9, 5.62307, 1, 0, 0.499106,-99) , 
7, -1.85715, 1, 0, 0.499662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519392,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500833,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466819,-99) , 
9, -0.475236, 0, 0, 0.490605,-99) , 
8, -2.99624, 1, 0, 0.494925,-99) , 
9, 0.413866, 0, 0, 0.498605,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.00979008);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.429076, 1, 1, 0.509187,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474726,-99) , 
7, -0.142897, 0, 0, 0.49482,-99) , 
6, -40.0028, 1, 0, 0.503683,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476622,-99) , 
9, -1.23558, 0, 0, 0.500004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475752,-99) , 
9, 3.25707, 1, 0, 0.498852,-99) , 
8, 2.29227, 0, 0, 0.500093,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0135037);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.168572, 1, 1, 0.517611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496473,-99) , 
8, -1.71153, 1, 0, 0.499267,-99) , 
9, 7.70076, 0, 0, 0.500868,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477747,-99) , 
9, 7.09872, 1, 0, 0.497622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4649,-99) , 
9, 1.2464, 0, 0, 0.493392,-99) , 
7, 0.714272, 1, 0, 0.499022,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.00457022);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487246,-99) , 
8, 16.8729, 1, 0, 0.499651,-99) , 
3, 8.84252, 0, 0, 0.500342,-99) , 
NN(
0, 
0, 
-1, 0.656275, 1, -1, 0.484621,-99) , 
4, 0.998095, 0, 0, 0.499538,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.007564);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501976,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495579,-99) , 
6, -43.3991, 1, 0, 0.499637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484034,-99) , 
7, -1.65306, 0, 0, 0.498882,-99) , 
7, -2.14285, 1, 0, 0.499313,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.013267);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521566,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496436,-99) , 
0, 0.490471, 1, 0, 0.497198,-99) , 
3, 8.96012, 0, 0, 0.498376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483313,-99) , 
7, 0.142569, 0, 0, 0.498683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467038,-99) , 
8, 0.157789, 1, 0, 0.490029,-99) , 
4, 0.999048, 0, 0, 0.497539,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.00697736);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51281,-99) , 
NN(
0, 
0, 
-1, 0.795881, 1, -1, 0.497645,-99) , 
9, 11.1589, 0, 0, 0.498425,-99) , 
7, -2.14285, 1, 0, 0.499169,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.00748677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525362,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498563,-99) , 
3, 0.548041, 1, 0, 0.499724,-99) , 
4, 0.997619, 1, 0, 0.500843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489178,-99) , 
3, 9.13506, 1, 0, 0.500339,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.00699365);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.997619, 1, 1, 0.503306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491897,-99) , 
3, 9.43526, 1, 0, 0.502851,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.00407041);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.97397, 0, 1, 0.501117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480974,-99) , 
4, 0.998367, 0, 0, 0.500582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485973,-99) , 
4, 0.997143, 0, 0, 0.500062,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0102132);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498068,-99) , 
8, 13.9607, 1, 0, 0.508427,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498027,-99) , 
9, -0.0339087, 0, 0, 0.508109,-99) , 
NN(
0, 
0, 
-1, -1, 0, -1, 0.497203,-99) , 
8, -1.59265, 1, 0, 0.499479,-99) , 
9, 8.06315, 0, 0, 0.500309,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0104414);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497171,-99) , 
4, 0.999909, 1, 0, 0.500317,-99) , 
3, 9.11337, 0, 0, 0.501174,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487214,-99) , 
4, 0.998095, 0, 0, 0.500466,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0158096);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481326,-99) , 
7, -2.04756, 0, 0, 0.503598,-99) , 
6, -951.265, 0, 0, 0.510994,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506328,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496029,-99) , 
8, 1.03659, 0, 0, 0.500231,-99) , 
4, 0.997619, 1, 0, 0.501117,-99) , 
7, -0.99996, 1, 0, 0.503081,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.0211367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469784,-99) , 
8, 8.76863, 1, 0, 0.503466,-99) , 
9, 11.2844, 0, 0, 0.50462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48858,-99) , 
6, -949.113, 0, 0, 0.499539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457968,-99) , 
6, -44.719, 1, 0, 0.48933,-99) , 
8, 0.54344, 1, 0, 0.496175,-99) , 
7, -0.428599, 0, 0, 0.501539,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0162187);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498271,-99) , 
7, -0.714311, 1, 0, 0.505923,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487119,-99) , 
7, -0.714312, 0, 0, 0.496838,-99) , 
8, -0.122439, 1, 0, 0.501632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488612,-99) , 
9, 4.36457, 1, 0, 0.498098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459555,-99) , 
9, 1.09667, 0, 0, 0.492802,-99) , 
7, 0.428538, 1, 0, 0.498679,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0103732);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.148211, 1, 1, 0.513026,-99) , 
NN(
NN(
0, 
0, 
-1, 1.3352, 0, 1, 0.505071,-99) , 
NN(
0, 
0, 
-1, 4.40766, 1, -1, 0.495824,-99) , 
8, -0.47612, 1, 0, 0.49977,-99) , 
9, 9.08228, 0, 0, 0.500754,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0177281);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53061,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48558,-99) , 
8, 0.369821, 1, 0, 0.501061,-99) , 
9, 6.93894, 0, 0, 0.50348,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502824,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49185,-99) , 
9, 3.78575, 1, 0, 0.49901,-99) , 
NN(
0, 
0, 
-1, 0.49809, 0, -1, 0.479238,-99) , 
9, 0.592092, 0, 0, 0.496714,-99) , 
7, -0.14291, 1, 0, 0.499847,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.00913316);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47704,-99) , 
4, 0.999932, 0, 0, 0.511637,-99) , 
NN(
0, 
0, 
-1, -0.603385, 0, -1, 0.498492,-99) , 
7, -1.57138, 1, 0, 0.499701,-99) , 
NN(
0, 
0, 
-1, 0.996939, 1, -1, 0.485746,-99) , 
4, 0.998572, 0, 0, 0.498728,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.00542086);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498089, 1, 1, 0.514648,-99) , 
NN(
0, 
0, 
-1, 8.6646, 1, -1, 0.498126,-99) , 
9, 9.81898, 0, 0, 0.499208,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0143811);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478591,-99) , 
9, -1.1001, 0, 0, 0.503187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481777,-99) , 
8, 16.8729, 1, 0, 0.50223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4839,-99) , 
9, 7.59455, 1, 0, 0.499834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458464,-99) , 
9, 1.35194, 0, 0, 0.493656,-99) , 
7, 0.714268, 1, 0, 0.500125,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.00993341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525107,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498333,-99) , 
8, 17.861, 1, 0, 0.509982,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497068,-99) , 
8, -2.00949, 1, 0, 0.498632,-99) , 
9, 8.96386, 0, 0, 0.499498,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, -1, 0.48607,-99) , 
0, 0.491424, 0, 0, 0.498594,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0073521);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498543,-99) , 
0, 0.496458, 0, 0, 0.514467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49944,-99) , 
7, -1.85713, 1, 0, 0.500103,-99) , 
4, 0.998572, 1, 0, 0.50107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493519,-99) , 
2, 0.0642971, 0, 0, 0.498897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484186,-99) , 
4, 0.999524, 0, 0, 0.495919,-99) , 
0, 0.5019, 1, 0, 0.50014,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0114164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500686, 0, 1, 0.511147,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494704,-99) , 
2, -0.0711334, 1, 0, 0.499835,-99) , 
0, 0.501809, 1, 0, 0.504586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514741,-99) , 
NN(
0, 
0, 
-1, 1.85705, 1, -1, 0.496524,-99) , 
9, 11.3746, 0, 0, 0.497403,-99) , 
0, 0.499995, 0, 0, 0.499708,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.011638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.52312, 0, 1, 0.512869,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487319,-99) , 
9, 13.294, 0, 0, 0.497123,-99) , 
8, 13.3524, 1, 0, 0.5072,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481707,-99) , 
9, -1.27128, 0, 0, 0.501184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459058,-99) , 
8, 1.99153, 0, 0, 0.487456,-99) , 
9, 3.03516, 1, 0, 0.499105,-99) , 
8, 4.22601, 0, 0, 0.500593,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.00625557);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.502124,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486875,-99) , 
3, 9.3665, 1, 0, 0.501503,-99) , 
NN(
0, 
0, 
-1, -0.405615, 1, -1, 0.491071,-99) , 
7, -1.57142, 0, 0, 0.500591,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.0130055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427801, 1, 1, 0.517369,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486711,-99) , 
9, 10.3327, 0, 0, 0.499391,-99) , 
8, 8.85341, 1, 0, 0.507281,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497568,-99) , 
8, 1.89045, 0, 0, 0.499134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475464,-99) , 
9, 3.96164, 1, 0, 0.497687,-99) , 
8, 4.29333, 0, 0, 0.499438,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.00763704);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49889,-99) , 
8, 2.83343, 0, 0, 0.500393,-99) , 
9, 8.08938, 0, 0, 0.501522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488893,-99) , 
8, 14.362, 1, 0, 0.500745,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0086833);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517573,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481942,-99) , 
9, -1.07662, 0, 0, 0.502377,-99) , 
7, -2.14285, 1, 0, 0.502878,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482764,-99) , 
0, 0.489519, 0, 0, 0.502371,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.00825586);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513669,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49885,-99) , 
9, 4.96883, 1, 0, 0.502686,-99) , 
NN(
0, 
0, 
-1, 3.36021, 1, -1, 0.496295,-99) , 
8, 2.43801, 0, 0, 0.497906,-99) , 
2, -0.357167, 1, 0, 0.498319,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0162367);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493354,-99) , 
8, 12.6635, 1, 0, 0.513204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487093,-99) , 
9, 2.81051, 1, 0, 0.501254,-99) , 
9, 6.02477, 0, 0, 0.502749,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474525,-99) , 
7, 2.12919, 1, 0, 0.500589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473916,-99) , 
9, 1.40049, 0, 0, 0.496224,-99) , 
7, 0.714244, 1, 0, 0.501134,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.00622154);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526652,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487814,-99) , 
3, 7.20719, 1, 0, 0.500915,-99) , 
4, 0.996191, 1, 0, 0.501612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487066,-99) , 
3, 9.42256, 1, 0, 0.501028,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0144639);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49652,-99) , 
4, 0.999994, 0, 0, 0.501187,-99) , 
NN(
0, 
0, 
-1, -0.0710487, 0, -1, 0.491995,-99) , 
4, 0.999864, 0, 0, 0.498954,-99) , 
NN(
0, 
0, 
-1, -0.142935, 0, -1, 0.483543,-99) , 
4, 0.998572, 0, 0, 0.497886,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.00677664);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.36907, 0, 1, 0.501252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470856,-99) , 
4, 0.999637, 0, 0, 0.500327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502496,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484409,-99) , 
7, -0.714405, 0, 0, 0.497984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468322,-99) , 
0, 0.502852, 1, 0, 0.492767,-99) , 
4, 0.999524, 0, 0, 0.499143,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.00979947);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498643,-99) , 
8, 16.7302, 1, 0, 0.510684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490524,-99) , 
2, 0.0707719, 1, 0, 0.507195,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501175,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479455,-99) , 
3, 9.80504, 1, 0, 0.5004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472893,-99) , 
9, 3.69554, 1, 0, 0.498773,-99) , 
8, 3.59321, 0, 0, 0.500468,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.00717788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.210709, 0, 1, 0.501114,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466696,-99) , 
4, 0.999637, 0, 0, 0.500085,-99) , 
NN(
0, 
0, 
-1, 0.495233, 0, -1, 0.488168,-99) , 
4, 0.999524, 0, 0, 0.498236,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.00914902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481969,-99) , 
4, 0.999909, 0, 0, 0.509391,-99) , 
NN(
0, 
0, 
-1, -0.749053, 0, -1, 0.497618,-99) , 
7, -1.57136, 1, 0, 0.498698,-99) , 
NN(
0, 
0, 
-1, 0.623764, 1, -1, 0.485288,-99) , 
4, 0.998095, 0, 0, 0.498022,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0106526);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481881,-99) , 
4, 0.999274, 0, 0, 0.503497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49659,-99) , 
0, 0.504621, 0, 0, 0.497604,-99) , 
0, 0.497138, 1, 0, 0.499993,-99) , 
NN(
0, 
0, 
-1, 0.996168, 0, -1, 0.485967,-99) , 
4, 0.998095, 0, 0, 0.499278,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.00692441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -951.227, 0, 1, 0.514602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49885,-99) , 
5, 0.0238027, 0, 0, 0.499771,-99) , 
4, 0.999048, 1, 0, 0.501271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489558,-99) , 
3, 9.78684, 1, 0, 0.500857,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0167008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509662,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495103,-99) , 
6, -949.13, 1, 0, 0.504246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481605,-99) , 
8, -0.275075, 1, 0, 0.494928,-99) , 
7, -1.4082, 0, 0, 0.502844,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488706,-99) , 
9, 5.54918, 1, 0, 0.4996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463869,-99) , 
9, 1.20071, 0, 0, 0.49539,-99) , 
7, 0.714195, 1, 0, 0.501007,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0184194);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 0, 1, 0.512398,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496519,-99) , 
8, -0.670335, 1, 0, 0.500483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488959,-99) , 
8, -3.02366, 1, 0, 0.492411,-99) , 
9, 1.04038, 0, 0, 0.497495,-99) , 
9, 9.99987, 0, 0, 0.498431,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0136665);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 6.84028, 1, 1, 0.519274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475381,-99) , 
9, 4.4474, 1, 0, 0.50302,-99) , 
8, 5.02098, 0, 0, 0.504411,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478668,-99) , 
9, 11.3371, 0, 0, 0.491204,-99) , 
8, 10.479, 1, 0, 0.503279,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0126697);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501899, 0, 1, 0.509227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491512,-99) , 
2, -0.214344, 0, 0, 0.506259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495905,-99) , 
2, 0.0325172, 0, 0, 0.498846,-99) , 
2, -0.202534, 1, 0, 0.499647,-99) , 
3, 4.741, 0, 0, 0.500936,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0124291);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559905,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490237,-99) , 
9, -0.32774, 0, 0, 0.508076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497106,-99) , 
6, -949.024, 0, 0, 0.499686,-99) , 
8, -1.99939, 1, 0, 0.500755,-99) , 
NN(
0, 
0, 
-1, 0.490335, 1, -1, 0.489829,-99) , 
0, 0.491424, 0, 0, 0.500029,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0131055);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.28253, 0, 1, 0.505852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492619,-99) , 
6, -949.024, 1, 0, 0.499995,-99) , 
7, -0.142901, 1, 0, 0.502715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478648,-99) , 
4, 0.999864, 0, 0, 0.499299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48543,-99) , 
4, 0.999524, 0, 0, 0.496028,-99) , 
0, 0.494281, 0, 0, 0.501466,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0106004);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 9.11633, 0, 1, 0.504648,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475077,-99) , 
3, 4.54538, 1, 0, 0.496642,-99) , 
4, 0.999819, 0, 0, 0.502899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489316,-99) , 
4, 0.998095, 0, 0, 0.502208,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.00595428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498551,-99) , 
7, -2.14286, 1, 0, 0.49903,-99) , 
4, 0.996667, 1, 0, 0.49965,-99) , 
NN(
0, 
0, 
-1, 0.505981, 1, -1, 0.487094,-99) , 
0, 0.504757, 1, 0, 0.498926,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.00961617);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494529,-99) , 
8, 13.9607, 1, 0, 0.509374,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533562,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497348,-99) , 
9, 5.1621, 1, 0, 0.508592,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468781,-99) , 
9, 3.59099, 1, 0, 0.498428,-99) , 
8, 3.39244, 0, 0, 0.499728,-99) , 
9, 8.06315, 0, 0, 0.500612,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0117072);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484968,-99) , 
7, -1.76192, 0, 0, 0.499667,-99) , 
9, 8.06315, 0, 0, 0.50083,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485339,-99) , 
9, 7.40004, 1, 0, 0.502192,-99) , 
NN(
0, 
0, 
-1, 1.80263, 1, -1, 0.486696,-99) , 
8, 1.67979, 0, 0, 0.492631,-99) , 
7, 0.714218, 1, 0, 0.498812,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.00983607);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530037,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497013,-99) , 
8, -2.9749, 1, 0, 0.497714,-99) , 
9, 8.10822, 0, 0, 0.498814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486584,-99) , 
8, 14.3234, 1, 0, 0.498066,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0107761);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497921,-99) , 
7, -0.142782, 1, 0, 0.501417,-99) , 
9, 4.58687, 1, 0, 0.504218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496648,-99) , 
8, -2.35309, 1, 0, 0.498217,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474371,-99) , 
9, 3.32027, 1, 0, 0.497197,-99) , 
8, 2.32414, 0, 0, 0.498992,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.00492376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521999,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499557,-99) , 
8, 17.287, 1, 0, 0.509348,-99) , 
NN(
NN(
0, 
0, 
-1, 5.3274, 0, 1, 0.500915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480115,-99) , 
8, 7.17986, 1, 0, 0.499944,-99) , 
9, 8.66339, 0, 0, 0.500717,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.00999862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536229,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496973,-99) , 
8, -2.9839, 1, 0, 0.497588,-99) , 
9, 8.10822, 0, 0, 0.498861,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487225,-99) , 
8, 14.3234, 1, 0, 0.498149,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0144165);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.508656,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497297,-99) , 
8, -1.95178, 1, 0, 0.499586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46942,-99) , 
8, -3.01832, 1, 0, 0.485889,-99) , 
9, -0.403061, 0, 0, 0.498124,-99) , 
9, 9.88145, 0, 0, 0.498804,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0140064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480418,-99) , 
7, -1.39455, 0, 0, 0.50244,-99) , 
7, -1.85716, 1, 0, 0.503127,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509742,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483403,-99) , 
9, -0.546414, 0, 0, 0.497333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470718,-99) , 
7, -0.0708057, 1, 0, 0.492917,-99) , 
9, 0.332721, 0, 0, 0.500988,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0113681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 5.85803, 1, 1, 0.510447,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475522,-99) , 
9, 3.48967, 1, 0, 0.500863,-99) , 
8, 3.33656, 0, 0, 0.502549,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487133,-99) , 
8, 18.2849, 1, 0, 0.501891,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0196016);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 10.6208, 0, 1, 0.50727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467393,-99) , 
9, 0.705428, 0, 0, 0.503162,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48319,-99) , 
9, 1.96821, 1, 0, 0.502606,-99) , 
NN(
0, 
0, 
-1, -2.10204, 0, -1, 0.492434,-99) , 
6, -948.705, 0, 0, 0.49587,-99) , 
7, 0.142822, 0, 0, 0.499034,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_2_4_noPCts::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_2_4_noPCts::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_2_4_noPCts *ReadBDT_maker_LHC19c2a_2_4_noPCts(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_2_4_noPCts(theInpVar);
  }
}
