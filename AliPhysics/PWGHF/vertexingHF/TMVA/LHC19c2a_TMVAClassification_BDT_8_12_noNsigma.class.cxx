#include "LHC19c2a_TMVAClassification_BDT_8_12_noNsigma.class.h"

double ReadBDT_LHC19c2a_8_12_noNsigma::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTNode*)current->GetRight();
         else current=(BDTNode*)current->GetLeft();
      }
      myMVA += fBoostWeights[itree] *  current->GetNodeType();
      norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};

void ReadBDT_LHC19c2a_8_12_noNsigma::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(0.597913527927441);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.781044,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321876,-99) , 
4, 0.99981, 0, 0, 0.748268,-99) , 
NN(
0, 
0, 
-1, -0.878864, 0, -1, 0.36198,-99) , 
5, -0.768708, 0, 0, 0.661966,-99) , 
NN(
0, 
0, 
-1, 0.782273, 1, -1, 0.184639,-99) , 
5, 0.619008, 1, 0, 0.500176,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.441971);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.737906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485134,-99) , 
5, 0.418818, 1, 0, 0.670365,-99) , 
NN(
0, 
0, 
-1, -0.930065, 0, -1, 0.384818,-99) , 
5, -0.836734, 0, 0, 0.622781,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.186396,-99) , 
5, 0.714242, 1, 0, 0.503523,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.382562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.699325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.404127,-99) , 
4, 0.999877, 0, 0, 0.664134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346591,-99) , 
5, -0.953334, 0, 0, 0.475462,-99) , 
5, -0.67346, 0, 0, 0.612626,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.220096,-99) , 
5, 0.714245, 1, 0, 0.509073,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.310799);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.63267,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459726,-99) , 
5, -0.655322, 0, 0, 0.585753,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.250554,-99) , 
4, 0.999558, 0, 0, 0.566282,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.195446,-99) , 
5, 0.809479, 1, 0, 0.498018,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.267241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.616632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483431,-99) , 
4, 0.999977, 0, 0, 0.583791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.280833,-99) , 
4, 0.999514, 0, 0, 0.571344,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.274493,-99) , 
5, 0.714243, 1, 0, 0.494215,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.244659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.655025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478945,-99) , 
5, -0.564655, 0, 0, 0.583246,-99) , 
NN(
0, 
0, 
-1, 0.863902, 1, -1, 0.420722,-99) , 
5, 0.523774, 1, 0, 0.529906,-99) , 
NN(
0, 
0, 
-1, 0.997754, 0, -1, 0.103664,-99) , 
4, 0.999048, 0, 0, 0.492653,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.189921);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.555571, 0, 1, 0.585674,-99) , 
NN(
0, 
0, 
-1, 0.872976, 1, -1, 0.458767,-99) , 
5, 0.333303, 1, 0, 0.531573,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.11398,-99) , 
4, 0.999048, 0, 0, 0.496122,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.184911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476451,-99) , 
5, -0.655335, 0, 0, 0.549306,-99) , 
NN(
0, 
0, 
-1, 0.872972, 1, -1, 0.403417,-99) , 
5, 0.809477, 1, 0, 0.53187,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.126586,-99) , 
4, 0.999048, 0, 0, 0.498718,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.151456);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999998, 0, 1, 0.551702,-99) , 
NN(
0, 
0, 
-1, 0.904717, 1, -1, 0.455356,-99) , 
4, 0.999955, 0, 0, 0.527623,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.134798,-99) , 
4, 0.999048, 0, 0, 0.496203,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.140784);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554234,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483656,-99) , 
5, -0.483005, 0, 0, 0.529407,-99) , 
NN(
0, 
0, 
-1, 0.882042, 1, -1, 0.412722,-99) , 
5, 0.809477, 1, 0, 0.51552,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.155674,-99) , 
4, 0.999048, 0, 0, 0.487126,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.141054);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.622964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499314,-99) , 
5, -0.469392, 0, 0, 0.550004,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444672,-99) , 
1, -0.00146741, 1, 0, 0.469084,-99) , 
5, 0.238072, 1, 0, 0.511641,-99) , 
NN(
0, 
0, 
-1, 0.996531, 0, -1, 0.108733,-99) , 
4, 0.998572, 0, 0, 0.487928,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.127886);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.410465, 0, 1, 0.554721,-99) , 
NN(
0, 
0, 
-1, 0.891064, 1, -1, 0.474081,-99) , 
5, 0.23803, 1, 0, 0.51726,-99) , 
NN(
0, 
0, 
-1, 0.997754, 0, -1, 0.162375,-99) , 
4, 0.999048, 0, 0, 0.490602,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.113261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494211,-99) , 
4, 0.999985, 0, 0, 0.525718,-99) , 
NN(
0, 
0, 
-1, 0.999471, 0, -1, 0.405454,-99) , 
4, 0.999683, 0, 0, 0.518624,-99) , 
NN(
0, 
0, 
-1, 0.997755, 0, -1, 0.161488,-99) , 
4, 0.999048, 0, 0, 0.492261,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.108429);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440641,-99) , 
5, -0.90476, 0, 0, 0.519216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.341126,-99) , 
4, 0.999388, 0, 0, 0.512356,-99) , 
NN(
0, 
0, 
-1, 0.996122, 0, -1, 0.136969,-99) , 
4, 0.998572, 0, 0, 0.491177,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.0973954);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47943,-99) , 
0, 0.499043, 1, 0, 0.507518,-99) , 
NN(
0, 
0, 
-1, 0.809477, 1, -1, 0.400165,-99) , 
4, 0.99966, 0, 0, 0.499729,-99) , 
NN(
0, 
0, 
-1, 0.996122, 0, -1, 0.136842,-99) , 
4, 0.998571, 0, 0, 0.479816,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.0799289);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441822,-99) , 
5, -0.909293, 0, 0, 0.506373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.380374,-99) , 
5, 0.904712, 1, 0, 0.500268,-99) , 
NN(
0, 
0, 
-1, 0.996122, 0, -1, 0.149688,-99) , 
4, 0.998572, 0, 0, 0.481212,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.121555);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.629579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478306,-99) , 
1, 0.0040614, 0, 0, 0.503671,-99) , 
NN(
0, 
0, 
-1, 0.999246, 0, -1, 0.39643,-99) , 
4, 0.99966, 0, 0, 0.49612,-99) , 
NN(
0, 
0, 
-1, 0.996122, 0, -1, 0.158373,-99) , 
4, 0.998572, 0, 0, 0.477715,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.112693);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714427, 0, 1, 0.600683,-99) , 
NN(
0, 
0, 
-1, 0.999592, 0, -1, 0.477698,-99) , 
1, -0.00283878, 1, 0, 0.504875,-99) , 
NN(
0, 
0, 
-1, 0.99653, 0, -1, 0.156915,-99) , 
4, 0.998572, 0, 0, 0.48597,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.0818096);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426812,-99) , 
5, 0.904686, 1, 0, 0.516385,-99) , 
NN(
0, 
0, 
-1, 0.999246, 0, -1, 0.436568,-99) , 
4, 0.99966, 0, 0, 0.510595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.156457,-99) , 
4, 0.998571, 0, 0, 0.492803,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.0619216);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510193,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463061,-99) , 
5, -0.904751, 0, 0, 0.505695,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.385591,-99) , 
4, 0.999184, 0, 0, 0.501419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.117157,-99) , 
4, 0.998095, 0, 0, 0.486157,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.0712837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480135,-99) , 
4, 0.999987, 0, 0, 0.500059,-99) , 
NN(
0, 
0, 
-1, 0.999339, 0, -1, 0.426713,-99) , 
4, 0.999728, 0, 0, 0.493111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.111197,-99) , 
4, 0.998095, 0, 0, 0.478304,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.0424855);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998095, 0, -1, 0.47877,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.0652092);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473216,-99) , 
3, 4.17442, 1, 0, 0.504492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384571,-99) , 
4, 0.999184, 0, 0, 0.500277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.153267,-99) , 
4, 0.998095, 0, 0, 0.486746,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.0572136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505038,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470519,-99) , 
5, -0.523817, 0, 0, 0.494811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.411511,-99) , 
4, 0.999275, 0, 0, 0.491483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.139321,-99) , 
4, 0.998095, 0, 0, 0.47797,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.083253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.394634,-99) , 
4, 0.999932, 0, 0, 0.515305,-99) , 
NN(
0, 
0, 
-1, 0.877478, 1, -1, 0.477507,-99) , 
5, 0.142817, 1, 0, 0.496008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.179808,-99) , 
4, 0.998571, 0, 0, 0.480826,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.0540219);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47788,-99) , 
5, -0.428582, 0, 0, 0.497494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413927,-99) , 
4, 0.99932, 0, 0, 0.493365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.136189,-99) , 
4, 0.997619, 0, 0, 0.481761,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.0495495);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470686,-99) , 
0, 0.500948, 1, 0, 0.493141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.413683,-99) , 
5, 0.904714, 1, 0, 0.489021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.132115,-99) , 
4, 0.997619, 0, 0, 0.477641,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.0405923);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998095, 0, -1, 0.479715,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.0353642);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.482325,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.050249);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452012,-99) , 
3, 7.4123, 1, 0, 0.505338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431424,-99) , 
5, 0.904713, 1, 0, 0.501739,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.148896,-99) , 
4, 0.998095, 0, 0, 0.489002,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.0413951);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484245,-99) , 
5, -0.428584, 0, 0, 0.497444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439181,-99) , 
4, 0.99932, 0, 0, 0.494653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.156752,-99) , 
4, 0.997619, 0, 0, 0.484149,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.05245);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487353,-99) , 
5, 0.26981, 1, 0, 0.50036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421638,-99) , 
5, 0.904712, 1, 0, 0.4966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.177549,-99) , 
4, 0.998095, 0, 0, 0.484771,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.046626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485723,-99) , 
5, 0.142834, 1, 0, 0.495074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.423357,-99) , 
3, 8.34575, 1, 0, 0.492487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.166603,-99) , 
4, 0.998095, 0, 0, 0.480957,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.0331364);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998095, 0, -1, 0.483438,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.0536237);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477947,-99) , 
5, -0.428598, 0, 0, 0.499593,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.415852,-99) , 
4, 0.999093, 0, 0, 0.496704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.130952,-99) , 
4, 0.997619, 0, 0, 0.485919,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.0444453);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470936,-99) , 
5, -0.904758, 0, 0, 0.503852,-99) , 
NN(
0, 
0, 
-1, 0.000906161, 0, -1, 0.46528,-99) , 
0, 0.504757, 1, 0, 0.500944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.168604,-99) , 
4, 0.998095, 0, 0, 0.489263,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.0347209);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.482647,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.0362755);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455913,-99) , 
5, 0.904715, 1, 0, 0.501347,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437983,-99) , 
3, 8.234, 1, 0, 0.499069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.187001,-99) , 
4, 0.998095, 0, 0, 0.488215,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.0442604);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484338,-99) , 
5, 0.142829, 1, 0, 0.494359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426874,-99) , 
4, 0.999093, 0, 0, 0.492058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.159437,-99) , 
4, 0.997619, 0, 0, 0.482215,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.0455195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479773,-99) , 
5, -0.365097, 0, 0, 0.496294,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434675,-99) , 
5, 0.904705, 1, 0, 0.493315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.167792,-99) , 
4, 0.997619, 0, 0, 0.48358,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.0386144);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.997619, 0, -1, 0.480702,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.034495);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.569576,-99) , 
NN(
0, 
0, 
-1, 0.998912, 0, -1, 0.493538,-99) , 
1, -0.0100178, 1, 0, 0.496449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.177076,-99) , 
4, 0.997143, 0, 0, 0.487944,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.0292272);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468889,-99) , 
3, 7.51694, 1, 0, 0.499921,-99) , 
NN(
0, 
0, 
-1, 0.523823, 0, -1, 0.463431,-99) , 
4, 0.999728, 0, 0, 0.496204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.174179,-99) , 
4, 0.997143, 0, 0, 0.487765,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.0484523);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481402,-99) , 
5, 0.523749, 1, 0, 0.499854,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.473297,-99) , 
3, 4.16016, 1, 0, 0.49406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.149514,-99) , 
4, 0.997143, 0, 0, 0.485258,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.0344317);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55022,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494604,-99) , 
1, -0.0108299, 1, 0, 0.496405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420909,-99) , 
4, 0.998912, 0, 0, 0.494132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.163342,-99) , 
4, 0.997143, 0, 0, 0.485867,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.0391902);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491138,-99) , 
5, -0.238112, 0, 0, 0.50318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453937,-99) , 
3, 8.35276, 1, 0, 0.501429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.197382,-99) , 
4, 0.997619, 0, 0, 0.492691,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.077492);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714491, 0, 1, 0.608314,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47648,-99) , 
5, 0.619008, 0, 0, 0.485974,-99) , 
1, -0.00439438, 1, 0, 0.50245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.22934,-99) , 
4, 0.998095, 0, 0, 0.493353,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.0552837);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442544,-99) , 
4, 0.999714, 0, 0, 0.513625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482348,-99) , 
2, 0.0668479, 0, 0, 0.491401,-99) , 
5, 0.523772, 1, 0, 0.505845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.174938,-99) , 
4, 0.997619, 0, 0, 0.496882,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.0397733);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507915,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475467,-99) , 
4, 0.999365, 0, 0, 0.506453,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.479522,-99) , 
0, 0.5019, 1, 0, 0.500852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.213861,-99) , 
4, 0.998095, 0, 0, 0.491716,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.0325798);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494384,-99) , 
0, 0.495234, 1, 0, 0.498664,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434967,-99) , 
4, 0.99898, 0, 0, 0.496806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.219289,-99) , 
4, 0.997619, 0, 0, 0.488977,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.0393241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510039,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482694,-99) , 
3, 3.24015, 1, 0, 0.506354,-99) , 
NN(
0, 
0, 
-1, 0.999887, 0, -1, 0.484096,-99) , 
3, 4.21945, 1, 0, 0.501614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.215333,-99) , 
4, 0.997619, 0, 0, 0.49364,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.0317624);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488833,-99) , 
5, -0.333341, 0, 0, 0.498238,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446301,-99) , 
3, 7.95371, 1, 0, 0.49617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.210447,-99) , 
4, 0.997619, 0, 0, 0.488328,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.08699);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.90476, 0, 1, 0.557096,-99) , 
NN(
0, 
0, 
-1, 0.999206, 0, -1, 0.472007,-99) , 
1, 0.00200832, 0, 0, 0.497943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.224776,-99) , 
4, 0.997619, 0, 0, 0.490468,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.0329472);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511105,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496831,-99) , 
5, 0.0475281, 1, 0, 0.50374,-99) , 
NN(
0, 
0, 
-1, 0.499993, 1, -1, 0.473596,-99) , 
4, 0.99966, 0, 0, 0.501153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.196965,-99) , 
4, 0.997619, 0, 0, 0.493099,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.0308034);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506836,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474932,-99) , 
5, 0.904714, 1, 0, 0.505399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465468,-99) , 
4, 0.998866, 0, 0, 0.504345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.230613,-99) , 
4, 0.997619, 0, 0, 0.496973,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.0339644);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496277,-99) , 
2, 0.0665765, 0, 0, 0.502118,-99) , 
NN(
0, 
0, 
-1, -0.0824852, 0, -1, 0.485681,-99) , 
5, -0.523804, 0, 0, 0.497377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.227643,-99) , 
4, 0.997619, 0, 0, 0.490176,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.0292732);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496236,-99) , 
2, -0.0704645, 1, 0, 0.500012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464204,-99) , 
0, 0.505709, 1, 0, 0.498356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231669,-99) , 
4, 0.997619, 0, 0, 0.49118,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.036283);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510052,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47758,-99) , 
2, 0.218012, 1, 0, 0.508542,-99) , 
NN(
0, 
0, 
-1, -0.968257, 0, -1, 0.477981,-99) , 
5, -0.90476, 0, 0, 0.505774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.245593,-99) , 
4, 0.997619, 0, 0, 0.498834,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.0197008);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498647,-99) , 
4, 0.999417, 1, 0, 0.49941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466722,-99) , 
4, 0.99898, 0, 0, 0.498441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.235727,-99) , 
4, 0.997619, 0, 0, 0.491521,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.0271958);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495133,-99) , 
3, 2.05372, 1, 0, 0.500996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461886,-99) , 
3, 8.22972, 1, 0, 0.4996,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.241831,-99) , 
4, 0.997619, 0, 0, 0.492755,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.0225359);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484008,-99) , 
0, 0.504757, 1, 0, 0.501469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451104,-99) , 
4, 0.99898, 0, 0, 0.500018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.265643,-99) , 
4, 0.997619, 0, 0, 0.493785,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.021681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.813999, 0, 1, 0.502474,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470089,-99) , 
5, 0.904714, 1, 0, 0.50088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.231977,-99) , 
4, 0.997619, 0, 0, 0.49374,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.0308844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51581,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494009,-99) , 
5, 0.809477, 0, 0, 0.496317,-99) , 
NN(
0, 
0, 
-1, 0.809513, 1, -1, 0.472089,-99) , 
4, 0.99966, 0, 0, 0.494297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.233527,-99) , 
4, 0.997619, 0, 0, 0.487552,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.0288897);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00215937, 1, 1, 0.513911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44158,-99) , 
4, 0.999905, 0, 0, 0.495939,-99) , 
5, 0.428536, 0, 0, 0.503119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.289349,-99) , 
4, 0.997619, 0, 0, 0.497202,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.0345082);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494042,-99) , 
4, 0.999819, 1, 0, 0.496284,-99) , 
NN(
0, 
0, 
-1, 0.87751, 1, -1, 0.481118,-99) , 
5, 0.714243, 1, 0, 0.493177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.23472,-99) , 
4, 0.998095, 0, 0, 0.48553,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.0310562);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48643,-99) , 
5, -0.904763, 0, 0, 0.504978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447971,-99) , 
4, 0.999207, 0, 0, 0.502752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.247841,-99) , 
4, 0.997619, 0, 0, 0.496173,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.0256027);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483454,-99) , 
0, 0.491425, 0, 0, 0.502066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443781,-99) , 
4, 0.999093, 0, 0, 0.500134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.253319,-99) , 
4, 0.997619, 0, 0, 0.493616,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.0273412);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475857,-99) , 
5, 0.872979, 1, 0, 0.506487,-99) , 
NN(
0, 
0, 
-1, 0.723287, 1, -1, 0.496045,-99) , 
5, 0.809479, 0, 0, 0.497413,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.26475,-99) , 
4, 0.997619, 0, 0, 0.491543,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.0209749);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475026,-99) , 
3, 8.34575, 1, 0, 0.50019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454623,-99) , 
5, -0.428513, 1, 0, 0.478611,-99) , 
0, 0.504757, 1, 0, 0.498483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.25879,-99) , 
4, 0.997619, 0, 0, 0.492306,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.0186395);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474501,-99) , 
3, 7.96725, 1, 0, 0.500073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447392,-99) , 
4, 0.99898, 0, 0, 0.498573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279495,-99) , 
4, 0.997619, 0, 0, 0.492806,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.0282315);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490109,-99) , 
5, 0.872983, 1, 0, 0.51133,-99) , 
NN(
0, 
0, 
-1, 0.55097, 1, -1, 0.493703,-99) , 
5, 0.809479, 0, 0, 0.496057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.274014,-99) , 
4, 0.997619, 0, 0, 0.49034,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.0204044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523619,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497035,-99) , 
0, 0.48952, 1, 0, 0.497947,-99) , 
3, 8.12725, 0, 0, 0.498908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.267823,-99) , 
4, 0.997619, 0, 0, 0.493038,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.0228529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498052,-99) , 
2, -0.0762201, 1, 0, 0.500829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456294,-99) , 
4, 0.999093, 0, 0, 0.499596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.279304,-99) , 
4, 0.998095, 0, 0, 0.493236,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.0628538);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.590677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484854,-99) , 
1, 0.00273808, 0, 0, 0.506663,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475889,-99) , 
5, -0.777789, 1, 0, 0.493461,-99) , 
5, -0.333348, 0, 0, 0.502088,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.260908,-99) , 
4, 0.997619, 0, 0, 0.49606,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.0364622);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.660358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49731,-99) , 
1, -0.00546044, 1, 0, 0.50905,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455369,-99) , 
2, 0.0604552, 1, 0, 0.491167,-99) , 
5, -0.619054, 0, 0, 0.504528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.281152,-99) , 
4, 0.997619, 0, 0, 0.498786,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.0419354);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999909, 1, 1, 0.516608,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464569,-99) , 
2, -0.0663238, 0, 0, 0.499907,-99) , 
5, -0.238104, 0, 0, 0.5104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.295144,-99) , 
4, 0.998095, 0, 0, 0.504131,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.0346945);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471015,-99) , 
5, -0.23823, 0, 0, 0.514226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494644,-99) , 
2, -0.00914292, 1, 0, 0.499812,-99) , 
2, -0.0828578, 1, 0, 0.502035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.299695,-99) , 
4, 0.998095, 0, 0, 0.496106,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.0308758);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556965,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492023,-99) , 
5, 0.332753, 0, 0, 0.520212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497258,-99) , 
3, 3.99243, 0, 0, 0.501907,-99) , 
2, 0.0804341, 0, 0, 0.504852,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.305138,-99) , 
4, 0.998095, 0, 0, 0.498963,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.0304604);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494281, 1, 1, 0.510855,-99) , 
NN(
0, 
0, 
-1, -0.963707, 0, -1, 0.492219,-99) , 
5, -0.809515, 0, 0, 0.507925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.325468,-99) , 
4, 0.998095, 0, 0, 0.50253,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.0296377);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52284,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497754,-99) , 
5, -0.523867, 0, 0, 0.515076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497627,-99) , 
4, 0.999932, 1, 0, 0.500961,-99) , 
0, 0.496186, 1, 0, 0.505715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.338269,-99) , 
4, 0.998572, 0, 0, 0.49904,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.0308741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999984, 0, 1, 0.510071,-99) , 
NN(
0, 
0, 
-1, 0.499998, 1, -1, 0.477425,-99) , 
4, 0.99966, 0, 0, 0.507317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.320045,-99) , 
4, 0.997619, 0, 0, 0.50254,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.0220059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498848,-99) , 
4, 0.999909, 1, 0, 0.502845,-99) , 
NN(
0, 
0, 
-1, -0.764154, 1, -1, 0.489141,-99) , 
5, -0.619034, 0, 0, 0.499396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.327741,-99) , 
4, 0.998095, 0, 0, 0.494414,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.0567918);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.714344, 0, 1, 0.537049,-99) , 
NN(
0, 
0, 
-1, 0.809396, 0, -1, 0.4838,-99) , 
1, -0.00111011, 1, 0, 0.503305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.319771,-99) , 
4, 0.998095, 0, 0, 0.497991,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.0160718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99932, 1, 1, 0.502327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471053,-99) , 
3, 7.87808, 1, 0, 0.501034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.311938,-99) , 
4, 0.997619, 0, 0, 0.496316,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.023165);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492778, 1, 1, 0.505897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471932,-99) , 
3, 8.21353, 1, 0, 0.504672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.321064,-99) , 
4, 0.998095, 0, 0, 0.499466,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.0498626);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.60777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48846,-99) , 
1, 0.00331795, 0, 0, 0.507469,-99) , 
NN(
0, 
0, 
-1, -0.141678, 0, -1, 0.489673,-99) , 
5, -0.238112, 0, 0, 0.500794,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.333433,-99) , 
4, 0.998095, 0, 0, 0.495925,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.0274846);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00332422, 0, 1, 0.520057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506417,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490092,-99) , 
0, 0.492377, 0, 0, 0.504637,-99) , 
2, 0.0560155, 0, 0, 0.507798,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.346968,-99) , 
4, 0.998095, 0, 0, 0.503065,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.0247678);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.075596, 0, 1, 0.50761,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465835,-99) , 
2, -0.0880918, 0, 0, 0.499228,-99) , 
5, -0.523818, 0, 0, 0.505188,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.339576,-99) , 
4, 0.998095, 0, 0, 0.500478,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.0212327);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49231,-99) , 
5, -0.727887, 0, 0, 0.50249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469022,-99) , 
5, 0.904713, 1, 0, 0.500894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.372736,-99) , 
4, 0.998095, 0, 0, 0.497049,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.0519143);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409596,-99) , 
4, 0.999932, 0, 0, 0.508605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474238,-99) , 
4, 0.999932, 1, 0, 0.486559,-99) , 
5, 0.14283, 1, 0, 0.497356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.38262,-99) , 
4, 0.998571, 0, 0, 0.492868,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.0182164);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497048,-99) , 
0, 0.503805, 0, 0, 0.498962,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481843,-99) , 
4, 0.999456, 0, 0, 0.49805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.349497,-99) , 
4, 0.998095, 0, 0, 0.493805,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.0263635);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469542,-99) , 
5, -0.333508, 0, 0, 0.509395,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491318,-99) , 
5, 0.142829, 1, 0, 0.496672,-99) , 
2, 0.0741835, 0, 0, 0.498848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.384411,-99) , 
4, 0.998095, 0, 0, 0.495445,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.023321);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499226,-99) , 
2, -0.0733678, 1, 0, 0.503884,-99) , 
NN(
0, 
0, 
-1, -0.0868869, 0, -1, 0.487347,-99) , 
5, -0.238112, 0, 0, 0.497718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.365413,-99) , 
4, 0.998095, 0, 0, 0.493858,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.068165);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474553,-99) , 
4, 0.999996, 0, 0, 0.50373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.382456,-99) , 
5, 0.0475905, 0, 0, 0.489814,-99) , 
4, 0.999909, 0, 0, 0.501151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.373032,-99) , 
4, 0.998095, 0, 0, 0.497459,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.0515357);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483014,-99) , 
4, 0.999996, 0, 0, 0.505492,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.403005,-99) , 
5, 0.0476426, 0, 0, 0.485487,-99) , 
4, 0.999909, 0, 0, 0.501756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.370553,-99) , 
4, 0.998095, 0, 0, 0.498059,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.0241459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.618985, 0, 1, 0.505593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500547,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45982,-99) , 
4, 0.999288, 1, 0, 0.474417,-99) , 
4, 0.999728, 0, 0, 0.502989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.363465,-99) , 
4, 0.998571, 0, 0, 0.497833,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.0382625);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489785,-99) , 
4, 0.999996, 0, 0, 0.50394,-99) , 
NN(
0, 
0, 
-1, 0.0476488, 0, -1, 0.48196,-99) , 
4, 0.999909, 0, 0, 0.499872,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.369379,-99) , 
4, 0.998095, 0, 0, 0.496224,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.0239817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482785,-99) , 
5, -0.333343, 0, 0, 0.51467,-99) , 
NN(
0, 
0, 
-1, 0.490475, 0, -1, 0.494578,-99) , 
2, 0.0705688, 0, 0, 0.498156,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.393024,-99) , 
4, 0.998095, 0, 0, 0.495229,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.0221038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0795235, 0, 1, 0.506359,-99) , 
NN(
0, 
0, 
-1, -0.764187, 1, -1, 0.487574,-99) , 
5, -0.619052, 0, 0, 0.501585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.379078,-99) , 
4, 0.998095, 0, 0, 0.498172,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.0427885);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48839,-99) , 
1, 0.00331795, 0, 0, 0.505997,-99) , 
NN(
0, 
0, 
-1, 4.83585, 1, -1, 0.492027,-99) , 
5, -0.238112, 0, 0, 0.500787,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.399922,-99) , 
4, 0.998095, 0, 0, 0.497874,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.0296474);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497193,-99) , 
4, 0.999996, 0, 0, 0.508349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.419761,-99) , 
5, 0.142779, 0, 0, 0.48995,-99) , 
4, 0.999909, 0, 0, 0.504933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.405242,-99) , 
4, 0.998095, 0, 0, 0.502114,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.0285387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0408234, 0, 1, 0.510639,-99) , 
NN(
0, 
0, 
-1, 4.0446, 1, -1, 0.483356,-99) , 
4, 0.999909, 0, 0, 0.50559,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.397846,-99) , 
4, 0.998095, 0, 0, 0.502592,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.0230634);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490531,-99) , 
3, 3.40069, 1, 0, 0.518541,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498771,-99) , 
5, 0.809478, 0, 0, 0.50188,-99) , 
2, 0.0741835, 0, 0, 0.504714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39776,-99) , 
4, 0.998571, 0, 0, 0.500783,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.0255246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00591654, 0, 1, 0.511018,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500684,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443956,-99) , 
3, 4.77226, 1, 0, 0.493205,-99) , 
5, -0.238116, 0, 0, 0.504296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.412698,-99) , 
4, 0.998571, 0, 0, 0.500881,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.0221599);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477885,-99) , 
5, 0.714245, 1, 0, 0.513871,-99) , 
NN(
0, 
0, 
-1, 0.506344, 1, -1, 0.49487,-99) , 
0, 0.494281, 1, 0, 0.498767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422743,-99) , 
4, 0.998572, 0, 0, 0.495879,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.0167081);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.18251, 1, 1, 0.524404,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481339,-99) , 
4, 0.999887, 0, 0, 0.497971,-99) , 
2, 0.0737786, 0, 0, 0.502527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.429349,-99) , 
4, 0.997619, 0, 0, 0.500665,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.0417182);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490332,-99) , 
1, 0.00273808, 0, 0, 0.506658,-99) , 
NN(
0, 
0, 
-1, 3.36057, 1, -1, 0.485921,-99) , 
5, -0.333346, 0, 0, 0.499435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425291,-99) , 
4, 0.998095, 0, 0, 0.497354,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.0212698);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.610139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498671,-99) , 
1, -0.00439438, 1, 0, 0.515245,-99) , 
NN(
0, 
0, 
-1, 0.809478, 0, 1, 0.503837,-99) , 
0, 0.500947, 0, 0, 0.506912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.422442,-99) , 
5, 0.80951, 1, 0, 0.458178,-99) , 
4, 0.999524, 0, 0, 0.502733,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.0180591);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00423125, 0, 1, 0.511202,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465164,-99) , 
4, 0.999909, 0, 0, 0.497384,-99) , 
5, 0.428539, 0, 0, 0.502961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.39444,-99) , 
4, 0.998096, 0, 0, 0.500061,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.0274154);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477942,-99) , 
0, 0.506344, 1, 0, 0.516817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491805,-99) , 
5, 0.428538, 0, 0, 0.498707,-99) , 
0, 0.500948, 0, 0, 0.503627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439357,-99) , 
4, 0.998572, 0, 0, 0.501166,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.0197887);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497252,-99) , 
2, 0.0418389, 0, 0, 0.50183,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500728,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435126,-99) , 
5, 0.333305, 0, 0, 0.485964,-99) , 
4, 0.999909, 0, 0, 0.49894,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.416967,-99) , 
4, 0.998095, 0, 0, 0.496685,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.0225123);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495708,-99) , 
2, -0.0157124, 1, 0, 0.503617,-99) , 
NN(
0, 
0, 
-1, 0.0476418, 0, -1, 0.48619,-99) , 
4, 0.999909, 0, 0, 0.500446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454335,-99) , 
4, 0.998095, 0, 0, 0.499107,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.0327958);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.619687, 0, 1, 0.582999,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489488,-99) , 
5, 0.142837, 0, 0, 0.500618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439577,-99) , 
3, 8.6342, 1, 0, 0.498626,-99) , 
1, -0.00733313, 1, 0, 0.50394,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.0344752);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492781,-99) , 
4, 0.999997, 0, 0, 0.506984,-99) , 
NN(
0, 
0, 
-1, -0.142809, 0, -1, 0.488595,-99) , 
4, 0.999932, 0, 0, 0.503149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.418812,-99) , 
4, 0.998571, 0, 0, 0.500025,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.0213648);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.508407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461984,-99) , 
3, 6.40821, 1, 0, 0.506255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464195,-99) , 
3, 8.37762, 1, 0, 0.504799,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.035315);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4978,-99) , 
1, 0.00145917, 0, 0, 0.517924,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486356,-99) , 
2, 0.01448, 0, 0, 0.499396,-99) , 
2, -0.0597889, 1, 0, 0.502995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.434106,-99) , 
4, 0.998572, 0, 0, 0.500432,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.040239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0113661, 0, 1, 0.514997,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486456,-99) , 
1, -0.00111011, 1, 0, 0.504314,-99) , 
0, 0.499043, 0, 0, 0.508781,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445686,-99) , 
4, 0.998571, 0, 0, 0.506385,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.0288592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482339,-99) , 
5, -0.143067, 0, 0, 0.513454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487702,-99) , 
2, 0.00300695, 0, 0, 0.498579,-99) , 
2, -0.0713127, 1, 0, 0.5012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.426486,-99) , 
4, 0.998095, 0, 0, 0.49918,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.0387913);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.559545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490521,-99) , 
1, 0.00224338, 0, 0, 0.509921,-99) , 
NN(
0, 
0, 
-1, 0.999796, 0, -1, 0.491954,-99) , 
0, 0.499996, 1, 0, 0.503713,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450231,-99) , 
4, 0.998572, 0, 0, 0.501695,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.0360029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0567883, 0, 1, 0.512954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.580015,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481182,-99) , 
1, -0.00481227, 1, 0, 0.493487,-99) , 
3, 3.36308, 1, 0, 0.507524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443898,-99) , 
3, 8.63428, 1, 0, 0.505458,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.0258561);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496363,-99) , 
4, 0.999996, 0, 0, 0.505773,-99) , 
NN(
0, 
0, 
-1, 3.74554, 1, -1, 0.48054,-99) , 
4, 0.999909, 0, 0, 0.502473,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500102,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441216,-99) , 
5, 0.809477, 1, 0, 0.467761,-99) , 
4, 0.999524, 0, 0, 0.499491,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.0171522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0799947, 1, 1, 0.505761,-99) , 
NN(
0, 
0, 
-1, -0.0475509, 0, -1, 0.473013,-99) , 
3, 5.79659, 1, 0, 0.503349,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454499,-99) , 
3, 8.6342, 1, 0, 0.501748,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.0278852);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.576445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493205,-99) , 
1, 0.00331795, 0, 0, 0.506306,-99) , 
NN(
0, 
0, 
-1, 4.89757, 1, -1, 0.495303,-99) , 
5, -0.238112, 0, 0, 0.502191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44871,-99) , 
4, 0.998095, 0, 0, 0.500705,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.0232724);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00283878, 1, 1, 0.520271,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511778,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497288,-99) , 
2, 0.00483758, 0, 0, 0.505068,-99) , 
2, -0.0698086, 1, 0, 0.507816,-99) , 
NN(
0, 
0, 
-1, 0.498096, 1, -1, 0.460127,-99) , 
5, 0.904713, 1, 0, 0.505017,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.0189731);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490355,-99) , 
4, 0.999932, 0, 0, 0.52443,-99) , 
NN(
0, 
0, 
-1, 0.619006, 0, 1, 0.505235,-99) , 
0, 0.492377, 1, 0, 0.507473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454572,-99) , 
4, 0.998571, 0, 0, 0.50549,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.0206576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508725,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496281,-99) , 
5, -0.546494, 0, 0, 0.505235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458677,-99) , 
0, 0.497049, 0, 0, 0.481226,-99) , 
5, 0.904712, 1, 0, 0.503757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487031,-99) , 
0, 0.506318, 1, 0, 0.500914,-99) , 
NN(
0, 
0, 
-1, 0.50363, 1, -1, 0.470789,-99) , 
0, 0.504893, 0, 0, 0.484254,-99) , 
0, 0.502852, 1, 0, 0.500652,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.0496824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.59455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478251,-99) , 
3, 4.17648, 1, 0, 0.496146,-99) , 
1, 0.00410023, 0, 0, 0.512611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.570774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464764,-99) , 
1, 0.00125557, 0, 0, 0.50768,-99) , 
NN(
0, 
0, 
-1, 3.96131, 1, -1, 0.491247,-99) , 
2, -0.000590058, 1, 0, 0.497588,-99) , 
2, -0.0751713, 1, 0, 0.500216,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.0160551);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478787,-99) , 
5, 0.723233, 1, 0, 0.516611,-99) , 
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.502391,-99) , 
0, 0.494282, 1, 0, 0.50539,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.471449,-99) , 
5, 0.90469, 1, 0, 0.503376,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.0224794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489474,-99) , 
4, 0.999909, 0, 0, 0.505791,-99) , 
2, 0.220338, 0, 0, 0.507051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50913,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453815,-99) , 
5, 0.809479, 1, 0, 0.478852,-99) , 
4, 0.999524, 0, 0, 0.504636,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.0198908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.244603, 0, 1, 0.535031,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495434,-99) , 
0, 0.493329, 1, 0, 0.498964,-99) , 
3, 0.500631, 1, 0, 0.50154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453347,-99) , 
3, 8.37762, 1, 0, 0.499887,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.0204307);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481072,-99) , 
5, -0.714308, 0, 0, 0.516051,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495607,-99) , 
5, 0.619008, 0, 0, 0.500055,-99) , 
2, 0.0705688, 0, 0, 0.502862,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463157,-99) , 
4, 0.998095, 0, 0, 0.501754,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.0169463);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.809453, 0, 1, 0.50481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467387,-99) , 
4, 0.999796, 0, 0, 0.502796,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503623,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444654,-99) , 
5, 0.809461, 1, 0, 0.471575,-99) , 
4, 0.999524, 0, 0, 0.500136,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.0220686);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539448,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494338,-99) , 
4, 0.999977, 1, 0, 0.499493,-99) , 
2, -0.197209, 1, 0, 0.501186,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510344,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465894,-99) , 
0, 0.495278, 0, 0, 0.487084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437307,-99) , 
0, 0.499994, 1, 0, 0.470734,-99) , 
4, 0.999524, 0, 0, 0.498579,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.0221973);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0636614, 1, 1, 0.507186,-99) , 
NN(
0, 
0, 
-1, 3.55695, 1, -1, 0.480193,-99) , 
4, 0.999909, 0, 0, 0.503632,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48569,-99) , 
5, 0.809536, 1, 0, 0.499808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.425461,-99) , 
0, 0.499996, 1, 0, 0.475612,-99) , 
4, 0.999524, 0, 0, 0.501209,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.0380214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.809528, 0, 1, 0.540434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485874,-99) , 
5, 0.809396, 0, 0, 0.490713,-99) , 
1, 0.00224338, 0, 0, 0.504283,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492454,-99) , 
5, -0.591868, 0, 0, 0.500199,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474763,-99) , 
3, 4.01382, 0, 0, 0.482094,-99) , 
5, -0.142881, 1, 0, 0.48959,-99) , 
0, 0.499995, 1, 0, 0.499276,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.0181885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544383,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497585,-99) , 
2, 0.12075, 0, 0, 0.500405,-99) , 
3, 8.23067, 0, 0, 0.501929,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516884,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456418,-99) , 
0, 0.494689, 0, 0, 0.488747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436538,-99) , 
0, 0.499995, 1, 0, 0.47161,-99) , 
4, 0.999524, 0, 0, 0.499361,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.0162564);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0186269, 0, 1, 0.506178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476849,-99) , 
4, 0.999751, 0, 0, 0.504981,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464186,-99) , 
5, 0.809457, 1, 0, 0.481781,-99) , 
4, 0.999524, 0, 0, 0.502949,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.0534341);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490985,-99) , 
0, 0.493331, 0, 0, 0.527405,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.55689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481082,-99) , 
1, 0.0040614, 0, 0, 0.492943,-99) , 
3, 0.932243, 1, 0, 0.500228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451701,-99) , 
3, 8.6342, 1, 0, 0.498684,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.0208383);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485242,-99) , 
5, -0.54646, 0, 0, 0.517907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515423,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497622,-99) , 
0, 0.494283, 1, 0, 0.501201,-99) , 
2, -0.0684479, 1, 0, 0.504255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.435651,-99) , 
5, 0.945528, 1, 0, 0.476477,-99) , 
5, 0.904713, 1, 0, 0.502612,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.0218187);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99999, 0, 1, 0.508464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467606,-99) , 
5, 0.714277, 1, 0, 0.492856,-99) , 
4, 0.999796, 0, 0, 0.506813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47119,-99) , 
4, 0.998572, 0, 0, 0.505504,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.0184924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714193, 0, 1, 0.506428,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421636,-99) , 
5, 0.0476376, 0, 0, 0.491421,-99) , 
4, 0.999909, 0, 0, 0.503639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450843,-99) , 
4, 0.998095, 0, 0, 0.502269,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.0269738);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494755,-99) , 
1, 0.00224338, 0, 0, 0.506563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491829,-99) , 
2, -0.0784668, 1, 0, 0.496877,-99) , 
0, 0.499906, 1, 0, 0.502849,-99) , 
NN(
0, 
0, 
-1, 0.142853, 1, -1, 0.478006,-99) , 
0, 0.491427, 0, 0, 0.500646,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.0181326);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524522,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499953,-99) , 
2, -0.0495617, 1, 0, 0.505144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504714,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472445,-99) , 
3, 3.22148, 1, 0, 0.495207,-99) , 
5, -0.238112, 0, 0, 0.501426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450145,-99) , 
4, 0.998571, 0, 0, 0.499585,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.0191813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.55918, 1, 1, 0.521423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496063,-99) , 
3, 0.526675, 1, 0, 0.498408,-99) , 
2, 0.0728272, 0, 0, 0.50236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451199,-99) , 
3, 8.6342, 1, 0, 0.500736,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.0175015);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.80481, 1, 1, 0.517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499694,-99) , 
5, -0.00228814, 1, 0, 0.505235,-99) , 
2, -0.071423, 1, 0, 0.507336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465078,-99) , 
5, 0.936461, 1, 0, 0.486683,-99) , 
5, 0.904715, 1, 0, 0.506113,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.0168052);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507047,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494284,-99) , 
5, -0.238112, 0, 0, 0.502173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457848,-99) , 
3, 6.83588, 1, 0, 0.500998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470537,-99) , 
3, 7.95824, 1, 0, 0.499724,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.0177087);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495279, 1, 1, 0.507823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462305,-99) , 
3, 4.83956, 1, 0, 0.495653,-99) , 
5, -0.333349, 0, 0, 0.503799,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507745,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468312,-99) , 
5, -0.523827, 0, 0, 0.486755,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44697,-99) , 
5, 0.428512, 1, 0, 0.473806,-99) , 
0, 0.491425, 0, 0, 0.501258,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.0152251);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0105199, 1, 1, 0.506375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459412,-99) , 
4, 0.998572, 0, 0, 0.504676,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.01361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523702, 1, 1, 0.509752,-99) , 
NN(
0, 
0, 
-1, -0.619052, 0, -1, 0.495612,-99) , 
0, 0.50054, 0, 0, 0.499356,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473563,-99) , 
0, 0.505709, 1, 0, 0.498111,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.0158215);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.897272, 1, 1, 0.507785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488799,-99) , 
3, 8.23067, 1, 0, 0.507089,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.0222033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00603436, 0, 1, 0.510525,-99) , 
NN(
0, 
0, 
-1, -0.945577, 0, -1, 0.491345,-99) , 
5, -0.619052, 0, 0, 0.50596,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491578,-99) , 
5, -0.619261, 1, 0, 0.497622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45783,-99) , 
4, 0.999524, 0, 0, 0.4944,-99) , 
0, 0.499043, 1, 0, 0.501084,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.0249566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531534,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490271,-99) , 
2, -0.0424344, 1, 0, 0.49398,-99) , 
3, 8.22708, 0, 0, 0.495316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453247,-99) , 
0, 0.49469, 0, 0, 0.490379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.446066,-99) , 
0, 0.499995, 1, 0, 0.475482,-99) , 
4, 0.999524, 0, 0, 0.493626,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.0229673);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.602509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49148,-99) , 
1, -0.00439438, 1, 0, 0.507728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492368,-99) , 
5, 0.428536, 0, 0, 0.497736,-99) , 
0, 0.5019, 0, 0, 0.499816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445115,-99) , 
4, 0.998571, 0, 0, 0.497901,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.0211787);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533717,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4882,-99) , 
5, 0.523594, 1, 0, 0.522427,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480727,-99) , 
4, 0.999841, 0, 0, 0.502983,-99) , 
0, 0.493329, 1, 0, 0.505969,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507776,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476619,-99) , 
4, 0.998617, 1, 0, 0.491121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456056,-99) , 
0, 0.499995, 1, 0, 0.47928,-99) , 
4, 0.999524, 0, 0, 0.503677,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.020098);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.377036, 1, 1, 0.51522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494879,-99) , 
0, 0.493331, 1, 0, 0.498944,-99) , 
3, 0.917548, 1, 0, 0.502302,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461885,-99) , 
3, 8.62065, 1, 0, 0.500984,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.0234662);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.504783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451333,-99) , 
5, 0.333337, 1, 0, 0.485087,-99) , 
0, 0.491153, 0, 0, 0.50247,-99) , 
NN(
NN(
0, 
0, 
-1, -0.251754, 0, 1, 0.507935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522931,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461197,-99) , 
1, -0.00138993, 1, 0, 0.479675,-99) , 
5, 0.0475813, 1, 0, 0.492895,-99) , 
0, 0.499995, 1, 0, 0.49921,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.0289532);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488519,-99) , 
4, 0.999996, 0, 0, 0.499371,-99) , 
NN(
0, 
0, 
-1, 0.999873, 1, -1, 0.482408,-99) , 
4, 0.999909, 0, 0, 0.497142,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466837,-99) , 
0, 0.49995, 1, 0, 0.49307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460089,-99) , 
0, 0.495234, 0, 0, 0.48179,-99) , 
4, 0.999524, 0, 0, 0.495831,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.0310976);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492045,-99) , 
4, 0.999997, 0, 0, 0.504536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.428602,-99) , 
5, 0.0475958, 0, 0, 0.49186,-99) , 
4, 0.999932, 0, 0, 0.501895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448663,-99) , 
4, 0.998571, 0, 0, 0.500003,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.0183979);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491072,-99) , 
5, -0.365013, 0, 0, 0.518019,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496112,-99) , 
5, -0.727887, 1, 0, 0.498758,-99) , 
2, 0.0733252, 0, 0, 0.502115,-99) , 
NN(
0, 
0, 
-1, 0.940995, 1, -1, 0.476042,-99) , 
5, 0.904713, 1, 0, 0.500577,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.024152);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0721489, 0, 1, 0.511858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443471,-99) , 
5, 0.915729, 0, 0, 0.484174,-99) , 
5, 0.882036, 1, 0, 0.508338,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501998,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453476,-99) , 
5, -0.346948, 1, 0, 0.497994,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.442381,-99) , 
3, 5.43772, 1, 0, 0.4937,-99) , 
5, -0.238108, 0, 0, 0.50304,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.0168824);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496967,-99) , 
0, 0.497138, 1, 0, 0.50373,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50042,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467222,-99) , 
0, 0.495233, 0, 0, 0.49205,-99) , 
5, 0.727849, 1, 0, 0.500909,-99) , 
NN(
0, 
0, 
-1, -0.96826, 0, -1, 0.483071,-99) , 
5, -0.904751, 0, 0, 0.499313,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.0277051);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491808,-99) , 
5, 0.238083, 0, 0, 0.503549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486127,-99) , 
2, 0.0689135, 0, 0, 0.490131,-99) , 
1, 0.000687785, 0, 0, 0.496011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447367,-99) , 
3, 8.6342, 1, 0, 0.494491,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.0414883);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.233535, 1, 1, 0.542269,-99) , 
NN(
0, 
0, 
-1, 0.0568052, 0, -1, 0.48167,-99) , 
1, -0.00146741, 1, 0, 0.499621,-99) , 
NN(
0, 
0, 
-1, 4.82503, 1, -1, 0.487468,-99) , 
5, -0.2381, 0, 0, 0.4952,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.0241763);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.597884,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490914,-99) , 
5, -0.523752, 1, 0, 0.495654,-99) , 
1, -0.00439438, 1, 0, 0.509879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49518,-99) , 
4, 0.999048, 1, 0, 0.497838,-99) , 
NN(
0, 
0, 
-1, 0.0682059, 1, -1, 0.483488,-99) , 
3, 4.37807, 1, 0, 0.495093,-99) , 
0, 0.500947, 0, 0, 0.499046,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.0121166);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.48952, 1, 1, 0.504364,-99) , 
NN(
0, 
0, 
-1, 0.0696692, 1, -1, 0.475639,-99) , 
4, 0.999524, 0, 0, 0.501932,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.0168525);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540348,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499841,-99) , 
2, 0.0582791, 0, 0, 0.506295,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470616,-99) , 
2, -0.0739158, 0, 0, 0.492733,-99) , 
3, 3.27481, 1, 0, 0.502352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460236,-99) , 
3, 8.39381, 1, 0, 0.500917,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.0310326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0700404, 0, 1, 0.508238,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.584637,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482311,-99) , 
1, -0.00481227, 1, 0, 0.494232,-99) , 
3, 2.53849, 1, 0, 0.50262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473861,-99) , 
3, 8.62065, 1, 0, 0.501694,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.0175003);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492377, 1, 1, 0.506508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4681,-99) , 
4, 0.999705, 0, 0, 0.505383,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478408,-99) , 
0, 0.494688, 0, 0, 0.495431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457363,-99) , 
0, 0.499993, 1, 0, 0.483078,-99) , 
4, 0.999524, 0, 0, 0.503467,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.0620457);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490906,-99) , 
0, 0.496188, 0, 0, 0.516902,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.566481,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476829,-99) , 
1, -0.0026657, 1, 0, 0.497177,-99) , 
3, 0.91737, 1, 0, 0.501297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469018,-99) , 
3, 8.62065, 1, 0, 0.500268,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.0295071);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471105,-99) , 
4, 0.998095, 0, 0, 0.507304,-99) , 
1, -0.00670938, 1, 0, 0.509167,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482251,-99) , 
3, 1.27697, 0, 0, 0.502263,-99) , 
NN(
0, 
0, 
-1, -0.637199, 1, -1, 0.479702,-99) , 
3, 3.14172, 1, 0, 0.49545,-99) , 
5, -0.238112, 0, 0, 0.504173,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.0145337);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492923, 0, 1, 0.533529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479878,-99) , 
0, 0.498909, 0, 0, 0.500936,-99) , 
0, 0.496187, 1, 0, 0.513136,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49862,-99) , 
5, 0.809423, 0, 0, 0.500975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476037,-99) , 
0, 0.490474, 0, 0, 0.499683,-99) , 
2, -0.0735147, 1, 0, 0.502055,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.0514546);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.714293, 0, 1, 0.558106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479813,-99) , 
5, 0.872921, 1, 0, 0.502598,-99) , 
NN(
0, 
0, 
-1, -0.768719, 1, -1, 0.482181,-99) , 
5, 0.61896, 0, 0, 0.489011,-99) , 
1, -0.00283878, 1, 0, 0.504036,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.0218517);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534176,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495639,-99) , 
2, 0.0274551, 0, 0, 0.503098,-99) , 
2, -0.215517, 1, 0, 0.504529,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470003,-99) , 
3, 8.6342, 1, 0, 0.503461,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.0194856);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0157124, 1, 1, 0.508693,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500818,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45262,-99) , 
4, 0.999873, 1, 0, 0.48805,-99) , 
4, 0.999909, 0, 0, 0.505955,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487554,-99) , 
4, 0.998206, 0, 0, 0.494265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473733,-99) , 
4, 0.99907, 1, 0, 0.486654,-99) , 
4, 0.999524, 0, 0, 0.504282,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.0263631);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.591865, 0, 1, 0.523544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485613,-99) , 
5, 0.714237, 1, 0, 0.516266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526044,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476772,-99) , 
4, 0.999909, 0, 0, 0.502759,-99) , 
4, 0.999048, 1, 0, 0.504028,-99) , 
0, 0.501901, 0, 0, 0.506546,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.0354185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552433,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493481,-99) , 
5, 0.746057, 1, 0, 0.526709,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477248,-99) , 
3, 2.79459, 1, 0, 0.501404,-99) , 
5, 0.238081, 0, 0, 0.514003,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488308,-99) , 
3, 3.89301, 1, 0, 0.507985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.588161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488192,-99) , 
1, -0.00535828, 1, 0, 0.494722,-99) , 
5, -0.333348, 1, 0, 0.4992,-99) , 
2, -0.071946, 1, 0, 0.501862,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.0429011);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49213,-99) , 
5, 0.75496, 1, 0, 0.524653,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487434,-99) , 
1, -0.00188065, 1, 0, 0.503756,-99) , 
2, 0.0713112, 0, 0, 0.507544,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476488,-99) , 
5, -0.784287, 1, 0, 0.498634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468692,-99) , 
5, -0.959185, 0, 0, 0.492582,-99) , 
5, -0.714287, 0, 0, 0.504477,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.0173766);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583622,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520579,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499319,-99) , 
2, -0.0704645, 1, 0, 0.50317,-99) , 
1, 0.00603436, 0, 0, 0.507716,-99) , 
NN(
0, 
0, 
-1, -0.492094, 1, -1, 0.491469,-99) , 
5, -0.333346, 0, 0, 0.502205,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.0299);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.578141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499007,-99) , 
1, 0.00331795, 0, 0, 0.513416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494326,-99) , 
0, 0.490472, 0, 0, 0.512388,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526097,-99) , 
NN(
0, 
0, 
-1, 1.59345, 1, -1, 0.485402,-99) , 
5, -0.863953, 0, 0, 0.494576,-99) , 
5, -0.809525, 0, 0, 0.509636,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.0248719);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540532,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489046,-99) , 
5, -0.809516, 0, 0, 0.507194,-99) , 
1, -0.00926118, 1, 0, 0.508614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462023,-99) , 
4, 0.998095, 0, 0, 0.507423,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.015088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.134651, 1, 1, 0.528486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515911,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496721,-99) , 
0, 0.494553, 0, 0, 0.503545,-99) , 
2, -0.066795, 1, 0, 0.508598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521913,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.495844,-99) , 
5, 0.904713, 0, 0, 0.497436,-99) , 
0, 0.496186, 1, 0, 0.501257,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.0168666);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495692, 1, 1, 0.506904,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474013,-99) , 
5, 0.142789, 1, 0, 0.489782,-99) , 
0, 0.490699, 0, 0, 0.505659,-99) , 
NN(
0, 
0, 
-1, 0.506163, 1, -1, 0.482182,-99) , 
0, 0.503805, 1, 0, 0.503015,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.026338);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.510258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465167,-99) , 
0, 0.494283, 0, 0, 0.507526,-99) , 
NN(
0, 
0, 
-1, 0.333092, 0, -1, 0.468339,-99) , 
2, -0.0723291, 0, 0, 0.495522,-99) , 
3, 4.36372, 1, 0, 0.507305,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.0286013);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.1837, 1, 1, 0.540985,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528212,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49567,-99) , 
2, -0.214379, 1, 0, 0.497724,-99) , 
1, -0.00146741, 1, 0, 0.510354,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49034, 0, 1, 0.513676,-99) , 
NN(
0, 
0, 
-1, -0.126688, 0, -1, 0.488868,-99) , 
0, 0.49238, 1, 0, 0.49249,-99) , 
5, -0.142879, 0, 0, 0.503349,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.0181196);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489833,-99) , 
3, 3.96131, 1, 0, 0.517994,-99) , 
NN(
0, 
0, 
-1, 0.918319, 0, 1, 0.502278,-99) , 
2, 0.0717946, 0, 0, 0.505113,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484238,-99) , 
3, 1.0318, 0, 0, 0.502103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471403,-99) , 
3, 3.28564, 1, 0, 0.493825,-99) , 
5, -0.714289, 0, 0, 0.502805,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.016146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.120199, 1, 1, 0.509223,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468183,-99) , 
2, -0.114557, 0, 0, 0.49713,-99) , 
5, -0.238111, 0, 0, 0.504953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468924,-99) , 
1, 0.0119067, 1, 0, 0.503893,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.00785415);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501149,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472559,-99) , 
4, 0.999388, 0, 0, 0.500088,-99) , 
4, 0.998571, 1, 0, 0.501305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476629,-99) , 
3, 8.37762, 1, 0, 0.500495,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.0252715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.918349, 0, 1, 0.527885,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479122,-99) , 
5, 0.877504, 1, 0, 0.500475,-99) , 
0, 0.497138, 0, 0, 0.516581,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473922,-99) , 
3, 6.56847, 1, 0, 0.503262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466919,-99) , 
3, 2.84712, 0, 0, 0.486102,-99) , 
5, 0.550958, 1, 0, 0.500656,-99) , 
5, 0.714243, 0, 0, 0.504389,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.0187294);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519973,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482717,-99) , 
5, 0.919168, 0, 0, 0.499155,-99) , 
5, 0.845738, 1, 0, 0.508068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526649,-99) , 
NN(
0, 
0, 
-1, 0.491244, 0, -1, 0.493774,-99) , 
0, 0.48952, 1, 0, 0.494907,-99) , 
5, 0.809456, 0, 0, 0.496905,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.0310706);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237805, 0, 1, 0.521218,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514204,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494752,-99) , 
2, 0.019006, 0, 0, 0.503644,-99) , 
2, -0.0549901, 1, 0, 0.507664,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49587, 1, 1, 0.523714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478034,-99) , 
5, 0.618962, 0, 0, 0.486246,-99) , 
1, 0.00224338, 0, 0, 0.496676,-99) , 
0, 0.499995, 0, 0, 0.500409,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.0190531);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496882,-99) , 
2, -0.0117572, 1, 0, 0.506348,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522845,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493851,-99) , 
2, -0.21475, 1, 0, 0.495713,-99) , 
5, 0.183648, 1, 0, 0.500256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505252,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453138,-99) , 
5, -0.968256, 0, 0, 0.486573,-99) , 
5, -0.904758, 0, 0, 0.499047,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.0119886);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522443,-99) , 
NN(
NN(
0, 
0, 
-1, 7.51788, 0, 1, 0.503139,-99) , 
NN(
0, 
0, 
-1, 0.492378, 0, -1, 0.483887,-99) , 
4, 0.999909, 0, 0, 0.499609,-99) , 
4, 0.998095, 1, 0, 0.500252,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.0258082);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48837,-99) , 
0, 0.501628, 1, 0, 0.510558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472973,-99) , 
3, 6.288, 1, 0, 0.498222,-99) , 
5, 0.619016, 0, 0, 0.502002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572554,-99) , 
NN(
0, 
0, 
-1, -0.142866, 0, -1, 0.483161,-99) , 
1, 0.00644956, 0, 0, 0.490328,-99) , 
0, 0.497138, 0, 0, 0.497169,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.031743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.557022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507437,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490602,-99) , 
5, 0.428542, 0, 0, 0.501392,-99) , 
1, 0.00603436, 0, 0, 0.504447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542312,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48207,-99) , 
1, -0.00439438, 1, 0, 0.495477,-99) , 
NN(
0, 
0, 
-1, 2.33519, 1, -1, 0.46515,-99) , 
2, 0.0582791, 1, 0, 0.488975,-99) , 
5, -0.333341, 0, 0, 0.499247,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.0198803);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486438,-99) , 
4, 0.999905, 0, 0, 0.509511,-99) , 
NN(
0, 
0, 
-1, 0.614492, 0, -1, 0.495806,-99) , 
5, 0.523775, 1, 0, 0.504458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465286,-99) , 
0, 0.48952, 0, 0, 0.503082,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.0375059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489833,-99) , 
4, 0.999998, 0, 0, 0.506606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46185,-99) , 
2, -0.0545779, 0, 0, 0.489106,-99) , 
4, 0.999955, 0, 0, 0.502706,-99) , 
NN(
0, 
0, 
-1, -0.071946, 1, -1, 0.479422,-99) , 
4, 0.999524, 0, 0, 0.500715,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.0193965);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549423,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485077,-99) , 
5, -0.183685, 0, 0, 0.495063,-99) , 
1, 0.00914356, 0, 0, 0.497607,-99) , 
NN(
0, 
0, 
-1, 0.94553, 1, -1, 0.472793,-99) , 
5, 0.904714, 1, 0, 0.496174,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.0285081);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.142918, 1, 1, 0.574555,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505187,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467746,-99) , 
0, 0.492379, 0, 0, 0.501507,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.489939,-99) , 
5, 0.619008, 0, 0, 0.493637,-99) , 
1, 0.00682455, 0, 0, 0.499714,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.0253115);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495236, 1, 1, 0.518638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479995,-99) , 
2, 0.0582791, 1, 0, 0.499694,-99) , 
5, -0.410465, 0, 0, 0.506685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551041,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492483,-99) , 
4, 0.99981, 1, 0, 0.500144,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.486806,-99) , 
5, 0.67344, 1, 0, 0.493064,-99) , 
5, 0.238065, 1, 0, 0.499873,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.0170688);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492804,-99) , 
0, 0.49809, 1, 0, 0.517327,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497365,-99) , 
2, 0.0683939, 0, 0, 0.501039,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474182,-99) , 
3, 3.24104, 0, 0, 0.484164,-99) , 
5, 0.723312, 1, 0, 0.49808,-99) , 
5, 0.904714, 0, 0, 0.499277,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.0260995);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496584,-99) , 
4, 0.999997, 0, 0, 0.507797,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466215,-99) , 
5, 0.714253, 1, 0, 0.487461,-99) , 
4, 0.999932, 0, 0, 0.504416,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502396,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460923,-99) , 
0, 0.499043, 1, 0, 0.486569,-99) , 
4, 0.999524, 0, 0, 0.502908,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.0201326);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.94194, 0, 1, 0.507434,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461913,-99) , 
5, 0.618997, 1, 0, 0.478932,-99) , 
4, 0.999909, 0, 0, 0.503697,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509419,-99) , 
NN(
0, 
0, 
-1, 0.49714, 0, -1, 0.479124,-99) , 
5, 0.714243, 1, 0, 0.489084,-99) , 
4, 0.999524, 0, 0, 0.502441,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.0264231);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.238877, 1, 1, 0.561055,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488187,-99) , 
5, 0.764128, 1, 0, 0.499089,-99) , 
NN(
0, 
0, 
-1, 4.70505, 1, -1, 0.484681,-99) , 
5, -0.238111, 0, 0, 0.494208,-99) , 
1, 0.00682455, 0, 0, 0.499284,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.0307528);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.333314, 1, 1, 0.574014,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48573,-99) , 
0, 0.494285, 0, 0, 0.514194,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489102,-99) , 
3, 4.1407, 0, 0, 0.491895,-99) , 
5, 0.809477, 0, 0, 0.495413,-99) , 
1, 0.00682455, 0, 0, 0.501268,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.0165046);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.525047,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457686,-99) , 
4, 0.999751, 0, 0, 0.502915,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45973,-99) , 
5, 0.809606, 1, 0, 0.484198,-99) , 
4, 0.999524, 0, 0, 0.501607,-99) , 
2, 0.208227, 0, 0, 0.502882,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.0208573);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538439,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492706,-99) , 
5, -0.428656, 0, 0, 0.516823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468151,-99) , 
5, 0.713993, 1, 0, 0.507332,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47979,-99) , 
5, 0.936461, 1, 0, 0.513323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489398,-99) , 
0, 0.498771, 0, 0, 0.495104,-99) , 
5, 0.80948, 0, 0, 0.497911,-99) , 
0, 0.493329, 1, 0, 0.49942,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.0120349);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520518,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481898,-99) , 
5, 0.618451, 1, 0, 0.511303,-99) , 
NN(
0, 
0, 
-1, 0.506344, 1, -1, 0.498685,-99) , 
0, 0.494282, 1, 0, 0.501287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460964,-99) , 
4, 0.998095, 0, 0, 0.500263,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.0210032);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.52382, 1, 1, 0.542812,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481945,-99) , 
4, 0.999909, 0, 0, 0.502925,-99) , 
NN(
0, 
0, 
-1, 0.495237, 0, -1, 0.482816,-99) , 
4, 0.999524, 0, 0, 0.501165,-99) , 
1, 0.00855322, 0, 0, 0.503429,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.0115302);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519214,-99) , 
NN(
0, 
0, 
-1, 0.499043, 1, -1, 0.496147,-99) , 
5, 0.904712, 0, 0, 0.497285,-99) , 
4, 0.998095, 1, 0, 0.498654,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.00761402);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531848,-99) , 
NN(
0, 
0, 
-1, 6.76441, 1, -1, 0.498737,-99) , 
2, -0.207515, 1, 0, 0.50037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467365,-99) , 
3, 8.33212, 1, 0, 0.499225,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.0227023);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497051,-99) , 
5, -0.1837, 0, 0, 0.50558,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523707,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489314,-99) , 
4, 0.999524, 1, 0, 0.494467,-99) , 
5, 0.428536, 1, 0, 0.501043,-99) , 
NN(
0, 
0, 
-1, 0.498087, 1, -1, 0.478267,-99) , 
2, -0.213212, 0, 0, 0.499839,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.0209866);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.904713, 0, 1, 0.507699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480431,-99) , 
0, 0.506102, 1, 0, 0.505845,-99) , 
NN(
0, 
0, 
-1, 0.0475992, 1, -1, 0.487483,-99) , 
0, 0.503079, 0, 0, 0.492832,-99) , 
0, 0.49809, 1, 0, 0.500208,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.0314077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.773242, 0, 1, 0.588165,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499689,-99) , 
5, -0.0476278, 1, 0, 0.556927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509276,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490556,-99) , 
5, 0.619006, 0, 0, 0.496771,-99) , 
NN(
0, 
0, 
-1, 0.71425, 1, -1, 0.480864,-99) , 
0, 0.493329, 0, 0, 0.494216,-99) , 
1, 0.00560609, 0, 0, 0.500658,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.0146341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539244,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505532,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493437,-99) , 
4, 0.999909, 0, 0, 0.503297,-99) , 
4, 0.998095, 1, 0, 0.504258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471587,-99) , 
3, 8.62065, 1, 0, 0.503212,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.035566);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.564719, 1, 1, 0.523817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485815,-99) , 
3, 2.22729, 1, 0, 0.504356,-99) , 
5, 0.23807, 0, 0, 0.51407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486336,-99) , 
3, 4.38175, 1, 0, 0.505685,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467113,-99) , 
2, -0.0109611, 1, 0, 0.495333,-99) , 
2, 0.00329233, 0, 0, 0.501152,-99) , 
2, -0.0715338, 1, 0, 0.503528,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.0184428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502308, 1, 1, 0.518338,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519255,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498204,-99) , 
3, 0.876679, 1, 0, 0.503225,-99) , 
3, 4.05198, 0, 0, 0.506928,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518767,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491533,-99) , 
0, 0.489792, 1, 0, 0.492933,-99) , 
5, 0.90471, 0, 0, 0.494661,-99) , 
0, 0.499043, 0, 0, 0.499809,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.00820976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505981, 0, 1, 0.519069,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528652,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499612,-99) , 
3, 8.34925, 0, 0, 0.500573,-99) , 
0, 0.504757, 0, 0, 0.50199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469401,-99) , 
4, 0.999048, 0, 0, 0.50033,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.0150428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.51468, 1, 1, 0.52188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505202,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471984,-99) , 
0, 0.498094, 0, 0, 0.489496,-99) , 
3, 4.27094, 1, 0, 0.510839,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497843,-99) , 
5, 0.904713, 0, 0, 0.499266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473902,-99) , 
4, 0.999524, 0, 0, 0.497697,-99) , 
2, -0.0715266, 1, 0, 0.500071,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.0181996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0286207, 1, 1, 0.506481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.431037,-99) , 
3, 4.24011, 1, 0, 0.492187,-99) , 
4, 0.999909, 0, 0, 0.503853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463745,-99) , 
4, 0.998095, 0, 0, 0.502842,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.0232585);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0674466, 1, 1, 0.513235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49109,-99) , 
5, 0.0475949, 1, 0, 0.499418,-99) , 
0, 0.496187, 1, 0, 0.504178,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459905,-99) , 
3, 8.6342, 1, 0, 0.502773,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.0326858);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489429,-99) , 
3, 4.02116, 1, 0, 0.513164,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.572956,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490712,-99) , 
1, 0.00612871, 0, 0, 0.497617,-99) , 
2, 0.0713191, 0, 0, 0.500455,-99) , 
NN(
0, 
0, 
-1, -0.968251, 0, -1, 0.478788,-99) , 
5, -0.904751, 0, 0, 0.498539,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.020898);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00581668, 1, 1, 0.513802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482593,-99) , 
2, 0.0605497, 1, 0, 0.502687,-99) , 
5, -0.419528, 0, 0, 0.508306,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533093,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497775,-99) , 
4, 0.999048, 1, 0, 0.501864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471194,-99) , 
0, 0.492377, 0, 0, 0.498954,-99) , 
5, 0.523771, 1, 0, 0.504898,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.0214106);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496637,-99) , 
2, -0.0283802, 1, 0, 0.503804,-99) , 
NN(
0, 
0, 
-1, 3.73825, 1, -1, 0.487982,-99) , 
4, 0.999932, 0, 0, 0.501192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502681,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468077,-99) , 
0, 0.495279, 0, 0, 0.485122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459082,-99) , 
0, 0.499995, 1, 0, 0.476417,-99) , 
4, 0.999524, 0, 0, 0.499127,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.0102603);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.231946, 0, 1, 0.524246,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499565,-99) , 
3, 4.00159, 0, 0, 0.502321,-99) , 
3, 0.527107, 1, 0, 0.504073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481578,-99) , 
3, 8.6342, 1, 0, 0.503358,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.0195334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.23067, 0, 1, 0.507224,-99) , 
NN(
0, 
0, 
-1, 0.0696692, 1, -1, 0.485071,-99) , 
4, 0.999524, 0, 0, 0.505327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.42314,-99) , 
1, 0.0124237, 1, 0, 0.503085,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.00973756);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 7.89162, 0, 1, 0.503589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470835,-99) , 
4, 0.999048, 0, 0, 0.50195,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.0202275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489259,-99) , 
5, 0.919196, 0, 0, 0.507719,-99) , 
5, 0.845764, 1, 0, 0.518366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52345,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48491,-99) , 
5, 0.55097, 1, 0, 0.499486,-99) , 
4, 0.999531, 1, 0, 0.500634,-99) , 
5, 0.809479, 0, 0, 0.503288,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.0226325);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477721,-99) , 
5, 0.936461, 1, 0, 0.512446,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.494682,-99) , 
5, 0.333302, 0, 0, 0.503024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449887,-99) , 
1, 0.0119067, 1, 0, 0.501523,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.0174816);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493529,-99) , 
4, 0.999864, 0, 0, 0.518255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505898,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494088,-99) , 
0, 0.499995, 1, 0, 0.501768,-99) , 
5, 0.809477, 0, 0, 0.503855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473613,-99) , 
4, 0.998572, 0, 0, 0.502772,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.0147312);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496809,-99) , 
5, 0.523733, 1, 0, 0.510758,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496322,-99) , 
4, 0.999048, 1, 0, 0.497575,-99) , 
0, 0.503986, 0, 0, 0.499144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464217,-99) , 
2, -0.0841393, 1, 0, 0.474828,-99) , 
2, 0.0649069, 0, 0, 0.483123,-99) , 
0, 0.492378, 0, 0, 0.497218,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.0154992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495817,-99) , 
3, 3.97744, 1, 0, 0.51816,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473865,-99) , 
2, -0.211789, 0, 0, 0.502953,-99) , 
0, 0.493738, 1, 0, 0.50497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473419,-99) , 
5, -0.238105, 1, 0, 0.485597,-99) , 
0, 0.490472, 0, 0, 0.503861,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.00867592);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.23748, 0, 1, 0.521086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498782,-99) , 
0, 0.489657, 0, 0, 0.514529,-99) , 
NN(
NN(
0, 
0, 
-1, 0.940995, 0, 1, 0.524197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472084,-99) , 
4, 0.999048, 0, 0, 0.499663,-99) , 
5, 0.904713, 0, 0, 0.501182,-99) , 
0, 0.492378, 1, 0, 0.502771,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.0158578);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493149,-99) , 
0, 0.498228, 0, 0, 0.497833,-99) , 
4, 0.998095, 1, 0, 0.499028,-99) , 
NN(
0, 
0, 
-1, 0.238136, 0, -1, 0.47335,-99) , 
0, 0.504756, 1, 0, 0.497046,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.00835361);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538788,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527115,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499624,-99) , 
3, 7.87808, 0, 0, 0.50065,-99) , 
2, 0.215251, 0, 0, 0.502286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463358,-99) , 
4, 0.998571, 0, 0, 0.500901,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.0205488);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526739,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492704,-99) , 
3, 1.69102, 1, 0, 0.501051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480603,-99) , 
3, 8.3483, 1, 0, 0.500352,-99) , 
0, 0.489521, 1, 0, 0.501244,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.0201089);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.531159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454542,-99) , 
5, -0.972781, 0, 0, 0.503264,-99) , 
5, -0.428595, 0, 0, 0.508649,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487316,-99) , 
5, 0.401377, 0, 0, 0.497307,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456383,-99) , 
0, 0.490472, 0, 0, 0.495399,-99) , 
5, -0.142871, 1, 0, 0.500501,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.0110215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499056,-99) , 
3, 7.67973, 0, 0, 0.50089,-99) , 
NN(
0, 
0, 
-1, -0.0476444, 0, -1, 0.488078,-99) , 
4, 0.999932, 0, 0, 0.498226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469797,-99) , 
4, 0.998572, 0, 0, 0.497228,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.0390069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0639778, 1, 1, 0.510196,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481284,-99) , 
4, 0.999524, 0, 0, 0.507056,-99) , 
NN(
NN(
0, 
0, 
-1, -0.619122, 0, 1, 0.551802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533382,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482879,-99) , 
5, 0.904715, 0, 0, 0.48634,-99) , 
1, -0.00439438, 1, 0, 0.494884,-99) , 
0, 0.495234, 1, 0, 0.498191,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.0164879);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486089,-99) , 
4, 0.999977, 1, 0, 0.529185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498035,-99) , 
4, 0.999524, 0, 0, 0.519407,-99) , 
NN(
NN(
0, 
0, 
-1, -0.00439438, 1, 1, 0.510142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480366,-99) , 
0, 0.499859, 1, 0, 0.496492,-99) , 
0, 0.5019, 0, 0, 0.499414,-99) , 
5, 0.809475, 0, 0, 0.502424,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.0250308);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.29397, 0, 1, 0.515297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462399,-99) , 
3, 6.6453, 1, 0, 0.50592,-99) , 
5, 0.523772, 0, 0, 0.509475,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491312,-99) , 
2, 0.139967, 0, 0, 0.510578,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487596,-99) , 
5, 0.809482, 0, 0, 0.491214,-99) , 
2, 0.0719532, 0, 0, 0.495233,-99) , 
0, 0.495235, 0, 0, 0.505635,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.0266044);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.306186, 0, 1, 0.515368,-99) , 
NN(
0, 
0, 
-1, 0.818554, 1, -1, 0.483525,-99) , 
5, 0.619015, 1, 0, 0.506781,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504444,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492768,-99) , 
0, 0.502172, 1, 0, 0.499951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476617,-99) , 
1, -0.0031256, 1, 0, 0.487055,-99) , 
0, 0.498091, 0, 0, 0.495223,-99) , 
0, 0.494281, 1, 0, 0.497646,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.0182271);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.837994, 1, 1, 0.538056,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516732,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490747,-99) , 
0, 0.499044, 0, 0, 0.500743,-99) , 
5, 0.863908, 1, 0, 0.513782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495545,-99) , 
3, 0.695355, 1, 0, 0.498172,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46392,-99) , 
0, 0.499049, 0, 0, 0.481476,-99) , 
3, 6.1448, 1, 0, 0.496832,-99) , 
5, 0.809477, 0, 0, 0.499386,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.0189197);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523642, 0, 1, 0.529483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480822,-99) , 
0, 0.506026, 1, 0, 0.506517,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502989,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491246,-99) , 
2, 0.0305168, 0, 0, 0.494599,-99) , 
0, 0.500948, 0, 0, 0.497816,-99) , 
2, -0.214372, 1, 0, 0.499458,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.0354002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.151748, 1, 1, 0.542708,-99) , 
NN(
0, 
0, 
-1, 0.306123, 0, -1, 0.489441,-99) , 
1, -0.0021466, 1, 0, 0.502231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481523,-99) , 
5, -0.764184, 1, 0, 0.504052,-99) , 
NN(
0, 
0, 
-1, 0.499987, 1, -1, 0.480995,-99) , 
3, 1.35483, 0, 0, 0.495468,-99) , 
5, -0.619054, 0, 0, 0.500565,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.033048);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.455903, 1, 1, 0.571481,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508603,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489266,-99) , 
5, 0.510175, 0, 0, 0.501235,-99) , 
1, 0.00423125, 0, 0, 0.508264,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.586143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490926,-99) , 
1, 0.0087983, 0, 0, 0.499236,-99) , 
NN(
0, 
0, 
-1, 0.497141, 0, -1, 0.472735,-99) , 
2, 0.0703755, 1, 0, 0.494357,-99) , 
5, -0.142877, 0, 0, 0.502832,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.021848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.513132,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475853,-99) , 
5, 0.238173, 0, 0, 0.488243,-99) , 
3, 4.38526, 1, 0, 0.508372,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491855,-99) , 
5, 0.714243, 0, 0, 0.496154,-99) , 
1, -0.00752209, 1, 0, 0.498632,-99) , 
0, 0.495234, 1, 0, 0.50128,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.021858);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497411, 1, 1, 0.509003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48059,-99) , 
4, 0.998572, 0, 0, 0.508076,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505813,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482695,-99) , 
5, 0.428478, 0, 0, 0.490531,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462141,-99) , 
3, 4.1245, 1, 0, 0.4842,-99) , 
0, 0.493329, 0, 0, 0.504101,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.0217869);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525059,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508239,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496016,-99) , 
5, -0.18372, 0, 0, 0.502358,-99) , 
1, -0.00926118, 1, 0, 0.503515,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526686,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470045,-99) , 
0, 0.500947, 0, 0, 0.477405,-99) , 
5, 0.755061, 1, 0, 0.484966,-99) , 
5, 0.714245, 1, 0, 0.499277,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.0210126);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.378624, 0, 1, 0.511777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489258,-99) , 
2, -0.0755314, 1, 0, 0.497465,-99) , 
5, 0.523769, 1, 0, 0.506444,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504701,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493229,-99) , 
5, -0.523821, 1, 0, 0.496468,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470985,-99) , 
0, 0.498544, 0, 0, 0.494451,-99) , 
0, 0.498091, 1, 0, 0.500429,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.0301627);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492958,-99) , 
4, 0.999997, 0, 0, 0.505648,-99) , 
NN(
0, 
0, 
-1, 4.13949, 1, -1, 0.483032,-99) , 
4, 0.999932, 0, 0, 0.501906,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507902,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485958,-99) , 
0, 0.49809, 0, 0, 0.496331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46294,-99) , 
4, 0.99907, 1, 0, 0.484098,-99) , 
4, 0.999524, 0, 0, 0.500405,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.0297705);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492185,-99) , 
2, 0.0612536, 1, 0, 0.510173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523106,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469532,-99) , 
3, 2.33523, 1, 0, 0.491753,-99) , 
2, -0.0858611, 0, 0, 0.507293,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46499,-99) , 
5, 0.849912, 1, 0, 0.512064,-99) , 
NN(
0, 
0, 
-1, 0.151879, 0, -1, 0.489802,-99) , 
1, -0.00146741, 1, 0, 0.496304,-99) , 
5, -0.0476684, 1, 0, 0.50081,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.0112418);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.50502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475737,-99) , 
3, 8.62065, 1, 0, 0.504106,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.0151197);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535542,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516966,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488255,-99) , 
0, 0.504621, 1, 0, 0.506041,-99) , 
2, 0.0862722, 0, 0, 0.5119,-99) , 
NN(
0, 
0, 
-1, 0.500539, 1, -1, 0.495544,-99) , 
0, 0.5019, 0, 0, 0.499019,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.0293334);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.305677, 1, 1, 0.574822,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500698,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486054,-99) , 
5, 0.383193, 0, 0, 0.494925,-99) , 
1, -0.00357725, 1, 0, 0.505569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486356,-99) , 
3, 1.24415, 0, 0, 0.50179,-99) , 
NN(
0, 
0, 
-1, -0.701967, 0, -1, 0.481269,-99) , 
5, -0.764198, 1, 0, 0.496248,-99) , 
5, -0.619052, 0, 0, 0.503255,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.0287501);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.238018, 1, 1, 0.567456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4902,-99) , 
5, -0.238132, 0, 0, 0.498258,-99) , 
NN(
0, 
0, 
-1, 0.505165, 0, -1, 0.476945,-99) , 
0, 0.5019, 1, 0, 0.493851,-99) , 
1, 0.00560609, 0, 0, 0.501329,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.0235727);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.507804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474326,-99) , 
4, 0.999714, 0, 0, 0.506401,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497972,-99) , 
5, 0.750669, 1, 0, 0.515605,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481742,-99) , 
4, 0.999524, 1, 0, 0.487571,-99) , 
3, 4.4012, 0, 0, 0.493815,-99) , 
5, 0.523773, 1, 0, 0.501812,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.0144277);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542418,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530932,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498349,-99) , 
5, -0.0476396, 1, 0, 0.503231,-99) , 
3, 7.96725, 0, 0, 0.504338,-99) , 
4, 0.998095, 1, 0, 0.505476,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.0213151);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48918,-99) , 
3, 4.07022, 1, 0, 0.502774,-99) , 
1, -0.00283878, 1, 0, 0.509735,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471338,-99) , 
5, 0.904705, 1, 0, 0.499182,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465628,-99) , 
2, -0.0104581, 1, 0, 0.488902,-99) , 
2, 0.00378944, 0, 0, 0.494555,-99) , 
2, -0.0710108, 1, 0, 0.497309,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.0332014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491059,-99) , 
5, 0.75501, 1, 0, 0.517556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485545,-99) , 
5, -0.714296, 0, 0, 0.511239,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479061,-99) , 
5, -0.714266, 0, 0, 0.503198,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461051,-99) , 
2, 0.0096889, 0, 0, 0.487661,-99) , 
2, -0.00455346, 1, 0, 0.496143,-99) , 
2, 0.0702233, 0, 0, 0.498938,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.0213699);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.238986, 1, 1, 0.556502,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49847,-99) , 
4, 0.999048, 1, 0, 0.500801,-99) , 
NN(
0, 
0, 
-1, 4.67425, 1, -1, 0.486442,-99) , 
5, -0.238112, 0, 0, 0.495921,-99) , 
1, 0.00682455, 0, 0, 0.500442,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.0137999);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536237,-99) , 
NN(
0, 
0, 
-1, 0.0117245, 1, -1, 0.496533,-99) , 
1, -0.00837444, 1, 0, 0.498608,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460609,-99) , 
4, 0.999048, 0, 0, 0.496699,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.0147011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528906,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501268,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487359,-99) , 
5, 0.00225658, 0, 0, 0.496276,-99) , 
1, 0.00855322, 0, 0, 0.497792,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454631,-99) , 
5, -0.968265, 0, 0, 0.483752,-99) , 
5, -0.904758, 0, 0, 0.496567,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.0179124);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0856642, 1, 1, 0.504798,-99) , 
NN(
0, 
0, 
-1, 4.17442, 1, -1, 0.478293,-99) , 
4, 0.999932, 0, 0, 0.500458,-99) , 
NN(
0, 
0, 
-1, 0.499998, 1, -1, 0.476019,-99) , 
4, 0.999524, 0, 0, 0.498391,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.0231404);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487986,-99) , 
4, 0.999932, 0, 0, 0.512612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488407,-99) , 
2, 0.0144798, 0, 0, 0.495504,-99) , 
2, -0.0597889, 1, 0, 0.49882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471193,-99) , 
4, 0.998572, 0, 0, 0.497824,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.0129834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.221621, 0, 1, 0.504036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474313,-99) , 
3, 8.21353, 1, 0, 0.502722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502618,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478083,-99) , 
0, 0.494605, 0, 0, 0.492937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475033,-99) , 
0, 0.500951, 1, 0, 0.487419,-99) , 
5, -0.809525, 0, 0, 0.500379,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.0186518);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541978,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499548,-99) , 
5, 0.809477, 0, 0, 0.506564,-99) , 
NN(
0, 
0, 
-1, 0.215893, 1, -1, 0.492359,-99) , 
0, 0.49605, 1, 0, 0.49618,-99) , 
NN(
0, 
0, 
-1, 0.489973, 0, -1, 0.471538,-99) , 
0, 0.491425, 0, 0, 0.494093,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.0158587);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494585,-99) , 
3, 1.69102, 1, 0, 0.500208,-99) , 
3, 8.3483, 0, 0, 0.501242,-99) , 
NN(
0, 
0, 
-1, 0.497138, 0, -1, 0.48002,-99) , 
4, 0.999048, 0, 0, 0.500125,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.0176109);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.11296, 1, 1, 0.505871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503544,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471204,-99) , 
2, 0.0719532, 1, 0, 0.493604,-99) , 
3, 4.38175, 1, 0, 0.503324,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489277,-99) , 
3, 1.02607, 0, 0, 0.503154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472809,-99) , 
3, 2.47321, 1, 0, 0.491362,-99) , 
5, -0.809516, 0, 0, 0.501467,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.0344007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238082, 0, 1, 0.51076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485466,-99) , 
3, 2.96135, 0, 0, 0.4973,-99) , 
2, -0.00350627, 1, 0, 0.504873,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.553708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484608,-99) , 
3, 1.54803, 1, 0, 0.503425,-99) , 
NN(
0, 
0, 
-1, 0.49904, 0, -1, 0.466251,-99) , 
3, 4.38545, 1, 0, 0.491221,-99) , 
2, 0.0713191, 1, 0, 0.502389,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.0163862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.427481, 0, 1, 0.514955,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49499,-99) , 
2, 0.0127077, 0, 0, 0.498866,-99) , 
2, 0.0867256, 0, 0, 0.501037,-99) , 
NN(
0, 
0, 
-1, 0.0713191, 1, -1, 0.483354,-99) , 
4, 0.999524, 0, 0, 0.499531,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.015243);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.523147,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498472,-99) , 
5, -0.238113, 0, 0, 0.502738,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504313,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489044,-99) , 
2, 0.0330861, 0, 0, 0.493355,-99) , 
5, 0.333301, 1, 0, 0.498471,-99) , 
2, -0.211411, 1, 0, 0.499771,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.0139017);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5403,-99) , 
NN(
NN(
0, 
0, 
-1, 0.506117, 0, 1, 0.52546,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497633,-99) , 
4, 0.999048, 1, 0, 0.499003,-99) , 
0, 0.504757, 0, 0, 0.501009,-99) , 
1, 0.00855322, 0, 0, 0.503032,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.0226575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.608887,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496413,-99) , 
1, 0.00343443, 0, 0, 0.517018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496076,-99) , 
5, -0.809438, 0, 0, 0.513218,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496004,-99) , 
3, 0.694283, 1, 0, 0.500826,-99) , 
NN(
0, 
0, 
-1, 0.073915, 1, -1, 0.484063,-99) , 
3, 4.21945, 1, 0, 0.497395,-99) , 
0, 0.5019, 0, 0, 0.5007,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.0207179);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.562173,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498826,-99) , 
1, 0.00579008, 0, 0, 0.505542,-99) , 
NN(
0, 
0, 
-1, -0.0545779, 0, -1, 0.485816,-99) , 
4, 0.999932, 0, 0, 0.502264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509739,-99) , 
NN(
0, 
0, 
-1, 0.998616, 0, -1, 0.46231,-99) , 
5, 0.714195, 1, 0, 0.478359,-99) , 
4, 0.999524, 0, 0, 0.500268,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.0255057);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489333,-99) , 
0, 0.490472, 0, 0, 0.510109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50643,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47177,-99) , 
3, 2.43781, 1, 0, 0.492718,-99) , 
5, -0.809525, 0, 0, 0.507566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465507,-99) , 
1, 0.0096605, 1, 0, 0.505788,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.0132315);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.505479,-99) , 
NN(
0, 
0, 
-1, -0.071946, 0, -1, 0.480953,-99) , 
4, 0.999524, 0, 0, 0.503424,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.016363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491697, 1, 1, 0.529509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48191,-99) , 
0, 0.48917, 0, 0, 0.497168,-99) , 
0, 0.49088, 0, 0, 0.515406,-99) , 
NN(
NN(
0, 
0, 
-1, 0.941006, 1, 1, 0.523951,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496742,-99) , 
2, -0.0692319, 1, 0, 0.499061,-99) , 
5, 0.904714, 0, 0, 0.5006,-99) , 
0, 0.493329, 1, 0, 0.502952,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.0126222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540028,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487019,-99) , 
4, 0.999955, 0, 0, 0.498547,-99) , 
2, 0.228029, 0, 0, 0.499813,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485122,-99) , 
0, 0.495282, 0, 0, 0.495206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457262,-99) , 
0, 0.499996, 1, 0, 0.482756,-99) , 
4, 0.999524, 0, 0, 0.498387,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.0135176);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537599,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511974,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49988,-99) , 
5, 0.61901, 0, 0, 0.503275,-99) , 
0, 0.490472, 1, 0, 0.505152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465804,-99) , 
4, 0.999048, 0, 0, 0.503187,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.01998);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490207, 0, 1, 0.522006,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495638,-99) , 
0, 0.495002, 0, 0, 0.503659,-99) , 
0, 0.492151, 1, 0, 0.50853,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516327,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494426,-99) , 
5, 0.809478, 0, 0, 0.497117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448773,-99) , 
4, 0.999048, 0, 0, 0.494967,-99) , 
0, 0.497139, 1, 0, 0.500632,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.0394094);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542214,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477671,-99) , 
4, 0.999995, 0, 0, 0.515508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.437274,-99) , 
4, 0.999905, 0, 0, 0.510967,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527472,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496551,-99) , 
2, 0.193219, 0, 0, 0.499503,-99) , 
2, -0.214508, 1, 0, 0.501335,-99) , 
5, 0.0475824, 1, 0, 0.505548,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.0194522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.84947, 1, 1, 0.509469,-99) , 
NN(
0, 
0, 
-1, -0.970647, 0, -1, 0.491606,-99) , 
5, -0.922902, 0, 0, 0.507569,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490611,-99) , 
0, 0.498091, 1, 0, 0.508236,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456908,-99) , 
4, 0.999819, 0, 0, 0.495923,-99) , 
4, 0.999524, 1, 0, 0.498551,-99) , 
5, 0.619, 1, 0, 0.504828,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.017806);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547258,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494224,-99) , 
2, 0.0545656, 0, 0, 0.497487,-99) , 
4, 0.998095, 1, 0, 0.498803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465176,-99) , 
3, 7.97442, 1, 0, 0.49745,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.019265);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0970401, 1, 1, 0.507793,-99) , 
NN(
0, 
0, 
-1, 0.428564, 0, -1, 0.486284,-99) , 
4, 0.999932, 0, 0, 0.504179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47253,-99) , 
2, -0.0730265, 1, 0, 0.486141,-99) , 
4, 0.999524, 0, 0, 0.502652,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.0152348);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00359853, 1, 1, 0.531476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499578,-99) , 
4, 0.999524, 1, 0, 0.501773,-99) , 
3, 0.507817, 1, 0, 0.504376,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524823,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482638,-99) , 
5, 0.854917, 1, 0, 0.510022,-99) , 
NN(
0, 
0, 
-1, 5.93582, 1, -1, 0.485835,-99) , 
5, 0.619013, 0, 0, 0.493995,-99) , 
3, 4.17451, 1, 0, 0.502143,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.0221792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533142,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508176,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475377,-99) , 
4, 0.99966, 0, 0, 0.50622,-99) , 
5, 0.904714, 0, 0, 0.507528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46792,-99) , 
4, 0.998572, 0, 0, 0.506135,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.0122377);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501898, 0, 1, 0.503249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466939,-99) , 
3, 8.23316, 1, 0, 0.501832,-99) , 
NN(
0, 
0, 
-1, 2.65827, 1, -1, 0.476747,-99) , 
5, -0.90476, 0, 0, 0.499561,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.01352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510879,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488032,-99) , 
5, -0.714208, 0, 0, 0.505109,-99) , 
0, 0.502716, 1, 0, 0.509228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494354,-99) , 
2, 0.0706413, 1, 0, 0.522109,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500431,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487692,-99) , 
5, 0.714242, 1, 0, 0.497892,-99) , 
4, 0.999524, 1, 0, 0.500009,-99) , 
0, 0.5019, 0, 0, 0.501942,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.0219014);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529445,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47957,-99) , 
4, 0.999909, 0, 0, 0.517455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481442,-99) , 
4, 0.999524, 0, 0, 0.51092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486778,-99) , 
2, 0.00547489, 0, 0, 0.494177,-99) , 
0, 0.505709, 0, 0, 0.495613,-99) , 
2, -0.0692, 1, 0, 0.498417,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.0400637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0101219, 1, 1, 0.560722,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489538,-99) , 
5, -0.809454, 0, 0, 0.543938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495258,-99) , 
0, 0.498092, 1, 0, 0.503661,-99) , 
NN(
0, 
0, 
-1, -0.768703, 1, -1, 0.483599,-99) , 
5, 0.619009, 0, 0, 0.490274,-99) , 
1, 0.00367803, 0, 0, 0.49992,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.0294244);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.646255, 1, 1, 0.557947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468984,-99) , 
0, 0.491425, 0, 0, 0.501509,-99) , 
1, 0.00331795, 0, 0, 0.51013,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514908,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483,-99) , 
0, 0.494283, 0, 0, 0.506826,-99) , 
NN(
0, 
0, 
-1, 0.498095, 1, -1, 0.483663,-99) , 
5, -0.746035, 1, 0, 0.495592,-99) , 
5, -0.238112, 0, 0, 0.504782,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.0297475);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.502716, 1, 1, 0.513705,-99) , 
NN(
NN(
0, 
0, 
-1, -0.049059, 1, 1, 0.573446,-99) , 
NN(
0, 
0, 
-1, 0.619008, 0, -1, 0.491156,-99) , 
1, -0.00535207, 1, 0, 0.49922,-99) , 
0, 0.5019, 0, 0, 0.502224,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.0356108);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.52382, 0, 1, 0.548341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499839,-99) , 
3, 3.52994, 1, 0, 0.534684,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492656,-99) , 
0, 0.495234, 0, 0, 0.515815,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524627,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485453,-99) , 
5, -0.913831, 1, 0, 0.488961,-99) , 
5, 0.80947, 0, 0, 0.493224,-99) , 
1, 0.00600984, 0, 0, 0.497008,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.0603529);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.600383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486275,-99) , 
6, 0.00510267, 0, 0, 0.506253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45715,-99) , 
1, -0.0112194, 0, 0, 0.504668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.441682,-99) , 
1, 0.0119067, 1, 0, 0.502947,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.0281521);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999894, 1, 1, 0.522282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508472,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482904,-99) , 
4, 0.999877, 0, 0, 0.506808,-99) , 
3, 1.50298, 1, 0, 0.51275,-99) , 
NN(
NN(
0, 
0, 
-1, 4.45725, 0, 1, 0.510261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469683,-99) , 
2, -0.0710035, 0, 0, 0.502875,-99) , 
5, 0.714242, 1, 0, 0.510449,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.0180602);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.469382, 1, 1, 0.507611,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490776,-99) , 
3, 1.96329, 0, 0, 0.498721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473354,-99) , 
3, 3.63521, 1, 0, 0.492849,-99) , 
5, -0.714281, 0, 0, 0.504577,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.0276028);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.39978, 1, 1, 0.51658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473893,-99) , 
3, 5.96143, 1, 0, 0.513922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508692,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479051,-99) , 
5, 0.247783, 0, 0, 0.506187,-99) , 
NN(
0, 
0, 
-1, 0.498096, 0, -1, 0.4829,-99) , 
5, 0.877503, 1, 0, 0.502557,-99) , 
5, 0.142833, 1, 0, 0.50783,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.0194235);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999905, 1, 1, 0.52011,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479955,-99) , 
4, 0.998572, 0, 0, 0.498907,-99) , 
5, 0.650756, 1, 0, 0.507137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488693,-99) , 
3, 1.19707, 0, 0, 0.498436,-99) , 
NN(
0, 
0, 
-1, 0.499045, 0, -1, 0.47728,-99) , 
3, 4.63821, 1, 0, 0.495119,-99) , 
5, 0.333301, 0, 0, 0.500652,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.0088953);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.527153,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499609,-99) , 
4, 0.999048, 1, 0, 0.50109,-99) , 
NN(
0, 
0, 
-1, 0.451594, 0, -1, 0.481401,-99) , 
3, 6.68331, 1, 0, 0.499769,-99) , 
5, 0.904714, 0, 0, 0.501448,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.0373973);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555475,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491567,-99) , 
2, -0.00134684, 1, 0, 0.531945,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521653,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492315,-99) , 
5, 0.809456, 0, 0, 0.497177,-99) , 
1, 0.00332422, 0, 0, 0.504146,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473676,-99) , 
3, 1.61169, 1, 0, 0.499934,-99) , 
NN(
0, 
0, 
-1, 0.333272, 0, -1, 0.473997,-99) , 
3, 4.02116, 1, 0, 0.490165,-99) , 
2, 0.0733765, 1, 0, 0.501654,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.0179387);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999819, 1, 1, 0.508919,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495666,-99) , 
2, 0.0894315, 0, 0, 0.499633,-99) , 
5, 0.619008, 1, 0, 0.506237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469695,-99) , 
4, 0.998095, 0, 0, 0.505291,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.0254734);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489489,-99) , 
3, 6.60404, 1, 0, 0.515235,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492275,-99) , 
1, 0.000391561, 0, 0, 0.50372,-99) , 
5, 0.460307, 1, 0, 0.509052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513096,-99) , 
NN(
0, 
0, 
-1, -0.898928, 0, -1, 0.493591,-99) , 
5, -0.945579, 1, 0, 0.497989,-99) , 
5, -0.619054, 0, 0, 0.506343,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.0222464);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522937,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480727,-99) , 
4, 0.999977, 0, 0, 0.516339,-99) , 
NN(
0, 
0, 
-1, 8.23954, 0, 1, 0.502244,-99) , 
5, -0.238123, 1, 0, 0.507685,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505656,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471242,-99) , 
0, 0.497141, 0, 0, 0.489677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461796,-99) , 
4, 0.998163, 0, 0, 0.48094,-99) , 
4, 0.999524, 0, 0, 0.505438,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.0131177);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497137, 0, 1, 0.516866,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492568,-99) , 
0, 0.490791, 0, 0, 0.509341,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500066,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489948,-99) , 
0, 0.498091, 0, 0, 0.496426,-99) , 
0, 0.494282, 1, 0, 0.499156,-99) , 
5, 0.904712, 0, 0, 0.50026,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.0215659);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533882,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489782,-99) , 
5, -0.761406, 1, 0, 0.504367,-99) , 
5, -0.614568, 0, 0, 0.507692,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493593,-99) , 
4, 0.999641, 1, 0, 0.49599,-99) , 
NN(
0, 
0, 
-1, 0.854821, 0, -1, 0.482809,-99) , 
5, 0.782262, 1, 0, 0.492837,-99) , 
5, -0.523821, 1, 0, 0.496943,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.0192528);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50846,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491523,-99) , 
2, 0.0781803, 1, 0, 0.505881,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518455,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488555,-99) , 
0, 0.506253, 0, 0, 0.494247,-99) , 
0, 0.502852, 1, 0, 0.504058,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477088,-99) , 
4, 0.998571, 0, 0, 0.503106,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.0204993);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999905, 1, 1, 0.517694,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496752,-99) , 
5, 0.922212, 0, 0, 0.500005,-99) , 
5, 0.673433, 1, 0, 0.506513,-99) , 
NN(
NN(
0, 
0, 
-1, 0.495236, 1, 1, 0.513102,-99) , 
NN(
0, 
0, 
-1, 2.54881, 1, -1, 0.490308,-99) , 
3, 0.957325, 1, 0, 0.495756,-99) , 
5, 0.428542, 0, 0, 0.50026,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.012641);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489429, 0, 1, 0.524003,-99) , 
NN(
NN(
0, 
0, 
-1, -0.46938, 1, 1, 0.503782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501799,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476183,-99) , 
3, 3.20416, 1, 0, 0.494314,-99) , 
5, -0.714279, 0, 0, 0.501885,-99) , 
0, 0.491424, 1, 0, 0.50377,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.0218113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.5019, 1, 1, 0.514731,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491317,-99) , 
3, 4.38545, 0, 0, 0.49394,-99) , 
1, -0.000643858, 1, 0, 0.50249,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493997,-99) , 
0, 0.502536, 0, 0, 0.49952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473254,-99) , 
0, 0.494285, 0, 0, 0.492979,-99) , 
5, -0.809525, 0, 0, 0.501002,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.0148782);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496957,-99) , 
5, 0.238074, 1, 0, 0.504003,-99) , 
4, 0.999048, 1, 0, 0.505787,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495374,-99) , 
2, 0.0692143, 0, 0, 0.500055,-99) , 
NN(
0, 
0, 
-1, 0.501414, 1, -1, 0.49352,-99) , 
0, 0.502127, 0, 0, 0.495722,-99) , 
0, 0.497139, 1, 0, 0.499918,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.0206716);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.547537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499115,-99) , 
3, 4.26989, 1, 0, 0.526677,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464045,-99) , 
3, 2.81571, 1, 0, 0.492199,-99) , 
5, 0.238084, 0, 0, 0.50933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514831,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490441,-99) , 
0, 0.502852, 1, 0, 0.510462,-99) , 
NN(
0, 
0, 
-1, 2.61569, 1, -1, 0.495378,-99) , 
3, 4.16016, 0, 0, 0.498178,-99) , 
2, -0.0710035, 1, 0, 0.500196,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.0181283);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.469366, 1, 1, 0.520105,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496643,-99) , 
0, 0.505709, 0, 0, 0.502448,-99) , 
5, 0.142802, 0, 0, 0.511012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494417,-99) , 
0, 0.493057, 0, 0, 0.503333,-99) , 
NN(
0, 
0, 
-1, 0.497501, 0, -1, 0.492712,-99) , 
0, 0.497138, 1, 0, 0.498787,-99) , 
0, 0.500947, 0, 0, 0.502069,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.0151092);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52351,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491771,-99) , 
4, 0.999932, 0, 0, 0.502225,-99) , 
5, 0.904714, 0, 0, 0.503256,-99) , 
4, 0.998572, 1, 0, 0.504704,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.0672036);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477308,-99) , 
6, 0.0034018, 0, 0, 0.502009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466642,-99) , 
1, -0.0112194, 0, 0, 0.500914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.420023,-99) , 
1, 0.0119067, 1, 0, 0.498575,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.0147654);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.13198, 0, 1, 0.506702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479259,-99) , 
2, 0.213662, 1, 0, 0.505372,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.0221771);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.50285, 0, 1, 0.526552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491982,-99) , 
0, 0.494871, 0, 0, 0.501676,-99) , 
NN(
0, 
0, 
-1, 0.503986, 0, -1, 0.481134,-99) , 
0, 0.502852, 1, 0, 0.498497,-99) , 
1, 0.0040614, 0, 0, 0.50291,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.0145706);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.632659, 1, 1, 0.504635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487428,-99) , 
3, 0.996356, 0, 0, 0.502171,-99) , 
NN(
0, 
0, 
-1, -0.918346, 0, -1, 0.476653,-99) , 
3, 2.40533, 1, 0, 0.491888,-99) , 
5, -0.714289, 0, 0, 0.502032,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.037836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.83677, 0, 1, 0.533817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489055,-99) , 
5, 0.713937, 1, 0, 0.526978,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478975,-99) , 
0, 0.496186, 0, 0, 0.508768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506899,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4848,-99) , 
0, 0.492377, 1, 0, 0.487422,-99) , 
5, 0.80948, 0, 0, 0.490959,-99) , 
1, -0.0026657, 1, 0, 0.499119,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.013881);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.548455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499161,-99) , 
0, 0.491425, 1, 0, 0.501256,-99) , 
2, 0.188023, 0, 0, 0.503367,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504918,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480386,-99) , 
2, -0.0730265, 0, 0, 0.497572,-99) , 
NN(
0, 
0, 
-1, 0.0733252, 1, -1, 0.477273,-99) , 
0, 0.499044, 1, 0, 0.488313,-99) , 
3, 4.37797, 1, 0, 0.500387,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.020091);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51054,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493698,-99) , 
5, 0.809456, 1, 0, 0.508488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46344,-99) , 
4, 0.999048, 0, 0, 0.506488,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497472,-99) , 
5, 0.745937, 1, 0, 0.507954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481755,-99) , 
3, 2.69323, 1, 0, 0.493504,-99) , 
5, 0.618933, 0, 0, 0.497823,-99) , 
0, 0.497139, 0, 0, 0.502832,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.0236378);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498693,-99) , 
1, 0.00328525, 0, 0, 0.505494,-99) , 
NN(
0, 
0, 
-1, 1.3558, 0, -1, 0.482375,-99) , 
0, 0.492377, 0, 0, 0.502716,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51311,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47685,-99) , 
2, 0.078629, 1, 0, 0.498082,-99) , 
NN(
0, 
0, 
-1, 0.428648, 0, -1, 0.461069,-99) , 
2, -0.0708767, 0, 0, 0.486394,-99) , 
3, 4.37797, 1, 0, 0.499493,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.0166576);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499499,-99) , 
5, 0.0476756, 1, 0, 0.511979,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516231,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494757,-99) , 
0, 0.502658, 1, 0, 0.503875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490733,-99) , 
5, -0.23811, 1, 0, 0.494564,-99) , 
0, 0.500676, 0, 0, 0.497506,-99) , 
0, 0.491425, 1, 0, 0.498745,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.0243207);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.57101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554777,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492659,-99) , 
2, -0.0201994, 1, 0, 0.513327,-99) , 
0, 0.502853, 0, 0, 0.523106,-99) , 
NN(
NN(
0, 
0, 
-1, 0.918332, 0, 1, 0.513115,-99) , 
NN(
0, 
0, 
-1, 0.999591, 0, -1, 0.49296,-99) , 
5, 0.714243, 0, 0, 0.498083,-99) , 
1, 0.0040614, 0, 0, 0.50203,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.0315638);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00658622, 0, 1, 0.517374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478324,-99) , 
2, -0.0692634, 0, 0, 0.499952,-99) , 
3, 4.26023, 1, 0, 0.513474,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505454,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484093,-99) , 
3, 3.67965, 1, 0, 0.500718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467803,-99) , 
0, 0.493333, 0, 0, 0.494131,-99) , 
5, -0.714273, 0, 0, 0.50951,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.0222435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517036,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498161,-99) , 
2, 0.0177321, 0, 0, 0.504335,-99) , 
2, -0.223739, 1, 0, 0.505695,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484933,-99) , 
2, -0.0793083, 0, 0, 0.501324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440509,-99) , 
5, 0.523768, 0, 0, 0.476825,-99) , 
2, 0.0701447, 1, 0, 0.493737,-99) , 
3, 4.21945, 1, 0, 0.503129,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.019275);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495428, 1, 1, 0.509008,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489379,-99) , 
5, 0.42856, 0, 0, 0.497802,-99) , 
0, 0.492513, 0, 0, 0.507462,-99) , 
NN(
0, 
0, 
-1, 0.505573, 0, -1, 0.48736,-99) , 
0, 0.504757, 1, 0, 0.505903,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.00815593);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523759,-99) , 
NN(
NN(
0, 
0, 
-1, -0.189677, 1, 1, 0.502273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470019,-99) , 
4, 0.998572, 0, 0, 0.501404,-99) , 
2, 0.212793, 0, 0, 0.502544,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.0130172);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0812415, 1, 1, 0.504736,-99) , 
NN(
0, 
0, 
-1, 0.498088, 0, -1, 0.482389,-99) , 
3, 6.02808, 1, 0, 0.503381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466193,-99) , 
3, 8.39117, 1, 0, 0.502078,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.0199759);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.142814, 1, 1, 0.51615,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47584,-99) , 
5, -0.238972, 1, 0, 0.509057,-99) , 
NN(
0, 
0, 
-1, -0.238112, 0, -1, 0.492036,-99) , 
1, 0.00682455, 0, 0, 0.493318,-99) , 
0, 0.491425, 1, 0, 0.495253,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.0219103);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.617258,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487896,-99) , 
5, 0.0518798, 1, 0, 0.562087,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500848,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487188,-99) , 
5, -0.0340349, 0, 0, 0.496893,-99) , 
1, -0.0057274, 1, 0, 0.501775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519151,-99) , 
NN(
0, 
0, 
-1, -0.90935, 1, -1, 0.48035,-99) , 
5, -0.863963, 0, 0, 0.489142,-99) , 
5, -0.809525, 0, 0, 0.499853,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.0172304);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499922,-99) , 
2, -0.0283802, 1, 0, 0.505922,-99) , 
NN(
0, 
0, 
-1, 4.14122, 1, -1, 0.486436,-99) , 
4, 0.999932, 0, 0, 0.502717,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.476579,-99) , 
4, 0.999524, 0, 0, 0.500552,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.0195919);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53623,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488446,-99) , 
0, 0.504439, 0, 0, 0.506692,-99) , 
2, 0.069202, 0, 0, 0.513946,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520197,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490636,-99) , 
3, 4.25646, 1, 0, 0.513849,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49589,-99) , 
2, -0.210304, 1, 0, 0.497214,-99) , 
0, 0.49342, 1, 0, 0.500431,-99) , 
0, 0.502852, 0, 0, 0.502538,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.0231386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.587264, 1, 1, 0.510256,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488847,-99) , 
3, 1.13541, 0, 0, 0.501875,-99) , 
5, -0.238106, 0, 0, 0.507323,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499472,-99) , 
5, 0.755058, 1, 0, 0.511562,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468693,-99) , 
5, -0.795889, 1, 0, 0.481034,-99) , 
5, 0.428513, 0, 0, 0.491771,-99) , 
0, 0.493329, 0, 0, 0.504763,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.0191954);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517862,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494642,-99) , 
3, 4.25656, 1, 0, 0.510444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531083,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494819,-99) , 
2, -0.0188174, 1, 0, 0.497713,-99) , 
2, -0.0304747, 1, 0, 0.501518,-99) , 
2, 0.214232, 0, 0, 0.502343,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.0198996);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49469, 1, 1, 0.508935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484054,-99) , 
0, 0.48952, 0, 0, 0.508083,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501456,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460496,-99) , 
0, 0.49714, 1, 0, 0.479009,-99) , 
5, 0.90471, 1, 0, 0.506371,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.00948343);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.549984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499959,-99) , 
1, -0.0057274, 1, 0, 0.503232,-99) , 
NN(
0, 
0, 
-1, 0.5019, 1, -1, 0.493371,-99) , 
5, -0.619054, 0, 0, 0.500754,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472313,-99) , 
4, 0.998095, 0, 0, 0.500031,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.013991);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52443,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495267,-99) , 
2, -0.0223184, 1, 0, 0.499028,-99) , 
2, 0.133086, 0, 0, 0.500398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477119,-99) , 
2, 0.214735, 1, 0, 0.49928,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.0214493);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492166,-99) , 
0, 0.492379, 0, 0, 0.506509,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505835,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470177,-99) , 
5, -0.142933, 0, 0, 0.492469,-99) , 
2, 0.0702233, 1, 0, 0.504109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506705,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490987,-99) , 
0, 0.505255, 0, 0, 0.499165,-99) , 
NN(
0, 
0, 
-1, 0.502626, 1, -1, 0.47751,-99) , 
0, 0.503804, 0, 0, 0.489102,-99) , 
0, 0.5019, 1, 0, 0.500954,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.0277976);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542349,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487997,-99) , 
2, 0.119922, 0, 0, 0.504909,-99) , 
2, 0.27541, 0, 0, 0.511965,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481007,-99) , 
2, -0.0783345, 0, 0, 0.505127,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488815,-99) , 
0, 0.490474, 1, 0, 0.490992,-99) , 
5, 0.714167, 0, 0, 0.494245,-99) , 
2, 0.0713191, 0, 0, 0.497395,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.010138);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524751,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497638,-99) , 
0, 0.502852, 0, 0, 0.499682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469837,-99) , 
4, 0.999184, 0, 0, 0.498762,-99) , 
4, 0.998095, 1, 0, 0.499486,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.0242924);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494963,-99) , 
5, 0.637132, 1, 0, 0.508345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479503,-99) , 
2, -0.219048, 0, 0, 0.507057,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467795,-99) , 
5, 0.863903, 0, 0, 0.495673,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456371,-99) , 
1, -0.00215937, 0, 0, 0.488799,-99) , 
5, 0.80948, 1, 0, 0.504341,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.0189499);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489334,-99) , 
0, 0.48925, 0, 0, 0.507277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494604,-99) , 
0, 0.503125, 0, 0, 0.500683,-99) , 
0, 0.499044, 1, 0, 0.504512,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.444336,-99) , 
0, 0.498097, 1, 0, 0.482841,-99) , 
5, 0.904714, 1, 0, 0.503248,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.0169919);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535668,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499893,-99) , 
3, 0.709251, 1, 0, 0.503823,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485131,-99) , 
1, -0.0040017, 1, 0, 0.495067,-99) , 
3, 4.2338, 1, 0, 0.501983,-99) , 
0, 0.48952, 1, 0, 0.503116,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.0096806);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523829, 0, 1, 0.523444,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519054,-99) , 
NN(
0, 
0, 
-1, 0.904712, 1, -1, 0.497073,-99) , 
2, -0.133895, 1, 0, 0.498241,-99) , 
2, -0.215148, 1, 0, 0.499594,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.0192533);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.591599, 1, 1, 0.516051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483924,-99) , 
5, -0.714157, 0, 0, 0.509665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508789,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49385,-99) , 
5, -0.863948, 0, 0, 0.504393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491137,-99) , 
0, 0.501895, 0, 0, 0.493726,-99) , 
5, -0.0476444, 1, 0, 0.498128,-99) , 
2, -0.0715266, 1, 0, 0.500205,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.0216085);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00495879, 1, 1, 0.510173,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481162,-99) , 
2, -0.0715266, 0, 0, 0.499847,-99) , 
5, 0.682501, 1, 0, 0.506122,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513498,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489376,-99) , 
5, -0.866993, 0, 0, 0.501307,-99) , 
NN(
0, 
0, 
-1, 1.54694, 0, -1, 0.47914,-99) , 
5, -0.650852, 1, 0, 0.494438,-99) , 
5, -0.333347, 0, 0, 0.502167,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.0140923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495234, 1, 1, 0.512931,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497662,-99) , 
5, -0.464862, 1, 0, 0.50025,-99) , 
2, -0.0740469, 1, 0, 0.502494,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507429,-99) , 
NN(
0, 
0, 
-1, -0.927454, 0, -1, 0.481723,-99) , 
3, 1.29969, 1, 0, 0.49072,-99) , 
5, -0.809525, 0, 0, 0.500686,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.0140333);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99932, 1, 1, 0.507939,-99) , 
NN(
0, 
0, 
-1, 6.08244, 1, -1, 0.497099,-99) , 
5, 0.0475949, 0, 0, 0.503014,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454289,-99) , 
4, 0.998571, 0, 0, 0.501352,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.0181671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546446,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497849,-99) , 
2, 0.0305872, 0, 0, 0.502524,-99) , 
2, -0.212028, 1, 0, 0.504231,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484267,-99) , 
0, 0.495282, 1, 0, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44221,-99) , 
0, 0.499996, 1, 0, 0.483111,-99) , 
4, 0.999524, 0, 0, 0.502484,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.0159137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142152, 0, 1, 0.513671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472273,-99) , 
4, 0.999524, 0, 0, 0.499966,-99) , 
3, 1.33781, 1, 0, 0.504639,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4671,-99) , 
3, 8.6342, 1, 0, 0.503468,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.0161817);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555504,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495106,-99) , 
5, 0.0475984, 1, 0, 0.500359,-99) , 
3, 8.22708, 0, 0, 0.5024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478119,-99) , 
4, 0.999048, 0, 0, 0.501169,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.0372185);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492101,-99) , 
6, 0.00526332, 0, 0, 0.502758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.408911,-99) , 
1, 0.0122825, 1, 0, 0.500137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463333,-99) , 
1, -0.0109309, 0, 0, 0.49898,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.0414626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999757, 1, 1, 0.519679,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469414,-99) , 
0, 0.500946, 1, 0, 0.496458,-99) , 
5, 0.755061, 1, 0, 0.508635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463838,-99) , 
4, 0.999991, 0, 0, 0.501649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469427,-99) , 
4, 0.999905, 0, 0, 0.499167,-99) , 
5, 0.428539, 0, 0, 0.503126,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.010386);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490156,-99) , 
5, 0.541913, 1, 0, 0.497611,-99) , 
5, 0.904713, 0, 0, 0.49876,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472681,-99) , 
4, 0.998572, 0, 0, 0.497847,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.0153292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497637, 1, 1, 0.504427,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466409,-99) , 
2, 0.215882, 1, 0, 0.502617,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523309,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49715,-99) , 
2, 0.0713191, 0, 0, 0.502028,-99) , 
NN(
0, 
0, 
-1, 0.495324, 1, -1, 0.487752,-99) , 
5, 0.523772, 0, 0, 0.492932,-99) , 
0, 0.497138, 0, 0, 0.498554,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.0185916);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483946,-99) , 
5, -0.809547, 0, 0, 0.517891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499396,-99) , 
2, -0.215457, 1, 0, 0.500858,-99) , 
3, 0.917606, 1, 0, 0.505134,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514536,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476059,-99) , 
0, 0.496099, 1, 0, 0.487017,-99) , 
0, 0.503805, 0, 0, 0.490929,-99) , 
3, 4.36372, 1, 0, 0.502287,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.00888691);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.503895,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480612,-99) , 
3, 8.37762, 1, 0, 0.503071,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.0075829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529213,-99) , 
NN(
0, 
0, 
-1, 0.491246, 0, -1, 0.498196,-99) , 
0, 0.489522, 1, 0, 0.49919,-99) , 
NN(
0, 
0, 
-1, 0.497142, 1, -1, 0.475622,-99) , 
4, 0.999048, 0, 0, 0.497985,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.00836449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.62065, 0, 1, 0.502545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482345,-99) , 
2, -0.21475, 0, 0, 0.501569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477772,-99) , 
0, 0.505709, 1, 0, 0.500429,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.00956905);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.42828, 1, 1, 0.503441,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476186,-99) , 
3, 6.55706, 1, 0, 0.502425,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480606,-99) , 
3, 8.07193, 1, 0, 0.501587,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.0164836);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.335278, 0, 1, 0.529287,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49742,-99) , 
2, -0.223249, 1, 0, 0.499129,-99) , 
3, 0.527101, 1, 0, 0.502011,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494248,-99) , 
2, -0.152029, 1, 0, 0.498314,-99) , 
NN(
0, 
0, 
-1, 0.498084, 0, -1, 0.464443,-99) , 
2, 0.0722913, 1, 0, 0.488496,-99) , 
3, 4.37797, 1, 0, 0.499346,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.0166325);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714243, 0, 1, 0.513067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498129,-99) , 
4, 0.999048, 1, 0, 0.499231,-99) , 
3, 3.90065, 0, 0, 0.502106,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470784,-99) , 
3, 2.56064, 1, 0, 0.49597,-99) , 
NN(
0, 
0, 
-1, 0.333203, 0, -1, 0.474813,-99) , 
3, 4.38545, 1, 0, 0.489065,-99) , 
2, 0.0666221, 1, 0, 0.49966,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.0316952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494149,-99) , 
6, 0.00556437, 0, 0, 0.504186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463099,-99) , 
1, 0.0115636, 1, 0, 0.50293,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451381,-99) , 
1, -0.0116875, 0, 0, 0.501396,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.0234714);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518118,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495565,-99) , 
4, 0.999997, 0, 0, 0.504581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.445483,-99) , 
5, 0.238066, 0, 0, 0.493663,-99) , 
4, 0.999932, 0, 0, 0.5023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479351,-99) , 
4, 0.998572, 0, 0, 0.501506,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.0340375);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.05973, 0, 1, 0.523306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483498,-99) , 
0, 0.492377, 0, 0, 0.50788,-99) , 
5, 0.469351, 1, 0, 0.511832,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478137,-99) , 
4, 0.999995, 0, 0, 0.500746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462063,-99) , 
4, 0.999905, 0, 0, 0.498365,-99) , 
5, 0.142829, 0, 0, 0.505505,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.018341);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492785, 1, 1, 0.517672,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506734,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493718,-99) , 
0, 0.492787, 0, 0, 0.505025,-99) , 
2, 0.0713191, 0, 0, 0.507245,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479138,-99) , 
0, 0.505709, 1, 0, 0.505952,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.0154656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0508043, 0, 1, 0.504945,-99) , 
NN(
0, 
0, 
-1, 0.809212, 1, -1, 0.490481,-99) , 
3, 4.36372, 1, 0, 0.502135,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508365,-99) , 
NN(
0, 
0, 
-1, -0.714218, 0, -1, 0.479141,-99) , 
2, 0.0673677, 0, 0, 0.486063,-99) , 
0, 0.502852, 1, 0, 0.499606,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.0118069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505607,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495976,-99) , 
2, 0.0333252, 0, 0, 0.498713,-99) , 
2, -0.21058, 1, 0, 0.499768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473962,-99) , 
3, 8.64028, 1, 0, 0.498957,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.0238273);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493275,-99) , 
3, 4.39109, 1, 0, 0.50751,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510892,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48558,-99) , 
5, -0.818598, 1, 0, 0.496044,-99) , 
5, -0.238112, 0, 0, 0.503336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472177,-99) , 
0, 0.48952, 0, 0, 0.502286,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.0125601);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531424,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54006,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499833,-99) , 
2, -0.124992, 1, 0, 0.502642,-99) , 
NN(
0, 
0, 
-1, 4.23371, 1, -1, 0.482678,-99) , 
4, 0.999909, 0, 0, 0.499032,-99) , 
4, 0.998095, 1, 0, 0.499944,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.0112104);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490336, 1, 1, 0.524551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495497,-99) , 
2, 0.0675107, 1, 0, 0.517361,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530016,-99) , 
NN(
0, 
0, 
-1, 0.999388, 0, -1, 0.49805,-99) , 
4, 0.998572, 1, 0, 0.499139,-99) , 
0, 0.493329, 1, 0, 0.502087,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.0128248);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.12725, 0, 1, 0.505204,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505995,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470679,-99) , 
0, 0.496184, 1, 0, 0.485335,-99) , 
4, 0.999524, 0, 0, 0.503542,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.0189701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.213583, 1, 1, 0.508595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473243,-99) , 
0, 0.505709, 1, 0, 0.507186,-99) , 
NN(
NN(
0, 
0, 
-1, 0.498094, 1, 1, 0.515128,-99) , 
NN(
0, 
0, 
-1, 2.98543, 1, -1, 0.491503,-99) , 
2, 0.0582791, 0, 0, 0.496532,-99) , 
5, -0.523824, 0, 0, 0.504195,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.00743903);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499181,-99) , 
3, 5.41798, 0, 0, 0.500292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470607,-99) , 
3, 6.66855, 1, 0, 0.499288,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471561,-99) , 
3, 8.21353, 1, 0, 0.498261,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.0166359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539552,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495632,-99) , 
5, -0.333357, 1, 0, 0.500339,-99) , 
3, 7.79999, 0, 0, 0.501927,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.478965,-99) , 
4, 0.999524, 0, 0, 0.500022,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.0137601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498077,-99) , 
2, 0.182989, 0, 0, 0.499793,-99) , 
2, -0.217934, 1, 0, 0.501191,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502059,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478238,-99) , 
2, -0.071423, 0, 0, 0.494484,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464074,-99) , 
5, -0.523759, 0, 0, 0.487475,-99) , 
3, 4.17451, 1, 0, 0.498234,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.0121069);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537922,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516733,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489892,-99) , 
5, 0.0883046, 1, 0, 0.509934,-99) , 
5, 0.523788, 0, 0, 0.51857,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499833,-99) , 
2, -0.0590475, 1, 0, 0.502018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475927,-99) , 
4, 0.998572, 0, 0, 0.501154,-99) , 
0, 0.502852, 0, 0, 0.503927,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.0128095);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.598352,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490347,-99) , 
5, -0.782339, 0, 0, 0.549129,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474072,-99) , 
5, 0.142839, 1, 0, 0.528073,-99) , 
NN(
NN(
0, 
0, 
-1, 0.48952, 1, 1, 0.501182,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476556,-99) , 
4, 0.998571, 0, 0, 0.500266,-99) , 
1, 0.00579008, 0, 0, 0.50287,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.0179743);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498645,-99) , 
0, 0.5019, 0, 0, 0.504135,-99) , 
5, 0.782271, 1, 0, 0.513414,-99) , 
NN(
NN(
0, 
0, 
-1, -0.591846, 0, 1, 0.529836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502519,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46928,-99) , 
4, 0.999688, 0, 0, 0.500786,-99) , 
1, 0.00560609, 0, 0, 0.50429,-99) , 
5, 0.714243, 0, 0, 0.50644,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.0199356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.537502, 0, 1, 0.52571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484363,-99) , 
5, 0.618937, 1, 0, 0.5152,-99) , 
NN(
NN(
0, 
0, 
-1, 0.998572, 1, 1, 0.50987,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505317,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490671,-99) , 
3, 1.62495, 1, 0, 0.496761,-99) , 
5, 0.714243, 0, 0, 0.499958,-99) , 
0, 0.492377, 1, 0, 0.501759,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.0116013);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480728,-99) , 
5, -0.809483, 0, 0, 0.510162,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499414,-99) , 
0, 0.490472, 1, 0, 0.500615,-99) , 
2, -0.048292, 1, 0, 0.502378,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471009,-99) , 
2, -0.211248, 0, 0, 0.50076,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.00909793);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49919,-99) , 
0, 0.48952, 1, 0, 0.500245,-99) , 
3, 7.89426, 0, 0, 0.501532,-99) , 
NN(
0, 
0, 
-1, 0.809479, 1, -1, 0.478752,-99) , 
4, 0.999524, 0, 0, 0.499643,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.0185278);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496141,-99) , 
5, 0.333288, 1, 0, 0.503517,-99) , 
2, 0.195926, 0, 0, 0.505035,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45933,-99) , 
1, 0.000188883, 0, 0, 0.480644,-99) , 
4, 0.999524, 0, 0, 0.503051,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.00769572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537755,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542919,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49998,-99) , 
0, 0.48952, 1, 0, 0.501308,-99) , 
3, 8.135, 0, 0, 0.502632,-99) , 
NN(
0, 
0, 
-1, 0.0702233, 1, -1, 0.483074,-99) , 
4, 0.999524, 0, 0, 0.501016,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.0146255);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493602, 1, 1, 0.513487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495396,-99) , 
0, 0.497093, 0, 0, 0.49932,-99) , 
1, -0.00111011, 1, 0, 0.504613,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50003,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479574,-99) , 
0, 0.498998, 0, 0, 0.496804,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470779,-99) , 
4, 0.999524, 0, 0, 0.494806,-99) , 
0, 0.498091, 1, 0, 0.499695,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.0221991);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.509094,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537645,-99) , 
NN(
0, 
0, 
-1, 0.333329, 0, -1, 0.484899,-99) , 
1, -0.0040017, 1, 0, 0.491864,-99) , 
3, 4.10408, 1, 0, 0.505251,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.0133567);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.741407, 0, 1, 0.510688,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479966,-99) , 
4, 0.999524, 0, 0, 0.500085,-99) , 
0, 0.495234, 1, 0, 0.502895,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487905,-99) , 
5, -0.909307, 1, 0, 0.496343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467261,-99) , 
0, 0.501901, 1, 0, 0.489305,-99) , 
5, -0.809525, 0, 0, 0.500795,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.0112861);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550747,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487049,-99) , 
4, 0.999909, 0, 0, 0.498799,-99) , 
4, 0.998095, 1, 0, 0.500186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472044,-99) , 
3, 8.21353, 1, 0, 0.49914,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.0153052);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490518, 0, 1, 0.521782,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495612,-99) , 
1, 0.0040614, 0, 0, 0.498067,-99) , 
NN(
0, 
0, 
-1, -0.968257, 0, -1, 0.485377,-99) , 
5, -0.90476, 0, 0, 0.496955,-99) , 
0, 0.491425, 1, 0, 0.499062,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.0248208);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.564624, 1, 1, 0.527435,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491216,-99) , 
5, 0.419467, 0, 0, 0.501212,-99) , 
1, 0.00331795, 0, 0, 0.505473,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505619,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481535,-99) , 
5, -0.77649, 1, 0, 0.493459,-99) , 
NN(
0, 
0, 
-1, -0.970847, 0, -1, 0.473133,-99) , 
5, -0.931974, 0, 0, 0.488721,-99) , 
5, -0.523827, 0, 0, 0.500819,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.00928236);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.504641,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.0145419);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498186,-99) , 
5, 0.224534, 1, 0, 0.500507,-99) , 
NN(
0, 
0, 
-1, 4.78036, 1, -1, 0.491226,-99) , 
5, 0.142829, 0, 0, 0.496101,-99) , 
NN(
0, 
0, 
-1, 0.498094, 1, -1, 0.473957,-99) , 
2, -0.212089, 0, 0, 0.49495,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.0249791);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532563,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48442,-99) , 
5, -0.428935, 0, 0, 0.513521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491909,-99) , 
2, 0.050396, 0, 0, 0.494601,-99) , 
3, 0.72085, 1, 0, 0.497859,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484656,-99) , 
2, -0.00350627, 0, 0, 0.493985,-99) , 
NN(
0, 
0, 
-1, 0.523686, 0, -1, 0.468904,-99) , 
2, 0.0713191, 1, 0, 0.486559,-99) , 
3, 4.26455, 1, 0, 0.495541,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.0124588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.346815, 1, 1, 0.517366,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496158,-99) , 
0, 0.492332, 0, 0, 0.501536,-99) , 
5, -0.714274, 0, 0, 0.513647,-99) , 
NN(
NN(
0, 
0, 
-1, 0.904659, 0, 1, 0.502167,-99) , 
NN(
0, 
0, 
-1, 0.499953, 0, -1, 0.484675,-99) , 
4, 0.999524, 0, 0, 0.500843,-99) , 
0, 0.495234, 1, 0, 0.504298,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.0129573);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.95112, 0, 1, 0.519992,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499187,-99) , 
4, 0.999048, 1, 0, 0.501608,-99) , 
5, -0.088441, 1, 0, 0.504564,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468464,-99) , 
2, 0.0917461, 1, 0, 0.496262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467637,-99) , 
3, 4.6798, 1, 0, 0.492792,-99) , 
5, -0.523819, 0, 0, 0.501284,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.0176355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00591654, 0, 1, 0.50855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482068,-99) , 
0, 0.49809, 1, 0, 0.49312,-99) , 
5, 0.682501, 1, 0, 0.502539,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469827,-99) , 
5, -0.492096, 1, 0, 0.495927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465548,-99) , 
3, 4.74134, 1, 0, 0.492158,-99) , 
5, -0.333347, 0, 0, 0.499011,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.0155458);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.505199,-99) , 
NN(
0, 
0, 
-1, -0.782358, 1, -1, 0.489921,-99) , 
5, -0.714344, 0, 0, 0.501833,-99) , 
NN(
0, 
0, 
-1, 0.0666913, 1, -1, 0.475789,-99) , 
4, 0.999524, 0, 0, 0.499658,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.0276792);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.505434, 0, 1, 0.516878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486138,-99) , 
3, 3.84816, 0, 0, 0.49622,-99) , 
5, -0.238122, 0, 0, 0.508846,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509865,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490165,-99) , 
5, 0.714169, 1, 0, 0.505706,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527946,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487534,-99) , 
4, 0.999048, 1, 0, 0.489963,-99) , 
1, -0.00111011, 1, 0, 0.49575,-99) , 
0, 0.499995, 0, 0, 0.500197,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.0175355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504349, 0, 1, 0.511602,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498098,-99) , 
5, 0.809477, 0, 0, 0.500768,-99) , 
0, 0.499996, 0, 0, 0.50449,-99) , 
NN(
0, 
0, 
-1, 0.492378, 0, -1, 0.489555,-99) , 
1, 0.000687785, 0, 0, 0.496094,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.0204128);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519123,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490734,-99) , 
1, 0.000687785, 0, 0, 0.504252,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492461,-99) , 
2, -0.0206474, 1, 0, 0.493901,-99) , 
2, -0.0322957, 1, 0, 0.496897,-99) , 
2, 0.212365, 0, 0, 0.498016,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.0165001);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537332,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492512,-99) , 
0, 0.490881, 0, 0, 0.518216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486776,-99) , 
3, 4.37797, 1, 0, 0.511755,-99) , 
NN(
NN(
0, 
0, 
-1, 0.941013, 1, 1, 0.522526,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494144,-99) , 
5, 0.0884146, 1, 0, 0.498145,-99) , 
5, 0.904715, 0, 0, 0.499661,-99) , 
0, 0.49333, 1, 0, 0.501578,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.0240459);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498741,-99) , 
5, 0.0339622, 0, 0, 0.51053,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480401,-99) , 
5, 0.809477, 1, 0, 0.506777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514897,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493097,-99) , 
5, 0.87754, 1, 0, 0.506937,-99) , 
NN(
0, 
0, 
-1, 0.224455, 1, -1, 0.488667,-99) , 
5, 0.714245, 0, 0, 0.493218,-99) , 
1, 0.00120473, 0, 0, 0.498414,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.0190768);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502535, 1, 1, 0.519175,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506986,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487997,-99) , 
5, 0.877502, 1, 0, 0.5039,-99) , 
0, 0.499996, 0, 0, 0.508907,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530563,-99) , 
NN(
0, 
0, 
-1, 0.999905, 0, -1, 0.494191,-99) , 
0, 0.505709, 0, 0, 0.496362,-99) , 
5, 0.142829, 0, 0, 0.503017,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.0147874);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.619015, 0, 1, 0.509145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488484,-99) , 
2, 0.0713191, 1, 0, 0.500637,-99) , 
0, 0.497955, 0, 0, 0.504816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48423,-99) , 
0, 0.505709, 1, 0, 0.503858,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.0189992);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496676,-99) , 
3, 3.36157, 1, 0, 0.513539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475342,-99) , 
3, 1.90055, 1, 0, 0.495161,-99) , 
5, -0.927434, 0, 0, 0.508248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516487,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49346,-99) , 
2, -0.0306453, 1, 0, 0.497477,-99) , 
2, 0.214089, 0, 0, 0.498521,-99) , 
5, -0.619053, 1, 0, 0.500889,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.0166147);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499179, 1, 1, 0.507025,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479876,-99) , 
3, 8.6342, 1, 0, 0.506179,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500347,-99) , 
NN(
0, 
0, 
-1, 0.229189, 0, -1, 0.478272,-99) , 
5, -0.618986, 1, 0, 0.485212,-99) , 
0, 0.503805, 1, 0, 0.503762,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.00852251);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.30372, 1, 1, 0.52263,-99) , 
NN(
0, 
0, 
-1, 6.78172, 1, -1, 0.49871,-99) , 
4, 0.999524, 1, 0, 0.500782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464369,-99) , 
3, 8.3483, 1, 0, 0.499524,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.0139125);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0725228, 1, 1, 0.516406,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478718,-99) , 
5, 0.618972, 1, 0, 0.500542,-99) , 
0, 0.492332, 0, 0, 0.509445,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489026,-99) , 
0, 0.496301, 0, 0, 0.501227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476114,-99) , 
0, 0.506435, 1, 0, 0.500318,-99) , 
0, 0.495234, 1, 0, 0.502756,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.0185408);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517587,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496784,-99) , 
4, 0.999955, 0, 0, 0.511742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494637,-99) , 
3, 7.51694, 0, 0, 0.495849,-99) , 
0, 0.495235, 1, 0, 0.500063,-99) , 
NN(
0, 
0, 
-1, 0.497138, 1, -1, 0.467678,-99) , 
4, 0.999048, 0, 0, 0.498406,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.0132503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492785, 0, 1, 0.505988,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494983,-99) , 
4, 0.998572, 1, 0, 0.495922,-99) , 
0, 0.493646, 1, 0, 0.497782,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47461,-99) , 
0, 0.505709, 1, 0, 0.496689,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.0206336);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503759, 1, 1, 0.522715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492275,-99) , 
5, 0.714248, 1, 0, 0.517319,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.550181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48606,-99) , 
5, 0.940995, 1, 0, 0.518714,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493935,-99) , 
0, 0.494145, 1, 0, 0.497601,-99) , 
5, 0.904712, 0, 0, 0.498966,-99) , 
0, 0.502852, 0, 0, 0.501849,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.0109423);
  fForest.push_back( 
NN(
0, 
0, 
-1, 0.998095, 1, 1, 0.505471,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.0150352);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490389,-99) , 
0, 0.49383, 0, 0, 0.503228,-99) , 
0, 0.489523, 1, 0, 0.504507,-99) , 
NN(
0, 
0, 
-1, -0.0708291, 0, -1, 0.490457,-99) , 
4, 0.999524, 0, 0, 0.503303,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.013121);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524005,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494629,-99) , 
0, 0.499997, 1, 0, 0.513081,-99) , 
NN(
0, 
0, 
-1, 3.64615, 1, -1, 0.497563,-99) , 
3, 4.23371, 0, 0, 0.500875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47455,-99) , 
4, 0.999048, 0, 0, 0.499553,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.0159785);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.495739, 0, 1, 0.517597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474088,-99) , 
4, 0.999048, 0, 0, 0.500667,-99) , 
0, 0.497002, 1, 0, 0.503809,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494393,-99) , 
5, -0.428589, 0, 0, 0.511611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473566,-99) , 
0, 0.493679, 0, 0, 0.48718,-99) , 
0, 0.491606, 1, 0, 0.495548,-99) , 
0, 0.495233, 0, 0, 0.501554,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.0123493);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517453,-99) , 
NN(
0, 
0, 
-1, 0.999864, 0, -1, 0.495278,-99) , 
4, 0.998572, 1, 0, 0.496085,-99) , 
0, 0.505709, 0, 0, 0.497491,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.0221515);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49476,-99) , 
2, -0.0717704, 0, 0, 0.517712,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509688,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495367,-99) , 
3, 2.8003, 1, 0, 0.504355,-99) , 
5, 0.714243, 0, 0, 0.50719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465212,-99) , 
4, 0.998571, 0, 0, 0.505736,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.0113613);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536812,-99) , 
NN(
NN(
0, 
0, 
-1, 0.15942, 0, 1, 0.503089,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467966,-99) , 
4, 0.999909, 0, 0, 0.491354,-99) , 
2, -0.0639778, 0, 0, 0.500892,-99) , 
4, 0.998095, 1, 0, 0.501906,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.0210239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.49687, 0, 1, 0.516065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511524,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495135,-99) , 
5, 0.717305, 0, 0, 0.502332,-99) , 
5, 0.151909, 1, 0, 0.50635,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495644,-99) , 
0, 0.498101, 0, 0, 0.5092,-99) , 
NN(
0, 
0, 
-1, -0.83674, 1, -1, 0.489255,-99) , 
3, 3.43261, 0, 0, 0.494307,-99) , 
5, -0.619039, 0, 0, 0.50338,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.0249925);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.618526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469728,-99) , 
5, 0.13822, 1, 0, 0.557402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490456,-99) , 
0, 0.499995, 1, 0, 0.499649,-99) , 
1, -0.00548496, 1, 0, 0.504109,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489267,-99) , 
3, 2.46503, 1, 0, 0.50021,-99) , 
NN(
0, 
0, 
-1, 0.498091, 0, -1, 0.47472,-99) , 
5, -0.936506, 0, 0, 0.48983,-99) , 
5, -0.809525, 0, 0, 0.501899,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.0151623);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.520071,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518605,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49069,-99) , 
5, -0.365091, 0, 0, 0.508891,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492524,-99) , 
5, 0.269809, 1, 0, 0.497991,-99) , 
2, 0.0713332, 0, 0, 0.499939,-99) , 
5, 0.904714, 0, 0, 0.50119,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.018737);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498087, 0, 1, 0.521324,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48621,-99) , 
0, 0.499039, 1, 0, 0.501291,-99) , 
5, 0.764136, 1, 0, 0.508787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537367,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46405,-99) , 
5, 0.464814, 1, 0, 0.495437,-99) , 
4, 0.99981, 1, 0, 0.498107,-99) , 
5, 0.619004, 0, 0, 0.501377,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.0219575);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495071,-99) , 
4, 0.999997, 0, 0, 0.501927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480121,-99) , 
4, 0.999414, 1, 0, 0.487421,-99) , 
4, 0.999932, 0, 0, 0.498866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47063,-99) , 
4, 0.998572, 0, 0, 0.497886,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.0146432);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50449,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497139,-99) , 
5, 0.460284, 1, 0, 0.500508,-99) , 
NN(
0, 
0, 
-1, 0.489792, 1, -1, 0.482119,-99) , 
0, 0.491425, 0, 0, 0.4991,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489742,-99) , 
0, 0.492242, 1, 0, 0.493936,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4592,-99) , 
0, 0.503805, 1, 0, 0.489073,-99) , 
5, -0.619054, 0, 0, 0.496613,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.0212388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.18333, 0, 1, 0.524113,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467169,-99) , 
3, 2.72732, 1, 0, 0.491377,-99) , 
5, 0.42855, 0, 0, 0.5053,-99) , 
NN(
0, 
0, 
-1, 0.491427, 0, -1, 0.492744,-99) , 
2, -0.0704572, 1, 0, 0.495009,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.0131931);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500949, 1, 1, 0.518533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491015,-99) , 
2, 0.0529803, 1, 0, 0.512691,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503983,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496353,-99) , 
5, 0.425523, 0, 0, 0.500394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478229,-99) , 
5, -0.723358, 0, 0, 0.499217,-99) , 
5, -0.809525, 1, 0, 0.501306,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.00959862);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 8.22972, 0, 1, 0.502793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505646,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47503,-99) , 
0, 0.49995, 1, 0, 0.490389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44992,-99) , 
0, 0.495234, 0, 0, 0.476591,-99) , 
4, 0.999524, 0, 0, 0.500634,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.0125248);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495131,-99) , 
5, -0.968242, 0, 0, 0.51837,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497721,-99) , 
3, 7.68944, 0, 0, 0.499163,-99) , 
5, -0.904753, 1, 0, 0.500975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464412,-99) , 
4, 0.998571, 0, 0, 0.49973,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.0221153);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.99907, 0, 1, 0.522829,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49506,-99) , 
2, -0.0413906, 1, 0, 0.499485,-99) , 
4, 0.999524, 1, 0, 0.5024,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488021,-99) , 
2, 0.0642632, 0, 0, 0.492104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464497,-99) , 
3, 4.72448, 1, 0, 0.488544,-99) , 
5, -0.333367, 0, 0, 0.497696,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.0161309);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.131832, 1, 1, 0.507217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471952,-99) , 
5, -0.676069, 1, 0, 0.495463,-99) , 
5, -0.546485, 0, 0, 0.503791,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50338,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.447284,-99) , 
5, 0.945531, 1, 0, 0.478649,-99) , 
5, 0.904715, 1, 0, 0.502331,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.020711);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513568,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499719,-99) , 
0, 0.502127, 1, 0, 0.509201,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487276,-99) , 
5, -0.523817, 0, 0, 0.498612,-99) , 
0, 0.497139, 0, 0, 0.504802,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519354,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474737,-99) , 
3, 4.1158, 1, 0, 0.50015,-99) , 
NN(
0, 
0, 
-1, 0.333254, 0, -1, 0.47956,-99) , 
2, -0.138834, 1, 0, 0.490575,-99) , 
2, -0.0708291, 0, 0, 0.502205,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.0205543);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504122, 0, 1, 0.519466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492403,-99) , 
5, -0.809508, 0, 0, 0.51472,-99) , 
NN(
NN(
0, 
0, 
-1, 1.89632, 1, 1, 0.522443,-99) , 
NN(
0, 
0, 
-1, 0.727802, 1, -1, 0.493846,-99) , 
5, -0.904754, 1, 0, 0.496371,-99) , 
0, 0.500947, 0, 0, 0.5014,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.025175);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999977, 1, 1, 0.507208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488492,-99) , 
4, 0.999524, 0, 0, 0.505706,-99) , 
NN(
NN(
0, 
0, 
-1, 0.492515, 1, 1, 0.510421,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51341,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479508,-99) , 
1, -0.000643858, 1, 0, 0.493166,-99) , 
5, -0.714287, 1, 0, 0.496592,-99) , 
0, 0.499043, 0, 0, 0.500406,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.0113356);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.464863, 1, 1, 0.503036,-99) , 
NN(
0, 
0, 
-1, 0.014086, 1, -1, 0.488245,-99) , 
5, -0.809519, 0, 0, 0.500801,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505334,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470354,-99) , 
5, -0.428569, 1, 0, 0.484328,-99) , 
0, 0.491425, 0, 0, 0.499412,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.0298391);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.84316, 0, 1, 0.515975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480235,-99) , 
5, 0.619059, 0, 0, 0.49239,-99) , 
2, -0.0704572, 0, 0, 0.508713,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496871,-99) , 
3, 1.44104, 1, 0, 0.505757,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48085,-99) , 
2, -0.0571014, 1, 0, 0.48862,-99) , 
2, 0.014086, 0, 0, 0.494481,-99) , 
3, 4.11024, 0, 0, 0.497659,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.0168127);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504215,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48299,-99) , 
4, 0.999864, 0, 0, 0.50218,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485044,-99) , 
4, 0.999524, 0, 0, 0.500636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517689,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494007,-99) , 
2, 0.0692143, 0, 0, 0.499154,-99) , 
NN(
0, 
0, 
-1, 0.523773, 1, -1, 0.487523,-99) , 
0, 0.501265, 0, 0, 0.493381,-99) , 
0, 0.49809, 1, 0, 0.496991,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.0179879);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495718,-99) , 
3, 1.26798, 1, 0, 0.501272,-99) , 
3, 8.12989, 0, 0, 0.502339,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472659,-99) , 
4, 0.999048, 0, 0, 0.50081,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.00815535);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523538,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499362,-99) , 
0, 0.505709, 0, 0, 0.50045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47111,-99) , 
4, 0.999388, 0, 0, 0.499399,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455564,-99) , 
4, 0.998572, 0, 0, 0.497896,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.0127929);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.515481, 1, 1, 0.505227,-99) , 
NN(
0, 
0, 
-1, 0.503805, 1, -1, 0.493977,-99) , 
5, -0.523819, 0, 0, 0.501927,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467986,-99) , 
3, 8.39117, 1, 0, 0.500731,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.0192592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493925,-99) , 
5, -0.0476366, 0, 0, 0.500941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487447,-99) , 
0, 0.493601, 1, 0, 0.494027,-99) , 
0, 0.498091, 0, 0, 0.497517,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467828,-99) , 
4, 0.999048, 0, 0, 0.49607,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.018872);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520807,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496326,-99) , 
3, 3.34744, 0, 0, 0.502899,-99) , 
2, 0.0529803, 0, 0, 0.507028,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535483,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49995,-99) , 
5, -0.233524, 1, 0, 0.508125,-99) , 
NN(
0, 
0, 
-1, 0.460283, 0, -1, 0.491038,-99) , 
1, 0.00331795, 0, 0, 0.493934,-99) , 
5, -0.619046, 1, 0, 0.497155,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.0267863);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475232,-99) , 
5, 0.74116, 1, 0, 0.528632,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492177,-99) , 
5, -0.809559, 0, 0, 0.519903,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493283,-99) , 
5, 0.619007, 0, 0, 0.497847,-99) , 
NN(
0, 
0, 
-1, 0.50598, 0, -1, 0.46409,-99) , 
0, 0.504756, 1, 0, 0.495285,-99) , 
1, -0.00283878, 1, 0, 0.500589,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.0152369);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526868,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504997,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492035,-99) , 
3, 4.17819, 1, 0, 0.502399,-99) , 
2, -0.209237, 1, 0, 0.503543,-99) , 
4, 0.998095, 1, 0, 0.504661,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.0161212);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491464, 1, 1, 0.507035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484813,-99) , 
0, 0.490064, 0, 0, 0.505943,-99) , 
NN(
0, 
0, 
-1, 3.32214, 0, -1, 0.484528,-99) , 
0, 0.504757, 1, 0, 0.504281,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.016899);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.94194, 0, 1, 0.505633,-99) , 
NN(
0, 
0, 
-1, 0.142959, 0, -1, 0.485743,-99) , 
4, 0.999932, 0, 0, 0.502327,-99) , 
NN(
0, 
0, 
-1, 0.000188883, 0, -1, 0.476701,-99) , 
4, 0.999524, 0, 0, 0.500145,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.01771);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515628,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495506,-99) , 
3, 3.41053, 0, 0, 0.498094,-99) , 
5, 0.632569, 0, 0, 0.499531,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48565,-99) , 
0, 0.497406, 0, 0, 0.492582,-99) , 
NN(
0, 
0, 
-1, 0.877495, 1, -1, 0.468623,-99) , 
0, 0.499039, 1, 0, 0.483437,-99) , 
5, 0.714235, 1, 0, 0.495822,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.0169114);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495952,-99) , 
3, 2.73486, 1, 0, 0.512963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501148,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476349,-99) , 
5, 0.632586, 1, 0, 0.499084,-99) , 
2, 0.0600452, 0, 0, 0.501889,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510224,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504574,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478116,-99) , 
0, 0.494285, 1, 0, 0.483291,-99) , 
5, 0.768672, 1, 0, 0.488714,-99) , 
5, 0.714242, 1, 0, 0.498846,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.0232767);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499429,-99) , 
0, 0.498409, 0, 0, 0.505145,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478899,-99) , 
0, 0.50444, 0, 0, 0.49093,-99) , 
0, 0.500949, 1, 0, 0.501423,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512069,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480808,-99) , 
5, 0.591793, 1, 0, 0.497271,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467489,-99) , 
5, -0.428566, 0, 0, 0.488327,-99) , 
2, -0.0710035, 0, 0, 0.49907,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.0162723);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0153677, 1, 1, 0.510597,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495109,-99) , 
2, -0.204047, 1, 0, 0.496604,-99) , 
3, 1.33725, 1, 0, 0.501304,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467082,-99) , 
3, 8.6342, 1, 0, 0.500258,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.0191062);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518201,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498321,-99) , 
0, 0.494283, 0, 0, 0.513325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482292,-99) , 
3, 4.69189, 1, 0, 0.509537,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513223,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495787,-99) , 
3, 4.0968, 0, 0, 0.499235,-99) , 
NN(
0, 
0, 
-1, 0.782307, 1, -1, 0.485044,-99) , 
2, 0.0719532, 1, 0, 0.496688,-99) , 
5, -0.523811, 1, 0, 0.500277,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.0226864);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488754,-99) , 
2, 0.0739277, 1, 0, 0.511363,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491723,-99) , 
5, 0.428537, 1, 0, 0.501028,-99) , 
0, 0.498726, 1, 0, 0.505539,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514503,-99) , 
NN(
0, 
0, 
-1, 0.238049, 0, -1, 0.486813,-99) , 
0, 0.48952, 1, 0, 0.491259,-99) , 
0, 0.494282, 0, 0, 0.502506,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.0164428);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.87363, 0, 1, 0.515851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518614,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499932,-99) , 
0, 0.502852, 0, 0, 0.502338,-99) , 
5, 0.455782, 1, 0, 0.506054,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546119,-99) , 
NN(
0, 
0, 
-1, 5.86123, 1, -1, 0.492764,-99) , 
1, -0.00808972, 1, 0, 0.497749,-99) , 
5, 0.0475998, 0, 0, 0.502399,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.0101101);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531217,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498383,-99) , 
5, -0.428593, 1, 0, 0.500508,-99) , 
2, 0.220172, 0, 0, 0.501572,-99) , 
NN(
0, 
0, 
-1, 0.496187, 1, -1, 0.479345,-99) , 
4, 0.999524, 0, 0, 0.499744,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.0179899);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53064,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496738,-99) , 
4, 0.999864, 0, 0, 0.519593,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468715,-99) , 
3, 7.08134, 1, 0, 0.50128,-99) , 
5, 0.714242, 0, 0, 0.505151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464945,-99) , 
4, 0.998571, 0, 0, 0.503803,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.0314029);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493827,-99) , 
5, 0.417966, 0, 0, 0.515553,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496099,-99) , 
3, 4.4012, 0, 0, 0.499353,-99) , 
5, 0.555527, 1, 0, 0.503407,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511805,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46112,-99) , 
4, 0.999991, 0, 0, 0.496665,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459467,-99) , 
4, 0.999905, 0, 0, 0.493957,-99) , 
5, 0.333304, 0, 0, 0.498298,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.0143788);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4964,-99) , 
2, 0.0703755, 0, 0, 0.499,-99) , 
4, 0.999048, 1, 0, 0.500567,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467564,-99) , 
3, 8.39117, 1, 0, 0.499418,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.0348373);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528858,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492103,-99) , 
4, 0.999524, 0, 0, 0.523635,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477522,-99) , 
0, 0.500947, 1, 0, 0.496592,-99) , 
1, 0.00102705, 0, 0, 0.506642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513921,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473773,-99) , 
4, 0.999995, 0, 0, 0.496839,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459904,-99) , 
4, 0.999905, 0, 0, 0.49441,-99) , 
5, 0.238066, 0, 0, 0.500483,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.015214);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.492105, 1, 1, 0.507282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500493,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476035,-99) , 
5, -0.238095, 1, 0, 0.487674,-99) , 
0, 0.490472, 0, 0, 0.50613,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.0148359);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.918322, 0, 1, 0.518631,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488899,-99) , 
2, 0.0717866, 1, 0, 0.513319,-99) , 
NN(
NN(
0, 
0, 
-1, -0.183732, 0, 1, 0.528364,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500222,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464728,-99) , 
3, 7.01397, 1, 0, 0.498377,-99) , 
0, 0.491425, 1, 0, 0.501049,-99) , 
5, 0.714243, 0, 0, 0.50393,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.0139708);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.503804, 0, 1, 0.504043,-99) , 
NN(
0, 
0, 
-1, 0.503803, 1, -1, 0.490086,-99) , 
5, 0.238069, 0, 0, 0.497049,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.0159278);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.93646, 1, 1, 0.521161,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52772,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493945,-99) , 
5, -0.546474, 0, 0, 0.512457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515323,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49593,-99) , 
5, -0.909296, 1, 0, 0.497537,-99) , 
1, 0.0040614, 0, 0, 0.499932,-99) , 
5, 0.904713, 0, 0, 0.501267,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.0191292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.216826, 0, 1, 0.506891,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481544,-99) , 
3, 8.40138, 1, 0, 0.50552,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509486,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484031,-99) , 
3, 0.734843, 0, 0, 0.504939,-99) , 
NN(
0, 
0, 
-1, -0.229104, 1, -1, 0.486127,-99) , 
0, 0.497141, 1, 0, 0.494053,-99) , 
5, -0.0476404, 0, 0, 0.500822,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.0155935);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.0725035, 0, 1, 0.51621,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494273,-99) , 
3, 8.234, 0, 0, 0.495306,-99) , 
0, 0.489522, 1, 0, 0.496301,-99) , 
4, 0.999524, 1, 0, 0.498019,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.0147092);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498487,-99) , 
2, -0.0497658, 1, 0, 0.500678,-99) , 
2, 0.190522, 0, 0, 0.502275,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511578,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484419,-99) , 
5, 0.800421, 1, 0, 0.497661,-99) , 
NN(
0, 
0, 
-1, 5.55604, 0, -1, 0.478992,-99) , 
5, 0.61901, 0, 0, 0.485422,-99) , 
3, 4.36372, 1, 0, 0.498929,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.0146851);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525407,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524504,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497543,-99) , 
5, 0.904626, 0, 0, 0.499466,-99) , 
1, -0.0057274, 1, 0, 0.501928,-99) , 
NN(
NN(
0, 
0, 
-1, -0.904757, 0, -1, 0.49604,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46145,-99) , 
2, -0.20934, 1, 0, 0.476802,-99) , 
2, -0.0740098, 0, 0, 0.492684,-99) , 
0, 0.498091, 1, 0, 0.49728,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.0159425);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.89521, 0, 1, 0.505077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472163,-99) , 
4, 0.999728, 0, 0, 0.503952,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523055,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465044,-99) , 
5, 0.891246, 1, 0, 0.497062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461759,-99) , 
5, 0.714275, 0, 0, 0.486192,-99) , 
4, 0.999524, 0, 0, 0.502483,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.0192896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00680353, 0, 1, 0.507185,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449571,-99) , 
1, -0.0112194, 0, 0, 0.505359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452886,-99) , 
1, 0.0119067, 1, 0, 0.503878,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.0179376);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00803907, 0, 1, 0.50454,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506814,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486344,-99) , 
1, -0.000366823, 1, 0, 0.495051,-99) , 
5, 0.238069, 1, 0, 0.499756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443603,-99) , 
1, -0.0122449, 0, 0, 0.498259,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.0167136);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529062,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494716,-99) , 
2, 0.192377, 0, 0, 0.496381,-99) , 
4, 0.998572, 1, 0, 0.497542,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46186,-99) , 
3, 8.39117, 1, 0, 0.496278,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.0134041);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471816,-99) , 
5, 0.922853, 1, 0, 0.501603,-99) , 
NN(
0, 
0, 
-1, -0.764188, 1, -1, 0.490405,-99) , 
5, -0.619054, 0, 0, 0.498723,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469048,-99) , 
4, 0.999048, 0, 0, 0.497276,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.0120116);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46527,-99) , 
3, 6.81559, 1, 0, 0.501554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476092,-99) , 
3, 8.39117, 1, 0, 0.500584,-99) , 
NN(
0, 
0, 
-1, -0.968256, 0, -1, 0.482446,-99) , 
5, -0.904758, 0, 0, 0.498961,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.0188033);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54695,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490483,-99) , 
0, 0.496186, 1, 0, 0.50098,-99) , 
5, 0.836694, 1, 0, 0.509148,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490602,-99) , 
3, 2.46503, 1, 0, 0.502838,-99) , 
NN(
0, 
0, 
-1, 0.0709164, 0, -1, 0.493091,-99) , 
5, -0.741499, 1, 0, 0.495266,-99) , 
5, 0.809479, 0, 0, 0.497332,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.0253388);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505044,-99) , 
NN(
0, 
0, 
-1, 0.000749103, 1, -1, 0.48878,-99) , 
5, 0.877514, 1, 0, 0.502525,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471101,-99) , 
4, 0.999995, 0, 0, 0.494647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462883,-99) , 
4, 0.999905, 0, 0, 0.492652,-99) , 
5, 0.14283, 0, 0, 0.497882,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.0141328);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528313,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502702,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491607,-99) , 
5, 0.714243, 1, 0, 0.500308,-99) , 
4, 0.999048, 1, 0, 0.501646,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522971,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493058,-99) , 
0, 0.489792, 1, 0, 0.497528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46819,-99) , 
5, 0.809397, 1, 0, 0.493584,-99) , 
0, 0.495234, 0, 0, 0.499458,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.022841);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498091, 0, 1, 0.514305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533855,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49137,-99) , 
1, 0.00216305, 0, 0, 0.503941,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490206,-99) , 
0, 0.489658, 1, 0, 0.491257,-99) , 
0, 0.5019, 0, 0, 0.493931,-99) , 
5, 0.904715, 0, 0, 0.495166,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.0222511);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497137, 0, 1, 0.529991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.555366,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484062,-99) , 
3, 1.9141, 1, 0, 0.503956,-99) , 
5, 0.523562, 0, 0, 0.513372,-99) , 
NN(
NN(
0, 
0, 
-1, 0.496187, 1, 1, 0.517433,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490424,-99) , 
2, -0.0120175, 1, 0, 0.494921,-99) , 
2, -0.150777, 1, 0, 0.497245,-99) , 
2, 0.0733765, 0, 0, 0.500098,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.0203771);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535677,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494918,-99) , 
4, 0.999954, 0, 0, 0.517304,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493762,-99) , 
2, 0.00823912, 0, 0, 0.498312,-99) , 
2, 0.0824978, 0, 0, 0.501121,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471622,-99) , 
4, 0.999048, 0, 0, 0.49967,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.021892);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49595,-99) , 
5, 0.238069, 1, 0, 0.50327,-99) , 
NN(
0, 
0, 
-1, -0.0476953, 1, -1, 0.476831,-99) , 
3, 3.57098, 1, 0, 0.500636,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483913,-99) , 
2, -0.0715338, 0, 0, 0.499144,-99) , 
NN(
0, 
0, 
-1, 0.0357507, 1, -1, 0.470808,-99) , 
5, 0.333312, 0, 0, 0.485412,-99) , 
3, 4.38175, 1, 0, 0.497577,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.0278485);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484224,-99) , 
2, -0.0729802, 0, 0, 0.511066,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478259,-99) , 
0, 0.494147, 0, 0, 0.486314,-99) , 
0, 0.495235, 0, 0, 0.504972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.543126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492145,-99) , 
3, 0.400327, 1, 0, 0.494938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464214,-99) , 
3, 5.97015, 1, 0, 0.492714,-99) , 
5, 0.333295, 0, 0, 0.498372,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.0194042);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.503532, 1, 1, 0.52565,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493082,-99) , 
2, 0.0213294, 0, 0, 0.503211,-99) , 
5, 0.523795, 0, 0, 0.510228,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486405,-99) , 
2, 0.0717866, 1, 0, 0.501757,-99) , 
NN(
0, 
0, 
-1, 0.498208, 0, -1, 0.490141,-99) , 
0, 0.497819, 1, 0, 0.497088,-99) , 
0, 0.5019, 0, 0, 0.499857,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.0225162);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488492,-99) , 
3, 3.9338, 1, 0, 0.504327,-99) , 
3, 8.12725, 0, 0, 0.505516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509078,-99) , 
NN(
0, 
0, 
-1, 0.998163, 1, -1, 0.471023,-99) , 
5, 0.714329, 1, 0, 0.483963,-99) , 
4, 0.999524, 0, 0, 0.503728,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.0163271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489568,-99) , 
3, 1.31649, 0, 0, 0.513272,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502376,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493909,-99) , 
5, 0.611249, 0, 0, 0.49734,-99) , 
5, -0.632621, 1, 0, 0.499921,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.482223,-99) , 
5, -0.90475, 0, 0, 0.498365,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.0252652);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49076,-99) , 
4, 0.999986, 0, 0, 0.510009,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474065,-99) , 
4, 0.999905, 0, 0, 0.507479,-99) , 
NN(
NN(
0, 
0, 
-1, 0.504439, 1, 1, 0.515846,-99) , 
NN(
0, 
0, 
-1, -0.00146741, 0, -1, 0.491989,-99) , 
0, 0.500948, 0, 0, 0.497845,-99) , 
5, 0.333285, 1, 0, 0.503018,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.0172876);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.521862,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485128,-99) , 
5, -0.255541, 0, 0, 0.504487,-99) , 
5, -0.464826, 1, 0, 0.505682,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514104,-99) , 
NN(
0, 
0, 
-1, -0.836746, 1, -1, 0.490522,-99) , 
2, 0.0552341, 0, 0, 0.495564,-99) , 
5, -0.619052, 0, 0, 0.503173,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.0259274);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530065,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517756,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490726,-99) , 
0, 0.499361, 0, 0, 0.506051,-99) , 
0, 0.494281, 1, 0, 0.512107,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509434,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491167,-99) , 
5, 0.523777, 0, 0, 0.497907,-99) , 
NN(
0, 
0, 
-1, 0.501898, 1, -1, 0.483941,-99) , 
2, -0.000903682, 1, 0, 0.492279,-99) , 
2, 0.0737909, 0, 0, 0.495723,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.0165816);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.12659, 0, 1, 0.513642,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495759,-99) , 
5, 0.179114, 1, 0, 0.501871,-99) , 
0, 0.494283, 1, 0, 0.504338,-99) , 
NN(
0, 
0, 
-1, 0.945531, 1, -1, 0.4829,-99) , 
5, 0.904715, 1, 0, 0.503087,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.0154095);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0057274, 1, 1, 0.505117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505769,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477248,-99) , 
0, 0.499996, 0, 0, 0.487988,-99) , 
5, -0.809523, 0, 0, 0.502387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469323,-99) , 
4, 0.998572, 0, 0, 0.501279,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.0157248);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.275785, 0, 1, 0.52032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49335,-99) , 
5, -0.714224, 0, 0, 0.51491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497139,-99) , 
0, 0.496004, 1, 0, 0.500185,-99) , 
NN(
0, 
0, 
-1, 0.523784, 1, -1, 0.485254,-99) , 
0, 0.492377, 0, 0, 0.498532,-99) , 
2, 0.0717866, 0, 0, 0.50152,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.0105418);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524582,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487161,-99) , 
5, 0.723312, 1, 0, 0.499228,-99) , 
5, 0.904715, 0, 0, 0.500412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475822,-99) , 
4, 0.999048, 0, 0, 0.499179,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.0114363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491399,-99) , 
3, 3.55532, 1, 0, 0.499382,-99) , 
2, 0.203198, 0, 0, 0.500871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471329,-99) , 
3, 8.12989, 1, 0, 0.499712,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.0224742);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52228,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497192,-99) , 
3, 3.77463, 1, 0, 0.511756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490524,-99) , 
5, -0.619056, 1, 0, 0.494813,-99) , 
2, 0.047194, 0, 0, 0.498416,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507029,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480315,-99) , 
0, 0.495279, 0, 0, 0.493297,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45105,-99) , 
0, 0.499994, 1, 0, 0.479828,-99) , 
4, 0.999524, 0, 0, 0.496872,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.0246593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.745997, 1, 1, 0.51071,-99) , 
NN(
0, 
0, 
-1, 0.498094, 0, -1, 0.480581,-99) , 
2, -0.0710035, 0, 0, 0.505401,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536907,-99) , 
NN(
0, 
0, 
-1, 2.69314, 1, -1, 0.489478,-99) , 
1, -0.00808972, 1, 0, 0.492789,-99) , 
5, 0.619008, 0, 0, 0.496649,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.0179601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.92487, 1, 1, 0.518742,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533221,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49711,-99) , 
2, 0.130855, 0, 0, 0.500413,-99) , 
2, -0.0892805, 1, 0, 0.502608,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507851,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485427,-99) , 
2, 0.0666221, 1, 0, 0.50098,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453578,-99) , 
0, 0.501901, 0, 0, 0.480101,-99) , 
0, 0.499044, 1, 0, 0.491487,-99) , 
3, 4.25646, 1, 0, 0.500277,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.009647);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507227,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499629,-99) , 
0, 0.497138, 1, 0, 0.502765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480007,-99) , 
4, 0.999048, 0, 0, 0.501959,-99) , 
NN(
0, 
0, 
-1, 0.498093, 0, -1, 0.478525,-99) , 
5, 0.904712, 1, 0, 0.500597,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.0284442);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51669,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493147,-99) , 
4, 0.999995, 0, 0, 0.506104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480796,-99) , 
4, 0.999905, 0, 0, 0.504062,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48184,-99) , 
3, 1.72066, 1, 0, 0.497268,-99) , 
NN(
0, 
0, 
-1, 0.000674388, 0, -1, 0.4808,-99) , 
3, 4.27969, 1, 0, 0.49352,-99) , 
5, 0.428537, 1, 0, 0.499674,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.0264992);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0475478, 1, 1, 0.526507,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511287,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468809,-99) , 
5, 0.523168, 1, 0, 0.498336,-99) , 
2, 0.14027, 0, 0, 0.513382,-99) , 
NN(
NN(
0, 
0, 
-1, -0.144916, 1, 1, 0.506826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481812,-99) , 
3, 2.36144, 0, 0, 0.492229,-99) , 
2, -0.00249126, 1, 0, 0.50058,-99) , 
2, 0.0722913, 0, 0, 0.502877,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.0141136);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508414,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49498,-99) , 
2, 0.0664016, 1, 0, 0.506045,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482399,-99) , 
3, 4.09689, 1, 0, 0.49728,-99) , 
0, 0.497411, 0, 0, 0.501826,-99) , 
NN(
0, 
0, 
-1, 3.12339, 1, -1, 0.484603,-99) , 
0, 0.504757, 1, 0, 0.500479,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.0185714);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0246706, 1, 1, 0.517739,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48097,-99) , 
5, 0.533556, 0, 0, 0.501636,-99) , 
5, 0.455787, 1, 0, 0.504727,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503582,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485328,-99) , 
3, 1.34793, 0, 0, 0.496838,-99) , 
NN(
0, 
0, 
-1, 0.49714, 1, -1, 0.473464,-99) , 
5, 0.00223743, 1, 0, 0.493263,-99) , 
5, 0.238069, 0, 0, 0.498992,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.0260943);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537933,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483758,-99) , 
4, 0.999977, 0, 0, 0.510583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506663,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489839,-99) , 
2, 0.021418, 0, 0, 0.496224,-99) , 
2, -0.0525002, 1, 0, 0.499042,-99) , 
NN(
0, 
0, 
-1, 0.498089, 0, -1, 0.479854,-99) , 
4, 0.999524, 0, 0, 0.497434,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.0164789);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53281,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500849,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487413,-99) , 
0, 0.494281, 0, 0, 0.498265,-99) , 
5, -0.142872, 1, 0, 0.500793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527289,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493893,-99) , 
1, 0.00644956, 0, 0, 0.498611,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475429,-99) , 
3, 3.69238, 0, 0, 0.482531,-99) , 
0, 0.499045, 1, 0, 0.491609,-99) , 
5, -0.333359, 0, 0, 0.49769,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.0137593);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488751,-99) , 
0, 0.495776, 0, 0, 0.509309,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478711,-99) , 
4, 0.999548, 0, 0, 0.501438,-99) , 
5, 0.809479, 0, 0, 0.502694,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502385,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484876,-99) , 
5, 0.238065, 0, 0, 0.492672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478558,-99) , 
0, 0.505981, 1, 0, 0.490124,-99) , 
0, 0.5019, 1, 0, 0.50004,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.0191463);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524573,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498133,-99) , 
0, 0.501627, 1, 0, 0.516131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505087,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490203,-99) , 
5, 0.387649, 1, 0, 0.500956,-99) , 
5, 0.714199, 0, 0, 0.504559,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473963,-99) , 
3, 3.80773, 1, 0, 0.500412,-99) , 
NN(
0, 
0, 
-1, 0.151983, 0, -1, 0.490993,-99) , 
5, -0.0476354, 1, 0, 0.494921,-99) , 
0, 0.497138, 0, 0, 0.500515,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.0170751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53316,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495732,-99) , 
0, 0.5019, 0, 0, 0.498786,-99) , 
4, 0.998571, 1, 0, 0.50006,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502961,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476703,-99) , 
2, 0.0786591, 1, 0, 0.492293,-99) , 
NN(
0, 
0, 
-1, 0.499046, 0, -1, 0.472596,-99) , 
2, -0.0710035, 0, 0, 0.486252,-99) , 
3, 4.38175, 1, 0, 0.49731,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.0166241);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52226,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48944,-99) , 
0, 0.499996, 1, 0, 0.510117,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495,-99) , 
2, -0.149773, 1, 0, 0.496412,-99) , 
2, 0.114154, 0, 0, 0.498112,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476202,-99) , 
2, -0.21191, 0, 0, 0.496987,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.0341884);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492187,-99) , 
6, 0.00424626, 0, 0, 0.502853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.430177,-99) , 
1, 0.012739, 1, 0, 0.500947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454672,-99) , 
1, -0.0108299, 0, 0, 0.499466,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.0116643);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0128546, 1, 1, 0.51477,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498851,-99) , 
2, -0.21058, 1, 0, 0.500296,-99) , 
3, 0.890128, 1, 0, 0.503167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468928,-99) , 
3, 8.33212, 1, 0, 0.501949,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.0211398);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.941006, 1, 1, 0.525638,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509096,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493559,-99) , 
4, 0.999932, 0, 0, 0.506733,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51815,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473922,-99) , 
0, 0.496188, 1, 0, 0.492464,-99) , 
4, 0.999524, 0, 0, 0.50582,-99) , 
5, 0.904713, 0, 0, 0.507026,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.0143535);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485627,-99) , 
3, 4.12942, 1, 0, 0.511541,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49539,-99) , 
0, 0.492967, 1, 0, 0.496416,-99) , 
NN(
0, 
0, 
-1, 0.490155, 0, -1, 0.481122,-99) , 
0, 0.491425, 0, 0, 0.495194,-99) , 
2, -0.215269, 1, 0, 0.496041,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.0198408);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.900182, 0, 1, 0.529944,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512254,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493638,-99) , 
5, 0.872979, 1, 0, 0.501112,-99) , 
1, 0.000749103, 0, 0, 0.513168,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513917,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494505,-99) , 
0, 0.497819, 1, 0, 0.498245,-99) , 
NN(
0, 
0, 
-1, 0.493737, 1, -1, 0.488638,-99) , 
0, 0.496186, 0, 0, 0.494973,-99) , 
5, 0.809478, 0, 0, 0.497703,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.0221357);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.42961, 1, 1, 0.521656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487086,-99) , 
5, 0.416885, 0, 0, 0.505841,-99) , 
5, 0.183631, 1, 0, 0.508187,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491509,-99) , 
3, 3.15929, 1, 0, 0.503833,-99) , 
NN(
0, 
0, 
-1, -0.795929, 0, -1, 0.490369,-99) , 
0, 0.496188, 0, 0, 0.498982,-99) , 
5, -0.142886, 0, 0, 0.50464,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.0147829);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493524, 1, 1, 0.505479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484163,-99) , 
0, 0.489792, 0, 0, 0.504486,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506653,-99) , 
NN(
0, 
0, 
-1, 0.0760069, 0, -1, 0.482685,-99) , 
2, -0.0729802, 1, 0, 0.487918,-99) , 
0, 0.502852, 1, 0, 0.501861,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.0154037);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53801,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495504,-99) , 
0, 0.50326, 1, 0, 0.517934,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49807,-99) , 
0, 0.501083, 1, 0, 0.502411,-99) , 
2, 0.0733252, 0, 0, 0.505491,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496455,-99) , 
2, -0.178866, 1, 0, 0.498695,-99) , 
NN(
0, 
0, 
-1, 0.494689, 0, -1, 0.473053,-99) , 
4, 0.999524, 0, 0, 0.496575,-99) , 
0, 0.499995, 0, 0, 0.499605,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.00975911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498122,-99) , 
3, 2.22452, 0, 0, 0.522413,-99) , 
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.502569,-99) , 
5, 0.904714, 0, 0, 0.50373,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466329,-99) , 
3, 8.33212, 1, 0, 0.50242,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.0168568);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542306,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479492,-99) , 
5, -0.428543, 0, 0, 0.504093,-99) , 
0, 0.494283, 1, 0, 0.513815,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502101,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481124,-99) , 
2, 0.222086, 1, 0, 0.501052,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475731,-99) , 
2, 0.072683, 0, 0, 0.485762,-99) , 
0, 0.493329, 0, 0, 0.498715,-99) , 
2, -0.0762289, 1, 0, 0.501295,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.0203711);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0781803, 0, 1, 0.511418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477956,-99) , 
4, 0.999524, 0, 0, 0.50829,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495033,-99) , 
5, 0.501124, 1, 0, 0.502896,-99) , 
NN(
0, 
0, 
-1, 0.766452, 0, -1, 0.492755,-99) , 
5, 0.0475947, 0, 0, 0.49848,-99) , 
0, 0.497138, 1, 0, 0.502556,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.0208433);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500967, 0, 1, 0.515026,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511534,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485123,-99) , 
5, 0.428504, 1, 0, 0.502766,-99) , 
0, 0.503532, 1, 0, 0.511343,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505775,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487459,-99) , 
0, 0.490699, 0, 0, 0.502849,-99) , 
NN(
0, 
0, 
-1, 0.497281, 0, -1, 0.490798,-99) , 
0, 0.496866, 1, 0, 0.498965,-99) , 
0, 0.499043, 0, 0, 0.504154,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.0175319);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513061,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496499,-99) , 
1, -0.00111011, 1, 0, 0.502563,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481263,-99) , 
0, 0.502755, 0, 0, 0.490822,-99) , 
0, 0.500539, 1, 0, 0.499431,-99) , 
0, 0.505709, 0, 0, 0.500449,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.0102246);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501899, 0, 1, 0.517256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49773,-99) , 
5, -0.428562, 0, 0, 0.511305,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528541,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498451,-99) , 
2, 0.228348, 0, 0, 0.499569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482598,-99) , 
4, 0.999524, 0, 0, 0.498532,-99) , 
2, -0.0708291, 1, 0, 0.50082,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.0168561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.506303,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483797,-99) , 
0, 0.49714, 0, 0, 0.494877,-99) , 
5, -0.569158, 0, 0, 0.502767,-99) , 
NN(
0, 
0, 
-1, 0.500949, 0, -1, 0.483493,-99) , 
5, 0.80948, 1, 0, 0.499963,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.0135459);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.428545, 1, 1, 0.522235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480108,-99) , 
0, 0.489203, 0, 0, 0.512643,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0476181, 0, 1, 0.512687,-99) , 
NN(
0, 
0, 
-1, 0.503571, 1, -1, 0.495677,-99) , 
0, 0.505437, 0, 0, 0.496724,-99) , 
0, 0.492378, 1, 0, 0.498551,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.0127832);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.387833, 0, 1, 0.532007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498582,-99) , 
5, 0.428486, 1, 0, 0.520573,-99) , 
NN(
NN(
0, 
0, 
-1, 0.502533, 0, 1, 0.504656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47321,-99) , 
3, 4.79035, 1, 0, 0.496689,-99) , 
5, 0.142831, 0, 0, 0.501029,-99) , 
0, 0.492377, 1, 0, 0.503329,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.0167593);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491619, 1, 1, 0.523883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49491,-99) , 
0, 0.490064, 0, 0, 0.515456,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495447,-99) , 
5, -0.619034, 1, 0, 0.498487,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469857,-99) , 
2, 0.21519, 1, 0, 0.497239,-99) , 
0, 0.493329, 1, 0, 0.500112,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.00813934);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.192651, 1, 1, 0.503392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476654,-99) , 
4, 0.998572, 0, 0, 0.502483,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.0104158);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497142, 0, 1, 0.524626,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536898,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501074,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491529,-99) , 
3, 3.73825, 1, 0, 0.498571,-99) , 
0, 0.489522, 1, 0, 0.499789,-99) , 
4, 0.999048, 1, 0, 0.501141,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.015469);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528254,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516435,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494422,-99) , 
5, 0.904715, 0, 0, 0.495494,-99) , 
2, 0.225882, 0, 0, 0.496767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470342,-99) , 
4, 0.998572, 0, 0, 0.495874,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.00879307);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.243425, 0, 1, 0.528969,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475993,-99) , 
3, 6.89695, 1, 0, 0.500237,-99) , 
3, 0.522208, 1, 0, 0.502364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480351,-99) , 
3, 8.39725, 1, 0, 0.501626,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.0187213);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535798,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49315,-99) , 
0, 0.494558, 0, 0, 0.507516,-99) , 
0, 0.503805, 0, 0, 0.51132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50442,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48963,-99) , 
3, 0.993103, 0, 0, 0.499388,-99) , 
NN(
0, 
0, 
-1, 0.496185, 0, -1, 0.482443,-99) , 
3, 3.17155, 1, 0, 0.497076,-99) , 
3, 4.1246, 0, 0, 0.500194,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.0107561);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494986,-99) , 
2, -0.0229658, 1, 0, 0.497184,-99) , 
2, 0.132512, 0, 0, 0.498553,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48238,-99) , 
2, 0.214165, 1, 0, 0.49775,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.0142268);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0589295, 0, 1, 0.516101,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495758,-99) , 
4, 0.999048, 1, 0, 0.497041,-99) , 
0, 0.492377, 1, 0, 0.499281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471027,-99) , 
3, 8.63683, 1, 0, 0.498412,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.0117267);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504037,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489306,-99) , 
0, 0.49088, 0, 0, 0.502995,-99) , 
NN(
0, 
0, 
-1, 0.142954, 1, -1, 0.485832,-99) , 
0, 0.504757, 1, 0, 0.501696,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469003,-99) , 
0, 0.498094, 0, 0, 0.485904,-99) , 
2, -0.216957, 0, 0, 0.500888,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.0125221);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537804,-99) , 
NN(
NN(
0, 
0, 
-1, -0.42865, 0, 1, 0.512043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496162,-99) , 
5, 0.904713, 0, 0, 0.497382,-99) , 
0, 0.492105, 1, 0, 0.498486,-99) , 
0, 0.48952, 1, 0, 0.499833,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.0150192);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0205143, 1, 1, 0.517436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485819,-99) , 
5, -0.714217, 0, 0, 0.509753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51626,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497308,-99) , 
0, 0.491017, 1, 0, 0.499011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462851,-99) , 
1, -0.0104141, 0, 0, 0.497731,-99) , 
0, 0.5019, 0, 0, 0.50025,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.0135642);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527963,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505091,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492982,-99) , 
2, 0.0709782, 1, 0, 0.503023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482046,-99) , 
1, -0.00926118, 0, 0, 0.502114,-99) , 
4, 0.998572, 1, 0, 0.503075,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.0143721);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514181,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499326,-99) , 
0, 0.500383, 0, 0, 0.502081,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477284,-99) , 
1, 0.00286421, 0, 0, 0.486959,-99) , 
0, 0.502715, 1, 0, 0.499472,-99) , 
NN(
0, 
0, 
-1, -0.142861, 0, -1, 0.47805,-99) , 
0, 0.490472, 0, 0, 0.498216,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.0163485);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.46485, 1, 1, 0.503929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483282,-99) , 
3, 2.69336, 0, 0, 0.491533,-99) , 
5, -0.809516, 0, 0, 0.50203,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478447,-99) , 
5, 0.673466, 1, 0, 0.495068,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501368,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440754,-99) , 
0, 0.498088, 0, 0, 0.470842,-99) , 
5, -0.142877, 0, 0, 0.485498,-99) , 
2, -0.0688124, 0, 0, 0.499033,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.021937);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496519,-99) , 
0, 0.505951, 1, 0, 0.516615,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504615,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481915,-99) , 
0, 0.503599, 1, 0, 0.502014,-99) , 
0, 0.505119, 0, 0, 0.503607,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489406,-99) , 
5, -0.523832, 0, 0, 0.507327,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482485,-99) , 
5, -0.809528, 1, 0, 0.485897,-99) , 
1, -0.00111011, 1, 0, 0.493769,-99) , 
0, 0.497138, 0, 0, 0.499483,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.0103741);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524494,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493971,-99) , 
5, -0.968257, 0, 0, 0.513656,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518431,-99) , 
NN(
0, 
0, 
-1, 0.0103731, 1, -1, 0.496847,-99) , 
2, 0.214165, 0, 0, 0.49794,-99) , 
5, -0.90476, 1, 0, 0.499353,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.019987);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496309,-99) , 
5, 0.510171, 1, 0, 0.512975,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508095,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495907,-99) , 
5, 0.265281, 0, 0, 0.503553,-99) , 
0, 0.495235, 1, 0, 0.505972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505321,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483403,-99) , 
0, 0.4951, 0, 0, 0.496617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4756,-99) , 
0, 0.501901, 1, 0, 0.491478,-99) , 
5, -0.714281, 0, 0, 0.502993,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.0168047);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496392,-99) , 
1, 0.00130034, 1, 0, 0.506268,-99) , 
0, 0.492241, 0, 0, 0.513792,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505502,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493025,-99) , 
0, 0.502172, 1, 0, 0.502826,-99) , 
NN(
0, 
0, 
-1, 0.333317, 0, -1, 0.487462,-99) , 
2, -0.0692, 0, 0, 0.500148,-99) , 
0, 0.493329, 1, 0, 0.502348,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.0129133);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495205,-99) , 
0, 0.50444, 0, 0, 0.505875,-99) , 
5, 0.714178, 0, 0, 0.51222,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498505,-99) , 
0, 0.491554, 1, 0, 0.500385,-99) , 
NN(
0, 
0, 
-1, 0.0474824, 1, -1, 0.479934,-99) , 
0, 0.501401, 1, 0, 0.498344,-99) , 
0, 0.502852, 0, 0, 0.500537,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.0138117);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.782221, 0, 1, 0.521343,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499275,-99) , 
5, -0.523832, 0, 0, 0.515232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503167,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477252,-99) , 
1, -0.0108299, 0, 0, 0.502308,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462011,-99) , 
4, 0.999048, 0, 0, 0.500936,-99) , 
2, -0.0715338, 1, 0, 0.50352,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.0150896);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500683,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467677,-99) , 
5, -0.169357, 0, 0, 0.4989,-99) , 
5, -0.292496, 1, 0, 0.500879,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510209,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487613,-99) , 
5, -0.836747, 1, 0, 0.497672,-99) , 
NN(
0, 
0, 
-1, 3.91559, 0, -1, 0.479513,-99) , 
3, 2.47317, 1, 0, 0.490547,-99) , 
5, -0.428591, 0, 0, 0.497661,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.0166292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525667,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512929,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487803,-99) , 
0, 0.491742, 0, 0, 0.501917,-99) , 
2, 0.0717946, 0, 0, 0.507344,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47222,-99) , 
2, -0.215865, 0, 0, 0.50128,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488349,-99) , 
5, 0.809428, 0, 0, 0.491021,-99) , 
0, 0.498091, 0, 0, 0.497539,-99) , 
0, 0.494281, 1, 0, 0.499598,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.0211659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495168,-99) , 
2, 0.0661466, 1, 0, 0.509819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536709,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496262,-99) , 
3, 0.51562, 1, 0, 0.500031,-99) , 
3, 4.25656, 0, 0, 0.501933,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512495,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489091,-99) , 
5, 0.714221, 0, 0, 0.494094,-99) , 
NN(
0, 
0, 
-1, -0.23806, 1, -1, 0.473521,-99) , 
2, 0.069202, 1, 0, 0.490147,-99) , 
0, 0.499043, 1, 0, 0.496986,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.0239206);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489611, 1, 1, 0.508978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50397,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466309,-99) , 
0, 0.492106, 0, 0, 0.497728,-99) , 
5, 0.618961, 1, 0, 0.50545,-99) , 
NN(
NN(
0, 
0, 
-1, -0.523895, 0, 1, 0.522596,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521737,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486726,-99) , 
2, -0.201126, 1, 0, 0.488764,-99) , 
1, -0.00439438, 1, 0, 0.493187,-99) , 
0, 0.498091, 1, 0, 0.499275,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.0126701);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4984, 0, 1, 0.503802,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492216,-99) , 
2, -0.0729667, 1, 0, 0.495087,-99) , 
0, 0.499134, 1, 0, 0.499886,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5023,-99) , 
NN(
0, 
0, 
-1, 0.346985, 0, -1, 0.478943,-99) , 
5, -0.523726, 1, 0, 0.487317,-99) , 
0, 0.491425, 0, 0, 0.498796,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.0149682);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.904717, 0, 1, 0.50398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477611,-99) , 
2, -0.21097, 0, 0, 0.50279,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489794,-99) , 
5, 0.174623, 1, 0, 0.495944,-99) , 
NN(
0, 
0, 
-1, 0.493421, 1, -1, 0.482181,-99) , 
5, -0.238084, 0, 0, 0.490403,-99) , 
0, 0.495234, 0, 0, 0.499465,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.0239728);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.591847, 1, 1, 0.52139,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518939,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457586,-99) , 
5, -0.451306, 1, 0, 0.498668,-99) , 
5, 0.047586, 0, 0, 0.511377,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506285,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491217,-99) , 
2, 0.00330044, 0, 0, 0.499606,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479071,-99) , 
0, 0.495236, 1, 0, 0.487677,-99) , 
5, -0.71429, 0, 0, 0.497135,-99) , 
2, -0.0715338, 1, 0, 0.499712,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.0204753);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499426,-99) , 
3, 2.36803, 0, 0, 0.508543,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483724,-99) , 
3, 2.56199, 1, 0, 0.49539,-99) , 
0, 0.499995, 0, 0, 0.500232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51612,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49377,-99) , 
0, 0.495233, 1, 0, 0.501529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502459,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480506,-99) , 
4, 0.999977, 1, 0, 0.490558,-99) , 
4, 0.999524, 1, 0, 0.492031,-99) , 
5, -0.0476396, 1, 0, 0.495421,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.0145733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504242,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491071,-99) , 
5, 0.619008, 1, 0, 0.500342,-99) , 
2, -0.213627, 1, 0, 0.501492,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468432,-99) , 
3, 8.63683, 1, 0, 0.50048,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.0157574);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519579,-99) , 
NN(
0, 
0, 
-1, -0.909295, 0, -1, 0.494229,-99) , 
2, -0.214698, 1, 0, 0.49545,-99) , 
NN(
0, 
0, 
-1, 0.94553, 1, -1, 0.468356,-99) , 
5, 0.904712, 1, 0, 0.4939,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.0173939);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474387,-99) , 
5, 0.904715, 1, 0, 0.503283,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474291,-99) , 
2, 0.215882, 1, 0, 0.501924,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524788,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49236,-99) , 
0, 0.493966, 1, 0, 0.505476,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503906,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488411,-99) , 
5, -0.836736, 1, 0, 0.491238,-99) , 
5, 0.714165, 0, 0, 0.494573,-99) , 
0, 0.497139, 0, 0, 0.49883,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.00952911);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525133,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49896,-99) , 
0, 0.48952, 1, 0, 0.499796,-99) , 
NN(
0, 
0, 
-1, 0.940969, 1, -1, 0.475842,-99) , 
5, 0.904686, 1, 0, 0.498463,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464066,-99) , 
2, -0.214379, 0, 0, 0.496674,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.00645867);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523523,-99) , 
NN(
0, 
0, 
-1, 0.999683, 0, -1, 0.498513,-99) , 
4, 0.999048, 1, 0, 0.499796,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477191,-99) , 
3, 8.62065, 1, 0, 0.499112,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.0182258);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510888,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47816,-99) , 
2, -0.215609, 0, 0, 0.508877,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449966,-99) , 
4, 0.999905, 0, 0, 0.498653,-99) , 
5, 0.142814, 0, 0, 0.504195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477681,-99) , 
1, 0.0096605, 1, 0, 0.503134,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.0247675);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.618836, 0, 1, 0.536262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49343,-99) , 
3, 1.76324, 1, 0, 0.502541,-99) , 
5, -0.705223, 0, 0, 0.510917,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49826,-99) , 
4, 0.998572, 1, 0, 0.499933,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.561408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481902,-99) , 
1, -0.0057274, 1, 0, 0.489056,-99) , 
5, 0.419483, 0, 0, 0.49543,-99) , 
5, -0.523819, 1, 0, 0.499733,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.0219691);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491289,-99) , 
5, -0.59183, 0, 0, 0.51639,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515314,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495123,-99) , 
2, 0.1217, 0, 0, 0.497272,-99) , 
1, 0.0040614, 0, 0, 0.500689,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50785,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483576,-99) , 
1, 0.000749103, 0, 0, 0.493533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465155,-99) , 
0, 0.501899, 1, 0, 0.488886,-99) , 
5, 0.714245, 1, 0, 0.497944,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.0323099);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495523,-99) , 
5, 0.265313, 1, 0, 0.522911,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507405,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482275,-99) , 
5, 0.428554, 0, 0, 0.496062,-99) , 
1, -0.00226719, 1, 0, 0.502182,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487958,-99) , 
5, -0.904773, 0, 0, 0.502339,-99) , 
NN(
0, 
0, 
-1, -0.836729, 1, -1, 0.478671,-99) , 
0, 0.499997, 0, 0, 0.487461,-99) , 
5, -0.714281, 0, 0, 0.499165,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.0127292);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00439438, 1, 1, 0.510834,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502746,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474862,-99) , 
0, 0.501219, 1, 0, 0.501187,-99) , 
0, 0.5019, 0, 0, 0.503278,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481097,-99) , 
0, 0.501266, 1, 0, 0.497359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46642,-99) , 
0, 0.494282, 0, 0, 0.491756,-99) , 
5, 0.809477, 1, 0, 0.50159,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.0134657);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514882,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484156,-99) , 
0, 0.49038, 1, 0, 0.505037,-99) , 
0, 0.491244, 0, 0, 0.513899,-99) , 
NN(
NN(
0, 
0, 
-1, -0.272022, 1, 1, 0.504365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484601,-99) , 
2, 0.215929, 1, 0, 0.503502,-99) , 
0, 0.492378, 1, 0, 0.504738,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.00911841);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.505709, 0, 1, 0.502609,-99) , 
NN(
0, 
0, 
-1, 0.499993, 0, -1, 0.473418,-99) , 
4, 0.999524, 0, 0, 0.500234,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.00801405);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518359,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49762,-99) , 
2, -0.026163, 1, 0, 0.499538,-99) , 
2, 0.218012, 0, 0, 0.500318,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47533,-99) , 
4, 0.998095, 0, 0, 0.499681,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.0162677);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237848, 1, 1, 0.514782,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506993,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496907,-99) , 
0, 0.495493, 1, 0, 0.50289,-99) , 
0, 0.497954, 0, 0, 0.504805,-99) , 
NN(
NN(
0, 
0, 
-1, 0.673426, 1, 1, 0.506185,-99) , 
NN(
0, 
0, 
-1, 0.0610267, 1, -1, 0.486859,-99) , 
5, 0.238054, 0, 0, 0.496132,-99) , 
0, 0.499043, 1, 0, 0.501149,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.0124142);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.504782,-99) , 
NN(
0, 
0, 
-1, 0.999932, 0, -1, 0.491222,-99) , 
2, 0.0726293, 1, 0, 0.502451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472995,-99) , 
4, 0.998572, 0, 0, 0.501442,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.0277642);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489913,-99) , 
4, 0.999995, 0, 0, 0.504282,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48259,-99) , 
4, 0.999905, 0, 0, 0.502538,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486548,-99) , 
3, 4.27137, 0, 0, 0.491263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458266,-99) , 
4, 0.998571, 0, 0, 0.488755,-99) , 
5, 0.428534, 1, 0, 0.4968,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.0205962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.07474, 1, 1, 0.51627,-99) , 
NN(
0, 
0, 
-1, -0.970843, 0, -1, 0.495319,-99) , 
5, -0.387771, 0, 0, 0.50455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505988,-99) , 
NN(
0, 
0, 
-1, 0.73173, 1, -1, 0.488322,-99) , 
5, 0.91832, 0, 0, 0.490438,-99) , 
5, 0.428537, 1, 0, 0.498599,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.0188552);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519189,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470766,-99) , 
4, 0.999796, 0, 0, 0.509025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49279,-99) , 
0, 0.499996, 0, 0, 0.496528,-99) , 
2, 0.0781803, 0, 0, 0.498515,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464615,-99) , 
4, 0.998572, 0, 0, 0.497366,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.0185647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501898, 0, 1, 0.516159,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50506,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48773,-99) , 
0, 0.499042, 1, 0, 0.49797,-99) , 
5, -0.0884237, 1, 0, 0.500972,-99) , 
NN(
0, 
0, 
-1, -0.659869, 1, -1, 0.490905,-99) , 
5, -0.52381, 0, 0, 0.498127,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.0187866);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.352788, 1, 1, 0.524057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511464,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494195,-99) , 
0, 0.495235, 0, 0, 0.5063,-99) , 
5, -0.510231, 0, 0, 0.510888,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487274,-99) , 
0, 0.496188, 0, 0, 0.516538,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497421,-99) , 
3, 7.19612, 0, 0, 0.499314,-99) , 
4, 0.999524, 1, 0, 0.501519,-99) , 
5, -0.142877, 1, 0, 0.50509,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.0224908);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0475122, 0, 1, 0.511723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500364,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479668,-99) , 
5, 0.333276, 1, 0, 0.493072,-99) , 
0, 0.491152, 0, 0, 0.5096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481057,-99) , 
0, 0.506094, 1, 0, 0.501018,-99) , 
NN(
0, 
0, 
-1, 0.714218, 1, -1, 0.489049,-99) , 
0, 0.503623, 0, 0, 0.493269,-99) , 
0, 0.499995, 1, 0, 0.503988,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.0144622);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.230764, 0, 1, 0.520467,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512139,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496021,-99) , 
5, 0.809457, 0, 0, 0.498532,-99) , 
3, 0.531049, 1, 0, 0.500256,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468315,-99) , 
3, 8.63778, 1, 0, 0.499263,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.0122113);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.173883, 0, 1, 0.504237,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510027,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476439,-99) , 
0, 0.496184, 1, 0, 0.489754,-99) , 
4, 0.999728, 0, 0, 0.503024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474448,-99) , 
4, 0.998572, 0, 0, 0.502032,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.0231546);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542967,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519079,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489351,-99) , 
0, 0.500947, 1, 0, 0.510777,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505821,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489373,-99) , 
0, 0.499996, 0, 0, 0.494955,-99) , 
1, -0.00283878, 1, 0, 0.498384,-99) , 
4, 0.998095, 1, 0, 0.499633,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.025124);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528566,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495558,-99) , 
4, 0.999998, 0, 0, 0.506891,-99) , 
NN(
0, 
0, 
-1, 0.0794668, 1, -1, 0.488199,-99) , 
4, 0.999955, 0, 0, 0.5028,-99) , 
NN(
0, 
0, 
-1, 0.0713191, 1, -1, 0.487032,-99) , 
4, 0.999524, 0, 0, 0.501503,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.0160252);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517913,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491914,-99) , 
2, -0.0234755, 1, 0, 0.496432,-99) , 
2, 0.13185, 0, 0, 0.497588,-99) , 
2, 0.213397, 0, 0, 0.498484,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.0147937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999955, 0, 1, 0.509011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491355,-99) , 
4, 0.999524, 0, 0, 0.507439,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495924,-99) , 
0, 0.506059, 1, 0, 0.510457,-99) , 
NN(
0, 
0, 
-1, -0.809443, 0, -1, 0.495587,-99) , 
0, 0.504893, 0, 0, 0.497673,-99) , 
0, 0.498091, 1, 0, 0.50253,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.0134952);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.556694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498634,-99) , 
5, 0.139459, 0, 0, 0.521529,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503073,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489408,-99) , 
5, -0.71428, 0, 0, 0.500254,-99) , 
3, 0.518438, 1, 0, 0.50191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473981,-99) , 
3, 8.39381, 1, 0, 0.500959,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.0147842);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529675,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49604,-99) , 
5, -0.238132, 0, 0, 0.515047,-99) , 
NN(
0, 
0, 
-1, 6.96561, 1, -1, 0.496293,-99) , 
3, 0.909265, 1, 0, 0.500104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472662,-99) , 
3, 8.39117, 1, 0, 0.499199,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.0123214);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531115,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479866,-99) , 
4, 0.999683, 0, 0, 0.501982,-99) , 
4, 0.999048, 1, 0, 0.503084,-99) , 
NN(
0, 
0, 
-1, 0.945531, 1, -1, 0.474814,-99) , 
5, 0.90471, 1, 0, 0.501448,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.0293659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509476,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467744,-99) , 
6, 0.00060646, 0, 0, 0.503718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.421852,-99) , 
1, 0.0127384, 1, 0, 0.501564,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475504,-99) , 
1, -0.0108299, 0, 0, 0.500703,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.0215605);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.546067,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498857,-99) , 
2, -0.0837549, 1, 0, 0.506496,-99) , 
2, 0.0648273, 0, 0, 0.51419,-99) , 
NN(
NN(
0, 
0, 
-1, 0.23804, 0, 1, 0.518393,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492,-99) , 
0, 0.502988, 0, 0, 0.495165,-99) , 
0, 0.491424, 1, 0, 0.497103,-99) , 
1, -0.00283878, 1, 0, 0.500747,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.0127123);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508412,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496942,-99) , 
2, 0.000676391, 1, 0, 0.501624,-99) , 
NN(
0, 
0, 
-1, 5.8186, 1, -1, 0.492569,-99) , 
2, -0.073761, 0, 0, 0.500061,-99) , 
NN(
0, 
0, 
-1, 0.498088, 1, -1, 0.481927,-99) , 
5, 0.904713, 1, 0, 0.498991,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.0135363);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523749,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503889,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491979,-99) , 
0, 0.5019, 1, 0, 0.501432,-99) , 
4, 0.999524, 1, 0, 0.502601,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463321,-99) , 
4, 0.998571, 0, 0, 0.501294,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.014449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.13988, 0, 1, 0.504533,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51589,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483442,-99) , 
5, 0.809267, 0, 0, 0.493045,-99) , 
4, 0.999932, 0, 0, 0.502622,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.484682,-99) , 
4, 0.999524, 0, 0, 0.501149,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.0205517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.552163,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486167,-99) , 
3, 2.21469, 1, 0, 0.51927,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48178,-99) , 
5, 0.904659, 1, 0, 0.50193,-99) , 
2, 0.0642632, 0, 0, 0.504722,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48587,-99) , 
0, 0.493967, 0, 0, 0.497082,-99) , 
NN(
0, 
0, 
-1, -0.0729667, 0, -1, 0.480707,-99) , 
0, 0.497141, 1, 0, 0.487176,-99) , 
3, 4.11024, 1, 0, 0.500767,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.0237624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501263, 0, 1, 0.508318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501609,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47207,-99) , 
0, 0.496593, 1, 0, 0.493402,-99) , 
0, 0.498089, 0, 0, 0.500844,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.551734,-99) , 
NN(
0, 
0, 
-1, -0.455783, 1, -1, 0.486483,-99) , 
1, -0.0104141, 1, 0, 0.490043,-99) , 
5, 0.14283, 0, 0, 0.495803,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.0173781);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.41179, 0, 1, 0.50589,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491782,-99) , 
0, 0.493015, 1, 0, 0.494943,-99) , 
5, 0.142817, 1, 0, 0.499885,-99) , 
NN(
0, 
0, 
-1, 3.90756, 0, -1, 0.482868,-99) , 
0, 0.503805, 1, 0, 0.497993,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.0156896);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517938,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496975,-99) , 
0, 0.505437, 0, 0, 0.498266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47133,-99) , 
1, 0.00298955, 0, 0, 0.48049,-99) , 
0, 0.492377, 0, 0, 0.496134,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.449229,-99) , 
3, 8.63428, 1, 0, 0.494698,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.0143583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497444,-99) , 
0, 0.489792, 0, 0, 0.514528,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538819,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495048,-99) , 
5, -0.523815, 1, 0, 0.510616,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501749,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486799,-99) , 
0, 0.500161, 1, 0, 0.497315,-99) , 
0, 0.50453, 0, 0, 0.498567,-99) , 
0, 0.491425, 1, 0, 0.499938,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.00985951);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497835,-99) , 
0, 0.505709, 0, 0, 0.498762,-99) , 
4, 0.999048, 1, 0, 0.499941,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464768,-99) , 
3, 8.33212, 1, 0, 0.49874,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.0118634);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.508883,-99) , 
NN(
0, 
0, 
-1, 0.451212, 1, -1, 0.498165,-99) , 
5, 0.523775, 0, 0, 0.502177,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.451564,-99) , 
1, -0.0108299, 0, 0, 0.500497,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.0207805);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.54819, 1, 1, 0.531745,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481774,-99) , 
5, 0.428429, 0, 0, 0.501525,-99) , 
3, 4.38545, 1, 0, 0.521639,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508916,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489422,-99) , 
5, 0.809461, 1, 0, 0.506591,-99) , 
NN(
0, 
0, 
-1, 4.11024, 1, -1, 0.494403,-99) , 
0, 0.499995, 0, 0, 0.498452,-99) , 
2, 0.0717946, 0, 0, 0.502568,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.0200644);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496582,-99) , 
2, 0.0703755, 1, 0, 0.513297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48746,-99) , 
0, 0.501901, 0, 0, 0.495492,-99) , 
3, 1.2329, 0, 0, 0.507096,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502092,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486147,-99) , 
5, 0.819422, 1, 0, 0.498171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464502,-99) , 
5, 0.052179, 0, 0, 0.496447,-99) , 
5, -0.0476278, 1, 0, 0.500838,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.0116189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0837838, 1, 1, 0.506279,-99) , 
NN(
0, 
0, 
-1, 0.496186, 0, -1, 0.496172,-99) , 
3, 2.0862, 1, 0, 0.501386,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474584,-99) , 
3, 8.35174, 1, 0, 0.500441,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.0180219);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.00644956, 0, 1, 0.509079,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486313,-99) , 
0, 0.496186, 0, 0, 0.498041,-99) , 
NN(
0, 
0, 
-1, 0.451216, 1, -1, 0.484017,-99) , 
5, 0.523777, 0, 0, 0.495103,-99) , 
5, 0.333302, 1, 0, 0.502569,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.0237536);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.931954, 0, 1, 0.522935,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48318,-99) , 
0, 0.499997, 1, 0, 0.49644,-99) , 
3, 2.10185, 0, 0, 0.508803,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506571,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482532,-99) , 
2, 0.0737989, 1, 0, 0.502407,-99) , 
NN(
0, 
0, 
-1, -0.481043, 1, -1, 0.483639,-99) , 
5, 0.102026, 0, 0, 0.496461,-99) , 
5, -0.714279, 1, 0, 0.498945,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.0198073);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.306056, 1, 1, 0.52353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486355,-99) , 
5, 0.714235, 1, 0, 0.51455,-99) , 
NN(
0, 
0, 
-1, 0.492376, 0, -1, 0.492454,-99) , 
2, 0.0733765, 0, 0, 0.496283,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.0141497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504851,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486383,-99) , 
5, -0.954637, 1, 0, 0.49446,-99) , 
5, -0.809516, 0, 0, 0.503292,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500829,-99) , 
NN(
0, 
0, 
-1, 0.490336, 1, -1, 0.476839,-99) , 
5, -0.333348, 1, 0, 0.486813,-99) , 
0, 0.492377, 0, 0, 0.501298,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.0227836);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509198,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465991,-99) , 
4, 0.999968, 0, 0, 0.50535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471937,-99) , 
4, 0.999905, 0, 0, 0.503296,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515453,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493856,-99) , 
0, 0.492377, 1, 0, 0.495955,-99) , 
NN(
0, 
0, 
-1, 2.83981, 0, -1, 0.477428,-99) , 
5, 0.428535, 0, 0, 0.491852,-99) , 
5, 0.142829, 1, 0, 0.497165,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.0213895);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.93646, 0, 1, 0.512958,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480259,-99) , 
4, 0.998571, 0, 0, 0.507316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506634,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485629,-99) , 
0, 0.504756, 1, 0, 0.500482,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489543,-99) , 
0, 0.48952, 1, 0, 0.490593,-99) , 
0, 0.500947, 0, 0, 0.493335,-99) , 
5, 0.809478, 0, 0, 0.49539,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.0209217);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545977,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490153,-99) , 
4, 0.999977, 0, 0, 0.515736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49115,-99) , 
4, 0.999524, 0, 0, 0.511264,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523877,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494174,-99) , 
5, 0.904712, 0, 0, 0.495833,-99) , 
2, 0.302595, 0, 0, 0.497062,-99) , 
2, -0.0715266, 1, 0, 0.499568,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.0237261);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490563,-99) , 
4, 0.999996, 1, 0, 0.502574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500213,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4735,-99) , 
4, 0.999786, 1, 0, 0.487367,-99) , 
4, 0.999909, 0, 0, 0.500136,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475495,-99) , 
4, 0.999048, 0, 0, 0.498919,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.0167816);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530851,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51236,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49728,-99) , 
2, 0.0120122, 0, 0, 0.503258,-99) , 
NN(
0, 
0, 
-1, 0.52378, 1, -1, 0.488209,-99) , 
2, -0.11237, 0, 0, 0.501355,-99) , 
2, 0.214165, 0, 0, 0.502833,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.0091581);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498228,-99) , 
4, 0.99966, 1, 0, 0.499634,-99) , 
2, -0.190322, 1, 0, 0.500645,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472558,-99) , 
4, 0.998572, 0, 0, 0.499715,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.0185366);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.30435, 0, 1, 0.503875,-99) , 
NN(
0, 
0, 
-1, 0.877523, 1, -1, 0.4898,-99) , 
5, 0.714242, 1, 0, 0.50065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477522,-99) , 
5, 0.591803, 1, 0, 0.49294,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514206,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.443919,-99) , 
3, 2.55021, 1, 0, 0.474791,-99) , 
5, 0.0475998, 0, 0, 0.484912,-99) , 
2, -0.0715338, 0, 0, 0.49783,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.0256304);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.4941, 0, 1, 0.516285,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539428,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497886,-99) , 
1, 0.00328473, 0, 0, 0.504583,-99) , 
0, 0.499995, 1, 0, 0.512445,-99) , 
NN(
NN(
0, 
0, 
-1, 2.22383, 1, 1, 0.517305,-99) , 
NN(
0, 
0, 
-1, 0.0642632, 1, -1, 0.490968,-99) , 
0, 0.501901, 0, 0, 0.497328,-99) , 
5, -0.428584, 0, 0, 0.507777,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.0111188);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.2744, 1, 1, 0.504498,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.44332,-99) , 
4, 0.999932, 0, 0, 0.495948,-99) , 
5, 0.0476004, 0, 0, 0.500592,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464433,-99) , 
4, 0.998571, 0, 0, 0.499382,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.010194);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515199,-99) , 
NN(
0, 
0, 
-1, 0.127149, 1, -1, 0.497195,-99) , 
2, 0.208522, 0, 0, 0.498034,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50863,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478176,-99) , 
5, -0.523846, 0, 0, 0.492132,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458117,-99) , 
5, 0.428504, 1, 0, 0.481535,-99) , 
0, 0.491425, 0, 0, 0.496657,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.0233942);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.922845, 0, 1, 0.510032,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508764,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480768,-99) , 
0, 0.494554, 1, 0, 0.498512,-99) , 
0, 0.496187, 0, 0, 0.506212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516551,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506944,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482479,-99) , 
3, 2.60115, 0, 0, 0.491477,-99) , 
0, 0.502853, 0, 0, 0.496216,-99) , 
5, -0.619052, 0, 0, 0.503752,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.0188974);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51558,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498478,-99) , 
1, -0.000943163, 0, 0, 0.508991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503747,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490588,-99) , 
0, 0.50295, 0, 0, 0.495708,-99) , 
0, 0.499452, 1, 0, 0.50354,-99) , 
NN(
0, 
0, 
-1, -0.142853, 0, -1, 0.482383,-99) , 
0, 0.490474, 0, 0, 0.502327,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.0150801);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.49714, 1, 1, 0.541167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525341,-99) , 
NN(
0, 
0, 
-1, 6.78165, 1, -1, 0.49514,-99) , 
3, 8.3483, 0, 0, 0.496185,-99) , 
4, 0.999048, 1, 0, 0.498675,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.0144315);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499478,-99) , 
3, 2.22733, 1, 0, 0.505348,-99) , 
NN(
0, 
0, 
-1, 0.269846, 0, -1, 0.488034,-99) , 
3, 6.43062, 1, 0, 0.504045,-99) , 
NN(
0, 
0, 
-1, 0.945531, 1, -1, 0.477591,-99) , 
5, 0.904714, 1, 0, 0.50248,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.019577);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 2.1918, 0, 1, 0.508584,-99) , 
NN(
0, 
0, 
-1, 0.49333, 0, -1, 0.494069,-99) , 
3, 2.5393, 1, 0, 0.504588,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486971,-99) , 
5, -0.551011, 0, 0, 0.500323,-99) , 
NN(
0, 
0, 
-1, 0.499045, 0, -1, 0.480713,-99) , 
5, 0.047583, 1, 0, 0.487994,-99) , 
3, 4.36372, 1, 0, 0.50134,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.0179794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.502716, 1, 1, 0.509543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491796,-99) , 
5, -0.904762, 0, 0, 0.507866,-99) , 
NN(
NN(
0, 
0, 
-1, 0.809427, 0, 1, 0.505843,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500471,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478973,-99) , 
5, 0.237985, 1, 0, 0.488506,-99) , 
0, 0.495778, 1, 0, 0.497733,-99) , 
0, 0.499043, 0, 0, 0.501962,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.0190502);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47149,-99) , 
0, 0.491243, 0, 0, 0.502912,-99) , 
NN(
0, 
0, 
-1, 0.156423, 1, -1, 0.492929,-99) , 
5, 0.428537, 0, 0, 0.497216,-99) , 
NN(
0, 
0, 
-1, 0.505573, 0, -1, 0.476855,-99) , 
0, 0.502852, 1, 0, 0.494005,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.017235);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505235,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472179,-99) , 
4, 0.999714, 0, 0, 0.503803,-99) , 
NN(
0, 
0, 
-1, 0.927368, 1, -1, 0.492011,-99) , 
5, 0.618987, 1, 0, 0.500122,-99) , 
NN(
0, 
0, 
-1, 0.505573, 0, -1, 0.469621,-99) , 
0, 0.504757, 1, 0, 0.497733,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.0186239);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499098,-99) , 
3, 2.38671, 1, 0, 0.518248,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510225,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495299,-99) , 
3, 2.60926, 0, 0, 0.500456,-99) , 
2, 0.0578709, 0, 0, 0.504284,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493513,-99) , 
0, 0.492377, 1, 0, 0.495116,-99) , 
NN(
0, 
0, 
-1, 0.497133, 0, -1, 0.48011,-99) , 
5, 0.872969, 1, 0, 0.492312,-99) , 
5, 0.333298, 1, 0, 0.498716,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.0182797);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.207952, 1, 1, 0.506531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502762,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475539,-99) , 
3, 2.26488, 1, 0, 0.491005,-99) , 
5, -0.927437, 0, 0, 0.504793,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53261,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494248,-99) , 
2, -0.0710035, 0, 0, 0.517809,-99) , 
NN(
0, 
0, 
-1, 0.999773, 0, -1, 0.489717,-99) , 
4, 0.999524, 1, 0, 0.494986,-99) , 
5, 0.523772, 1, 0, 0.501175,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.0177556);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521016,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491297,-99) , 
4, 0.999909, 0, 0, 0.510723,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513045,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494469,-99) , 
4, 0.999819, 1, 0, 0.496273,-99) , 
2, 0.075596, 0, 0, 0.498609,-99) , 
4, 0.998095, 1, 0, 0.499783,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.0187332);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.513832,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485721,-99) , 
0, 0.493329, 0, 0, 0.510121,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50694,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49468,-99) , 
5, -0.383242, 1, 0, 0.50051,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460923,-99) , 
3, 7.46088, 1, 0, 0.498962,-99) , 
5, 0.61901, 0, 0, 0.502364,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.0122601);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.238069, 1, 1, 0.504657,-99) , 
NN(
0, 
0, 
-1, -0.587346, 1, -1, 0.494693,-99) , 
5, -0.333351, 0, 0, 0.501382,-99) , 
NN(
0, 
0, 
-1, 0.00130034, 0, -1, 0.480496,-99) , 
0, 0.491425, 0, 0, 0.499585,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.0106038);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554426,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502335,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477747,-99) , 
3, 6.9977, 1, 0, 0.501545,-99) , 
4, 0.998095, 1, 0, 0.502957,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464982,-99) , 
3, 8.62065, 1, 0, 0.501778,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.00947794);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.21353, 0, 1, 0.501912,-99) , 
NN(
0, 
0, 
-1, 0.50637, 1, -1, 0.485279,-99) , 
0, 0.505437, 1, 0, 0.500875,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517533,-99) , 
NN(
0, 
0, 
-1, -0.00209264, 0, -1, 0.479691,-99) , 
5, -0.619031, 1, 0, 0.491248,-99) , 
0, 0.492378, 0, 0, 0.499709,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.00505385);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518974,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528838,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499649,-99) , 
2, 0.277828, 0, 0, 0.500488,-99) , 
2, -0.210127, 1, 0, 0.501395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484282,-99) , 
3, 8.21353, 1, 0, 0.50079,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.0174724);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51727,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498527,-99) , 
2, 0.0289295, 0, 0, 0.504137,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508077,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489341,-99) , 
0, 0.491698, 1, 0, 0.493361,-99) , 
0, 0.497139, 0, 0, 0.499647,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473623,-99) , 
2, -0.215722, 0, 0, 0.498373,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.0183967);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54178,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497549,-99) , 
3, 1.20534, 0, 0, 0.50816,-99) , 
5, -0.183718, 0, 0, 0.510817,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532872,-99) , 
NN(
0, 
0, 
-1, 0.500676, 1, -1, 0.495003,-99) , 
0, 0.491427, 1, 0, 0.497753,-99) , 
5, -0.0476444, 1, 0, 0.503099,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.0195374);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515842,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499014,-99) , 
1, -0.0026657, 1, 0, 0.502839,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485656,-99) , 
5, 0.428492, 0, 0, 0.494135,-99) , 
2, 0.077662, 1, 0, 0.501035,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45677,-99) , 
4, 0.999954, 0, 0, 0.492761,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464677,-99) , 
4, 0.999524, 0, 0, 0.487826,-99) , 
2, -0.071946, 0, 0, 0.498694,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.0124229);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.199043, 0, 1, 0.505041,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510985,-99) , 
NN(
0, 
0, 
-1, 0.238082, 0, -1, 0.489434,-99) , 
0, 0.503805, 0, 0, 0.492353,-99) , 
3, 4.2422, 1, 0, 0.50238,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.0179626);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52687,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507752,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485208,-99) , 
4, 0.999728, 0, 0, 0.506101,-99) , 
4, 0.998572, 1, 0, 0.506708,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487782,-99) , 
2, -0.218123, 0, 0, 0.505768,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.0198484);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536016,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51153,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486134,-99) , 
3, 8.18078, 1, 0, 0.506773,-99) , 
1, -0.0040017, 1, 0, 0.510662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530004,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498573,-99) , 
3, 0.434948, 1, 0, 0.504618,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.490618,-99) , 
3, 1.09135, 1, 0, 0.495224,-99) , 
3, 4.2422, 0, 0, 0.498386,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.0150517);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504154,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494471,-99) , 
0, 0.502536, 1, 0, 0.502259,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479079,-99) , 
3, 7.85372, 1, 0, 0.50132,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511843,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478718,-99) , 
5, -0.428548, 1, 0, 0.491374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452307,-99) , 
2, 0.0611829, 1, 0, 0.481168,-99) , 
0, 0.492379, 0, 0, 0.498919,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.0128029);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491465, 1, 1, 0.504007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486026,-99) , 
0, 0.490064, 0, 0, 0.503053,-99) , 
NN(
0, 
0, 
-1, 3.59775, 0, -1, 0.47112,-99) , 
0, 0.504757, 1, 0, 0.500606,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.0206817);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528668,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498249,-99) , 
0, 0.500949, 0, 0, 0.506259,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518514,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491624,-99) , 
4, 0.998571, 1, 0, 0.493928,-99) , 
5, 0.469353, 1, 0, 0.498557,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477179,-99) , 
5, -0.891143, 0, 0, 0.496812,-99) , 
NN(
0, 
0, 
-1, -0.564635, 1, -1, 0.483904,-99) , 
3, 1.70371, 0, 0, 0.490831,-99) , 
5, -0.23811, 0, 0, 0.495766,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.0109997);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489247, 0, 1, 0.518929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48864,-99) , 
3, 4.58341, 1, 0, 0.500034,-99) , 
0, 0.490472, 1, 0, 0.501109,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457864,-99) , 
3, 8.63683, 1, 0, 0.49981,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.0196592);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533394,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496953,-99) , 
6, 0.00545881, 0, 0, 0.502583,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436996,-99) , 
1, 0.012739, 1, 0, 0.500869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47121,-99) , 
1, -0.0108299, 0, 0, 0.499888,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.016448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.494173, 1, 1, 0.504071,-99) , 
NN(
0, 
0, 
-1, 0.503191, 0, -1, 0.489572,-99) , 
0, 0.501809, 1, 0, 0.500484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471953,-99) , 
0, 0.490789, 1, 0, 0.49164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453341,-99) , 
5, -0.618985, 0, 0, 0.479447,-99) , 
0, 0.492377, 0, 0, 0.497954,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.0167821);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52575,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530251,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496192,-99) , 
0, 0.495233, 1, 0, 0.505164,-99) , 
5, 0.768666, 1, 0, 0.509276,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531513,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499645,-99) , 
4, 0.99987, 1, 0, 0.503492,-99) , 
NN(
0, 
0, 
-1, 3.85656, 0, -1, 0.489068,-99) , 
3, 2.69323, 1, 0, 0.497924,-99) , 
5, 0.714243, 0, 0, 0.500582,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.0268224);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.524017, 1, 1, 0.526727,-99) , 
NN(
NN(
0, 
0, 
-1, 0.564603, 1, 1, 0.509265,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4837,-99) , 
5, -0.941035, 1, 0, 0.48719,-99) , 
5, 0.238068, 0, 0, 0.498644,-99) , 
1, -0.00733313, 1, 0, 0.500325,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.0235597);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.506464,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479237,-99) , 
5, 0.451236, 1, 0, 0.492352,-99) , 
2, 0.0713191, 1, 0, 0.503963,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.560323,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508765,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486722,-99) , 
5, -0.909298, 1, 0, 0.49131,-99) , 
1, 0.0096605, 0, 0, 0.496118,-99) , 
5, -0.0476408, 0, 0, 0.500718,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.0142497);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.891133, 1, 1, 0.529483,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507278,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490991,-99) , 
5, 0.206327, 1, 0, 0.500689,-99) , 
5, 0.809479, 0, 0, 0.505173,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517875,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497409,-99) , 
0, 0.505437, 0, 0, 0.499028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468511,-99) , 
4, 0.999048, 0, 0, 0.497726,-99) , 
0, 0.496186, 1, 0, 0.500241,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.015588);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.102128, 0, 1, 0.508911,-99) , 
NN(
0, 
0, 
-1, 0.229023, 0, -1, 0.496941,-99) , 
5, 0.0475958, 1, 0, 0.501965,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515244,-99) , 
NN(
0, 
0, 
-1, -0.00794133, 0, -1, 0.486373,-99) , 
2, -0.0822644, 1, 0, 0.491653,-99) , 
0, 0.495234, 0, 0, 0.499171,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.0206164);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0717946, 1, 1, 0.521465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516089,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474734,-99) , 
0, 0.498637, 0, 0, 0.507669,-99) , 
0, 0.497141, 1, 0, 0.513019,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504443,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488507,-99) , 
3, 0.709175, 0, 0, 0.501654,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508545,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468002,-99) , 
3, 1.1242, 1, 0, 0.480761,-99) , 
0, 0.492377, 0, 0, 0.499173,-99) , 
3, 4.23371, 0, 0, 0.502066,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.0152656);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.498091, 1, 1, 0.512897,-99) , 
NN(
0, 
0, 
-1, -0.913821, 0, -1, 0.49705,-99) , 
5, 0.80948, 0, 0, 0.499394,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521954,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483885,-99) , 
2, 0.206489, 0, 0, 0.493337,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452908,-99) , 
4, 0.999524, 0, 0, 0.486491,-99) , 
2, 0.0717946, 1, 0, 0.49711,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.0187357);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 1, 1, 0.535914,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0478192, 0, 1, 0.524171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492485,-99) , 
5, 0.523753, 1, 0, 0.501005,-99) , 
0, 0.504757, 0, 0, 0.502749,-99) , 
2, -0.214379, 1, 0, 0.504483,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.0231923);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.071423, 1, 1, 0.508277,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469462,-99) , 
5, 0.943789, 1, 0, 0.4846,-99) , 
5, 0.909226, 1, 0, 0.505972,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513219,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487304,-99) , 
0, 0.504757, 0, 0, 0.489792,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454763,-99) , 
3, 5.85681, 1, 0, 0.487546,-99) , 
5, 0.0475824, 0, 0, 0.497764,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.0140729);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506969,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497848,-99) , 
5, 0.142747, 0, 0, 0.502519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471019,-99) , 
0, 0.503986, 0, 0, 0.490841,-99) , 
0, 0.502852, 1, 0, 0.50071,-99) , 
NN(
0, 
0, 
-1, 0.497139, 0, -1, 0.474673,-99) , 
4, 0.999524, 0, 0, 0.4986,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.0158733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.351536, 0, 1, 0.516291,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534466,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494117,-99) , 
5, 0.863802, 0, 0, 0.500552,-99) , 
5, 0.0475352, 1, 0, 0.507786,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498234,-99) , 
1, 0.0087983, 0, 0, 0.499737,-99) , 
NN(
0, 
0, 
-1, 0.909251, 0, -1, 0.482994,-99) , 
5, 0.809477, 1, 0, 0.49713,-99) , 
0, 0.499996, 0, 0, 0.500764,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.022844);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488761,-99) , 
3, 5.42414, 1, 0, 0.509282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517279,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476255,-99) , 
5, -0.351605, 0, 0, 0.490089,-99) , 
2, 0.0681994, 1, 0, 0.505674,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525507,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49608,-99) , 
4, 0.99981, 1, 0, 0.499887,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505152,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486147,-99) , 
2, 0.0708574, 0, 0, 0.48961,-99) , 
5, 0.673408, 1, 0, 0.494454,-99) , 
5, 0.238051, 1, 0, 0.50005,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.00730459);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516258,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526907,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499333,-99) , 
3, 8.37762, 0, 0, 0.500146,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505233,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470118,-99) , 
2, 0.0290432, 0, 0, 0.483891,-99) , 
0, 0.491425, 0, 0, 0.498828,-99) , 
2, -0.213802, 1, 0, 0.499733,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.0150049);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510351,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499985,-99) , 
5, 0.274316, 1, 0, 0.505005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459956,-99) , 
5, -0.968257, 0, 0, 0.493415,-99) , 
5, -0.904763, 0, 0, 0.50389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47671,-99) , 
4, 0.999048, 0, 0, 0.502554,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.0199718);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00348686, 0, 1, 0.511548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507322,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496308,-99) , 
3, 2.65659, 1, 0, 0.503186,-99) , 
5, -0.224512, 0, 0, 0.50796,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487984,-99) , 
0, 0.499358, 1, 0, 0.500026,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472847,-99) , 
0, 0.495233, 0, 0, 0.493392,-99) , 
5, 0.809477, 1, 0, 0.505835,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.0192297);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497138, 1, 1, 0.526144,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50424,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465049,-99) , 
5, 0.922853, 1, 0, 0.502563,-99) , 
4, 0.999048, 1, 0, 0.504214,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513301,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488184,-99) , 
5, -0.876488, 0, 0, 0.497909,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508981,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.452263,-99) , 
0, 0.497142, 1, 0, 0.47647,-99) , 
5, -0.764188, 1, 0, 0.491967,-99) , 
5, -0.619046, 0, 0, 0.501192,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.0107214);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498097, 1, 1, 0.522958,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.534379,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498047,-99) , 
3, 5.51207, 0, 0, 0.499531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466066,-99) , 
5, 0.360528, 0, 0, 0.487107,-99) , 
3, 6.41349, 1, 0, 0.498577,-99) , 
5, 0.904681, 0, 0, 0.500062,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.0157143);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526786,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488205,-99) , 
5, -0.714367, 0, 0, 0.516343,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480485,-99) , 
0, 0.489792, 0, 0, 0.502262,-99) , 
0, 0.502852, 0, 0, 0.504446,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474801,-99) , 
4, 0.999048, 0, 0, 0.503014,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.0199217);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0476094, 1, 1, 0.517455,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523357,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497291,-99) , 
5, 0.904705, 0, 0, 0.498756,-99) , 
0, 0.497819, 1, 0, 0.502514,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518826,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486891,-99) , 
5, -0.891147, 0, 0, 0.50555,-99) , 
NN(
0, 
0, 
-1, 0.49537, 1, -1, 0.483604,-99) , 
5, -0.619045, 1, 0, 0.489281,-99) , 
0, 0.496186, 0, 0, 0.497983,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.018609);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.519589,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495565,-99) , 
0, 0.499995, 1, 0, 0.503489,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521791,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481389,-99) , 
2, -0.152164, 1, 0, 0.489501,-99) , 
2, -0.0511023, 0, 0, 0.500948,-99) , 
2, -0.214372, 1, 0, 0.501906,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.023716);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.80427, 1, 1, 0.520811,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46679,-99) , 
0, 0.497139, 0, 0, 0.498847,-99) , 
3, 4.038, 1, 0, 0.51232,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490286,-99) , 
2, -0.00283772, 1, 0, 0.500043,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458446,-99) , 
1, -0.0104141, 0, 0, 0.498635,-99) , 
2, 0.0719532, 0, 0, 0.50109,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.0225318);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.501159, 0, 1, 0.512465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511837,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483929,-99) , 
5, -0.773226, 1, 0, 0.495248,-99) , 
3, 2.93157, 1, 0, 0.506681,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50658,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487229,-99) , 
2, -0.0729667, 0, 0, 0.502992,-99) , 
NN(
0, 
0, 
-1, 0.900179, 1, -1, 0.488511,-99) , 
0, 0.499042, 0, 0, 0.494386,-99) , 
5, -0.0476417, 1, 0, 0.499485,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.0208399);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515326,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492257,-99) , 
0, 0.496188, 0, 0, 0.507243,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493547,-99) , 
4, 0.999524, 1, 0, 0.496174,-99) , 
5, 0.183651, 1, 0, 0.499975,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507585,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485729,-99) , 
3, 2.75517, 0, 0, 0.493372,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462451,-99) , 
5, -0.972787, 0, 0, 0.489044,-99) , 
5, -0.714289, 0, 0, 0.497704,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.0254674);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.795878, 1, 1, 0.512765,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505597,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476809,-99) , 
5, -0.183712, 1, 0, 0.499863,-99) , 
5, 0.142834, 0, 0, 0.506684,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511374,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500253,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471512,-99) , 
2, 0.0927675, 1, 0, 0.477374,-99) , 
2, 0.277139, 0, 0, 0.483482,-99) , 
2, 0.0733685, 1, 0, 0.502615,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.0189909);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511975,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497652,-99) , 
3, 1.30952, 1, 0, 0.502062,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469627,-99) , 
3, 8.39725, 1, 0, 0.500336,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514719,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490094,-99) , 
5, -0.595806, 0, 0, 0.493549,-99) , 
NN(
0, 
0, 
-1, 0.497141, 0, -1, 0.474856,-99) , 
5, -0.469404, 1, 0, 0.489128,-99) , 
5, -0.142876, 0, 0, 0.49601,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.0126077);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.173883, 0, 1, 0.50397,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460725,-99) , 
2, 0.0541827, 1, 0, 0.491223,-99) , 
4, 0.999796, 0, 0, 0.50266,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474188,-99) , 
4, 0.998572, 0, 0, 0.501672,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.0141902);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.183313, 1, 1, 0.502904,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478345,-99) , 
4, 0.999048, 0, 0, 0.501654,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485572,-99) , 
5, 0.523752, 0, 0, 0.490273,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.457409,-99) , 
4, 0.999524, 0, 0, 0.487776,-99) , 
0, 0.499995, 1, 0, 0.496873,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.0164911);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528724,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500008,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487026,-99) , 
3, 2.0515, 0, 0, 0.49338,-99) , 
3, 8.22708, 0, 0, 0.494617,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474986,-99) , 
4, 0.999048, 0, 0, 0.493678,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.0251231);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51277,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488028,-99) , 
4, 0.999932, 0, 0, 0.508853,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481207,-99) , 
4, 0.999524, 0, 0, 0.506741,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50924,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493855,-99) , 
0, 0.494883, 0, 0, 0.49902,-99) , 
NN(
0, 
0, 
-1, 0.428522, 0, -1, 0.474006,-99) , 
0, 0.496594, 1, 0, 0.492613,-99) , 
0, 0.498091, 0, 0, 0.499688,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.012416);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497431,-99) , 
3, 0.434299, 1, 0, 0.498746,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456555,-99) , 
5, 0.542211, 0, 0, 0.478023,-99) , 
3, 6.6834, 1, 0, 0.497361,-99) , 
NN(
0, 
0, 
-1, 0.940993, 1, -1, 0.474052,-99) , 
5, 0.904712, 1, 0, 0.496026,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.0208553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.703564, 1, 1, 0.510301,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503451,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483204,-99) , 
3, 4.10991, 1, 0, 0.499477,-99) , 
5, 0.0475984, 1, 0, 0.50419,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469483,-99) , 
5, -0.142623, 0, 0, 0.49845,-99) , 
NN(
0, 
0, 
-1, 0.495237, 0, -1, 0.476719,-99) , 
2, 0.133853, 0, 0, 0.488138,-99) , 
2, 0.0660573, 1, 0, 0.501153,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.017171);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525191,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495298,-99) , 
5, -0.238079, 0, 0, 0.510669,-99) , 
NN(
0, 
0, 
-1, 0.0722833, 1, -1, 0.491809,-99) , 
0, 0.490474, 1, 0, 0.492863,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.00802056);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537212,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517161,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499557,-99) , 
3, 0.51057, 1, 0, 0.500843,-99) , 
3, 8.22972, 0, 0, 0.502097,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474218,-99) , 
4, 0.999048, 0, 0, 0.500734,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.0150641);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513649,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49864,-99) , 
5, 0.541912, 0, 0, 0.502991,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492945,-99) , 
0, 0.492331, 1, 0, 0.495476,-99) , 
0, 0.499995, 0, 0, 0.498072,-99) , 
NN(
0, 
0, 
-1, 0.498093, 1, -1, 0.472256,-99) , 
5, 0.904714, 1, 0, 0.49662,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.0151285);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000643858, 1, 1, 0.50598,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511536,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491121,-99) , 
3, 3.97698, 0, 0, 0.494806,-99) , 
5, -0.727895, 0, 0, 0.503625,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.461176,-99) , 
0, 0.497141, 1, 0, 0.480019,-99) , 
5, 0.904713, 1, 0, 0.502276,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.0174906);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.750537, 1, 1, 0.507326,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508477,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491456,-99) , 
5, -0.637202, 1, 0, 0.497902,-99) , 
5, 0.523773, 0, 0, 0.501299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478813,-99) , 
2, -0.214372, 0, 0, 0.500173,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.00644002);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523034,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499628,-99) , 
5, 0.238097, 1, 0, 0.51389,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473868,-99) , 
4, 0.999683, 0, 0, 0.498693,-99) , 
4, 0.999048, 1, 0, 0.499608,-99) , 
0, 0.504757, 0, 0, 0.500656,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.00934301);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531632,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524958,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500028,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489742,-99) , 
5, -0.52381, 0, 0, 0.497126,-99) , 
0, 0.505709, 0, 0, 0.498398,-99) , 
4, 0.998095, 1, 0, 0.499296,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.0144064);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531787,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49888,-99) , 
2, -0.0847804, 1, 0, 0.501842,-99) , 
5, -0.102088, 0, 0, 0.504523,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524569,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497262,-99) , 
5, 0.449326, 1, 0, 0.500735,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470115,-99) , 
5, 0.164224, 1, 0, 0.482492,-99) , 
5, 0.319719, 0, 0, 0.49768,-99) , 
5, 0.0475934, 1, 0, 0.500672,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.0144617);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514629,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495781,-99) , 
5, -0.931971, 0, 0, 0.510075,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517195,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497267,-99) , 
2, 0.112621, 0, 0, 0.499905,-99) , 
5, -0.523818, 1, 0, 0.502799,-99) , 
NN(
0, 
0, 
-1, 0.498092, 0, -1, 0.484283,-99) , 
2, -0.213583, 0, 0, 0.50185,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.0162194);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517621,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495277,-99) , 
0, 0.497048, 1, 0, 0.505732,-99) , 
NN(
0, 
0, 
-1, 0.494145, 0, -1, 0.495318,-99) , 
3, 4.25646, 0, 0, 0.497396,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51057,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485374,-99) , 
0, 0.505573, 0, 0, 0.493211,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459539,-99) , 
5, -0.714214, 0, 0, 0.484661,-99) , 
0, 0.502852, 1, 0, 0.495431,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.00776264);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519772,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508046,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499861,-99) , 
5, -0.619054, 1, 0, 0.501797,-99) , 
0, 0.50394, 0, 0, 0.502413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510871,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475594,-99) , 
5, 0.143148, 0, 0, 0.489995,-99) , 
0, 0.504757, 1, 0, 0.501448,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.0184876);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50864,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492149,-99) , 
2, 0.0737989, 1, 0, 0.50574,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491477,-99) , 
5, -0.904767, 1, 0, 0.496817,-99) , 
5, -0.333365, 0, 0, 0.502803,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477746,-99) , 
1, -0.0104141, 0, 0, 0.501916,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.0207894);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507572,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489752,-99) , 
5, -0.71429, 0, 0, 0.503856,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527426,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492183,-99) , 
5, -0.90476, 1, 0, 0.495467,-99) , 
2, 0.00378944, 0, 0, 0.500081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507685,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476116,-99) , 
5, 0.773218, 1, 0, 0.496754,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504023,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467041,-99) , 
3, 3.57245, 0, 0, 0.479612,-99) , 
5, 0.0476168, 0, 0, 0.489033,-99) , 
2, -0.0710108, 0, 0, 0.498119,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.0181435);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.333337, 0, 1, 0.528936,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5076,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490612,-99) , 
2, -0.139557, 0, 0, 0.498468,-99) , 
0, 0.498091, 0, 0, 0.513817,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495349,-99) , 
3, 3.20004, 0, 0, 0.499411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478815,-99) , 
5, 0.904705, 1, 0, 0.498257,-99) , 
2, -0.0715266, 1, 0, 0.501033,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.0151315);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500086, 0, 1, 0.507226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502164,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475974,-99) , 
0, 0.502444, 0, 0, 0.498174,-99) , 
0, 0.5019, 1, 0, 0.504835,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500624,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47709,-99) , 
2, 0.0722913, 1, 0, 0.494893,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465678,-99) , 
0, 0.493646, 1, 0, 0.490216,-99) , 
0, 0.494281, 0, 0, 0.501778,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.00960223);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522883,-99) , 
NN(
0, 
0, 
-1, 0.999728, 0, -1, 0.496819,-99) , 
5, 0.904715, 0, 0, 0.498104,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47665,-99) , 
4, 0.998571, 0, 0, 0.497381,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.0126551);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.837121, 1, 1, 0.527495,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516408,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482477,-99) , 
5, 0.921345, 0, 0, 0.50248,-99) , 
5, 0.882042, 1, 0, 0.514043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518172,-99) , 
NN(
0, 
0, 
-1, 0.492922, 0, -1, 0.497275,-99) , 
0, 0.490473, 1, 0, 0.498489,-99) , 
5, 0.809479, 0, 0, 0.500806,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.0150071);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535704,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487756,-99) , 
4, 0.999954, 0, 0, 0.512826,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503281,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486714,-99) , 
2, -0.0574305, 0, 0, 0.501336,-99) , 
2, -0.135292, 1, 0, 0.502266,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512452,-99) , 
NN(
0, 
0, 
-1, 0.809477, 1, -1, 0.470751,-99) , 
0, 0.499995, 0, 0, 0.485355,-99) , 
4, 0.999524, 0, 0, 0.500873,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.00912747);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503985,-99) , 
NN(
0, 
0, 
-1, 0.49809, 1, -1, 0.486115,-99) , 
5, 0.904705, 1, 0, 0.502941,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.0137539);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509056,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495796,-99) , 
0, 0.505165, 1, 0, 0.50705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497542,-99) , 
1, -0.00535207, 1, 0, 0.500159,-99) , 
0, 0.499043, 0, 0, 0.503018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475145,-99) , 
3, 7.97084, 1, 0, 0.50191,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.0168812);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.527196, 1, 1, 0.506081,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473724,-99) , 
2, -0.0565774, 0, 0, 0.498138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473707,-99) , 
5, 0.71425, 1, 0, 0.491863,-99) , 
3, 4.37807, 1, 0, 0.503297,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.0154835);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514377,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499141,-99) , 
0, 0.498228, 0, 0, 0.505841,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484328,-99) , 
0, 0.504757, 1, 0, 0.503661,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536131,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496723,-99) , 
4, 0.99981, 1, 0, 0.500512,-99) , 
NN(
0, 
0, 
-1, 0.493329, 0, -1, 0.490983,-99) , 
5, 0.587255, 1, 0, 0.495611,-99) , 
5, -0.238116, 1, 0, 0.498561,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.00972425);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513757,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529404,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494975,-99) , 
5, -0.333434, 0, 0, 0.513079,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501687,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49306,-99) , 
0, 0.49986, 1, 0, 0.499093,-99) , 
0, 0.504757, 0, 0, 0.500162,-99) , 
4, 0.999048, 1, 0, 0.50086,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.0173731);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493058, 0, 1, 0.517022,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507299,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480852,-99) , 
0, 0.493057, 1, 0, 0.493855,-99) , 
5, 0.523777, 1, 0, 0.509109,-99) , 
NN(
NN(
0, 
0, 
-1, 0.49908, 1, 1, 0.503671,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503406,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486144,-99) , 
0, 0.496076, 1, 0, 0.4907,-99) , 
0, 0.498181, 0, 0, 0.499438,-99) , 
0, 0.495234, 1, 0, 0.50203,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.0105448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532953,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502303,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478742,-99) , 
0, 0.490553, 0, 0, 0.501382,-99) , 
0, 0.489157, 1, 0, 0.502332,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502417,-99) , 
NN(
0, 
0, 
-1, 0.505152, 1, -1, 0.477691,-99) , 
0, 0.505981, 0, 0, 0.48603,-99) , 
0, 0.503805, 1, 0, 0.500476,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.00996135);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.237607, 0, 1, 0.52092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498682,-99) , 
2, -0.214372, 1, 0, 0.499907,-99) , 
0, 0.503124, 0, 0, 0.501402,-99) , 
NN(
0, 
0, 
-1, 0.505573, 0, -1, 0.480069,-99) , 
0, 0.504757, 1, 0, 0.499762,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.0199663);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00285093, 0, 1, 0.515234,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501867,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476616,-99) , 
0, 0.489688, 0, 0, 0.499227,-99) , 
0, 0.496322, 0, 0, 0.50553,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523779,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497017,-99) , 
0, 0.501492, 1, 0, 0.510803,-99) , 
NN(
0, 
0, 
-1, 2.3799, 1, -1, 0.488242,-99) , 
5, 0.809448, 0, 0, 0.491385,-99) , 
0, 0.499043, 1, 0, 0.499574,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.0178274);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.51951,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483309,-99) , 
3, 4.24549, 1, 0, 0.510402,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501383,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492192,-99) , 
5, -0.619044, 1, 0, 0.49452,-99) , 
2, 0.111024, 0, 0, 0.496555,-99) , 
2, -0.215269, 1, 0, 0.497748,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.0222488);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.545748,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492844,-99) , 
3, 1.95348, 1, 0, 0.515112,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506485,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481497,-99) , 
2, 0.138868, 1, 0, 0.491715,-99) , 
3, 3.9607, 1, 0, 0.506212,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516859,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488333,-99) , 
5, 0.142789, 1, 0, 0.503927,-99) , 
NN(
0, 
0, 
-1, 0.496731, 0, -1, 0.491671,-99) , 
0, 0.493331, 1, 0, 0.493454,-99) , 
2, 0.0708577, 0, 0, 0.495769,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.0134207);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497138, 0, 1, 0.522641,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503847,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49231,-99) , 
5, 0.723304, 1, 0, 0.501762,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504416,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47696,-99) , 
5, 0.360478, 0, 0, 0.485505,-99) , 
0, 0.491427, 0, 0, 0.500331,-99) , 
5, 0.904705, 0, 0, 0.50171,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.0204509);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500946, 0, 1, 0.521273,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503979,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486454,-99) , 
5, 0.909252, 1, 0, 0.502285,-99) , 
5, 0.0476297, 1, 0, 0.505753,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533473,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472815,-99) , 
3, 2.6747, 1, 0, 0.505076,-99) , 
NN(
0, 
0, 
-1, 0.000424074, 0, -1, 0.488573,-99) , 
2, 0.0572978, 0, 0, 0.492005,-99) , 
5, -0.428576, 0, 0, 0.501484,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.0174917);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501084, 1, 1, 0.510305,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479343,-99) , 
5, -0.927436, 0, 0, 0.499819,-99) , 
0, 0.499044, 0, 0, 0.504303,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487057,-99) , 
5, 0.705153, 0, 0, 0.502326,-99) , 
NN(
0, 
0, 
-1, 0.501265, 0, -1, 0.487329,-99) , 
0, 0.498091, 1, 0, 0.495076,-99) , 
5, 0.523765, 1, 0, 0.500933,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.0166839);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536631,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505521,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493603,-99) , 
5, 0.0475801, 1, 0, 0.499094,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458583,-99) , 
4, 0.999388, 0, 0, 0.497664,-99) , 
4, 0.998572, 1, 0, 0.49912,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.014962);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504711, 0, 1, 0.509939,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480918,-99) , 
0, 0.498228, 1, 0, 0.498441,-99) , 
0, 0.499996, 0, 0, 0.502113,-99) , 
NN(
0, 
0, 
-1, 4.55095, 1, -1, 0.493428,-99) , 
5, 0.142836, 0, 0, 0.498049,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.017498);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714163, 0, 1, 0.506021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469393,-99) , 
1, 0.00914356, 1, 0, 0.504365,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508768,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486777,-99) , 
3, 2.81128, 1, 0, 0.500518,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501526,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472323,-99) , 
3, 3.71501, 0, 0, 0.48247,-99) , 
5, -0.142914, 1, 0, 0.49054,-99) , 
0, 0.501901, 1, 0, 0.501507,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.0170487);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.000965516, 1, 1, 0.516865,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491918,-99) , 
0, 0.500949, 1, 0, 0.502972,-99) , 
5, -0.619058, 0, 0, 0.509386,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522604,-99) , 
NN(
0, 
0, 
-1, 0.495237, 0, -1, 0.496362,-99) , 
5, 0.918318, 0, 0, 0.498867,-99) , 
5, 0.142833, 1, 0, 0.503739,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.0152979);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714242, 0, 1, 0.503169,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479405,-99) , 
2, 0.215893, 1, 0, 0.502065,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539142,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488088,-99) , 
5, 0.238097, 0, 0, 0.508199,-99) , 
NN(
0, 
0, 
-1, -0.714296, 0, -1, 0.489137,-99) , 
0, 0.49079, 1, 0, 0.492251,-99) , 
0, 0.497138, 0, 0, 0.497976,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.024195);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.539392,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493645,-99) , 
6, 0.00667269, 0, 0, 0.498147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.436351,-99) , 
1, 0.0127394, 1, 0, 0.49655,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45555,-99) , 
1, -0.0108299, 0, 0, 0.49521,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.0170441);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49238, 1, 1, 0.508977,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494457,-99) , 
0, 0.505709, 0, 0, 0.496468,-99) , 
5, 0.333301, 0, 0, 0.50207,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472023,-99) , 
4, 0.998572, 0, 0, 0.501055,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.00994468);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524644,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488474,-99) , 
2, 0.0706988, 1, 0, 0.511082,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529678,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497982,-99) , 
3, 8.23067, 0, 0, 0.499088,-99) , 
4, 0.999524, 1, 0, 0.500068,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476791,-99) , 
0, 0.48952, 0, 0, 0.4993,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.0142583);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.71404, 0, 1, 0.516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507711,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496331,-99) , 
5, -0.655327, 1, 0, 0.499508,-99) , 
5, 0.80948, 0, 0, 0.501912,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473254,-99) , 
3, 8.33212, 1, 0, 0.500927,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.0207166);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519409,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497552,-99) , 
2, -0.00351088, 1, 0, 0.509845,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486825,-99) , 
5, -0.401376, 1, 0, 0.498357,-99) , 
5, 0.0475947, 0, 0, 0.504777,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486006,-99) , 
3, 2.74542, 1, 0, 0.50583,-99) , 
NN(
0, 
0, 
-1, 0.499995, 1, -1, 0.486666,-99) , 
5, -0.238061, 1, 0, 0.493514,-99) , 
2, 0.0713191, 1, 0, 0.502766,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.0173776);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00273808, 0, 1, 0.505275,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504402,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48803,-99) , 
2, 0.00220291, 1, 0, 0.494905,-99) , 
5, -0.333348, 0, 0, 0.501766,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487571,-99) , 
0, 0.499178, 0, 0, 0.496269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4534,-99) , 
0, 0.503804, 1, 0, 0.48942,-99) , 
2, -0.0710035, 0, 0, 0.499545,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.00819853);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521499,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498205,-99) , 
3, 8.22708, 0, 0, 0.498965,-99) , 
0, 0.492196, 1, 0, 0.49964,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502465,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466135,-99) , 
5, 0.14281, 1, 0, 0.486865,-99) , 
0, 0.491424, 0, 0, 0.498557,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.01218);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.505345,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47219,-99) , 
4, 0.998571, 0, 0, 0.504247,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.0178937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529859,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519479,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478421,-99) , 
0, 0.505074, 1, 0, 0.49646,-99) , 
5, -0.238147, 1, 0, 0.511484,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524543,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498469,-99) , 
5, 0.183659, 1, 0, 0.502107,-99) , 
NN(
0, 
0, 
-1, -0.265428, 1, -1, 0.489489,-99) , 
5, -0.142876, 0, 0, 0.497366,-99) , 
0, 0.503804, 0, 0, 0.498974,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.0181122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518878,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507049,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490859,-99) , 
3, 2.38867, 1, 0, 0.499809,-99) , 
5, 0.904681, 0, 0, 0.500715,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474512,-99) , 
4, 0.998572, 0, 0, 0.499863,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.0144271);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.537783,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493288,-99) , 
1, -3.09355e-05, 0, 0, 0.517479,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522184,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499734,-99) , 
0, 0.492376, 1, 0, 0.501829,-99) , 
2, -0.071946, 1, 0, 0.504662,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518533,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497528,-99) , 
1, 0.00579008, 0, 0, 0.500758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.448258,-99) , 
5, 0.0339895, 1, 0, 0.496875,-99) , 
5, 0.14283, 0, 0, 0.501017,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.0177448);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.306101, 0, 1, 0.523522,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459963,-99) , 
5, 0.941642, 1, 0, 0.50067,-99) , 
5, 0.387734, 1, 0, 0.504665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522001,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499972,-99) , 
5, -0.401384, 0, 0, 0.506867,-99) , 
NN(
0, 
0, 
-1, 0.500359, 0, -1, 0.489354,-99) , 
0, 0.498092, 1, 0, 0.497902,-99) , 
5, 0.142829, 0, 0, 0.501516,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.00919122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.503316,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483906,-99) , 
3, 8.6342, 1, 0, 0.502706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469457,-99) , 
0, 0.489521, 0, 0, 0.501617,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.0215243);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.17593, 1, 1, 0.51531,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515935,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495474,-99) , 
5, 0.587191, 0, 0, 0.50538,-99) , 
5, -0.238147, 1, 0, 0.50921,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512584,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48891,-99) , 
5, 0.782225, 1, 0, 0.504093,-99) , 
NN(
0, 
0, 
-1, 0.498816, 1, -1, 0.492005,-99) , 
5, 0.238031, 0, 0, 0.498223,-99) , 
0, 0.499995, 0, 0, 0.501965,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.0180191);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.00350739, 0, 1, 0.51961,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518949,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488618,-99) , 
0, 0.497139, 0, 0, 0.50647,-99) , 
2, 0.0713191, 1, 0, 0.515707,-99) , 
NN(
NN(
0, 
0, 
-1, 0.912565, 1, 1, 0.507297,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504527,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492769,-99) , 
0, 0.50063, 0, 0, 0.498504,-99) , 
0, 0.497138, 1, 0, 0.502235,-99) , 
3, 4.24099, 0, 0, 0.505054,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.0141355);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536465,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501537,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492957,-99) , 
3, 2.08743, 0, 0, 0.497121,-99) , 
4, 0.999048, 1, 0, 0.499143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.462574,-99) , 
3, 8.37762, 1, 0, 0.497923,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.0152111);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.940995, 0, 1, 0.529242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50508,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49399,-99) , 
5, 0.723311, 1, 0, 0.503086,-99) , 
5, 0.904713, 0, 0, 0.504724,-99) , 
NN(
0, 
0, 
-1, -0.237962, 1, -1, 0.478578,-99) , 
0, 0.490472, 0, 0, 0.503199,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.015056);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531012,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512599,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496413,-99) , 
0, 0.50068, 0, 0, 0.499434,-99) , 
NN(
0, 
0, 
-1, 0.0692143, 1, -1, 0.484357,-99) , 
0, 0.503306, 1, 0, 0.497325,-99) , 
0, 0.489521, 1, 0, 0.498444,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.0161479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.419185, 1, 1, 0.508002,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481814,-99) , 
2, 0.0701447, 1, 0, 0.495882,-99) , 
3, 3.21708, 1, 0, 0.504091,-99) , 
NN(
0, 
0, 
-1, 0.945526, 1, -1, 0.481372,-99) , 
5, 0.90471, 1, 0, 0.502765,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.0107981);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.940996, 0, 1, 0.513344,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51767,-99) , 
NN(
0, 
0, 
-1, 0.999048, 0, -1, 0.495753,-99) , 
2, 0.215893, 0, 0, 0.496799,-99) , 
5, 0.904714, 0, 0, 0.4978,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.0194619);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49673, 1, 1, 0.507727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502237,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475735,-99) , 
3, 2.46906, 1, 0, 0.491915,-99) , 
5, -0.809516, 0, 0, 0.505384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508759,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489424,-99) , 
0, 0.493154, 0, 0, 0.498085,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500554,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.454889,-99) , 
5, 0.42826, 0, 0, 0.475015,-99) , 
0, 0.49537, 1, 0, 0.493837,-99) , 
0, 0.496186, 0, 0, 0.501394,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.0181293);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511021,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498924,-99) , 
0, 0.497289, 0, 0, 0.503369,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488826,-99) , 
0, 0.500313, 1, 0, 0.502457,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465572,-99) , 
5, -0.89116, 0, 0, 0.502164,-99) , 
NN(
0, 
0, 
-1, 0.115615, 0, -1, 0.481583,-99) , 
5, -0.238122, 1, 0, 0.489755,-99) , 
0, 0.500948, 1, 0, 0.499026,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.010489);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00224338, 0, 1, 0.505059,-99) , 
NN(
0, 
0, 
-1, 0.500358, 0, -1, 0.496832,-99) , 
0, 0.499995, 1, 0, 0.502271,-99) , 
NN(
0, 
0, 
-1, 0.498094, 1, -1, 0.479475,-99) , 
2, -0.214372, 0, 0, 0.501102,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.0216721);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0002474, 0, 1, 0.525242,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513031,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499721,-99) , 
0, 0.4941, 0, 0, 0.5073,-99) , 
5, 0.714242, 0, 0, 0.511699,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506706,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484534,-99) , 
2, -0.0692, 0, 0, 0.502657,-99) , 
NN(
0, 
0, 
-1, -0.419659, 1, -1, 0.487609,-99) , 
5, -0.238112, 0, 0, 0.497195,-99) , 
0, 0.498091, 1, 0, 0.504447,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.0132922);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52414,-99) , 
NN(
NN(
0, 
0, 
-1, -0.111828, 0, 1, 0.513089,-99) , 
NN(
0, 
0, 
-1, 0.618883, 1, -1, 0.494828,-99) , 
4, 0.999524, 1, 0, 0.49614,-99) , 
2, 0.214593, 0, 0, 0.497518,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.0122683);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.523777, 0, 1, 0.518925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483741,-99) , 
3, 4.37797, 1, 0, 0.512309,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521716,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497725,-99) , 
4, 0.999048, 1, 0, 0.498816,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478851,-99) , 
0, 0.506253, 1, 0, 0.49809,-99) , 
0, 0.49333, 1, 0, 0.500347,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.0185813);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.50988, 0, 1, 0.529336,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51591,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493391,-99) , 
5, -0.767213, 1, 0, 0.5084,-99) , 
5, -0.555585, 0, 0, 0.512381,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502741,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492298,-99) , 
5, 0.6553, 1, 0, 0.49812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475871,-99) , 
5, -0.206355, 0, 0, 0.496938,-99) , 
5, -0.333347, 1, 0, 0.502088,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.0190397);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533415,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490271,-99) , 
3, 4.44905, 1, 0, 0.517547,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515098,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474932,-99) , 
0, 0.498095, 0, 0, 0.494873,-99) , 
2, 0.138078, 0, 0, 0.506665,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504171,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482792,-99) , 
0, 0.503803, 1, 0, 0.501287,-99) , 
NN(
0, 
0, 
-1, -0.00457952, 1, -1, 0.492865,-99) , 
5, -0.0476327, 1, 0, 0.496337,-99) , 
2, 0.0701447, 0, 0, 0.498213,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.0187749);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526605,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518551,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474165,-99) , 
4, 0.999932, 0, 0, 0.51036,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502667,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488114,-99) , 
5, -0.619045, 0, 0, 0.49868,-99) , 
3, 3.92054, 0, 0, 0.501487,-99) , 
4, 0.998572, 1, 0, 0.502415,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.0169391);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, -0.00535207, 1, 1, 0.51157,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509128,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495358,-99) , 
0, 0.502981, 1, 0, 0.504474,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49358,-99) , 
2, -0.0761244, 1, 0, 0.495848,-99) , 
0, 0.49877, 0, 0, 0.501062,-99) , 
0, 0.495233, 1, 0, 0.503904,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.0158);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0506896, 0, 1, 0.52171,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503866,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470011,-99) , 
2, 0.0706988, 1, 0, 0.497021,-99) , 
5, 0.142841, 1, 0, 0.509403,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522825,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498146,-99) , 
4, 0.999841, 1, 0, 0.499929,-99) , 
NN(
0, 
0, 
-1, 0.49995, 1, -1, 0.472411,-99) , 
4, 0.999524, 0, 0, 0.497911,-99) , 
0, 0.495234, 1, 0, 0.500982,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.0207012);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0748054, 1, 1, 0.508203,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480004,-99) , 
5, -0.764187, 1, 0, 0.498843,-99) , 
5, -0.619054, 0, 0, 0.505858,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509947,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478225,-99) , 
0, 0.499043, 1, 0, 0.496315,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467479,-99) , 
5, -0.714256, 0, 0, 0.490629,-99) , 
2, -0.0725228, 0, 0, 0.503162,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.0164119);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523763,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489202,-99) , 
5, 0.945509, 1, 0, 0.508074,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526086,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496299,-99) , 
0, 0.490472, 1, 0, 0.498323,-99) , 
NN(
0, 
0, 
-1, 0.632629, 0, -1, 0.489603,-99) , 
5, 0.269792, 1, 0, 0.494357,-99) , 
5, 0.90469, 0, 0, 0.495196,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.00876824);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525091,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50032,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482587,-99) , 
4, 0.999864, 0, 0, 0.498179,-99) , 
2, 0.216437, 0, 0, 0.499306,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464875,-99) , 
4, 0.998572, 0, 0, 0.498169,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.0242862);
  fForest.push_back( 
NN(
NN(
0, 
0, 
5, 0.523928, 1, 1, 0.524927,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513812,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474934,-99) , 
5, 0.714219, 1, 0, 0.505005,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505362,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48986,-99) , 
2, -0.0858104, 1, 0, 0.492255,-99) , 
2, 0.0307122, 0, 0, 0.496013,-99) , 
2, -0.213989, 1, 0, 0.49749,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.0172269);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520226,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513509,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49394,-99) , 
3, 0.884164, 1, 0, 0.498023,-99) , 
3, 8.12725, 0, 0, 0.498757,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480052,-99) , 
2, 0.214593, 1, 0, 0.497844,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.0192321);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.23649, 0, 1, 0.507676,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464962,-99) , 
4, 0.999048, 0, 0, 0.506192,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517953,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498825,-99) , 
0, 0.498094, 1, 0, 0.508292,-99) , 
NN(
0, 
0, 
-1, 2.66787, 1, -1, 0.482106,-99) , 
5, 0.333305, 0, 0, 0.494119,-99) , 
2, -0.0710108, 0, 0, 0.503985,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.0275467);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521442,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485271,-99) , 
5, 0.720167, 0, 0, 0.504682,-99) , 
5, 0.673451, 1, 0, 0.506865,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49303,-99) , 
2, 0.0604552, 0, 0, 0.497583,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516984,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476785,-99) , 
4, 0.999905, 1, 0, 0.482887,-99) , 
5, -0.229044, 1, 0, 0.490481,-99) , 
5, 0.619006, 0, 0, 0.495432,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.0169915);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505346,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484575,-99) , 
0, 0.489973, 0, 0, 0.503964,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51407,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487377,-99) , 
3, 1.92488, 0, 0, 0.500984,-99) , 
NN(
0, 
0, 
-1, 0.591784, 0, -1, 0.486839,-99) , 
5, 0.0475865, 1, 0, 0.493366,-99) , 
0, 0.499995, 1, 0, 0.500335,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.0136531);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.0281166, 1, 1, 0.510001,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502172,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494093,-99) , 
5, 0.428537, 0, 0, 0.497555,-99) , 
0, 0.5019, 0, 0, 0.500099,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465164,-99) , 
2, 0.216386, 1, 0, 0.498485,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.0208637);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544184,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523844,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496991,-99) , 
2, -0.00601934, 1, 0, 0.509023,-99) , 
5, 0.71424, 0, 0, 0.515811,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502991,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477494,-99) , 
5, -0.941024, 0, 0, 0.500017,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486836,-99) , 
4, 0.999524, 1, 0, 0.489668,-99) , 
5, 0.238072, 1, 0, 0.494663,-99) , 
0, 0.502852, 0, 0, 0.498004,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.0105645);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.538516,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498856,-99) , 
3, 8.22708, 0, 0, 0.499661,-99) , 
2, -0.206136, 1, 0, 0.50122,-99) , 
NN(
0, 
0, 
-1, 0.496187, 0, -1, 0.472968,-99) , 
4, 0.999524, 0, 0, 0.498916,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.0123122);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.49809, 1, 1, 0.510368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500122,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490811,-99) , 
0, 0.49714, 0, 0, 0.496251,-99) , 
5, 0.714247, 0, 0, 0.499447,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477876,-99) , 
2, 0.214593, 1, 0, 0.498421,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.0104937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527775,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500724,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493446,-99) , 
0, 0.498092, 0, 0, 0.497112,-99) , 
4, 0.998572, 1, 0, 0.498199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472409,-99) , 
3, 8.37762, 1, 0, 0.497337,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.0145753);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.360464, 1, 1, 0.506768,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49566,-99) , 
0, 0.504893, 0, 0, 0.498822,-99) , 
0, 0.498091, 1, 0, 0.502774,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505075,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477634,-99) , 
3, 1.55754, 1, 0, 0.489524,-99) , 
5, -0.904742, 0, 0, 0.501579,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.0137491);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532828,-99) , 
NN(
NN(
0, 
0, 
-1, -0.428591, 1, 1, 0.504385,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506738,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474579,-99) , 
4, 0.998163, 1, 0, 0.485243,-99) , 
4, 0.999524, 0, 0, 0.502838,-99) , 
0, 0.505709, 0, 0, 0.504258,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.0158393);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.496183, 1, 1, 0.515095,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50436,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49388,-99) , 
3, 1.50478, 1, 0, 0.49946,-99) , 
3, 3.74003, 0, 0, 0.503021,-99) , 
NN(
0, 
0, 
-1, 0.216017, 1, -1, 0.491809,-99) , 
5, -0.238112, 1, 0, 0.495868,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.0196306);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.536263,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490192,-99) , 
2, 0.0708577, 1, 0, 0.519564,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50952,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496024,-99) , 
5, 0.65074, 1, 0, 0.503664,-99) , 
4, 0.999524, 1, 0, 0.505814,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518987,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494822,-99) , 
5, -0.727875, 0, 0, 0.506852,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490609,-99) , 
3, 0.717284, 1, 0, 0.493617,-99) , 
0, 0.494281, 1, 0, 0.496745,-99) , 
5, -0.0476416, 0, 0, 0.502063,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.0143148);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.100079, 0, 1, 0.505819,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460622,-99) , 
5, 0.142831, 0, 0, 0.49423,-99) , 
4, 0.999932, 0, 0, 0.503398,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46949,-99) , 
4, 0.998572, 0, 0, 0.502276,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.00955282);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509359,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49995,-99) , 
0, 0.49451, 1, 0, 0.502157,-99) , 
NN(
0, 
0, 
-1, 0.94101, 1, -1, 0.476477,-99) , 
5, 0.904714, 1, 0, 0.500672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46868,-99) , 
0, 0.505709, 1, 0, 0.499165,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.015962);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498111,-99) , 
5, 0.619015, 1, 0, 0.51335,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504638,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48579,-99) , 
0, 0.493058, 0, 0, 0.49402,-99) , 
3, 4.06371, 1, 0, 0.509002,-99) , 
NN(
NN(
0, 
0, 
-1, 4.15623, 0, 1, 0.505855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50419,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493333,-99) , 
5, -0.768711, 1, 0, 0.496014,-99) , 
5, 0.618984, 0, 0, 0.499117,-99) , 
0, 0.495234, 1, 0, 0.50176,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.00893913);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 8.34575, 0, 1, 0.501368,-99) , 
NN(
0, 
0, 
-1, 0.0287961, 0, -1, 0.482301,-99) , 
0, 0.492377, 0, 0, 0.499199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472232,-99) , 
2, -0.214372, 0, 0, 0.497832,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.0157572);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.341696, 1, 1, 0.519995,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5012,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488765,-99) , 
5, 0.619, 1, 0, 0.497357,-99) , 
3, 0.534693, 1, 0, 0.499562,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514438,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490813,-99) , 
0, 0.499992, 0, 0, 0.499731,-99) , 
NN(
0, 
0, 
-1, 5.37711, 0, -1, 0.481466,-99) , 
5, 0.618985, 0, 0, 0.487685,-99) , 
3, 4.38526, 1, 0, 0.497177,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.0219885);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.949421, 1, 1, 0.527814,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511024,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48368,-99) , 
5, 0.879447, 1, 0, 0.506195,-99) , 
5, 0.918319, 0, 0, 0.510847,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50381,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478865,-99) , 
4, 0.99998, 0, 0, 0.496928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464732,-99) , 
4, 0.999584, 0, 0, 0.495655,-99) , 
5, 0.714242, 0, 0, 0.499231,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.0270405);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51296,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483813,-99) , 
0, 0.503986, 1, 0, 0.50441,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466081,-99) , 
0, 0.503986, 0, 0, 0.484515,-99) , 
2, 0.069202, 1, 0, 0.500447,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517511,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496072,-99) , 
5, 0.619015, 0, 0, 0.501797,-99) , 
NN(
0, 
0, 
-1, 0.495785, 0, -1, 0.485842,-99) , 
0, 0.4941, 1, 0, 0.490675,-99) , 
0, 0.499995, 0, 0, 0.493948,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.0112457);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511168,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52111,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495949,-99) , 
4, 0.999252, 1, 0, 0.496637,-99) , 
3, 7.95371, 0, 0, 0.497194,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47052,-99) , 
4, 0.998572, 0, 0, 0.496276,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.0112027);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498092, 0, 1, 0.526954,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52836,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508512,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498088,-99) , 
2, -0.0281953, 1, 0, 0.500773,-99) , 
2, 0.274901, 0, 0, 0.501697,-99) , 
2, -0.21475, 1, 0, 0.502998,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.0127118);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.489973, 0, 1, 0.520483,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501771,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484436,-99) , 
0, 0.494508, 0, 0, 0.499181,-99) , 
NN(
0, 
0, 
-1, 0.0708577, 1, -1, 0.479762,-99) , 
4, 0.999524, 0, 0, 0.497737,-99) , 
0, 0.491424, 1, 0, 0.49966,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.0125703);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 7.96209, 0, 1, 0.512789,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.475636,-99) , 
3, 3.83789, 1, 0, 0.499764,-99) , 
3, 4.23079, 0, 0, 0.502381,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511062,-99) , 
NN(
0, 
0, 
-1, 4.16089, 0, -1, 0.479663,-99) , 
0, 0.495235, 1, 0, 0.487832,-99) , 
5, 0.80948, 1, 0, 0.500266,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.0125007);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.71412, 0, 1, 0.503705,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503421,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.458715,-99) , 
5, 0.714178, 1, 0, 0.481863,-99) , 
4, 0.999841, 0, 0, 0.502035,-99) , 
NN(
0, 
0, 
-1, 0.498089, 1, -1, 0.480764,-99) , 
4, 0.999524, 0, 0, 0.500275,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.0182168);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506948,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486238,-99) , 
1, -0.00215937, 0, 0, 0.503025,-99) , 
NN(
0, 
0, 
-1, 0.999955, 0, -1, 0.491827,-99) , 
5, 0.619008, 0, 0, 0.494909,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473055,-99) , 
4, 0.999048, 0, 0, 0.493842,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.018318);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.530807,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497832,-99) , 
3, 2.92566, 1, 0, 0.519043,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500319,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474888,-99) , 
3, 4.72537, 1, 0, 0.497185,-99) , 
5, -0.501155, 0, 0, 0.503644,-99) , 
NN(
0, 
0, 
-1, -0.0688124, 0, -1, 0.490357,-99) , 
5, -0.0476399, 1, 0, 0.495808,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.0163356);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499839,-99) , 
5, 0.0476218, 0, 0, 0.512025,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527018,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494412,-99) , 
0, 0.506253, 0, 0, 0.495552,-99) , 
0, 0.493331, 1, 0, 0.498055,-99) , 
NN(
0, 
0, 
-1, 0.0711955, 0, -1, 0.481137,-99) , 
4, 0.999524, 0, 0, 0.49669,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.0230421);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.583141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470808,-99) , 
5, 0.0518798, 1, 0, 0.535521,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501641,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481931,-99) , 
5, -0.0340301, 0, 0, 0.495924,-99) , 
1, -0.0057274, 1, 0, 0.498832,-99) , 
NN(
0, 
0, 
-1, 2.72789, 0, -1, 0.482098,-99) , 
5, -0.809515, 0, 0, 0.496263,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.0111503);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.53422,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499154,-99) , 
4, 0.998186, 0, 0, 0.516263,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.524756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511365,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496866,-99) , 
0, 0.492377, 1, 0, 0.498511,-99) , 
3, 7.80263, 0, 0, 0.499621,-99) , 
4, 0.999048, 1, 0, 0.500485,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.0151558);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518458,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495885,-99) , 
5, -0.714213, 0, 0, 0.512288,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507353,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495212,-99) , 
2, 0.0617222, 0, 0, 0.497391,-99) , 
0, 0.502852, 0, 0, 0.499686,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470442,-99) , 
3, 7.97179, 1, 0, 0.498539,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.014238);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 4.08846, 0, 1, 0.520511,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503469,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491175,-99) , 
0, 0.492379, 0, 0, 0.502012,-99) , 
3, 3.76997, 0, 0, 0.503343,-99) , 
NN(
0, 
0, 
-1, -0.333328, 1, -1, 0.485482,-99) , 
3, 4.37807, 1, 0, 0.499796,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.0112245);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521223,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535682,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499081,-99) , 
5, 0.940995, 1, 0, 0.517282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520557,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496524,-99) , 
4, 0.999048, 1, 0, 0.49724,-99) , 
5, 0.904713, 0, 0, 0.498387,-99) , 
2, 0.213397, 0, 0, 0.499519,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.0130236);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.497136, 1, 1, 0.526057,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521197,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503934,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494834,-99) , 
0, 0.498091, 1, 0, 0.499311,-99) , 
2, -0.193615, 1, 0, 0.500417,-99) , 
4, 0.999048, 1, 0, 0.501796,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.020112);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535703,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495888,-99) , 
0, 0.498081, 0, 0, 0.515469,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503959,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491935,-99) , 
0, 0.502853, 1, 0, 0.501788,-99) , 
5, 0.142827, 0, 0, 0.503534,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528272,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494747,-99) , 
5, 0.755066, 1, 0, 0.499858,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51672,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480103,-99) , 
4, 0.999877, 1, 0, 0.486879,-99) , 
5, 0.714253, 0, 0, 0.493359,-99) , 
5, 0.3333, 1, 0, 0.498818,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.0139956);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.714224, 0, 1, 0.504318,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517103,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469624,-99) , 
4, 0.999271, 1, 0, 0.483112,-99) , 
4, 0.999796, 0, 0, 0.502135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481831,-99) , 
4, 0.998572, 0, 0, 0.501457,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.0131722);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 1.65318, 1, 1, 0.512729,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500721,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488878,-99) , 
0, 0.496186, 0, 0, 0.496748,-99) , 
2, -0.0788029, 1, 0, 0.499324,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468606,-99) , 
3, 7.94826, 1, 0, 0.498131,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.0077848);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489524, 1, 1, 0.501385,-99) , 
NN(
0, 
0, 
-1, -0.000764447, 0, -1, 0.481241,-99) , 
4, 0.99966, 0, 0, 0.500033,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.455936,-99) , 
4, 0.998571, 0, 0, 0.498609,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.0177301);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523622,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499224,-99) , 
5, -0.673467, 0, 0, 0.516336,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492266,-99) , 
5, 0.714236, 1, 0, 0.510726,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528411,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498675,-99) , 
3, 4.31559, 0, 0, 0.504212,-99) , 
NN(
0, 
0, 
-1, 0.469274, 1, -1, 0.492005,-99) , 
5, 0.714223, 0, 0, 0.494846,-99) , 
2, 0.0713332, 0, 0, 0.497648,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.0169972);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522996,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503932,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484954,-99) , 
0, 0.498817, 1, 0, 0.501118,-99) , 
5, 0.904712, 0, 0, 0.502565,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484299,-99) , 
5, 0.238014, 0, 0, 0.49153,-99) , 
NN(
0, 
0, 
-1, 0.237822, 0, -1, 0.471361,-99) , 
0, 0.500722, 0, 0, 0.488296,-99) , 
0, 0.499996, 1, 0, 0.497694,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.0139608);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.506389, 1, 1, 0.528748,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525084,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497162,-99) , 
2, 0.132512, 0, 0, 0.498594,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470499,-99) , 
2, 0.214165, 1, 0, 0.497292,-99) , 
0, 0.504757, 0, 0, 0.499715,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.0155971);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503329,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492625,-99) , 
3, 4.36372, 1, 0, 0.501417,-99) , 
2, -0.213802, 1, 0, 0.502442,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517548,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495112,-99) , 
0, 0.503169, 0, 0, 0.507307,-99) , 
NN(
0, 
0, 
-1, 2.3296, 0, -1, 0.483029,-99) , 
3, 3.68377, 0, 0, 0.490166,-99) , 
0, 0.500947, 1, 0, 0.49911,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.0126218);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.504292,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481839,-99) , 
2, 0.214821, 1, 0, 0.503116,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503804,-99) , 
NN(
0, 
0, 
-1, -0.954641, 1, -1, 0.481907,-99) , 
3, 2.85838, 0, 0, 0.489224,-99) , 
5, -0.809516, 0, 0, 0.500953,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.00665471);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.523528,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499803,-99) , 
3, 7.79999, 0, 0, 0.500817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470115,-99) , 
1, -0.0108299, 0, 0, 0.499817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473674,-99) , 
4, 0.999048, 0, 0, 0.498522,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.0151005);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511078,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495444,-99) , 
3, 4.06219, 0, 0, 0.498208,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466616,-99) , 
3, 7.01545, 1, 0, 0.497275,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.459667,-99) , 
3, 8.63683, 1, 0, 0.496137,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.0172852);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.54384,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507577,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497475,-99) , 
5, 0.0475643, 1, 0, 0.502793,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504834,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.466003,-99) , 
5, 0.523853, 0, 0, 0.491317,-99) , 
4, 0.999932, 0, 0, 0.500367,-99) , 
4, 0.998572, 1, 0, 0.502013,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.0202239);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499905, 1, 1, 0.512092,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50391,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480908,-99) , 
5, -0.238246, 0, 0, 0.495751,-99) , 
2, -0.0729483, 0, 0, 0.509224,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502374,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476193,-99) , 
2, 0.0592197, 1, 0, 0.497269,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.453344,-99) , 
4, 0.999048, 0, 0, 0.495,-99) , 
0, 0.498091, 0, 0, 0.502101,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.0126865);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528638,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503926,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489215,-99) , 
4, 0.999922, 0, 0, 0.501617,-99) , 
4, 0.999456, 1, 0, 0.502389,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480706,-99) , 
4, 0.999048, 0, 0, 0.50133,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.0154466);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.504148, 0, 1, 0.512914,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483935,-99) , 
0, 0.506253, 1, 0, 0.50728,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515052,-99) , 
NN(
0, 
0, 
-1, 0.492902, 0, -1, 0.49377,-99) , 
0, 0.489792, 1, 0, 0.494764,-99) , 
0, 0.502852, 0, 0, 0.496729,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.0207522);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.517286,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492344,-99) , 
0, 0.50285, 1, 0, 0.514279,-99) , 
NN(
NN(
0, 
0, 
-1, 0.48952, 1, 1, 0.512379,-99) , 
NN(
0, 
0, 
-1, 0.505709, 1, -1, 0.492389,-99) , 
0, 0.494281, 1, 0, 0.496689,-99) , 
5, 0.714243, 0, 0, 0.500772,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.00764924);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515976,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501393,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472114,-99) , 
4, 0.999388, 0, 0, 0.500404,-99) , 
4, 0.998571, 1, 0, 0.500916,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483775,-99) , 
0, 0.490569, 1, 0, 0.493418,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473895,-99) , 
0, 0.489429, 0, 0, 0.486373,-99) , 
0, 0.491424, 0, 0, 0.499684,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.0119733);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.541254,-99) , 
NN(
0, 
0, 
-1, 3.48954, 1, -1, 0.496267,-99) , 
4, 0.998571, 1, 0, 0.497857,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.471338,-99) , 
3, 7.97537, 1, 0, 0.496817,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.0120937);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52282,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506854,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496819,-99) , 
5, -0.238112, 1, 0, 0.500551,-99) , 
2, 0.214708, 0, 0, 0.501556,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47225,-99) , 
3, 8.63778, 1, 0, 0.500673,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.00986671);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.959175, 1, 1, 0.505341,-99) , 
NN(
0, 
0, 
-1, -0.0339552, 0, -1, 0.496649,-99) , 
5, -0.142872, 1, 0, 0.499935,-99) , 
NN(
0, 
0, 
-1, 0.489112, 0, -1, 0.48146,-99) , 
0, 0.490472, 0, 0, 0.498873,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.0176218);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518758,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499662,-99) , 
5, 0.319749, 1, 0, 0.505613,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511241,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490329,-99) , 
3, 3.89301, 0, 0, 0.494379,-99) , 
5, -0.428583, 0, 0, 0.502251,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506229,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488069,-99) , 
5, -0.237962, 0, 0, 0.497791,-99) , 
NN(
0, 
0, 
-1, -0.42858, 1, -1, 0.478148,-99) , 
0, 0.490608, 1, 0, 0.485427,-99) , 
0, 0.493329, 0, 0, 0.499563,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.0132939);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521938,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498194,-99) , 
0, 0.499677, 0, 0, 0.501926,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503922,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481192,-99) , 
3, 1.66841, 1, 0, 0.491418,-99) , 
5, -0.714288, 0, 0, 0.49979,-99) , 
0, 0.505709, 0, 0, 0.500796,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.0226189);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999048, 1, 1, 0.506871,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51158,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483946,-99) , 
2, -0.0381762, 1, 0, 0.492459,-99) , 
0, 0.5019, 1, 0, 0.504118,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518149,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509448,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.479429,-99) , 
2, -0.0844076, 1, 0, 0.483943,-99) , 
5, -0.954637, 1, 0, 0.48953,-99) , 
5, -0.523811, 0, 0, 0.499991,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.0175215);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514552,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.49705,-99) , 
5, 0.142754, 0, 0, 0.50721,-99) , 
NN(
0, 
0, 
-1, 0.999524, 0, -1, 0.49546,-99) , 
0, 0.499451, 1, 0, 0.501875,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509262,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487056,-99) , 
0, 0.490881, 1, 0, 0.49742,-99) , 
NN(
0, 
0, 
-1, 0.292516, 0, -1, 0.480309,-99) , 
5, -0.238096, 1, 0, 0.487633,-99) , 
0, 0.493329, 0, 0, 0.49957,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.0146011);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0476687, 1, 1, 0.509255,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502007,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476034,-99) , 
0, 0.499905, 0, 0, 0.494989,-99) , 
5, -0.428583, 0, 0, 0.504772,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500375,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469808,-99) , 
0, 0.497593, 1, 0, 0.497535,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467211,-99) , 
4, 0.999524, 0, 0, 0.494895,-99) , 
0, 0.498092, 0, 0, 0.499884,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.0125647);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.999524, 1, 1, 0.505783,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503249,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463058,-99) , 
0, 0.500013, 0, 0, 0.500006,-99) , 
0, 0.499633, 1, 0, 0.503368,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505277,-99) , 
NN(
0, 
0, 
-1, 0.491472, 1, -1, 0.489133,-99) , 
2, 0.063636, 0, 0, 0.493348,-99) , 
0, 0.492379, 0, 0, 0.502178,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.00785412);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.142822, 0, 1, 0.522676,-99) , 
NN(
0, 
0, 
-1, 0.505398, 1, -1, 0.498097,-99) , 
0, 0.492105, 1, 0, 0.499443,-99) , 
NN(
0, 
0, 
-1, -0.143083, 1, -1, 0.481153,-99) , 
0, 0.490472, 0, 0, 0.498418,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.015576);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.554951,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499309,-99) , 
1, -0.00576821, 1, 0, 0.503143,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460105,-99) , 
1, 0.010758, 1, 0, 0.501648,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.409555,-99) , 
1, -0.0123865, 0, 0, 0.499338,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.0226157);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.00273808, 0, 1, 0.510586,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507135,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490333,-99) , 
0, 0.501628, 0, 0, 0.497025,-99) , 
5, -0.142904, 0, 0, 0.505511,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516586,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487791,-99) , 
3, 1.42718, 1, 0, 0.498761,-99) , 
NN(
0, 
0, 
-1, -0.156482, 0, -1, 0.485808,-99) , 
5, -0.428591, 1, 0, 0.490047,-99) , 
0, 0.496187, 0, 0, 0.500236,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.0266751);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499045, 0, 1, 0.528555,-99) , 
NN(
0, 
0, 
-1, 1.97263, 0, -1, 0.481707,-99) , 
5, -0.714256, 0, 0, 0.513704,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.522342,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493579,-99) , 
0, 0.496189, 0, 0, 0.511926,-99) , 
NN(
0, 
0, 
-1, 0.0566867, 0, -1, 0.493013,-99) , 
5, -0.238111, 1, 0, 0.499077,-99) , 
1, -0.00283878, 1, 0, 0.502218,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.0154769);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498132,-99) , 
0, 0.494819, 1, 0, 0.524223,-99) , 
NN(
0, 
0, 
-1, 0.238041, 0, 1, 0.50833,-99) , 
0, 0.493057, 0, 0, 0.515512,-99) , 
NN(
NN(
0, 
0, 
-1, 0.0475938, 1, 1, 0.504123,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482388,-99) , 
2, -0.216074, 0, 0, 0.503127,-99) , 
0, 0.495234, 1, 0, 0.506455,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.0208088);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.499987, 1, 1, 0.519736,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500636,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468146,-99) , 
2, -0.213802, 0, 0, 0.498604,-99) , 
5, 0.455747, 1, 0, 0.50443,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504358,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474347,-99) , 
4, 0.999995, 0, 0, 0.492216,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463223,-99) , 
4, 0.999905, 0, 0, 0.490555,-99) , 
5, 0.0475934, 0, 0, 0.498329,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.0204834);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.493541, 1, 1, 0.515998,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514157,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492764,-99) , 
2, 0.0653823, 0, 0, 0.498368,-99) , 
0, 0.492694, 0, 0, 0.507316,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505588,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488422,-99) , 
3, 3.99942, 1, 0, 0.501497,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504499,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47472,-99) , 
5, -0.333449, 1, 0, 0.482891,-99) , 
0, 0.497002, 0, 0, 0.498005,-99) , 
0, 0.495234, 1, 0, 0.500526,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.0142449);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.489929, 1, 1, 0.504643,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504829,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472841,-99) , 
5, -0.00222643, 1, 0, 0.489961,-99) , 
0, 0.503805, 1, 0, 0.502978,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509002,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.450613,-99) , 
5, 0.940996, 0, 0, 0.48188,-99) , 
5, 0.904714, 1, 0, 0.501745,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.00633872);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542727,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521457,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527811,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499647,-99) , 
2, 0.270646, 0, 0, 0.500454,-99) , 
2, -0.215133, 1, 0, 0.501388,-99) , 
4, 0.998095, 1, 0, 0.502532,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.0175222);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0205024, 1, 1, 0.514549,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514113,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496418,-99) , 
0, 0.493421, 1, 0, 0.499587,-99) , 
0, 0.502853, 0, 0, 0.50176,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509613,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48533,-99) , 
2, -0.0219466, 0, 0, 0.500026,-99) , 
NN(
0, 
0, 
-1, -0.00672418, 0, -1, 0.479803,-99) , 
3, 2.09809, 0, 0, 0.488941,-99) , 
5, -0.71429, 0, 0, 0.499106,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.0256828);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489779,-99) , 
6, 0.00176314, 0, 0, 0.502767,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.468893,-99) , 
1, 0.011105, 1, 0, 0.501671,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.439288,-99) , 
1, -0.0123422, 0, 0, 0.500062,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.0154866);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505186,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492838,-99) , 
0, 0.502837, 1, 0, 0.503413,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509822,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486131,-99) , 
2, -0.0766585, 1, 0, 0.49119,-99) , 
0, 0.493646, 0, 0, 0.501151,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473932,-99) , 
0, 0.505709, 1, 0, 0.499905,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.0186664);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.52315,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5126,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492662,-99) , 
1, 0.000508162, 0, 0, 0.501648,-99) , 
NN(
0, 
0, 
-1, -0.650814, 1, -1, 0.492833,-99) , 
5, -0.333347, 0, 0, 0.498676,-99) , 
0, 0.48952, 1, 0, 0.499497,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.0118136);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515911,-99) , 
NN(
NN(
0, 
0, 
-1, 0.714249, 0, 1, 0.505114,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494038,-99) , 
2, -0.00844127, 1, 0, 0.495906,-99) , 
2, -0.0317576, 1, 0, 0.498592,-99) , 
2, 0.212969, 0, 0, 0.499444,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.0154875);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519947,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509367,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493931,-99) , 
3, 1.55469, 1, 0, 0.50025,-99) , 
5, -0.891154, 0, 0, 0.507301,-99) , 
NN(
NN(
0, 
0, 
-1, 0.441933, 1, 1, 0.503262,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50628,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486545,-99) , 
1, -0.00283878, 1, 0, 0.491495,-99) , 
5, 0.310628, 0, 0, 0.498058,-99) , 
5, -0.809523, 1, 0, 0.4995,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.0180862);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500539, 1, 1, 0.508011,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476568,-99) , 
1, 0.0096076, 1, 0, 0.506719,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513596,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494792,-99) , 
3, 4.01398, 0, 0, 0.499019,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464941,-99) , 
4, 0.999524, 0, 0, 0.495701,-99) , 
0, 0.496186, 0, 0, 0.502986,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.0205624);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532519,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496068,-99) , 
2, -0.0715266, 0, 0, 0.507673,-99) , 
0, 0.495778, 0, 0, 0.509976,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.521232,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496799,-99) , 
5, -0.705223, 0, 0, 0.502938,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520489,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490987,-99) , 
1, -0.00357725, 1, 0, 0.494645,-99) , 
5, -0.523819, 1, 0, 0.496896,-99) , 
0, 0.496187, 1, 0, 0.501376,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.0146659);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509744,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498429,-99) , 
4, 0.999987, 1, 0, 0.502988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469306,-99) , 
4, 0.999728, 0, 0, 0.501813,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.514298,-99) , 
NN(
0, 
0, 
-1, 0.999135, 0, -1, 0.469451,-99) , 
4, 0.998163, 1, 0, 0.484437,-99) , 
4, 0.999524, 0, 0, 0.500406,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.0153484);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509138,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498859,-99) , 
3, 2.47874, 0, 0, 0.502548,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525604,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480496,-99) , 
3, 1.70096, 1, 0, 0.490443,-99) , 
2, -0.0680547, 0, 0, 0.500395,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47336,-99) , 
3, 8.35276, 1, 0, 0.499477,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.0130823);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487153,-99) , 
5, 0.904713, 1, 0, 0.503855,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501147,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.465808,-99) , 
0, 0.505574, 0, 0, 0.489114,-99) , 
0, 0.504757, 1, 0, 0.502718,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.477113,-99) , 
1, -0.0104141, 0, 0, 0.501846,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.012427);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.519064,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50928,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487769,-99) , 
0, 0.504677, 0, 0, 0.502631,-99) , 
0, 0.503759, 1, 0, 0.506986,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501387,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.480184,-99) , 
2, 0.152468, 1, 0, 0.499413,-99) , 
NN(
0, 
0, 
-1, 0.494873, 1, -1, 0.485604,-99) , 
2, -0.071946, 0, 0, 0.497056,-99) , 
0, 0.502852, 0, 0, 0.498619,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.0217822);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.387792, 0, 1, 0.512169,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507869,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492689,-99) , 
5, 0.782286, 0, 0, 0.497152,-99) , 
5, -0.142869, 1, 0, 0.502698,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51964,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.481577,-99) , 
1, -0.00144453, 1, 0, 0.494404,-99) , 
NN(
0, 
0, 
-1, 0.0476281, 0, -1, 0.479028,-99) , 
0, 0.50444, 0, 0, 0.487511,-99) , 
0, 0.502852, 1, 0, 0.500286,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.0120786);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529662,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.504127,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.473281,-99) , 
4, 0.999388, 0, 0, 0.503164,-99) , 
4, 0.998572, 1, 0, 0.503925,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484163,-99) , 
2, 0.214593, 1, 0, 0.502975,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.0177231);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529657,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.516119,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.489449,-99) , 
2, 0.00828553, 1, 0, 0.508331,-99) , 
2, 0.082149, 0, 0, 0.512642,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51248,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494502,-99) , 
0, 0.489656, 1, 0, 0.495243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476545,-99) , 
2, 0.214165, 1, 0, 0.494422,-99) , 
0, 0.5019, 0, 0, 0.498231,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.0190177);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.501901, 0, 1, 0.515076,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503659,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.486764,-99) , 
3, 3.11455, 1, 0, 0.498424,-99) , 
5, -0.251717, 0, 0, 0.504715,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.503137,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485793,-99) , 
1, 0.00126772, 1, 0, 0.497325,-99) , 
NN(
0, 
0, 
-1, 0.809483, 0, -1, 0.484073,-99) , 
0, 0.495233, 0, 0, 0.494072,-99) , 
5, 0.428536, 1, 0, 0.500264,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.0158479);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.492105, 1, 1, 0.505595,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484992,-99) , 
0, 0.490472, 0, 0, 0.50456,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.502485,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507988,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.47447,-99) , 
1, -0.00212322, 1, 0, 0.483085,-99) , 
5, -0.523812, 1, 0, 0.488427,-99) , 
2, 0.0667346, 1, 0, 0.50152,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.0170367);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.0717866, 0, 1, 0.506709,-99) , 
NN(
0, 
0, 
-1, 0.782295, 1, -1, 0.493653,-99) , 
0, 0.499043, 1, 0, 0.501357,-99) , 
NN(
0, 
0, 
-1, 0.504757, 1, -1, 0.488402,-99) , 
5, -0.142875, 0, 0, 0.496325,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.0164095);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.535774,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496864,-99) , 
0, 0.505618, 1, 0, 0.519581,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51488,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495567,-99) , 
5, -0.224461, 1, 0, 0.497025,-99) , 
0, 0.503804, 0, 0, 0.49922,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500809,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.474975,-99) , 
3, 0.931844, 0, 0, 0.49305,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.472022,-99) , 
3, 4.37484, 1, 0, 0.489777,-99) , 
5, -0.428583, 0, 0, 0.496301,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.0173779);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.238111, 1, 1, 0.511312,-99) , 
NN(
0, 
0, 
-1, 0.333017, 0, -1, 0.489067,-99) , 
2, -0.0715338, 0, 0, 0.504636,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.531071,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501457,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490021,-99) , 
3, 1.12031, 1, 0, 0.493768,-99) , 
4, 0.998571, 1, 0, 0.495144,-99) , 
3, 4.36372, 0, 0, 0.497025,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.0122553);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.500312, 0, 1, 0.501756,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508388,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.484821,-99) , 
4, 0.999932, 1, 0, 0.489705,-99) , 
0, 0.500947, 1, 0, 0.4985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.460235,-99) , 
4, 0.998571, 0, 0, 0.497262,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.0303646);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515817,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48961,-99) , 
4, 0.999986, 0, 0, 0.507806,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470234,-99) , 
4, 0.999714, 0, 0, 0.506149,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.512856,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48969,-99) , 
3, 4.05969, 1, 0, 0.505761,-99) , 
NN(
0, 
0, 
-1, 0.498815, 1, -1, 0.482273,-99) , 
0, 0.499995, 0, 0, 0.489693,-99) , 
5, 0.619006, 1, 0, 0.501172,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.0154137);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 3.09016, 1, -1, 0.495912,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50333,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485368,-99) , 
5, 0.723307, 0, 0, 0.488786,-99) , 
3, 3.40263, 1, 0, 0.493811,-99) , 
NN(
0, 
0, 
-1, 0.945533, 1, -1, 0.473422,-99) , 
5, 0.904714, 1, 0, 0.492646,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.0202478);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.998571, 1, 1, 0.506131,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.517539,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.483601,-99) , 
5, 0.35151, 1, 0, 0.493146,-99) , 
3, 4.39169, 1, 0, 0.503314,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513985,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.485095,-99) , 
0, 0.499044, 1, 0, 0.500941,-99) , 
NN(
0, 
0, 
-1, 0.499046, 0, -1, 0.488028,-99) , 
3, 2.11921, 0, 0, 0.493928,-99) , 
5, -0.238106, 0, 0, 0.499897,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.0181951);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513602,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.4851,-99) , 
4, 0.999932, 0, 0, 0.508424,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505331,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.492735,-99) , 
2, -0.0218661, 1, 0, 0.496261,-99) , 
3, 4.23649, 0, 0, 0.498808,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464686,-99) , 
4, 0.998572, 0, 0, 0.497696,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.0196252);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.540243,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495766,-99) , 
6, 0.00612147, 0, 0, 0.500943,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467602,-99) , 
1, 0.0115624, 1, 0, 0.499903,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.46781,-99) , 
1, -0.0116875, 0, 0, 0.499012,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.0166715);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.533612,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.520035,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.491421,-99) , 
0, 0.497138, 0, 0, 0.507913,-99) , 
5, 0.845769, 1, 0, 0.513848,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507478,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495797,-99) , 
5, 0.477115, 0, 0, 0.498292,-99) , 
NN(
0, 
0, 
-1, 0.77664, 0, -1, 0.479036,-99) , 
5, 0.723301, 1, 0, 0.496559,-99) , 
5, 0.809476, 0, 0, 0.499183,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.0152097);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.383174, 1, 1, 0.515929,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.513883,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.482746,-99) , 
0, 0.498092, 0, 0, 0.498685,-99) , 
5, -0.619059, 0, 0, 0.50947,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.525199,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497169,-99) , 
0, 0.492105, 1, 0, 0.499265,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.469168,-99) , 
0, 0.48952, 0, 0, 0.4983,-99) , 
1, -0.00283878, 1, 0, 0.500717,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.0234323);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, -0.497692, 0, 1, 0.510496,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.50501,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.478105,-99) , 
0, 0.496188, 1, 0, 0.487527,-99) , 
5, 0.827596, 1, 0, 0.506983,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51254,-99) , 
NN(
0, 
0, 
-1, 0.497817, 1, -1, 0.485827,-99) , 
0, 0.5019, 0, 0, 0.492565,-99) , 
5, -0.809527, 0, 0, 0.504733,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.0102271);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.532598,-99) , 
NN(
NN(
0, 
0, 
-1, 0.490472, 1, 1, 0.503307,-99) , 
NN(
0, 
0, 
-1, 0.927392, 1, -1, 0.488554,-99) , 
5, 0.809479, 1, 0, 0.501399,-99) , 
4, 0.998095, 1, 0, 0.502233,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.0130021);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518529,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.510125,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.487001,-99) , 
0, 0.505709, 1, 0, 0.506188,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.515116,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496523,-99) , 
0, 0.490157, 1, 0, 0.497653,-99) , 
0, 0.500948, 0, 0, 0.499923,-99) , 
2, 0.216386, 0, 0, 0.500816,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.015681);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.527167,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.51166,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.496999,-99) , 
5, -0.714281, 1, 0, 0.499847,-99) , 
0, 0.489928, 1, 0, 0.501137,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.508735,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.463552,-99) , 
5, 0.591779, 1, 0, 0.494145,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.45777,-99) , 
5, -0.71422, 0, 0, 0.484033,-99) , 
0, 0.503804, 1, 0, 0.499228,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.013921);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544277,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.507679,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.499508,-99) , 
5, -0.142875, 0, 0, 0.504523,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.505955,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.467798,-99) , 
5, 0.428513, 1, 0, 0.494554,-99) , 
0, 0.503805, 1, 0, 0.503405,-99) , 
4, 0.998095, 1, 0, 0.504533,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.0188501);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.497456, 0, 1, 0.519666,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511117,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.497573,-99) , 
5, -0.483007, 1, 0, 0.50201,-99) , 
5, 0.809456, 0, 0, 0.504769,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.518226,-99) , 
NN(
0, 
0, 
-1, 0.490563, 1, -1, 0.473719,-99) , 
5, -0.618914, 1, 0, 0.487634,-99) , 
0, 0.492377, 0, 0, 0.502763,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.0156174);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.544417,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.542736,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493707,-99) , 
3, 2.3799, 1, 0, 0.510995,-99) , 
5, 0.809473, 0, 0, 0.516506,-99) , 
NN(
NN(
0, 
0, 
-1, 0.00228058, 0, 1, 0.510648,-99) , 
NN(
0, 
0, 
-1, 0.809479, 1, -1, 0.497107,-99) , 
2, -0.0776284, 1, 0, 0.499853,-99) , 
2, 0.0719532, 0, 0, 0.502806,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.0102212);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.498093, 1, 1, 0.51938,-99) , 
NN(
NN(
0, 
0, 
-1, -0.0733141, 1, 1, 0.502736,-99) , 
NN(
0, 
0, 
-1, -0.0929923, 0, -1, 0.494803,-99) , 
0, 0.497138, 1, 0, 0.498074,-99) , 
5, 0.904712, 0, 0, 0.499375,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.0083063);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0.523739, 0, 1, 0.519618,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.528027,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.500896,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.48902,-99) , 
0, 0.493329, 0, 0, 0.49907,-99) , 
2, 0.274901, 0, 0, 0.50003,-99) , 
2, -0.21475, 1, 0, 0.501061,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.0226253);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.511751,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.440489,-99) , 
1, 0.00592446, 1, 0, 0.508274,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.509828,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.493541,-99) , 
3, 0.837455, 1, 0, 0.496975,-99) , 
5, 0.142818, 0, 0, 0.503082,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.476575,-99) , 
1, -0.0108299, 0, 0, 0.502223,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.0158432);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.506429,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.495134,-99) , 
1, 0.000464428, 0, 0, 0.50031,-99) , 
NN(
0, 
0, 
-1, 2.05072, 0, -1, 0.476949,-99) , 
0, 0.504757, 1, 0, 0.498546,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.464732,-99) , 
3, 8.22972, 1, 0, 0.497331,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.0178084);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.526239,-99) , 
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.5081,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.494992,-99) , 
5, 0.428368, 1, 0, 0.502964,-99) , 
4, 0.999524, 1, 0, 0.504462,-99) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.501401,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470904,-99) , 
0, 0.502851, 1, 0, 0.495141,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.470089,-99) , 
5, 0.71425, 1, 0, 0.489211,-99) , 
2, -0.0715338, 0, 0, 0.501767,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.0108059);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, 1, 0.529693,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.498694,-99) , 
2, -0.152833, 1, 0, 0.500531,-99) , 
NN(
0, 
0, 
-1, 0.0765529, 1, -1, 0.485419,-99) , 
4, 0.999796, 0, 0, 0.499017,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.456353,-99) , 
4, 0.998572, 0, 0, 0.497663,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.0170146);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0.491677, 1, 1, 0.508325,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.488082,-99) , 
0, 0.489339, 0, 0, 0.507696,-99) , 
NN(
0, 
0, 
-1, 0, 1, -1, 0.490098,-99) , 
0, 0.505709, 1, 0, 0.506858,-99)    );
   return;
};

// Clean up
inline void ReadBDT_LHC19c2a_8_12_noNsigma::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDT_LHC19c2a_8_12_noNsigma::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
            retval = GetMvaValue__( inputValues );
      }

      return retval;
   }

// Added by ALICE analyzer
extern "C"
{
  ReadBDT_LHC19c2a_8_12_noNsigma *ReadBDT_maker_LHC19c2a_8_12_noNsigma(std::vector<std::string> theInpVar)
  {
    return new ReadBDT_LHC19c2a_8_12_noNsigma(theInpVar);
  }
}
